; ModuleID = '../../cc/paint/solid_color_analyzer.cc'
source_filename = "../../cc/paint/solid_color_analyzer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.5 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"struct.cc::PlaybackParams" = type <{ %"class.cc::ImageProvider"*, %class.SkM44, %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.33", %"class.absl::optional.34", [6 x i8] }>
%"class.cc::ImageProvider" = type opaque
%class.SkM44 = type { [16 x float] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback.33" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.34" = type { %"class.absl::optional_internal::optional_data.35" }
%"class.absl::optional_internal::optional_data.35" = type { %"class.absl::optional_internal::optional_data_base.36" }
%"class.absl::optional_internal::optional_data_base.36" = type { %"class.absl::optional_internal::optional_data_dtor_base.37" }
%"class.absl::optional_internal::optional_data_dtor_base.37" = type { i8, %union.anon.38 }
%union.anon.38 = type { i8 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp, [384 x i64], %class.sk_sp.5, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.6", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.10" }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %struct.Frame*, %struct.Frame*, %"class.std::__1::__compressed_pair.28" }
%struct.Frame = type <{ %"class.cc::PaintOpBuffer::CompositeIterator", %class.SkM44, i32, [4 x i8] }>
%"class.cc::PaintOpBuffer::CompositeIterator" = type { i8, %"class.absl::optional.18", %"class.absl::optional.23" }
%"class.absl::optional.18" = type { %"class.absl::optional_internal::optional_data.19" }
%"class.absl::optional_internal::optional_data.19" = type { %"class.absl::optional_internal::optional_data_base.20" }
%"class.absl::optional_internal::optional_data_base.20" = type { %"class.absl::optional_internal::optional_data_dtor_base.21" }
%"class.absl::optional_internal::optional_data_dtor_base.21" = type { i8, %union.anon.22 }
%union.anon.22 = type { %"class.cc::PaintOpBuffer::OffsetIterator" }
%"class.cc::PaintOpBuffer::OffsetIterator" = type { %"class.cc::PaintOpBuffer"*, i8*, %"class.std::__1::vector"*, i64, i64 }
%"class.absl::optional.23" = type { %"class.absl::optional_internal::optional_data.24" }
%"class.absl::optional_internal::optional_data.24" = type { %"class.absl::optional_internal::optional_data_base.25" }
%"class.absl::optional_internal::optional_data_base.25" = type { %"class.absl::optional_internal::optional_data_dtor_base.26" }
%"class.absl::optional_internal::optional_data_dtor_base.26" = type { i8, %union.anon.27 }
%union.anon.27 = type { %"class.cc::PaintOpBuffer::Iterator" }
%"class.cc::PaintOpBuffer::Iterator" = type { %"class.cc::PaintOpBuffer"*, i8*, i64 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %struct.Frame* }
%"class.cc::PaintOp" = type { i32 }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.40, %class.sk_sp.41, %class.sk_sp.78, %class.sk_sp.79, %class.sk_sp.80, %class.sk_sp.81, i32, float, float, i32, %union.anon.82, [4 x i8] }>
%class.sk_sp.40 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.41 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.42", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.54, i32, %"class.absl::optional.58", %"class.std::__1::vector.63", %"class.std::__1::vector.70", %class.sk_sp.77, %class.sk_sp.47, i32, [4 x i8] }>
%"class.absl::optional.42" = type { %"class.absl::optional_internal::optional_data.43" }
%"class.absl::optional_internal::optional_data.43" = type { %"class.absl::optional_internal::optional_data_base.44" }
%"class.absl::optional_internal::optional_data_base.44" = type { %"class.absl::optional_internal::optional_data_dtor_base.45" }
%"class.absl::optional_internal::optional_data_dtor_base.45" = type { i8, %union.anon.46 }
%union.anon.46 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.cc::PaintImage" = type { %class.sk_sp.47, %class.sk_sp.54, %"class.gfx::Rect", i32, %class.sk_sp.55, %class.sk_sp.56, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.47, %class.scoped_refptr.57 }
%class.sk_sp.55 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.56 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.scoped_refptr.57 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%class.sk_sp.54 = type { %"class.cc::PaintOpBuffer"* }
%"class.absl::optional.58" = type { %"class.absl::optional_internal::optional_data.59" }
%"class.absl::optional_internal::optional_data.59" = type { %"class.absl::optional_internal::optional_data_base.60" }
%"class.absl::optional_internal::optional_data_base.60" = type { %"class.absl::optional_internal::optional_data_dtor_base.61" }
%"class.absl::optional_internal::optional_data_dtor_base.61" = type { i8, %union.anon.62 }
%union.anon.62 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { i32*, i32*, %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { i32* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { float*, float*, %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { float* }
%class.sk_sp.77 = type { %class.SkPicture* }
%class.SkPicture = type opaque
%class.sk_sp.47 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.48, i32, i32 }
%class.sk_sp.48 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.49" }
%"struct.std::__1::atomic.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl.52" }
%"struct.std::__1::__cxx_atomic_impl.52" = type { %"struct.std::__1::__cxx_atomic_base_impl.53" }
%"struct.std::__1::__cxx_atomic_base_impl.53" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.78 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.79 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.80 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.81 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.82 = type { i32 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZN2cc13PaintOpBuffer14OffsetIteratorppEv = comdat any

$_ZN2cc13PaintOpBuffer8IteratorppEv = comdat any

@__const._ZN2cc18SolidColorAnalyzer21DetermineIfSolidColorEPKNS_13PaintOpBufferERKN3gfx4RectEiPKNSt3__16vectorImNS8_9allocatorImEEEE.canvas = private unnamed_addr constant { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp, [384 x i64], %class.sk_sp.5, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.6", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.10" } } } { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp, [384 x i64], %class.sk_sp.5, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.6", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.10" } } { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp, [384 x i64], %class.sk_sp.5, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.6", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.10" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.5 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.6" { %"class.std::__1::__compressed_pair.7" { %"struct.std::__1::__compressed_pair_elem.8" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.10" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } } } }, align 8
@__const._ZN2cc18SolidColorAnalyzer21DetermineIfSolidColorEPKNS_13PaintOpBufferERKN3gfx4RectEiPKNSt3__16vectorImNS8_9allocatorImEEEE.params = private unnamed_addr constant %"struct.cc::PlaybackParams" <{ %"class.cc::ImageProvider"* inttoptr (i64 -6148914691236517206 to %"class.cc::ImageProvider"*), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.base::RepeatingCallback" { %"class.base::internal::CallbackBaseCopyable" { %"class.base::internal::CallbackBase" { %class.scoped_refptr { %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*) } } } }, %"class.base::RepeatingCallback.33" { %"class.base::internal::CallbackBaseCopyable" { %"class.base::internal::CallbackBase" { %class.scoped_refptr { %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*) } } } }, %"class.absl::optional.34" { %"class.absl::optional_internal::optional_data.35" { %"class.absl::optional_internal::optional_data_base.36" { %"class.absl::optional_internal::optional_data_dtor_base.37" { i8 -86, %union.anon.38 { i8 -86 } } } } }, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, align 8
@.str = private unnamed_addr constant [28 x i8] c"target_offset >= op_offset_\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"../../cc/paint/paint_op_buffer.h\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"target_offset < buffer_->used_\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"op_offset_ <= buffer_->used_\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.4 = private unnamed_addr constant [49 x i8] c"SolidColorAnalyzer::CheckIfRRectClipCoversCanvas\00", align 1
@constinit = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@.str.6 = private unnamed_addr constant [38 x i8] c"SolidColorAnalyzer::CheckIfSolidShape\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2cc18SolidColorAnalyzer21DetermineIfSolidColorEPKNS_13PaintOpBufferERKN3gfx4RectEiPKNSt3__16vectorImNS8_9allocatorImEEEE(%"class.cc::PaintOpBuffer"*, %"class.gfx::Rect"* dereferenceable(16), i32, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.base::TimeTicks", align 8
  %8 = alloca %struct.SkRect, align 8
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca %class.SkNoDrawCanvas, align 8
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRect*
  %14 = alloca %"class.std::__1::vector.16", align 8
  %15 = alloca %"class.cc::PaintOpBuffer::CompositeIterator", align 8
  %16 = alloca %class.SkM44, align 4
  %17 = alloca i32, align 4
  %18 = alloca %"struct.cc::PlaybackParams", align 8
  %19 = alloca %class.SkM44, align 4
  %20 = alloca %"class.base::RepeatingCallback", align 8
  %21 = alloca %"class.base::RepeatingCallback.33", align 8
  %22 = alloca %"class.cc::PaintOpBuffer::CompositeIterator", align 8
  %23 = alloca %class.SkM44, align 4
  %24 = alloca i32, align 4
  %25 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %454, label %28

28:                                               ; preds = %4
  %29 = icmp eq %"class.std::__1::vector"* %3, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %34 = load i64*, i64** %33, align 8
  %35 = icmp eq i64* %32, %34
  br i1 %35, label %454, label %36

36:                                               ; preds = %30, %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #11
  store i8 1, i8* %9, align 1
  %37 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #11
  store i32 0, i32* %10, align 4
  %38 = bitcast %class.SkNoDrawCanvas* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3232, i8* nonnull %38) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 bitcast ({ { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp, [384 x i64], %class.sk_sp.5, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.6", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.10" } } }* @__const._ZN2cc18SolidColorAnalyzer21DetermineIfSolidColorEPKNS_13PaintOpBufferERKN3gfx4RectEiPKNSt3__16vectorImNS8_9allocatorImEEEE.canvas to i8*), i64 3232, i1 false)
  %39 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %42 = load i32, i32* %41, align 4
  call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* nonnull %11, i32 %40, i32 %42) #11
  %43 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %11, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = sub nsw i32 0, %45
  %47 = sitofp i32 %46 to float
  %48 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = sub nsw i32 0, %49
  %51 = sitofp i32 %50 to float
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* nonnull %43, float %47, float %51) #11
  %52 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #11
  %53 = call { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16) %1) #11
  %54 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  %55 = extractvalue { <2 x float>, <2 x float> } %53, 0
  store <2 x float> %55, <2 x float>* %54, align 8
  %56 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  %57 = extractvalue { <2 x float>, <2 x float> } %53, 1
  store <2 x float> %57, <2 x float>* %56, align 8
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* nonnull %43, %struct.SkRect* nonnull dereferenceable(16) %13, i32 1, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #11
  %58 = bitcast %"class.std::__1::vector.16"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #11
  %59 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %14, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %14, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %struct.Frame** %61 to i64*
  %63 = bitcast %"class.std::__1::vector.16"* %14 to i64*
  %64 = bitcast %struct.Frame** %60 to i64*
  %65 = call i8* @_Znwm(i64 320) #12
  %66 = ptrtoint i8* %65 to i64
  %67 = getelementptr inbounds i8, i8* %65, i64 320
  %68 = ptrtoint i8* %67 to i64
  store i64 %66, i64* %63, align 8
  store i64 %66, i64* %64, align 8
  store i64 %68, i64* %62, align 8
  %69 = getelementptr inbounds %"class.cc::PaintOpBuffer::CompositeIterator", %"class.cc::PaintOpBuffer::CompositeIterator"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %69) #11
  call void @_ZN2cc13PaintOpBuffer17CompositeIteratorC1EPKS0_PKNSt3__16vectorImNS4_9allocatorImEEEE(%"class.cc::PaintOpBuffer::CompositeIterator"* nonnull %15, %"class.cc::PaintOpBuffer"* %0, %"class.std::__1::vector"* %3) #11
  %70 = bitcast %class.SkM44* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %70) #11
  call void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* nonnull sret %16, %class.SkCanvas* nonnull %43) #11
  %71 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #11
  %72 = call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* nonnull %43) #11
  store i32 %72, i32* %17, align 4
  call fastcc void @_ZNSt3__16vectorIZN2cc18SolidColorAnalyzer21DetermineIfSolidColorEPKNS1_13PaintOpBufferERKN3gfx4RectEiPKNS0_ImNS_9allocatorImEEEEE5FrameNSA_ISF_EEE12emplace_backIJNS3_17CompositeIteratorE5SkM44iEEEvDpOT_(%"class.std::__1::vector.16"* nonnull %14, %"class.cc::PaintOpBuffer::CompositeIterator"* nonnull dereferenceable(88) %15, %class.SkM44* nonnull dereferenceable(64) %16, i32* nonnull dereferenceable(4) %17)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %70) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %69) #11
  %73 = load %struct.Frame*, %struct.Frame** %59, align 8
  %74 = load %struct.Frame*, %struct.Frame** %60, align 8
  %75 = icmp eq %struct.Frame* %73, %74
  br i1 %75, label %444, label %76

76:                                               ; preds = %36
  %77 = bitcast %"struct.cc::PlaybackParams"* %18 to i8*
  %78 = bitcast %class.SkM44* %19 to i8*
  %79 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.base::RepeatingCallback.33", %"class.base::RepeatingCallback.33"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.base::RepeatingCallback.33", %"class.base::RepeatingCallback.33"* %21, i64 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %20, i64 0, i32 0, i32 0
  %83 = bitcast %struct.SkRect* %8 to i8*
  %84 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 2
  %85 = bitcast %struct.SkRect* %8 to <2 x float>*
  %86 = bitcast float* %84 to <2 x float>*
  %87 = bitcast %"class.base::TimeTicks"* %7 to i8*
  %88 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %7, i64 0, i32 0, i32 0
  %89 = bitcast %"class.base::TimeTicks"* %6 to i8*
  %90 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %91 = bitcast %"class.base::TimeTicks"* %5 to i8*
  %92 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.cc::PaintOpBuffer::CompositeIterator", %"class.cc::PaintOpBuffer::CompositeIterator"* %22, i64 0, i32 0
  %94 = bitcast %class.SkM44* %23 to i8*
  %95 = bitcast i32* %24 to i8*
  br label %96

96:                                               ; preds = %76, %431
  %97 = phi %struct.Frame* [ %74, %76 ], [ %435, %431 ]
  %98 = phi i32 [ 0, %76 ], [ %432, %431 ]
  %99 = phi i8 [ 1, %76 ], [ %433, %431 ]
  %100 = getelementptr inbounds %struct.Frame, %struct.Frame* %97, i64 -1, i32 0, i32 0
  %101 = load i8, i8* %100, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %116, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds %struct.Frame, %struct.Frame* %97, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %108, !prof !3

107:                                              ; preds = %103
  call void @llvm.trap() #11
  unreachable

108:                                              ; preds = %103
  %109 = getelementptr inbounds %struct.Frame, %struct.Frame* %97, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %struct.Frame, %struct.Frame* %97, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %112 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %111, align 8
  %113 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %112, i64 0, i32 3
  %114 = load i64, i64* %113, align 8
  %115 = icmp ult i64 %110, %114
  br i1 %115, label %156, label %129

116:                                              ; preds = %96
  %117 = getelementptr inbounds %struct.Frame, %struct.Frame* %97, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %118 = load i8, i8* %117, align 8, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %121, !prof !3

120:                                              ; preds = %116
  call void @llvm.trap() #11
  unreachable

121:                                              ; preds = %116
  %122 = getelementptr inbounds %struct.Frame, %struct.Frame* %97, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds %struct.Frame, %struct.Frame* %97, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %125 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %124, align 8
  %126 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %125, i64 0, i32 3
  %127 = load i64, i64* %126, align 8
  %128 = icmp ult i64 %123, %127
  br i1 %128, label %158, label %129

129:                                              ; preds = %108, %121
  %130 = getelementptr inbounds %struct.Frame, %struct.Frame* %97, i64 -1, i32 2
  %131 = load i32, i32* %130, align 8
  call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* nonnull %43, i32 %131) #11
  %132 = load %struct.Frame*, %struct.Frame** %60, align 8
  %133 = getelementptr inbounds %struct.Frame, %struct.Frame* %132, i64 -1
  store %struct.Frame* %133, %struct.Frame** %60, align 8
  %134 = load %struct.Frame*, %struct.Frame** %59, align 8
  %135 = icmp eq %struct.Frame* %134, %133
  br i1 %135, label %431, label %136

136:                                              ; preds = %129
  %137 = getelementptr inbounds %struct.Frame, %struct.Frame* %132, i64 -2, i32 0, i32 0
  %138 = load i8, i8* %137, align 8, !range !2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %148, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %struct.Frame, %struct.Frame* %132, i64 -2, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %142 = load i8, i8* %141, align 8, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %145, !prof !3

144:                                              ; preds = %140
  call void @llvm.trap() #11
  unreachable

145:                                              ; preds = %140
  %146 = getelementptr inbounds %struct.Frame, %struct.Frame* %132, i64 -2, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %147 = call dereferenceable(40) %"class.cc::PaintOpBuffer::OffsetIterator"* @_ZN2cc13PaintOpBuffer14OffsetIteratorppEv(%"class.cc::PaintOpBuffer::OffsetIterator"* %146) #11
  br label %431

148:                                              ; preds = %136
  %149 = getelementptr inbounds %struct.Frame, %struct.Frame* %132, i64 -2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %150 = load i8, i8* %149, align 8, !range !2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %153, !prof !3

152:                                              ; preds = %148
  call void @llvm.trap() #11
  unreachable

153:                                              ; preds = %148
  %154 = getelementptr inbounds %struct.Frame, %struct.Frame* %132, i64 -2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %155 = call dereferenceable(24) %"class.cc::PaintOpBuffer::Iterator"* @_ZN2cc13PaintOpBuffer8IteratorppEv(%"class.cc::PaintOpBuffer::Iterator"* %154) #11
  br label %431

156:                                              ; preds = %108
  %157 = getelementptr inbounds %struct.Frame, %struct.Frame* %97, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  br label %160

158:                                              ; preds = %121
  %159 = getelementptr inbounds %struct.Frame, %struct.Frame* %97, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  br label %160

160:                                              ; preds = %156, %158
  %161 = phi i8** [ %157, %156 ], [ %159, %158 ]
  %162 = bitcast i8** %161 to %"class.cc::PaintOp"**
  %163 = load %"class.cc::PaintOp"*, %"class.cc::PaintOp"** %162, align 8
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %77) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 bitcast (%"struct.cc::PlaybackParams"* @__const._ZN2cc18SolidColorAnalyzer21DetermineIfSolidColorEPKNS_13PaintOpBufferERKN3gfx4RectEiPKNSt3__16vectorImNS8_9allocatorImEEEE.params to i8*), i64 96, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %78) #11
  %164 = getelementptr inbounds %struct.Frame, %struct.Frame* %97, i64 -1, i32 1
  %165 = bitcast %class.SkM44* %164 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %78, i8* align 8 %165, i64 64, i1 false)
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %79, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %80, align 8
  call void @_ZN2cc14PlaybackParamsC1EPNS_13ImageProviderERK5SkM44N4base17RepeatingCallbackIFvP8SkCanvasjEEENS7_IFvvEEE(%"struct.cc::PlaybackParams"* nonnull %18, %"class.cc::ImageProvider"* null, %class.SkM44* nonnull dereferenceable(64) %19, %"class.base::RepeatingCallback"* nonnull %20, %"class.base::RepeatingCallback.33"* nonnull %21) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %81) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %82) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %78) #11
  %166 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = trunc i32 %167 to i8
  switch i8 %168, label %407 [
    i8 14, label %169
    i8 7, label %442
    i8 8, label %442
    i8 9, label %442
    i8 10, label %442
    i8 11, label %442
    i8 12, label %442
    i8 13, label %442
    i8 16, label %174
    i8 17, label %442
    i8 18, label %442
    i8 23, label %442
    i8 24, label %442
    i8 1, label %442
    i8 3, label %258
    i8 15, label %275
    i8 6, label %359
    i8 2, label %401
    i8 28, label %406
    i8 22, label %406
    i8 21, label %406
    i8 20, label %406
    i8 4, label %406
    i8 25, label %406
    i8 26, label %406
  ]

169:                                              ; preds = %160
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %93) #11
  %170 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 2
  %171 = bitcast %"class.cc::PaintOp"* %170 to %"class.cc::PaintOpBuffer"**
  %172 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %171, align 8
  call void @_ZN2cc13PaintOpBuffer17CompositeIteratorC1EPKS0_PKNSt3__16vectorImNS4_9allocatorImEEEE(%"class.cc::PaintOpBuffer::CompositeIterator"* nonnull %22, %"class.cc::PaintOpBuffer"* %172, %"class.std::__1::vector"* null) #11
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %94) #11
  call void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* nonnull sret %23, %class.SkCanvas* nonnull %43) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #11
  %173 = call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* nonnull %43) #11
  store i32 %173, i32* %24, align 4
  call fastcc void @_ZNSt3__16vectorIZN2cc18SolidColorAnalyzer21DetermineIfSolidColorEPKNS1_13PaintOpBufferERKN3gfx4RectEiPKNS0_ImNS_9allocatorImEEEEE5FrameNSA_ISF_EEE12emplace_backIJNS3_17CompositeIteratorE5SkM44iEEEvDpOT_(%"class.std::__1::vector.16"* nonnull %14, %"class.cc::PaintOpBuffer::CompositeIterator"* nonnull dereferenceable(88) %22, %class.SkM44* nonnull dereferenceable(64) %23, i32* nonnull dereferenceable(4) %24)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %94) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %93) #11
  br label %428

174:                                              ; preds = %160
  %175 = add nsw i32 %98, 1
  %176 = icmp slt i32 %98, %2
  br i1 %176, label %177, label %442

177:                                              ; preds = %174
  %178 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 20
  %179 = bitcast %"class.cc::PaintOp"* %178 to %class.SkRRect*
  %180 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 2
  %181 = bitcast %"class.cc::PaintOp"* %180 to %"class.cc::PaintFlags"*
  %182 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), align 16
  %183 = and i8 %182, 25
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %189, label %185, !prof !4

185:                                              ; preds = %177
  %186 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #11
  %187 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %187, i64* %92, align 8
  %188 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %186, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #11
  br label %189

189:                                              ; preds = %185, %177
  %190 = phi i64 [ -6148914691236517206, %177 ], [ %188, %185 ]
  %191 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %177 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), %185 ]
  %192 = phi i8* [ null, %177 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), %185 ]
  %193 = call zeroext i1 @_ZNK2cc10PaintFlags13nothingToDrawEv(%"class.cc::PaintFlags"* %181) #11
  br i1 %193, label %251, label %194

194:                                              ; preds = %189
  %195 = call fastcc zeroext i1 @_ZN2cc12_GLOBAL__N_110IsFullQuadI7SkRRectEEbRK8SkCanvasRKT_(%class.SkCanvas* nonnull dereferenceable(3232) %43, %class.SkRRect* dereferenceable(52) %179) #11
  %196 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 17, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 14, i32 0
  %199 = load i32, i32* %198, align 8
  br i1 %195, label %200, label %206

200:                                              ; preds = %194
  %201 = lshr i32 %199, 24
  switch i32 %197, label %210 [
    i32 0, label %249
    i32 1, label %204
    i32 5, label %204
    i32 6, label %204
    i32 7, label %204
    i32 10, label %204
    i32 8, label %202
  ]

202:                                              ; preds = %200
  %203 = icmp eq i32 %201, 255
  br i1 %203, label %249, label %210

204:                                              ; preds = %200, %200, %200, %200, %200
  %205 = icmp eq i32 %201, 0
  br i1 %205, label %213, label %206

206:                                              ; preds = %204, %194
  %207 = icmp ugt i32 %199, 16777215
  %208 = icmp ne i32 %197, 1
  %209 = or i1 %208, %207
  br i1 %209, label %210, label %211

210:                                              ; preds = %206, %202, %200
  br label %211

211:                                              ; preds = %210, %206
  %212 = phi i8 [ 0, %210 ], [ %99, %206 ]
  br i1 %195, label %213, label %249

213:                                              ; preds = %204, %211
  %214 = phi i8 [ %212, %211 ], [ 1, %204 ]
  %215 = or i32 %197, 2
  %216 = icmp eq i32 %215, 3
  br i1 %216, label %217, label %249

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 4
  %219 = bitcast %"class.cc::PaintOp"* %218 to %"class.cc::PaintShader"**
  %220 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %219, align 8
  %221 = icmp eq %"class.cc::PaintShader"* %220, null
  br i1 %221, label %222, label %249

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 10
  %224 = bitcast %"class.cc::PaintOp"* %223 to %class.SkDrawLooper**
  %225 = load %class.SkDrawLooper*, %class.SkDrawLooper** %224, align 8
  %226 = icmp eq %class.SkDrawLooper* %225, null
  br i1 %226, label %227, label %249

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 6
  %229 = bitcast %"class.cc::PaintOp"* %228 to %class.SkMaskFilter**
  %230 = load %class.SkMaskFilter*, %class.SkMaskFilter** %229, align 8
  %231 = icmp eq %class.SkMaskFilter* %230, null
  br i1 %231, label %232, label %249

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 8
  %234 = bitcast %"class.cc::PaintOp"* %233 to %class.SkColorFilter**
  %235 = load %class.SkColorFilter*, %class.SkColorFilter** %234, align 8
  %236 = icmp eq %class.SkColorFilter* %235, null
  br i1 %236, label %237, label %249

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 12
  %239 = bitcast %"class.cc::PaintOp"* %238 to %"class.cc::PaintFilter"**
  %240 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %239, align 8
  %241 = icmp eq %"class.cc::PaintFilter"* %240, null
  br i1 %241, label %242, label %249

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 18
  %244 = bitcast %"class.cc::PaintOp"* %243 to i16*
  %245 = load i16, i16* %244, align 8
  %246 = and i16 %245, 192
  %247 = icmp eq i16 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %242
  call fastcc void @_ZN2cc12_GLOBAL__N_119CalculateSolidColorEj11SkBlendModePjPb(i32 %199, i32 %197, i32* nonnull %10, i8* nonnull %9) #11
  br label %251

249:                                              ; preds = %202, %200, %242, %237, %232, %227, %222, %217, %213, %211
  %250 = phi i8 [ %214, %242 ], [ %214, %237 ], [ %214, %232 ], [ %214, %227 ], [ %214, %222 ], [ %214, %217 ], [ %214, %213 ], [ %212, %211 ], [ 1, %200 ], [ 1, %202 ]
  store i8 0, i8* %9, align 1
  br label %251

251:                                              ; preds = %249, %248, %189
  %252 = phi i8 [ %99, %189 ], [ %214, %248 ], [ %250, %249 ]
  %253 = icmp eq i8* %192, null
  br i1 %253, label %407, label %254

254:                                              ; preds = %251
  %255 = load i8, i8* %192, align 1
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %407, label %257

257:                                              ; preds = %254
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %192, i8* %191, i64 %190) #11
  br label %407

258:                                              ; preds = %160
  %259 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 1
  %260 = bitcast %"class.cc::PaintOp"* %259 to %class.SkRRect*
  %261 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), align 16
  %262 = and i8 %261, 25
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %264, label %266, !prof !4

264:                                              ; preds = %258
  %265 = call fastcc zeroext i1 @_ZN2cc12_GLOBAL__N_110IsFullQuadI7SkRRectEEbRK8SkCanvasRKT_(%class.SkCanvas* nonnull dereferenceable(3232) %43, %class.SkRRect* dereferenceable(52) %260) #11
  br i1 %265, label %407, label %442

266:                                              ; preds = %258
  %267 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #11
  %268 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %268, i64* %90, align 8
  %269 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %267, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #11
  %270 = call fastcc zeroext i1 @_ZN2cc12_GLOBAL__N_110IsFullQuadI7SkRRectEEbRK8SkCanvasRKT_(%class.SkCanvas* nonnull dereferenceable(3232) %43, %class.SkRRect* dereferenceable(52) %260) #11
  %271 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), align 16
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %274, label %273

273:                                              ; preds = %266
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0), i64 %269) #11
  br i1 %270, label %407, label %442

274:                                              ; preds = %266
  br i1 %270, label %407, label %442

275:                                              ; preds = %160
  %276 = add nsw i32 %98, 1
  %277 = icmp slt i32 %98, %2
  br i1 %277, label %278, label %442

278:                                              ; preds = %275
  %279 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 20
  %280 = bitcast %"class.cc::PaintOp"* %279 to %struct.SkRect*
  %281 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 2
  %282 = bitcast %"class.cc::PaintOp"* %281 to %"class.cc::PaintFlags"*
  %283 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), align 16
  %284 = and i8 %283, 25
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %290, label %286, !prof !4

286:                                              ; preds = %278
  %287 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #11
  %288 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %288, i64* %88, align 8
  %289 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %287, %"class.base::TimeTicks"* nonnull dereferenceable(8) %7, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  br label %290

290:                                              ; preds = %286, %278
  %291 = phi i64 [ -6148914691236517206, %278 ], [ %289, %286 ]
  %292 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %278 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), %286 ]
  %293 = phi i8* [ null, %278 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), %286 ]
  %294 = call zeroext i1 @_ZNK2cc10PaintFlags13nothingToDrawEv(%"class.cc::PaintFlags"* %282) #11
  br i1 %294, label %352, label %295

295:                                              ; preds = %290
  %296 = call fastcc zeroext i1 @_ZN2cc12_GLOBAL__N_110IsFullQuadI6SkRectEEbRK8SkCanvasRKT_(%class.SkCanvas* nonnull dereferenceable(3232) %43, %struct.SkRect* dereferenceable(16) %280) #11
  %297 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 17, i32 0
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 14, i32 0
  %300 = load i32, i32* %299, align 8
  br i1 %296, label %301, label %307

301:                                              ; preds = %295
  %302 = lshr i32 %300, 24
  switch i32 %298, label %311 [
    i32 0, label %350
    i32 1, label %305
    i32 5, label %305
    i32 6, label %305
    i32 7, label %305
    i32 10, label %305
    i32 8, label %303
  ]

303:                                              ; preds = %301
  %304 = icmp eq i32 %302, 255
  br i1 %304, label %350, label %311

305:                                              ; preds = %301, %301, %301, %301, %301
  %306 = icmp eq i32 %302, 0
  br i1 %306, label %314, label %307

307:                                              ; preds = %305, %295
  %308 = icmp ugt i32 %300, 16777215
  %309 = icmp ne i32 %298, 1
  %310 = or i1 %309, %308
  br i1 %310, label %311, label %312

311:                                              ; preds = %307, %303, %301
  br label %312

312:                                              ; preds = %311, %307
  %313 = phi i8 [ 0, %311 ], [ %99, %307 ]
  br i1 %296, label %314, label %350

314:                                              ; preds = %305, %312
  %315 = phi i8 [ %313, %312 ], [ 1, %305 ]
  %316 = or i32 %298, 2
  %317 = icmp eq i32 %316, 3
  br i1 %317, label %318, label %350

318:                                              ; preds = %314
  %319 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 4
  %320 = bitcast %"class.cc::PaintOp"* %319 to %"class.cc::PaintShader"**
  %321 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %320, align 8
  %322 = icmp eq %"class.cc::PaintShader"* %321, null
  br i1 %322, label %323, label %350

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 10
  %325 = bitcast %"class.cc::PaintOp"* %324 to %class.SkDrawLooper**
  %326 = load %class.SkDrawLooper*, %class.SkDrawLooper** %325, align 8
  %327 = icmp eq %class.SkDrawLooper* %326, null
  br i1 %327, label %328, label %350

328:                                              ; preds = %323
  %329 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 6
  %330 = bitcast %"class.cc::PaintOp"* %329 to %class.SkMaskFilter**
  %331 = load %class.SkMaskFilter*, %class.SkMaskFilter** %330, align 8
  %332 = icmp eq %class.SkMaskFilter* %331, null
  br i1 %332, label %333, label %350

333:                                              ; preds = %328
  %334 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 8
  %335 = bitcast %"class.cc::PaintOp"* %334 to %class.SkColorFilter**
  %336 = load %class.SkColorFilter*, %class.SkColorFilter** %335, align 8
  %337 = icmp eq %class.SkColorFilter* %336, null
  br i1 %337, label %338, label %350

338:                                              ; preds = %333
  %339 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 12
  %340 = bitcast %"class.cc::PaintOp"* %339 to %"class.cc::PaintFilter"**
  %341 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %340, align 8
  %342 = icmp eq %"class.cc::PaintFilter"* %341, null
  br i1 %342, label %343, label %350

343:                                              ; preds = %338
  %344 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 18
  %345 = bitcast %"class.cc::PaintOp"* %344 to i16*
  %346 = load i16, i16* %345, align 8
  %347 = and i16 %346, 192
  %348 = icmp eq i16 %347, 0
  br i1 %348, label %349, label %350

349:                                              ; preds = %343
  call fastcc void @_ZN2cc12_GLOBAL__N_119CalculateSolidColorEj11SkBlendModePjPb(i32 %300, i32 %298, i32* nonnull %10, i8* nonnull %9) #11
  br label %352

350:                                              ; preds = %303, %301, %343, %338, %333, %328, %323, %318, %314, %312
  %351 = phi i8 [ %315, %343 ], [ %315, %338 ], [ %315, %333 ], [ %315, %328 ], [ %315, %323 ], [ %315, %318 ], [ %315, %314 ], [ %313, %312 ], [ 1, %301 ], [ 1, %303 ]
  store i8 0, i8* %9, align 1
  br label %352

352:                                              ; preds = %350, %349, %290
  %353 = phi i8 [ %99, %290 ], [ %315, %349 ], [ %351, %350 ]
  %354 = icmp eq i8* %293, null
  br i1 %354, label %407, label %355

355:                                              ; preds = %352
  %356 = load i8, i8* %293, align 1
  %357 = icmp eq i8 %356, 0
  br i1 %357, label %407, label %358

358:                                              ; preds = %355
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %293, i8* %292, i64 %291) #11
  br label %407

359:                                              ; preds = %160
  %360 = add nsw i32 %98, 1
  %361 = icmp slt i32 %98, %2
  br i1 %361, label %362, label %442

362:                                              ; preds = %359
  %363 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 1, i32 0
  %364 = load i32, i32* %363, align 4
  %365 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 2, i32 0
  %366 = load i32, i32* %365, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #11
  %367 = call { <2 x float>, <2 x float> } @_ZNK8SkCanvas18getLocalClipBoundsEv(%class.SkCanvas* nonnull %43) #11
  %368 = extractvalue { <2 x float>, <2 x float> } %367, 0
  %369 = extractvalue { <2 x float>, <2 x float> } %367, 1
  store <2 x float> %368, <2 x float>* %85, align 8
  store <2 x float> %369, <2 x float>* %86, align 8
  %370 = extractelement <2 x float> %368, i32 0
  %371 = extractelement <2 x float> %369, i32 0
  %372 = fcmp olt float %370, %371
  br i1 %372, label %373, label %377

373:                                              ; preds = %362
  %374 = extractelement <2 x float> %369, i32 1
  %375 = extractelement <2 x float> %368, i32 1
  %376 = fcmp olt float %375, %374
  br i1 %376, label %378, label %377

377:                                              ; preds = %373, %362
  store i8 0, i8* %9, align 1
  br label %399

378:                                              ; preds = %373
  %379 = call fastcc zeroext i1 @_ZN2cc12_GLOBAL__N_110IsFullQuadI6SkRectEEbRK8SkCanvasRKT_(%class.SkCanvas* nonnull dereferenceable(3232) %43, %struct.SkRect* nonnull dereferenceable(16) %8) #11
  %380 = lshr i32 %364, 24
  br i1 %379, label %381, label %387

381:                                              ; preds = %378
  switch i32 %366, label %386 [
    i32 0, label %397
    i32 1, label %384
    i32 5, label %384
    i32 6, label %384
    i32 7, label %384
    i32 10, label %384
    i32 8, label %382
  ]

382:                                              ; preds = %381
  %383 = icmp eq i32 %380, 255
  br i1 %383, label %397, label %386

384:                                              ; preds = %381, %381, %381, %381, %381
  %385 = icmp eq i32 %380, 0
  br i1 %385, label %392, label %386

386:                                              ; preds = %384, %382, %381
  br label %392

387:                                              ; preds = %378
  %388 = icmp ne i32 %380, 0
  %389 = icmp ne i32 %366, 1
  %390 = or i1 %388, %389
  %391 = select i1 %390, i8 0, i8 %99
  br label %397

392:                                              ; preds = %386, %384
  %393 = phi i8 [ 0, %386 ], [ 1, %384 ]
  %394 = or i32 %366, 2
  %395 = icmp eq i32 %394, 3
  br i1 %395, label %396, label %397

396:                                              ; preds = %392
  call fastcc void @_ZN2cc12_GLOBAL__N_119CalculateSolidColorEj11SkBlendModePjPb(i32 %364, i32 %366, i32* nonnull %10, i8* nonnull %9) #11
  br label %399

397:                                              ; preds = %387, %381, %382, %392
  %398 = phi i8 [ %393, %392 ], [ 1, %382 ], [ 1, %381 ], [ %391, %387 ]
  store i8 0, i8* %9, align 1
  br label %399

399:                                              ; preds = %377, %396, %397
  %400 = phi i8 [ %393, %396 ], [ %398, %397 ], [ 0, %377 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #11
  br label %407

401:                                              ; preds = %160
  %402 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %163, i64 5, i32 0
  %403 = load i32, i32* %402, align 4
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %442, label %405

405:                                              ; preds = %401
  call void @_ZNK2cc7PaintOp6RasterEP8SkCanvasRKNS_14PlaybackParamsE(%"class.cc::PaintOp"* %163, %class.SkCanvas* nonnull %43, %"struct.cc::PlaybackParams"* nonnull dereferenceable(96) %18) #11
  br label %407

406:                                              ; preds = %160, %160, %160, %160, %160, %160, %160
  call void @_ZNK2cc7PaintOp6RasterEP8SkCanvasRKNS_14PlaybackParamsE(%"class.cc::PaintOp"* %163, %class.SkCanvas* nonnull %43, %"struct.cc::PlaybackParams"* nonnull dereferenceable(96) %18) #11
  br label %407

407:                                              ; preds = %273, %264, %274, %405, %358, %355, %352, %257, %254, %251, %160, %406, %399
  %408 = phi i8 [ %99, %160 ], [ %99, %406 ], [ %400, %399 ], [ %252, %251 ], [ %252, %254 ], [ %252, %257 ], [ %353, %352 ], [ %353, %355 ], [ %353, %358 ], [ %99, %405 ], [ %99, %274 ], [ %99, %264 ], [ %99, %273 ]
  %409 = phi i32 [ %98, %160 ], [ %98, %406 ], [ %360, %399 ], [ %175, %251 ], [ %175, %254 ], [ %175, %257 ], [ %276, %352 ], [ %276, %355 ], [ %276, %358 ], [ %98, %405 ], [ %98, %274 ], [ %98, %264 ], [ %98, %273 ]
  %410 = load i8, i8* %100, align 8, !range !2
  %411 = icmp eq i8 %410, 0
  br i1 %411, label %420, label %412

412:                                              ; preds = %407
  %413 = getelementptr inbounds %struct.Frame, %struct.Frame* %97, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %414 = load i8, i8* %413, align 8, !range !2
  %415 = icmp eq i8 %414, 0
  br i1 %415, label %416, label %417, !prof !3

416:                                              ; preds = %412
  call void @llvm.trap() #11
  unreachable

417:                                              ; preds = %412
  %418 = getelementptr inbounds %struct.Frame, %struct.Frame* %97, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %419 = call dereferenceable(40) %"class.cc::PaintOpBuffer::OffsetIterator"* @_ZN2cc13PaintOpBuffer14OffsetIteratorppEv(%"class.cc::PaintOpBuffer::OffsetIterator"* %418) #11
  br label %428

420:                                              ; preds = %407
  %421 = getelementptr inbounds %struct.Frame, %struct.Frame* %97, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %422 = load i8, i8* %421, align 8, !range !2
  %423 = icmp eq i8 %422, 0
  br i1 %423, label %424, label %425, !prof !3

424:                                              ; preds = %420
  call void @llvm.trap() #11
  unreachable

425:                                              ; preds = %420
  %426 = getelementptr inbounds %struct.Frame, %struct.Frame* %97, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %427 = call dereferenceable(24) %"class.cc::PaintOpBuffer::Iterator"* @_ZN2cc13PaintOpBuffer8IteratorppEv(%"class.cc::PaintOpBuffer::Iterator"* %426) #11
  br label %428

428:                                              ; preds = %169, %417, %425
  %429 = phi i8 [ %99, %169 ], [ %408, %417 ], [ %408, %425 ]
  %430 = phi i32 [ %98, %169 ], [ %409, %417 ], [ %409, %425 ]
  call void @_ZN2cc14PlaybackParamsD1Ev(%"struct.cc::PlaybackParams"* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %77) #11
  br label %431

431:                                              ; preds = %153, %145, %129, %428
  %432 = phi i32 [ %430, %428 ], [ %98, %129 ], [ %98, %145 ], [ %98, %153 ]
  %433 = phi i8 [ %429, %428 ], [ %99, %129 ], [ %99, %145 ], [ %99, %153 ]
  %434 = load %struct.Frame*, %struct.Frame** %59, align 8
  %435 = load %struct.Frame*, %struct.Frame** %60, align 8
  %436 = icmp eq %struct.Frame* %434, %435
  br i1 %436, label %437, label %96

437:                                              ; preds = %431
  %438 = icmp eq i8 %433, 0
  br i1 %438, label %439, label %444

439:                                              ; preds = %437
  %440 = load i8, i8* %9, align 1, !range !2
  %441 = load i32, i32* %10, align 4
  br label %444

442:                                              ; preds = %160, %160, %160, %160, %160, %160, %160, %160, %160, %160, %160, %160, %174, %274, %264, %273, %275, %359, %401
  call void @_ZN2cc14PlaybackParamsD1Ev(%"struct.cc::PlaybackParams"* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %77) #11
  %443 = load %struct.Frame*, %struct.Frame** %59, align 8
  br label %444

444:                                              ; preds = %36, %439, %442, %437
  %445 = phi %struct.Frame* [ %434, %437 ], [ %434, %439 ], [ %443, %442 ], [ %73, %36 ]
  %446 = phi i32 [ 0, %437 ], [ %441, %439 ], [ undef, %442 ], [ 0, %36 ]
  %447 = phi i8 [ 1, %437 ], [ %440, %439 ], [ 0, %442 ], [ 1, %36 ]
  %448 = icmp eq %struct.Frame* %445, null
  br i1 %448, label %453, label %449

449:                                              ; preds = %444
  %450 = ptrtoint %struct.Frame* %445 to i64
  %451 = bitcast %struct.Frame** %60 to i64*
  store i64 %450, i64* %451, align 8
  %452 = getelementptr inbounds %struct.Frame, %struct.Frame* %445, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %452) #12
  br label %453

453:                                              ; preds = %444, %449
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #11
  call void @_ZN8SkCanvasD2Ev(%class.SkCanvas* nonnull %43) #11
  call void @llvm.lifetime.end.p0i8(i64 3232, i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #11
  br label %454

454:                                              ; preds = %4, %30, %453
  %455 = phi i32 [ %446, %453 ], [ 0, %30 ], [ 0, %4 ]
  %456 = phi i8 [ %447, %453 ], [ 1, %30 ], [ 1, %4 ]
  %457 = zext i32 %455 to i64
  %458 = shl nuw i64 %457, 32
  %459 = zext i8 %456 to i64
  %460 = or i64 %458, %459
  ret i64 %460
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas*, i32, i32) unnamed_addr #2

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #2

declare void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16vectorIZN2cc18SolidColorAnalyzer21DetermineIfSolidColorEPKNS1_13PaintOpBufferERKN3gfx4RectEiPKNS0_ImNS_9allocatorImEEEEE5FrameNSA_ISF_EEE12emplace_backIJNS3_17CompositeIteratorE5SkM44iEEEvDpOT_(%"class.std::__1::vector.16"*, %"class.cc::PaintOpBuffer::CompositeIterator"* dereferenceable(88), %class.SkM44* nocapture readonly dereferenceable(64), i32* nocapture readonly dereferenceable(4)) unnamed_addr #3 align 2 {
  %5 = alloca %"class.cc::PaintOpBuffer::CompositeIterator", align 8
  %6 = alloca %"class.cc::PaintOpBuffer::CompositeIterator", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %0, i64 0, i32 0, i32 1
  %8 = load %struct.Frame*, %struct.Frame** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %struct.Frame*, %struct.Frame** %9, align 8
  %11 = icmp ult %struct.Frame* %8, %10
  %12 = ptrtoint %struct.Frame* %10 to i64
  br i1 %11, label %13, label %24

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.cc::PaintOpBuffer::CompositeIterator", %"class.cc::PaintOpBuffer::CompositeIterator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %14) #11
  call void @_ZN2cc13PaintOpBuffer17CompositeIteratorC1EOS1_(%"class.cc::PaintOpBuffer::CompositeIterator"* nonnull %5, %"class.cc::PaintOpBuffer::CompositeIterator"* dereferenceable(88) %1) #11
  %15 = load i32, i32* %3, align 4
  %16 = getelementptr inbounds %struct.Frame, %struct.Frame* %8, i64 0, i32 0
  call void @_ZN2cc13PaintOpBuffer17CompositeIteratorC1ERKS1_(%"class.cc::PaintOpBuffer::CompositeIterator"* %16, %"class.cc::PaintOpBuffer::CompositeIterator"* nonnull dereferenceable(88) %5) #11
  %17 = getelementptr inbounds %struct.Frame, %struct.Frame* %8, i64 0, i32 1
  %18 = bitcast %class.SkM44* %17 to i8*
  %19 = bitcast %class.SkM44* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 4 %19, i64 64, i1 false) #11
  %20 = getelementptr inbounds %struct.Frame, %struct.Frame* %8, i64 0, i32 2
  store i32 %15, i32* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %14) #11
  %21 = getelementptr inbounds %struct.Frame, %struct.Frame* %8, i64 1
  %22 = ptrtoint %struct.Frame* %21 to i64
  %23 = bitcast %struct.Frame** %7 to i64*
  store i64 %22, i64* %23, align 8
  br label %90

24:                                               ; preds = %4
  %25 = ptrtoint %struct.Frame* %8 to i64
  %26 = bitcast %struct.Frame** %7 to i64*
  %27 = bitcast %"class.std::__1::vector.16"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = sdiv exact i64 %29, 160
  %31 = add nsw i64 %30, 1
  %32 = icmp ugt i64 %31, 115292150460684697
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = bitcast %"class.std::__1::vector.16"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #13
  unreachable

35:                                               ; preds = %24
  %36 = bitcast %struct.Frame** %9 to i64*
  %37 = sub i64 %12, %28
  %38 = sdiv exact i64 %37, 160
  %39 = icmp ult i64 %38, 57646075230342348
  br i1 %39, label %40, label %45

40:                                               ; preds = %35
  %41 = shl nsw i64 %38, 1
  %42 = icmp ult i64 %41, %31
  %43 = select i1 %42, i64 %31, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %40, %35
  %46 = phi i64 [ %43, %40 ], [ 115292150460684697, %35 ]
  %47 = mul i64 %46, 160
  %48 = tail call i8* @_Znwm(i64 %47) #12
  %49 = bitcast i8* %48 to %struct.Frame*
  br label %50

50:                                               ; preds = %45, %40
  %51 = phi i64 [ %46, %45 ], [ 0, %40 ]
  %52 = phi %struct.Frame* [ %49, %45 ], [ null, %40 ]
  %53 = getelementptr inbounds %struct.Frame, %struct.Frame* %52, i64 %30
  %54 = getelementptr inbounds %struct.Frame, %struct.Frame* %52, i64 %51
  %55 = ptrtoint %struct.Frame* %54 to i64
  %56 = getelementptr inbounds %"class.cc::PaintOpBuffer::CompositeIterator", %"class.cc::PaintOpBuffer::CompositeIterator"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %56) #11
  call void @_ZN2cc13PaintOpBuffer17CompositeIteratorC1EOS1_(%"class.cc::PaintOpBuffer::CompositeIterator"* nonnull %6, %"class.cc::PaintOpBuffer::CompositeIterator"* dereferenceable(88) %1) #11
  %57 = load i32, i32* %3, align 4
  %58 = getelementptr inbounds %struct.Frame, %struct.Frame* %53, i64 0, i32 0
  call void @_ZN2cc13PaintOpBuffer17CompositeIteratorC1ERKS1_(%"class.cc::PaintOpBuffer::CompositeIterator"* %58, %"class.cc::PaintOpBuffer::CompositeIterator"* nonnull dereferenceable(88) %6) #11
  %59 = getelementptr inbounds %struct.Frame, %struct.Frame* %52, i64 %30, i32 1
  %60 = bitcast %class.SkM44* %59 to i8*
  %61 = bitcast %class.SkM44* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 4 %61, i64 64, i1 false) #11
  %62 = getelementptr inbounds %struct.Frame, %struct.Frame* %52, i64 %30, i32 2
  store i32 %57, i32* %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %56) #11
  %63 = getelementptr inbounds %struct.Frame, %struct.Frame* %53, i64 1
  %64 = ptrtoint %struct.Frame* %63 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %0, i64 0, i32 0, i32 0
  %66 = load %struct.Frame*, %struct.Frame** %65, align 8
  %67 = load %struct.Frame*, %struct.Frame** %7, align 8
  %68 = icmp eq %struct.Frame* %67, %66
  br i1 %68, label %83, label %69

69:                                               ; preds = %50, %69
  %70 = phi %struct.Frame* [ %79, %69 ], [ %53, %50 ]
  %71 = phi %struct.Frame* [ %72, %69 ], [ %67, %50 ]
  %72 = getelementptr inbounds %struct.Frame, %struct.Frame* %71, i64 -1
  %73 = getelementptr inbounds %struct.Frame, %struct.Frame* %70, i64 -1, i32 0
  %74 = getelementptr inbounds %struct.Frame, %struct.Frame* %72, i64 0, i32 0
  call void @_ZN2cc13PaintOpBuffer17CompositeIteratorC1EOS1_(%"class.cc::PaintOpBuffer::CompositeIterator"* %73, %"class.cc::PaintOpBuffer::CompositeIterator"* dereferenceable(88) %74) #11
  %75 = getelementptr inbounds %struct.Frame, %struct.Frame* %70, i64 -1, i32 1
  %76 = getelementptr inbounds %struct.Frame, %struct.Frame* %71, i64 -1, i32 1
  %77 = bitcast %class.SkM44* %75 to i8*
  %78 = bitcast %class.SkM44* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 68, i1 false) #11
  %79 = getelementptr inbounds %struct.Frame, %struct.Frame* %70, i64 -1
  %80 = icmp eq %struct.Frame* %72, %66
  br i1 %80, label %81, label %69

81:                                               ; preds = %69
  %82 = load %struct.Frame*, %struct.Frame** %65, align 8
  br label %83

83:                                               ; preds = %81, %50
  %84 = phi %struct.Frame* [ %79, %81 ], [ %53, %50 ]
  %85 = phi %struct.Frame* [ %82, %81 ], [ %66, %50 ]
  %86 = ptrtoint %struct.Frame* %84 to i64
  store i64 %86, i64* %27, align 8
  store i64 %64, i64* %26, align 8
  store i64 %55, i64* %36, align 8
  %87 = icmp eq %struct.Frame* %85, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %struct.Frame, %struct.Frame* %85, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %89) #12
  br label %90

90:                                               ; preds = %88, %83, %13
  ret void
}

declare void @_ZN2cc13PaintOpBuffer17CompositeIteratorC1EPKS0_PKNSt3__16vectorImNS4_9allocatorImEEEE(%"class.cc::PaintOpBuffer::CompositeIterator"*, %"class.cc::PaintOpBuffer"*, %"class.std::__1::vector"*) unnamed_addr #2

declare void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* sret, %class.SkCanvas*) local_unnamed_addr #2

declare i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas*) local_unnamed_addr #2

declare void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas*, i32) local_unnamed_addr #2

declare void @_ZN2cc14PlaybackParamsC1EPNS_13ImageProviderERK5SkM44N4base17RepeatingCallbackIFvP8SkCanvasjEEENS7_IFvvEEE(%"struct.cc::PlaybackParams"*, %"class.cc::ImageProvider"*, %class.SkM44* dereferenceable(64), %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.33"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare void @_ZNK2cc7PaintOp6RasterEP8SkCanvasRKNS_14PlaybackParamsE(%"class.cc::PaintOp"*, %class.SkCanvas*, %"struct.cc::PlaybackParams"* dereferenceable(96)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc14PlaybackParamsD1Ev(%"struct.cc::PlaybackParams"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8SkCanvasD2Ev(%class.SkCanvas*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.cc::PaintOpBuffer::OffsetIterator"* @_ZN2cc13PaintOpBuffer14OffsetIteratorppEv(%"class.cc::PaintOpBuffer::OffsetIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %0, i64 0, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %0, i64 0, i32 2
  %13 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 1
  %15 = bitcast i64** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp ult i64 %11, %20
  br i1 %21, label %32, label %22

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %0, i64 0, i32 0
  %24 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %23, align 8, !noalias !5
  %25 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %24, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8, !noalias !5
  %27 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %24, i64 0, i32 3
  %28 = load i64, i64* %27, align 8, !noalias !5
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %0, i64 0, i32 1
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %0, i64 0, i32 3
  store i64 %28, i64* %31, align 8
  store i64 0, i64* %9, align 8
  br label %81

32:                                               ; preds = %1
  %33 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 %11
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %4, align 8
  %38 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %39, align 8
  %40 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %0, i64 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i64 %37, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %39, align 8
  br label %54

45:                                               ; preds = %32
  %46 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %37) #11
  %47 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %41) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i8* %46, i8* %47) #11
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %39, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 1242, %"class.logging::CheckOpResult"* nonnull %5) #11
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %33) #11
  %55 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  %56 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %56, align 8
  %57 = load i64, i64* %4, align 8
  %58 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %0, i64 0, i32 0
  %59 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %58, align 8
  %60 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %59, i64 0, i32 3
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  %63 = icmp ult i64 %57, %61
  br i1 %63, label %64, label %65

64:                                               ; preds = %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  store i8* null, i8** %56, align 8
  br label %74

65:                                               ; preds = %54
  %66 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %57) #11
  %67 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %61) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i8* %66, i8* %67) #11
  %68 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  store i8* %69, i8** %56, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %65
  %72 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 1245, %"class.logging::CheckOpResult"* nonnull %7) #11
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  br label %74

74:                                               ; preds = %64, %65, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  %75 = load i64, i64* %4, align 8
  %76 = load i64, i64* %40, align 8
  %77 = sub i64 %75, %76
  %78 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %0, i64 0, i32 1
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 %77
  store i8* %80, i8** %78, align 8
  store i64 %75, i64* %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  br label %81

81:                                               ; preds = %74, %22
  ret %"class.cc::PaintOpBuffer::OffsetIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.cc::PaintOpBuffer::Iterator"* @_ZN2cc13PaintOpBuffer8IteratorppEv(%"class.cc::PaintOpBuffer::Iterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %0, i64 0, i32 1
  %6 = bitcast i8** %5 to %"class.cc::PaintOp"**
  %7 = load %"class.cc::PaintOp"*, %"class.cc::PaintOp"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = lshr i32 %9, 8
  %11 = bitcast %"class.cc::PaintOp"* %7 to i8*
  %12 = zext i32 %10 to i64
  %13 = getelementptr inbounds i8, i8* %11, i64 %12
  store i8* %13, i8** %5, align 8
  %14 = load i32, i32* %8, align 4
  %15 = lshr i32 %14, 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %0, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  store i64 %19, i64* %17, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %21, align 8
  %22 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %0, i64 0, i32 0
  %23 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %22, align 8
  %24 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %23, i64 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ugt i64 %19, %25
  br i1 %27, label %29, label %28

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %21, align 8
  br label %38

29:                                               ; preds = %1
  %30 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %19) #11
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %25) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i8* %30, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %21, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 1194, %"class.logging::CheckOpResult"* nonnull %3) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  ret %"class.cc::PaintOpBuffer::Iterator"* %0
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare void @_ZN4base5debug5AliasEPKv(i8*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2cc12_GLOBAL__N_110IsFullQuadI7SkRRectEEbRK8SkCanvasRKT_(%class.SkCanvas* dereferenceable(3232), %class.SkRRect* dereferenceable(52)) unnamed_addr #0 {
  %3 = alloca %class.SkM44, align 4
  %4 = alloca %class.SkM44, align 4
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = bitcast %class.SkCanvas* %0 to i1 (%class.SkCanvas*)***
  %8 = load i1 (%class.SkCanvas*)**, i1 (%class.SkCanvas*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %8, i64 5
  %10 = load i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %9, align 8
  %11 = tail call zeroext i1 %10(%class.SkCanvas* %0) #11
  br i1 %11, label %12, label %87

12:                                               ; preds = %2
  %13 = tail call { i64, i64 } @_ZNK8SkCanvas19getDeviceClipBoundsEv(%class.SkCanvas* %0) #11
  %14 = extractvalue { i64, i64 } %13, 0
  %15 = extractvalue { i64, i64 } %13, 1
  %16 = trunc i64 %14 to i32
  %17 = lshr i64 %14, 32
  %18 = trunc i64 %17 to i32
  %19 = shl i64 %15, 32
  %20 = ashr exact i64 %19, 32
  %21 = shl i64 %14, 32
  %22 = ashr exact i64 %21, 32
  %23 = sub nsw i64 %20, %22
  %24 = ashr i64 %15, 32
  %25 = ashr i64 %14, 32
  %26 = sub nsw i64 %24, %25
  %27 = icmp slt i64 %23, 1
  %28 = icmp slt i64 %26, 1
  %29 = or i1 %28, %27
  br i1 %29, label %87, label %30

30:                                               ; preds = %12
  %31 = or i64 %23, %26
  %32 = add nsw i64 %31, 2147483648
  %33 = icmp ult i64 %32, 4294967296
  br i1 %33, label %34, label %87

34:                                               ; preds = %30
  %35 = bitcast %class.SkCanvas* %0 to i64 (%class.SkCanvas*)***
  %36 = load i64 (%class.SkCanvas*)**, i64 (%class.SkCanvas*)*** %35, align 8
  %37 = getelementptr inbounds i64 (%class.SkCanvas*)*, i64 (%class.SkCanvas*)** %36, i64 2
  %38 = load i64 (%class.SkCanvas*)*, i64 (%class.SkCanvas*)** %37, align 8
  %39 = tail call i64 %38(%class.SkCanvas* %0) #11
  %40 = lshr i64 %39, 32
  %41 = trunc i64 %40 to i32
  %42 = trunc i64 %39 to i32
  %43 = shl i64 %39, 32
  %44 = icmp slt i64 %43, 4294967296
  %45 = icmp slt i64 %39, 4294967296
  %46 = or i1 %45, %44
  br i1 %46, label %87, label %47

47:                                               ; preds = %34
  %48 = or i64 %43, %39
  %49 = ashr i64 %48, 32
  %50 = add nsw i64 %49, 2147483648
  %51 = icmp ugt i64 %50, 4294967295
  br i1 %51, label %87, label %52

52:                                               ; preds = %47
  %53 = lshr i64 %15, 32
  %54 = trunc i64 %53 to i32
  %55 = trunc i64 %15 to i32
  %56 = icmp sgt i32 %16, 0
  %57 = icmp sgt i32 %18, 0
  %58 = or i1 %57, %56
  %59 = icmp slt i32 %55, %42
  %60 = or i1 %58, %59
  %61 = icmp sge i32 %54, %41
  %62 = xor i1 %60, true
  %63 = and i1 %61, %62
  br i1 %63, label %64, label %87

64:                                               ; preds = %52
  %65 = bitcast %class.SkM44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %65) #11
  call void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* nonnull sret %3, %class.SkCanvas* %0) #11
  %66 = call zeroext i1 @_ZN2cc8MathUtil29SkM44Preserves2DAxisAlignmentERK5SkM44(%class.SkM44* nonnull dereferenceable(64) %3) #11
  br i1 %66, label %67, label %85

67:                                               ; preds = %64
  %68 = bitcast %class.SkM44* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %68) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %68, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #11
  %69 = call zeroext i1 @_ZNK5SkM446invertEPS_(%class.SkM44* nonnull %3, %class.SkM44* nonnull %4) #11
  br i1 %69, label %70, label %83

70:                                               ; preds = %67
  %71 = sitofp i32 %16 to float
  %72 = sitofp i32 %18 to float
  %73 = call { <2 x float>, <2 x float> } @_ZNK5SkM443mapEffff(%class.SkM44* nonnull %4, float %71, float %72, float 0.000000e+00, float 1.000000e+00) #11
  %74 = extractvalue { <2 x float>, <2 x float> } %73, 0
  %75 = sitofp i32 %55 to float
  %76 = sitofp i32 %54 to float
  %77 = call { <2 x float>, <2 x float> } @_ZNK5SkM443mapEffff(%class.SkM44* nonnull %4, float %75, float %76, float 0.000000e+00, float 1.000000e+00) #11
  %78 = extractvalue { <2 x float>, <2 x float> } %77, 0
  %79 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #11
  %80 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %74, <2 x float>* %80, align 8
  %81 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %78, <2 x float>* %81, align 8
  %82 = call zeroext i1 @_ZNK7SkRRect8containsERK6SkRect(%class.SkRRect* %1, %struct.SkRect* nonnull dereferenceable(16) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #11
  br label %83

83:                                               ; preds = %67, %70
  %84 = phi i1 [ %82, %70 ], [ false, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %68) #11
  br label %85

85:                                               ; preds = %64, %83
  %86 = phi i1 [ %84, %83 ], [ false, %64 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %65) #11
  br label %87

87:                                               ; preds = %34, %47, %12, %85, %30, %52, %2
  %88 = phi i1 [ false, %2 ], [ %86, %85 ], [ false, %30 ], [ false, %52 ], [ false, %12 ], [ false, %47 ], [ false, %34 ]
  ret i1 %88
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2cc8MathUtil29SkM44Preserves2DAxisAlignmentERK5SkM44(%class.SkM44* dereferenceable(64)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5SkM446invertEPS_(%class.SkM44*, %class.SkM44*) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK5SkM443mapEffff(%class.SkM44*, float, float, float, float) local_unnamed_addr #2

declare zeroext i1 @_ZNK7SkRRect8containsERK6SkRect(%class.SkRRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i64 } @_ZNK8SkCanvas19getDeviceClipBoundsEv(%class.SkCanvas*) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2cc12_GLOBAL__N_110IsFullQuadI6SkRectEEbRK8SkCanvasRKT_(%class.SkCanvas* dereferenceable(3232), %struct.SkRect* nocapture readonly dereferenceable(16)) unnamed_addr #0 {
  %3 = alloca %class.SkM44, align 4
  %4 = alloca %class.SkM44, align 4
  %5 = bitcast %class.SkCanvas* %0 to i1 (%class.SkCanvas*)***
  %6 = load i1 (%class.SkCanvas*)**, i1 (%class.SkCanvas*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %6, i64 5
  %8 = load i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkCanvas* %0) #11
  br i1 %9, label %10, label %108

10:                                               ; preds = %2
  %11 = tail call { i64, i64 } @_ZNK8SkCanvas19getDeviceClipBoundsEv(%class.SkCanvas* %0) #11
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = extractvalue { i64, i64 } %11, 1
  %14 = trunc i64 %12 to i32
  %15 = lshr i64 %12, 32
  %16 = trunc i64 %15 to i32
  %17 = shl i64 %13, 32
  %18 = ashr exact i64 %17, 32
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sub nsw i64 %18, %20
  %22 = ashr i64 %13, 32
  %23 = ashr i64 %12, 32
  %24 = sub nsw i64 %22, %23
  %25 = icmp slt i64 %21, 1
  %26 = icmp slt i64 %24, 1
  %27 = or i1 %26, %25
  br i1 %27, label %108, label %28

28:                                               ; preds = %10
  %29 = or i64 %21, %24
  %30 = add nsw i64 %29, 2147483648
  %31 = icmp ult i64 %30, 4294967296
  br i1 %31, label %32, label %108

32:                                               ; preds = %28
  %33 = bitcast %class.SkCanvas* %0 to i64 (%class.SkCanvas*)***
  %34 = load i64 (%class.SkCanvas*)**, i64 (%class.SkCanvas*)*** %33, align 8
  %35 = getelementptr inbounds i64 (%class.SkCanvas*)*, i64 (%class.SkCanvas*)** %34, i64 2
  %36 = load i64 (%class.SkCanvas*)*, i64 (%class.SkCanvas*)** %35, align 8
  %37 = tail call i64 %36(%class.SkCanvas* %0) #11
  %38 = lshr i64 %37, 32
  %39 = trunc i64 %38 to i32
  %40 = trunc i64 %37 to i32
  %41 = shl i64 %37, 32
  %42 = icmp slt i64 %41, 4294967296
  %43 = icmp slt i64 %37, 4294967296
  %44 = or i1 %43, %42
  br i1 %44, label %108, label %45

45:                                               ; preds = %32
  %46 = or i64 %41, %37
  %47 = ashr i64 %46, 32
  %48 = add nsw i64 %47, 2147483648
  %49 = icmp ugt i64 %48, 4294967295
  br i1 %49, label %108, label %50

50:                                               ; preds = %45
  %51 = lshr i64 %13, 32
  %52 = trunc i64 %51 to i32
  %53 = trunc i64 %13 to i32
  %54 = icmp sgt i32 %14, 0
  %55 = icmp sgt i32 %16, 0
  %56 = or i1 %55, %54
  %57 = icmp slt i32 %53, %40
  %58 = or i1 %56, %57
  %59 = icmp sge i32 %52, %39
  %60 = xor i1 %58, true
  %61 = and i1 %59, %60
  br i1 %61, label %62, label %108

62:                                               ; preds = %50
  %63 = bitcast %class.SkM44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %63) #11
  call void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* nonnull sret %3, %class.SkCanvas* %0) #11
  %64 = call zeroext i1 @_ZN2cc8MathUtil29SkM44Preserves2DAxisAlignmentERK5SkM44(%class.SkM44* nonnull dereferenceable(64) %3) #11
  br i1 %64, label %65, label %106

65:                                               ; preds = %62
  %66 = bitcast %class.SkM44* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %66) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %66, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #11
  %67 = call zeroext i1 @_ZNK5SkM446invertEPS_(%class.SkM44* nonnull %3, %class.SkM44* nonnull %4) #11
  br i1 %67, label %68, label %104

68:                                               ; preds = %65
  %69 = sitofp i32 %14 to float
  %70 = sitofp i32 %16 to float
  %71 = call { <2 x float>, <2 x float> } @_ZNK5SkM443mapEffff(%class.SkM44* nonnull %4, float %69, float %70, float 0.000000e+00, float 1.000000e+00) #11
  %72 = extractvalue { <2 x float>, <2 x float> } %71, 0
  %73 = sitofp i32 %53 to float
  %74 = sitofp i32 %52 to float
  %75 = call { <2 x float>, <2 x float> } @_ZNK5SkM443mapEffff(%class.SkM44* nonnull %4, float %73, float %74, float 0.000000e+00, float 1.000000e+00) #11
  %76 = extractvalue { <2 x float>, <2 x float> } %75, 0
  %77 = extractelement <2 x float> %72, i32 0
  %78 = extractelement <2 x float> %72, i32 1
  %79 = extractelement <2 x float> %76, i32 0
  %80 = extractelement <2 x float> %76, i32 1
  %81 = fcmp uge float %77, %79
  %82 = fcmp uge float %78, %80
  %83 = or i1 %81, %82
  br i1 %83, label %104, label %84

84:                                               ; preds = %68
  %85 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %86 = load float, float* %85, align 4
  %87 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %88 = load float, float* %87, align 4
  %89 = fcmp olt float %86, %88
  br i1 %89, label %90, label %104

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %92 = load float, float* %91, align 4
  %93 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %94 = load float, float* %93, align 4
  %95 = fcmp uge float %92, %94
  %96 = fcmp ugt float %86, %77
  %97 = or i1 %96, %95
  br i1 %97, label %104, label %98

98:                                               ; preds = %90
  %99 = fcmp ole float %92, %78
  %100 = fcmp oge float %88, %79
  %101 = fcmp oge float %94, %80
  %102 = and i1 %100, %99
  %103 = and i1 %101, %102
  br label %104

104:                                              ; preds = %68, %98, %90, %84, %65
  %105 = phi i1 [ false, %65 ], [ %103, %98 ], [ false, %90 ], [ false, %84 ], [ false, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %66) #11
  br label %106

106:                                              ; preds = %62, %104
  %107 = phi i1 [ %105, %104 ], [ false, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %63) #11
  br label %108

108:                                              ; preds = %32, %45, %10, %106, %28, %50, %2
  %109 = phi i1 [ false, %2 ], [ %107, %106 ], [ false, %28 ], [ false, %50 ], [ false, %10 ], [ false, %45 ], [ false, %32 ]
  ret i1 %109
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc void @_ZN2cc12_GLOBAL__N_119CalculateSolidColorEj11SkBlendModePjPb(i32, i32, i32* nocapture, i8* nocapture) unnamed_addr #6 {
  %5 = icmp eq i32 %1, 1
  br i1 %5, label %74, label %6

6:                                                ; preds = %4
  %7 = icmp ugt i32 %0, -16777217
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  %9 = load i8, i8* %3, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %76, label %11

11:                                               ; preds = %8, %6
  %12 = load i32, i32* %2, align 4
  %13 = lshr i32 %0, 24
  %14 = trunc i32 %13 to i8
  switch i8 %14, label %16 [
    i8 0, label %74
    i8 -1, label %15
  ]

15:                                               ; preds = %11
  br label %74

16:                                               ; preds = %11
  %17 = uitofp i32 %13 to float
  %18 = fdiv float %17, 2.550000e+02
  %19 = fsub float 2.550000e+02, %17
  %20 = lshr i32 %12, 24
  %21 = uitofp i32 %20 to float
  %22 = insertelement <2 x float> undef, float %19, i32 0
  %23 = insertelement <2 x float> %22, float %21, i32 1
  %24 = fdiv <2 x float> %23, <float 2.550000e+02, float 2.550000e+02>
  %25 = extractelement <2 x float> %24, i32 0
  %26 = extractelement <2 x float> %24, i32 1
  %27 = fmul float %25, %26
  %28 = fadd float %18, %27
  %29 = fcmp oeq float %28, 0.000000e+00
  br i1 %29, label %74, label %30

30:                                               ; preds = %16
  %31 = fdiv float 1.000000e+00, %28
  %32 = fmul float %18, %31
  %33 = fmul float %27, %31
  %34 = lshr i32 %0, 16
  %35 = and i32 %34, 255
  %36 = uitofp i32 %35 to float
  %37 = fmul float %32, %36
  %38 = lshr i32 %12, 16
  %39 = and i32 %38, 255
  %40 = uitofp i32 %39 to float
  %41 = fmul float %33, %40
  %42 = fadd float %37, %41
  %43 = lshr i32 %0, 8
  %44 = and i32 %43, 255
  %45 = uitofp i32 %44 to float
  %46 = fmul float %32, %45
  %47 = lshr i32 %12, 8
  %48 = and i32 %47, 255
  %49 = uitofp i32 %48 to float
  %50 = fmul float %33, %49
  %51 = fadd float %46, %50
  %52 = and i32 %0, 255
  %53 = uitofp i32 %52 to float
  %54 = fmul float %32, %53
  %55 = and i32 %12, 255
  %56 = uitofp i32 %55 to float
  %57 = fmul float %33, %56
  %58 = fadd float %54, %57
  %59 = fmul float %28, 2.550000e+02
  %60 = tail call float @llvm.floor.f32(float %59) #11
  %61 = fptoui float %60 to i32
  %62 = tail call float @llvm.floor.f32(float %42) #11
  %63 = fptoui float %62 to i32
  %64 = tail call float @llvm.floor.f32(float %51) #11
  %65 = fptoui float %64 to i32
  %66 = tail call float @llvm.floor.f32(float %58) #11
  %67 = fptoui float %66 to i32
  %68 = shl i32 %61, 24
  %69 = shl i32 %63, 16
  %70 = shl i32 %65, 8
  %71 = or i32 %68, %67
  %72 = or i32 %71, %69
  %73 = or i32 %72, %70
  br label %74

74:                                               ; preds = %30, %16, %15, %11, %4
  %75 = phi i32 [ %0, %4 ], [ %0, %15 ], [ %12, %11 ], [ %73, %30 ], [ 0, %16 ]
  store i32 %75, i32* %2, align 4
  store i8 1, i8* %3, align 1
  br label %76

76:                                               ; preds = %74, %8
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK8SkCanvas18getLocalClipBoundsEv(%class.SkCanvas*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN2cc13PaintOpBuffer17CompositeIteratorC1EOS1_(%"class.cc::PaintOpBuffer::CompositeIterator"*, %"class.cc::PaintOpBuffer::CompositeIterator"* dereferenceable(88)) unnamed_addr #2

declare void @_ZN2cc13PaintOpBuffer17CompositeIteratorC1ERKS1_(%"class.cc::PaintOpBuffer::CompositeIterator"*, %"class.cc::PaintOpBuffer::CompositeIterator"* dereferenceable(88)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare zeroext i1 @_ZNK2cc10PaintFlags13nothingToDrawEv(%"class.cc::PaintFlags"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN2cc13PaintOpBuffer14OffsetIterator3endEv: argument 0"}
!7 = distinct !{!7, !"_ZN2cc13PaintOpBuffer14OffsetIterator3endEv"}
