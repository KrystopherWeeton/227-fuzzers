; ModuleID = '../../third_party/fontconfig/src/src/fcstr.c'
source_filename = "../../third_party/fontconfig/src/src/fcstr.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._FcStrSet = type { %struct._FcRef, i32, i32, i8**, i32 }
%struct._FcRef = type { i32 }
%struct._FcStrList = type { %struct._FcStrSet*, i32 }
%struct._FcCaseWalker = type { i8*, i8*, [7 x i8] }
%struct._FcCaseFold = type { i32, i16, i16 }
%struct._FcStrBuf = type { i8*, i32, i32, i32, i32, [128 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c".\00", align 1
@fcCaseFoldChars = internal unnamed_addr constant [471 x i8] c"ssi\CC\87\CA\BCnj\CC\8C\CE\B9\CC\88\CC\81\CF\85\CC\88\CC\81\D5\A5\D6\82h\CC\B1t\CC\88w\CC\8Ay\CC\8Aa\CA\BEss\CF\85\CC\93\CF\85\CC\93\CC\80\CF\85\CC\93\CC\81\CF\85\CC\93\CD\82\E1\BC\80\CE\B9\E1\BC\81\CE\B9\E1\BC\82\CE\B9\E1\BC\83\CE\B9\E1\BC\84\CE\B9\E1\BC\85\CE\B9\E1\BC\86\CE\B9\E1\BC\87\CE\B9\E1\BC\80\CE\B9\E1\BC\81\CE\B9\E1\BC\82\CE\B9\E1\BC\83\CE\B9\E1\BC\84\CE\B9\E1\BC\85\CE\B9\E1\BC\86\CE\B9\E1\BC\87\CE\B9\E1\BC\A0\CE\B9\E1\BC\A1\CE\B9\E1\BC\A2\CE\B9\E1\BC\A3\CE\B9\E1\BC\A4\CE\B9\E1\BC\A5\CE\B9\E1\BC\A6\CE\B9\E1\BC\A7\CE\B9\E1\BC\A0\CE\B9\E1\BC\A1\CE\B9\E1\BC\A2\CE\B9\E1\BC\A3\CE\B9\E1\BC\A4\CE\B9\E1\BC\A5\CE\B9\E1\BC\A6\CE\B9\E1\BC\A7\CE\B9\E1\BD\A0\CE\B9\E1\BD\A1\CE\B9\E1\BD\A2\CE\B9\E1\BD\A3\CE\B9\E1\BD\A4\CE\B9\E1\BD\A5\CE\B9\E1\BD\A6\CE\B9\E1\BD\A7\CE\B9\E1\BD\A0\CE\B9\E1\BD\A1\CE\B9\E1\BD\A2\CE\B9\E1\BD\A3\CE\B9\E1\BD\A4\CE\B9\E1\BD\A5\CE\B9\E1\BD\A6\CE\B9\E1\BD\A7\CE\B9\E1\BD\B0\CE\B9\CE\B1\CE\B9\CE\AC\CE\B9\CE\B1\CD\82\CE\B1\CD\82\CE\B9\CE\B1\CE\B9\E1\BD\B4\CE\B9\CE\B7\CE\B9\CE\AE\CE\B9\CE\B7\CD\82\CE\B7\CD\82\CE\B9\CE\B7\CE\B9\CE\B9\CC\88\CC\80\CE\B9\CC\88\CC\81\CE\B9\CD\82\CE\B9\CC\88\CD\82\CF\85\CC\88\CC\80\CF\85\CC\88\CC\81\CF\81\CC\93\CF\85\CD\82\CF\85\CC\88\CD\82\E1\BD\BC\CE\B9\CF\89\CE\B9\CF\8E\CE\B9\CF\89\CD\82\CF\89\CD\82\CE\B9\CF\89\CE\B9fffiflffifflstst\D5\B4\D5\B6\D5\B4\D5\A5\D5\B4\D5\AB\D5\BE\D5\B6\D5\B4\D5\AD", align 16
@fcCaseFold = internal unnamed_addr constant [295 x { i32, i8, i8, i16 }] [{ i32, i8, i8, i16 } { i32 65, i8 104, i8 0, i16 32 }, { i32, i8, i8, i16 } { i32 181, i8 4, i8 0, i16 775 }, { i32, i8, i8, i16 } { i32 192, i8 92, i8 0, i16 32 }, { i32, i8, i8, i16 } { i32 216, i8 28, i8 0, i16 32 }, { i32, i8, i8, i16 } { i32 223, i8 10, i8 0, i16 0 }, { i32, i8, i8, i16 } { i32 256, i8 -67, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 304, i8 14, i8 0, i16 2 }, { i32, i8, i8, i16 } { i32 306, i8 21, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 313, i8 61, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 329, i8 14, i8 0, i16 5 }, { i32, i8, i8, i16 } { i32 330, i8 -75, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 376, i8 4, i8 0, i16 -121 }, { i32, i8, i8, i16 } { i32 377, i8 21, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 383, i8 4, i8 0, i16 -268 }, { i32, i8, i8, i16 } { i32 385, i8 4, i8 0, i16 210 }, { i32, i8, i8, i16 } { i32 386, i8 13, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 390, i8 4, i8 0, i16 206 }, { i32, i8, i8, i16 } { i32 391, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 393, i8 8, i8 0, i16 205 }, { i32, i8, i8, i16 } { i32 395, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 398, i8 4, i8 0, i16 79 }, { i32, i8, i8, i16 } { i32 399, i8 4, i8 0, i16 202 }, { i32, i8, i8, i16 } { i32 400, i8 4, i8 0, i16 203 }, { i32, i8, i8, i16 } { i32 401, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 403, i8 4, i8 0, i16 205 }, { i32, i8, i8, i16 } { i32 404, i8 4, i8 0, i16 207 }, { i32, i8, i8, i16 } { i32 406, i8 4, i8 0, i16 211 }, { i32, i8, i8, i16 } { i32 407, i8 4, i8 0, i16 209 }, { i32, i8, i8, i16 } { i32 408, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 412, i8 4, i8 0, i16 211 }, { i32, i8, i8, i16 } { i32 413, i8 4, i8 0, i16 213 }, { i32, i8, i8, i16 } { i32 415, i8 4, i8 0, i16 214 }, { i32, i8, i8, i16 } { i32 416, i8 21, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 422, i8 4, i8 0, i16 218 }, { i32, i8, i8, i16 } { i32 423, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 425, i8 4, i8 0, i16 218 }, { i32, i8, i8, i16 } { i32 428, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 430, i8 4, i8 0, i16 218 }, { i32, i8, i8, i16 } { i32 431, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 433, i8 8, i8 0, i16 217 }, { i32, i8, i8, i16 } { i32 435, i8 13, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 439, i8 4, i8 0, i16 219 }, { i32, i8, i8, i16 } { i32 440, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 444, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 452, i8 4, i8 0, i16 2 }, { i32, i8, i8, i16 } { i32 453, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 455, i8 4, i8 0, i16 2 }, { i32, i8, i8, i16 } { i32 456, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 458, i8 4, i8 0, i16 2 }, { i32, i8, i8, i16 } { i32 459, i8 69, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 478, i8 69, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 496, i8 14, i8 0, i16 8 }, { i32, i8, i8, i16 } { i32 497, i8 4, i8 0, i16 2 }, { i32, i8, i8, i16 } { i32 498, i8 13, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 502, i8 4, i8 0, i16 -97 }, { i32, i8, i8, i16 } { i32 503, i8 4, i8 0, i16 -56 }, { i32, i8, i8, i16 } { i32 504, i8 -99, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 544, i8 4, i8 0, i16 -130 }, { i32, i8, i8, i16 } { i32 546, i8 69, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 570, i8 4, i8 0, i16 10795 }, { i32, i8, i8, i16 } { i32 571, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 573, i8 4, i8 0, i16 -163 }, { i32, i8, i8, i16 } { i32 574, i8 4, i8 0, i16 10792 }, { i32, i8, i8, i16 } { i32 577, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 579, i8 4, i8 0, i16 -195 }, { i32, i8, i8, i16 } { i32 580, i8 4, i8 0, i16 69 }, { i32, i8, i8, i16 } { i32 581, i8 4, i8 0, i16 71 }, { i32, i8, i8, i16 } { i32 582, i8 37, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 837, i8 4, i8 0, i16 116 }, { i32, i8, i8, i16 } { i32 880, i8 13, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 886, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 895, i8 4, i8 0, i16 116 }, { i32, i8, i8, i16 } { i32 902, i8 4, i8 0, i16 38 }, { i32, i8, i8, i16 } { i32 904, i8 12, i8 0, i16 37 }, { i32, i8, i8, i16 } { i32 908, i8 4, i8 0, i16 64 }, { i32, i8, i8, i16 } { i32 910, i8 8, i8 0, i16 63 }, { i32, i8, i8, i16 } { i32 912, i8 26, i8 0, i16 11 }, { i32, i8, i8, i16 } { i32 913, i8 68, i8 0, i16 32 }, { i32, i8, i8, i16 } { i32 931, i8 36, i8 0, i16 32 }, { i32, i8, i8, i16 } { i32 944, i8 26, i8 0, i16 17 }, { i32, i8, i8, i16 } { i32 962, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 975, i8 4, i8 0, i16 8 }, { i32, i8, i8, i16 } { i32 976, i8 4, i8 0, i16 -30 }, { i32, i8, i8, i16 } { i32 977, i8 4, i8 0, i16 -25 }, { i32, i8, i8, i16 } { i32 981, i8 4, i8 0, i16 -15 }, { i32, i8, i8, i16 } { i32 982, i8 4, i8 0, i16 -22 }, { i32, i8, i8, i16 } { i32 984, i8 93, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 1008, i8 4, i8 0, i16 -54 }, { i32, i8, i8, i16 } { i32 1009, i8 4, i8 0, i16 -48 }, { i32, i8, i8, i16 } { i32 1012, i8 4, i8 0, i16 -60 }, { i32, i8, i8, i16 } { i32 1013, i8 4, i8 0, i16 -64 }, { i32, i8, i8, i16 } { i32 1015, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 1017, i8 4, i8 0, i16 -7 }, { i32, i8, i8, i16 } { i32 1018, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 1021, i8 12, i8 0, i16 -130 }, { i32, i8, i8, i16 } { i32 1024, i8 64, i8 0, i16 80 }, { i32, i8, i8, i16 } { i32 1040, i8 -128, i8 0, i16 32 }, { i32, i8, i8, i16 } { i32 1120, i8 -123, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 1162, i8 -43, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 1216, i8 4, i8 0, i16 15 }, { i32, i8, i8, i16 } { i32 1217, i8 53, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 1232, i8 125, i8 1, i16 1 }, { i32, i8, i8, i16 } { i32 1329, i8 -104, i8 0, i16 48 }, { i32, i8, i8, i16 } { i32 1415, i8 18, i8 0, i16 23 }, { i32, i8, i8, i16 } { i32 4256, i8 -104, i8 0, i16 7264 }, { i32, i8, i8, i16 } { i32 4295, i8 4, i8 0, i16 7264 }, { i32, i8, i8, i16 } { i32 4301, i8 4, i8 0, i16 7264 }, { i32, i8, i8, i16 } { i32 5112, i8 24, i8 0, i16 -8 }, { i32, i8, i8, i16 } { i32 7296, i8 4, i8 0, i16 -6222 }, { i32, i8, i8, i16 } { i32 7297, i8 4, i8 0, i16 -6221 }, { i32, i8, i8, i16 } { i32 7298, i8 4, i8 0, i16 -6212 }, { i32, i8, i8, i16 } { i32 7299, i8 8, i8 0, i16 -6210 }, { i32, i8, i8, i16 } { i32 7301, i8 4, i8 0, i16 -6211 }, { i32, i8, i8, i16 } { i32 7302, i8 4, i8 0, i16 -6204 }, { i32, i8, i8, i16 } { i32 7303, i8 4, i8 0, i16 -6180 }, { i32, i8, i8, i16 } { i32 7304, i8 4, i8 0, i16 -30269 }, { i32, i8, i8, i16 } { i32 7312, i8 -84, i8 0, i16 -3008 }, { i32, i8, i8, i16 } { i32 7357, i8 12, i8 0, i16 -3008 }, { i32, i8, i8, i16 } { i32 7680, i8 85, i8 2, i16 1 }, { i32, i8, i8, i16 } { i32 7830, i8 14, i8 0, i16 27 }, { i32, i8, i8, i16 } { i32 7831, i8 14, i8 0, i16 30 }, { i32, i8, i8, i16 } { i32 7832, i8 14, i8 0, i16 33 }, { i32, i8, i8, i16 } { i32 7833, i8 14, i8 0, i16 36 }, { i32, i8, i8, i16 } { i32 7834, i8 14, i8 0, i16 39 }, { i32, i8, i8, i16 } { i32 7835, i8 4, i8 0, i16 -58 }, { i32, i8, i8, i16 } { i32 7838, i8 10, i8 0, i16 42 }, { i32, i8, i8, i16 } { i32 7840, i8 125, i8 1, i16 1 }, { i32, i8, i8, i16 } { i32 7944, i8 32, i8 0, i16 -8 }, { i32, i8, i8, i16 } { i32 7960, i8 24, i8 0, i16 -8 }, { i32, i8, i8, i16 } { i32 7976, i8 32, i8 0, i16 -8 }, { i32, i8, i8, i16 } { i32 7992, i8 32, i8 0, i16 -8 }, { i32, i8, i8, i16 } { i32 8008, i8 24, i8 0, i16 -8 }, { i32, i8, i8, i16 } { i32 8016, i8 18, i8 0, i16 44 }, { i32, i8, i8, i16 } { i32 8018, i8 26, i8 0, i16 48 }, { i32, i8, i8, i16 } { i32 8020, i8 26, i8 0, i16 54 }, { i32, i8, i8, i16 } { i32 8022, i8 26, i8 0, i16 60 }, { i32, i8, i8, i16 } { i32 8025, i8 4, i8 0, i16 -8 }, { i32, i8, i8, i16 } { i32 8027, i8 4, i8 0, i16 -8 }, { i32, i8, i8, i16 } { i32 8029, i8 4, i8 0, i16 -8 }, { i32, i8, i8, i16 } { i32 8031, i8 4, i8 0, i16 -8 }, { i32, i8, i8, i16 } { i32 8040, i8 32, i8 0, i16 -8 }, { i32, i8, i8, i16 } { i32 8064, i8 22, i8 0, i16 66 }, { i32, i8, i8, i16 } { i32 8065, i8 22, i8 0, i16 71 }, { i32, i8, i8, i16 } { i32 8066, i8 22, i8 0, i16 76 }, { i32, i8, i8, i16 } { i32 8067, i8 22, i8 0, i16 81 }, { i32, i8, i8, i16 } { i32 8068, i8 22, i8 0, i16 86 }, { i32, i8, i8, i16 } { i32 8069, i8 22, i8 0, i16 91 }, { i32, i8, i8, i16 } { i32 8070, i8 22, i8 0, i16 96 }, { i32, i8, i8, i16 } { i32 8071, i8 22, i8 0, i16 101 }, { i32, i8, i8, i16 } { i32 8072, i8 22, i8 0, i16 106 }, { i32, i8, i8, i16 } { i32 8073, i8 22, i8 0, i16 111 }, { i32, i8, i8, i16 } { i32 8074, i8 22, i8 0, i16 116 }, { i32, i8, i8, i16 } { i32 8075, i8 22, i8 0, i16 121 }, { i32, i8, i8, i16 } { i32 8076, i8 22, i8 0, i16 126 }, { i32, i8, i8, i16 } { i32 8077, i8 22, i8 0, i16 131 }, { i32, i8, i8, i16 } { i32 8078, i8 22, i8 0, i16 136 }, { i32, i8, i8, i16 } { i32 8079, i8 22, i8 0, i16 141 }, { i32, i8, i8, i16 } { i32 8080, i8 22, i8 0, i16 146 }, { i32, i8, i8, i16 } { i32 8081, i8 22, i8 0, i16 151 }, { i32, i8, i8, i16 } { i32 8082, i8 22, i8 0, i16 156 }, { i32, i8, i8, i16 } { i32 8083, i8 22, i8 0, i16 161 }, { i32, i8, i8, i16 } { i32 8084, i8 22, i8 0, i16 166 }, { i32, i8, i8, i16 } { i32 8085, i8 22, i8 0, i16 171 }, { i32, i8, i8, i16 } { i32 8086, i8 22, i8 0, i16 176 }, { i32, i8, i8, i16 } { i32 8087, i8 22, i8 0, i16 181 }, { i32, i8, i8, i16 } { i32 8088, i8 22, i8 0, i16 186 }, { i32, i8, i8, i16 } { i32 8089, i8 22, i8 0, i16 191 }, { i32, i8, i8, i16 } { i32 8090, i8 22, i8 0, i16 196 }, { i32, i8, i8, i16 } { i32 8091, i8 22, i8 0, i16 201 }, { i32, i8, i8, i16 } { i32 8092, i8 22, i8 0, i16 206 }, { i32, i8, i8, i16 } { i32 8093, i8 22, i8 0, i16 211 }, { i32, i8, i8, i16 } { i32 8094, i8 22, i8 0, i16 216 }, { i32, i8, i8, i16 } { i32 8095, i8 22, i8 0, i16 221 }, { i32, i8, i8, i16 } { i32 8096, i8 22, i8 0, i16 226 }, { i32, i8, i8, i16 } { i32 8097, i8 22, i8 0, i16 231 }, { i32, i8, i8, i16 } { i32 8098, i8 22, i8 0, i16 236 }, { i32, i8, i8, i16 } { i32 8099, i8 22, i8 0, i16 241 }, { i32, i8, i8, i16 } { i32 8100, i8 22, i8 0, i16 246 }, { i32, i8, i8, i16 } { i32 8101, i8 22, i8 0, i16 251 }, { i32, i8, i8, i16 } { i32 8102, i8 22, i8 0, i16 256 }, { i32, i8, i8, i16 } { i32 8103, i8 22, i8 0, i16 261 }, { i32, i8, i8, i16 } { i32 8104, i8 22, i8 0, i16 266 }, { i32, i8, i8, i16 } { i32 8105, i8 22, i8 0, i16 271 }, { i32, i8, i8, i16 } { i32 8106, i8 22, i8 0, i16 276 }, { i32, i8, i8, i16 } { i32 8107, i8 22, i8 0, i16 281 }, { i32, i8, i8, i16 } { i32 8108, i8 22, i8 0, i16 286 }, { i32, i8, i8, i16 } { i32 8109, i8 22, i8 0, i16 291 }, { i32, i8, i8, i16 } { i32 8110, i8 22, i8 0, i16 296 }, { i32, i8, i8, i16 } { i32 8111, i8 22, i8 0, i16 301 }, { i32, i8, i8, i16 } { i32 8114, i8 22, i8 0, i16 306 }, { i32, i8, i8, i16 } { i32 8115, i8 18, i8 0, i16 311 }, { i32, i8, i8, i16 } { i32 8116, i8 18, i8 0, i16 315 }, { i32, i8, i8, i16 } { i32 8118, i8 18, i8 0, i16 319 }, { i32, i8, i8, i16 } { i32 8119, i8 26, i8 0, i16 323 }, { i32, i8, i8, i16 } { i32 8120, i8 8, i8 0, i16 -8 }, { i32, i8, i8, i16 } { i32 8122, i8 8, i8 0, i16 -74 }, { i32, i8, i8, i16 } { i32 8124, i8 18, i8 0, i16 329 }, { i32, i8, i8, i16 } { i32 8126, i8 4, i8 0, i16 -7173 }, { i32, i8, i8, i16 } { i32 8130, i8 22, i8 0, i16 333 }, { i32, i8, i8, i16 } { i32 8131, i8 18, i8 0, i16 338 }, { i32, i8, i8, i16 } { i32 8132, i8 18, i8 0, i16 342 }, { i32, i8, i8, i16 } { i32 8134, i8 18, i8 0, i16 346 }, { i32, i8, i8, i16 } { i32 8135, i8 26, i8 0, i16 350 }, { i32, i8, i8, i16 } { i32 8136, i8 16, i8 0, i16 -86 }, { i32, i8, i8, i16 } { i32 8140, i8 18, i8 0, i16 356 }, { i32, i8, i8, i16 } { i32 8146, i8 26, i8 0, i16 360 }, { i32, i8, i8, i16 } { i32 8147, i8 26, i8 0, i16 366 }, { i32, i8, i8, i16 } { i32 8150, i8 18, i8 0, i16 372 }, { i32, i8, i8, i16 } { i32 8151, i8 26, i8 0, i16 376 }, { i32, i8, i8, i16 } { i32 8152, i8 8, i8 0, i16 -8 }, { i32, i8, i8, i16 } { i32 8154, i8 8, i8 0, i16 -100 }, { i32, i8, i8, i16 } { i32 8162, i8 26, i8 0, i16 382 }, { i32, i8, i8, i16 } { i32 8163, i8 26, i8 0, i16 388 }, { i32, i8, i8, i16 } { i32 8164, i8 18, i8 0, i16 394 }, { i32, i8, i8, i16 } { i32 8166, i8 18, i8 0, i16 398 }, { i32, i8, i8, i16 } { i32 8167, i8 26, i8 0, i16 402 }, { i32, i8, i8, i16 } { i32 8168, i8 8, i8 0, i16 -8 }, { i32, i8, i8, i16 } { i32 8170, i8 8, i8 0, i16 -112 }, { i32, i8, i8, i16 } { i32 8172, i8 4, i8 0, i16 -7 }, { i32, i8, i8, i16 } { i32 8178, i8 22, i8 0, i16 408 }, { i32, i8, i8, i16 } { i32 8179, i8 18, i8 0, i16 413 }, { i32, i8, i8, i16 } { i32 8180, i8 18, i8 0, i16 417 }, { i32, i8, i8, i16 } { i32 8182, i8 18, i8 0, i16 421 }, { i32, i8, i8, i16 } { i32 8183, i8 26, i8 0, i16 425 }, { i32, i8, i8, i16 } { i32 8184, i8 8, i8 0, i16 -128 }, { i32, i8, i8, i16 } { i32 8186, i8 8, i8 0, i16 -126 }, { i32, i8, i8, i16 } { i32 8188, i8 18, i8 0, i16 431 }, { i32, i8, i8, i16 } { i32 8486, i8 4, i8 0, i16 -7517 }, { i32, i8, i8, i16 } { i32 8490, i8 4, i8 0, i16 -8383 }, { i32, i8, i8, i16 } { i32 8491, i8 4, i8 0, i16 -8262 }, { i32, i8, i8, i16 } { i32 8498, i8 4, i8 0, i16 28 }, { i32, i8, i8, i16 } { i32 8544, i8 64, i8 0, i16 16 }, { i32, i8, i8, i16 } { i32 8579, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 9398, i8 104, i8 0, i16 26 }, { i32, i8, i8, i16 } { i32 11264, i8 -68, i8 0, i16 48 }, { i32, i8, i8, i16 } { i32 11360, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 11362, i8 4, i8 0, i16 -10743 }, { i32, i8, i8, i16 } { i32 11363, i8 4, i8 0, i16 -3814 }, { i32, i8, i8, i16 } { i32 11364, i8 4, i8 0, i16 -10727 }, { i32, i8, i8, i16 } { i32 11367, i8 21, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 11373, i8 4, i8 0, i16 -10780 }, { i32, i8, i8, i16 } { i32 11374, i8 4, i8 0, i16 -10749 }, { i32, i8, i8, i16 } { i32 11375, i8 4, i8 0, i16 -10783 }, { i32, i8, i8, i16 } { i32 11376, i8 4, i8 0, i16 -10782 }, { i32, i8, i8, i16 } { i32 11378, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 11381, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 11390, i8 8, i8 0, i16 -10815 }, { i32, i8, i8, i16 } { i32 11392, i8 -115, i8 1, i16 1 }, { i32, i8, i8, i16 } { i32 11499, i8 13, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 11506, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 42560, i8 -75, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 42624, i8 109, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 42786, i8 53, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 42802, i8 -11, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 42873, i8 13, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 42877, i8 4, i8 0, i16 30204 }, { i32, i8, i8, i16 } { i32 42878, i8 37, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 42891, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 42893, i8 4, i8 0, i16 23256 }, { i32, i8, i8, i16 } { i32 42896, i8 13, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 42902, i8 77, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 42922, i8 4, i8 0, i16 23228 }, { i32, i8, i8, i16 } { i32 42923, i8 4, i8 0, i16 23217 }, { i32, i8, i8, i16 } { i32 42924, i8 4, i8 0, i16 23221 }, { i32, i8, i8, i16 } { i32 42925, i8 4, i8 0, i16 23231 }, { i32, i8, i8, i16 } { i32 42926, i8 4, i8 0, i16 23228 }, { i32, i8, i8, i16 } { i32 42928, i8 4, i8 0, i16 23278 }, { i32, i8, i8, i16 } { i32 42929, i8 4, i8 0, i16 23254 }, { i32, i8, i8, i16 } { i32 42930, i8 4, i8 0, i16 23275 }, { i32, i8, i8, i16 } { i32 42931, i8 4, i8 0, i16 928 }, { i32, i8, i8, i16 } { i32 42932, i8 45, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 42946, i8 5, i8 0, i16 1 }, { i32, i8, i8, i16 } { i32 42948, i8 4, i8 0, i16 -48 }, { i32, i8, i8, i16 } { i32 42949, i8 4, i8 0, i16 23229 }, { i32, i8, i8, i16 } { i32 42950, i8 4, i8 0, i16 30152 }, { i32, i8, i8, i16 } { i32 43888, i8 64, i8 1, i16 26672 }, { i32, i8, i8, i16 } { i32 64256, i8 10, i8 0, i16 435 }, { i32, i8, i8, i16 } { i32 64257, i8 10, i8 0, i16 437 }, { i32, i8, i8, i16 } { i32 64258, i8 10, i8 0, i16 439 }, { i32, i8, i8, i16 } { i32 64259, i8 14, i8 0, i16 441 }, { i32, i8, i8, i16 } { i32 64260, i8 14, i8 0, i16 444 }, { i32, i8, i8, i16 } { i32 64261, i8 10, i8 0, i16 447 }, { i32, i8, i8, i16 } { i32 64262, i8 10, i8 0, i16 449 }, { i32, i8, i8, i16 } { i32 64275, i8 18, i8 0, i16 451 }, { i32, i8, i8, i16 } { i32 64276, i8 18, i8 0, i16 455 }, { i32, i8, i8, i16 } { i32 64277, i8 18, i8 0, i16 459 }, { i32, i8, i8, i16 } { i32 64278, i8 18, i8 0, i16 463 }, { i32, i8, i8, i16 } { i32 64279, i8 18, i8 0, i16 467 }, { i32, i8, i8, i16 } { i32 65313, i8 104, i8 0, i16 32 }, { i32, i8, i8, i16 } { i32 66560, i8 -96, i8 0, i16 40 }, { i32, i8, i8, i16 } { i32 66736, i8 -112, i8 0, i16 40 }, { i32, i8, i8, i16 } { i32 68736, i8 -52, i8 0, i16 64 }, { i32, i8, i8, i16 } { i32 71840, i8 -128, i8 0, i16 32 }, { i32, i8, i8, i16 } { i32 93760, i8 -128, i8 0, i16 32 }, { i32, i8, i8, i16 } { i32 125184, i8 -120, i8 0, i16 34 }], align 16
@.str.3 = private unnamed_addr constant [3 x i8] c"/.\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"/..\00", align 1

@FcStrCopy = hidden alias i8* (i8*), i8* (i8*)* @IA__FcStrCopy
@FcStrCopyFilename = hidden alias i8* (i8*), i8* (i8*)* @IA__FcStrCopyFilename
@FcStrPlus = hidden alias i8* (i8*, i8*), i8* (i8*, i8*)* @IA__FcStrPlus
@FcStrFree = hidden alias void (i8*), void (i8*)* @IA__FcStrFree
@FcStrDowncase = hidden alias i8* (i8*), i8* (i8*)* @IA__FcStrDowncase
@FcStrCmpIgnoreCase = hidden alias i32 (i8*, i8*), i32 (i8*, i8*)* @IA__FcStrCmpIgnoreCase
@FcStrCmp = hidden alias i32 (i8*, i8*), i32 (i8*, i8*)* @IA__FcStrCmp
@FcStrStrIgnoreCase = hidden alias i8* (i8*, i8*), i8* (i8*, i8*)* @IA__FcStrStrIgnoreCase
@FcStrStr = hidden alias i8* (i8*, i8*), i8* (i8*, i8*)* @IA__FcStrStr
@FcUtf8ToUcs4 = hidden alias i32 (i8*, i32*, i32), i32 (i8*, i32*, i32)* @IA__FcUtf8ToUcs4
@FcUtf8Len = hidden alias i32 (i8*, i32, i32*, i32*), i32 (i8*, i32, i32*, i32*)* @IA__FcUtf8Len
@FcUcs4ToUtf8 = hidden alias i32 (i32, i8*), i32 (i32, i8*)* @IA__FcUcs4ToUtf8
@FcUtf16ToUcs4 = hidden alias i32 (i8*, i32, i32*, i32), i32 (i8*, i32, i32*, i32)* @IA__FcUtf16ToUcs4
@FcUtf16Len = hidden alias i32 (i8*, i32, i32, i32*, i32*), i32 (i8*, i32, i32, i32*, i32*)* @IA__FcUtf16Len
@FcStrBuildFilename = hidden alias i8* (i8*, ...), i8* (i8*, ...)* @IA__FcStrBuildFilename
@FcStrDirname = hidden alias i8* (i8*), i8* (i8*)* @IA__FcStrDirname
@FcStrBasename = hidden alias i8* (i8*), i8* (i8*)* @IA__FcStrBasename
@FcStrSetCreate = hidden alias %struct._FcStrSet* (), %struct._FcStrSet* ()* @IA__FcStrSetCreate
@FcStrSetMember = hidden alias i32 (%struct._FcStrSet*, i8*), i32 (%struct._FcStrSet*, i8*)* @IA__FcStrSetMember
@FcStrSetEqual = hidden alias i32 (%struct._FcStrSet*, %struct._FcStrSet*), i32 (%struct._FcStrSet*, %struct._FcStrSet*)* @IA__FcStrSetEqual
@FcStrSetAdd = hidden alias i32 (%struct._FcStrSet*, i8*), i32 (%struct._FcStrSet*, i8*)* @IA__FcStrSetAdd
@FcStrSetAddFilename = hidden alias i32 (%struct._FcStrSet*, i8*), i32 (%struct._FcStrSet*, i8*)* @IA__FcStrSetAddFilename
@FcStrSetDel = hidden alias i32 (%struct._FcStrSet*, i8*), i32 (%struct._FcStrSet*, i8*)* @IA__FcStrSetDel
@FcStrSetDestroy = hidden alias void (%struct._FcStrSet*), void (%struct._FcStrSet*)* @IA__FcStrSetDestroy
@FcStrListCreate = hidden alias %struct._FcStrList* (%struct._FcStrSet*), %struct._FcStrList* (%struct._FcStrSet*)* @IA__FcStrListCreate
@FcStrListFirst = hidden alias void (%struct._FcStrList*), void (%struct._FcStrList*)* @IA__FcStrListFirst
@FcStrListNext = hidden alias i8* (%struct._FcStrList*), i8* (%struct._FcStrList*)* @IA__FcStrListNext
@FcStrListDone = hidden alias void (%struct._FcStrList*), void (%struct._FcStrList*)* @IA__FcStrListDone

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias i8* @IA__FcStrCopy(i8* nocapture readonly) #0 {
  %2 = tail call noalias i8* @strdup(i8* %0) #11
  ret i8* %2
}

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @IA__FcStrPlus(i8* nocapture readonly, i8* nocapture readonly) #2 {
  %3 = tail call i64 @strlen(i8* %0) #13
  %4 = tail call i64 @strlen(i8* %1) #13
  %5 = add i64 %4, %3
  %6 = shl i64 %5, 32
  %7 = add i64 %6, 4294967296
  %8 = ashr exact i64 %7, 32
  %9 = tail call noalias i8* @malloc(i64 %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = shl i64 %3, 32
  %13 = ashr exact i64 %12, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 1 %0, i64 %13, i1 false)
  %14 = getelementptr inbounds i8, i8* %9, i64 %13
  %15 = shl i64 %4, 32
  %16 = add i64 %15, 4294967296
  %17 = ashr exact i64 %16, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %17, i1 false)
  br label %18

18:                                               ; preds = %2, %11
  ret i8* %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @IA__FcStrFree(i8* nocapture) #2 {
  tail call void @free(i8* %0) #11
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @IA__FcStrDowncase(i8*) #2 {
  %2 = alloca %struct._FcCaseWalker, align 8
  %3 = bitcast %struct._FcCaseWalker* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #11
  %4 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %2, i64 0, i32 2, i64 0
  %5 = bitcast i8* %4 to i64*
  store i64 -6148914691236517206, i64* %5, align 8
  %6 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %2, i64 0, i32 1
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %2, i64 0, i32 0
  store i8* null, i8** %7, align 8
  br label %8

8:                                                ; preds = %8, %1
  %9 = phi i32 [ 0, %1 ], [ %12, %8 ]
  %10 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %2, i8* null)
  %11 = icmp eq i8 %10, 0
  %12 = add nuw nsw i32 %9, 1
  br i1 %11, label %13, label %8

13:                                               ; preds = %8
  %14 = zext i32 %12 to i64
  %15 = call noalias i8* @malloc(i64 %14) #11
  %16 = icmp eq i8* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  store i8* %0, i8** %6, align 8
  store i8* null, i8** %7, align 8
  br label %18

18:                                               ; preds = %18, %17
  %19 = phi i8* [ %15, %17 ], [ %21, %18 ]
  %20 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %2, i8* null)
  %21 = getelementptr inbounds i8, i8* %19, i64 1
  store i8 %20, i8* %19, align 1
  %22 = icmp eq i8 %20, 0
  br i1 %22, label %23, label %18

23:                                               ; preds = %18, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #11
  ret i8* %15
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker*, i8* readonly) unnamed_addr #2 {
  %3 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %4, i64 1
  store i8* %7, i8** %3, align 8
  %8 = load i8, i8* %4, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %182

10:                                               ; preds = %6
  store i8* null, i8** %3, align 8
  br label %11

11:                                               ; preds = %2, %10
  %12 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %0, i64 0, i32 1
  %13 = icmp ne i8* %1, null
  %14 = load i8*, i8** %12, align 8
  br label %15

15:                                               ; preds = %21, %11
  %16 = phi i8* [ %17, %21 ], [ %14, %11 ]
  %17 = getelementptr inbounds i8, i8* %16, i64 1
  store i8* %17, i8** %12, align 8
  %18 = load i8, i8* %16, align 1
  %19 = icmp ne i8 %18, 0
  %20 = and i1 %13, %19
  br i1 %20, label %21, label %25

21:                                               ; preds = %15
  %22 = zext i8 %18 to i32
  %23 = tail call i8* @strchr(i8* nonnull %1, i32 %22) #13
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %15

25:                                               ; preds = %21, %15
  %26 = icmp ugt i8 %18, -65
  br i1 %26, label %27, label %177

27:                                               ; preds = %25
  %28 = tail call i64 @strlen(i8* %17) #13
  %29 = trunc i64 %28 to i32
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %182, label %31

31:                                               ; preds = %27
  %32 = zext i8 %18 to i32
  %33 = and i32 %32, 64
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %182, label %35

35:                                               ; preds = %31
  %36 = and i32 %32, 32
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %50, label %38

38:                                               ; preds = %35
  %39 = and i32 %32, 16
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %38
  %42 = and i32 %32, 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %41
  %45 = and i32 %32, 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = and i32 %32, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %182

50:                                               ; preds = %47, %44, %41, %38, %35
  %51 = phi i32 [ 31, %35 ], [ 15, %38 ], [ 7, %41 ], [ 3, %44 ], [ 1, %47 ]
  %52 = phi i32 [ 1, %35 ], [ 2, %38 ], [ 3, %41 ], [ 4, %44 ], [ 5, %47 ]
  %53 = and i32 %51, %32
  %54 = icmp sgt i32 %52, %29
  br i1 %54, label %182, label %55

55:                                               ; preds = %50
  %56 = load i8, i8* %17, align 1
  %57 = zext i8 %56 to i32
  %58 = and i32 %57, 192
  %59 = icmp eq i32 %58, 128
  br i1 %59, label %60, label %182

60:                                               ; preds = %55
  %61 = shl nuw nsw i32 %53, 6
  %62 = and i32 %57, 63
  %63 = or i32 %62, %61
  %64 = getelementptr inbounds i8, i8* %16, i64 2
  %65 = icmp eq i32 %52, 1
  br i1 %65, label %66, label %214

66:                                               ; preds = %252, %241, %230, %219, %60
  %67 = phi i32 [ %63, %60 ], [ %222, %219 ], [ %233, %230 ], [ %244, %241 ], [ %255, %252 ]
  %68 = phi i8* [ %64, %60 ], [ %223, %219 ], [ %234, %230 ], [ %245, %241 ], [ %256, %252 ]
  %69 = phi i32 [ %57, %60 ], [ %216, %219 ], [ %227, %230 ], [ %238, %241 ], [ %249, %252 ]
  %70 = ptrtoint i8* %68 to i64
  %71 = ptrtoint i8* %16 to i64
  %72 = sub i64 %70, %71
  %73 = trunc i64 %72 to i32
  %74 = icmp sgt i32 %73, 0
  %75 = add i32 %67, -65
  %76 = icmp ult i32 %75, 125153
  %77 = and i1 %76, %74
  br i1 %77, label %78, label %182

78:                                               ; preds = %66, %173
  %79 = phi i32 [ %175, %173 ], [ 295, %66 ]
  %80 = phi i32 [ %174, %173 ], [ 0, %66 ]
  %81 = add nsw i32 %80, %79
  %82 = ashr i32 %81, 1
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [295 x %struct._FcCaseFold], [295 x %struct._FcCaseFold]* bitcast ([295 x { i32, i8, i8, i16 }]* @fcCaseFold to [295 x %struct._FcCaseFold]*), i64 0, i64 %83, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = getelementptr inbounds [295 x %struct._FcCaseFold], [295 x %struct._FcCaseFold]* bitcast ([295 x { i32, i8, i8, i16 }]* @fcCaseFold to [295 x %struct._FcCaseFold]*), i64 0, i64 %83, i32 1
  %87 = load i16, i16* %86, align 4
  %88 = and i16 %87, 3
  %89 = icmp eq i16 %88, 2
  %90 = lshr i16 %87, 2
  %91 = select i1 %89, i16 1, i16 %90
  %92 = zext i16 %91 to i32
  %93 = add i32 %85, %92
  %94 = icmp ugt i32 %93, %67
  br i1 %94, label %97, label %95

95:                                               ; preds = %78
  %96 = add nsw i32 %82, 1
  br label %173

97:                                               ; preds = %78
  %98 = icmp ult i32 %67, %85
  br i1 %98, label %99, label %101

99:                                               ; preds = %97
  %100 = add nsw i32 %82, -1
  br label %173

101:                                              ; preds = %97
  %102 = zext i16 %88 to i32
  switch i32 %102, label %107 [
    i32 1, label %103
    i32 2, label %153
  ]

103:                                              ; preds = %101
  %104 = xor i32 %85, %69
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %182

107:                                              ; preds = %103, %101
  %108 = getelementptr inbounds [295 x %struct._FcCaseFold], [295 x %struct._FcCaseFold]* bitcast ([295 x { i32, i8, i8, i16 }]* @fcCaseFold to [295 x %struct._FcCaseFold]*), i64 0, i64 %83, i32 2
  %109 = load i16, i16* %108, align 2
  %110 = sext i16 %109 to i32
  %111 = add i32 %67, %110
  %112 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %0, i64 0, i32 2, i64 0
  %113 = icmp ult i32 %111, 128
  br i1 %113, label %124, label %114

114:                                              ; preds = %107
  %115 = icmp ult i32 %111, 2048
  br i1 %115, label %127, label %116

116:                                              ; preds = %114
  %117 = icmp ult i32 %111, 65536
  br i1 %117, label %127, label %118

118:                                              ; preds = %116
  %119 = icmp ult i32 %111, 2097152
  br i1 %119, label %127, label %120

120:                                              ; preds = %118
  %121 = icmp ult i32 %111, 67108864
  br i1 %121, label %127, label %122

122:                                              ; preds = %120
  %123 = icmp sgt i32 %111, -1
  br i1 %123, label %127, label %160

124:                                              ; preds = %107
  %125 = trunc i32 %111 to i8
  store i8 %125, i8* %112, align 1
  %126 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %0, i64 0, i32 2, i64 1
  br label %147

127:                                              ; preds = %122, %120, %118, %116, %114
  %128 = phi i32 [ 6, %114 ], [ 12, %116 ], [ 18, %118 ], [ 24, %120 ], [ 30, %122 ]
  %129 = phi i8 [ 31, %114 ], [ 15, %116 ], [ 7, %118 ], [ 3, %120 ], [ 1, %122 ]
  %130 = phi i8 [ -64, %114 ], [ -32, %116 ], [ -16, %118 ], [ -8, %120 ], [ -4, %122 ]
  %131 = phi i32 [ 0, %114 ], [ 6, %116 ], [ 12, %118 ], [ 18, %120 ], [ 24, %122 ]
  %132 = lshr i32 %111, %128
  %133 = trunc i32 %132 to i8
  %134 = and i8 %129, %133
  %135 = or i8 %134, %130
  store i8 %135, i8* %112, align 1
  %136 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %0, i64 0, i32 2, i64 1
  %137 = lshr i32 %111, %131
  %138 = trunc i32 %137 to i8
  %139 = and i8 %138, 63
  %140 = or i8 %139, -128
  store i8 %140, i8* %136, align 1
  %141 = add nsw i32 %131, -6
  %142 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %0, i64 0, i32 2, i64 2
  %143 = icmp sgt i32 %141, -1
  br i1 %143, label %184, label %144

144:                                              ; preds = %208, %200, %192, %184, %127
  %145 = phi i8* [ %142, %127 ], [ %190, %184 ], [ %198, %192 ], [ %206, %200 ], [ %213, %208 ]
  %146 = load i8*, i8** %12, align 8
  br label %147

147:                                              ; preds = %144, %124
  %148 = phi i8* [ %17, %124 ], [ %146, %144 ]
  %149 = phi i8* [ %126, %124 ], [ %145, %144 ]
  %150 = ptrtoint i8* %149 to i64
  %151 = ptrtoint i8* %112 to i64
  %152 = sub i64 %150, %151
  br label %160

153:                                              ; preds = %101
  %154 = zext i16 %90 to i64
  %155 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %0, i64 0, i32 2, i64 0
  %156 = getelementptr inbounds [295 x %struct._FcCaseFold], [295 x %struct._FcCaseFold]* bitcast ([295 x { i32, i8, i8, i16 }]* @fcCaseFold to [295 x %struct._FcCaseFold]*), i64 0, i64 %83, i32 2
  %157 = load i16, i16* %156, align 2
  %158 = sext i16 %157 to i64
  %159 = getelementptr inbounds [471 x i8], [471 x i8]* @fcCaseFoldChars, i64 0, i64 %158
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 1 %159, i64 %154, i1 false) #11
  br label %160

160:                                              ; preds = %153, %147, %122
  %161 = phi i8* [ %17, %153 ], [ %148, %147 ], [ %17, %122 ]
  %162 = phi i64 [ %154, %153 ], [ %152, %147 ], [ 0, %122 ]
  %163 = shl i64 %72, 32
  %164 = add i64 %163, -4294967296
  %165 = ashr exact i64 %164, 32
  %166 = getelementptr inbounds i8, i8* %161, i64 %165
  store i8* %166, i8** %12, align 8
  %167 = shl i64 %162, 32
  %168 = ashr exact i64 %167, 32
  %169 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %0, i64 0, i32 2, i64 %168
  store i8 0, i8* %169, align 1
  %170 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %0, i64 0, i32 2, i64 0
  %171 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %0, i64 0, i32 2, i64 1
  store i8* %171, i8** %3, align 8
  %172 = load i8, i8* %170, align 1
  br label %182

173:                                              ; preds = %99, %95
  %174 = phi i32 [ %96, %95 ], [ %80, %99 ]
  %175 = phi i32 [ %79, %95 ], [ %100, %99 ]
  %176 = icmp sgt i32 %174, %175
  br i1 %176, label %182, label %78

177:                                              ; preds = %25
  %178 = add i8 %18, -65
  %179 = icmp ult i8 %178, 26
  %180 = add nuw i8 %18, 32
  %181 = select i1 %179, i8 %180, i8 %18
  br label %182

182:                                              ; preds = %55, %214, %225, %236, %247, %173, %160, %103, %66, %50, %47, %31, %27, %177, %6
  %183 = phi i8 [ %8, %6 ], [ %181, %177 ], [ %18, %66 ], [ %18, %103 ], [ %172, %160 ], [ %18, %27 ], [ %18, %31 ], [ %18, %47 ], [ %18, %50 ], [ %18, %173 ], [ %18, %247 ], [ %18, %236 ], [ %18, %225 ], [ %18, %214 ], [ %18, %55 ]
  ret i8 %183

184:                                              ; preds = %127
  %185 = lshr i32 %111, %141
  %186 = trunc i32 %185 to i8
  %187 = and i8 %186, 63
  %188 = or i8 %187, -128
  store i8 %188, i8* %142, align 1
  %189 = add nsw i32 %131, -12
  %190 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %0, i64 0, i32 2, i64 3
  %191 = icmp sgt i32 %189, -1
  br i1 %191, label %192, label %144

192:                                              ; preds = %184
  %193 = lshr i32 %111, %189
  %194 = trunc i32 %193 to i8
  %195 = and i8 %194, 63
  %196 = or i8 %195, -128
  store i8 %196, i8* %190, align 1
  %197 = add nsw i32 %131, -18
  %198 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %0, i64 0, i32 2, i64 4
  %199 = icmp sgt i32 %197, -1
  br i1 %199, label %200, label %144

200:                                              ; preds = %192
  %201 = lshr i32 %111, %197
  %202 = trunc i32 %201 to i8
  %203 = and i8 %202, 63
  %204 = or i8 %203, -128
  store i8 %204, i8* %198, align 1
  %205 = add nsw i32 %131, -24
  %206 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %0, i64 0, i32 2, i64 5
  %207 = icmp sgt i32 %205, -1
  br i1 %207, label %208, label %144

208:                                              ; preds = %200
  %209 = lshr i32 %111, %205
  %210 = trunc i32 %209 to i8
  %211 = and i8 %210, 63
  %212 = or i8 %211, -128
  store i8 %212, i8* %206, align 1
  %213 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %0, i64 0, i32 2, i64 6
  br label %144

214:                                              ; preds = %60
  %215 = load i8, i8* %64, align 1
  %216 = zext i8 %215 to i32
  %217 = and i32 %216, 192
  %218 = icmp eq i32 %217, 128
  br i1 %218, label %219, label %182

219:                                              ; preds = %214
  %220 = shl nuw nsw i32 %63, 6
  %221 = and i32 %216, 63
  %222 = or i32 %221, %220
  %223 = getelementptr inbounds i8, i8* %16, i64 3
  %224 = icmp eq i32 %52, 2
  br i1 %224, label %66, label %225

225:                                              ; preds = %219
  %226 = load i8, i8* %223, align 1
  %227 = zext i8 %226 to i32
  %228 = and i32 %227, 192
  %229 = icmp eq i32 %228, 128
  br i1 %229, label %230, label %182

230:                                              ; preds = %225
  %231 = shl nuw nsw i32 %222, 6
  %232 = and i32 %227, 63
  %233 = or i32 %232, %231
  %234 = getelementptr inbounds i8, i8* %16, i64 4
  %235 = icmp eq i32 %52, 3
  br i1 %235, label %66, label %236

236:                                              ; preds = %230
  %237 = load i8, i8* %234, align 1
  %238 = zext i8 %237 to i32
  %239 = and i32 %238, 192
  %240 = icmp eq i32 %239, 128
  br i1 %240, label %241, label %182

241:                                              ; preds = %236
  %242 = shl i32 %233, 6
  %243 = and i32 %238, 63
  %244 = or i32 %243, %242
  %245 = getelementptr inbounds i8, i8* %16, i64 5
  %246 = icmp eq i32 %52, 4
  br i1 %246, label %66, label %247

247:                                              ; preds = %241
  %248 = load i8, i8* %245, align 1
  %249 = zext i8 %248 to i32
  %250 = and i32 %249, 192
  %251 = icmp eq i32 %250, 128
  br i1 %251, label %252, label %182

252:                                              ; preds = %247
  %253 = shl i32 %244, 6
  %254 = and i32 %249, 63
  %255 = or i32 %254, %253
  %256 = getelementptr inbounds i8, i8* %16, i64 6
  br label %66
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcStrCmpIgnoreCase(i8*, i8*) #2 {
  %3 = alloca %struct._FcCaseWalker, align 8
  %4 = alloca %struct._FcCaseWalker, align 8
  %5 = bitcast %struct._FcCaseWalker* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false)
  %6 = bitcast %struct._FcCaseWalker* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  %7 = icmp eq i8* %0, %1
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %3, i64 0, i32 1
  store i8* %0, i8** %9, align 8
  %10 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %3, i64 0, i32 0
  store i8* null, i8** %10, align 8
  %11 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 1
  store i8* %1, i8** %11, align 8
  %12 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 0
  store i8* null, i8** %12, align 8
  br label %13

13:                                               ; preds = %13, %8
  %14 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %3, i8* null)
  %15 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %4, i8* null)
  %16 = icmp ne i8 %14, 0
  %17 = icmp eq i8 %14, %15
  %18 = and i1 %16, %17
  br i1 %18, label %13, label %19

19:                                               ; preds = %13
  %20 = zext i8 %14 to i32
  %21 = zext i8 %15 to i32
  %22 = sub nsw i32 %20, %21
  br label %23

23:                                               ; preds = %2, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcStrCmpIgnoreBlanksAndCase(i8*, i8*) local_unnamed_addr #2 {
  %3 = alloca %struct._FcCaseWalker, align 8
  %4 = alloca %struct._FcCaseWalker, align 8
  %5 = bitcast %struct._FcCaseWalker* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false) #11
  %6 = bitcast %struct._FcCaseWalker* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false) #11
  %7 = icmp eq i8* %0, %1
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %3, i64 0, i32 1
  store i8* %0, i8** %9, align 8
  %10 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %3, i64 0, i32 0
  store i8* null, i8** %10, align 8
  %11 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 1
  store i8* %1, i8** %11, align 8
  %12 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 0
  store i8* null, i8** %12, align 8
  br label %13

13:                                               ; preds = %13, %8
  %14 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #11
  %15 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #11
  %16 = icmp ne i8 %14, 0
  %17 = icmp eq i8 %14, %15
  %18 = and i1 %16, %17
  br i1 %18, label %13, label %19

19:                                               ; preds = %13
  %20 = zext i8 %14 to i32
  %21 = zext i8 %15 to i32
  %22 = sub nsw i32 %20, %21
  br label %23

23:                                               ; preds = %2, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcStrCmpIgnoreCaseAndDelims(i8*, i8*, i8*) local_unnamed_addr #2 {
  %4 = alloca %struct._FcCaseWalker, align 8
  %5 = alloca %struct._FcCaseWalker, align 8
  %6 = bitcast %struct._FcCaseWalker* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  %7 = bitcast %struct._FcCaseWalker* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  %8 = icmp eq i8* %0, %1
  br i1 %8, label %24, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 1
  store i8* %0, i8** %10, align 8
  %11 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 0
  store i8* null, i8** %11, align 8
  %12 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %5, i64 0, i32 1
  store i8* %1, i8** %12, align 8
  %13 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %5, i64 0, i32 0
  store i8* null, i8** %13, align 8
  br label %14

14:                                               ; preds = %14, %9
  %15 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %4, i8* %2)
  %16 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %5, i8* %2)
  %17 = icmp ne i8 %15, 0
  %18 = icmp eq i8 %15, %16
  %19 = and i1 %17, %18
  br i1 %19, label %14, label %20

20:                                               ; preds = %14
  %21 = zext i8 %15 to i32
  %22 = zext i8 %16 to i32
  %23 = sub nsw i32 %21, %22
  br label %24

24:                                               ; preds = %3, %20
  %25 = phi i32 [ %23, %20 ], [ 0, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret i32 %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @IA__FcStrCmp(i8* readonly, i8* readonly) #6 {
  %3 = icmp eq i8* %0, %1
  br i1 %3, label %18, label %4

4:                                                ; preds = %2, %10
  %5 = phi i8* [ %12, %10 ], [ %0, %2 ]
  %6 = phi i8* [ %11, %10 ], [ %1, %2 ]
  %7 = load i8, i8* %5, align 1
  %8 = load i8, i8* %6, align 1
  %9 = icmp eq i8 %7, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds i8, i8* %6, i64 1
  %12 = getelementptr inbounds i8, i8* %5, i64 1
  %13 = icmp eq i8 %7, %8
  br i1 %13, label %4, label %14

14:                                               ; preds = %10, %4
  %15 = zext i8 %7 to i32
  %16 = zext i8 %8 to i32
  %17 = sub nsw i32 %15, %16
  br label %18

18:                                               ; preds = %2, %14
  %19 = phi i32 [ %17, %14 ], [ 0, %2 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcStrHashIgnoreCase(i8*) local_unnamed_addr #2 {
  %2 = alloca %struct._FcCaseWalker, align 8
  %3 = bitcast %struct._FcCaseWalker* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #11
  %4 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %2, i64 0, i32 2, i64 0
  %5 = bitcast i8* %4 to i64*
  store i64 -6148914691236517206, i64* %5, align 8
  %6 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %2, i64 0, i32 1
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %2, i64 0, i32 0
  store i8* null, i8** %7, align 8
  %8 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %2, i8* null)
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %1, %10
  %11 = phi i8 [ %18, %10 ], [ %8, %1 ]
  %12 = phi i32 [ %17, %10 ], [ 0, %1 ]
  %13 = shl i32 %12, 3
  %14 = lshr i32 %12, 3
  %15 = xor i32 %13, %14
  %16 = zext i8 %11 to i32
  %17 = xor i32 %15, %16
  %18 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %2, i8* null)
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %10

20:                                               ; preds = %10, %1
  %21 = phi i32 [ 0, %1 ], [ %17, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #11
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @FcStrContainsIgnoreBlanksAndCase(i8*, i8*) local_unnamed_addr #2 {
  %3 = alloca %struct._FcCaseWalker, align 8
  %4 = alloca %struct._FcCaseWalker, align 8
  %5 = load i8, i8* %0, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %33, label %7

7:                                                ; preds = %2
  %8 = bitcast %struct._FcCaseWalker* %3 to i8*
  %9 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %3, i64 0, i32 2, i64 0
  %10 = bitcast i8* %9 to i64*
  %11 = bitcast %struct._FcCaseWalker* %4 to i8*
  %12 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 2, i64 0
  %13 = bitcast i8* %12 to i64*
  %14 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %3, i64 0, i32 1
  %15 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %3, i64 0, i32 0
  %16 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 1
  %17 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 0
  br label %18

18:                                               ; preds = %7, %29
  %19 = phi i8* [ %0, %7 ], [ %30, %29 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  store i64 -6148914691236517206, i64* %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  store i64 -6148914691236517206, i64* %13, align 8
  store i8* %19, i8** %14, align 8
  store i8* null, i8** %15, align 8
  store i8* %1, i8** %16, align 8
  store i8* null, i8** %17, align 8
  br label %20

20:                                               ; preds = %20, %18
  %21 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #11
  %22 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #11
  %23 = icmp ne i8 %21, 0
  %24 = icmp eq i8 %21, %22
  %25 = and i1 %23, %24
  br i1 %25, label %20, label %26

26:                                               ; preds = %20
  %27 = icmp eq i8 %22, 0
  %28 = or i1 %24, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %19, i64 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %18

33:                                               ; preds = %29, %26, %2
  %34 = phi i8* [ null, %2 ], [ %19, %26 ], [ null, %29 ]
  ret i8* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @FcStrContainsIgnoreCase(i8*, i8*) local_unnamed_addr #2 {
  %3 = alloca %struct._FcCaseWalker, align 8
  %4 = alloca %struct._FcCaseWalker, align 8
  %5 = load i8, i8* %0, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %33, label %7

7:                                                ; preds = %2
  %8 = bitcast %struct._FcCaseWalker* %3 to i8*
  %9 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %3, i64 0, i32 2, i64 0
  %10 = bitcast i8* %9 to i64*
  %11 = bitcast %struct._FcCaseWalker* %4 to i8*
  %12 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 2, i64 0
  %13 = bitcast i8* %12 to i64*
  %14 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %3, i64 0, i32 1
  %15 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %3, i64 0, i32 0
  %16 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 1
  %17 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 0
  br label %18

18:                                               ; preds = %7, %29
  %19 = phi i8* [ %0, %7 ], [ %30, %29 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  store i64 -6148914691236517206, i64* %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  store i64 -6148914691236517206, i64* %13, align 8
  store i8* %19, i8** %14, align 8
  store i8* null, i8** %15, align 8
  store i8* %1, i8** %16, align 8
  store i8* null, i8** %17, align 8
  br label %20

20:                                               ; preds = %20, %18
  %21 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %3, i8* null) #11
  %22 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %4, i8* null) #11
  %23 = icmp ne i8 %21, 0
  %24 = icmp eq i8 %21, %22
  %25 = and i1 %23, %24
  br i1 %25, label %20, label %26

26:                                               ; preds = %20
  %27 = icmp eq i8 %22, 0
  %28 = or i1 %24, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %19, i64 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %18

33:                                               ; preds = %29, %26, %2
  %34 = phi i8* [ null, %2 ], [ %19, %26 ], [ null, %29 ]
  ret i8* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @FcStrContainsWord(i8*, i8*) local_unnamed_addr #2 {
  %3 = alloca %struct._FcCaseWalker, align 8
  %4 = alloca %struct._FcCaseWalker, align 8
  %5 = tail call i64 @strlen(i8* %0) #13
  %6 = trunc i64 %5 to i32
  %7 = tail call i64 @strlen(i8* %1) #13
  %8 = trunc i64 %7 to i32
  %9 = shl i64 %7, 32
  %10 = ashr exact i64 %9, 32
  %11 = icmp slt i32 %6, %8
  br i1 %11, label %75, label %12

12:                                               ; preds = %2
  %13 = bitcast %struct._FcCaseWalker* %3 to i8*
  %14 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %3, i64 0, i32 2, i64 0
  %15 = bitcast i8* %14 to i64*
  %16 = bitcast %struct._FcCaseWalker* %4 to i8*
  %17 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 2, i64 0
  %18 = bitcast i8* %17 to i64*
  %19 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %3, i64 0, i32 1
  %20 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %3, i64 0, i32 0
  %21 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 1
  %22 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 0
  br label %23

23:                                               ; preds = %70, %12
  %24 = phi i32 [ %6, %12 ], [ %73, %70 ]
  %25 = phi i32 [ 1, %12 ], [ %71, %70 ]
  %26 = phi i8* [ %0, %12 ], [ %72, %70 ]
  %27 = icmp eq i32 %25, 0
  br i1 %27, label %55, label %28

28:                                               ; preds = %23
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  store i64 -6148914691236517206, i64* %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  store i64 -6148914691236517206, i64* %18, align 8
  store i8* %26, i8** %19, align 8
  store i8* null, i8** %20, align 8
  store i8* %1, i8** %21, align 8
  store i8* null, i8** %22, align 8
  br label %29

29:                                               ; preds = %29, %28
  %30 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %3, i8* null) #11
  %31 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %4, i8* null) #11
  %32 = icmp ne i8 %30, 0
  %33 = icmp eq i8 %30, %31
  %34 = and i1 %32, %33
  br i1 %34, label %29, label %35

35:                                               ; preds = %29
  %36 = icmp eq i8 %31, 0
  %37 = or i1 %33, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  br i1 %37, label %38, label %55

38:                                               ; preds = %35
  %39 = icmp eq i32 %24, %8
  br i1 %39, label %75, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds i8, i8* %26, i64 %10
  %42 = load i8, i8* %41, align 1
  %43 = icmp ult i8 %42, 48
  br i1 %43, label %75, label %44

44:                                               ; preds = %40
  %45 = icmp ult i8 %42, 58
  br i1 %45, label %55, label %46

46:                                               ; preds = %44
  %47 = icmp ult i8 %42, 65
  br i1 %47, label %75, label %48

48:                                               ; preds = %46
  %49 = icmp ult i8 %42, 91
  br i1 %49, label %55, label %50

50:                                               ; preds = %48
  %51 = icmp ugt i8 %42, 96
  %52 = add i8 %42, -123
  %53 = icmp ugt i8 %52, 3
  %54 = and i1 %51, %53
  br i1 %54, label %55, label %75

55:                                               ; preds = %50, %35, %48, %44, %23
  %56 = load i8, i8* %26, align 1
  %57 = icmp ult i8 %56, 48
  br i1 %57, label %70, label %58

58:                                               ; preds = %55
  %59 = icmp ult i8 %56, 58
  br i1 %59, label %69, label %60

60:                                               ; preds = %58
  %61 = icmp ult i8 %56, 65
  br i1 %61, label %70, label %62

62:                                               ; preds = %60
  %63 = icmp ult i8 %56, 91
  br i1 %63, label %69, label %64

64:                                               ; preds = %62
  %65 = icmp ugt i8 %56, 96
  %66 = add i8 %56, -123
  %67 = icmp ugt i8 %66, 3
  %68 = and i1 %65, %67
  br i1 %68, label %69, label %70

69:                                               ; preds = %64, %62, %58
  br label %70

70:                                               ; preds = %64, %60, %55, %69
  %71 = phi i32 [ 0, %69 ], [ 1, %55 ], [ 1, %60 ], [ 1, %64 ]
  %72 = getelementptr inbounds i8, i8* %26, i64 1
  %73 = add nsw i32 %24, -1
  %74 = icmp sgt i32 %24, %8
  br i1 %74, label %23, label %75

75:                                               ; preds = %70, %38, %40, %46, %50, %2
  %76 = phi i8* [ null, %2 ], [ %26, %50 ], [ %26, %46 ], [ %26, %40 ], [ null, %70 ], [ %26, %38 ]
  ret i8* %76
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcStrMatchIgnoreCaseAndDelims(i8*, i8*, i8* readonly) local_unnamed_addr #2 {
  %4 = alloca %struct._FcCaseWalker, align 8
  %5 = alloca %struct._FcCaseWalker, align 8
  %6 = bitcast %struct._FcCaseWalker* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  %7 = bitcast %struct._FcCaseWalker* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  %8 = icmp eq i8* %0, %1
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 1
  store i8* %0, i8** %10, align 8
  %11 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 0
  store i8* null, i8** %11, align 8
  %12 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %5, i64 0, i32 1
  store i8* %1, i8** %12, align 8
  %13 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %5, i64 0, i32 0
  store i8* null, i8** %13, align 8
  br label %14

14:                                               ; preds = %14, %9
  %15 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %4, i8* %2)
  %16 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %5, i8* %2)
  %17 = icmp ne i8 %15, 0
  %18 = icmp eq i8 %15, %16
  %19 = and i1 %17, %18
  br i1 %19, label %14, label %20

20:                                               ; preds = %14
  %21 = bitcast i8** %10 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = ptrtoint i8* %0 to i64
  %24 = xor i64 %23, 4294967295
  %25 = add i64 %22, %24
  %26 = trunc i64 %25 to i32
  br label %27

27:                                               ; preds = %3, %20
  %28 = phi i32 [ %26, %20 ], [ 0, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret i32 %28
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @FcStrGlobMatch(i8* readonly, i8* nocapture readonly) local_unnamed_addr #7 {
  br label %3

3:                                                ; preds = %38, %2
  %4 = phi i8* [ %0, %2 ], [ %6, %38 ]
  %5 = phi i8* [ %1, %2 ], [ %39, %38 ]
  %6 = getelementptr inbounds i8, i8* %4, i64 1
  %7 = load i8, i8* %4, align 1
  switch i8 %7, label %35 [
    i8 0, label %40
    i8 42, label %8
    i8 63, label %32
  ]

8:                                                ; preds = %3
  %9 = load i8, i8* %6, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %44, label %11

11:                                               ; preds = %8
  %12 = tail call i8* @strchr(i8* %6, i32 42) #13
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %20

14:                                               ; preds = %11
  %15 = tail call i64 @strlen(i8* %5) #13
  %16 = tail call i64 @strlen(i8* %6) #13
  %17 = icmp ult i64 %15, %16
  %18 = sub i64 %15, %16
  %19 = getelementptr inbounds i8, i8* %5, i64 %18
  br i1 %17, label %44, label %20

20:                                               ; preds = %14, %11
  %21 = phi i8* [ %19, %14 ], [ %5, %11 ]
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %44, label %27

24:                                               ; preds = %27
  %25 = load i8, i8* %31, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %44, label %27

27:                                               ; preds = %20, %24
  %28 = phi i8* [ %31, %24 ], [ %21, %20 ]
  %29 = tail call i32 @FcStrGlobMatch(i8* %6, i8* %28)
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds i8, i8* %28, i64 1
  br i1 %30, label %24, label %44

32:                                               ; preds = %3
  %33 = load i8, i8* %5, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %44, label %38

35:                                               ; preds = %3
  %36 = load i8, i8* %5, align 1
  %37 = icmp eq i8 %36, %7
  br i1 %37, label %38, label %44

38:                                               ; preds = %35, %32
  %39 = getelementptr inbounds i8, i8* %5, i64 1
  br label %3

40:                                               ; preds = %3
  %41 = load i8, i8* %5, align 1
  %42 = icmp eq i8 %41, 0
  %43 = zext i1 %42 to i32
  br label %44

44:                                               ; preds = %35, %32, %27, %24, %20, %14, %8, %40
  %45 = phi i32 [ 0, %14 ], [ %43, %40 ], [ 1, %8 ], [ 0, %20 ], [ 1, %27 ], [ 0, %24 ], [ 0, %32 ], [ 0, %35 ]
  ret i32 %45
}

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i8* @IA__FcStrStrIgnoreCase(i8*, i8*) #2 {
  %3 = alloca %struct._FcCaseWalker, align 8
  %4 = alloca %struct._FcCaseWalker, align 8
  %5 = alloca %struct._FcCaseWalker, align 8
  %6 = alloca %struct._FcCaseWalker, align 8
  %7 = bitcast %struct._FcCaseWalker* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  %8 = bitcast %struct._FcCaseWalker* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = icmp ne i8* %0, null
  %10 = icmp ne i8* %1, null
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %42

12:                                               ; preds = %2
  %13 = icmp eq i8* %0, %1
  br i1 %13, label %42, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %3, i64 0, i32 1
  store i8* %0, i8** %15, align 8
  %16 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %3, i64 0, i32 0
  store i8* null, i8** %16, align 8
  %17 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 1
  store i8* %1, i8** %17, align 8
  %18 = getelementptr inbounds %struct._FcCaseWalker, %struct._FcCaseWalker* %4, i64 0, i32 0
  store i8* null, i8** %18, align 8
  %19 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %4, i8* null)
  %20 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %3, i8* null)
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %42, label %22

22:                                               ; preds = %14
  %23 = bitcast %struct._FcCaseWalker* %5 to i8*
  %24 = bitcast %struct._FcCaseWalker* %6 to i8*
  br label %25

25:                                               ; preds = %22, %38
  %26 = phi i8 [ %20, %22 ], [ %40, %38 ]
  %27 = phi i8* [ %0, %22 ], [ %39, %38 ]
  %28 = icmp eq i8 %26, %19
  br i1 %28, label %29, label %38

29:                                               ; preds = %25
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 8 %7, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* nonnull align 8 %8, i64 24, i1 false)
  br label %30

30:                                               ; preds = %34, %29
  %31 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %5, i8* null)
  %32 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %6, i8* null)
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %30
  %35 = icmp eq i8 %32, %31
  br i1 %35, label %30, label %36

36:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  br label %38

37:                                               ; preds = %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  br label %42

38:                                               ; preds = %36, %25
  %39 = load i8*, i8** %15, align 8
  %40 = call fastcc zeroext i8 @FcStrCaseWalkerNext(%struct._FcCaseWalker* nonnull %3, i8* null)
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %25

42:                                               ; preds = %38, %14, %37, %12, %2
  %43 = phi i8* [ %27, %37 ], [ null, %2 ], [ %0, %12 ], [ null, %14 ], [ null, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret i8* %43
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @IA__FcStrStr(i8* readonly, i8* readonly) #6 {
  %3 = icmp ne i8* %0, null
  %4 = icmp ne i8* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %48

6:                                                ; preds = %2
  %7 = icmp eq i8* %0, %1
  br i1 %7, label %48, label %8

8:                                                ; preds = %6
  %9 = load i8, i8* %1, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %48, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %1, i64 1
  br label %13

13:                                               ; preds = %20, %11
  %14 = phi i8* [ %0, %11 ], [ %15, %20 ]
  %15 = getelementptr inbounds i8, i8* %14, i64 1
  %16 = load i8, i8* %14, align 1
  %17 = icmp eq i8 %16, 0
  %18 = icmp eq i8 %16, %9
  %19 = or i1 %17, %18
  br i1 %19, label %21, label %20

20:                                               ; preds = %30, %13, %22
  br label %13

21:                                               ; preds = %13
  br i1 %18, label %22, label %48

22:                                               ; preds = %21
  %23 = load i8, i8* %15, align 1
  %24 = load i8, i8* %12, align 1
  %25 = icmp eq i8 %23, 0
  %26 = icmp eq i8 %24, 0
  %27 = or i1 %25, %26
  %28 = icmp eq i8 %23, %24
  %29 = or i1 %28, %27
  br i1 %29, label %39, label %20

30:                                               ; preds = %39
  %31 = getelementptr inbounds i8, i8* %42, i64 1
  %32 = load i8, i8* %45, align 1
  %33 = load i8, i8* %31, align 1
  %34 = icmp eq i8 %32, 0
  %35 = icmp eq i8 %33, 0
  %36 = or i1 %34, %35
  %37 = icmp eq i8 %32, %33
  %38 = or i1 %37, %36
  br i1 %38, label %39, label %20

39:                                               ; preds = %22, %30
  %40 = phi i1 [ %35, %30 ], [ %26, %22 ]
  %41 = phi i1 [ %34, %30 ], [ %25, %22 ]
  %42 = phi i8* [ %31, %30 ], [ %12, %22 ]
  %43 = phi i8* [ %45, %30 ], [ %15, %22 ]
  %44 = or i1 %41, %40
  %45 = getelementptr inbounds i8, i8* %43, i64 1
  br i1 %44, label %46, label %30

46:                                               ; preds = %39
  %47 = select i1 %40, i8* %14, i8* null
  br label %48

48:                                               ; preds = %21, %8, %46, %6, %2
  %49 = phi i8* [ null, %2 ], [ %0, %6 ], [ %47, %46 ], [ null, %8 ], [ null, %21 ]
  ret i8* %49
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @IA__FcUtf8ToUcs4(i8*, i32* nocapture, i32) #9 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %62, label %5

5:                                                ; preds = %3
  %6 = load i8, i8* %0, align 1
  %7 = zext i8 %6 to i32
  %8 = icmp slt i8 %6, 0
  br i1 %8, label %9, label %37

9:                                                ; preds = %5
  %10 = and i32 %7, 64
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %62, label %12

12:                                               ; preds = %9
  %13 = and i32 %7, 32
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %12
  %16 = and i32 %7, 31
  br label %37

17:                                               ; preds = %12
  %18 = and i32 %7, 16
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  %21 = and i32 %7, 15
  br label %37

22:                                               ; preds = %17
  %23 = and i32 %7, 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = and i32 %7, 7
  br label %37

27:                                               ; preds = %22
  %28 = and i32 %7, 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = and i32 %7, 3
  br label %37

32:                                               ; preds = %27
  %33 = and i32 %7, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %62

35:                                               ; preds = %32
  %36 = and i32 %7, 1
  br label %37

37:                                               ; preds = %5, %20, %30, %35, %25, %15
  %38 = phi i32 [ 5, %35 ], [ 4, %30 ], [ 3, %25 ], [ 2, %20 ], [ 1, %15 ], [ 0, %5 ]
  %39 = phi i32 [ %36, %35 ], [ %31, %30 ], [ %26, %25 ], [ %21, %20 ], [ %16, %15 ], [ %7, %5 ]
  %40 = icmp slt i32 %38, %2
  br i1 %40, label %41, label %62

41:                                               ; preds = %37
  %42 = getelementptr inbounds i8, i8* %0, i64 1
  %43 = icmp eq i32 %38, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %41
  %45 = load i8, i8* %42, align 1
  %46 = zext i8 %45 to i32
  %47 = and i32 %46, 192
  %48 = icmp eq i32 %47, 128
  br i1 %48, label %49, label %62

49:                                               ; preds = %44
  %50 = shl nuw nsw i32 %39, 6
  %51 = and i32 %46, 63
  %52 = or i32 %51, %50
  %53 = getelementptr inbounds i8, i8* %0, i64 2
  %54 = icmp eq i32 %38, 1
  br i1 %54, label %55, label %64

55:                                               ; preds = %49, %69, %80, %91, %102, %41
  %56 = phi i32 [ %39, %41 ], [ %52, %49 ], [ %72, %69 ], [ %83, %80 ], [ %94, %91 ], [ %105, %102 ]
  %57 = phi i8* [ %42, %41 ], [ %53, %49 ], [ %73, %69 ], [ %84, %80 ], [ %95, %91 ], [ %106, %102 ]
  store i32 %56, i32* %1, align 4
  %58 = ptrtoint i8* %57 to i64
  %59 = ptrtoint i8* %0 to i64
  %60 = sub i64 %58, %59
  %61 = trunc i64 %60 to i32
  br label %62

62:                                               ; preds = %44, %64, %75, %86, %97, %37, %32, %9, %3, %55
  %63 = phi i32 [ %61, %55 ], [ 0, %3 ], [ -1, %9 ], [ -1, %32 ], [ -1, %37 ], [ -1, %97 ], [ -1, %86 ], [ -1, %75 ], [ -1, %64 ], [ -1, %44 ]
  ret i32 %63

64:                                               ; preds = %49
  %65 = load i8, i8* %53, align 1
  %66 = zext i8 %65 to i32
  %67 = and i32 %66, 192
  %68 = icmp eq i32 %67, 128
  br i1 %68, label %69, label %62

69:                                               ; preds = %64
  %70 = shl nuw nsw i32 %52, 6
  %71 = and i32 %66, 63
  %72 = or i32 %71, %70
  %73 = getelementptr inbounds i8, i8* %0, i64 3
  %74 = icmp eq i32 %38, 2
  br i1 %74, label %55, label %75

75:                                               ; preds = %69
  %76 = load i8, i8* %73, align 1
  %77 = zext i8 %76 to i32
  %78 = and i32 %77, 192
  %79 = icmp eq i32 %78, 128
  br i1 %79, label %80, label %62

80:                                               ; preds = %75
  %81 = shl nuw nsw i32 %72, 6
  %82 = and i32 %77, 63
  %83 = or i32 %82, %81
  %84 = getelementptr inbounds i8, i8* %0, i64 4
  %85 = icmp eq i32 %38, 3
  br i1 %85, label %55, label %86

86:                                               ; preds = %80
  %87 = load i8, i8* %84, align 1
  %88 = zext i8 %87 to i32
  %89 = and i32 %88, 192
  %90 = icmp eq i32 %89, 128
  br i1 %90, label %91, label %62

91:                                               ; preds = %86
  %92 = shl i32 %83, 6
  %93 = and i32 %88, 63
  %94 = or i32 %93, %92
  %95 = getelementptr inbounds i8, i8* %0, i64 5
  %96 = icmp eq i32 %38, 4
  br i1 %96, label %55, label %97

97:                                               ; preds = %91
  %98 = load i8, i8* %95, align 1
  %99 = zext i8 %98 to i32
  %100 = and i32 %99, 192
  %101 = icmp eq i32 %100, 128
  br i1 %101, label %102, label %62

102:                                              ; preds = %97
  %103 = shl i32 %94, 6
  %104 = and i32 %99, 63
  %105 = or i32 %104, %103
  %106 = getelementptr inbounds i8, i8* %0, i64 6
  br label %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcUtf8Len(i8*, i32, i32* nocapture, i32* nocapture) #2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  store i32 0, i32* %2, align 4
  br label %84

7:                                                ; preds = %4, %69
  %8 = phi i32 [ %71, %69 ], [ 0, %4 ]
  %9 = phi i32 [ %76, %69 ], [ 0, %4 ]
  %10 = phi i8* [ %74, %69 ], [ %0, %4 ]
  %11 = phi i32 [ %75, %69 ], [ %1, %4 ]
  %12 = load i8, i8* %10, align 1
  %13 = zext i8 %12 to i32
  %14 = icmp slt i8 %12, 0
  br i1 %14, label %15, label %43

15:                                               ; preds = %7
  %16 = and i32 %13, 64
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %85, label %18

18:                                               ; preds = %15
  %19 = and i32 %13, 32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = and i32 %13, 31
  br label %43

23:                                               ; preds = %18
  %24 = and i32 %13, 16
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = and i32 %13, 15
  br label %43

28:                                               ; preds = %23
  %29 = and i32 %13, 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = and i32 %13, 7
  br label %43

33:                                               ; preds = %28
  %34 = and i32 %13, 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = and i32 %13, 3
  br label %43

38:                                               ; preds = %33
  %39 = and i32 %13, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %85

41:                                               ; preds = %38
  %42 = and i32 %13, 1
  br label %43

43:                                               ; preds = %41, %36, %31, %26, %21, %7
  %44 = phi i32 [ 5, %41 ], [ 4, %36 ], [ 3, %31 ], [ 2, %26 ], [ 1, %21 ], [ 0, %7 ]
  %45 = phi i32 [ %42, %41 ], [ %37, %36 ], [ %32, %31 ], [ %27, %26 ], [ %22, %21 ], [ %13, %7 ]
  %46 = icmp slt i32 %44, %11
  br i1 %46, label %47, label %85

47:                                               ; preds = %43
  %48 = getelementptr inbounds i8, i8* %10, i64 1
  %49 = icmp eq i32 %44, 0
  br i1 %49, label %61, label %50

50:                                               ; preds = %47
  %51 = load i8, i8* %48, align 1
  %52 = zext i8 %51 to i32
  %53 = and i32 %52, 192
  %54 = icmp eq i32 %53, 128
  br i1 %54, label %55, label %85

55:                                               ; preds = %50
  %56 = shl nuw nsw i32 %45, 6
  %57 = and i32 %52, 63
  %58 = or i32 %57, %56
  %59 = getelementptr inbounds i8, i8* %10, i64 2
  %60 = icmp eq i32 %44, 1
  br i1 %60, label %61, label %87

61:                                               ; preds = %55, %92, %103, %114, %125, %47
  %62 = phi i32 [ %45, %47 ], [ %58, %55 ], [ %95, %92 ], [ %106, %103 ], [ %117, %114 ], [ %128, %125 ]
  %63 = phi i8* [ %48, %47 ], [ %59, %55 ], [ %96, %92 ], [ %107, %103 ], [ %118, %114 ], [ %129, %125 ]
  %64 = ptrtoint i8* %63 to i64
  %65 = ptrtoint i8* %10 to i64
  %66 = sub i64 %64, %65
  %67 = trunc i64 %66 to i32
  %68 = icmp slt i32 %67, 1
  br i1 %68, label %85, label %69

69:                                               ; preds = %61
  %70 = icmp ugt i32 %62, %8
  %71 = select i1 %70, i32 %62, i32 %8
  %72 = shl i64 %66, 32
  %73 = ashr exact i64 %72, 32
  %74 = getelementptr inbounds i8, i8* %10, i64 %73
  %75 = sub nsw i32 %11, %67
  %76 = add nuw nsw i32 %9, 1
  %77 = icmp eq i32 %75, 0
  br i1 %77, label %78, label %7

78:                                               ; preds = %69
  store i32 %76, i32* %2, align 4
  %79 = icmp ugt i32 %71, 65535
  br i1 %79, label %80, label %81

80:                                               ; preds = %78
  store i32 4, i32* %3, align 4
  br label %85

81:                                               ; preds = %78
  %82 = icmp ugt i32 %71, 256
  br i1 %82, label %83, label %84

83:                                               ; preds = %81
  store i32 2, i32* %3, align 4
  br label %85

84:                                               ; preds = %6, %81
  store i32 1, i32* %3, align 4
  br label %85

85:                                               ; preds = %43, %38, %15, %61, %50, %87, %98, %109, %120, %80, %84, %83
  %86 = phi i32 [ 1, %83 ], [ 1, %84 ], [ 1, %80 ], [ 0, %120 ], [ 0, %109 ], [ 0, %98 ], [ 0, %87 ], [ 0, %50 ], [ 0, %61 ], [ 0, %15 ], [ 0, %38 ], [ 0, %43 ]
  ret i32 %86

87:                                               ; preds = %55
  %88 = load i8, i8* %59, align 1
  %89 = zext i8 %88 to i32
  %90 = and i32 %89, 192
  %91 = icmp eq i32 %90, 128
  br i1 %91, label %92, label %85

92:                                               ; preds = %87
  %93 = shl nuw nsw i32 %58, 6
  %94 = and i32 %89, 63
  %95 = or i32 %94, %93
  %96 = getelementptr inbounds i8, i8* %10, i64 3
  %97 = icmp eq i32 %44, 2
  br i1 %97, label %61, label %98

98:                                               ; preds = %92
  %99 = load i8, i8* %96, align 1
  %100 = zext i8 %99 to i32
  %101 = and i32 %100, 192
  %102 = icmp eq i32 %101, 128
  br i1 %102, label %103, label %85

103:                                              ; preds = %98
  %104 = shl nuw nsw i32 %95, 6
  %105 = and i32 %100, 63
  %106 = or i32 %105, %104
  %107 = getelementptr inbounds i8, i8* %10, i64 4
  %108 = icmp eq i32 %44, 3
  br i1 %108, label %61, label %109

109:                                              ; preds = %103
  %110 = load i8, i8* %107, align 1
  %111 = zext i8 %110 to i32
  %112 = and i32 %111, 192
  %113 = icmp eq i32 %112, 128
  br i1 %113, label %114, label %85

114:                                              ; preds = %109
  %115 = shl i32 %106, 6
  %116 = and i32 %111, 63
  %117 = or i32 %116, %115
  %118 = getelementptr inbounds i8, i8* %10, i64 5
  %119 = icmp eq i32 %44, 4
  br i1 %119, label %61, label %120

120:                                              ; preds = %114
  %121 = load i8, i8* %118, align 1
  %122 = zext i8 %121 to i32
  %123 = and i32 %122, 192
  %124 = icmp eq i32 %123, 128
  br i1 %124, label %125, label %85

125:                                              ; preds = %120
  %126 = shl i32 %117, 6
  %127 = and i32 %122, 63
  %128 = or i32 %127, %126
  %129 = getelementptr inbounds i8, i8* %10, i64 6
  br label %61
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @IA__FcUcs4ToUtf8(i32, i8*) #10 {
  %3 = icmp ult i32 %0, 128
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = icmp ult i32 %0, 2048
  br i1 %5, label %17, label %6

6:                                                ; preds = %4
  %7 = icmp ult i32 %0, 65536
  br i1 %7, label %17, label %8

8:                                                ; preds = %6
  %9 = icmp ult i32 %0, 2097152
  br i1 %9, label %17, label %10

10:                                               ; preds = %8
  %11 = icmp ult i32 %0, 67108864
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = icmp sgt i32 %0, -1
  br i1 %13, label %17, label %40

14:                                               ; preds = %2
  %15 = trunc i32 %0 to i8
  store i8 %15, i8* %1, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 1
  br label %34

17:                                               ; preds = %12, %10, %8, %6, %4
  %18 = phi i32 [ 6, %4 ], [ 12, %6 ], [ 18, %8 ], [ 24, %10 ], [ 30, %12 ]
  %19 = phi i8 [ 31, %4 ], [ 15, %6 ], [ 7, %8 ], [ 3, %10 ], [ 1, %12 ]
  %20 = phi i8 [ -64, %4 ], [ -32, %6 ], [ -16, %8 ], [ -8, %10 ], [ -4, %12 ]
  %21 = phi i32 [ 0, %4 ], [ 6, %6 ], [ 12, %8 ], [ 18, %10 ], [ 24, %12 ]
  %22 = lshr i32 %0, %18
  %23 = trunc i32 %22 to i8
  %24 = and i8 %19, %23
  %25 = or i8 %24, %20
  store i8 %25, i8* %1, align 1
  %26 = getelementptr inbounds i8, i8* %1, i64 1
  %27 = lshr i32 %0, %21
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 63
  %30 = or i8 %29, -128
  store i8 %30, i8* %26, align 1
  %31 = add nsw i32 %21, -6
  %32 = getelementptr inbounds i8, i8* %1, i64 2
  %33 = icmp sgt i32 %31, -1
  br i1 %33, label %42, label %34

34:                                               ; preds = %17, %42, %50, %58, %66, %14
  %35 = phi i8* [ %16, %14 ], [ %32, %17 ], [ %48, %42 ], [ %56, %50 ], [ %64, %58 ], [ %71, %66 ]
  %36 = ptrtoint i8* %35 to i64
  %37 = ptrtoint i8* %1 to i64
  %38 = sub i64 %36, %37
  %39 = trunc i64 %38 to i32
  br label %40

40:                                               ; preds = %12, %34
  %41 = phi i32 [ %39, %34 ], [ 0, %12 ]
  ret i32 %41

42:                                               ; preds = %17
  %43 = lshr i32 %0, %31
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 63
  %46 = or i8 %45, -128
  store i8 %46, i8* %32, align 1
  %47 = add nsw i32 %21, -12
  %48 = getelementptr inbounds i8, i8* %1, i64 3
  %49 = icmp sgt i32 %47, -1
  br i1 %49, label %50, label %34

50:                                               ; preds = %42
  %51 = lshr i32 %0, %47
  %52 = trunc i32 %51 to i8
  %53 = and i8 %52, 63
  %54 = or i8 %53, -128
  store i8 %54, i8* %48, align 1
  %55 = add nsw i32 %21, -18
  %56 = getelementptr inbounds i8, i8* %1, i64 4
  %57 = icmp sgt i32 %55, -1
  br i1 %57, label %58, label %34

58:                                               ; preds = %50
  %59 = lshr i32 %0, %55
  %60 = trunc i32 %59 to i8
  %61 = and i8 %60, 63
  %62 = or i8 %61, -128
  store i8 %62, i8* %56, align 1
  %63 = add nsw i32 %21, -24
  %64 = getelementptr inbounds i8, i8* %1, i64 5
  %65 = icmp sgt i32 %63, -1
  br i1 %65, label %66, label %34

66:                                               ; preds = %58
  %67 = lshr i32 %0, %63
  %68 = trunc i32 %67 to i8
  %69 = and i8 %68, 63
  %70 = or i8 %69, -128
  store i8 %70, i8* %64, align 1
  %71 = getelementptr inbounds i8, i8* %1, i64 6
  br label %34
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @IA__FcUtf16ToUcs4(i8*, i32, i32* nocapture, i32) #9 {
  %5 = icmp slt i32 %3, 2
  br i1 %5, label %49, label %6

6:                                                ; preds = %4
  %7 = icmp eq i32 %1, 0
  %8 = xor i1 %7, true
  %9 = zext i1 %8 to i64
  %10 = getelementptr inbounds i8, i8* %0, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = shl nuw nsw i32 %12, 8
  %14 = zext i1 %7 to i64
  %15 = getelementptr inbounds i8, i8* %0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = or i32 %13, %17
  %19 = getelementptr inbounds i8, i8* %0, i64 2
  %20 = and i32 %12, 252
  %21 = icmp eq i32 %20, 216
  br i1 %21, label %22, label %42

22:                                               ; preds = %6
  %23 = icmp slt i32 %3, 4
  br i1 %23, label %49, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds i8, i8* %19, i64 %9
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = and i32 %27, 252
  %29 = icmp eq i32 %28, 220
  br i1 %29, label %30, label %49

30:                                               ; preds = %24
  %31 = shl nuw nsw i32 %27, 8
  %32 = getelementptr inbounds i8, i8* %19, i64 %14
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds i8, i8* %0, i64 4
  %36 = shl nuw nsw i32 %18, 10
  %37 = and i32 %36, 1047552
  %38 = and i32 %31, 768
  %39 = or i32 %38, %37
  %40 = or i32 %39, %34
  %41 = add nuw nsw i32 %40, 65536
  br label %42

42:                                               ; preds = %6, %30
  %43 = phi i8* [ %35, %30 ], [ %19, %6 ]
  %44 = phi i32 [ %41, %30 ], [ %18, %6 ]
  store i32 %44, i32* %2, align 4
  %45 = ptrtoint i8* %43 to i64
  %46 = ptrtoint i8* %0 to i64
  %47 = sub i64 %45, %46
  %48 = trunc i64 %47 to i32
  br label %49

49:                                               ; preds = %24, %22, %4, %42
  %50 = phi i32 [ %48, %42 ], [ 0, %4 ], [ 0, %22 ], [ 0, %24 ]
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcUtf16Len(i8*, i32, i32, i32* nocapture, i32* nocapture) #2 {
  %6 = icmp eq i32 %2, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  store i32 0, i32* %3, align 4
  br label %74

8:                                                ; preds = %5
  %9 = icmp eq i32 %1, 0
  %10 = xor i1 %9, true
  %11 = zext i1 %10 to i64
  %12 = zext i1 %9 to i64
  br label %13

13:                                               ; preds = %8, %59
  %14 = phi i32 [ 0, %8 ], [ %61, %59 ]
  %15 = phi i32 [ 0, %8 ], [ %66, %59 ]
  %16 = phi i8* [ %0, %8 ], [ %64, %59 ]
  %17 = phi i32 [ %2, %8 ], [ %65, %59 ]
  %18 = icmp slt i32 %17, 2
  br i1 %18, label %75, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds i8, i8* %16, i64 %11
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = shl nuw nsw i32 %22, 8
  %24 = getelementptr inbounds i8, i8* %16, i64 %12
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = or i32 %23, %26
  %28 = getelementptr inbounds i8, i8* %16, i64 2
  %29 = and i32 %22, 252
  %30 = icmp eq i32 %29, 216
  br i1 %30, label %31, label %51

31:                                               ; preds = %19
  %32 = icmp slt i32 %17, 4
  br i1 %32, label %75, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds i8, i8* %28, i64 %11
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = and i32 %36, 252
  %38 = icmp eq i32 %37, 220
  br i1 %38, label %39, label %75

39:                                               ; preds = %33
  %40 = shl nuw nsw i32 %36, 8
  %41 = getelementptr inbounds i8, i8* %28, i64 %12
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = getelementptr inbounds i8, i8* %16, i64 4
  %45 = shl nuw nsw i32 %27, 10
  %46 = and i32 %45, 1047552
  %47 = and i32 %40, 768
  %48 = or i32 %47, %46
  %49 = or i32 %48, %43
  %50 = add nuw nsw i32 %49, 65536
  br label %51

51:                                               ; preds = %19, %39
  %52 = phi i8* [ %44, %39 ], [ %28, %19 ]
  %53 = phi i32 [ %50, %39 ], [ %27, %19 ]
  %54 = ptrtoint i8* %52 to i64
  %55 = ptrtoint i8* %16 to i64
  %56 = sub i64 %54, %55
  %57 = trunc i64 %56 to i32
  %58 = icmp slt i32 %57, 1
  br i1 %58, label %75, label %59

59:                                               ; preds = %51
  %60 = icmp ugt i32 %53, %14
  %61 = select i1 %60, i32 %53, i32 %14
  %62 = shl i64 %56, 32
  %63 = ashr exact i64 %62, 32
  %64 = getelementptr inbounds i8, i8* %16, i64 %63
  %65 = sub nsw i32 %17, %57
  %66 = add nuw nsw i32 %15, 1
  %67 = icmp eq i32 %65, 0
  br i1 %67, label %68, label %13

68:                                               ; preds = %59
  store i32 %66, i32* %3, align 4
  %69 = icmp ugt i32 %61, 65535
  br i1 %69, label %70, label %71

70:                                               ; preds = %68
  store i32 4, i32* %4, align 4
  br label %75

71:                                               ; preds = %68
  %72 = icmp ugt i32 %61, 256
  br i1 %72, label %73, label %74

73:                                               ; preds = %71
  store i32 2, i32* %4, align 4
  br label %75

74:                                               ; preds = %7, %71
  store i32 1, i32* %4, align 4
  br label %75

75:                                               ; preds = %33, %31, %13, %51, %70, %74, %73
  %76 = phi i32 [ 1, %73 ], [ 1, %74 ], [ 1, %70 ], [ 0, %51 ], [ 0, %13 ], [ 0, %31 ], [ 0, %33 ]
  ret i32 %76
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @FcStrBufInit(%struct._FcStrBuf*, i8*, i32) local_unnamed_addr #10 {
  %4 = icmp eq i8* %1, null
  %5 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 5, i64 0
  %6 = select i1 %4, i8* %5, i8* %1
  %7 = select i1 %4, i32 128, i32 %2
  %8 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 4
  store i32 %7, i32* %9, align 4
  %10 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 1
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 2
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 3
  store i32 0, i32* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FcStrBufDestroy(%struct._FcStrBuf*) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @free(i8* %7) #11
  %8 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 5, i64 0
  store i8* %8, i8** %6, align 8
  %9 = bitcast i32* %2 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 128>, <4 x i32>* %9, align 8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @FcStrBufDone(%struct._FcStrBuf*) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %17

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 1
  %9 = sext i32 %8 to i64
  %10 = tail call noalias i8* @malloc(i64 %9) #11
  %11 = icmp eq i8* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = sext i32 %7 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %10, i8* align 1 %14, i64 %15, i1 false)
  %16 = getelementptr inbounds i8, i8* %10, i64 %15
  store i8 0, i8* %16, align 1
  br label %17

17:                                               ; preds = %1, %5, %12
  %18 = phi i8* [ null, %5 ], [ %10, %12 ], [ null, %1 ]
  %19 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @free(i8* %24) #11
  %25 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 5, i64 0
  store i8* %25, i8** %23, align 8
  %26 = bitcast i32* %19 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 128>, <4 x i32>* %26, align 8
  br label %27

27:                                               ; preds = %17, %22
  ret i8* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @FcStrBufDoneStatic(%struct._FcStrBuf* nocapture) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %42

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %54

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %27

18:                                               ; preds = %14
  %19 = add nsw i32 %3, 64
  %20 = sext i32 %19 to i64
  %21 = tail call noalias i8* @malloc(i64 %20) #11
  %22 = icmp eq i8* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %18
  store i32 1, i32* %15, align 8
  %24 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = sext i32 %3 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %25, i64 %26, i1 false) #11
  br label %37

27:                                               ; preds = %14
  %28 = shl nsw i32 %3, 1
  %29 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = sext i32 %28 to i64
  %32 = tail call i8* @realloc(i8* %30, i64 %31) #11
  %33 = icmp eq i8* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %27
  %35 = load i32, i32* %2, align 8
  br label %37

36:                                               ; preds = %27, %18
  store i32 1, i32* %11, align 4
  br label %54

37:                                               ; preds = %34, %23
  %38 = phi i32 [ %3, %23 ], [ %35, %34 ]
  %39 = phi i32 [ %19, %23 ], [ %28, %34 ]
  %40 = phi i8* [ %21, %23 ], [ %32, %34 ]
  store i32 %39, i32* %4, align 4
  %41 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 0
  store i8* %40, i8** %41, align 8
  br label %42

42:                                               ; preds = %7, %37
  %43 = phi i32 [ %3, %7 ], [ %38, %37 ]
  %44 = phi i8* [ %9, %7 ], [ %40, %37 ]
  %45 = add nsw i32 %43, 1
  store i32 %45, i32* %2, align 8
  %46 = sext i32 %43 to i64
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %42
  %52 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 0
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %36, %10, %42, %51
  %55 = phi i8* [ %53, %51 ], [ null, %42 ], [ null, %10 ], [ null, %36 ]
  ret i8* %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcStrBufChar(%struct._FcStrBuf* nocapture, i8 zeroext) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  br label %43

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %49

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %28

19:                                               ; preds = %15
  %20 = add nsw i32 %4, 64
  %21 = sext i32 %20 to i64
  %22 = tail call noalias i8* @malloc(i64 %21) #11
  %23 = icmp eq i8* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %19
  store i32 1, i32* %16, align 8
  %25 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = sext i32 %4 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* align 1 %26, i64 %27, i1 false)
  br label %38

28:                                               ; preds = %15
  %29 = shl nsw i32 %4, 1
  %30 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = sext i32 %29 to i64
  %33 = tail call i8* @realloc(i8* %31, i64 %32) #11
  %34 = icmp eq i8* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %28
  %36 = load i32, i32* %3, align 8
  br label %38

37:                                               ; preds = %19, %28
  store i32 1, i32* %12, align 4
  br label %49

38:                                               ; preds = %35, %24
  %39 = phi i32 [ %4, %24 ], [ %36, %35 ]
  %40 = phi i32 [ %20, %24 ], [ %29, %35 ]
  %41 = phi i8* [ %22, %24 ], [ %33, %35 ]
  store i32 %40, i32* %5, align 4
  %42 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 0
  store i8* %41, i8** %42, align 8
  br label %43

43:                                               ; preds = %8, %38
  %44 = phi i32 [ %4, %8 ], [ %39, %38 ]
  %45 = phi i8* [ %10, %8 ], [ %41, %38 ]
  %46 = add nsw i32 %44, 1
  store i32 %46, i32* %3, align 8
  %47 = sext i32 %44 to i64
  %48 = getelementptr inbounds i8, i8* %45, i64 %47
  store i8 %1, i8* %48, align 1
  br label %49

49:                                               ; preds = %37, %11, %43
  %50 = phi i32 [ 1, %43 ], [ 0, %11 ], [ 0, %37 ]
  ret i32 %50
}

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcStrBufString(%struct._FcStrBuf* nocapture, i8* nocapture readonly) local_unnamed_addr #2 {
  %3 = load i8, i8* %1, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %55, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 3
  %7 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 4
  %8 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 0
  %9 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 2
  %10 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 1
  br label %11

11:                                               ; preds = %5, %47
  %12 = phi i8 [ %3, %5 ], [ %53, %47 ]
  %13 = phi i8* [ %1, %5 ], [ %14, %47 ]
  %14 = getelementptr inbounds i8, i8* %13, i64 1
  %15 = load i32, i32* %6, align 8
  %16 = load i32, i32* %7, align 4
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  %19 = load i8*, i8** %8, align 8
  br label %47

20:                                               ; preds = %11
  %21 = load i32, i32* %9, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %55

23:                                               ; preds = %20
  %24 = load i32, i32* %10, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %23
  %27 = add nsw i32 %15, 64
  %28 = sext i32 %27 to i64
  %29 = tail call noalias i8* @malloc(i64 %28) #11
  %30 = icmp eq i8* %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %26
  store i32 1, i32* %10, align 8
  %32 = load i8*, i8** %8, align 8
  %33 = sext i32 %15 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* align 1 %32, i64 %33, i1 false) #11
  br label %43

34:                                               ; preds = %23
  %35 = shl nsw i32 %15, 1
  %36 = load i8*, i8** %8, align 8
  %37 = sext i32 %35 to i64
  %38 = tail call i8* @realloc(i8* %36, i64 %37) #11
  %39 = icmp eq i8* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = load i32, i32* %6, align 8
  br label %43

42:                                               ; preds = %34, %26
  store i32 1, i32* %9, align 4
  br label %55

43:                                               ; preds = %40, %31
  %44 = phi i32 [ %15, %31 ], [ %41, %40 ]
  %45 = phi i32 [ %27, %31 ], [ %35, %40 ]
  %46 = phi i8* [ %29, %31 ], [ %38, %40 ]
  store i32 %45, i32* %7, align 4
  store i8* %46, i8** %8, align 8
  br label %47

47:                                               ; preds = %18, %43
  %48 = phi i32 [ %15, %18 ], [ %44, %43 ]
  %49 = phi i8* [ %19, %18 ], [ %46, %43 ]
  %50 = add nsw i32 %48, 1
  store i32 %50, i32* %6, align 8
  %51 = sext i32 %48 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  store i8 %12, i8* %52, align 1
  %53 = load i8, i8* %14, align 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %11

55:                                               ; preds = %47, %20, %2, %42
  %56 = phi i32 [ 0, %42 ], [ 1, %2 ], [ 1, %47 ], [ 0, %20 ]
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcStrBufData(%struct._FcStrBuf* nocapture, i8* nocapture readonly, i32) local_unnamed_addr #2 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %56

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 3
  %7 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 4
  %8 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 0
  %9 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 2
  %10 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %0, i64 0, i32 1
  br label %11

11:                                               ; preds = %5, %49
  %12 = phi i32 [ %2, %5 ], [ %14, %49 ]
  %13 = phi i8* [ %1, %5 ], [ %15, %49 ]
  %14 = add nsw i32 %12, -1
  %15 = getelementptr inbounds i8, i8* %13, i64 1
  %16 = load i8, i8* %13, align 1
  %17 = load i32, i32* %6, align 8
  %18 = load i32, i32* %7, align 4
  %19 = icmp eq i32 %17, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %11
  %21 = load i8*, i8** %8, align 8
  br label %49

22:                                               ; preds = %11
  %23 = load i32, i32* %9, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %56

25:                                               ; preds = %22
  %26 = load i32, i32* %10, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %36

28:                                               ; preds = %25
  %29 = add nsw i32 %17, 64
  %30 = sext i32 %29 to i64
  %31 = tail call noalias i8* @malloc(i64 %30) #11
  %32 = icmp eq i8* %31, null
  br i1 %32, label %44, label %33

33:                                               ; preds = %28
  store i32 1, i32* %10, align 8
  %34 = load i8*, i8** %8, align 8
  %35 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* align 1 %34, i64 %35, i1 false) #11
  br label %45

36:                                               ; preds = %25
  %37 = shl nsw i32 %17, 1
  %38 = load i8*, i8** %8, align 8
  %39 = sext i32 %37 to i64
  %40 = tail call i8* @realloc(i8* %38, i64 %39) #11
  %41 = icmp eq i8* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %36
  %43 = load i32, i32* %6, align 8
  br label %45

44:                                               ; preds = %36, %28
  store i32 1, i32* %9, align 4
  br label %56

45:                                               ; preds = %42, %33
  %46 = phi i32 [ %17, %33 ], [ %43, %42 ]
  %47 = phi i32 [ %29, %33 ], [ %37, %42 ]
  %48 = phi i8* [ %31, %33 ], [ %40, %42 ]
  store i32 %47, i32* %7, align 4
  store i8* %48, i8** %8, align 8
  br label %49

49:                                               ; preds = %20, %45
  %50 = phi i32 [ %17, %20 ], [ %46, %45 ]
  %51 = phi i8* [ %21, %20 ], [ %48, %45 ]
  %52 = add nsw i32 %50, 1
  store i32 %52, i32* %6, align 8
  %53 = sext i32 %50 to i64
  %54 = getelementptr inbounds i8, i8* %51, i64 %53
  store i8 %16, i8* %54, align 1
  %55 = icmp sgt i32 %14, 0
  br i1 %55, label %11, label %56

56:                                               ; preds = %49, %22, %3, %44
  %57 = phi i32 [ 0, %44 ], [ 1, %3 ], [ 1, %49 ], [ 0, %22 ]
  ret i32 %57
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @FcStrUsesHome(i8* nocapture readonly) local_unnamed_addr #6 {
  %2 = load i8, i8* %0, align 1
  %3 = icmp eq i8 %2, 126
  %4 = zext i1 %3 to i32
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @FcStrIsAbsoluteFilename(i8* nocapture readonly) local_unnamed_addr #6 {
  %2 = load i8, i8* %0, align 1
  %3 = icmp eq i8 %2, 47
  %4 = zext i1 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @IA__FcStrBuildFilename(i8* readonly, ...) #2 {
  %2 = alloca [1 x %struct.__va_list_tag], align 16
  %3 = bitcast [1 x %struct.__va_list_tag]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #11
  %4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %2, i64 0, i64 0, i32 0
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %2, i64 0, i64 0, i32 2
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %2, i64 0, i64 0, i32 3
  %7 = icmp eq i8* %0, null
  %8 = bitcast [1 x %struct.__va_list_tag]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 24, i1 false)
  br i1 %7, label %188, label %9

9:                                                ; preds = %1
  %10 = tail call noalias i8* @malloc(i64 32) #11
  %11 = icmp eq i8* %10, null
  br i1 %11, label %188, label %12

12:                                               ; preds = %9
  %13 = bitcast i8* %10 to %struct._FcStrSet*
  %14 = bitcast i8* %10 to i32*
  store i32 1, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %10, i64 4
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %10, i64 8
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %10, i64 16
  %20 = bitcast i8* %19 to i8***
  store i8** null, i8*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %10, i64 24
  %22 = bitcast i8* %21 to i32*
  store i32 3, i32* %22, align 8
  %23 = tail call noalias i8* @strdup(i8* nonnull %0) #11
  %24 = icmp eq i8* %23, null
  br i1 %24, label %161, label %25

25:                                               ; preds = %12
  %26 = tail call fastcc i32 @_FcStrSetAppend(%struct._FcStrSet* nonnull %13, i8* nonnull %23) #11
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @free(i8* nonnull %23) #11
  br label %161

29:                                               ; preds = %25
  call void @llvm.va_start(i8* nonnull %3)
  br label %30

30:                                               ; preds = %49, %29
  %31 = load i32, i32* %4, align 16
  %32 = icmp ult i32 %31, 41
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = load i8*, i8** %6, align 16
  %35 = sext i32 %31 to i64
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = add nuw nsw i32 %31, 8
  store i32 %37, i32* %4, align 16
  br label %41

38:                                               ; preds = %30
  %39 = load i8*, i8** %5, align 8
  %40 = getelementptr i8, i8* %39, i64 8
  store i8* %40, i8** %5, align 8
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i8* [ %36, %33 ], [ %39, %38 ]
  %43 = bitcast i8* %42 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = call noalias i8* @strdup(i8* nonnull %44) #11
  %48 = icmp eq i8* %47, null
  br i1 %48, label %159, label %49

49:                                               ; preds = %46
  %50 = call fastcc i32 @_FcStrSetAppend(%struct._FcStrSet* nonnull %13, i8* nonnull %47) #11
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %30

52:                                               ; preds = %49
  call void @free(i8* nonnull %47) #11
  br label %159

53:                                               ; preds = %41
  %54 = call noalias i8* @malloc(i64 16) #11
  %55 = icmp eq i8* %54, null
  br i1 %55, label %66, label %56

56:                                               ; preds = %53
  %57 = bitcast i8* %54 to %struct._FcStrList*
  %58 = bitcast i8* %54 to i8**
  store i8* %10, i8** %58, align 8
  %59 = load i32, i32* %14, align 4
  %60 = icmp eq i32 %59, -1
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = atomicrmw add i32* %14, i32 1 seq_cst
  br label %63

63:                                               ; preds = %61, %56
  %64 = getelementptr inbounds i8, i8* %54, i64 8
  %65 = bitcast i8* %64 to i32*
  store i32 0, i32* %65, align 8
  br label %66

66:                                               ; preds = %53, %63
  %67 = phi %struct._FcStrList* [ %57, %63 ], [ null, %53 ]
  %68 = getelementptr inbounds %struct._FcStrList, %struct._FcStrList* %67, i64 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %struct._FcStrList, %struct._FcStrList* %67, i64 0, i32 0
  %71 = load %struct._FcStrSet*, %struct._FcStrSet** %70, align 8
  %72 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %71, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp slt i32 %69, %73
  br i1 %74, label %75, label %92

75:                                               ; preds = %66
  %76 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %71, i64 0, i32 3
  br label %77

77:                                               ; preds = %75, %86
  %78 = phi i32 [ %81, %86 ], [ %69, %75 ]
  %79 = phi i64 [ %89, %86 ], [ 0, %75 ]
  %80 = load i8**, i8*** %76, align 8
  %81 = add nsw i32 %78, 1
  store i32 %81, i32* %68, align 8
  %82 = sext i32 %78 to i64
  %83 = getelementptr inbounds i8*, i8** %80, i64 %82
  %84 = load i8*, i8** %83, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %92, label %86

86:                                               ; preds = %77
  %87 = call i64 @strlen(i8* nonnull %84) #13
  %88 = add i64 %79, 1
  %89 = add i64 %88, %87
  %90 = load i32, i32* %72, align 4
  %91 = icmp slt i32 %81, %90
  br i1 %91, label %77, label %92

92:                                               ; preds = %77, %86, %66
  %93 = phi i64 [ 0, %66 ], [ %89, %86 ], [ %79, %77 ]
  store i32 0, i32* %68, align 8
  %94 = add i64 %93, 1
  %95 = call noalias i8* @malloc(i64 %94) #11
  %96 = icmp eq i8* %95, null
  br i1 %96, label %127, label %97

97:                                               ; preds = %92
  %98 = load i32, i32* %72, align 4
  %99 = icmp sgt i32 %98, 0
  br i1 %99, label %100, label %124

100:                                              ; preds = %97, %115
  %101 = phi %struct._FcStrSet* [ %120, %115 ], [ %71, %97 ]
  %102 = phi i32 [ %119, %115 ], [ 0, %97 ]
  %103 = phi i8* [ %118, %115 ], [ %95, %97 ]
  %104 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %101, i64 0, i32 3
  %105 = load i8**, i8*** %104, align 8
  %106 = add nsw i32 %102, 1
  store i32 %106, i32* %68, align 8
  %107 = sext i32 %102 to i64
  %108 = getelementptr inbounds i8*, i8** %105, i64 %107
  %109 = load i8*, i8** %108, align 8
  %110 = icmp eq i8* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %100
  %112 = icmp eq i8* %103, %95
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  store i8 47, i8* %103, align 1
  %114 = getelementptr inbounds i8, i8* %103, i64 1
  br label %115

115:                                              ; preds = %111, %113
  %116 = phi i8* [ %114, %113 ], [ %95, %111 ]
  %117 = call i64 @strlen(i8* nonnull %109) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %116, i8* nonnull align 1 %109, i64 %117, i1 false)
  %118 = getelementptr inbounds i8, i8* %116, i64 %117
  %119 = load i32, i32* %68, align 8
  %120 = load %struct._FcStrSet*, %struct._FcStrSet** %70, align 8
  %121 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %120, i64 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = icmp slt i32 %119, %122
  br i1 %123, label %100, label %124

124:                                              ; preds = %100, %115, %97
  %125 = phi i8* [ %95, %97 ], [ %118, %115 ], [ %103, %100 ]
  store i8 0, i8* %125, align 1
  %126 = load %struct._FcStrSet*, %struct._FcStrSet** %70, align 8
  br label %127

127:                                              ; preds = %92, %124
  %128 = phi %struct._FcStrSet* [ %71, %92 ], [ %126, %124 ]
  %129 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %128, i64 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, -1
  br i1 %131, label %158, label %132

132:                                              ; preds = %127
  %133 = atomicrmw add i32* %129, i32 -1 seq_cst
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %158

135:                                              ; preds = %132
  %136 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %128, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = icmp sgt i32 %137, 0
  %139 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %128, i64 0, i32 3
  %140 = load i8**, i8*** %139, align 8
  br i1 %138, label %141, label %151

141:                                              ; preds = %135, %141
  %142 = phi i64 [ %146, %141 ], [ 0, %135 ]
  %143 = phi i8** [ %150, %141 ], [ %140, %135 ]
  %144 = getelementptr inbounds i8*, i8** %143, i64 %142
  %145 = load i8*, i8** %144, align 8
  call void @free(i8* %145) #11
  %146 = add nuw nsw i64 %142, 1
  %147 = load i32, i32* %136, align 4
  %148 = sext i32 %147 to i64
  %149 = icmp slt i64 %146, %148
  %150 = load i8**, i8*** %139, align 8
  br i1 %149, label %141, label %151

151:                                              ; preds = %141, %135
  %152 = phi i8** [ %140, %135 ], [ %150, %141 ]
  %153 = icmp eq i8** %152, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %151
  %155 = bitcast i8** %152 to i8*
  call void @free(i8* %155) #11
  br label %156

156:                                              ; preds = %154, %151
  %157 = bitcast %struct._FcStrSet* %128 to i8*
  call void @free(i8* %157) #11
  br label %158

158:                                              ; preds = %127, %132, %156
  call void @free(i8* %54) #11
  br label %159

159:                                              ; preds = %46, %52, %158
  %160 = phi i8* [ %95, %158 ], [ null, %52 ], [ null, %46 ]
  call void @llvm.va_end(i8* nonnull %3)
  br label %161

161:                                              ; preds = %12, %28, %159
  %162 = phi i8* [ %160, %159 ], [ null, %28 ], [ null, %12 ]
  %163 = load i32, i32* %14, align 4
  %164 = icmp eq i32 %163, -1
  br i1 %164, label %188, label %165

165:                                              ; preds = %161
  %166 = atomicrmw add i32* %14, i32 -1 seq_cst
  %167 = icmp eq i32 %166, 1
  br i1 %167, label %168, label %188

168:                                              ; preds = %165
  %169 = load i32, i32* %16, align 4
  %170 = icmp sgt i32 %169, 0
  %171 = load i8**, i8*** %20, align 8
  br i1 %170, label %172, label %182

172:                                              ; preds = %168, %172
  %173 = phi i64 [ %177, %172 ], [ 0, %168 ]
  %174 = phi i8** [ %181, %172 ], [ %171, %168 ]
  %175 = getelementptr inbounds i8*, i8** %174, i64 %173
  %176 = load i8*, i8** %175, align 8
  call void @free(i8* %176) #11
  %177 = add nuw nsw i64 %173, 1
  %178 = load i32, i32* %16, align 4
  %179 = sext i32 %178 to i64
  %180 = icmp slt i64 %177, %179
  %181 = load i8**, i8*** %20, align 8
  br i1 %180, label %172, label %182

182:                                              ; preds = %172, %168
  %183 = phi i8** [ %171, %168 ], [ %181, %172 ]
  %184 = icmp eq i8** %183, null
  br i1 %184, label %187, label %185

185:                                              ; preds = %182
  %186 = bitcast i8** %183 to i8*
  call void @free(i8* %186) #11
  br label %187

187:                                              ; preds = %185, %182
  call void @free(i8* %10) #11
  br label %188

188:                                              ; preds = %9, %187, %165, %161, %1
  %189 = phi i8* [ null, %1 ], [ %162, %161 ], [ %162, %165 ], [ %162, %187 ], [ null, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #11
  ret i8* %189
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %struct._FcStrSet* @FcStrSetCreateEx(i32) local_unnamed_addr #0 {
  %2 = tail call noalias i8* @malloc(i64 32) #11
  %3 = icmp eq i8* %2, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %1
  %5 = bitcast i8* %2 to %struct._FcStrSet*
  %6 = bitcast i8* %2 to i32*
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 4
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 16
  %12 = bitcast i8* %11 to i8***
  store i8** null, i8*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = bitcast i8* %13 to i32*
  store i32 %0, i32* %14, align 8
  br label %15

15:                                               ; preds = %1, %4
  %16 = phi %struct._FcStrSet* [ %5, %4 ], [ null, %1 ]
  ret %struct._FcStrSet* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcStrSetAdd(%struct._FcStrSet* nocapture, i8* nocapture readonly) #2 {
  %3 = tail call noalias i8* @strdup(i8* %1) #11
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @_FcStrSetAppend(%struct._FcStrSet* %0, i8* nonnull %3)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  tail call void @free(i8* nonnull %3) #11
  br label %9

9:                                                ; preds = %5, %2, %8
  %10 = phi i32 [ 0, %8 ], [ 0, %2 ], [ 1, %5 ]
  ret i32 %10
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #11

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %struct._FcStrList* @IA__FcStrListCreate(%struct._FcStrSet*) #0 {
  %2 = tail call noalias i8* @malloc(i64 16) #11
  %3 = icmp eq i8* %2, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %1
  %5 = bitcast i8* %2 to %struct._FcStrList*
  %6 = bitcast i8* %2 to %struct._FcStrSet**
  store %struct._FcStrSet* %0, %struct._FcStrSet** %6, align 8
  %7 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %12, label %10

10:                                               ; preds = %4
  %11 = atomicrmw add i32* %7, i32 1 seq_cst
  br label %12

12:                                               ; preds = %4, %10
  %13 = getelementptr inbounds i8, i8* %2, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 8
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi %struct._FcStrList* [ %5, %12 ], [ null, %1 ]
  ret %struct._FcStrList* %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @IA__FcStrListNext(%struct._FcStrList* nocapture) #9 {
  %2 = getelementptr inbounds %struct._FcStrList, %struct._FcStrList* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %struct._FcStrList, %struct._FcStrList* %0, i64 0, i32 0
  %5 = load %struct._FcStrSet*, %struct._FcStrSet** %4, align 8
  %6 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %3, %7
  br i1 %8, label %9, label %16

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %5, i64 0, i32 3
  %11 = load i8**, i8*** %10, align 8
  %12 = add nsw i32 %3, 1
  store i32 %12, i32* %2, align 8
  %13 = sext i32 %3 to i64
  %14 = getelementptr inbounds i8*, i8** %11, i64 %13
  %15 = load i8*, i8** %14, align 8
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i8* [ %15, %9 ], [ null, %1 ]
  ret i8* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @IA__FcStrListDone(%struct._FcStrList* nocapture) #2 {
  %2 = getelementptr inbounds %struct._FcStrList, %struct._FcStrList* %0, i64 0, i32 0
  %3 = load %struct._FcStrSet*, %struct._FcStrSet** %2, align 8
  %4 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %3, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %33, label %7

7:                                                ; preds = %1
  %8 = atomicrmw add i32* %4, i32 -1 seq_cst
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %33

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %3, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  %14 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %3, i64 0, i32 3
  %15 = load i8**, i8*** %14, align 8
  br i1 %13, label %16, label %26

16:                                               ; preds = %10, %16
  %17 = phi i64 [ %21, %16 ], [ 0, %10 ]
  %18 = phi i8** [ %25, %16 ], [ %15, %10 ]
  %19 = getelementptr inbounds i8*, i8** %18, i64 %17
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #11
  %21 = add nuw nsw i64 %17, 1
  %22 = load i32, i32* %11, align 4
  %23 = sext i32 %22 to i64
  %24 = icmp slt i64 %21, %23
  %25 = load i8**, i8*** %14, align 8
  br i1 %24, label %16, label %26

26:                                               ; preds = %16, %10
  %27 = phi i8** [ %15, %10 ], [ %25, %16 ]
  %28 = icmp eq i8** %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  %30 = bitcast i8** %27 to i8*
  tail call void @free(i8* %30) #11
  br label %31

31:                                               ; preds = %29, %26
  %32 = bitcast %struct._FcStrSet* %3 to i8*
  tail call void @free(i8* %32) #11
  br label %33

33:                                               ; preds = %1, %7, %31
  %34 = bitcast %struct._FcStrList* %0 to i8*
  tail call void @free(i8* %34) #11
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #11

; Function Attrs: nounwind ssp uwtable
define hidden void @IA__FcStrSetDestroy(%struct._FcStrSet* nocapture) #2 {
  %2 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = atomicrmw add i32* %2, i32 -1 seq_cst
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %31

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  %12 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 3
  %13 = load i8**, i8*** %12, align 8
  br i1 %11, label %14, label %24

14:                                               ; preds = %8, %14
  %15 = phi i64 [ %19, %14 ], [ 0, %8 ]
  %16 = phi i8** [ %23, %14 ], [ %13, %8 ]
  %17 = getelementptr inbounds i8*, i8** %16, i64 %15
  %18 = load i8*, i8** %17, align 8
  tail call void @free(i8* %18) #11
  %19 = add nuw nsw i64 %15, 1
  %20 = load i32, i32* %9, align 4
  %21 = sext i32 %20 to i64
  %22 = icmp slt i64 %19, %21
  %23 = load i8**, i8*** %12, align 8
  br i1 %22, label %14, label %24

24:                                               ; preds = %14, %8
  %25 = phi i8** [ %13, %8 ], [ %23, %14 ]
  %26 = icmp eq i8** %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  %28 = bitcast i8** %25 to i8*
  tail call void @free(i8* %28) #11
  br label %29

29:                                               ; preds = %24, %27
  %30 = bitcast %struct._FcStrSet* %0 to i8*
  tail call void @free(i8* %30) #11
  br label %31

31:                                               ; preds = %1, %5, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @IA__FcStrCopyFilename(i8*) #2 {
  %2 = alloca [4098 x i8], align 16
  %3 = load i8, i8* %0, align 1
  switch i8 %3, label %37 [
    i8 126, label %4
    i8 47, label %35
  ]

4:                                                ; preds = %1
  %5 = tail call i8* @IA__FcConfigHome() #11
  %6 = icmp eq i8* %5, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %4
  %8 = tail call i64 @strlen(i8* nonnull %5) #13
  %9 = tail call i64 @strlen(i8* %0) #13
  %10 = add i64 %9, %8
  %11 = shl i64 %10, 32
  %12 = add i64 %11, 4294967296
  %13 = ashr exact i64 %12, 32
  %14 = tail call noalias i8* @malloc(i64 %13) #11
  %15 = icmp eq i8* %14, null
  br i1 %15, label %46, label %16

16:                                               ; preds = %7
  %17 = tail call i8* @strcpy(i8* nonnull %14, i8* nonnull %5) #11
  %18 = getelementptr inbounds i8, i8* %0, i64 1
  %19 = tail call i8* @strcat(i8* nonnull %14, i8* %18) #11
  %20 = load i8, i8* %14, align 1
  %21 = icmp eq i8 %20, 47
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = tail call fastcc i8* @FcStrCanonAbsoluteFilename(i8* nonnull %14) #11
  br label %33

24:                                               ; preds = %16
  %25 = getelementptr inbounds [4098 x i8], [4098 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4098, i8* nonnull %25) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 -86, i64 4098, i1 false) #11
  %26 = call i8* @getcwd(i8* nonnull %25, i64 4096) #11
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = call i8* (i8*, ...) @IA__FcStrBuildFilename(i8* nonnull %25, i8* nonnull %14, i8* null) #11
  %30 = call fastcc i8* @FcStrCanonAbsoluteFilename(i8* %29) #11
  call void @free(i8* %29) #11
  br label %31

31:                                               ; preds = %28, %24
  %32 = phi i8* [ %30, %28 ], [ null, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 4098, i8* nonnull %25) #11
  br label %33

33:                                               ; preds = %31, %22
  %34 = phi i8* [ %23, %22 ], [ %32, %31 ]
  call void @free(i8* nonnull %14) #11
  br label %46

35:                                               ; preds = %1
  %36 = tail call fastcc i8* @FcStrCanonAbsoluteFilename(i8* %0) #11
  br label %46

37:                                               ; preds = %1
  %38 = getelementptr inbounds [4098 x i8], [4098 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4098, i8* nonnull %38) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 -86, i64 4098, i1 false) #11
  %39 = call i8* @getcwd(i8* nonnull %38, i64 4096) #11
  %40 = icmp eq i8* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = call i8* (i8*, ...) @IA__FcStrBuildFilename(i8* nonnull %38, i8* %0, i8* null) #11
  %43 = call fastcc i8* @FcStrCanonAbsoluteFilename(i8* %42) #11
  call void @free(i8* %42) #11
  br label %44

44:                                               ; preds = %41, %37
  %45 = phi i8* [ %43, %41 ], [ null, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 4098, i8* nonnull %38) #11
  br label %46

46:                                               ; preds = %7, %4, %33, %35, %44
  %47 = phi i8* [ %34, %33 ], [ %36, %35 ], [ %45, %44 ], [ null, %4 ], [ null, %7 ]
  ret i8* %47
}

declare hidden i8* @IA__FcConfigHome() local_unnamed_addr #12

; Function Attrs: nofree nounwind
declare i8* @strcpy(i8* returned, i8* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i8* @strcat(i8* returned, i8* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @FcStrCanonFilename(i8*) local_unnamed_addr #2 {
  %2 = alloca [4098 x i8], align 16
  %3 = load i8, i8* %0, align 1
  %4 = icmp eq i8 %3, 47
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = tail call fastcc i8* @FcStrCanonAbsoluteFilename(i8* %0)
  br label %16

7:                                                ; preds = %1
  %8 = getelementptr inbounds [4098 x i8], [4098 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4098, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 4098, i1 false)
  %9 = call i8* @getcwd(i8* nonnull %8, i64 4096) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = call i8* (i8*, ...) @IA__FcStrBuildFilename(i8* nonnull %8, i8* %0, i8* null)
  %13 = call fastcc i8* @FcStrCanonAbsoluteFilename(i8* %12)
  call void @free(i8* %12) #11
  br label %14

14:                                               ; preds = %7, %11
  %15 = phi i8* [ %13, %11 ], [ null, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 4098, i8* nonnull %8) #11
  br label %16

16:                                               ; preds = %14, %5
  %17 = phi i8* [ %6, %5 ], [ %15, %14 ]
  ret i8* %17
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @FcStrLastSlash(i8* readonly) local_unnamed_addr #7 {
  %2 = tail call i8* @strrchr(i8* %0, i32 47) #13
  ret i8* %2
}

; Function Attrs: nofree nounwind readonly
declare i8* @strrchr(i8*, i32) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @IA__FcStrDirname(i8*) #0 {
  %2 = tail call i8* @strrchr(i8* %0, i32 47) #13
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = tail call noalias i8* @strdup(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #11
  br label %16

6:                                                ; preds = %1
  %7 = ptrtoint i8* %2 to i64
  %8 = ptrtoint i8* %0 to i64
  %9 = sub i64 %7, %8
  %10 = add nsw i64 %9, 1
  %11 = tail call noalias i8* @malloc(i64 %10) #11
  %12 = icmp eq i8* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %6
  %14 = tail call i8* @strncpy(i8* nonnull %11, i8* %0, i64 %9) #11
  %15 = getelementptr inbounds i8, i8* %11, i64 %9
  store i8 0, i8* %15, align 1
  br label %16

16:                                               ; preds = %6, %13, %4
  %17 = phi i8* [ %11, %13 ], [ %5, %4 ], [ null, %6 ]
  ret i8* %17
}

; Function Attrs: nofree nounwind
declare i8* @strncpy(i8* returned, i8* nocapture readonly, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias i8* @IA__FcStrBasename(i8* readonly) #0 {
  %2 = tail call i8* @strrchr(i8* %0, i32 47) #13
  %3 = icmp eq i8* %2, null
  %4 = getelementptr inbounds i8, i8* %2, i64 1
  %5 = select i1 %3, i8* %0, i8* %4
  %6 = tail call noalias i8* @strdup(i8* %5) #11
  ret i8* %6
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc i8* @FcStrCanonAbsoluteFilename(i8*) unnamed_addr #0 {
  %2 = tail call i64 @strlen(i8* %0) #13
  %3 = shl i64 %2, 32
  %4 = add i64 %3, 4294967296
  %5 = ashr exact i64 %4, 32
  %6 = tail call noalias i8* @malloc(i64 %5) #11
  %7 = icmp eq i8* %6, null
  br i1 %7, label %44, label %8

8:                                                ; preds = %1, %38
  %9 = phi i8* [ %41, %38 ], [ %0, %1 ]
  %10 = phi i8* [ %42, %38 ], [ %6, %1 ]
  %11 = phi i8* [ %40, %38 ], [ null, %1 ]
  %12 = load i8, i8* %9, align 1
  switch i8 %12, label %38 [
    i8 47, label %13
    i8 0, label %13
  ]

13:                                               ; preds = %8, %8
  %14 = icmp eq i8* %11, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %13
  %16 = ptrtoint i8* %9 to i64
  %17 = ptrtoint i8* %11 to i64
  %18 = sub i64 %16, %17
  switch i64 %18, label %38 [
    i64 1, label %19
    i64 2, label %21
    i64 3, label %26
  ]

19:                                               ; preds = %15
  %20 = getelementptr inbounds i8, i8* %10, i64 -1
  br label %38

21:                                               ; preds = %15
  %22 = tail call i32 @strncmp(i8* nonnull %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #13
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds i8, i8* %10, i64 -2
  %25 = select i1 %23, i8* %24, i8* %10
  br label %38

26:                                               ; preds = %15
  %27 = tail call i32 @strncmp(i8* nonnull %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3) #13
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %38

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %10, i64 -3
  br label %31

31:                                               ; preds = %34, %29
  %32 = phi i8* [ %30, %29 ], [ %35, %34 ]
  %33 = icmp ugt i8* %32, %6
  br i1 %33, label %34, label %38

34:                                               ; preds = %31
  %35 = getelementptr inbounds i8, i8* %32, i64 -1
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 47
  br i1 %37, label %38, label %31

38:                                               ; preds = %34, %31, %21, %15, %19, %13, %26, %8
  %39 = phi i8* [ %10, %8 ], [ %10, %15 ], [ %10, %26 ], [ %20, %19 ], [ %10, %13 ], [ %25, %21 ], [ %32, %31 ], [ %35, %34 ]
  %40 = phi i8* [ %11, %8 ], [ %9, %15 ], [ %9, %26 ], [ %9, %19 ], [ %9, %13 ], [ %9, %21 ], [ %9, %31 ], [ %9, %34 ]
  %41 = getelementptr inbounds i8, i8* %9, i64 1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  store i8 %12, i8* %39, align 1
  %43 = icmp eq i8 %12, 0
  br i1 %43, label %44, label %8

44:                                               ; preds = %38, %1
  ret i8* %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind
declare i8* @getcwd(i8*, i64) local_unnamed_addr #5

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %struct._FcStrSet* @IA__FcStrSetCreate() #0 {
  %1 = tail call noalias i8* @malloc(i64 32) #11
  %2 = icmp eq i8* %1, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %0
  %4 = bitcast i8* %1 to %struct._FcStrSet*
  %5 = bitcast i8* %1 to i32*
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds i8, i8* %1, i64 4
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds i8, i8* %1, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %1, i64 16
  %11 = bitcast i8* %10 to i8***
  store i8** null, i8*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %1, i64 24
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 8
  br label %14

14:                                               ; preds = %0, %3
  %15 = phi %struct._FcStrSet* [ %4, %3 ], [ null, %0 ]
  ret %struct._FcStrSet* %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @IA__FcStrSetMember(%struct._FcStrSet* nocapture readonly, i8* readonly) #6 {
  %3 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %30

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 3
  %8 = load i8**, i8*** %7, align 8
  %9 = sext i32 %4 to i64
  br label %12

10:                                               ; preds = %27
  %11 = icmp slt i64 %29, %9
  br i1 %11, label %12, label %30

12:                                               ; preds = %6, %10
  %13 = phi i64 [ 0, %6 ], [ %29, %10 ]
  %14 = getelementptr inbounds i8*, i8** %8, i64 %13
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, %1
  br i1 %16, label %30, label %17

17:                                               ; preds = %12, %23
  %18 = phi i8* [ %25, %23 ], [ %15, %12 ]
  %19 = phi i8* [ %24, %23 ], [ %1, %12 ]
  %20 = load i8, i8* %18, align 1
  %21 = load i8, i8* %19, align 1
  %22 = icmp eq i8 %20, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds i8, i8* %19, i64 1
  %25 = getelementptr inbounds i8, i8* %18, i64 1
  %26 = icmp eq i8 %20, %21
  br i1 %26, label %17, label %27

27:                                               ; preds = %17, %23
  %28 = icmp eq i8 %20, %21
  %29 = add nuw nsw i64 %13, 1
  br i1 %28, label %30, label %10

30:                                               ; preds = %27, %10, %12, %2
  %31 = phi i32 [ 0, %2 ], [ 1, %12 ], [ 0, %10 ], [ 1, %27 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcStrSetMemberAB(%struct._FcStrSet* nocapture readonly, i8* readonly, i8* readonly, i8**) local_unnamed_addr #2 {
  %5 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %78

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 3
  %10 = load i8**, i8*** %9, align 8
  %11 = sext i32 %6 to i64
  br label %12

12:                                               ; preds = %8, %75
  %13 = phi i64 [ 0, %8 ], [ %76, %75 ]
  %14 = getelementptr inbounds i8*, i8** %10, i64 %13
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, %1
  br i1 %16, label %75, label %17

17:                                               ; preds = %12, %32
  %18 = phi i8* [ %25, %32 ], [ %15, %12 ]
  %19 = phi i8* [ %33, %32 ], [ %1, %12 ]
  %20 = icmp eq i8* %18, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds i8, i8* %18, i64 1
  %23 = load i8, i8* %18, align 1
  br label %24

24:                                               ; preds = %21, %17
  %25 = phi i8* [ %22, %21 ], [ null, %17 ]
  %26 = phi i8 [ %23, %21 ], [ 0, %17 ]
  %27 = icmp eq i8* %19, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds i8, i8* %19, i64 1
  %30 = load i8, i8* %19, align 1
  %31 = zext i8 %30 to i32
  br label %32

32:                                               ; preds = %28, %24
  %33 = phi i8* [ %29, %28 ], [ null, %24 ]
  %34 = phi i32 [ %31, %28 ], [ 0, %24 ]
  %35 = icmp ne i8 %26, 0
  %36 = zext i8 %26 to i32
  %37 = icmp eq i32 %34, %36
  %38 = and i1 %35, %37
  br i1 %38, label %17, label %39

39:                                               ; preds = %32
  %40 = icmp ne i8* %25, null
  %41 = and i1 %40, %37
  br i1 %41, label %42, label %75

42:                                               ; preds = %39
  %43 = icmp eq i8* %25, %2
  br i1 %43, label %67, label %44

44:                                               ; preds = %42, %59
  %45 = phi i8* [ %52, %59 ], [ %25, %42 ]
  %46 = phi i8* [ %60, %59 ], [ %2, %42 ]
  %47 = icmp eq i8* %45, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds i8, i8* %45, i64 1
  %50 = load i8, i8* %45, align 1
  br label %51

51:                                               ; preds = %48, %44
  %52 = phi i8* [ %49, %48 ], [ null, %44 ]
  %53 = phi i8 [ %50, %48 ], [ 0, %44 ]
  %54 = icmp eq i8* %46, null
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds i8, i8* %46, i64 1
  %57 = load i8, i8* %46, align 1
  %58 = zext i8 %57 to i32
  br label %59

59:                                               ; preds = %55, %51
  %60 = phi i8* [ %56, %55 ], [ null, %51 ]
  %61 = phi i32 [ %58, %55 ], [ 0, %51 ]
  %62 = icmp ne i8 %53, 0
  %63 = zext i8 %53 to i32
  %64 = icmp eq i32 %61, %63
  %65 = and i1 %62, %64
  br i1 %65, label %44, label %66

66:                                               ; preds = %59
  br i1 %64, label %67, label %75

67:                                               ; preds = %42, %66
  %68 = icmp eq i8** %3, null
  br i1 %68, label %81, label %69

69:                                               ; preds = %67
  %70 = and i64 %13, 4294967295
  %71 = getelementptr inbounds i8*, i8** %10, i64 %70
  %72 = bitcast i8** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast i8** %3 to i64*
  store i64 %73, i64* %74, align 8
  br label %81

75:                                               ; preds = %12, %66, %39
  %76 = add nuw nsw i64 %13, 1
  %77 = icmp slt i64 %76, %11
  br i1 %77, label %12, label %78

78:                                               ; preds = %75, %4
  %79 = icmp eq i8** %3, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %78
  store i8* null, i8** %3, align 8
  br label %81

81:                                               ; preds = %80, %78, %69, %67
  %82 = phi i32 [ 1, %67 ], [ 1, %69 ], [ 0, %78 ], [ 0, %80 ]
  ret i32 %82
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @IA__FcStrSetEqual(%struct._FcStrSet* nocapture readonly, %struct._FcStrSet* nocapture readonly) #6 {
  %3 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %44

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, 0
  br i1 %9, label %10, label %44

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 3
  %12 = load i8**, i8*** %11, align 8
  %13 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %1, i64 0, i32 3
  %14 = sext i32 %4 to i64
  %15 = zext i32 %4 to i64
  %16 = load i8**, i8*** %13, align 8
  br label %17

17:                                               ; preds = %10, %41
  %18 = phi i64 [ 0, %10 ], [ %42, %41 ]
  %19 = getelementptr inbounds i8*, i8** %12, i64 %18
  %20 = load i8*, i8** %19, align 8
  br label %23

21:                                               ; preds = %38
  %22 = icmp eq i64 %40, %14
  br i1 %22, label %44, label %23

23:                                               ; preds = %21, %17
  %24 = phi i64 [ 0, %17 ], [ %40, %21 ]
  %25 = getelementptr inbounds i8*, i8** %16, i64 %24
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, %20
  br i1 %27, label %41, label %28

28:                                               ; preds = %23, %34
  %29 = phi i8* [ %36, %34 ], [ %26, %23 ]
  %30 = phi i8* [ %35, %34 ], [ %20, %23 ]
  %31 = load i8, i8* %29, align 1
  %32 = load i8, i8* %30, align 1
  %33 = icmp eq i8 %31, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds i8, i8* %30, i64 1
  %36 = getelementptr inbounds i8, i8* %29, i64 1
  %37 = icmp eq i8 %31, %32
  br i1 %37, label %28, label %38

38:                                               ; preds = %34, %28
  %39 = icmp eq i8 %31, %32
  %40 = add nuw nsw i64 %24, 1
  br i1 %39, label %41, label %21

41:                                               ; preds = %38, %23
  %42 = add nuw nsw i64 %18, 1
  %43 = icmp eq i64 %42, %15
  br i1 %43, label %44, label %17

44:                                               ; preds = %41, %21, %8, %2
  %45 = phi i32 [ 0, %2 ], [ 1, %8 ], [ 0, %21 ], [ 1, %41 ]
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_FcStrSetAppend(%struct._FcStrSet* nocapture, i8*) unnamed_addr #2 {
  %3 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  %10 = and i1 %6, %9
  br i1 %10, label %11, label %36

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 3
  %13 = load i8**, i8*** %12, align 8
  %14 = sext i32 %8 to i64
  br label %17

15:                                               ; preds = %32
  %16 = icmp eq i64 %34, %14
  br i1 %16, label %36, label %17

17:                                               ; preds = %15, %11
  %18 = phi i64 [ 0, %11 ], [ %34, %15 ]
  %19 = getelementptr inbounds i8*, i8** %13, i64 %18
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, %1
  br i1 %21, label %35, label %22

22:                                               ; preds = %17, %28
  %23 = phi i8* [ %30, %28 ], [ %20, %17 ]
  %24 = phi i8* [ %29, %28 ], [ %1, %17 ]
  %25 = load i8, i8* %23, align 1
  %26 = load i8, i8* %24, align 1
  %27 = icmp eq i8 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds i8, i8* %24, i64 1
  %30 = getelementptr inbounds i8, i8* %23, i64 1
  %31 = icmp eq i8 %25, %26
  br i1 %31, label %22, label %32

32:                                               ; preds = %28, %22
  %33 = icmp eq i8 %25, %26
  %34 = add nuw nsw i64 %18, 1
  br i1 %33, label %35, label %15

35:                                               ; preds = %32, %17
  tail call void @free(i8* %1) #11
  br label %90

36:                                               ; preds = %15, %2
  %37 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 1
  %38 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %8, %39
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 3
  %43 = load i8**, i8*** %42, align 8
  br label %79

44:                                               ; preds = %36
  %45 = and i32 %4, 2
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, i32 1, i32 64
  %48 = add nuw nsw i32 %47, 1
  %49 = add i32 %48, %8
  %50 = sext i32 %49 to i64
  %51 = shl nsw i64 %50, 3
  %52 = tail call noalias i8* @malloc(i64 %51) #11
  %53 = icmp eq i8* %52, null
  br i1 %53, label %90, label %54

54:                                               ; preds = %44
  %55 = icmp eq i32 %8, 0
  %56 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 3
  br i1 %55, label %57, label %60

57:                                               ; preds = %54
  %58 = load i8**, i8*** %56, align 8
  %59 = bitcast i8** %58 to i8*
  br label %66

60:                                               ; preds = %54
  %61 = bitcast i8*** %56 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = sext i32 %8 to i64
  %64 = shl nsw i64 %63, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 8 %62, i64 %64, i1 false) #11
  %65 = bitcast i8* %62 to i8**
  br label %66

66:                                               ; preds = %60, %57
  %67 = phi i8* [ %59, %57 ], [ %62, %60 ]
  %68 = phi i8** [ %58, %57 ], [ %65, %60 ]
  %69 = icmp eq i8** %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %66
  tail call void @free(i8* %67) #11
  %71 = load i32, i32* %38, align 8
  %72 = load i32, i32* %37, align 4
  br label %73

73:                                               ; preds = %70, %66
  %74 = phi i32 [ %8, %66 ], [ %72, %70 ]
  %75 = phi i32 [ %8, %66 ], [ %71, %70 ]
  %76 = add nsw i32 %75, %47
  store i32 %76, i32* %38, align 8
  %77 = bitcast i8*** %56 to i8**
  store i8* %52, i8** %77, align 8
  %78 = bitcast i8* %52 to i8**
  br label %79

79:                                               ; preds = %41, %73
  %80 = phi i32 [ %8, %41 ], [ %74, %73 ]
  %81 = phi i8** [ %43, %41 ], [ %78, %73 ]
  %82 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 3
  %83 = add nsw i32 %80, 1
  store i32 %83, i32* %37, align 4
  %84 = sext i32 %80 to i64
  %85 = getelementptr inbounds i8*, i8** %81, i64 %84
  store i8* %1, i8** %85, align 8
  %86 = load i8**, i8*** %82, align 8
  %87 = load i32, i32* %37, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i8*, i8** %86, i64 %88
  store i8* null, i8** %89, align 8
  br label %90

90:                                               ; preds = %44, %79, %35
  %91 = phi i32 [ 1, %79 ], [ 1, %35 ], [ 0, %44 ]
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcStrSetAddTriple(%struct._FcStrSet* nocapture, i8* readonly, i8* readonly, i8* readonly) local_unnamed_addr #2 {
  %5 = icmp ne i8* %1, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = tail call i64 @strlen(i8* nonnull %1) #13
  %8 = trunc i64 %7 to i32
  br label %9

9:                                                ; preds = %6, %4
  %10 = phi i32 [ %8, %6 ], [ 0, %4 ]
  %11 = icmp ne i8* %2, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %9
  %13 = tail call i64 @strlen(i8* nonnull %2) #13
  %14 = trunc i64 %13 to i32
  br label %15

15:                                               ; preds = %12, %9
  %16 = phi i32 [ %14, %12 ], [ 0, %9 ]
  %17 = icmp ne i8* %3, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %15
  %19 = tail call i64 @strlen(i8* nonnull %3) #13
  %20 = trunc i64 %19 to i32
  %21 = add i32 %20, 1
  br label %22

22:                                               ; preds = %18, %15
  %23 = phi i32 [ %21, %18 ], [ 1, %15 ]
  %24 = add nsw i32 %10, 1
  %25 = add i32 %16, 1
  %26 = add i32 %25, %24
  %27 = add i32 %23, %26
  %28 = sext i32 %27 to i64
  %29 = tail call noalias i8* @malloc(i64 %28) #11
  %30 = icmp eq i8* %29, null
  br i1 %30, label %60, label %31

31:                                               ; preds = %22
  br i1 %5, label %32, label %34

32:                                               ; preds = %31
  %33 = sext i32 %24 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %1, i64 %33, i1 false) #11
  br label %35

34:                                               ; preds = %31
  store i8 0, i8* %29, align 1
  br label %35

35:                                               ; preds = %34, %32
  br i1 %11, label %36, label %41

36:                                               ; preds = %35
  %37 = sext i32 %10 to i64
  %38 = getelementptr inbounds i8, i8* %29, i64 %37
  %39 = getelementptr inbounds i8, i8* %38, i64 1
  %40 = sext i32 %25 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* nonnull align 1 %2, i64 %40, i1 false) #11
  br label %44

41:                                               ; preds = %35
  %42 = sext i32 %24 to i64
  %43 = getelementptr inbounds i8, i8* %29, i64 %42
  store i8 0, i8* %43, align 1
  br label %44

44:                                               ; preds = %41, %36
  br i1 %17, label %45, label %53

45:                                               ; preds = %44
  %46 = sext i32 %10 to i64
  %47 = getelementptr inbounds i8, i8* %29, i64 %46
  %48 = getelementptr inbounds i8, i8* %47, i64 1
  %49 = sext i32 %16 to i64
  %50 = getelementptr inbounds i8, i8* %48, i64 %49
  %51 = getelementptr inbounds i8, i8* %50, i64 1
  %52 = sext i32 %23 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* nonnull align 1 %3, i64 %52, i1 false) #11
  br label %56

53:                                               ; preds = %44
  %54 = sext i32 %26 to i64
  %55 = getelementptr inbounds i8, i8* %29, i64 %54
  store i8 0, i8* %55, align 1
  br label %56

56:                                               ; preds = %45, %53
  %57 = tail call fastcc i32 @_FcStrSetAppend(%struct._FcStrSet* %0, i8* nonnull %29)
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  tail call void @free(i8* nonnull %29) #11
  br label %60

60:                                               ; preds = %22, %56, %59
  %61 = phi i32 [ 0, %59 ], [ 1, %56 ], [ 0, %22 ]
  ret i32 %61
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @FcStrTripleSecond(i8* readonly) local_unnamed_addr #7 {
  %2 = tail call i64 @strlen(i8* %0) #13
  %3 = getelementptr inbounds i8, i8* %0, i64 %2
  %4 = getelementptr inbounds i8, i8* %3, i64 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = select i1 %6, i8* null, i8* %4
  ret i8* %7
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @FcStrTripleThird(i8* readonly) local_unnamed_addr #7 {
  %2 = tail call i64 @strlen(i8* %0) #13
  %3 = getelementptr inbounds i8, i8* %0, i64 %2
  %4 = getelementptr inbounds i8, i8* %3, i64 1
  %5 = tail call i64 @strlen(i8* %4) #13
  %6 = getelementptr inbounds i8, i8* %4, i64 %5
  %7 = getelementptr inbounds i8, i8* %6, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %9, i8* null, i8* %7
  ret i8* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcStrSetAddFilename(%struct._FcStrSet* nocapture, i8*) #2 {
  %3 = tail call i8* @IA__FcStrCopyFilename(i8* %1)
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @_FcStrSetAppend(%struct._FcStrSet* %0, i8* nonnull %3)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  tail call void @free(i8* nonnull %3) #11
  br label %9

9:                                                ; preds = %5, %2, %8
  %10 = phi i32 [ 0, %8 ], [ 0, %2 ], [ 1, %5 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcStrSetAddFilenamePairWithSalt(%struct._FcStrSet* nocapture, i8*, i8*, i8* readonly) local_unnamed_addr #2 {
  %5 = icmp eq i8* %1, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = tail call i8* @IA__FcStrCopyFilename(i8* nonnull %1)
  %8 = icmp eq i8* %7, null
  br i1 %8, label %133, label %9

9:                                                ; preds = %6, %4
  %10 = phi i8* [ %7, %6 ], [ null, %4 ]
  %11 = icmp eq i8* %2, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %9
  %13 = tail call i8* @IA__FcStrCopyFilename(i8* nonnull %2)
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  %16 = icmp eq i8* %10, null
  br i1 %16, label %133, label %17

17:                                               ; preds = %15
  tail call void @free(i8* nonnull %10) #11
  br label %133

18:                                               ; preds = %12, %9
  %19 = phi i8* [ %13, %12 ], [ null, %9 ]
  %20 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %126

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 3
  %25 = load i8**, i8*** %24, align 8
  %26 = sext i32 %21 to i64
  br label %27

27:                                               ; preds = %82, %23
  %28 = phi i64 [ 0, %23 ], [ %83, %82 ]
  %29 = getelementptr inbounds i8*, i8** %25, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, %10
  br i1 %31, label %82, label %32

32:                                               ; preds = %27, %47
  %33 = phi i8* [ %40, %47 ], [ %30, %27 ]
  %34 = phi i8* [ %48, %47 ], [ %10, %27 ]
  %35 = icmp eq i8* %33, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds i8, i8* %33, i64 1
  %38 = load i8, i8* %33, align 1
  br label %39

39:                                               ; preds = %36, %32
  %40 = phi i8* [ %37, %36 ], [ null, %32 ]
  %41 = phi i8 [ %38, %36 ], [ 0, %32 ]
  %42 = icmp eq i8* %34, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds i8, i8* %34, i64 1
  %45 = load i8, i8* %34, align 1
  %46 = zext i8 %45 to i32
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i8* [ %44, %43 ], [ null, %39 ]
  %49 = phi i32 [ %46, %43 ], [ 0, %39 ]
  %50 = icmp ne i8 %41, 0
  %51 = zext i8 %41 to i32
  %52 = icmp eq i32 %49, %51
  %53 = and i1 %50, %52
  br i1 %53, label %32, label %54

54:                                               ; preds = %47
  %55 = icmp ne i8* %40, null
  %56 = and i1 %55, %52
  br i1 %56, label %57, label %82

57:                                               ; preds = %54
  %58 = icmp eq i8* %40, %19
  br i1 %58, label %85, label %59

59:                                               ; preds = %57, %74
  %60 = phi i8* [ %67, %74 ], [ %40, %57 ]
  %61 = phi i8* [ %75, %74 ], [ %19, %57 ]
  %62 = icmp eq i8* %60, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds i8, i8* %60, i64 1
  %65 = load i8, i8* %60, align 1
  br label %66

66:                                               ; preds = %63, %59
  %67 = phi i8* [ %64, %63 ], [ null, %59 ]
  %68 = phi i8 [ %65, %63 ], [ 0, %59 ]
  %69 = icmp eq i8* %61, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds i8, i8* %61, i64 1
  %72 = load i8, i8* %61, align 1
  %73 = zext i8 %72 to i32
  br label %74

74:                                               ; preds = %70, %66
  %75 = phi i8* [ %71, %70 ], [ null, %66 ]
  %76 = phi i32 [ %73, %70 ], [ 0, %66 ]
  %77 = icmp ne i8 %68, 0
  %78 = zext i8 %68 to i32
  %79 = icmp eq i32 %76, %78
  %80 = and i1 %77, %79
  br i1 %80, label %59, label %81

81:                                               ; preds = %74
  br i1 %79, label %85, label %82

82:                                               ; preds = %81, %54, %27
  %83 = add nuw nsw i64 %28, 1
  %84 = icmp eq i64 %83, %26
  br i1 %84, label %126, label %27

85:                                               ; preds = %57, %81
  %86 = and i64 %28, 4294967295
  %87 = getelementptr inbounds i8*, i8** %25, i64 %86
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %123, %85
  %90 = phi i64 [ 0, %85 ], [ %124, %123 ]
  %91 = getelementptr inbounds i8*, i8** %25, i64 %90
  %92 = load i8*, i8** %91, align 8
  %93 = icmp eq i8* %92, %88
  br i1 %93, label %106, label %94

94:                                               ; preds = %89, %100
  %95 = phi i8* [ %102, %100 ], [ %92, %89 ]
  %96 = phi i8* [ %101, %100 ], [ %88, %89 ]
  %97 = load i8, i8* %95, align 1
  %98 = load i8, i8* %96, align 1
  %99 = icmp eq i8 %97, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds i8, i8* %96, i64 1
  %102 = getelementptr inbounds i8, i8* %95, i64 1
  %103 = icmp eq i8 %97, %98
  br i1 %103, label %94, label %104

104:                                              ; preds = %100, %94
  %105 = icmp eq i8 %97, %98
  br i1 %105, label %106, label %123

106:                                              ; preds = %104, %89
  %107 = phi i8* [ %88, %89 ], [ %92, %104 ]
  %108 = trunc i64 %90 to i32
  %109 = and i64 %90, 4294967295
  tail call void @free(i8* %107) #11
  %110 = load i8**, i8*** %24, align 8
  %111 = getelementptr inbounds i8*, i8** %110, i64 %109
  %112 = bitcast i8** %111 to i8*
  %113 = add nuw i64 %90, 1
  %114 = and i64 %113, 4294967295
  %115 = getelementptr inbounds i8*, i8** %110, i64 %114
  %116 = bitcast i8** %115 to i8*
  %117 = load i32, i32* %20, align 4
  %118 = sub nsw i32 %117, %108
  %119 = sext i32 %118 to i64
  %120 = shl nsw i64 %119, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %116, i64 %120, i1 false) #11
  %121 = load i32, i32* %20, align 4
  %122 = add nsw i32 %121, -1
  store i32 %122, i32* %20, align 4
  br label %126

123:                                              ; preds = %104
  %124 = add nuw nsw i64 %90, 1
  %125 = icmp eq i64 %124, %26
  br i1 %125, label %126, label %89

126:                                              ; preds = %82, %123, %18, %106
  %127 = tail call i32 @FcStrSetAddTriple(%struct._FcStrSet* %0, i8* %10, i8* %19, i8* %3)
  %128 = icmp eq i8* %10, null
  br i1 %128, label %130, label %129

129:                                              ; preds = %126
  tail call void @free(i8* nonnull %10) #11
  br label %130

130:                                              ; preds = %126, %129
  %131 = icmp eq i8* %19, null
  br i1 %131, label %133, label %132

132:                                              ; preds = %130
  tail call void @free(i8* nonnull %19) #11
  br label %133

133:                                              ; preds = %132, %130, %17, %15, %6
  %134 = phi i32 [ 0, %6 ], [ 0, %15 ], [ 0, %17 ], [ %127, %130 ], [ %127, %132 ]
  ret i32 %134
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcStrSetDel(%struct._FcStrSet* nocapture, i8* readonly) #2 {
  %3 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %47

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 3
  %8 = load i8**, i8*** %7, align 8
  %9 = sext i32 %4 to i64
  br label %10

10:                                               ; preds = %6, %44
  %11 = phi i64 [ 0, %6 ], [ %45, %44 ]
  %12 = getelementptr inbounds i8*, i8** %8, i64 %11
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %1
  br i1 %14, label %27, label %15

15:                                               ; preds = %10, %21
  %16 = phi i8* [ %23, %21 ], [ %13, %10 ]
  %17 = phi i8* [ %22, %21 ], [ %1, %10 ]
  %18 = load i8, i8* %16, align 1
  %19 = load i8, i8* %17, align 1
  %20 = icmp eq i8 %18, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds i8, i8* %17, i64 1
  %23 = getelementptr inbounds i8, i8* %16, i64 1
  %24 = icmp eq i8 %18, %19
  br i1 %24, label %15, label %25

25:                                               ; preds = %15, %21
  %26 = icmp eq i8 %18, %19
  br i1 %26, label %27, label %44

27:                                               ; preds = %10, %25
  %28 = phi i8* [ %1, %10 ], [ %13, %25 ]
  %29 = trunc i64 %11 to i32
  %30 = and i64 %11, 4294967295
  tail call void @free(i8* %28) #11
  %31 = load i8**, i8*** %7, align 8
  %32 = getelementptr inbounds i8*, i8** %31, i64 %30
  %33 = bitcast i8** %32 to i8*
  %34 = add nuw i64 %11, 1
  %35 = and i64 %34, 4294967295
  %36 = getelementptr inbounds i8*, i8** %31, i64 %35
  %37 = bitcast i8** %36 to i8*
  %38 = load i32, i32* %3, align 4
  %39 = sub nsw i32 %38, %29
  %40 = sext i32 %39 to i64
  %41 = shl nsw i64 %40, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %37, i64 %41, i1 false)
  %42 = load i32, i32* %3, align 4
  %43 = add nsw i32 %42, -1
  store i32 %43, i32* %3, align 4
  br label %47

44:                                               ; preds = %25
  %45 = add nuw nsw i64 %11, 1
  %46 = icmp slt i64 %45, %9
  br i1 %46, label %10, label %47

47:                                               ; preds = %44, %2, %27
  %48 = phi i32 [ 1, %27 ], [ 0, %2 ], [ 0, %44 ]
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcStrSetAddLangs(%struct._FcStrSet* nocapture, i8*) local_unnamed_addr #2 {
  %3 = alloca [128 x i8], align 16
  %4 = getelementptr inbounds [128 x i8], [128 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 128, i1 false)
  %5 = icmp eq i8* %1, null
  br i1 %5, label %54, label %6

6:                                                ; preds = %2
  %7 = call i8* @strchr(i8* nonnull %1, i32 58) #13
  %8 = icmp eq i8* %7, null
  br i1 %8, label %38, label %9

9:                                                ; preds = %6, %33
  %10 = phi i8* [ %36, %33 ], [ %7, %6 ]
  %11 = phi i32 [ %34, %33 ], [ 0, %6 ]
  %12 = phi i8* [ %35, %33 ], [ %1, %6 ]
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint i8* %12 to i64
  %15 = sub i64 %13, %14
  %16 = icmp ult i64 %15, 127
  %17 = select i1 %16, i64 %15, i64 127
  %18 = call i8* @strncpy(i8* nonnull %4, i8* %12, i64 %17) #11
  %19 = getelementptr inbounds [128 x i8], [128 x i8]* %3, i64 0, i64 %17
  store i8 0, i8* %19, align 1
  %20 = load i8, i8* %4, align 16
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %9
  %23 = call i8* @IA__FcLangNormalize(i8* nonnull %4) #11
  %24 = icmp eq i8* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %22
  %26 = call noalias i8* @strdup(i8* nonnull %23) #11
  %27 = icmp eq i8* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = call fastcc i32 @_FcStrSetAppend(%struct._FcStrSet* %0, i8* nonnull %26) #11
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @free(i8* nonnull %26) #11
  br label %32

32:                                               ; preds = %25, %28, %31
  call void @free(i8* nonnull %23) #11
  br label %33

33:                                               ; preds = %22, %9, %32
  %34 = phi i32 [ 1, %32 ], [ %11, %22 ], [ %11, %9 ]
  %35 = getelementptr inbounds i8, i8* %10, i64 1
  %36 = call i8* @strchr(i8* %35, i32 58) #13
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %9

38:                                               ; preds = %33, %6
  %39 = phi i8* [ %1, %6 ], [ %35, %33 ]
  %40 = phi i32 [ 0, %6 ], [ %34, %33 ]
  %41 = load i8, i8* %39, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %54, label %43

43:                                               ; preds = %38
  %44 = call i8* @IA__FcLangNormalize(i8* %39) #11
  %45 = icmp eq i8* %44, null
  br i1 %45, label %54, label %46

46:                                               ; preds = %43
  %47 = call noalias i8* @strdup(i8* nonnull %44) #11
  %48 = icmp eq i8* %47, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %46
  %50 = call fastcc i32 @_FcStrSetAppend(%struct._FcStrSet* %0, i8* nonnull %47) #11
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @free(i8* nonnull %47) #11
  br label %53

53:                                               ; preds = %46, %49, %52
  call void @free(i8* nonnull %44) #11
  br label %54

54:                                               ; preds = %53, %38, %43, %2
  %55 = phi i32 [ 0, %2 ], [ 1, %53 ], [ %40, %43 ], [ %40, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #11
  ret i32 %55
}

declare hidden i8* @IA__FcLangNormalize(i8*) local_unnamed_addr #12

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcStrSetDeleteAll(%struct._FcStrSet* nocapture) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %0, i64 0, i32 3
  %11 = sext i32 %7 to i64
  br label %12

12:                                               ; preds = %9, %12
  %13 = phi i64 [ %11, %9 ], [ %15, %12 ]
  %14 = load i8**, i8*** %10, align 8
  %15 = add nsw i64 %13, -1
  %16 = getelementptr inbounds i8*, i8** %14, i64 %15
  %17 = load i8*, i8** %16, align 8
  tail call void @free(i8* %17) #11
  %18 = load i32, i32* %6, align 4
  %19 = add nsw i32 %18, -1
  store i32 %19, i32* %6, align 4
  %20 = icmp sgt i64 %15, 0
  br i1 %20, label %12, label %21

21:                                               ; preds = %12, %5, %1
  %22 = phi i32 [ 0, %1 ], [ 1, %5 ], [ 1, %12 ]
  ret i32 %22
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @IA__FcStrListFirst(%struct._FcStrList* nocapture) #10 {
  %2 = getelementptr inbounds %struct._FcStrList, %struct._FcStrList* %0, i64 0, i32 1
  store i32 0, i32* %2, align 8
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
