; ModuleID = '../../ui/gl/gl_fence_nv.cc'
source_filename = "../../ui/gl/gl_fence_nv.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.gl::GLFenceNV" = type <{ %"class.gl::GLFence", i32, [4 x i8] }>
%"class.gl::GLFence" = type { i32 (...)** }
%"class.gl::GLApi" = type { i32 (...)** }

@_ZTVN2gl9GLFenceNVE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::GLFenceNV"*)* @_ZN2gl9GLFenceNVD2Ev to i8*), i8* bitcast (void (%"class.gl::GLFenceNV"*)* @_ZN2gl9GLFenceNVD0Ev to i8*), i8* bitcast (i1 (%"class.gl::GLFenceNV"*)* @_ZN2gl9GLFenceNV12HasCompletedEv to i8*), i8* bitcast (void (%"class.gl::GLFenceNV"*)* @_ZN2gl9GLFenceNV10ClientWaitEv to i8*), i8* bitcast (void (%"class.gl::GLFenceNV"*)* @_ZN2gl9GLFenceNV10ServerWaitEv to i8*), i8* bitcast (i1 (%"class.gl::GLFenceNV"*)* @_ZN2gl9GLFenceNV14ResetSupportedEv to i8*), i8* bitcast (void (%"class.gl::GLFenceNV"*)* @_ZN2gl9GLFenceNV10ResetStateEv to i8*), i8* bitcast (void (%"class.gl::GLFenceNV"*)* @_ZN2gl9GLFenceNV10InvalidateEv to i8*), i8* bitcast (void ()* @_ZN2gl7GLFence11GetGpuFenceEv to i8*)] }, align 8
@_ZN2gl24g_current_gl_context_tlsE = external local_unnamed_addr global %"class.base::ThreadLocalPointer"*, align 8

@_ZN2gl9GLFenceNVC1Ev = hidden unnamed_addr alias void (%"class.gl::GLFenceNV"*), void (%"class.gl::GLFenceNV"*)* @_ZN2gl9GLFenceNVC2Ev
@_ZN2gl9GLFenceNVD1Ev = hidden unnamed_addr alias void (%"class.gl::GLFenceNV"*), void (%"class.gl::GLFenceNV"*)* @_ZN2gl9GLFenceNVD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLFenceNVC2Ev(%"class.gl::GLFenceNV"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLFenceNV", %"class.gl::GLFenceNV"* %0, i64 0, i32 0
  tail call void @_ZN2gl7GLFenceC2Ev(%"class.gl::GLFence"* %2) #6
  %3 = getelementptr inbounds %"class.gl::GLFenceNV", %"class.gl::GLFenceNV"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2gl9GLFenceNVE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gl::GLFenceNV", %"class.gl::GLFenceNV"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %6 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %5, i64 0, i32 0
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #6
  %8 = bitcast i8* %7 to %"class.gl::GLApi"**
  %9 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %8, align 8
  %10 = bitcast %"class.gl::GLApi"* %9 to void (%"class.gl::GLApi"*, i32, i32*)***
  %11 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %11, i64 148
  %13 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %12, align 8
  tail call void %13(%"class.gl::GLApi"* %9, i32 1, i32* %4) #6
  %14 = bitcast %"class.gl::GLFenceNV"* %0 to void (%"class.gl::GLFenceNV"*)***
  %15 = load void (%"class.gl::GLFenceNV"*)**, void (%"class.gl::GLFenceNV"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.gl::GLFenceNV"*)*, void (%"class.gl::GLFenceNV"*)** %15, i64 6
  %17 = load void (%"class.gl::GLFenceNV"*)*, void (%"class.gl::GLFenceNV"*)** %16, align 8
  tail call void %17(%"class.gl::GLFenceNV"* %0) #6
  ret void
}

declare void @_ZN2gl7GLFenceC2Ev(%"class.gl::GLFence"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl9GLFenceNV14ResetSupportedEv(%"class.gl::GLFenceNV"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLFenceNV10ResetStateEv(%"class.gl::GLFenceNV"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %3 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %2, i64 0, i32 0
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = bitcast i8* %4 to %"class.gl::GLApi"**
  %6 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::GLFenceNV", %"class.gl::GLFenceNV"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.gl::GLApi"* %6 to void (%"class.gl::GLApi"*, i32, i32)***
  %10 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %10, i64 397
  %12 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %11, align 8
  tail call void %12(%"class.gl::GLApi"* %6, i32 %8, i32 34034) #6
  %13 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %14 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %13, i64 0, i32 0
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #6
  %16 = bitcast i8* %15 to %"class.gl::GLApi"**
  %17 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %16, align 8
  %18 = bitcast %"class.gl::GLApi"* %17 to void (%"class.gl::GLApi"*)***
  %19 = load void (%"class.gl::GLApi"*)**, void (%"class.gl::GLApi"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.gl::GLApi"*)*, void (%"class.gl::GLApi"*)** %19, i64 136
  %21 = load void (%"class.gl::GLApi"*)*, void (%"class.gl::GLApi"*)** %20, align 8
  tail call void %21(%"class.gl::GLApi"* %17) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl9GLFenceNV12HasCompletedEv(%"class.gl::GLFenceNV"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %3 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %2, i64 0, i32 0
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = bitcast i8* %4 to %"class.gl::GLApi"**
  %6 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::GLFenceNV", %"class.gl::GLFenceNV"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.gl::GLApi"* %6 to i8 (%"class.gl::GLApi"*, i32)***
  %10 = load i8 (%"class.gl::GLApi"*, i32)**, i8 (%"class.gl::GLApi"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i8 (%"class.gl::GLApi"*, i32)*, i8 (%"class.gl::GLApi"*, i32)** %10, i64 417
  %12 = load i8 (%"class.gl::GLApi"*, i32)*, i8 (%"class.gl::GLApi"*, i32)** %11, align 8
  %13 = tail call zeroext i8 %12(%"class.gl::GLApi"* %6, i32 %8) #6
  %14 = icmp ne i8 %13, 0
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLFenceNV10ClientWaitEv(%"class.gl::GLFenceNV"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %3 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %2, i64 0, i32 0
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = bitcast i8* %4 to %"class.gl::GLApi"**
  %6 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::GLFenceNV", %"class.gl::GLFenceNV"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.gl::GLApi"* %6 to void (%"class.gl::GLApi"*, i32)***
  %10 = load void (%"class.gl::GLApi"*, i32)**, void (%"class.gl::GLApi"*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %10, i64 135
  %12 = load void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %11, align 8
  tail call void %12(%"class.gl::GLApi"* %6, i32 %8) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLFenceNV10ServerWaitEv(%"class.gl::GLFenceNV"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gl::GLFenceNV"* %0 to void (%"class.gl::GLFenceNV"*)***
  %3 = load void (%"class.gl::GLFenceNV"*)**, void (%"class.gl::GLFenceNV"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.gl::GLFenceNV"*)*, void (%"class.gl::GLFenceNV"*)** %3, i64 3
  %5 = load void (%"class.gl::GLFenceNV"*)*, void (%"class.gl::GLFenceNV"*)** %4, align 8
  tail call void %5(%"class.gl::GLFenceNV"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLFenceNVD2Ev(%"class.gl::GLFenceNV"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLFenceNV", %"class.gl::GLFenceNV"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2gl9GLFenceNVE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::GLFenceNV", %"class.gl::GLFenceNV"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %8 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %7, i64 0, i32 0
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #6
  %10 = bitcast i8* %9 to %"class.gl::GLApi"**
  %11 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %10, align 8
  %12 = bitcast %"class.gl::GLApi"* %11 to void (%"class.gl::GLApi"*, i32, i32*)***
  %13 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %13, i64 84
  %15 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %14, align 8
  tail call void %15(%"class.gl::GLApi"* %11, i32 1, i32* %3) #6
  br label %16

16:                                               ; preds = %1, %6
  %17 = getelementptr inbounds %"class.gl::GLFenceNV", %"class.gl::GLFenceNV"* %0, i64 0, i32 0
  tail call void @_ZN2gl7GLFenceD2Ev(%"class.gl::GLFence"* %17) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2gl7GLFenceD2Ev(%"class.gl::GLFence"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLFenceNVD0Ev(%"class.gl::GLFenceNV"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLFenceNV", %"class.gl::GLFenceNV"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2gl9GLFenceNVE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::GLFenceNV", %"class.gl::GLFenceNV"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %8 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %7, i64 0, i32 0
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #6
  %10 = bitcast i8* %9 to %"class.gl::GLApi"**
  %11 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %10, align 8
  %12 = bitcast %"class.gl::GLApi"* %11 to void (%"class.gl::GLApi"*, i32, i32*)***
  %13 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %13, i64 84
  %15 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %14, align 8
  tail call void %15(%"class.gl::GLApi"* %11, i32 1, i32* %3) #6
  br label %16

16:                                               ; preds = %1, %6
  %17 = getelementptr inbounds %"class.gl::GLFenceNV", %"class.gl::GLFenceNV"* %0, i64 0, i32 0
  tail call void @_ZN2gl7GLFenceD2Ev(%"class.gl::GLFence"* %17) #6
  %18 = bitcast %"class.gl::GLFenceNV"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl9GLFenceNV10InvalidateEv(%"class.gl::GLFenceNV"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLFenceNV", %"class.gl::GLFenceNV"* %0, i64 0, i32 1
  store i32 0, i32* %2, align 8
  ret void
}

declare void @_ZN2gl7GLFence11GetGpuFenceEv() unnamed_addr

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
