; ModuleID = '../../third_party/skia/src/gpu/text/GrTextBlob.cpp'
source_filename = "../../third_party/skia/src/gpu/text/GrTextBlob.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRGBA4f.337 = type { float, float, float, float }
%class.SkPaint = type <{ %class.sk_sp.15, %class.sk_sp.16, %class.sk_sp.17, %class.sk_sp.18, %class.sk_sp.19, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.15 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.16 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.17 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.18 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.19 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkStrokeRec = type { float, float, float, i32 }
%class.SkPreConcatMatrixProvider = type { %class.SkMatrixProvider, %class.SkMatrixProvider*, %class.SkMatrix }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkM44 = type { [16 x float] }
%class.SkMatrix = type { [9 x float], i32 }
%class.GrShape = type { %union.anon.262, i8, i8, i8, i8, [4 x i8] }
%union.anon.262 = type { %class.SkRRect, [4 x i8] }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%class.SkTLazy = type { [16 x i8], %class.SkPath* }
%class.SkPath = type <{ %class.sk_sp.36, i32, %"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5", i8, i8 }>
%class.sk_sp.36 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.37, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.38, %class.SkTDArray.39, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.37 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.38 = type { i8*, i32, i32 }
%class.SkTDArray.39 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.40 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.5" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.40 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41", [3 x i8] }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i8 }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.GrTextBlob = type <{ %class.SkGlyphRunPainterInterface, %class.SkNVRefCnt.30, [4 x i8], %class.GrTextBlob*, %class.GrTextBlob*, %class.GrSubRunAllocator, %struct.GrSubRunList, i32, %class.SkMatrix, i32, %"struct.GrTextBlob::Key", float, float, i8, [3 x i8] }>
%class.SkGlyphRunPainterInterface = type { i32 (...)** }
%class.SkNVRefCnt.30 = type { %"struct.std::__1::atomic" }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes }
%class.SkFibBlockSizes = type { i32 }
%struct.GrSubRunList = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrSubRun* }
%class.GrSubRun = type { i32 (...)**, %"class.std::__1::unique_ptr" }
%"struct.GrTextBlob::Key" = type { i32, i32, float, float, i32, %"struct.SkMaskFilterBase::BlurRec", i32, %class.SkMatrix, i8, i8, i8, i8 }
%"struct.SkMaskFilterBase::BlurRec" = type { float, i32 }
%class.GrSubRunNoCachePainter = type { %class.SkGlyphRunPainterInterface, %class.GrSurfaceDrawContext*, %class.GrSubRunAllocator*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint* }
%class.GrSurfaceDrawContext = type { %class.GrSurfaceFillContext.base, %class.SkSurfaceProps, i8, i8, i32, %class.SkGlyphRunListPainter }
%class.GrSurfaceFillContext.base = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.253, i8 }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.64", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.247" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.63 }
%class.sk_sp.63 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.67, %class.SkTHashMap, %class.SkTHashMap.76, %class.SkTArray.85, %class.SkTArray.87, i32, i8, [3 x i8] }>
%class.SkTArray.67 = type { %"class.std::__1::unique_ptr.68"*, i64 }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.87, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.88 }
%class.sk_sp.88 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray.69 }
%class.SkAutoTArray.69 = type { %"class.std::__1::unique_ptr.70" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.76 = type { %class.SkTHashTable.77 }
%class.SkTHashTable.77 = type { i32, i32, %class.SkAutoTArray.78 }
%class.SkAutoTArray.78 = type { %"class.std::__1::unique_ptr.79" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.279" }
%"struct.std::__1::pair.279" = type { i32, %class.SkTArray.280* }
%class.SkTArray.280 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.85 = type { %"class.std::__1::unique_ptr.86"*, i64 }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.280, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.87 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes.95, [4 x i8] }>
%class.SkFibBlockSizes.95 = type { i32 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.GrSubRunAllocator* }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.108, %class.SkTArray.117, %class.GrOpsTask*, %class.SkSTArray.212, %class.SkSTArray.215, %"class.std::__1::unique_ptr.217", %class.sk_sp.233, %class.GrTokenTracker, i8, i8, %class.SkTArray.234, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.108 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.109", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.112, i8, [7 x i8] }>
%class.sk_sp.112 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.113, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.113 = type { i32 }
%class.SkTArray.117 = type { %class.sk_sp.118*, i64 }
%class.sk_sp.118 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray.119, %class.SkTArray.179, i32, i32, %class.SkSTArray.186, %class.SkSTArray.186, %class.GrTextureResolveRenderTask* }
%class.SkSTArray.119 = type { %class.SkAlignedSTStorage.120, %class.SkTArray.121 }
%class.SkAlignedSTStorage.120 = type { [8 x i8] }
%class.SkTArray.121 = type { %class.sk_sp.122*, i64 }
%class.sk_sp.122 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.123, %class.sk_sp.124, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.174" }
%class.SkNVRefCnt.123 = type { %"struct.std::__1::atomic" }
%class.sk_sp.124 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.128 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.125, [4 x i8] }>
%union.anon.125 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.126, i8* }
%class.sk_sp.126 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.127, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.127 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.128 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.129, void (i8*)*, i8* }
%class.SkNVRefCnt.129 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.130, i32, [4 x i8] }
%union.anon.130 = type { %struct.anon.131 }
%struct.anon.131 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.124, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.171, %class.sk_sp.173, %class.sk_sp.173 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray.141, %class.SkTMultiMap, %class.SkTDynamicHash.151, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.162, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type { %class.SkTDynamicHash, %class.GrImageContext* }
%class.SkTDynamicHash = type { %class.SkTHashTable.133 }
%class.SkTHashTable.133 = type { i32, i32, %class.SkAutoTArray.134 }
%class.SkAutoTArray.134 = type { %"class.std::__1::unique_ptr.135" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot" = type opaque
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray.141 }
%class.SkTDArray.141 = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash.142, i32, [4 x i8] }>
%class.SkTDynamicHash.142 = type { %class.SkTHashTable.143 }
%class.SkTHashTable.143 = type { i32, i32, %class.SkAutoTArray.144 }
%class.SkAutoTArray.144 = type { %"class.std::__1::unique_ptr.145" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.151 = type { %class.SkTHashTable.152 }
%class.SkTHashTable.152 = type { i32, i32, %class.SkAutoTArray.153 }
%class.SkAutoTArray.153 = type { %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.160, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.160 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.161, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.161 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.162 = type { %class.SkTHashTable.163 }
%class.SkTHashTable.163 = type { i32, i32, %class.SkAutoTArray.164 }
%class.SkAutoTArray.164 = type { %"class.std::__1::unique_ptr.165" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.171 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.172, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.172 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.173 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.174" = type { %"struct.std::__1::__atomic_base.175" }
%"struct.std::__1::__atomic_base.175" = type { %"struct.std::__1::__atomic_base.176" }
%"struct.std::__1::__atomic_base.176" = type { %"struct.std::__1::__cxx_atomic_impl.177" }
%"struct.std::__1::__cxx_atomic_impl.177" = type { %"struct.std::__1::__cxx_atomic_base_impl.178" }
%"struct.std::__1::__cxx_atomic_base_impl.178" = type { i64 }
%class.SkTArray.179 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.180", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.186 = type { %class.SkAlignedSTStorage.187, %class.SkTArray.188 }
%class.SkAlignedSTStorage.187 = type { [8 x i8] }
%class.SkTArray.188 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.189, %class.sk_sp.209, %class.SkTArray.211, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.189 = type { %class.SkAlignedSTStorage.190, %class.SkTArray.191 }
%class.SkAlignedSTStorage.190 = type { [2000 x i8] }
%class.SkTArray.191 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.192", %class.GrOp* }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.192", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.200" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.198 }
%union.anon.198 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.199, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.199 = type { i32 }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.203, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.203 = type { %class.SkAlignedSTStorage.204, %class.SkTArray.205 }
%class.SkAlignedSTStorage.204 = type { [8 x i8] }
%class.SkTArray.205 = type { %"class.std::__1::unique_ptr.200"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.209 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.210, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.210 = type { %"struct.std::__1::atomic" }
%class.SkTArray.211 = type { %class.GrSurfaceProxy**, i64 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkSTArray.212 = type { %class.SkAlignedSTStorage.213, %class.SkTArray.214 }
%class.SkAlignedSTStorage.213 = type { [32 x i8] }
%class.SkTArray.214 = type { i32*, i64 }
%class.SkSTArray.215 = type { %class.SkAlignedSTStorage.216, %class.SkTArray.117 }
%class.SkAlignedSTStorage.216 = type { [32 x i8] }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.220, %"class.std::__1::unique_ptr.224", %class.GrPathRenderer* }
%class.SkSTArray.220 = type { %class.SkAlignedSTStorage.221, %class.SkTArray.222 }
%class.SkAlignedSTStorage.221 = type { [64 x i8] }
%class.SkTArray.222 = type { %class.sk_sp.223*, i64 }
%class.sk_sp.223 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.233 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.234 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type { i32 (...)** }
%class.GrHashMapWithCache = type { %class.SkTHashMap.235, i32, %class.GrRenderTask** }
%class.SkTHashMap.235 = type { %class.SkTHashTable.236 }
%class.SkTHashTable.236 = type { i32, i32, %class.SkAutoTArray.237 }
%class.SkAutoTArray.237 = type { %"class.std::__1::unique_ptr.238" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %class.GrProxyProvider* }
%class.GrColorInfo = type { %class.sk_sp.20, %class.sk_sp.22, i32, i32 }
%class.sk_sp.20 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.21, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.21 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.sk_sp.22 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.122, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.253 = type { %class.GrOpsTask* }
%class.SkSurfaceProps = type { i32, i32 }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray, %class.SkAutoTMalloc }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.32" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.35 }
%union.anon.35 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%struct.SkPackedGlyphID = type { i32 }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.46" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %struct.SkPoint* }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.50, %class.SkSTArray, %class.SkSTArray.55 }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.0" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.0" = type { %struct.SkPoint* }
%class.SkZip.50 = type { %"class.std::__1::tuple.51", i64 }
%"class.std::__1::tuple.51" = type { %"struct.std::__1::__tuple_impl.52" }
%"struct.std::__1::__tuple_impl.52" = type { %"class.std::__1::__tuple_leaf.53", %"class.std::__1::__tuple_leaf.54" }
%"class.std::__1::__tuple_leaf.53" = type { i16* }
%"class.std::__1::__tuple_leaf.54" = type { %struct.SkPoint* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { i16*, i64 }
%class.SkSTArray.55 = type { %class.SkAlignedSTStorage.56, %class.SkTArray.57 }
%class.SkAlignedSTStorage.56 = type { [32 x i8] }
%class.SkTArray.57 = type { %struct.SkPoint*, i64 }
%class.GrClip = type { i32 (...)** }
%class.SkGlyphRunList = type { %class.SkSpan, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan = type { %class.SkGlyphRun*, i64 }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan.1, %class.SkSpan.2, %class.SkSpan.3, %class.SkFont }
%class.SkSpan.1 = type { i8*, i64 }
%class.SkSpan.2 = type { i32*, i64 }
%class.SkSpan.3 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkTextBlob = type { %class.SkNVRefCnt, %struct.SkRect, i32, %"struct.std::__1::atomic.10" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i32 }
%"class.std::__1::tuple.23" = type { %"struct.std::__1::__tuple_impl.24" }
%"struct.std::__1::__tuple_impl.24" = type { %"class.std::__1::__tuple_leaf.25", %"class.std::__1::__tuple_leaf.26" }
%"class.std::__1::__tuple_leaf.25" = type { i8 }
%"class.std::__1::__tuple_leaf.26" = type { %"struct.GrTextBlob::Key" }
%class.GrSDFTControl = type <{ float, float, i8, [3 x i8] }>
%class.SkMaskFilterBase = type { %class.SkMaskFilter.base, [4 x i8] }
%class.SkMaskFilter.base = type { %class.SkFlattenable.base }
%"struct.std::__1::__tuple_impl.28" = type { %"class.std::__1::__tuple_leaf.25", %"class.std::__1::__tuple_leaf.29" }
%"class.std::__1::__tuple_leaf.29" = type { %struct.SkPoint }
%class.sk_sp.58 = type { %class.GrTextBlob* }
%class.SkZip.59 = type { %"class.std::__1::tuple.60", i64 }
%"class.std::__1::tuple.60" = type { %"struct.std::__1::__tuple_impl.61" }
%"struct.std::__1::__tuple_impl.61" = type { %"class.std::__1::__tuple_leaf.62", %"class.std::__1::__tuple_leaf.54" }
%"class.std::__1::__tuple_leaf.62" = type { %class.SkGlyphVariant* }
%class.SkStrikeSpec = type <{ %class.SkAutoDescriptor, %class.sk_sp.17, %class.sk_sp.15, %class.sk_sp, float, [4 x i8] }>
%class.SkAutoDescriptor = type { %class.SkDescriptor*, [120 x i8] }
%class.SkDescriptor = type { i32, i32, i32 }
%"class.(anonymous namespace)::GlyphVector" = type { %class.SkStrikeSpec, %class.SkSpan.300, %class.sk_sp.301, i64, %"class.GrDrawOpAtlas::BulkUseTokenUpdater" }
%class.SkSpan.300 = type { %"union.(anonymous namespace)::GlyphVector::Variant"*, i64 }
%"union.(anonymous namespace)::GlyphVector::Variant" = type { %class.GrGlyph* }
%class.GrGlyph = type { %struct.SkPackedGlyphID, %"class.GrDrawOpAtlas::AtlasLocator" }
%"class.GrDrawOpAtlas::AtlasLocator" = type { %"class.GrDrawOpAtlas::PlotLocator", %"struct.std::__1::array.294" }
%"class.GrDrawOpAtlas::PlotLocator" = type { i64 }
%"struct.std::__1::array.294" = type { [4 x i16] }
%class.sk_sp.301 = type { %class.GrTextStrike* }
%class.GrTextStrike = type { %class.SkNVRefCnt.302, %class.SkTHashTable.303, %class.SkAutoDescriptor, %class.SkArenaAlloc }
%class.SkNVRefCnt.302 = type { %"struct.std::__1::atomic" }
%class.SkTHashTable.303 = type { i32, i32, %class.SkAutoTArray.304 }
%class.SkAutoTArray.304 = type { %"class.std::__1::unique_ptr.305" }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* }
%"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot" = type <{ %class.GrGlyph*, i32, [4 x i8] }>
%"class.GrDrawOpAtlas::BulkUseTokenUpdater" = type { %class.SkSTArray.311, [4 x i32] }
%class.SkSTArray.311 = type { %class.SkAlignedSTStorage.312, %class.SkTArray.313 }
%class.SkAlignedSTStorage.312 = type { [32 x i8] }
%class.SkTArray.313 = type { %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, i64 }
%"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData" = type { i32, i32 }
%"struct.skvx::Vec" = type { %"struct.skvx::Vec.293", %"struct.skvx::Vec.293" }
%"struct.skvx::Vec.293" = type { i16 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.(anonymous namespace)::PathSubRun::PathGlyph" = type { %class.SkPath, %struct.SkPoint }
%"struct.(anonymous namespace)::SDFTSubRun::VertexData" = type { %struct.SkPoint, %struct.GrIRect16 }
%struct.GrIRect16 = type { i16, i16, i16, i16 }
%"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData" = type { %struct.SkPoint, %struct.GrIRect16 }
%"class.std::__1::function.268" = type { %"class.std::__1::__function::__policy_func.272" }
%"class.std::__1::__function::__policy_func.272" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.273", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.273" = type { void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* }
%class.GrAtlasSubRun = type { i32 (...)** }
%"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData" = type { %struct.SkPoint, %struct.GrIRect16 }
%class.GrStyle = type { %class.SkStrokeRec, %class.sk_sp.15, %"struct.GrStyle::DashInfo" }
%"struct.GrStyle::DashInfo" = type { i32, float, %class.SkAutoSTArray }
%class.SkAutoSTArray = type { i32, float*, [16 x i8] }
%class.GrStyledShape = type { %class.GrShape, %class.GrStyle, i32, i8, i8, %class.SkTLazy, %class.SkAutoSTArray.263 }
%class.SkAutoSTArray.263 = type { i32, i32*, [32 x i8] }
%"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData" = type { %struct.SkPoint, %struct.GrIRect16 }
%"class.(anonymous namespace)::DirectMaskSubRun" = type { %class.GrSubRun, %class.GrAtlasSubRun, i32, %class.GrTextBlob*, %class.SkGlyphRect, %class.SkSpan.296, i8, %"class.(anonymous namespace)::GlyphVector" }
%class.SkGlyphRect = type { %"struct.skvx::Vec.295" }
%"struct.skvx::Vec.295" = type { %"struct.skvx::Vec", %"struct.skvx::Vec" }
%class.SkSpan.296 = type { %"struct.skvx::Vec"*, i64 }
%"class.std::__1::tuple.333" = type { %"struct.std::__1::__tuple_impl.334" }
%"struct.std::__1::__tuple_impl.334" = type { %"class.std::__1::__tuple_leaf.335", %"class.std::__1::__tuple_leaf.336" }
%"class.std::__1::__tuple_leaf.335" = type { i32 }
%"class.std::__1::__tuple_leaf.336" = type { %struct.SkIRect }
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.200", i8, [3 x i8], %struct.SkRGBA4f.337, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.209, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%"struct.GrAtlasTextOp::Geometry" = type { %class.GrAtlasSubRun*, %class.sk_sp.58, %"class.std::__1::unique_ptr.255", %class.SkMatrix, %struct.SkPoint, %struct.SkIRect, %struct.SkRGBA4f.337, %"struct.GrAtlasTextOp::Geometry"* }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %class.GrAtlasSubRun* }
%class.GrAtlasTextOp = type { %class.GrMeshDrawOp, %class.GrProcessorSet, i32, i16, i32, %"struct.GrAtlasTextOp::Geometry"*, %"struct.GrAtlasTextOp::Geometry"** }
%class.GrMeshDrawOp = type { %class.GrDrawOp }
%class.GrDrawOp = type { %class.GrOp }
%class.GrProcessorSet = type <{ %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.200", %"union.GrProcessorSet::XP", i8, [7 x i8] }>
%"union.GrProcessorSet::XP" = type { %class.GrXPFactory* }
%class.GrStrikeCache = type { %class.SkTHashTable.321 }
%class.SkTHashTable.321 = type { i32, i32, %class.SkAutoTArray.322 }
%class.SkAutoTArray.322 = type { %"class.std::__1::unique_ptr.323" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* }
%"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot" = type <{ %class.sk_sp.301, i32, [4 x i8] }>
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.SkZip.401 = type { %"class.std::__1::tuple.402", i64 }
%"class.std::__1::tuple.402" = type { %"struct.std::__1::__tuple_impl.403" }
%"struct.std::__1::__tuple_impl.403" = type { %"class.std::__1::__tuple_leaf.404", %"class.std::__1::__tuple_leaf.405", %"class.std::__1::__tuple_leaf.406" }
%"class.std::__1::__tuple_leaf.404" = type { [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* }
%"struct.(anonymous namespace)::Mask2DVertex" = type { %struct.SkPoint, i32, %"struct.(anonymous namespace)::AtlasPt" }
%"struct.(anonymous namespace)::AtlasPt" = type { i16, i16 }
%"class.std::__1::__tuple_leaf.405" = type { %class.GrGlyph** }
%"class.std::__1::__tuple_leaf.406" = type { %"struct.skvx::Vec"* }
%class.SkZip.407 = type { %"class.std::__1::tuple.408", i64 }
%"class.std::__1::tuple.408" = type { %"struct.std::__1::__tuple_impl.409" }
%"struct.std::__1::__tuple_impl.409" = type { %"class.std::__1::__tuple_leaf.410", %"class.std::__1::__tuple_leaf.405", %"class.std::__1::__tuple_leaf.406" }
%"class.std::__1::__tuple_leaf.410" = type { [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* }
%"struct.(anonymous namespace)::ARGB2DVertex" = type { %struct.SkPoint, %"struct.(anonymous namespace)::AtlasPt" }
%"struct.GrClip::PreClipResult" = type <{ i32, %class.SkRRect, i8, i8, [2 x i8] }>
%class.SkBulkGlyphMetricsAndImages = type { %class.SkAutoSTArray.359, %class.sk_sp.360 }
%class.SkAutoSTArray.359 = type { i32, %class.SkGlyph**, [512 x i8] }
%class.sk_sp.360 = type { %"class.SkStrikeCache::Strike"* }
%"class.SkStrikeCache::Strike" = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkStrikeForGPU, %class.SkStrikeCache*, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkScalerCache, %"class.std::__1::unique_ptr.393", i64, i8, [7 x i8] }>
%class.SkStrikeForGPU = type { i32 (...)** }
%class.SkStrikeCache = type { %class.SkStrikeForGPUCacheInterface, %class.SkMutex, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkTHashTable.361, i64, i64, i32, i32 }
%class.SkTHashTable.361 = type { i32, i32, %class.SkAutoTArray.362 }
%class.SkAutoTArray.362 = type { %"class.std::__1::unique_ptr.363" }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* }
%"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot" = type opaque
%class.SkScalerCache = type { %class.SkAutoDescriptor, %"class.std::__1::unique_ptr.369", %struct.SkFontMetrics, %struct.SkGlyphPositionRoundingSpec, %class.SkMutex, %class.SkTHashMap.376, %"class.std::__1::vector.386", %class.SkArenaAlloc }
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %class.SkScalerContext* }
%class.SkScalerContext = type { i32 (...)**, %struct.SkScalerContextRec, %class.sk_sp, %class.sk_sp.15, %class.sk_sp.17, i8, %class.SkTMaskPreBlend }
%struct.SkScalerContextRec = type { i32, float, float, float, [2 x [2 x float]], float, float, i32, i8, i8, i8, i8, i8, i8, i16 }
%class.SkTMaskPreBlend = type { %class.sk_sp.372, i8*, i8*, i8* }
%class.sk_sp.372 = type { %class.SkTMaskGamma* }
%class.SkTMaskGamma = type { %class.SkRefCnt.base, [8 x [256 x i8]], i8, [3 x i8] }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.SkGlyphPositionRoundingSpec = type { %struct.SkPoint, %struct.SkIPoint, %struct.SkIPoint }
%class.SkTHashMap.376 = type { %class.SkTHashTable.377 }
%class.SkTHashTable.377 = type { i32, i32, %class.SkAutoTArray.378 }
%class.SkAutoTArray.378 = type { %"class.std::__1::unique_ptr.379" }
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.382" }
%"struct.std::__1::pair.382" = type { %struct.SkPackedGlyphID, %class.SkGlyphDigest }
%class.SkGlyphDigest = type { [3 x i8], i8 }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %class.SkGlyph**, %class.SkGlyph**, %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %class.SkGlyph** }
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %class.SkStrikePinner* }
%class.SkStrikePinner = type { i32 (...)** }
%class.GrAtlasManager = type <{ %class.GrOnFlushCallbackObject, %"class.GrDrawOpAtlas::GenerationCounter", i8, [7 x i8], [3 x %"class.std::__1::unique_ptr.341"], %class.GrProxyProvider*, %class.sk_sp.171, %class.GrDrawOpAtlasConfig, [4 x i8] }>
%"class.GrDrawOpAtlas::GenerationCounter" = type { i64 }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %class.GrDrawOpAtlas* }
%class.GrDrawOpAtlas = type { %class.GrBackendFormat, i32, i32, i32, i32, i32, i32, %"class.GrDrawOpAtlas::GenerationCounter"*, i64, %class.GrDeferredUploadToken, i32, %"class.std::__1::vector", [4 x %class.GrSurfaceProxyView], [4 x %"struct.GrDrawOpAtlas::Page"], i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.GrDrawOpAtlas::EvictionCallback"**, %"class.GrDrawOpAtlas::EvictionCallback"**, %"class.std::__1::__compressed_pair.344" }
%"class.GrDrawOpAtlas::EvictionCallback" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.GrDrawOpAtlas::EvictionCallback"** }
%"struct.GrDrawOpAtlas::Page" = type { %"class.std::__1::unique_ptr.347", %class.SkTInternalLList }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %class.sk_sp.350* }
%class.sk_sp.350 = type { %"class.GrDrawOpAtlas::Plot"* }
%"class.GrDrawOpAtlas::Plot" = type { %class.SkRefCnt.base, %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"*, %class.GrDeferredUploadToken, %class.GrDeferredUploadToken, i32, %struct.anon.351, %"class.GrDrawOpAtlas::GenerationCounter"*, i64, %"class.GrDrawOpAtlas::PlotLocator", i8*, i32, i32, i32, i32, %class.GrRectanizerSkyline, %struct.SkIPoint16, i32, i64, %struct.SkIRect }
%struct.anon.351 = type { i32 }
%class.GrRectanizerSkyline = type <{ %class.GrRectanizer, %class.SkTDArray.352, i32, [4 x i8] }>
%class.GrRectanizer = type { i32 (...)**, i32, i32 }
%class.SkTDArray.352 = type { %"struct.GrRectanizerSkyline::SkylineSegment"*, i32, i32 }
%"struct.GrRectanizerSkyline::SkylineSegment" = type { i32, i32, i32 }
%struct.SkIPoint16 = type { i16, i16 }
%class.SkTInternalLList = type { %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"* }
%class.GrDrawOpAtlasConfig = type { %struct.SkISize, i32 }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%"class.(anonymous namespace)::PathSubRun" = type { %class.GrSubRun, i8, [7 x i8], %class.SkStrikeSpec, %class.SkSpan.454, %"class.std::__1::unique_ptr.445" }
%class.SkSpan.454 = type { %"struct.(anonymous namespace)::PathSubRun::PathGlyph"*, i64 }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type <{ %"struct.std::__1::__compressed_pair_elem.447", %"struct.std::__1::__compressed_pair_elem.448", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.447" = type { %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"struct.GrSubRunAllocator::ArrayDestroyer" }
%"struct.GrSubRunAllocator::ArrayDestroyer" = type { i32 }
%"class.(anonymous namespace)::SDFTSubRun" = type <{ %class.GrSubRun, %class.GrAtlasSubRun, i32, [4 x i8], %class.GrTextBlob*, %struct.SkRect, %class.SkSpan.467, %"class.(anonymous namespace)::GlyphVector", i8, i8, [6 x i8] }>
%class.SkSpan.467 = type { %"struct.(anonymous namespace)::SDFTSubRun::VertexData"*, i64 }
%"class.(anonymous namespace)::TransformedMaskSubRun" = type { %class.GrSubRun, %class.GrAtlasSubRun, i32, %class.GrTextBlob*, %struct.SkRect, %class.SkSpan.517, %"class.(anonymous namespace)::GlyphVector" }
%class.SkSpan.517 = type { %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"*, i64 }
%struct.SkPoint3 = type { float, float, float }
%"struct.(anonymous namespace)::ARGB3DVertex" = type { %struct.SkPoint3, %"struct.(anonymous namespace)::AtlasPt" }
%"struct.(anonymous namespace)::Mask3DVertex" = type { %struct.SkPoint3, i32, %"struct.(anonymous namespace)::AtlasPt" }
%"class.(anonymous namespace)::DirectMaskSubRunNoCache" = type { %class.GrAtlasSubRun, i32, %struct.SkRect, %class.SkSpan.296, [112 x i8], %"class.(anonymous namespace)::GlyphVector" }
%"class.(anonymous namespace)::TransformedMaskSubRunNoCache" = type { %class.GrAtlasSubRun, i32, %struct.SkRect, %class.SkSpan.571, [112 x i8], %"class.(anonymous namespace)::GlyphVector" }
%class.SkSpan.571 = type { %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"*, i64 }
%"class.(anonymous namespace)::SDFTSubRunNoCache" = type <{ %class.GrAtlasSubRun, i32, %struct.SkRect, [4 x i8], %class.SkSpan.614, [112 x i8], %"class.(anonymous namespace)::GlyphVector", i8, i8, [6 x i8] }>
%class.SkSpan.614 = type { %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData"*, i64 }

$_ZN10GrTextBlob18addMultiMaskFormatIPFNSt3__110unique_ptrI8GrSubRunN17GrSubRunAllocator9DestroyerEEERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec12GrMaskFormatPS_PS4_EEEvT_SC_SF_ = comdat any

$_ZN13GrStyledShapeC2ERK6SkPathRK7SkPaintNS_10DoSimplifyE = comdat any

$_ZN13GrStyledShapeD2Ev = comdat any

$_ZN16SkMatrixProviderD2Ev = comdat any

$_ZN22GrSubRunNoCachePainterD0Ev = comdat any

$_ZN26SkGlyphRunPainterInterfaceD2Ev = comdat any

$_ZN8SkTArrayIN13GrDrawOpAtlas19BulkUseTokenUpdater8PlotDataELb1EE12checkReallocEiNS3_11ReallocTypeE = comdat any

$_ZN8GrSubRunD2Ev = comdat any

$_ZN8GrSubRunD0Ev = comdat any

$_ZN19GrRenderTargetProxy6arenasEv = comdat any

$_ZN25SkPreConcatMatrixProviderD0Ev = comdat any

$_ZNK25SkPreConcatMatrixProvider16getLocalToMarkerEjP5SkM44 = comdat any

$_ZNK25SkPreConcatMatrixProvider29localToDeviceHitsPixelCentersEv = comdat any

$_ZN13GrStyledShapeC2ERK6SkPathRK7GrStyleNS_10DoSimplifyE = comdat any

$_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZTV8GrSubRun = comdat any

$_ZTV25SkPreConcatMatrixProvider = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

@.str = private unnamed_addr constant [51 x i8] c"../../third_party/skia/src/gpu/text/GrTextBlob.cpp\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"All blobs are created by placement new.\00", align 1
@_ZTV10GrTextBlob = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrTextBlob*)* @_ZN10GrTextBlobD2Ev to i8*), i8* bitcast (void (%class.GrTextBlob*)* @_ZN10GrTextBlobD0Ev to i8*), i8* bitcast (void (%class.GrTextBlob*, %class.SkZip.59*, %class.SkStrikeSpec*)* @_ZN10GrTextBlob18processDeviceMasksERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec to i8*), i8* bitcast (void (%class.GrTextBlob*, %class.SkZip.59*, %class.SkStrikeSpec*)* @_ZN10GrTextBlob18processSourceMasksERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec to i8*), i8* bitcast (void (%class.GrTextBlob*, %class.SkZip.59*, %class.SkFont*, %class.SkStrikeSpec*)* @_ZN10GrTextBlob18processSourcePathsERK5SkZipIJ14SkGlyphVariant7SkPointEERK6SkFontRK12SkStrikeSpec to i8*), i8* bitcast (void (%class.GrTextBlob*, %class.SkZip.59*, %class.SkStrikeSpec*, %class.SkFont*, float, float)* @_ZN10GrTextBlob17processSourceSDFTERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpecRK6SkFontff to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [11 x i8] c"GrTextBlob\00", align 1
@_ZTV22GrSubRunNoCachePainter = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkGlyphRunPainterInterface*)* @_ZN26SkGlyphRunPainterInterfaceD2Ev to i8*), i8* bitcast (void (%class.GrSubRunNoCachePainter*)* @_ZN22GrSubRunNoCachePainterD0Ev to i8*), i8* bitcast (void (%class.GrSubRunNoCachePainter*, %class.SkZip.59*, %class.SkStrikeSpec*)* @_ZN22GrSubRunNoCachePainter18processDeviceMasksERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec to i8*), i8* bitcast (void (%class.GrSubRunNoCachePainter*, %class.SkZip.59*, %class.SkStrikeSpec*)* @_ZN22GrSubRunNoCachePainter18processSourceMasksERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec to i8*), i8* bitcast (void (%class.GrSubRunNoCachePainter*, %class.SkZip.59*, %class.SkFont*, %class.SkStrikeSpec*)* @_ZN22GrSubRunNoCachePainter18processSourcePathsERK5SkZipIJ14SkGlyphVariant7SkPointEERK6SkFontRK12SkStrikeSpec to i8*), i8* bitcast (void (%class.GrSubRunNoCachePainter*, %class.SkZip.59*, %class.SkStrikeSpec*, %class.SkFont*, float, float)* @_ZN22GrSubRunNoCachePainter17processSourceSDFTERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpecRK6SkFontff to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [51 x i8] c"../../third_party/skia/src/gpu/GrSubRunAllocator.h\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.6 = private unnamed_addr constant [51 x i8] c"0 <= requestedSize && requestedSize < kMaxByteSize\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"0 <= n && n < kMaxN\00", align 1
@_ZTVN12_GLOBAL__N_116DirectMaskSubRunE = internal unnamed_addr constant { [13 x i8*], [10 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::DirectMaskSubRun"*)* @_ZN12_GLOBAL__N_116DirectMaskSubRunD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DirectMaskSubRun"*)* @_ZN12_GLOBAL__N_116DirectMaskSubRunD0Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DirectMaskSubRun"*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*)* @_ZNK12_GLOBAL__N_116DirectMaskSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::DirectMaskSubRun"*, %class.SkPaint*, %class.SkMatrix*)* @_ZNK12_GLOBAL__N_116DirectMaskSubRun8canReuseERK7SkPaintRK8SkMatrix to i8*), i8* bitcast (%class.GrAtlasSubRun* (%"class.(anonymous namespace)::DirectMaskSubRun"*)* @_ZN12_GLOBAL__N_116DirectMaskSubRun23testingOnly_atlasSubRunEv to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::DirectMaskSubRun"*, %class.SkMatrix*)* @_ZNK12_GLOBAL__N_116DirectMaskSubRun12vertexStrideERK8SkMatrix to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::DirectMaskSubRun"*)* @_ZNK12_GLOBAL__N_116DirectMaskSubRun10glyphCountEv to i8*), i8* bitcast ({ %class.GrClip*, %class.GrOp* } (%"class.(anonymous namespace)::DirectMaskSubRun"*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)* @_ZNK12_GLOBAL__N_116DirectMaskSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DirectMaskSubRun"*, %class.GrStrikeCache*)* @_ZN12_GLOBAL__N_116DirectMaskSubRun34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::DirectMaskSubRun"*, i32, i32, %"class.GrMeshDrawOp::Target"*)* @_ZNK12_GLOBAL__N_116DirectMaskSubRun15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DirectMaskSubRun"*, i8*, i32, i32, i32, %class.SkMatrix*, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_116DirectMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRect to i8*)], [10 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.(anonymous namespace)::DirectMaskSubRun"*)* @_ZThn16_N12_GLOBAL__N_116DirectMaskSubRunD1Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DirectMaskSubRun"*)* @_ZThn16_N12_GLOBAL__N_116DirectMaskSubRunD0Ev to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::DirectMaskSubRun"*, %class.SkMatrix*)* @_ZThn16_NK12_GLOBAL__N_116DirectMaskSubRun12vertexStrideERK8SkMatrix to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::DirectMaskSubRun"*)* @_ZThn16_NK12_GLOBAL__N_116DirectMaskSubRun10glyphCountEv to i8*), i8* bitcast ({ %class.GrClip*, %class.GrOp* } (%"class.(anonymous namespace)::DirectMaskSubRun"*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)* @_ZThn16_NK12_GLOBAL__N_116DirectMaskSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DirectMaskSubRun"*, i8*, i32, i32, i32, %class.SkMatrix*, %struct.SkIRect*)* @_ZThn16_NK12_GLOBAL__N_116DirectMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRect to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DirectMaskSubRun"*, %class.GrStrikeCache*)* @_ZThn16_N12_GLOBAL__N_116DirectMaskSubRun34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::DirectMaskSubRun"*, i32, i32, %"class.GrMeshDrawOp::Target"*)* @_ZThn16_NK12_GLOBAL__N_116DirectMaskSubRun15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@_ZTV8GrSubRun = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrSubRun*)* @_ZN8GrSubRunD2Ev to i8*), i8* bitcast (void (%class.GrSubRun*)* @_ZN8GrSubRunD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZL17SK_PMColor4fWHITE = internal unnamed_addr constant %struct.SkRGBA4f.337 { float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00 }, align 4
@_ZTVN12_GLOBAL__N_110PathSubRunE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::PathSubRun"*)* @_ZN12_GLOBAL__N_110PathSubRunD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::PathSubRun"*)* @_ZN12_GLOBAL__N_110PathSubRunD0Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::PathSubRun"*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*)* @_ZNK12_GLOBAL__N_110PathSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::PathSubRun"*, %class.SkPaint*, %class.SkMatrix*)* @_ZNK12_GLOBAL__N_110PathSubRun8canReuseERK7SkPaintRK8SkMatrix to i8*), i8* bitcast (%class.GrAtlasSubRun* (%"class.(anonymous namespace)::PathSubRun"*)* @_ZN12_GLOBAL__N_110PathSubRun23testingOnly_atlasSubRunEv to i8*)] }, align 8
@__const._ZNK12_GLOBAL__N_110PathSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext.runPaint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.15 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.16 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.17 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.18 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.19 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZNK12_GLOBAL__N_110PathSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext.style = private unnamed_addr constant { %class.SkStrokeRec, %class.sk_sp.15, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } } { %class.SkStrokeRec { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766 }, %class.sk_sp.15 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } { i32 -1431655766, float 0xFFFFFFFFE0000000, { i32, [4 x i8], float*, [16 x i8] } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", float* inttoptr (i64 -6148914691236517206 to float*), [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } } }, align 8
@__const._ZNK12_GLOBAL__N_110PathSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext.strikeToDevice = private unnamed_addr constant %class.SkPreConcatMatrixProvider { %class.SkMatrixProvider { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, %class.SkMatrixProvider* inttoptr (i64 -6148914691236517206 to %class.SkMatrixProvider*), %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, align 8
@__const._ZNK12_GLOBAL__N_110PathSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext.shape.9 = private unnamed_addr constant { %class.GrShape, { %class.SkStrokeRec, %class.sk_sp.15, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } }, i32, i8, i8, [2 x i8], %class.SkTLazy, { i32, [4 x i8], i32*, [32 x i8] } } { %class.GrShape { %union.anon.262 { %class.SkRRect { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x %struct.SkPoint] [%struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }], i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA" }, { %class.SkStrokeRec, %class.sk_sp.15, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } } { %class.SkStrokeRec { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766 }, %class.sk_sp.15 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } { i32 -1431655766, float 0xFFFFFFFFE0000000, { i32, [4 x i8], float*, [16 x i8] } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", float* inttoptr (i64 -6148914691236517206 to float*), [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } } }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %class.SkTLazy { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", %class.SkPath* inttoptr (i64 -6148914691236517206 to %class.SkPath*) }, { i32, [4 x i8], i32*, [32 x i8] } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i32* inttoptr (i64 -6148914691236517206 to i32*), [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, align 8
@_ZTVN12_GLOBAL__N_110SDFTSubRunE = internal unnamed_addr constant { [13 x i8*], [10 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::SDFTSubRun"*)* @_ZN12_GLOBAL__N_110SDFTSubRunD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SDFTSubRun"*)* @_ZN12_GLOBAL__N_110SDFTSubRunD0Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SDFTSubRun"*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*)* @_ZNK12_GLOBAL__N_110SDFTSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::SDFTSubRun"*, %class.SkPaint*, %class.SkMatrix*)* @_ZNK12_GLOBAL__N_110SDFTSubRun8canReuseERK7SkPaintRK8SkMatrix to i8*), i8* bitcast (%class.GrAtlasSubRun* (%"class.(anonymous namespace)::SDFTSubRun"*)* @_ZN12_GLOBAL__N_110SDFTSubRun23testingOnly_atlasSubRunEv to i8*), i8* bitcast ({ %class.GrClip*, %class.GrOp* } (%"class.(anonymous namespace)::SDFTSubRun"*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)* @_ZNK12_GLOBAL__N_110SDFTSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SDFTSubRun"*, %class.GrStrikeCache*)* @_ZN12_GLOBAL__N_110SDFTSubRun34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::SDFTSubRun"*, i32, i32, %"class.GrMeshDrawOp::Target"*)* @_ZNK12_GLOBAL__N_110SDFTSubRun15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SDFTSubRun"*, i8*, i32, i32, i32, %class.SkMatrix*, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_110SDFTSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRect to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::SDFTSubRun"*, %class.SkMatrix*)* @_ZNK12_GLOBAL__N_110SDFTSubRun12vertexStrideERK8SkMatrix to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::SDFTSubRun"*)* @_ZNK12_GLOBAL__N_110SDFTSubRun10glyphCountEv to i8*)], [10 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.(anonymous namespace)::SDFTSubRun"*)* @_ZThn16_N12_GLOBAL__N_110SDFTSubRunD1Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SDFTSubRun"*)* @_ZThn16_N12_GLOBAL__N_110SDFTSubRunD0Ev to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::SDFTSubRun"*, %class.SkMatrix*)* @_ZThn16_NK12_GLOBAL__N_110SDFTSubRun12vertexStrideERK8SkMatrix to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::SDFTSubRun"*)* @_ZThn16_NK12_GLOBAL__N_110SDFTSubRun10glyphCountEv to i8*), i8* bitcast ({ %class.GrClip*, %class.GrOp* } (%"class.(anonymous namespace)::SDFTSubRun"*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)* @_ZThn16_NK12_GLOBAL__N_110SDFTSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SDFTSubRun"*, i8*, i32, i32, i32, %class.SkMatrix*, %struct.SkIRect*)* @_ZThn16_NK12_GLOBAL__N_110SDFTSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRect to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SDFTSubRun"*, %class.GrStrikeCache*)* @_ZThn16_N12_GLOBAL__N_110SDFTSubRun34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::SDFTSubRun"*, i32, i32, %"class.GrMeshDrawOp::Target"*)* @_ZThn16_NK12_GLOBAL__N_110SDFTSubRun15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@_ZTVN12_GLOBAL__N_121TransformedMaskSubRunE = internal unnamed_addr constant { [13 x i8*], [10 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::TransformedMaskSubRun"*)* @_ZN12_GLOBAL__N_121TransformedMaskSubRunD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TransformedMaskSubRun"*)* @_ZN12_GLOBAL__N_121TransformedMaskSubRunD0Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TransformedMaskSubRun"*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*)* @_ZNK12_GLOBAL__N_121TransformedMaskSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::TransformedMaskSubRun"*, %class.SkPaint*, %class.SkMatrix*)* @_ZNK12_GLOBAL__N_121TransformedMaskSubRun8canReuseERK7SkPaintRK8SkMatrix to i8*), i8* bitcast (%class.GrAtlasSubRun* (%"class.(anonymous namespace)::TransformedMaskSubRun"*)* @_ZN12_GLOBAL__N_121TransformedMaskSubRun23testingOnly_atlasSubRunEv to i8*), i8* bitcast ({ %class.GrClip*, %class.GrOp* } (%"class.(anonymous namespace)::TransformedMaskSubRun"*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)* @_ZNK12_GLOBAL__N_121TransformedMaskSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TransformedMaskSubRun"*, %class.GrStrikeCache*)* @_ZN12_GLOBAL__N_121TransformedMaskSubRun34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::TransformedMaskSubRun"*, i32, i32, %"class.GrMeshDrawOp::Target"*)* @_ZNK12_GLOBAL__N_121TransformedMaskSubRun15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TransformedMaskSubRun"*, i8*, i32, i32, i32, %class.SkMatrix*, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_121TransformedMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRect to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::TransformedMaskSubRun"*, %class.SkMatrix*)* @_ZNK12_GLOBAL__N_121TransformedMaskSubRun12vertexStrideERK8SkMatrix to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::TransformedMaskSubRun"*)* @_ZNK12_GLOBAL__N_121TransformedMaskSubRun10glyphCountEv to i8*)], [10 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.(anonymous namespace)::TransformedMaskSubRun"*)* @_ZThn16_N12_GLOBAL__N_121TransformedMaskSubRunD1Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TransformedMaskSubRun"*)* @_ZThn16_N12_GLOBAL__N_121TransformedMaskSubRunD0Ev to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::TransformedMaskSubRun"*, %class.SkMatrix*)* @_ZThn16_NK12_GLOBAL__N_121TransformedMaskSubRun12vertexStrideERK8SkMatrix to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::TransformedMaskSubRun"*)* @_ZThn16_NK12_GLOBAL__N_121TransformedMaskSubRun10glyphCountEv to i8*), i8* bitcast ({ %class.GrClip*, %class.GrOp* } (%"class.(anonymous namespace)::TransformedMaskSubRun"*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)* @_ZThn16_NK12_GLOBAL__N_121TransformedMaskSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TransformedMaskSubRun"*, i8*, i32, i32, i32, %class.SkMatrix*, %struct.SkIRect*)* @_ZThn16_NK12_GLOBAL__N_121TransformedMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRect to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TransformedMaskSubRun"*, %class.GrStrikeCache*)* @_ZThn16_N12_GLOBAL__N_121TransformedMaskSubRun34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::TransformedMaskSubRun"*, i32, i32, %"class.GrMeshDrawOp::Target"*)* @_ZThn16_NK12_GLOBAL__N_121TransformedMaskSubRun15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@_ZTVN12_GLOBAL__N_123DirectMaskSubRunNoCacheE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::DirectMaskSubRunNoCache"*)* @_ZN12_GLOBAL__N_123DirectMaskSubRunNoCacheD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DirectMaskSubRunNoCache"*)* @_ZN12_GLOBAL__N_123DirectMaskSubRunNoCacheD0Ev to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::DirectMaskSubRunNoCache"*, %class.SkMatrix*)* @_ZNK12_GLOBAL__N_123DirectMaskSubRunNoCache12vertexStrideERK8SkMatrix to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::DirectMaskSubRunNoCache"*)* @_ZNK12_GLOBAL__N_123DirectMaskSubRunNoCache10glyphCountEv to i8*), i8* bitcast ({ %class.GrClip*, %class.GrOp* } (%"class.(anonymous namespace)::DirectMaskSubRunNoCache"*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)* @_ZNK12_GLOBAL__N_123DirectMaskSubRunNoCache15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DirectMaskSubRunNoCache"*, i8*, i32, i32, i32, %class.SkMatrix*, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_123DirectMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRect to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DirectMaskSubRunNoCache"*, %class.GrStrikeCache*)* @_ZN12_GLOBAL__N_123DirectMaskSubRunNoCache34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::DirectMaskSubRunNoCache"*, i32, i32, %"class.GrMeshDrawOp::Target"*)* @_ZNK12_GLOBAL__N_123DirectMaskSubRunNoCache15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@_ZTVN12_GLOBAL__N_128TransformedMaskSubRunNoCacheE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"*)* @_ZN12_GLOBAL__N_128TransformedMaskSubRunNoCacheD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"*)* @_ZN12_GLOBAL__N_128TransformedMaskSubRunNoCacheD0Ev to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"*, %class.SkMatrix*)* @_ZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache12vertexStrideERK8SkMatrix to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"*)* @_ZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache10glyphCountEv to i8*), i8* bitcast ({ %class.GrClip*, %class.GrOp* } (%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)* @_ZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"*, i8*, i32, i32, i32, %class.SkMatrix*, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRect to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"*, %class.GrStrikeCache*)* @_ZN12_GLOBAL__N_128TransformedMaskSubRunNoCache34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"*, i32, i32, %"class.GrMeshDrawOp::Target"*)* @_ZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@_ZTV25SkPreConcatMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkPreConcatMatrixProvider*)* @_ZN25SkPreConcatMatrixProviderD0Ev to i8*), i8* bitcast (i1 (%class.SkPreConcatMatrixProvider*, i32, %class.SkM44*)* @_ZNK25SkPreConcatMatrixProvider16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkPreConcatMatrixProvider*)* @_ZNK25SkPreConcatMatrixProvider29localToDeviceHitsPixelCentersEv to i8*)] }, comdat, align 8
@_ZTVN12_GLOBAL__N_117SDFTSubRunNoCacheE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::SDFTSubRunNoCache"*)* @_ZN12_GLOBAL__N_117SDFTSubRunNoCacheD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SDFTSubRunNoCache"*)* @_ZN12_GLOBAL__N_117SDFTSubRunNoCacheD0Ev to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::SDFTSubRunNoCache"*, %class.SkMatrix*)* @_ZNK12_GLOBAL__N_117SDFTSubRunNoCache12vertexStrideERK8SkMatrix to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::SDFTSubRunNoCache"*)* @_ZNK12_GLOBAL__N_117SDFTSubRunNoCache10glyphCountEv to i8*), i8* bitcast ({ %class.GrClip*, %class.GrOp* } (%"class.(anonymous namespace)::SDFTSubRunNoCache"*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)* @_ZNK12_GLOBAL__N_117SDFTSubRunNoCache15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SDFTSubRunNoCache"*, i8*, i32, i32, i32, %class.SkMatrix*, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_117SDFTSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRect to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SDFTSubRunNoCache"*, %class.GrStrikeCache*)* @_ZN12_GLOBAL__N_117SDFTSubRunNoCache34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::SDFTSubRunNoCache"*, i32, i32, %"class.GrMeshDrawOp::Target"*)* @_ZNK12_GLOBAL__N_117SDFTSubRunNoCache15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@switch.table._ZN22GrSubRunNoCachePainter18processSourceMasksERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec.12 = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 0, i32 2, i32 1, i32 0], align 4

@_ZN10GrTextBlobD1Ev = hidden unnamed_addr alias void (%class.GrTextBlob*), void (%class.GrTextBlob*)* @_ZN10GrTextBlobD2Ev
@_ZN10GrTextBlobC1EiRK8SkMatrixj = hidden unnamed_addr alias void (%class.GrTextBlob*, i32, %class.SkMatrix*, i32), void (%class.GrTextBlob*, i32, %class.SkMatrix*, i32)* @_ZN10GrTextBlobC2EiRK8SkMatrixj
@_ZN22GrSubRunNoCachePainterC1EP20GrSurfaceDrawContextP17GrSubRunAllocatorPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaint = hidden unnamed_addr alias void (%class.GrSubRunNoCachePainter*, %class.GrSurfaceDrawContext*, %class.GrSubRunAllocator*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*), void (%class.GrSubRunNoCachePainter*, %class.GrSurfaceDrawContext*, %class.GrSubRunAllocator*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*)* @_ZN22GrSubRunNoCachePainterC2EP20GrSurfaceDrawContextP17GrSubRunAllocatorPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaint

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrTextBlob3Key4MakeERK14SkGlyphRunListRK7SkPaintRK14SkSurfacePropsRK11GrColorInfoRK8SkMatrixRK13GrSDFTControl(%"class.std::__1::tuple.23"* noalias nocapture sret, %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.SkSurfaceProps* nocapture readonly dereferenceable(8), %class.GrColorInfo* nocapture readonly dereferenceable(24), %class.SkMatrix* dereferenceable(40), %class.GrSDFTControl* dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"struct.SkMaskFilterBase::BlurRec"*
  %10 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #18
  %11 = bitcast i64* %8 to float*
  store float 0xFFFFFFFFE0000000, float* %11, align 8
  %12 = getelementptr inbounds %"struct.SkMaskFilterBase::BlurRec", %"struct.SkMaskFilterBase::BlurRec"* %9, i64 0, i32 1
  store i32 -1431655766, i32* %12, align 4
  %13 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 2, i32 0
  %14 = load %class.SkMaskFilter*, %class.SkMaskFilter** %13, align 8
  %15 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 1
  %16 = load %class.SkTextBlob*, %class.SkTextBlob** %15, align 8
  %17 = icmp eq %class.SkTextBlob* %16, null
  br i1 %17, label %32, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 0, i32 0
  %20 = load %class.SkPathEffect*, %class.SkPathEffect** %19, align 8
  %21 = icmp eq %class.SkPathEffect* %20, null
  br i1 %21, label %22, label %32

22:                                               ; preds = %18
  %23 = icmp eq %class.SkMaskFilter* %14, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %22
  %25 = bitcast %class.SkMaskFilter* %14 to %class.SkMaskFilterBase*
  %26 = bitcast %class.SkMaskFilter* %14 to i1 (%class.SkMaskFilterBase*, %"struct.SkMaskFilterBase::BlurRec"*)***
  %27 = load i1 (%class.SkMaskFilterBase*, %"struct.SkMaskFilterBase::BlurRec"*)**, i1 (%class.SkMaskFilterBase*, %"struct.SkMaskFilterBase::BlurRec"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%class.SkMaskFilterBase*, %"struct.SkMaskFilterBase::BlurRec"*)*, i1 (%class.SkMaskFilterBase*, %"struct.SkMaskFilterBase::BlurRec"*)** %27, i64 13
  %29 = load i1 (%class.SkMaskFilterBase*, %"struct.SkMaskFilterBase::BlurRec"*)*, i1 (%class.SkMaskFilterBase*, %"struct.SkMaskFilterBase::BlurRec"*)** %28, align 8
  %30 = call zeroext i1 %29(%class.SkMaskFilterBase* nonnull %25, %"struct.SkMaskFilterBase::BlurRec"* nonnull %9) #18
  %31 = zext i1 %30 to i8
  br label %32

32:                                               ; preds = %7, %24, %18, %22
  %33 = phi i8 [ 0, %7 ], [ 0, %18 ], [ 1, %22 ], [ %31, %24 ]
  %34 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %4, i64 0, i32 0, i32 0
  %35 = load %class.SkColorSpace*, %class.SkColorSpace** %34, align 8
  %36 = icmp eq %class.SkColorSpace* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = call zeroext i1 @_ZNK12SkColorSpace13gammaIsLinearEv(%class.SkColorSpace* nonnull %35) #18
  %39 = select i1 %38, i32 2, i32 3
  br label %40

40:                                               ; preds = %37, %32
  %41 = phi i32 [ 3, %32 ], [ %39, %37 ]
  %42 = icmp eq i8 %33, 0
  br i1 %42, label %198, label %43

43:                                               ; preds = %40
  %44 = call zeroext i1 @_ZNK14SkGlyphRunList10anyRunsLCDEv(%class.SkGlyphRunList* %1) #18
  br i1 %44, label %45, label %49

45:                                               ; preds = %43
  %46 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %3, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = call i32 @_ZN11SkPaintPriv21ComputeLuminanceColorERK7SkPaint(%class.SkPaint* dereferenceable(72) %2) #18
  br label %91

49:                                               ; preds = %43
  %50 = call i32 @_ZN11SkPaintPriv21ComputeLuminanceColorERK7SkPaint(%class.SkPaint* dereferenceable(72) %2) #18
  %51 = lshr i32 %50, 16
  %52 = and i32 %51, 255
  %53 = lshr i32 %50, 8
  %54 = and i32 %53, 255
  %55 = and i32 %50, 255
  %56 = mul nuw nsw i32 %52, 54
  %57 = mul nuw nsw i32 %54, 183
  %58 = mul nuw nsw i32 %55, 19
  %59 = add nuw nsw i32 %56, %58
  %60 = add nuw nsw i32 %59, %57
  %61 = lshr i32 %60, 8
  %62 = shl nuw nsw i32 %61, 16
  %63 = or i32 %61, %60
  %64 = or i32 %62, %61
  %65 = lshr i32 %64, 21
  %66 = and i32 %65, 7
  %67 = shl nuw nsw i32 %66, 5
  %68 = shl nuw nsw i32 %66, 2
  %69 = or i32 %68, %67
  %70 = lshr i32 %66, 1
  %71 = or i32 %69, %70
  %72 = lshr i32 %63, 13
  %73 = and i32 %72, 7
  %74 = shl nuw nsw i32 %73, 5
  %75 = shl nuw nsw i32 %73, 2
  %76 = or i32 %75, %74
  %77 = lshr i32 %73, 1
  %78 = or i32 %76, %77
  %79 = lshr i32 %60, 13
  %80 = and i32 %79, 7
  %81 = shl nuw nsw i32 %80, 5
  %82 = shl nuw nsw i32 %80, 2
  %83 = lshr i32 %80, 1
  %84 = shl nuw nsw i32 %71, 16
  %85 = shl nuw nsw i32 %78, 8
  %86 = or i32 %81, %82
  %87 = or i32 %86, %83
  %88 = or i32 %87, %85
  %89 = or i32 %88, %84
  %90 = or i32 %89, -16777216
  br label %91

91:                                               ; preds = %45, %49
  %92 = phi i32 [ 0, %49 ], [ %47, %45 ]
  %93 = phi i32 [ %90, %49 ], [ 0, %45 ]
  %94 = call i64 @_ZNK14SkGlyphRunList8uniqueIDEv(%class.SkGlyphRunList* %1) #18
  %95 = trunc i64 %94 to i32
  %96 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = lshr i32 %97, 6
  %99 = trunc i32 %98 to i8
  %100 = and i8 %99, 3
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %110, label %102

102:                                              ; preds = %91
  %103 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 6
  %104 = load float, float* %103, align 8
  %105 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 7
  %106 = load float, float* %105, align 4
  %107 = lshr i32 %97, 4
  %108 = trunc i32 %107 to i8
  %109 = and i8 %108, 3
  br label %110

110:                                              ; preds = %91, %102
  %111 = phi i8 [ -86, %91 ], [ %109, %102 ]
  %112 = phi float [ 0xFFFFFFFFE0000000, %91 ], [ %106, %102 ]
  %113 = phi float [ 0xFFFFFFFFE0000000, %91 ], [ %104, %102 ]
  %114 = icmp ne %class.SkMaskFilter* %14, null
  %115 = zext i1 %114 to i8
  %116 = load i64, i64* %8, align 8
  %117 = select i1 %114, i64 %116, i64 -6148914689804861441
  %118 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 0, i32 0
  %119 = load %class.SkGlyphRun*, %class.SkGlyphRun** %118, align 8
  %120 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 0, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %119, i64 %121
  %123 = icmp eq i64 %121, 0
  br i1 %123, label %186, label %127

124:                                              ; preds = %127
  %125 = and i8 %132, 1
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %186, label %135

127:                                              ; preds = %110, %127
  %128 = phi %class.SkGlyphRun* [ %133, %127 ], [ %119, %110 ]
  %129 = phi i8 [ %132, %127 ], [ 0, %110 ]
  %130 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %128, i64 0, i32 4
  %131 = call zeroext i8 @_ZNK13GrSDFTControl11drawingTypeERK6SkFontRK7SkPaintRK8SkMatrix(%class.GrSDFTControl* %6, %class.SkFont* dereferenceable(24) %130, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrix* dereferenceable(40) %5) #18
  %132 = or i8 %131, %129
  %133 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %128, i64 1
  %134 = icmp eq %class.SkGlyphRun* %133, %122
  br i1 %134, label %124, label %127

135:                                              ; preds = %124
  %136 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 2
  %137 = load float, float* %136, align 4
  %138 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 5
  %139 = load float, float* %138, align 4
  %140 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = and i32 %141, 192
  %143 = icmp eq i32 %142, 128
  br i1 %143, label %144, label %147

144:                                              ; preds = %135
  %145 = call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %5) #18
  %146 = zext i8 %145 to i32
  store i32 %146, i32* %140, align 4
  br label %147

147:                                              ; preds = %144, %135
  %148 = phi i32 [ %146, %144 ], [ %141, %135 ]
  %149 = and i32 %148, 8
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  %152 = load float, float* %151, align 4
  br i1 %150, label %159, label %153

153:                                              ; preds = %147
  %154 = fcmp une float %152, 0.000000e+00
  %155 = fdiv float 1.000000e+00, %152
  %156 = select i1 %154, float %155, float %152
  %157 = fmul float %137, %156
  %158 = fmul float %139, %156
  br label %159

159:                                              ; preds = %147, %153
  %160 = phi float [ %157, %153 ], [ %137, %147 ]
  %161 = phi float [ %158, %153 ], [ %139, %147 ]
  %162 = bitcast %class.SkMatrix* %5 to <2 x float>*
  %163 = load <2 x float>, <2 x float>* %162, align 4
  %164 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 3
  %165 = load float, float* %164, align 4
  %166 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %167 = load float, float* %166, align 4
  %168 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 6
  %169 = load float, float* %168, align 4
  %170 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 7
  %171 = load float, float* %170, align 4
  %172 = call float @llvm.floor.f32(float %160)
  %173 = fsub float %160, %172
  %174 = call float @llvm.floor.f32(float %161)
  %175 = fsub float %161, %174
  %176 = extractelement <2 x float> %163, i32 0
  %177 = insertelement <4 x float> undef, float %176, i32 0
  %178 = extractelement <2 x float> %163, i32 1
  %179 = insertelement <4 x float> %177, float %178, i32 1
  %180 = insertelement <4 x float> %179, float %173, i32 2
  %181 = insertelement <4 x float> %180, float %165, i32 3
  %182 = insertelement <4 x float> undef, float %167, i32 0
  %183 = insertelement <4 x float> %182, float %175, i32 1
  %184 = insertelement <4 x float> %183, float %169, i32 2
  %185 = insertelement <4 x float> %184, float %171, i32 3
  br label %198

186:                                              ; preds = %110, %124
  %187 = phi i8 [ %132, %124 ], [ 0, %110 ]
  %188 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #18
  %189 = bitcast %class.SkMatrix* %188 to <4 x float>*
  %190 = load <4 x float>, <4 x float>* %189, align 4
  %191 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %188, i64 0, i32 0, i64 4
  %192 = bitcast float* %191 to <4 x float>*
  %193 = load <4 x float>, <4 x float>* %192, align 4
  %194 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %188, i64 0, i32 0, i64 8
  %195 = load float, float* %194, align 4
  %196 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %188, i64 0, i32 1
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %159, %186, %40
  %199 = phi i8 [ -86, %40 ], [ %111, %186 ], [ %111, %159 ]
  %200 = phi i8 [ -86, %40 ], [ %100, %186 ], [ %100, %159 ]
  %201 = phi i8 [ -86, %40 ], [ %115, %186 ], [ %115, %159 ]
  %202 = phi i8 [ -86, %40 ], [ %187, %186 ], [ %132, %159 ]
  %203 = phi i32 [ 16, %40 ], [ %197, %186 ], [ 128, %159 ]
  %204 = phi float [ 1.000000e+00, %40 ], [ %195, %186 ], [ %152, %159 ]
  %205 = phi i32 [ -1431655766, %40 ], [ %41, %186 ], [ %41, %159 ]
  %206 = phi i64 [ -6148914689804861441, %40 ], [ %117, %186 ], [ %117, %159 ]
  %207 = phi i32 [ -1431655766, %40 ], [ %92, %186 ], [ %92, %159 ]
  %208 = phi float [ 0xFFFFFFFFE0000000, %40 ], [ %112, %186 ], [ %112, %159 ]
  %209 = phi float [ 0xFFFFFFFFE0000000, %40 ], [ %113, %186 ], [ %113, %159 ]
  %210 = phi i32 [ -1431655766, %40 ], [ %93, %186 ], [ %93, %159 ]
  %211 = phi i32 [ -1431655766, %40 ], [ %95, %186 ], [ %95, %159 ]
  %212 = phi <4 x float> [ <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %40 ], [ %190, %186 ], [ %181, %159 ]
  %213 = phi <4 x float> [ <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %40 ], [ %193, %186 ], [ %185, %159 ]
  %214 = getelementptr inbounds %"class.std::__1::tuple.23", %"class.std::__1::tuple.23"* %0, i64 0, i32 0, i32 0, i32 0
  store i8 %33, i8* %214, align 4
  %215 = getelementptr inbounds %"class.std::__1::tuple.23", %"class.std::__1::tuple.23"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 %211, i32* %215, align 4
  %216 = getelementptr inbounds %"class.std::__1::tuple.23", %"class.std::__1::tuple.23"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i32 %210, i32* %216, align 4
  %217 = getelementptr inbounds %"class.std::__1::tuple.23", %"class.std::__1::tuple.23"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  store float %209, float* %217, align 4
  %218 = getelementptr inbounds %"class.std::__1::tuple.23", %"class.std::__1::tuple.23"* %0, i64 0, i32 0, i32 1, i32 0, i32 3
  store float %208, float* %218, align 4
  %219 = getelementptr inbounds %"class.std::__1::tuple.23", %"class.std::__1::tuple.23"* %0, i64 0, i32 0, i32 1, i32 0, i32 4
  store i32 %207, i32* %219, align 4
  %220 = getelementptr inbounds %"class.std::__1::tuple.23", %"class.std::__1::tuple.23"* %0, i64 0, i32 0, i32 1, i32 0, i32 5
  %221 = bitcast %"struct.SkMaskFilterBase::BlurRec"* %220 to i64*
  store i64 %206, i64* %221, align 4
  %222 = getelementptr inbounds %"class.std::__1::tuple.23", %"class.std::__1::tuple.23"* %0, i64 0, i32 0, i32 1, i32 0, i32 6
  store i32 %205, i32* %222, align 4
  %223 = getelementptr inbounds %"class.std::__1::tuple.23", %"class.std::__1::tuple.23"* %0, i64 0, i32 0, i32 1, i32 0, i32 7, i32 0, i64 0
  %224 = bitcast float* %223 to <4 x float>*
  store <4 x float> %212, <4 x float>* %224, align 4
  %225 = getelementptr inbounds %"class.std::__1::tuple.23", %"class.std::__1::tuple.23"* %0, i64 0, i32 0, i32 1, i32 0, i32 7, i32 0, i64 4
  %226 = bitcast float* %225 to <4 x float>*
  store <4 x float> %213, <4 x float>* %226, align 4
  %227 = getelementptr inbounds %"class.std::__1::tuple.23", %"class.std::__1::tuple.23"* %0, i64 0, i32 0, i32 1, i32 0, i32 7, i32 0, i64 8
  store float %204, float* %227, align 4
  %228 = getelementptr inbounds %"class.std::__1::tuple.23", %"class.std::__1::tuple.23"* %0, i64 0, i32 0, i32 1, i32 0, i32 7, i32 1
  store i32 %203, i32* %228, align 4
  %229 = getelementptr inbounds %"class.std::__1::tuple.23", %"class.std::__1::tuple.23"* %0, i64 0, i32 0, i32 1, i32 0, i32 8
  store i8 %202, i8* %229, align 4
  %230 = getelementptr inbounds %"class.std::__1::tuple.23", %"class.std::__1::tuple.23"* %0, i64 0, i32 0, i32 1, i32 0, i32 9
  store i8 %201, i8* %230, align 1
  %231 = getelementptr inbounds %"class.std::__1::tuple.23", %"class.std::__1::tuple.23"* %0, i64 0, i32 0, i32 1, i32 0, i32 10
  store i8 %200, i8* %231, align 2
  %232 = getelementptr inbounds %"class.std::__1::tuple.23", %"class.std::__1::tuple.23"* %0, i64 0, i32 0, i32 1, i32 0, i32 11
  store i8 %199, i8* %232, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #18
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK14SkGlyphRunList10anyRunsLCDEv(%class.SkGlyphRunList*) local_unnamed_addr #2

declare i64 @_ZNK14SkGlyphRunList8uniqueIDEv(%class.SkGlyphRunList*) local_unnamed_addr #2

declare zeroext i8 @_ZNK13GrSDFTControl11drawingTypeERK6SkFontRK7SkPaintRK8SkMatrix(%class.GrSDFTControl*, %class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10GrTextBlob3KeyeqERKS0_(%"struct.GrTextBlob::Key"*, %"struct.GrTextBlob::Key"* dereferenceable(76)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %100

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %100

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %0, i64 0, i32 10
  %16 = load i8, i8* %15, align 2
  %17 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %1, i64 0, i32 10
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %16, %18
  br i1 %19, label %20, label %100

20:                                               ; preds = %14
  %21 = icmp eq i8 %16, 0
  br i1 %21, label %40, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %0, i64 0, i32 2
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %1, i64 0, i32 2
  %26 = load float, float* %25, align 4
  %27 = fcmp une float %24, %26
  br i1 %27, label %100, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %0, i64 0, i32 3
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %1, i64 0, i32 3
  %32 = load float, float* %31, align 4
  %33 = fcmp une float %30, %32
  br i1 %33, label %100, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %0, i64 0, i32 11
  %36 = load i8, i8* %35, align 1
  %37 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %1, i64 0, i32 11
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %36, %38
  br i1 %39, label %40, label %100

40:                                               ; preds = %34, %20
  %41 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %0, i64 0, i32 4
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %1, i64 0, i32 4
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %46, label %100

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %0, i64 0, i32 9
  %48 = load i8, i8* %47, align 1, !range !2
  %49 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %1, i64 0, i32 9
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = icmp eq i8 %48, %50
  br i1 %51, label %52, label %100

52:                                               ; preds = %46
  %53 = icmp eq i8 %48, 0
  br i1 %53, label %66, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %0, i64 0, i32 5, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %1, i64 0, i32 5, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %56, %58
  br i1 %59, label %60, label %100

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %0, i64 0, i32 5, i32 0
  %62 = load float, float* %61, align 4
  %63 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %1, i64 0, i32 5, i32 0
  %64 = load float, float* %63, align 4
  %65 = fcmp une float %62, %64
  br i1 %65, label %100, label %66

66:                                               ; preds = %52, %60
  %67 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %0, i64 0, i32 6
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %1, i64 0, i32 6
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %68, %70
  br i1 %71, label %72, label %100

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %0, i64 0, i32 7
  %74 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %0, i64 0, i32 7, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 192
  %77 = icmp eq i32 %76, 128
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %73) #18
  %80 = zext i8 %79 to i32
  store i32 %80, i32* %74, align 4
  br label %81

81:                                               ; preds = %72, %78
  %82 = phi i32 [ %80, %78 ], [ %75, %72 ]
  %83 = and i32 %82, 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %100

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %0, i64 0, i32 8
  %87 = load i8, i8* %86, align 4
  %88 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %1, i64 0, i32 8
  %89 = load i8, i8* %88, align 4
  %90 = icmp eq i8 %87, %89
  br i1 %90, label %91, label %100

91:                                               ; preds = %85
  %92 = and i8 %87, 1
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"struct.GrTextBlob::Key", %"struct.GrTextBlob::Key"* %1, i64 0, i32 7
  %96 = tail call fastcc { i64, float } @_ZN12_GLOBAL__N_123check_integer_translateERK8SkMatrixS2_(%class.SkMatrix* dereferenceable(40) %73, %class.SkMatrix* dereferenceable(40) %95)
  %97 = extractvalue { i64, float } %96, 0
  %98 = trunc i64 %97 to i8
  %99 = icmp ne i8 %98, 0
  br label %100

100:                                              ; preds = %81, %91, %85, %66, %60, %54, %46, %40, %22, %28, %34, %14, %8, %2, %94
  %101 = phi i1 [ %99, %94 ], [ false, %2 ], [ false, %8 ], [ false, %14 ], [ false, %34 ], [ false, %28 ], [ false, %22 ], [ false, %40 ], [ false, %46 ], [ false, %54 ], [ false, %60 ], [ false, %66 ], [ false, %81 ], [ false, %85 ], [ true, %91 ]
  ret i1 %101
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64, float } @_ZN12_GLOBAL__N_123check_integer_translateERK8SkMatrixS2_(%class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 {
  %3 = alloca <2 x float>, align 8
  %4 = alloca <2 x float>, align 8
  %5 = alloca %"struct.std::__1::__tuple_impl.28", align 8
  %6 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 0
  %9 = load float, float* %8, align 4
  %10 = fcmp une float %7, %9
  br i1 %10, label %29, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 4
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 4
  %15 = load float, float* %14, align 4
  %16 = fcmp une float %13, %15
  br i1 %16, label %29, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 1
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 1
  %21 = load float, float* %20, align 4
  %22 = fcmp une float %19, %21
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 3
  %25 = load float, float* %24, align 4
  %26 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 3
  %27 = load float, float* %26, align 4
  %28 = fcmp une float %25, %27
  br i1 %28, label %29, label %33

29:                                               ; preds = %23, %17, %11, %2
  %30 = getelementptr inbounds %"struct.std::__1::__tuple_impl.28", %"struct.std::__1::__tuple_impl.28"* %5, i64 0, i32 0, i32 0
  store i8 0, i8* %30, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__tuple_impl.28", %"struct.std::__1::__tuple_impl.28"* %5, i64 0, i32 1
  %32 = bitcast %"class.std::__1::__tuple_leaf.29"* %31 to i64*
  store i64 0, i64* %32, align 4
  br label %58

33:                                               ; preds = %23
  %34 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = bitcast <2 x float>* %3 to %struct.SkPoint*
  %36 = getelementptr inbounds <2 x float>, <2 x float>* %3, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %36, align 8
  %37 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %35, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %37, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %1, float 0.000000e+00, float 0.000000e+00, %struct.SkPoint* nonnull %35) #18
  %38 = load <2 x float>, <2 x float>* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  %39 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  %40 = bitcast <2 x float>* %4 to %struct.SkPoint*
  %41 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %41, align 8
  %42 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %40, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %42, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %0, float 0.000000e+00, float 0.000000e+00, %struct.SkPoint* nonnull %40) #18
  %43 = load <2 x float>, <2 x float>* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  %44 = fsub <2 x float> %38, %43
  %45 = extractelement <2 x float> %44, i32 0
  %46 = extractelement <2 x float> %44, i32 1
  %47 = call float @llvm.floor.f32(float %45) #18
  %48 = fcmp oeq float %47, %45
  br i1 %48, label %49, label %53

49:                                               ; preds = %33
  %50 = call float @llvm.floor.f32(float %46) #18
  %51 = fcmp oeq float %50, %46
  %52 = zext i1 %51 to i8
  br label %53

53:                                               ; preds = %49, %33
  %54 = phi i8 [ 0, %33 ], [ %52, %49 ]
  %55 = getelementptr inbounds %"struct.std::__1::__tuple_impl.28", %"struct.std::__1::__tuple_impl.28"* %5, i64 0, i32 0, i32 0
  store i8 %54, i8* %55, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__tuple_impl.28", %"struct.std::__1::__tuple_impl.28"* %5, i64 0, i32 1
  %57 = bitcast %"class.std::__1::__tuple_leaf.29"* %56 to <2 x float>*
  store <2 x float> %44, <2 x float>* %57, align 4
  br label %58

58:                                               ; preds = %53, %29
  %59 = phi float [ %46, %53 ], [ 0.000000e+00, %29 ]
  %60 = bitcast %"struct.std::__1::__tuple_impl.28"* %5 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = insertvalue { i64, float } undef, i64 %61, 0
  %63 = insertvalue { i64, float } %62, float %59, 1
  ret { i64, float } %63
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrTextBlobdlEPv(i8*) local_unnamed_addr #4 align 2 {
  tail call void @_ZdlPv(i8* %0) #18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind ssp uwtable
define hidden noalias nonnull i8* @_ZN10GrTextBlobnwEm(i64) local_unnamed_addr #6 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 1480, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0)) #19
  unreachable
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN10GrTextBlobnwEmPv(i64, i8* readnone returned) local_unnamed_addr #8 align 2 {
  ret i8* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrTextBlobD2Ev(%class.GrTextBlob*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV10GrTextBlob, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.GrSubRun*, %class.GrSubRun** %3, align 8
  store %class.GrSubRun* null, %class.GrSubRun** %3, align 8
  %5 = icmp eq %class.GrSubRun* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrSubRun* %4 to void (%class.GrSubRun*)***
  %8 = load void (%class.GrSubRun*)**, void (%class.GrSubRun*)*** %7, align 8
  %9 = load void (%class.GrSubRun*)*, void (%class.GrSubRun*)** %8, align 8
  tail call void %9(%class.GrSubRun* nonnull %4) #18
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 5, i32 0
  tail call void @_ZN12GrBagOfBytesD1Ev(%class.GrBagOfBytes* %11) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrTextBlobD0Ev(%class.GrTextBlob*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV10GrTextBlob, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.GrSubRun*, %class.GrSubRun** %3, align 8
  store %class.GrSubRun* null, %class.GrSubRun** %3, align 8
  %5 = icmp eq %class.GrSubRun* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrSubRun* %4 to void (%class.GrSubRun*)***
  %8 = load void (%class.GrSubRun*)**, void (%class.GrSubRun*)*** %7, align 8
  %9 = load void (%class.GrSubRun*)*, void (%class.GrSubRun*)** %8, align 8
  tail call void %9(%class.GrSubRun* nonnull %4) #18
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 5, i32 0
  tail call void @_ZN12GrBagOfBytesD1Ev(%class.GrBagOfBytes* %11) #18
  %12 = bitcast %class.GrTextBlob* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrTextBlob4MakeERK14SkGlyphRunListRK7SkPaintRK8SkMatrixRK13GrSDFTControlP21SkGlyphRunListPainter(%class.sk_sp.58* noalias nocapture sret, %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.SkMatrix* dereferenceable(40), %class.GrSDFTControl* dereferenceable(12), %class.SkGlyphRunListPainter*) local_unnamed_addr #4 align 2 {
  %7 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 0, i32 0
  %8 = load %class.SkGlyphRun*, %class.SkGlyphRun** %7, align 8
  %9 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %8, i64 %10
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %6, %13
  %14 = phi i64 [ %18, %13 ], [ 0, %6 ]
  %15 = phi %class.SkGlyphRun* [ %19, %13 ], [ %8, %6 ]
  %16 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %15, i64 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %14
  %19 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %15, i64 1
  %20 = icmp eq %class.SkGlyphRun* %19, %11
  br i1 %20, label %21, label %13

21:                                               ; preds = %13
  %22 = mul i64 %18, 12
  br label %23

23:                                               ; preds = %21, %6
  %24 = phi i64 [ 0, %6 ], [ %22, %21 ]
  %25 = mul i64 %10, 332
  %26 = add i64 %24, %25
  %27 = trunc i64 %26 to i32
  %28 = icmp ult i32 %27, 2147479551
  br i1 %28, label %30, label %29

29:                                               ; preds = %23
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4, i64 0, i64 0), i32 33, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6, i64 0, i64 0)) #19
  unreachable

30:                                               ; preds = %23
  %31 = add nuw nsw i32 %27, 31
  %32 = and i32 %31, -8
  %33 = add nsw i32 %32, -32768
  %34 = icmp ult i32 %33, 2147446783
  %35 = add nuw nsw i32 %32, 4095
  %36 = and i32 %35, -4096
  %37 = select i1 %34, i32 %36, i32 %32
  %38 = sext i32 %37 to i64
  %39 = add nsw i64 %38, 200
  %40 = tail call i8* @_Znwm(i64 %39) #18
  %41 = tail call i32 @_ZN11SkPaintPriv21ComputeLuminanceColorERK7SkPaint(%class.SkPaint* dereferenceable(72) %2) #18
  %42 = getelementptr inbounds i8, i8* %40, i64 8
  %43 = bitcast i8* %42 to i32*
  store i32 1, i32* %43, align 4
  %44 = bitcast i8* %40 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV10GrTextBlob, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds i8, i8* %40, i64 16
  %46 = getelementptr inbounds i8, i8* %40, i64 32
  %47 = bitcast i8* %46 to %class.GrSubRunAllocator*
  %48 = getelementptr inbounds i8, i8* %40, i64 200
  %49 = sdiv i32 %37, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #18
  tail call void @_ZN17GrSubRunAllocatorC1EPcii(%class.GrSubRunAllocator* %47, i8* %48, i32 %37, i32 %49) #18
  %50 = getelementptr inbounds i8, i8* %40, i64 48
  %51 = bitcast i8* %50 to i64*
  store i64 0, i64* %51, align 8
  %52 = getelementptr inbounds i8, i8* %40, i64 56
  %53 = bitcast i8* %52 to i8**
  store i8* %50, i8** %53, align 8
  %54 = getelementptr inbounds i8, i8* %40, i64 64
  %55 = bitcast i8* %54 to i32*
  store i32 %37, i32* %55, align 8
  %56 = getelementptr inbounds i8, i8* %40, i64 68
  %57 = bitcast %class.SkMatrix* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %57, i64 40, i1 false) #18
  %58 = getelementptr inbounds i8, i8* %40, i64 108
  %59 = bitcast i8* %58 to i32*
  store i32 %41, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %40, i64 144
  %61 = bitcast i8* %60 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %61, align 4
  %62 = getelementptr inbounds i8, i8* %40, i64 160
  %63 = bitcast i8* %62 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %63, align 4
  %64 = getelementptr inbounds i8, i8* %40, i64 176
  %65 = bitcast i8* %64 to float*
  store float 1.000000e+00, float* %65, align 4
  %66 = getelementptr inbounds i8, i8* %40, i64 180
  %67 = bitcast i8* %66 to i32*
  store i32 16, i32* %67, align 4
  %68 = getelementptr inbounds i8, i8* %40, i64 188
  %69 = bitcast i8* %68 to float*
  store float 0xC7EFFFFFE0000000, float* %69, align 4
  %70 = getelementptr inbounds i8, i8* %40, i64 192
  %71 = bitcast i8* %70 to float*
  store float 0x47EFFFFFE0000000, float* %71, align 8
  %72 = getelementptr inbounds i8, i8* %40, i64 196
  store i8 0, i8* %72, align 4
  %73 = bitcast %class.sk_sp.58* %0 to i8**
  store i8* %40, i8** %73, align 8
  %74 = load %class.SkGlyphRun*, %class.SkGlyphRun** %7, align 8
  %75 = load i64, i64* %9, align 8
  %76 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %74, i64 %75
  %77 = icmp eq i64 %75, 0
  br i1 %77, label %84, label %78

78:                                               ; preds = %30
  %79 = bitcast i8* %40 to %class.SkGlyphRunPainterInterface*
  br label %80

80:                                               ; preds = %78, %80
  %81 = phi %class.SkGlyphRun* [ %74, %78 ], [ %82, %80 ]
  tail call void @_ZN21SkGlyphRunListPainter15processGlyphRunERK10SkGlyphRunRK8SkMatrixRK7SkPaintRK13GrSDFTControlP26SkGlyphRunPainterInterfacePKc(%class.SkGlyphRunListPainter* %5, %class.SkGlyphRun* dereferenceable(96) %81, %class.SkMatrix* dereferenceable(40) %3, %class.SkPaint* dereferenceable(72) %2, %class.GrSDFTControl* dereferenceable(12) %4, %class.SkGlyphRunPainterInterface* nonnull %79, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0)) #18
  %82 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %81, i64 1
  %83 = icmp eq %class.SkGlyphRun* %82, %76
  br i1 %83, label %84, label %80

84:                                               ; preds = %80, %30
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare i32 @_ZN11SkPaintPriv21ComputeLuminanceColorERK7SkPaint(%class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN21SkGlyphRunListPainter15processGlyphRunERK10SkGlyphRunRK8SkMatrixRK7SkPaintRK13GrSDFTControlP26SkGlyphRunPainterInterfacePKc(%class.SkGlyphRunListPainter*, %class.SkGlyphRun* dereferenceable(96), %class.SkMatrix* dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.GrSDFTControl* dereferenceable(12), %class.SkGlyphRunPainterInterface*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrTextBlob6addKeyERKNS_3KeyE(%class.GrTextBlob* nocapture, %"struct.GrTextBlob::Key"* nocapture readonly dereferenceable(76)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 10
  %4 = bitcast %"struct.GrTextBlob::Key"* %3 to i8*
  %5 = bitcast %"struct.GrTextBlob::Key"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 4 %5, i64 76, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10GrTextBlob14hasPerspectiveEv(%class.GrTextBlob*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 8, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 192
  %5 = icmp eq i32 %4, 128
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 8
  %8 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %7) #18
  %9 = zext i8 %8 to i32
  store i32 %9, i32* %2, align 4
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i32 [ %9, %6 ], [ %3, %1 ]
  %12 = and i32 %11, 8
  %13 = icmp ne i32 %12, 0
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10GrTextBlob8canReuseERK7SkPaintRK8SkMatrix(%class.GrTextBlob*, %class.SkPaint* dereferenceable(72), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.GrSubRun*, %class.GrSubRun** %4, align 8
  %6 = icmp eq %class.GrSubRun* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 13
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 8, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 192
  %15 = icmp eq i32 %14, 128
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 8
  %18 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %17) #18
  %19 = zext i8 %18 to i32
  store i32 %19, i32* %12, align 4
  br label %20

20:                                               ; preds = %11, %16
  %21 = phi i32 [ %19, %16 ], [ %13, %11 ]
  %22 = and i32 %21, 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %20, %7, %3
  %25 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 8
  %26 = tail call zeroext i1 @_ZeqRK8SkMatrixS1_(%class.SkMatrix* dereferenceable(40) %25, %class.SkMatrix* dereferenceable(40) %2) #18
  br i1 %26, label %27, label %50

27:                                               ; preds = %20, %24
  %28 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 10, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 9
  %33 = load i32, i32* %32, align 4
  %34 = tail call i32 @_ZN11SkPaintPriv21ComputeLuminanceColorERK7SkPaint(%class.SkPaint* dereferenceable(72) %1) #18
  %35 = icmp eq i32 %33, %34
  br i1 %35, label %36, label %50

36:                                               ; preds = %31, %27
  %37 = load %class.GrSubRun*, %class.GrSubRun** %4, align 8
  %38 = icmp eq %class.GrSubRun* %37, null
  br i1 %38, label %50, label %43

39:                                               ; preds = %43
  %40 = getelementptr inbounds %class.GrSubRun, %class.GrSubRun* %44, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %class.GrSubRun*, %class.GrSubRun** %40, align 8
  %42 = icmp eq %class.GrSubRun* %41, null
  br i1 %42, label %50, label %43

43:                                               ; preds = %36, %39
  %44 = phi %class.GrSubRun* [ %41, %39 ], [ %37, %36 ]
  %45 = bitcast %class.GrSubRun* %44 to i1 (%class.GrSubRun*, %class.SkPaint*, %class.SkMatrix*)***
  %46 = load i1 (%class.GrSubRun*, %class.SkPaint*, %class.SkMatrix*)**, i1 (%class.GrSubRun*, %class.SkPaint*, %class.SkMatrix*)*** %45, align 8
  %47 = getelementptr inbounds i1 (%class.GrSubRun*, %class.SkPaint*, %class.SkMatrix*)*, i1 (%class.GrSubRun*, %class.SkPaint*, %class.SkMatrix*)** %46, i64 3
  %48 = load i1 (%class.GrSubRun*, %class.SkPaint*, %class.SkMatrix*)*, i1 (%class.GrSubRun*, %class.SkPaint*, %class.SkMatrix*)** %47, align 8
  %49 = tail call zeroext i1 %48(%class.GrSubRun* nonnull %44, %class.SkPaint* dereferenceable(72) %1, %class.SkMatrix* dereferenceable(40) %2) #18
  br i1 %49, label %39, label %50

50:                                               ; preds = %43, %39, %36, %24, %31
  %51 = phi i1 [ false, %31 ], [ false, %24 ], [ true, %36 ], [ false, %43 ], [ true, %39 ]
  ret i1 %51
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(76) %"struct.GrTextBlob::Key"* @_ZNK10GrTextBlob3keyEv(%class.GrTextBlob* readnone) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 10
  ret %"struct.GrTextBlob::Key"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK10GrTextBlob4sizeEv(%class.GrTextBlob* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = sext i32 %3 to i64
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrTextBlobC2EiRK8SkMatrixj(%class.GrTextBlob*, i32, %class.SkMatrix* nocapture readonly dereferenceable(40), i32) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV10GrTextBlob, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 3
  %8 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 5
  %9 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 1
  %10 = bitcast %class.GrTextBlob* %9 to i8*
  %11 = sdiv i32 %1, 2
  %12 = bitcast %class.GrTextBlob** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  tail call void @_ZN17GrSubRunAllocatorC1EPcii(%class.GrSubRunAllocator* %8, i8* %10, i32 %1, i32 %11) #18
  %13 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 6
  %14 = getelementptr inbounds %struct.GrSubRunList, %struct.GrSubRunList* %13, i64 0, i32 0
  %15 = bitcast %struct.GrSubRunList* %13 to i64*
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 6, i32 1
  store %"class.std::__1::unique_ptr"* %14, %"class.std::__1::unique_ptr"** %16, align 8
  %17 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 7
  store i32 %1, i32* %17, align 8
  %18 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 8
  %19 = bitcast %class.SkMatrix* %18 to i8*
  %20 = bitcast %class.SkMatrix* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 40, i1 false)
  %21 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 9
  store i32 %3, i32* %21, align 4
  %22 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 10, i32 7, i32 0, i64 0
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %23, align 4
  %24 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 10, i32 7, i32 0, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %25, align 4
  %26 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 10, i32 7, i32 0, i64 8
  store float 1.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 10, i32 7, i32 1
  store i32 16, i32* %27, align 4
  %28 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 11
  store float 0xC7EFFFFFE0000000, float* %28, align 4
  %29 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 12
  store float 0x47EFFFFFE0000000, float* %29, align 8
  %30 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 13
  store i8 0, i8* %30, align 4
  ret void
}

declare void @_ZN17GrSubRunAllocatorC1EPcii(%class.GrSubRunAllocator*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrTextBlob18processDeviceMasksERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec(%class.GrTextBlob*, %class.SkZip.59* dereferenceable(24), %class.SkStrikeSpec* dereferenceable(160)) unnamed_addr #4 align 2 {
  tail call void @_ZN10GrTextBlob18addMultiMaskFormatIPFNSt3__110unique_ptrI8GrSubRunN17GrSubRunAllocator9DestroyerEEERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec12GrMaskFormatPS_PS4_EEEvT_SC_SF_(%class.GrTextBlob* %0, %class.GrSubRun* (%class.SkZip.59*, %class.SkStrikeSpec*, i32, %class.GrTextBlob*, %class.GrSubRunAllocator*)* nonnull @_ZN12_GLOBAL__N_116DirectMaskSubRun4MakeERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec12GrMaskFormatP10GrTextBlobP17GrSubRunAllocator, %class.SkZip.59* dereferenceable(24) %1, %class.SkStrikeSpec* dereferenceable(160) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10GrTextBlob18addMultiMaskFormatIPFNSt3__110unique_ptrI8GrSubRunN17GrSubRunAllocator9DestroyerEEERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec12GrMaskFormatPS_PS4_EEEvT_SC_SF_(%class.GrTextBlob*, %class.GrSubRun* (%class.SkZip.59*, %class.SkStrikeSpec*, i32, %class.GrTextBlob*, %class.GrSubRunAllocator*)*, %class.SkZip.59* dereferenceable(24), %class.SkStrikeSpec* dereferenceable(160)) local_unnamed_addr #4 comdat align 2 {
  %5 = alloca %class.SkZip.59, align 8
  %6 = alloca %class.SkZip.59, align 8
  %7 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %2, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %123, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %11, align 8
  %13 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %12, i64 0, i32 0, i32 0
  %14 = load %class.SkGlyph*, %class.SkGlyph** %13, align 8
  %15 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %14, i64 0, i32 8
  %16 = load i8, i8* %15, align 8
  %17 = icmp ult i8 %16, 6
  br i1 %17, label %19, label %18

18:                                               ; preds = %10
  tail call void @llvm.trap() #18
  unreachable

19:                                               ; preds = %10
  %20 = sext i8 %16 to i64
  %21 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN22GrSubRunNoCachePainter18processSourceMasksERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec.12, i64 0, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i64 %8, 1
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = bitcast %class.SkZip.59* %5 to i8*
  %26 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %5, i64 0, i32 0, i32 0, i32 1, i32 0
  %28 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %5, i64 0, i32 1
  %29 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %30 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 5
  %31 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 6, i32 1
  %32 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 13
  %33 = bitcast %class.SkZip.59* %5 to i8*
  br label %73

34:                                               ; preds = %117, %19
  %35 = phi i32 [ %22, %19 ], [ %119, %117 ]
  %36 = phi i64 [ 0, %19 ], [ %120, %117 ]
  %37 = phi i64 [ 1, %19 ], [ %118, %117 ]
  %38 = bitcast %class.SkZip.59* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #18
  %39 = sub i64 %37, %36
  %40 = icmp eq i64 %39, 0
  %41 = bitcast %class.SkZip.59* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  br i1 %40, label %42, label %43

42:                                               ; preds = %34
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #18, !alias.scope !3
  br label %52

43:                                               ; preds = %34
  %44 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %6, i64 0, i32 1
  %46 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %6, i64 0, i32 0, i32 0, i32 1, i32 0
  %47 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %11, align 8, !noalias !3
  %48 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %47, i64 %36
  %49 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %50 = load %struct.SkPoint*, %struct.SkPoint** %49, align 8, !noalias !3
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %50, i64 %36
  store %class.SkGlyphVariant* %48, %class.SkGlyphVariant** %44, align 8, !alias.scope !3
  store %struct.SkPoint* %51, %struct.SkPoint** %46, align 8, !alias.scope !3
  store i64 %39, i64* %45, align 8, !alias.scope !3
  br label %52

52:                                               ; preds = %42, %43
  %53 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 5
  %54 = call %class.GrSubRun* %1(%class.SkZip.59* nonnull dereferenceable(24) %6, %class.SkStrikeSpec* dereferenceable(160) %3, i32 %35, %class.GrTextBlob* %0, %class.GrSubRunAllocator* %53) #18
  %55 = icmp eq %class.GrSubRun* %54, null
  br i1 %55, label %70, label %56

56:                                               ; preds = %52
  %57 = ptrtoint %class.GrSubRun* %54 to i64
  %58 = getelementptr inbounds %class.GrSubRun, %class.GrSubRun* %54, i64 0, i32 1
  %59 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 6, i32 1
  %60 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %class.GrSubRun*, %class.GrSubRun** %61, align 8
  %63 = bitcast %"class.std::__1::unique_ptr"* %60 to i64*
  store i64 %57, i64* %63, align 8
  %64 = icmp eq %class.GrSubRun* %62, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %56
  %66 = bitcast %class.GrSubRun* %62 to void (%class.GrSubRun*)***
  %67 = load void (%class.GrSubRun*)**, void (%class.GrSubRun*)*** %66, align 8
  %68 = load void (%class.GrSubRun*)*, void (%class.GrSubRun*)** %67, align 8
  call void %68(%class.GrSubRun* nonnull %62) #18
  br label %69

69:                                               ; preds = %65, %56
  store %"class.std::__1::unique_ptr"* %58, %"class.std::__1::unique_ptr"** %59, align 8
  br label %72

70:                                               ; preds = %52
  %71 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 13
  store i8 1, i8* %71, align 4
  br label %72

72:                                               ; preds = %69, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #18
  br label %123

73:                                               ; preds = %24, %117
  %74 = phi i64 [ %8, %24 ], [ %118, %117 ]
  %75 = phi i64 [ 1, %24 ], [ %121, %117 ]
  %76 = phi i64 [ 0, %24 ], [ %120, %117 ]
  %77 = phi i32 [ %22, %24 ], [ %119, %117 ]
  %78 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %12, i64 %75, i32 0, i32 0
  %79 = load %class.SkGlyph*, %class.SkGlyph** %78, align 8
  %80 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %79, i64 0, i32 8
  %81 = load i8, i8* %80, align 8
  %82 = icmp ult i8 %81, 6
  br i1 %82, label %84, label %83

83:                                               ; preds = %73
  call void @llvm.trap() #18
  unreachable

84:                                               ; preds = %73
  %85 = sext i8 %81 to i64
  %86 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN22GrSubRunNoCachePainter18processSourceMasksERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec.12, i64 0, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %77, %87
  br i1 %88, label %117, label %89

89:                                               ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #18
  %90 = sub i64 %75, %76
  %91 = icmp eq i64 %90, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 24, i1 false)
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #18, !alias.scope !6
  br label %98

93:                                               ; preds = %89
  %94 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %11, align 8, !noalias !6
  %95 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %94, i64 %76
  %96 = load %struct.SkPoint*, %struct.SkPoint** %29, align 8, !noalias !6
  %97 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %96, i64 %76
  store %class.SkGlyphVariant* %95, %class.SkGlyphVariant** %26, align 8, !alias.scope !6
  store %struct.SkPoint* %97, %struct.SkPoint** %27, align 8, !alias.scope !6
  store i64 %90, i64* %28, align 8, !alias.scope !6
  br label %98

98:                                               ; preds = %92, %93
  %99 = call %class.GrSubRun* %1(%class.SkZip.59* nonnull dereferenceable(24) %5, %class.SkStrikeSpec* dereferenceable(160) %3, i32 %77, %class.GrTextBlob* %0, %class.GrSubRunAllocator* %30) #18
  %100 = icmp eq %class.GrSubRun* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %98
  %102 = ptrtoint %class.GrSubRun* %99 to i64
  %103 = getelementptr inbounds %class.GrSubRun, %class.GrSubRun* %99, i64 0, i32 1
  %104 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %31, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = load %class.GrSubRun*, %class.GrSubRun** %105, align 8
  %107 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  store i64 %102, i64* %107, align 8
  %108 = icmp eq %class.GrSubRun* %106, null
  br i1 %108, label %113, label %109

109:                                              ; preds = %101
  %110 = bitcast %class.GrSubRun* %106 to void (%class.GrSubRun*)***
  %111 = load void (%class.GrSubRun*)**, void (%class.GrSubRun*)*** %110, align 8
  %112 = load void (%class.GrSubRun*)*, void (%class.GrSubRun*)** %111, align 8
  call void %112(%class.GrSubRun* nonnull %106) #18
  br label %113

113:                                              ; preds = %109, %101
  store %"class.std::__1::unique_ptr"* %103, %"class.std::__1::unique_ptr"** %31, align 8
  br label %115

114:                                              ; preds = %98
  store i8 1, i8* %32, align 4
  br label %115

115:                                              ; preds = %113, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #18
  %116 = load i64, i64* %7, align 8
  br label %117

117:                                              ; preds = %84, %115
  %118 = phi i64 [ %116, %115 ], [ %74, %84 ]
  %119 = phi i32 [ %87, %115 ], [ %77, %84 ]
  %120 = phi i64 [ %75, %115 ], [ %76, %84 ]
  %121 = add nuw i64 %75, 1
  %122 = icmp ult i64 %121, %118
  br i1 %122, label %73, label %34

123:                                              ; preds = %4, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %class.GrSubRun* @_ZN12_GLOBAL__N_116DirectMaskSubRun4MakeERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec12GrMaskFormatP10GrTextBlobP17GrSubRunAllocator(%class.SkZip.59* dereferenceable(24), %class.SkStrikeSpec* dereferenceable(160), i32, %class.GrTextBlob*, %class.GrSubRunAllocator*) #4 align 2 {
  %6 = alloca %"class.(anonymous namespace)::GlyphVector", align 8
  %7 = alloca %"class.(anonymous namespace)::GlyphVector", align 8
  %8 = ptrtoint %class.GrTextBlob* %3 to i64
  %9 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %4, i64 0, i32 0
  %13 = icmp ult i32 %11, 536869887
  br i1 %13, label %15, label %14

14:                                               ; preds = %5
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #19
  unreachable

15:                                               ; preds = %5
  %16 = icmp eq i32 %11, 0
  %17 = shl i32 %11, 2
  %18 = select i1 %16, i32 1, i32 %17
  %19 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %4, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp slt i32 %21, %18
  br i1 %22, label %23, label %25

23:                                               ; preds = %15
  tail call void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes* %12, i32 %18, i32 4) #18
  %24 = load i32, i32* %19, align 8
  br label %25

25:                                               ; preds = %15, %23
  %26 = phi i32 [ %24, %23 ], [ %21, %15 ]
  %27 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %4, i64 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = sext i32 %26 to i64
  %30 = sub nsw i64 0, %29
  %31 = getelementptr inbounds i8, i8* %28, i64 %30
  %32 = sub nsw i32 %26, %18
  store i32 %32, i32* %19, align 8
  %33 = bitcast i8* %31 to %"struct.skvx::Vec"*
  %34 = load i64, i64* %9, align 8
  %35 = trunc i64 %34 to i32
  %36 = icmp ult i32 %35, 268434943
  br i1 %36, label %38, label %37

37:                                               ; preds = %25
  tail call fastcc void @_ZZN12GrBagOfBytes16allocateBytesForIN12_GLOBAL__N_111GlyphVector7VariantEEEPciENKUlvE_clEv() #18
  unreachable

38:                                               ; preds = %25
  %39 = icmp eq i32 %35, 0
  %40 = shl i32 %35, 3
  %41 = select i1 %39, i32 1, i32 %40
  %42 = and i32 %32, -8
  store i32 %42, i32* %19, align 8
  %43 = icmp slt i32 %42, %41
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  tail call void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes* %12, i32 %41, i32 8) #18
  %45 = load i32, i32* %19, align 8
  %46 = load i8*, i8** %27, align 8
  br label %47

47:                                               ; preds = %38, %44
  %48 = phi i8* [ %46, %44 ], [ %28, %38 ]
  %49 = phi i32 [ %45, %44 ], [ %42, %38 ]
  %50 = sext i32 %49 to i64
  %51 = sub nsw i64 0, %50
  %52 = getelementptr inbounds i8, i8* %48, i64 %51
  %53 = sub nsw i32 %49, %41
  store i32 %53, i32* %19, align 8
  %54 = bitcast i8* %52 to %"union.(anonymous namespace)::GlyphVector::Variant"*
  %55 = load i64, i64* %9, align 8, !noalias !9
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %558, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %59 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %62

60:                                               ; preds = %148
  %61 = icmp eq i64 %153, 0
  br i1 %61, label %558, label %156

62:                                               ; preds = %57, %148
  %63 = phi i64 [ 0, %57 ], [ %153, %148 ]
  %64 = phi i16 [ 32767, %57 ], [ %152, %148 ]
  %65 = phi i16 [ 32767, %57 ], [ %151, %148 ]
  %66 = phi i16 [ 32767, %57 ], [ %150, %148 ]
  %67 = phi i16 [ 32767, %57 ], [ %149, %148 ]
  %68 = phi i64 [ 0, %57 ], [ %154, %148 ]
  %69 = load %struct.SkPoint*, %struct.SkPoint** %58, align 8
  %70 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %69, i64 %68, i32 0
  %71 = load float, float* %70, align 4
  %72 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %69, i64 %68, i32 1
  %73 = load float, float* %72, align 4
  %74 = fcmp ogt float %71, -3.251100e+04
  %75 = fcmp olt float %71, 3.251100e+04
  %76 = and i1 %74, %75
  %77 = fcmp ogt float %73, -3.251100e+04
  %78 = and i1 %76, %77
  %79 = fcmp olt float %73, 3.251100e+04
  %80 = and i1 %79, %78
  br i1 %80, label %81, label %148

81:                                               ; preds = %62
  %82 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %59, align 8
  %83 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %82, i64 %68, i32 0, i32 0
  %84 = load %class.SkGlyph*, %class.SkGlyph** %83, align 8
  %85 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %84, i64 0, i32 3
  %86 = load i16, i16* %85, align 2
  %87 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %84, i64 0, i32 2
  %88 = load i16, i16* %87, align 4
  %89 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %84, i64 0, i32 0
  %90 = load i16, i16* %89, align 8
  %91 = add i16 %86, %90
  %92 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %84, i64 0, i32 1
  %93 = load i16, i16* %92, align 2
  %94 = add i16 %88, %93
  %95 = sub i16 0, %91
  %96 = sub i16 0, %94
  %97 = fadd float %71, 5.000000e-01
  %98 = tail call float @llvm.floor.f32(float %97)
  %99 = fcmp olt float %98, 0x41DFFFFFE0000000
  %100 = select i1 %99, float %98, float 0x41DFFFFFE0000000
  %101 = fcmp ogt float %100, 0xC1DFFFFFE0000000
  %102 = select i1 %101, float %100, float 0xC1DFFFFFE0000000
  %103 = fptosi float %102 to i32
  %104 = trunc i32 %103 to i16
  %105 = fadd float %73, 5.000000e-01
  %106 = tail call float @llvm.floor.f32(float %105)
  %107 = fcmp olt float %106, 0x41DFFFFFE0000000
  %108 = select i1 %107, float %106, float 0x41DFFFFFE0000000
  %109 = fcmp ogt float %108, 0xC1DFFFFFE0000000
  %110 = select i1 %109, float %108, float 0xC1DFFFFFE0000000
  %111 = fptosi float %110 to i32
  %112 = trunc i32 %111 to i16
  %113 = sub i16 0, %104
  %114 = sub i16 0, %112
  %115 = insertelement <4 x i16> undef, i16 %104, i32 0
  %116 = insertelement <4 x i16> %115, i16 %112, i32 1
  %117 = insertelement <4 x i16> undef, i16 %113, i32 2
  %118 = insertelement <4 x i16> %117, i16 %114, i32 3
  %119 = shufflevector <4 x i16> %116, <4 x i16> %118, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %120 = insertelement <4 x i16> undef, i16 %86, i32 0
  %121 = insertelement <4 x i16> %120, i16 %88, i32 1
  %122 = insertelement <4 x i16> %121, i16 %95, i32 2
  %123 = insertelement <4 x i16> %122, i16 %96, i32 3
  %124 = add <4 x i16> %123, %119
  %125 = extractelement <4 x i16> %124, i32 0
  %126 = extractelement <4 x i16> %124, i32 1
  %127 = insertelement <4 x i16> undef, i16 %67, i32 0
  %128 = insertelement <4 x i16> %127, i16 %66, i32 1
  %129 = insertelement <4 x i16> %128, i16 %65, i32 2
  %130 = insertelement <4 x i16> %129, i16 %64, i32 3
  %131 = icmp slt <4 x i16> %124, %130
  %132 = select <4 x i1> %131, <4 x i16> %124, <4 x i16> %130
  %133 = extractelement <4 x i16> %132, i32 0
  %134 = extractelement <4 x i16> %132, i32 1
  %135 = extractelement <4 x i16> %132, i32 2
  %136 = extractelement <4 x i16> %132, i32 3
  %137 = zext i16 %126 to i32
  %138 = shl nuw i32 %137, 16
  %139 = zext i16 %125 to i32
  %140 = or i32 %138, %139
  %141 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %33, i64 %63
  %142 = bitcast %"struct.skvx::Vec"* %141 to i32*
  store i32 %140, i32* %142, align 4
  %143 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %84, i64 0, i32 10, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %54, i64 %63
  %146 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"* %145 to i32*
  store i32 %144, i32* %146, align 8
  %147 = add i64 %63, 1
  br label %148

148:                                              ; preds = %81, %62
  %149 = phi i16 [ %133, %81 ], [ %67, %62 ]
  %150 = phi i16 [ %134, %81 ], [ %66, %62 ]
  %151 = phi i16 [ %135, %81 ], [ %65, %62 ]
  %152 = phi i16 [ %136, %81 ], [ %64, %62 ]
  %153 = phi i64 [ %147, %81 ], [ %63, %62 ]
  %154 = add nuw i64 %68, 1
  %155 = icmp eq i64 %154, %55
  br i1 %155, label %60, label %62

156:                                              ; preds = %60
  %157 = load i64, i64* %9, align 8
  %158 = icmp ne i64 %153, %157
  %159 = zext i1 %158 to i8
  %160 = ptrtoint i8* %31 to i64
  %161 = bitcast %"class.(anonymous namespace)::GlyphVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %161) #18
  %162 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 0
  %163 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 0
  call void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor* nonnull %162, %class.SkAutoDescriptor* dereferenceable(128) %163) #18
  %164 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 1, i32 0
  %165 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 1, i32 0
  %166 = load %class.SkMaskFilter*, %class.SkMaskFilter** %165, align 8
  %167 = icmp eq %class.SkMaskFilter* %166, null
  br i1 %167, label %171, label %168

168:                                              ; preds = %156
  %169 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %166, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = atomicrmw add i32* %169, i32 1 monotonic
  br label %171

171:                                              ; preds = %168, %156
  store %class.SkMaskFilter* %166, %class.SkMaskFilter** %164, align 8
  %172 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 2, i32 0
  %173 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 2, i32 0
  %174 = load %class.SkPathEffect*, %class.SkPathEffect** %173, align 8
  %175 = icmp eq %class.SkPathEffect* %174, null
  br i1 %175, label %179, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %174, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = atomicrmw add i32* %177, i32 1 monotonic
  br label %179

179:                                              ; preds = %176, %171
  store %class.SkPathEffect* %174, %class.SkPathEffect** %172, align 8
  %180 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 3, i32 0
  %181 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 3, i32 0
  %182 = load %class.SkTypeface*, %class.SkTypeface** %181, align 8
  %183 = icmp eq %class.SkTypeface* %182, null
  br i1 %183, label %187, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %182, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = atomicrmw add i32* %185, i32 1 monotonic
  br label %187

187:                                              ; preds = %179, %184
  store %class.SkTypeface* %182, %class.SkTypeface** %180, align 8
  %188 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 4
  %189 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 4
  %190 = bitcast float* %189 to i32*
  %191 = load i32, i32* %190, align 8
  %192 = bitcast float* %188 to i32*
  store i32 %191, i32* %192, align 8
  %193 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 1, i32 0
  %194 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"** %193 to i8**
  store i8* %52, i8** %194, align 8
  %195 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 1, i32 1
  store i64 %153, i64* %195, align 8
  %196 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 2, i32 0
  %197 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0, i64 32
  %198 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0, i64 0
  %199 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0, i64 40
  %200 = bitcast i8* %199 to i64*
  %201 = bitcast i8* %197 to i8**
  %202 = bitcast %class.GrTextStrike** %196 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %202, i8 0, i64 16, i1 false) #18
  store i8* %198, i8** %201, align 8
  store i64 34359738368, i64* %200, align 8
  %203 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 4, i32 1, i64 0
  %204 = bitcast i32* %203 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 16, i1 false) #18
  %205 = bitcast %"class.(anonymous namespace)::GlyphVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %205)
  %206 = load i32, i32* %19, align 8
  %207 = and i32 %206, -8
  store i32 %207, i32* %19, align 8
  %208 = icmp slt i32 %207, 328
  br i1 %208, label %209, label %211

209:                                              ; preds = %187
  call void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes* %12, i32 328, i32 8) #18
  %210 = load i32, i32* %19, align 8
  br label %211

211:                                              ; preds = %209, %187
  %212 = phi i32 [ %210, %209 ], [ %207, %187 ]
  %213 = load i8*, i8** %27, align 8
  %214 = sext i32 %212 to i64
  %215 = sub nsw i64 0, %214
  %216 = getelementptr inbounds i8, i8* %213, i64 %215
  %217 = add nsw i32 %212, -328
  store i32 %217, i32* %19, align 8
  %218 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 0
  call void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor* nonnull %218, %class.SkAutoDescriptor* nonnull dereferenceable(128) %162) #18
  %219 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 1, i32 0
  %220 = load %class.SkMaskFilter*, %class.SkMaskFilter** %164, align 8
  %221 = icmp eq %class.SkMaskFilter* %220, null
  br i1 %221, label %225, label %222

222:                                              ; preds = %211
  %223 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %220, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = atomicrmw add i32* %223, i32 1 monotonic
  br label %225

225:                                              ; preds = %222, %211
  store %class.SkMaskFilter* %220, %class.SkMaskFilter** %219, align 8
  %226 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 2, i32 0
  %227 = load %class.SkPathEffect*, %class.SkPathEffect** %172, align 8
  %228 = icmp eq %class.SkPathEffect* %227, null
  br i1 %228, label %232, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %227, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = atomicrmw add i32* %230, i32 1 monotonic
  br label %232

232:                                              ; preds = %229, %225
  store %class.SkPathEffect* %227, %class.SkPathEffect** %226, align 8
  %233 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 3, i32 0
  %234 = load %class.SkTypeface*, %class.SkTypeface** %180, align 8
  %235 = icmp eq %class.SkTypeface* %234, null
  br i1 %235, label %239, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %234, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = atomicrmw add i32* %237, i32 1 monotonic
  br label %239

239:                                              ; preds = %236, %232
  store %class.SkTypeface* %234, %class.SkTypeface** %233, align 8
  %240 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 4
  %241 = load i32, i32* %192, align 8
  %242 = bitcast float* %240 to i32*
  store i32 %241, i32* %242, align 8
  %243 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 1
  %244 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 1
  %245 = bitcast %class.SkSpan.300* %243 to i8*
  %246 = bitcast %class.SkSpan.300* %244 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %245, i8* align 8 %246, i64 16, i1 false) #18
  %247 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 2
  %248 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 2
  %249 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %248, i64 0, i32 0
  %250 = bitcast %class.sk_sp.301* %248 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 8
  store %class.GrTextStrike* null, %class.GrTextStrike** %249, align 8
  %252 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 3
  %253 = bitcast %class.sk_sp.301* %247 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %253, align 8
  %254 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i64 32
  %255 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i64 0
  %256 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i64 40
  %257 = bitcast i8* %256 to i64*
  %258 = bitcast i8* %254 to i8**
  store i8* %255, i8** %258, align 8
  store i64 34359738368, i64* %257, align 8
  %259 = load i64, i64* %200, align 8
  %260 = lshr i64 %259, 1
  %261 = and i64 %260, 2147483647
  %262 = icmp ult i64 %261, 5
  br i1 %262, label %285, label %263

263:                                              ; preds = %239
  %264 = shl nuw i64 %261, 33
  store i64 %264, i64* %257, align 8
  %265 = call i8* @_Z15sk_malloc_throwmm(i64 %261, i64 8) #18
  %266 = load i64, i64* %257, align 8
  %267 = shl i64 %266, 2
  %268 = and i64 %267, 17179869176
  %269 = icmp eq i64 %268, 0
  br i1 %269, label %273, label %270

270:                                              ; preds = %263
  %271 = load i8*, i8** %258, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %265, i8* align 1 %271, i64 %268, i1 false) #18
  %272 = load i64, i64* %257, align 8
  br label %273

273:                                              ; preds = %270, %263
  %274 = phi i64 [ %266, %263 ], [ %272, %270 ]
  %275 = and i64 %274, 1
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %280, label %277

277:                                              ; preds = %273
  %278 = load i8*, i8** %258, align 8
  call void @_Z7sk_freePv(i8* %278) #18
  %279 = load i64, i64* %257, align 8
  br label %280

280:                                              ; preds = %277, %273
  %281 = phi i64 [ %279, %277 ], [ %274, %273 ]
  store i8* %265, i8** %258, align 8
  %282 = and i64 %281, -4294967298
  %283 = or i64 %282, 1
  store i64 %283, i64* %257, align 8
  %284 = load i64, i64* %200, align 8
  br label %285

285:                                              ; preds = %280, %239
  %286 = phi i8* [ %255, %239 ], [ %265, %280 ]
  %287 = phi i64 [ 34359738368, %239 ], [ %283, %280 ]
  %288 = phi i64 [ %259, %239 ], [ %284, %280 ]
  %289 = and i64 %288, 4294967294
  %290 = and i64 %287, -4294967295
  %291 = or i64 %289, %290
  store i64 %291, i64* %257, align 8
  %292 = bitcast i8* %197 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %293 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %292, align 8
  %294 = icmp eq i64 %289, 0
  br i1 %294, label %316, label %295

295:                                              ; preds = %285
  %296 = bitcast i8* %254 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %297 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %293 to i64*
  %298 = bitcast i8* %286 to i64*
  %299 = load i64, i64* %297, align 4
  store i64 %299, i64* %298, align 4
  %300 = load i64, i64* %257, align 8
  %301 = and i64 %300, 4294967292
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %316, label %303

303:                                              ; preds = %295, %303
  %304 = phi i64 [ %311, %303 ], [ 1, %295 ]
  %305 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %296, align 8
  %306 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %305, i64 %304
  %307 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %293, i64 %304
  %308 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %307 to i64*
  %309 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %306 to i64*
  %310 = load i64, i64* %308, align 4
  store i64 %310, i64* %309, align 4
  %311 = add nuw nsw i64 %304, 1
  %312 = load i64, i64* %257, align 8
  %313 = lshr i64 %312, 1
  %314 = and i64 %313, 2147483647
  %315 = icmp ult i64 %311, %314
  br i1 %315, label %303, label %316

316:                                              ; preds = %303, %295, %285
  %317 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 4, i32 1, i64 0
  %318 = bitcast i32* %317 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %318, i8* align 8 %204, i64 16, i1 false) #18
  %319 = bitcast i8* %216 to i32 (...)***
  %320 = getelementptr inbounds i8, i8* %216, i64 8
  %321 = bitcast i8* %320 to i64*
  store i64 0, i64* %321, align 8
  %322 = getelementptr inbounds i8, i8* %216, i64 16
  %323 = bitcast i8* %322 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [10 x i8*] }, { [13 x i8*], [10 x i8*] }* @_ZTVN12_GLOBAL__N_116DirectMaskSubRunE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %319, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [10 x i8*] }, { [13 x i8*], [10 x i8*] }* @_ZTVN12_GLOBAL__N_116DirectMaskSubRunE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %323, align 8
  %324 = getelementptr inbounds i8, i8* %216, i64 24
  %325 = bitcast i8* %324 to i32*
  store i32 %2, i32* %325, align 8
  %326 = getelementptr inbounds i8, i8* %216, i64 32
  %327 = bitcast i8* %326 to i64*
  store i64 %8, i64* %327, align 8
  %328 = getelementptr inbounds i8, i8* %216, i64 40
  %329 = bitcast i8* %328 to i64*
  %330 = zext i16 %152 to i64
  %331 = shl nuw i64 %330, 48
  %332 = zext i16 %151 to i64
  %333 = shl nuw nsw i64 %332, 32
  %334 = zext i16 %150 to i64
  %335 = shl nuw nsw i64 %334, 16
  %336 = zext i16 %149 to i64
  %337 = or i64 %335, %336
  %338 = or i64 %337, %333
  %339 = or i64 %338, %331
  store i64 %339, i64* %329, align 8
  %340 = getelementptr inbounds i8, i8* %216, i64 48
  %341 = bitcast i8* %340 to i64*
  store i64 %160, i64* %341, align 8
  %342 = getelementptr inbounds i8, i8* %216, i64 56
  %343 = bitcast i8* %342 to i64*
  store i64 %153, i64* %343, align 8
  %344 = getelementptr inbounds i8, i8* %216, i64 64
  store i8 %159, i8* %344, align 8
  %345 = getelementptr inbounds i8, i8* %216, i64 72
  %346 = bitcast i8* %345 to %"class.(anonymous namespace)::GlyphVector"*
  %347 = bitcast i8* %345 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor* %347, %class.SkAutoDescriptor* nonnull dereferenceable(128) %218) #18
  %348 = getelementptr inbounds i8, i8* %216, i64 200
  %349 = bitcast i8* %348 to %class.SkMaskFilter**
  %350 = load %class.SkMaskFilter*, %class.SkMaskFilter** %219, align 8
  %351 = icmp eq %class.SkMaskFilter* %350, null
  br i1 %351, label %355, label %352

352:                                              ; preds = %316
  %353 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %350, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %354 = atomicrmw add i32* %353, i32 1 monotonic
  br label %355

355:                                              ; preds = %352, %316
  store %class.SkMaskFilter* %350, %class.SkMaskFilter** %349, align 8
  %356 = getelementptr inbounds i8, i8* %216, i64 208
  %357 = bitcast i8* %356 to %class.SkPathEffect**
  %358 = load %class.SkPathEffect*, %class.SkPathEffect** %226, align 8
  %359 = icmp eq %class.SkPathEffect* %358, null
  br i1 %359, label %363, label %360

360:                                              ; preds = %355
  %361 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %358, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = atomicrmw add i32* %361, i32 1 monotonic
  br label %363

363:                                              ; preds = %360, %355
  store %class.SkPathEffect* %358, %class.SkPathEffect** %357, align 8
  %364 = getelementptr inbounds i8, i8* %216, i64 216
  %365 = bitcast i8* %364 to %class.SkTypeface**
  %366 = load %class.SkTypeface*, %class.SkTypeface** %233, align 8
  %367 = icmp eq %class.SkTypeface* %366, null
  br i1 %367, label %371, label %368

368:                                              ; preds = %363
  %369 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %366, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %370 = atomicrmw add i32* %369, i32 1 monotonic
  br label %371

371:                                              ; preds = %368, %363
  store %class.SkTypeface* %366, %class.SkTypeface** %365, align 8
  %372 = getelementptr inbounds i8, i8* %216, i64 224
  %373 = load i32, i32* %242, align 8
  %374 = bitcast i8* %372 to i32*
  store i32 %373, i32* %374, align 8
  %375 = getelementptr inbounds i8, i8* %216, i64 232
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %375, i8* align 8 %245, i64 16, i1 false) #18
  %376 = getelementptr inbounds i8, i8* %216, i64 248
  %377 = bitcast i8* %376 to %class.GrTextStrike**
  %378 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 2, i32 0
  %379 = load %class.GrTextStrike*, %class.GrTextStrike** %378, align 8
  %380 = icmp eq %class.GrTextStrike* %379, null
  br i1 %380, label %384, label %381

381:                                              ; preds = %371
  %382 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %379, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %383 = atomicrmw add i32* %382, i32 1 monotonic
  br label %384

384:                                              ; preds = %381, %371
  store %class.GrTextStrike* %379, %class.GrTextStrike** %377, align 8
  %385 = getelementptr inbounds i8, i8* %216, i64 256
  %386 = bitcast i8* %385 to i64*
  %387 = load i64, i64* %252, align 8
  store i64 %387, i64* %386, align 8
  %388 = getelementptr inbounds i8, i8* %216, i64 296
  %389 = getelementptr inbounds i8, i8* %216, i64 264
  %390 = getelementptr inbounds i8, i8* %216, i64 304
  %391 = bitcast i8* %390 to i64*
  %392 = bitcast i8* %388 to i8**
  store i8* %389, i8** %392, align 8
  store i64 34359738368, i64* %391, align 8
  %393 = icmp eq %"class.(anonymous namespace)::GlyphVector"* %6, %346
  br i1 %393, label %423, label %394

394:                                              ; preds = %384
  %395 = bitcast i8* %388 to %class.SkTArray.313*
  store i64 34359738368, i64* %391, align 8
  %396 = load i64, i64* %257, align 8
  %397 = lshr i64 %396, 1
  %398 = trunc i64 %397 to i32
  %399 = and i32 %398, 2147483647
  call void @_ZN8SkTArrayIN13GrDrawOpAtlas19BulkUseTokenUpdater8PlotDataELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.313* %395, i32 %399, i32 0) #18
  %400 = load i64, i64* %257, align 8
  %401 = and i64 %400, 4294967294
  %402 = load i64, i64* %391, align 8
  %403 = and i64 %402, -4294967295
  %404 = or i64 %403, %401
  store i64 %404, i64* %391, align 8
  %405 = bitcast i8* %254 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %406 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %405, align 8
  %407 = icmp eq i64 %401, 0
  br i1 %407, label %423, label %408

408:                                              ; preds = %394
  %409 = bitcast i8* %388 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  br label %410

410:                                              ; preds = %410, %408
  %411 = phi i64 [ 0, %408 ], [ %418, %410 ]
  %412 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %409, align 8
  %413 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %412, i64 %411
  %414 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %406, i64 %411
  %415 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %414 to i64*
  %416 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %413 to i64*
  %417 = load i64, i64* %415, align 4
  store i64 %417, i64* %416, align 4
  %418 = add nuw nsw i64 %411, 1
  %419 = load i64, i64* %391, align 8
  %420 = lshr i64 %419, 1
  %421 = and i64 %420, 2147483647
  %422 = icmp ult i64 %418, %421
  br i1 %422, label %410, label %423

423:                                              ; preds = %410, %394, %384
  %424 = getelementptr inbounds i8, i8* %216, i64 312
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %424, i8* align 8 %318, i64 16, i1 false) #18
  %425 = load i64, i64* %257, align 8
  %426 = and i64 %425, 1
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %430, label %428

428:                                              ; preds = %423
  %429 = load i8*, i8** %258, align 8
  call void @_Z7sk_freePv(i8* %429) #18
  br label %430

430:                                              ; preds = %428, %423
  %431 = load %class.GrTextStrike*, %class.GrTextStrike** %378, align 8
  %432 = icmp eq %class.GrTextStrike* %431, null
  br i1 %432, label %451, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %431, i64 0, i32 0
  %435 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %431, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %436 = atomicrmw add i32* %435, i32 -1 acq_rel
  %437 = icmp eq i32 %436, 1
  br i1 %437, label %438, label %451

438:                                              ; preds = %433
  %439 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %434, i64 38
  %440 = bitcast %class.SkNVRefCnt.302* %439 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %440) #18
  %441 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %434, i64 6
  %442 = bitcast %class.SkNVRefCnt.302* %441 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %442) #18
  %443 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %434, i64 4
  %444 = bitcast %class.SkNVRefCnt.302* %443 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %445 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %444, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %444, align 8
  %446 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %445, null
  br i1 %446, label %449, label %447

447:                                              ; preds = %438
  %448 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %445 to i8*
  call void @_ZdaPv(i8* %448) #20
  br label %449

449:                                              ; preds = %447, %438
  %450 = bitcast %class.GrTextStrike* %431 to i8*
  call void @_ZdlPv(i8* %450) #20
  br label %451

451:                                              ; preds = %449, %433, %430
  %452 = load %class.SkTypeface*, %class.SkTypeface** %233, align 8
  %453 = icmp eq %class.SkTypeface* %452, null
  br i1 %453, label %464, label %454

454:                                              ; preds = %451
  %455 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %452, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = atomicrmw add i32* %455, i32 -1 acq_rel
  %457 = icmp eq i32 %456, 1
  br i1 %457, label %458, label %464

458:                                              ; preds = %454
  %459 = bitcast %class.SkTypeface* %452 to %class.SkRefCntBase*
  %460 = bitcast %class.SkTypeface* %452 to void (%class.SkRefCntBase*)***
  %461 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %460, align 8
  %462 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %461, i64 2
  %463 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %462, align 8
  call void %463(%class.SkRefCntBase* nonnull %459) #18
  br label %464

464:                                              ; preds = %458, %454, %451
  %465 = load %class.SkPathEffect*, %class.SkPathEffect** %226, align 8
  %466 = icmp eq %class.SkPathEffect* %465, null
  br i1 %466, label %477, label %467

467:                                              ; preds = %464
  %468 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %465, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %469 = atomicrmw add i32* %468, i32 -1 acq_rel
  %470 = icmp eq i32 %469, 1
  br i1 %470, label %471, label %477

471:                                              ; preds = %467
  %472 = bitcast %class.SkPathEffect* %465 to %class.SkRefCntBase*
  %473 = bitcast %class.SkPathEffect* %465 to void (%class.SkRefCntBase*)***
  %474 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %473, align 8
  %475 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %474, i64 2
  %476 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %475, align 8
  call void %476(%class.SkRefCntBase* nonnull %472) #18
  br label %477

477:                                              ; preds = %471, %467, %464
  %478 = load %class.SkMaskFilter*, %class.SkMaskFilter** %219, align 8
  %479 = icmp eq %class.SkMaskFilter* %478, null
  br i1 %479, label %490, label %480

480:                                              ; preds = %477
  %481 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %478, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %482 = atomicrmw add i32* %481, i32 -1 acq_rel
  %483 = icmp eq i32 %482, 1
  br i1 %483, label %484, label %490

484:                                              ; preds = %480
  %485 = bitcast %class.SkMaskFilter* %478 to %class.SkRefCntBase*
  %486 = bitcast %class.SkMaskFilter* %478 to void (%class.SkRefCntBase*)***
  %487 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %486, align 8
  %488 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %487, i64 2
  %489 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %488, align 8
  call void %489(%class.SkRefCntBase* nonnull %485) #18
  br label %490

490:                                              ; preds = %484, %480, %477
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %218) #18
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %205)
  %491 = load i64, i64* %200, align 8
  %492 = and i64 %491, 1
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %496, label %494

494:                                              ; preds = %490
  %495 = load i8*, i8** %201, align 8
  call void @_Z7sk_freePv(i8* %495) #18
  br label %496

496:                                              ; preds = %494, %490
  %497 = load %class.GrTextStrike*, %class.GrTextStrike** %196, align 8
  %498 = icmp eq %class.GrTextStrike* %497, null
  br i1 %498, label %517, label %499

499:                                              ; preds = %496
  %500 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %497, i64 0, i32 0
  %501 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %497, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %502 = atomicrmw add i32* %501, i32 -1 acq_rel
  %503 = icmp eq i32 %502, 1
  br i1 %503, label %504, label %517

504:                                              ; preds = %499
  %505 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %500, i64 38
  %506 = bitcast %class.SkNVRefCnt.302* %505 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %506) #18
  %507 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %500, i64 6
  %508 = bitcast %class.SkNVRefCnt.302* %507 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %508) #18
  %509 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %500, i64 4
  %510 = bitcast %class.SkNVRefCnt.302* %509 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %511 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %510, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %510, align 8
  %512 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %511, null
  br i1 %512, label %515, label %513

513:                                              ; preds = %504
  %514 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %511 to i8*
  call void @_ZdaPv(i8* %514) #20
  br label %515

515:                                              ; preds = %513, %504
  %516 = bitcast %class.GrTextStrike* %497 to i8*
  call void @_ZdlPv(i8* %516) #20
  br label %517

517:                                              ; preds = %496, %499, %515
  %518 = load %class.SkTypeface*, %class.SkTypeface** %180, align 8
  %519 = icmp eq %class.SkTypeface* %518, null
  br i1 %519, label %530, label %520

520:                                              ; preds = %517
  %521 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %518, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %522 = atomicrmw add i32* %521, i32 -1 acq_rel
  %523 = icmp eq i32 %522, 1
  br i1 %523, label %524, label %530

524:                                              ; preds = %520
  %525 = bitcast %class.SkTypeface* %518 to %class.SkRefCntBase*
  %526 = bitcast %class.SkTypeface* %518 to void (%class.SkRefCntBase*)***
  %527 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %526, align 8
  %528 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %527, i64 2
  %529 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %528, align 8
  call void %529(%class.SkRefCntBase* nonnull %525) #18
  br label %530

530:                                              ; preds = %524, %520, %517
  %531 = load %class.SkPathEffect*, %class.SkPathEffect** %172, align 8
  %532 = icmp eq %class.SkPathEffect* %531, null
  br i1 %532, label %543, label %533

533:                                              ; preds = %530
  %534 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %531, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %535 = atomicrmw add i32* %534, i32 -1 acq_rel
  %536 = icmp eq i32 %535, 1
  br i1 %536, label %537, label %543

537:                                              ; preds = %533
  %538 = bitcast %class.SkPathEffect* %531 to %class.SkRefCntBase*
  %539 = bitcast %class.SkPathEffect* %531 to void (%class.SkRefCntBase*)***
  %540 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %539, align 8
  %541 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %540, i64 2
  %542 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %541, align 8
  call void %542(%class.SkRefCntBase* nonnull %538) #18
  br label %543

543:                                              ; preds = %537, %533, %530
  %544 = load %class.SkMaskFilter*, %class.SkMaskFilter** %164, align 8
  %545 = icmp eq %class.SkMaskFilter* %544, null
  br i1 %545, label %556, label %546

546:                                              ; preds = %543
  %547 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %544, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %548 = atomicrmw add i32* %547, i32 -1 acq_rel
  %549 = icmp eq i32 %548, 1
  br i1 %549, label %550, label %556

550:                                              ; preds = %546
  %551 = bitcast %class.SkMaskFilter* %544 to %class.SkRefCntBase*
  %552 = bitcast %class.SkMaskFilter* %544 to void (%class.SkRefCntBase*)***
  %553 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %552, align 8
  %554 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %553, i64 2
  %555 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %554, align 8
  call void %555(%class.SkRefCntBase* nonnull %551) #18
  br label %556

556:                                              ; preds = %543, %546, %550
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %162) #18
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %161) #18
  %557 = bitcast i8* %216 to %class.GrSubRun*
  br label %558

558:                                              ; preds = %47, %60, %556
  %559 = phi %class.GrSubRun* [ %557, %556 ], [ null, %60 ], [ null, %47 ]
  ret %class.GrSubRun* %559
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrTextBlob18processSourcePathsERK5SkZipIJ14SkGlyphVariant7SkPointEERK6SkFontRK12SkStrikeSpec(%class.GrTextBlob*, %class.SkZip.59* nocapture readonly dereferenceable(24), %class.SkFont* nocapture readonly dereferenceable(24), %class.SkStrikeSpec* dereferenceable(160)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkFont, %class.SkFont* %2, i64 0, i32 5
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = add nsw i32 %7, -1
  %9 = icmp ult i32 %8, 2
  %10 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 5
  %11 = zext i1 %9 to i8
  %12 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %10, i64 0, i32 0
  %16 = icmp ult i32 %14, 89478314
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  tail call fastcc void @_ZZN12GrBagOfBytes16allocateBytesForIN12_GLOBAL__N_110PathSubRun9PathGlyphEEEPciENKUlvE_clEv() #18
  unreachable

18:                                               ; preds = %4
  %19 = icmp eq i32 %14, 0
  %20 = mul i32 %14, 24
  %21 = select i1 %19, i32 1, i32 %20
  %22 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 5, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, -8
  store i32 %24, i32* %22, align 8
  %25 = icmp slt i32 %24, %21
  br i1 %25, label %26, label %28

26:                                               ; preds = %18
  tail call void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes* %15, i32 %21, i32 8) #18
  %27 = load i32, i32* %22, align 8
  br label %28

28:                                               ; preds = %26, %18
  %29 = phi i32 [ %27, %26 ], [ %24, %18 ]
  %30 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %10, i64 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = sext i32 %29 to i64
  %33 = sub nsw i64 0, %32
  %34 = getelementptr inbounds i8, i8* %31, i64 %33
  %35 = sub nsw i32 %29, %21
  store i32 %35, i32* %22, align 8
  %36 = bitcast i8* %34 to %"struct.(anonymous namespace)::PathSubRun::PathGlyph"*
  %37 = icmp sgt i32 %14, 0
  br i1 %37, label %38, label %59

38:                                               ; preds = %28
  %39 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %41 = and i64 %13, 4294967295
  br label %42

42:                                               ; preds = %42, %38
  %43 = phi i64 [ 0, %38 ], [ %55, %42 ]
  %44 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %39, align 8, !noalias !12
  %45 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %44, i64 %43
  %46 = load %struct.SkPoint*, %struct.SkPoint** %40, align 8, !noalias !12
  %47 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %46, i64 %43
  %48 = bitcast %class.SkGlyphVariant* %45 to %class.SkPath**
  %49 = load %class.SkPath*, %class.SkPath** %48, align 8, !noalias !12
  %50 = bitcast %struct.SkPoint* %47 to i64*
  %51 = load i64, i64* %50, align 4, !noalias !12
  %52 = getelementptr inbounds %"struct.(anonymous namespace)::PathSubRun::PathGlyph", %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %36, i64 %43, i32 0
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %52, %class.SkPath* dereferenceable(16) %49) #18
  %53 = getelementptr inbounds %"struct.(anonymous namespace)::PathSubRun::PathGlyph", %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %36, i64 %43, i32 1
  %54 = bitcast %struct.SkPoint* %53 to i64*
  store i64 %51, i64* %54, align 8, !alias.scope !12
  %55 = add nuw nsw i64 %43, 1
  %56 = icmp eq i64 %55, %41
  br i1 %56, label %57, label %42

57:                                               ; preds = %42
  %58 = load i32, i32* %22, align 8
  br label %59

59:                                               ; preds = %57, %28
  %60 = phi i32 [ %58, %57 ], [ %35, %28 ]
  %61 = ptrtoint i8* %34 to i64
  %62 = load i64, i64* %12, align 8
  %63 = and i32 %60, -8
  store i32 %63, i32* %22, align 8
  %64 = icmp slt i32 %63, 216
  br i1 %64, label %65, label %67

65:                                               ; preds = %59
  tail call void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes* %15, i32 216, i32 8) #18
  %66 = load i32, i32* %22, align 8
  br label %67

67:                                               ; preds = %65, %59
  %68 = phi i32 [ %66, %65 ], [ %63, %59 ]
  %69 = load i8*, i8** %30, align 8
  %70 = sext i32 %68 to i64
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i8, i8* %69, i64 %71
  %73 = add nsw i32 %68, -216
  store i32 %73, i32* %22, align 8
  %74 = bitcast i8* %72 to i32 (...)***
  %75 = getelementptr inbounds i8, i8* %72, i64 8
  %76 = bitcast i8* %75 to i64*
  store i64 0, i64* %76, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN12_GLOBAL__N_110PathSubRunE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %77 = getelementptr inbounds i8, i8* %72, i64 16
  store i8 %11, i8* %77, align 8
  %78 = getelementptr inbounds i8, i8* %72, i64 24
  %79 = bitcast i8* %78 to %class.SkAutoDescriptor*
  %80 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %3, i64 0, i32 0
  tail call void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor* %79, %class.SkAutoDescriptor* dereferenceable(128) %80) #18
  %81 = getelementptr inbounds i8, i8* %72, i64 152
  %82 = bitcast i8* %81 to %class.SkMaskFilter**
  %83 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %3, i64 0, i32 1, i32 0
  %84 = load %class.SkMaskFilter*, %class.SkMaskFilter** %83, align 8
  %85 = icmp eq %class.SkMaskFilter* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %67
  %87 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %84, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 1 monotonic
  br label %89

89:                                               ; preds = %86, %67
  store %class.SkMaskFilter* %84, %class.SkMaskFilter** %82, align 8
  %90 = getelementptr inbounds i8, i8* %72, i64 160
  %91 = bitcast i8* %90 to %class.SkPathEffect**
  %92 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %3, i64 0, i32 2, i32 0
  %93 = load %class.SkPathEffect*, %class.SkPathEffect** %92, align 8
  %94 = icmp eq %class.SkPathEffect* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %93, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 1 monotonic
  br label %98

98:                                               ; preds = %95, %89
  store %class.SkPathEffect* %93, %class.SkPathEffect** %91, align 8
  %99 = getelementptr inbounds i8, i8* %72, i64 168
  %100 = bitcast i8* %99 to %class.SkTypeface**
  %101 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %3, i64 0, i32 3, i32 0
  %102 = load %class.SkTypeface*, %class.SkTypeface** %101, align 8
  %103 = icmp eq %class.SkTypeface* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %102, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw add i32* %105, i32 1 monotonic
  br label %107

107:                                              ; preds = %98, %104
  store %class.SkTypeface* %102, %class.SkTypeface** %100, align 8
  %108 = getelementptr inbounds i8, i8* %72, i64 176
  %109 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %3, i64 0, i32 4
  %110 = bitcast float* %109 to i32*
  %111 = load i32, i32* %110, align 8
  %112 = bitcast i8* %108 to i32*
  store i32 %111, i32* %112, align 8
  %113 = getelementptr inbounds i8, i8* %72, i64 184
  %114 = bitcast i8* %113 to i64*
  store i64 %61, i64* %114, align 8
  %115 = getelementptr inbounds i8, i8* %72, i64 192
  %116 = bitcast i8* %115 to i64*
  store i64 %62, i64* %116, align 8
  %117 = getelementptr inbounds i8, i8* %72, i64 200
  %118 = bitcast i8* %117 to i64*
  store i64 %61, i64* %118, align 8
  %119 = getelementptr inbounds i8, i8* %72, i64 208
  %120 = bitcast i8* %119 to i32*
  store i32 %14, i32* %120, align 4
  %121 = ptrtoint i8* %72 to i64
  %122 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 6, i32 1
  %123 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %122, align 8
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %123, i64 0, i32 0, i32 0, i32 0
  %125 = load %class.GrSubRun*, %class.GrSubRun** %124, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %123 to i64*
  store i64 %121, i64* %126, align 8
  %127 = icmp eq %class.GrSubRun* %125, null
  br i1 %127, label %132, label %128

128:                                              ; preds = %107
  %129 = bitcast %class.GrSubRun* %125 to void (%class.GrSubRun*)***
  %130 = load void (%class.GrSubRun*)**, void (%class.GrSubRun*)*** %129, align 8
  %131 = load void (%class.GrSubRun*)*, void (%class.GrSubRun*)** %130, align 8
  tail call void %131(%class.GrSubRun* nonnull %125) #18
  br label %132

132:                                              ; preds = %107, %128
  %133 = bitcast %"class.std::__1::unique_ptr"** %122 to i8**
  store i8* %75, i8** %133, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrTextBlob17processSourceSDFTERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpecRK6SkFontff(%class.GrTextBlob*, %class.SkZip.59* nocapture readonly dereferenceable(24), %class.SkStrikeSpec* dereferenceable(160), %class.SkFont* nocapture readonly dereferenceable(24), float, float) unnamed_addr #0 align 2 {
  %7 = alloca %"class.(anonymous namespace)::GlyphVector", align 8
  %8 = alloca %"class.(anonymous namespace)::GlyphVector", align 8
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  store float %4, float* %9, align 4
  store float %5, float* %10, align 4
  %11 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 11
  %12 = load float, float* %11, align 4
  %13 = fcmp ogt float %12, %4
  %14 = select i1 %13, float* %11, float* %9
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = bitcast float* %11 to i32*
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 12
  %19 = load float, float* %18, align 4
  %20 = fcmp olt float %19, %5
  %21 = select i1 %20, float* %18, float* %10
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = bitcast float* %18 to i32*
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 5
  %26 = ptrtoint %class.GrTextBlob* %0 to i64
  %27 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %2, i64 0, i32 4
  %28 = load float, float* %27, align 8
  %29 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %25, i64 0, i32 0
  %33 = icmp ult i32 %31, 134217471
  br i1 %33, label %35, label %34

34:                                               ; preds = %6
  tail call fastcc void @_ZZN12GrBagOfBytes16allocateBytesForIN12_GLOBAL__N_110SDFTSubRun10VertexDataEEEPciENKUlvE_clEv() #18
  unreachable

35:                                               ; preds = %6
  %36 = icmp eq i32 %31, 0
  %37 = shl i32 %31, 4
  %38 = select i1 %36, i32 1, i32 %37
  %39 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 5, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -4
  store i32 %41, i32* %39, align 8
  %42 = icmp slt i32 %41, %38
  br i1 %42, label %43, label %45

43:                                               ; preds = %35
  tail call void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes* %32, i32 %38, i32 4) #18
  %44 = load i32, i32* %39, align 8
  br label %45

45:                                               ; preds = %43, %35
  %46 = phi i32 [ %44, %43 ], [ %41, %35 ]
  %47 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %25, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = sext i32 %46 to i64
  %50 = sub nsw i64 0, %49
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  %52 = sub nsw i32 %46, %38
  store i32 %52, i32* %39, align 8
  %53 = bitcast i8* %51 to %"struct.(anonymous namespace)::SDFTSubRun::VertexData"*
  %54 = icmp sgt i32 %31, 0
  br i1 %54, label %55, label %135

55:                                               ; preds = %45
  %56 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %58 = and i64 %30, 4294967295
  br label %59

59:                                               ; preds = %59, %55
  %60 = phi float [ 0xC7EFFFFFE0000000, %55 ], [ %111, %59 ]
  %61 = phi float [ 0xC7EFFFFFE0000000, %55 ], [ %109, %59 ]
  %62 = phi float [ 0x47EFFFFFE0000000, %55 ], [ %107, %59 ]
  %63 = phi float [ 0x47EFFFFFE0000000, %55 ], [ %105, %59 ]
  %64 = phi i64 [ 0, %55 ], [ %128, %59 ]
  %65 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRun::VertexData", %"struct.(anonymous namespace)::SDFTSubRun::VertexData"* %53, i64 %64
  %66 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %56, align 8
  %67 = load %struct.SkPoint*, %struct.SkPoint** %57, align 8
  %68 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %67, i64 %64
  %69 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %66, i64 %64, i32 0, i32 0
  %70 = load %class.SkGlyph*, %class.SkGlyph** %69, align 8
  %71 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %70, i64 0, i32 3
  %72 = load i16, i16* %71, align 2
  %73 = zext i16 %72 to i32
  %74 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %70, i64 0, i32 2
  %75 = load i16, i16* %74, align 4
  %76 = sext i16 %75 to i32
  %77 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %70, i64 0, i32 0
  %78 = load i16, i16* %77, align 8
  %79 = zext i16 %78 to i32
  %80 = add nuw nsw i32 %79, %73
  %81 = trunc i32 %80 to i16
  %82 = and i32 %76, 65535
  %83 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %70, i64 0, i32 1
  %84 = load i16, i16* %83, align 2
  %85 = zext i16 %84 to i32
  %86 = add nuw nsw i32 %82, %85
  %87 = trunc i32 %86 to i16
  %88 = sitofp i16 %72 to float
  %89 = sitofp i16 %75 to float
  %90 = fmul float %28, %88
  %91 = fmul float %28, %89
  %92 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %68, i64 0, i32 0
  %93 = load float, float* %92, align 4
  %94 = fadd float %90, %93
  %95 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %67, i64 %64, i32 1
  %96 = load float, float* %95, align 4
  %97 = fadd float %91, %96
  %98 = sitofp i16 %81 to float
  %99 = sitofp i16 %87 to float
  %100 = fmul float %28, %98
  %101 = fmul float %28, %99
  %102 = fadd float %93, %100
  %103 = fadd float %96, %101
  %104 = fcmp olt float %94, %63
  %105 = select i1 %104, float %94, float %63
  %106 = fcmp olt float %97, %62
  %107 = select i1 %106, float %97, float %62
  %108 = fcmp olt float %61, %102
  %109 = select i1 %108, float %102, float %61
  %110 = fcmp olt float %60, %103
  %111 = select i1 %110, float %103, float %60
  %112 = bitcast %struct.SkPoint* %68 to i64*
  %113 = load i64, i64* %112, align 4
  %114 = zext i32 %86 to i64
  %115 = shl i64 %114, 48
  %116 = and i32 %80, 65535
  %117 = zext i32 %116 to i64
  %118 = shl nuw nsw i64 %117, 32
  %119 = shl nsw i32 %76, 16
  %120 = zext i32 %119 to i64
  %121 = zext i16 %72 to i64
  %122 = or i64 %120, %121
  %123 = or i64 %122, %118
  %124 = or i64 %123, %115
  %125 = bitcast %"struct.(anonymous namespace)::SDFTSubRun::VertexData"* %65 to i64*
  store i64 %113, i64* %125, align 4
  %126 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRun::VertexData", %"struct.(anonymous namespace)::SDFTSubRun::VertexData"* %53, i64 %64, i32 1
  %127 = bitcast %struct.GrIRect16* %126 to i64*
  store i64 %124, i64* %127, align 4
  %128 = add nuw nsw i64 %64, 1
  %129 = icmp eq i64 %128, %58
  br i1 %129, label %130, label %59

130:                                              ; preds = %59
  %131 = bitcast float %105 to i32
  %132 = bitcast float %107 to i32
  %133 = bitcast float %109 to i32
  %134 = bitcast float %111 to i32
  br label %135

135:                                              ; preds = %130, %45
  %136 = phi i32 [ %134, %130 ], [ -8388609, %45 ]
  %137 = phi i32 [ %133, %130 ], [ -8388609, %45 ]
  %138 = phi i32 [ %132, %130 ], [ 2139095039, %45 ]
  %139 = phi i32 [ %131, %130 ], [ 2139095039, %45 ]
  %140 = load i64, i64* %29, align 8
  %141 = ptrtoint i8* %51 to i64
  %142 = bitcast %"class.(anonymous namespace)::GlyphVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %142) #18
  %143 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %144 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %143, align 8
  call fastcc void @_ZN12_GLOBAL__N_111GlyphVector4MakeERK12SkStrikeSpec6SkSpanI14SkGlyphVariantEP17GrSubRunAllocator(%"class.(anonymous namespace)::GlyphVector"* nonnull sret %8, %class.SkStrikeSpec* dereferenceable(160) %2, %class.SkGlyphVariant* %144, i64 %140, %class.GrSubRunAllocator* %25) #18
  %145 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 5
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = icmp eq i8 %146, 2
  %149 = zext i1 %148 to i8
  %150 = add nsw i32 %147, -1
  %151 = icmp ult i32 %150, 2
  %152 = zext i1 %151 to i8
  %153 = bitcast %"class.(anonymous namespace)::GlyphVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %153) #18
  %154 = load i32, i32* %39, align 8
  %155 = and i32 %154, -8
  store i32 %155, i32* %39, align 8
  %156 = icmp slt i32 %155, 336
  br i1 %156, label %157, label %159

157:                                              ; preds = %135
  call void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes* %32, i32 336, i32 8) #18
  %158 = load i32, i32* %39, align 8
  br label %159

159:                                              ; preds = %157, %135
  %160 = phi i32 [ %158, %157 ], [ %155, %135 ]
  %161 = load i8*, i8** %47, align 8
  %162 = sext i32 %160 to i64
  %163 = sub nsw i64 0, %162
  %164 = getelementptr inbounds i8, i8* %161, i64 %163
  %165 = add nsw i32 %160, -336
  store i32 %165, i32* %39, align 8
  %166 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 0
  %167 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 0, i32 0
  call void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor* nonnull %166, %class.SkAutoDescriptor* nonnull dereferenceable(128) %167) #18
  %168 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 1, i32 0
  %169 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 0, i32 1, i32 0
  %170 = load %class.SkMaskFilter*, %class.SkMaskFilter** %169, align 8
  %171 = icmp eq %class.SkMaskFilter* %170, null
  br i1 %171, label %175, label %172

172:                                              ; preds = %159
  %173 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %170, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = atomicrmw add i32* %173, i32 1 monotonic
  br label %175

175:                                              ; preds = %172, %159
  store %class.SkMaskFilter* %170, %class.SkMaskFilter** %168, align 8
  %176 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 2, i32 0
  %177 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 0, i32 2, i32 0
  %178 = load %class.SkPathEffect*, %class.SkPathEffect** %177, align 8
  %179 = icmp eq %class.SkPathEffect* %178, null
  br i1 %179, label %183, label %180

180:                                              ; preds = %175
  %181 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %178, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = atomicrmw add i32* %181, i32 1 monotonic
  br label %183

183:                                              ; preds = %180, %175
  store %class.SkPathEffect* %178, %class.SkPathEffect** %176, align 8
  %184 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 3, i32 0
  %185 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 0, i32 3, i32 0
  %186 = load %class.SkTypeface*, %class.SkTypeface** %185, align 8
  %187 = icmp eq %class.SkTypeface* %186, null
  br i1 %187, label %191, label %188

188:                                              ; preds = %183
  %189 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %186, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = atomicrmw add i32* %189, i32 1 monotonic
  br label %191

191:                                              ; preds = %188, %183
  store %class.SkTypeface* %186, %class.SkTypeface** %184, align 8
  %192 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 4
  %193 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 0, i32 4
  %194 = bitcast float* %193 to i32*
  %195 = load i32, i32* %194, align 8
  %196 = bitcast float* %192 to i32*
  store i32 %195, i32* %196, align 8
  %197 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 1
  %198 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 1
  %199 = bitcast %class.SkSpan.300* %197 to i8*
  %200 = bitcast %class.SkSpan.300* %198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* align 8 %200, i64 16, i1 false) #18
  %201 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 2
  %202 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 2
  %203 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %202, i64 0, i32 0
  %204 = bitcast %class.sk_sp.301* %202 to <2 x i64>*
  %205 = load <2 x i64>, <2 x i64>* %204, align 8
  store %class.GrTextStrike* null, %class.GrTextStrike** %203, align 8
  %206 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 3
  %207 = bitcast %class.sk_sp.301* %201 to <2 x i64>*
  store <2 x i64> %205, <2 x i64>* %207, align 8
  %208 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0, i64 32
  %209 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0, i64 0
  %210 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0, i64 40
  %211 = bitcast i8* %210 to i64*
  %212 = bitcast i8* %208 to i8**
  store i8* %209, i8** %212, align 8
  %213 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0, i64 32
  store i64 34359738368, i64* %211, align 8
  %214 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0, i64 40
  %215 = bitcast i8* %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = lshr i64 %216, 1
  %218 = and i64 %217, 2147483647
  %219 = icmp ult i64 %218, 5
  br i1 %219, label %242, label %220

220:                                              ; preds = %191
  %221 = shl nuw i64 %218, 33
  store i64 %221, i64* %211, align 8
  %222 = call i8* @_Z15sk_malloc_throwmm(i64 %218, i64 8) #18
  %223 = load i64, i64* %211, align 8
  %224 = shl i64 %223, 2
  %225 = and i64 %224, 17179869176
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %230, label %227

227:                                              ; preds = %220
  %228 = load i8*, i8** %212, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %222, i8* align 1 %228, i64 %225, i1 false) #18
  %229 = load i64, i64* %211, align 8
  br label %230

230:                                              ; preds = %227, %220
  %231 = phi i64 [ %223, %220 ], [ %229, %227 ]
  %232 = and i64 %231, 1
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %237, label %234

234:                                              ; preds = %230
  %235 = load i8*, i8** %212, align 8
  call void @_Z7sk_freePv(i8* %235) #18
  %236 = load i64, i64* %211, align 8
  br label %237

237:                                              ; preds = %234, %230
  %238 = phi i64 [ %236, %234 ], [ %231, %230 ]
  store i8* %222, i8** %212, align 8
  %239 = and i64 %238, -4294967298
  %240 = or i64 %239, 1
  store i64 %240, i64* %211, align 8
  %241 = load i64, i64* %215, align 8
  br label %242

242:                                              ; preds = %237, %191
  %243 = phi i8* [ %209, %191 ], [ %222, %237 ]
  %244 = phi i64 [ 34359738368, %191 ], [ %240, %237 ]
  %245 = phi i64 [ %216, %191 ], [ %241, %237 ]
  %246 = and i64 %245, 4294967294
  %247 = and i64 %244, -4294967295
  %248 = or i64 %246, %247
  store i64 %248, i64* %211, align 8
  %249 = bitcast i8* %213 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %250 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %249, align 8
  %251 = icmp eq i64 %246, 0
  br i1 %251, label %273, label %252

252:                                              ; preds = %242
  %253 = bitcast i8* %208 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %254 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %250 to i64*
  %255 = bitcast i8* %243 to i64*
  %256 = load i64, i64* %254, align 4
  store i64 %256, i64* %255, align 4
  %257 = load i64, i64* %211, align 8
  %258 = and i64 %257, 4294967292
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %273, label %260

260:                                              ; preds = %252, %260
  %261 = phi i64 [ %268, %260 ], [ 1, %252 ]
  %262 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %253, align 8
  %263 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %262, i64 %261
  %264 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %250, i64 %261
  %265 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %264 to i64*
  %266 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %263 to i64*
  %267 = load i64, i64* %265, align 4
  store i64 %267, i64* %266, align 4
  %268 = add nuw nsw i64 %261, 1
  %269 = load i64, i64* %211, align 8
  %270 = lshr i64 %269, 1
  %271 = and i64 %270, 2147483647
  %272 = icmp ult i64 %268, %271
  br i1 %272, label %260, label %273

273:                                              ; preds = %260, %252, %242
  %274 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 4, i32 1, i64 0
  %275 = bitcast i32* %274 to i8*
  %276 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 4, i32 1, i64 0
  %277 = bitcast i32* %276 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %275, i8* align 8 %277, i64 16, i1 false) #18
  %278 = bitcast i8* %164 to i32 (...)***
  %279 = getelementptr inbounds i8, i8* %164, i64 8
  %280 = bitcast i8* %279 to i64*
  store i64 0, i64* %280, align 8
  %281 = getelementptr inbounds i8, i8* %164, i64 16
  %282 = bitcast i8* %281 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [10 x i8*] }, { [13 x i8*], [10 x i8*] }* @_ZTVN12_GLOBAL__N_110SDFTSubRunE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %278, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [10 x i8*] }, { [13 x i8*], [10 x i8*] }* @_ZTVN12_GLOBAL__N_110SDFTSubRunE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %282, align 8
  %283 = getelementptr inbounds i8, i8* %164, i64 24
  %284 = bitcast i8* %283 to i32*
  store i32 0, i32* %284, align 8
  %285 = getelementptr inbounds i8, i8* %164, i64 32
  %286 = bitcast i8* %285 to i64*
  store i64 %26, i64* %286, align 8
  %287 = getelementptr inbounds i8, i8* %164, i64 40
  %288 = bitcast i8* %287 to i32*
  store i32 %139, i32* %288, align 8
  %289 = getelementptr inbounds i8, i8* %164, i64 44
  %290 = bitcast i8* %289 to i32*
  store i32 %138, i32* %290, align 4
  %291 = getelementptr inbounds i8, i8* %164, i64 48
  %292 = bitcast i8* %291 to i32*
  store i32 %137, i32* %292, align 8
  %293 = getelementptr inbounds i8, i8* %164, i64 52
  %294 = bitcast i8* %293 to i32*
  store i32 %136, i32* %294, align 4
  %295 = getelementptr inbounds i8, i8* %164, i64 56
  %296 = bitcast i8* %295 to i64*
  store i64 %141, i64* %296, align 8
  %297 = getelementptr inbounds i8, i8* %164, i64 64
  %298 = bitcast i8* %297 to i64*
  store i64 %140, i64* %298, align 8
  %299 = getelementptr inbounds i8, i8* %164, i64 72
  %300 = bitcast i8* %299 to %"class.(anonymous namespace)::GlyphVector"*
  %301 = bitcast i8* %299 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor* %301, %class.SkAutoDescriptor* nonnull dereferenceable(128) %166) #18
  %302 = getelementptr inbounds i8, i8* %164, i64 200
  %303 = bitcast i8* %302 to %class.SkMaskFilter**
  %304 = load %class.SkMaskFilter*, %class.SkMaskFilter** %168, align 8
  %305 = icmp eq %class.SkMaskFilter* %304, null
  br i1 %305, label %309, label %306

306:                                              ; preds = %273
  %307 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %304, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = atomicrmw add i32* %307, i32 1 monotonic
  br label %309

309:                                              ; preds = %306, %273
  store %class.SkMaskFilter* %304, %class.SkMaskFilter** %303, align 8
  %310 = getelementptr inbounds i8, i8* %164, i64 208
  %311 = bitcast i8* %310 to %class.SkPathEffect**
  %312 = load %class.SkPathEffect*, %class.SkPathEffect** %176, align 8
  %313 = icmp eq %class.SkPathEffect* %312, null
  br i1 %313, label %317, label %314

314:                                              ; preds = %309
  %315 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %312, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = atomicrmw add i32* %315, i32 1 monotonic
  br label %317

317:                                              ; preds = %314, %309
  store %class.SkPathEffect* %312, %class.SkPathEffect** %311, align 8
  %318 = getelementptr inbounds i8, i8* %164, i64 216
  %319 = bitcast i8* %318 to %class.SkTypeface**
  %320 = load %class.SkTypeface*, %class.SkTypeface** %184, align 8
  %321 = icmp eq %class.SkTypeface* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %317
  %323 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %320, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = atomicrmw add i32* %323, i32 1 monotonic
  br label %325

325:                                              ; preds = %322, %317
  store %class.SkTypeface* %320, %class.SkTypeface** %319, align 8
  %326 = getelementptr inbounds i8, i8* %164, i64 224
  %327 = load i32, i32* %196, align 8
  %328 = bitcast i8* %326 to i32*
  store i32 %327, i32* %328, align 8
  %329 = getelementptr inbounds i8, i8* %164, i64 232
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %329, i8* align 8 %199, i64 16, i1 false) #18
  %330 = getelementptr inbounds i8, i8* %164, i64 248
  %331 = bitcast i8* %330 to %class.GrTextStrike**
  %332 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 2, i32 0
  %333 = load %class.GrTextStrike*, %class.GrTextStrike** %332, align 8
  %334 = icmp eq %class.GrTextStrike* %333, null
  br i1 %334, label %338, label %335

335:                                              ; preds = %325
  %336 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %333, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = atomicrmw add i32* %336, i32 1 monotonic
  br label %338

338:                                              ; preds = %335, %325
  store %class.GrTextStrike* %333, %class.GrTextStrike** %331, align 8
  %339 = getelementptr inbounds i8, i8* %164, i64 256
  %340 = bitcast i8* %339 to i64*
  %341 = load i64, i64* %206, align 8
  store i64 %341, i64* %340, align 8
  %342 = getelementptr inbounds i8, i8* %164, i64 296
  %343 = getelementptr inbounds i8, i8* %164, i64 264
  %344 = getelementptr inbounds i8, i8* %164, i64 304
  %345 = bitcast i8* %344 to i64*
  %346 = bitcast i8* %342 to i8**
  store i8* %343, i8** %346, align 8
  store i64 34359738368, i64* %345, align 8
  %347 = icmp eq %"class.(anonymous namespace)::GlyphVector"* %7, %300
  br i1 %347, label %377, label %348

348:                                              ; preds = %338
  %349 = bitcast i8* %342 to %class.SkTArray.313*
  store i64 34359738368, i64* %345, align 8
  %350 = load i64, i64* %211, align 8
  %351 = lshr i64 %350, 1
  %352 = trunc i64 %351 to i32
  %353 = and i32 %352, 2147483647
  call void @_ZN8SkTArrayIN13GrDrawOpAtlas19BulkUseTokenUpdater8PlotDataELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.313* %349, i32 %353, i32 0) #18
  %354 = load i64, i64* %211, align 8
  %355 = and i64 %354, 4294967294
  %356 = load i64, i64* %345, align 8
  %357 = and i64 %356, -4294967295
  %358 = or i64 %357, %355
  store i64 %358, i64* %345, align 8
  %359 = bitcast i8* %208 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %360 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %359, align 8
  %361 = icmp eq i64 %355, 0
  br i1 %361, label %377, label %362

362:                                              ; preds = %348
  %363 = bitcast i8* %342 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  br label %364

364:                                              ; preds = %364, %362
  %365 = phi i64 [ 0, %362 ], [ %372, %364 ]
  %366 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %363, align 8
  %367 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %366, i64 %365
  %368 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %360, i64 %365
  %369 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %368 to i64*
  %370 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %367 to i64*
  %371 = load i64, i64* %369, align 4
  store i64 %371, i64* %370, align 4
  %372 = add nuw nsw i64 %365, 1
  %373 = load i64, i64* %345, align 8
  %374 = lshr i64 %373, 1
  %375 = and i64 %374, 2147483647
  %376 = icmp ult i64 %372, %375
  br i1 %376, label %364, label %377

377:                                              ; preds = %364, %348, %338
  %378 = getelementptr inbounds i8, i8* %164, i64 312
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %378, i8* align 8 %275, i64 16, i1 false) #18
  %379 = getelementptr inbounds i8, i8* %164, i64 328
  store i8 %149, i8* %379, align 8
  %380 = getelementptr inbounds i8, i8* %164, i64 329
  store i8 %152, i8* %380, align 1
  %381 = load i64, i64* %211, align 8
  %382 = and i64 %381, 1
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %386, label %384

384:                                              ; preds = %377
  %385 = load i8*, i8** %212, align 8
  call void @_Z7sk_freePv(i8* %385) #18
  br label %386

386:                                              ; preds = %384, %377
  %387 = load %class.GrTextStrike*, %class.GrTextStrike** %332, align 8
  %388 = icmp eq %class.GrTextStrike* %387, null
  br i1 %388, label %407, label %389

389:                                              ; preds = %386
  %390 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %387, i64 0, i32 0
  %391 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %387, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = atomicrmw add i32* %391, i32 -1 acq_rel
  %393 = icmp eq i32 %392, 1
  br i1 %393, label %394, label %407

394:                                              ; preds = %389
  %395 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %390, i64 38
  %396 = bitcast %class.SkNVRefCnt.302* %395 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %396) #18
  %397 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %390, i64 6
  %398 = bitcast %class.SkNVRefCnt.302* %397 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %398) #18
  %399 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %390, i64 4
  %400 = bitcast %class.SkNVRefCnt.302* %399 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %401 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %400, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %400, align 8
  %402 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %401, null
  br i1 %402, label %405, label %403

403:                                              ; preds = %394
  %404 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %401 to i8*
  call void @_ZdaPv(i8* %404) #20
  br label %405

405:                                              ; preds = %403, %394
  %406 = bitcast %class.GrTextStrike* %387 to i8*
  call void @_ZdlPv(i8* %406) #20
  br label %407

407:                                              ; preds = %405, %389, %386
  %408 = load %class.SkTypeface*, %class.SkTypeface** %184, align 8
  %409 = icmp eq %class.SkTypeface* %408, null
  br i1 %409, label %420, label %410

410:                                              ; preds = %407
  %411 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %408, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = atomicrmw add i32* %411, i32 -1 acq_rel
  %413 = icmp eq i32 %412, 1
  br i1 %413, label %414, label %420

414:                                              ; preds = %410
  %415 = bitcast %class.SkTypeface* %408 to %class.SkRefCntBase*
  %416 = bitcast %class.SkTypeface* %408 to void (%class.SkRefCntBase*)***
  %417 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %416, align 8
  %418 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %417, i64 2
  %419 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %418, align 8
  call void %419(%class.SkRefCntBase* nonnull %415) #18
  br label %420

420:                                              ; preds = %414, %410, %407
  %421 = load %class.SkPathEffect*, %class.SkPathEffect** %176, align 8
  %422 = icmp eq %class.SkPathEffect* %421, null
  br i1 %422, label %433, label %423

423:                                              ; preds = %420
  %424 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %421, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = atomicrmw add i32* %424, i32 -1 acq_rel
  %426 = icmp eq i32 %425, 1
  br i1 %426, label %427, label %433

427:                                              ; preds = %423
  %428 = bitcast %class.SkPathEffect* %421 to %class.SkRefCntBase*
  %429 = bitcast %class.SkPathEffect* %421 to void (%class.SkRefCntBase*)***
  %430 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %429, align 8
  %431 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %430, i64 2
  %432 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %431, align 8
  call void %432(%class.SkRefCntBase* nonnull %428) #18
  br label %433

433:                                              ; preds = %427, %423, %420
  %434 = load %class.SkMaskFilter*, %class.SkMaskFilter** %168, align 8
  %435 = icmp eq %class.SkMaskFilter* %434, null
  br i1 %435, label %446, label %436

436:                                              ; preds = %433
  %437 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %434, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %438 = atomicrmw add i32* %437, i32 -1 acq_rel
  %439 = icmp eq i32 %438, 1
  br i1 %439, label %440, label %446

440:                                              ; preds = %436
  %441 = bitcast %class.SkMaskFilter* %434 to %class.SkRefCntBase*
  %442 = bitcast %class.SkMaskFilter* %434 to void (%class.SkRefCntBase*)***
  %443 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %442, align 8
  %444 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %443, i64 2
  %445 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %444, align 8
  call void %445(%class.SkRefCntBase* nonnull %441) #18
  br label %446

446:                                              ; preds = %440, %436, %433
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %166) #18
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %153) #18
  %447 = load i64, i64* %215, align 8
  %448 = and i64 %447, 1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %453, label %450

450:                                              ; preds = %446
  %451 = bitcast i8* %213 to i8**
  %452 = load i8*, i8** %451, align 8
  call void @_Z7sk_freePv(i8* %452) #18
  br label %453

453:                                              ; preds = %450, %446
  %454 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 2, i32 0
  %455 = load %class.GrTextStrike*, %class.GrTextStrike** %454, align 8
  %456 = icmp eq %class.GrTextStrike* %455, null
  br i1 %456, label %475, label %457

457:                                              ; preds = %453
  %458 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %455, i64 0, i32 0
  %459 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %455, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %460 = atomicrmw add i32* %459, i32 -1 acq_rel
  %461 = icmp eq i32 %460, 1
  br i1 %461, label %462, label %475

462:                                              ; preds = %457
  %463 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %458, i64 38
  %464 = bitcast %class.SkNVRefCnt.302* %463 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %464) #18
  %465 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %458, i64 6
  %466 = bitcast %class.SkNVRefCnt.302* %465 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %466) #18
  %467 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %458, i64 4
  %468 = bitcast %class.SkNVRefCnt.302* %467 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %469 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %468, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %468, align 8
  %470 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %469, null
  br i1 %470, label %473, label %471

471:                                              ; preds = %462
  %472 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %469 to i8*
  call void @_ZdaPv(i8* %472) #20
  br label %473

473:                                              ; preds = %471, %462
  %474 = bitcast %class.GrTextStrike* %455 to i8*
  call void @_ZdlPv(i8* %474) #20
  br label %475

475:                                              ; preds = %473, %457, %453
  %476 = load %class.SkTypeface*, %class.SkTypeface** %185, align 8
  %477 = icmp eq %class.SkTypeface* %476, null
  br i1 %477, label %488, label %478

478:                                              ; preds = %475
  %479 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %476, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %480 = atomicrmw add i32* %479, i32 -1 acq_rel
  %481 = icmp eq i32 %480, 1
  br i1 %481, label %482, label %488

482:                                              ; preds = %478
  %483 = bitcast %class.SkTypeface* %476 to %class.SkRefCntBase*
  %484 = bitcast %class.SkTypeface* %476 to void (%class.SkRefCntBase*)***
  %485 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %484, align 8
  %486 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %485, i64 2
  %487 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %486, align 8
  call void %487(%class.SkRefCntBase* nonnull %483) #18
  br label %488

488:                                              ; preds = %482, %478, %475
  %489 = load %class.SkPathEffect*, %class.SkPathEffect** %177, align 8
  %490 = icmp eq %class.SkPathEffect* %489, null
  br i1 %490, label %501, label %491

491:                                              ; preds = %488
  %492 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %489, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %493 = atomicrmw add i32* %492, i32 -1 acq_rel
  %494 = icmp eq i32 %493, 1
  br i1 %494, label %495, label %501

495:                                              ; preds = %491
  %496 = bitcast %class.SkPathEffect* %489 to %class.SkRefCntBase*
  %497 = bitcast %class.SkPathEffect* %489 to void (%class.SkRefCntBase*)***
  %498 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %497, align 8
  %499 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %498, i64 2
  %500 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %499, align 8
  call void %500(%class.SkRefCntBase* nonnull %496) #18
  br label %501

501:                                              ; preds = %495, %491, %488
  %502 = load %class.SkMaskFilter*, %class.SkMaskFilter** %169, align 8
  %503 = icmp eq %class.SkMaskFilter* %502, null
  br i1 %503, label %514, label %504

504:                                              ; preds = %501
  %505 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %502, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %506 = atomicrmw add i32* %505, i32 -1 acq_rel
  %507 = icmp eq i32 %506, 1
  br i1 %507, label %508, label %514

508:                                              ; preds = %504
  %509 = bitcast %class.SkMaskFilter* %502 to %class.SkRefCntBase*
  %510 = bitcast %class.SkMaskFilter* %502 to void (%class.SkRefCntBase*)***
  %511 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %510, align 8
  %512 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %511, i64 2
  %513 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %512, align 8
  call void %513(%class.SkRefCntBase* nonnull %509) #18
  br label %514

514:                                              ; preds = %501, %504, %508
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %167) #18
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %142) #18
  %515 = ptrtoint i8* %164 to i64
  %516 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %0, i64 0, i32 6, i32 1
  %517 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %516, align 8
  %518 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %517, i64 0, i32 0, i32 0, i32 0
  %519 = load %class.GrSubRun*, %class.GrSubRun** %518, align 8
  %520 = bitcast %"class.std::__1::unique_ptr"* %517 to i64*
  store i64 %515, i64* %520, align 8
  %521 = icmp eq %class.GrSubRun* %519, null
  br i1 %521, label %526, label %522

522:                                              ; preds = %514
  %523 = bitcast %class.GrSubRun* %519 to void (%class.GrSubRun*)***
  %524 = load void (%class.GrSubRun*)**, void (%class.GrSubRun*)*** %523, align 8
  %525 = load void (%class.GrSubRun*)*, void (%class.GrSubRun*)** %524, align 8
  call void %525(%class.GrSubRun* nonnull %519) #18
  br label %526

526:                                              ; preds = %514, %522
  %527 = bitcast %"class.std::__1::unique_ptr"** %516 to i8**
  store i8* %279, i8** %527, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10GrTextBlob18processSourceMasksERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec(%class.GrTextBlob*, %class.SkZip.59* dereferenceable(24), %class.SkStrikeSpec* dereferenceable(160)) unnamed_addr #4 align 2 {
  tail call void @_ZN10GrTextBlob18addMultiMaskFormatIPFNSt3__110unique_ptrI8GrSubRunN17GrSubRunAllocator9DestroyerEEERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec12GrMaskFormatPS_PS4_EEEvT_SC_SF_(%class.GrTextBlob* %0, %class.GrSubRun* (%class.SkZip.59*, %class.SkStrikeSpec*, i32, %class.GrTextBlob*, %class.GrSubRunAllocator*)* nonnull @_ZN12_GLOBAL__N_121TransformedMaskSubRun4MakeERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec12GrMaskFormatP10GrTextBlobP17GrSubRunAllocator, %class.SkZip.59* dereferenceable(24) %1, %class.SkStrikeSpec* dereferenceable(160) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %class.GrSubRun* @_ZN12_GLOBAL__N_121TransformedMaskSubRun4MakeERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec12GrMaskFormatP10GrTextBlobP17GrSubRunAllocator(%class.SkZip.59* nocapture readonly dereferenceable(24), %class.SkStrikeSpec* dereferenceable(160), i32, %class.GrTextBlob*, %class.GrSubRunAllocator*) #0 align 2 {
  %6 = alloca %"class.(anonymous namespace)::GlyphVector", align 8
  %7 = alloca %"class.(anonymous namespace)::GlyphVector", align 8
  %8 = ptrtoint %class.GrTextBlob* %3 to i64
  %9 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 4
  %10 = load float, float* %9, align 8
  %11 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %4, i64 0, i32 0
  %15 = icmp ult i32 %13, 134217471
  br i1 %15, label %17, label %16

16:                                               ; preds = %5
  tail call fastcc void @_ZZN12GrBagOfBytes16allocateBytesForIN12_GLOBAL__N_121TransformedMaskSubRun10VertexDataEEEPciENKUlvE_clEv() #18
  unreachable

17:                                               ; preds = %5
  %18 = icmp eq i32 %13, 0
  %19 = shl i32 %13, 4
  %20 = select i1 %18, i32 1, i32 %19
  %21 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %4, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, -4
  store i32 %23, i32* %21, align 8
  %24 = icmp slt i32 %23, %20
  br i1 %24, label %25, label %27

25:                                               ; preds = %17
  tail call void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes* %14, i32 %20, i32 4) #18
  %26 = load i32, i32* %21, align 8
  br label %27

27:                                               ; preds = %25, %17
  %28 = phi i32 [ %26, %25 ], [ %23, %17 ]
  %29 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %4, i64 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = sext i32 %28 to i64
  %32 = sub nsw i64 0, %31
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  %34 = sub nsw i32 %28, %20
  store i32 %34, i32* %21, align 8
  %35 = bitcast i8* %33 to %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"*
  %36 = icmp sgt i32 %13, 0
  br i1 %36, label %37, label %117

37:                                               ; preds = %27
  %38 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %40 = and i64 %12, 4294967295
  br label %41

41:                                               ; preds = %41, %37
  %42 = phi float [ 0xC7EFFFFFE0000000, %37 ], [ %93, %41 ]
  %43 = phi float [ 0xC7EFFFFFE0000000, %37 ], [ %91, %41 ]
  %44 = phi float [ 0x47EFFFFFE0000000, %37 ], [ %89, %41 ]
  %45 = phi float [ 0x47EFFFFFE0000000, %37 ], [ %87, %41 ]
  %46 = phi i64 [ 0, %37 ], [ %110, %41 ]
  %47 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %35, i64 %46
  %48 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %38, align 8
  %49 = load %struct.SkPoint*, %struct.SkPoint** %39, align 8
  %50 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %49, i64 %46
  %51 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %48, i64 %46, i32 0, i32 0
  %52 = load %class.SkGlyph*, %class.SkGlyph** %51, align 8
  %53 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %52, i64 0, i32 3
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  %56 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %52, i64 0, i32 2
  %57 = load i16, i16* %56, align 4
  %58 = sext i16 %57 to i32
  %59 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %52, i64 0, i32 0
  %60 = load i16, i16* %59, align 8
  %61 = zext i16 %60 to i32
  %62 = add nuw nsw i32 %61, %55
  %63 = trunc i32 %62 to i16
  %64 = and i32 %58, 65535
  %65 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %52, i64 0, i32 1
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i32
  %68 = add nuw nsw i32 %64, %67
  %69 = trunc i32 %68 to i16
  %70 = sitofp i16 %54 to float
  %71 = sitofp i16 %57 to float
  %72 = fmul float %10, %70
  %73 = fmul float %10, %71
  %74 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %50, i64 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fadd float %72, %75
  %77 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %49, i64 %46, i32 1
  %78 = load float, float* %77, align 4
  %79 = fadd float %73, %78
  %80 = sitofp i16 %63 to float
  %81 = sitofp i16 %69 to float
  %82 = fmul float %10, %80
  %83 = fmul float %10, %81
  %84 = fadd float %75, %82
  %85 = fadd float %78, %83
  %86 = fcmp olt float %76, %45
  %87 = select i1 %86, float %76, float %45
  %88 = fcmp olt float %79, %44
  %89 = select i1 %88, float %79, float %44
  %90 = fcmp olt float %43, %84
  %91 = select i1 %90, float %84, float %43
  %92 = fcmp olt float %42, %85
  %93 = select i1 %92, float %85, float %42
  %94 = bitcast %struct.SkPoint* %50 to i64*
  %95 = load i64, i64* %94, align 4
  %96 = zext i32 %68 to i64
  %97 = shl i64 %96, 48
  %98 = and i32 %62, 65535
  %99 = zext i32 %98 to i64
  %100 = shl nuw nsw i64 %99, 32
  %101 = shl nsw i32 %58, 16
  %102 = zext i32 %101 to i64
  %103 = zext i16 %54 to i64
  %104 = or i64 %102, %103
  %105 = or i64 %104, %100
  %106 = or i64 %105, %97
  %107 = bitcast %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %47 to i64*
  store i64 %95, i64* %107, align 4
  %108 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %35, i64 %46, i32 1
  %109 = bitcast %struct.GrIRect16* %108 to i64*
  store i64 %106, i64* %109, align 4
  %110 = add nuw nsw i64 %46, 1
  %111 = icmp eq i64 %110, %40
  br i1 %111, label %112, label %41

112:                                              ; preds = %41
  %113 = bitcast float %87 to i32
  %114 = bitcast float %89 to i32
  %115 = bitcast float %91 to i32
  %116 = bitcast float %93 to i32
  br label %117

117:                                              ; preds = %112, %27
  %118 = phi i32 [ %116, %112 ], [ -8388609, %27 ]
  %119 = phi i32 [ %115, %112 ], [ -8388609, %27 ]
  %120 = phi i32 [ %114, %112 ], [ 2139095039, %27 ]
  %121 = phi i32 [ %113, %112 ], [ 2139095039, %27 ]
  %122 = load i64, i64* %11, align 8
  %123 = ptrtoint i8* %33 to i64
  %124 = bitcast %"class.(anonymous namespace)::GlyphVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %124) #18
  %125 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %125, align 8
  call fastcc void @_ZN12_GLOBAL__N_111GlyphVector4MakeERK12SkStrikeSpec6SkSpanI14SkGlyphVariantEP17GrSubRunAllocator(%"class.(anonymous namespace)::GlyphVector"* nonnull sret %7, %class.SkStrikeSpec* dereferenceable(160) %1, %class.SkGlyphVariant* %126, i64 %122, %class.GrSubRunAllocator* %4)
  %127 = bitcast %"class.(anonymous namespace)::GlyphVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %127)
  %128 = load i32, i32* %21, align 8
  %129 = and i32 %128, -8
  store i32 %129, i32* %21, align 8
  %130 = icmp slt i32 %129, 328
  br i1 %130, label %131, label %133

131:                                              ; preds = %117
  call void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes* %14, i32 328, i32 8) #18
  %132 = load i32, i32* %21, align 8
  br label %133

133:                                              ; preds = %131, %117
  %134 = phi i32 [ %132, %131 ], [ %129, %117 ]
  %135 = load i8*, i8** %29, align 8
  %136 = sext i32 %134 to i64
  %137 = sub nsw i64 0, %136
  %138 = getelementptr inbounds i8, i8* %135, i64 %137
  %139 = add nsw i32 %134, -328
  store i32 %139, i32* %21, align 8
  %140 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 0
  %141 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 0
  call void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor* nonnull %140, %class.SkAutoDescriptor* nonnull dereferenceable(128) %141) #18
  %142 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 1, i32 0
  %143 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 1, i32 0
  %144 = load %class.SkMaskFilter*, %class.SkMaskFilter** %143, align 8
  %145 = icmp eq %class.SkMaskFilter* %144, null
  br i1 %145, label %149, label %146

146:                                              ; preds = %133
  %147 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %144, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw add i32* %147, i32 1 monotonic
  br label %149

149:                                              ; preds = %146, %133
  store %class.SkMaskFilter* %144, %class.SkMaskFilter** %142, align 8
  %150 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 2, i32 0
  %151 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 2, i32 0
  %152 = load %class.SkPathEffect*, %class.SkPathEffect** %151, align 8
  %153 = icmp eq %class.SkPathEffect* %152, null
  br i1 %153, label %157, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %152, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = atomicrmw add i32* %155, i32 1 monotonic
  br label %157

157:                                              ; preds = %154, %149
  store %class.SkPathEffect* %152, %class.SkPathEffect** %150, align 8
  %158 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 3, i32 0
  %159 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 3, i32 0
  %160 = load %class.SkTypeface*, %class.SkTypeface** %159, align 8
  %161 = icmp eq %class.SkTypeface* %160, null
  br i1 %161, label %165, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %160, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = atomicrmw add i32* %163, i32 1 monotonic
  br label %165

165:                                              ; preds = %162, %157
  store %class.SkTypeface* %160, %class.SkTypeface** %158, align 8
  %166 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 4
  %167 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 4
  %168 = bitcast float* %167 to i32*
  %169 = load i32, i32* %168, align 8
  %170 = bitcast float* %166 to i32*
  store i32 %169, i32* %170, align 8
  %171 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 1
  %172 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 1
  %173 = bitcast %class.SkSpan.300* %171 to i8*
  %174 = bitcast %class.SkSpan.300* %172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %174, i64 16, i1 false) #18
  %175 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 2
  %176 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 2
  %177 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %176, i64 0, i32 0
  %178 = bitcast %class.sk_sp.301* %176 to <2 x i64>*
  %179 = load <2 x i64>, <2 x i64>* %178, align 8
  store %class.GrTextStrike* null, %class.GrTextStrike** %177, align 8
  %180 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 3
  %181 = bitcast %class.sk_sp.301* %175 to <2 x i64>*
  store <2 x i64> %179, <2 x i64>* %181, align 8
  %182 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i64 32
  %183 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i64 0
  %184 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i64 40
  %185 = bitcast i8* %184 to i64*
  %186 = bitcast i8* %182 to i8**
  store i8* %183, i8** %186, align 8
  %187 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0, i64 32
  store i64 34359738368, i64* %185, align 8
  %188 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0, i64 40
  %189 = bitcast i8* %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = lshr i64 %190, 1
  %192 = and i64 %191, 2147483647
  %193 = icmp ult i64 %192, 5
  br i1 %193, label %216, label %194

194:                                              ; preds = %165
  %195 = shl nuw i64 %192, 33
  store i64 %195, i64* %185, align 8
  %196 = call i8* @_Z15sk_malloc_throwmm(i64 %192, i64 8) #18
  %197 = load i64, i64* %185, align 8
  %198 = shl i64 %197, 2
  %199 = and i64 %198, 17179869176
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %204, label %201

201:                                              ; preds = %194
  %202 = load i8*, i8** %186, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %196, i8* align 1 %202, i64 %199, i1 false) #18
  %203 = load i64, i64* %185, align 8
  br label %204

204:                                              ; preds = %201, %194
  %205 = phi i64 [ %197, %194 ], [ %203, %201 ]
  %206 = and i64 %205, 1
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %211, label %208

208:                                              ; preds = %204
  %209 = load i8*, i8** %186, align 8
  call void @_Z7sk_freePv(i8* %209) #18
  %210 = load i64, i64* %185, align 8
  br label %211

211:                                              ; preds = %208, %204
  %212 = phi i64 [ %210, %208 ], [ %205, %204 ]
  store i8* %196, i8** %186, align 8
  %213 = and i64 %212, -4294967298
  %214 = or i64 %213, 1
  store i64 %214, i64* %185, align 8
  %215 = load i64, i64* %189, align 8
  br label %216

216:                                              ; preds = %211, %165
  %217 = phi i8* [ %183, %165 ], [ %196, %211 ]
  %218 = phi i64 [ 34359738368, %165 ], [ %214, %211 ]
  %219 = phi i64 [ %190, %165 ], [ %215, %211 ]
  %220 = and i64 %219, 4294967294
  %221 = and i64 %218, -4294967295
  %222 = or i64 %220, %221
  store i64 %222, i64* %185, align 8
  %223 = bitcast i8* %187 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %224 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %223, align 8
  %225 = icmp eq i64 %220, 0
  br i1 %225, label %247, label %226

226:                                              ; preds = %216
  %227 = bitcast i8* %182 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %228 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %224 to i64*
  %229 = bitcast i8* %217 to i64*
  %230 = load i64, i64* %228, align 4
  store i64 %230, i64* %229, align 4
  %231 = load i64, i64* %185, align 8
  %232 = and i64 %231, 4294967292
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %247, label %234

234:                                              ; preds = %226, %234
  %235 = phi i64 [ %242, %234 ], [ 1, %226 ]
  %236 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %227, align 8
  %237 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %236, i64 %235
  %238 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %224, i64 %235
  %239 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %238 to i64*
  %240 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %237 to i64*
  %241 = load i64, i64* %239, align 4
  store i64 %241, i64* %240, align 4
  %242 = add nuw nsw i64 %235, 1
  %243 = load i64, i64* %185, align 8
  %244 = lshr i64 %243, 1
  %245 = and i64 %244, 2147483647
  %246 = icmp ult i64 %242, %245
  br i1 %246, label %234, label %247

247:                                              ; preds = %234, %226, %216
  %248 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 4, i32 1, i64 0
  %249 = bitcast i32* %248 to i8*
  %250 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 4, i32 1, i64 0
  %251 = bitcast i32* %250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %249, i8* align 8 %251, i64 16, i1 false) #18
  %252 = bitcast i8* %138 to i32 (...)***
  %253 = getelementptr inbounds i8, i8* %138, i64 8
  %254 = bitcast i8* %253 to i64*
  store i64 0, i64* %254, align 8
  %255 = getelementptr inbounds i8, i8* %138, i64 16
  %256 = bitcast i8* %255 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [10 x i8*] }, { [13 x i8*], [10 x i8*] }* @_ZTVN12_GLOBAL__N_121TransformedMaskSubRunE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %252, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [10 x i8*] }, { [13 x i8*], [10 x i8*] }* @_ZTVN12_GLOBAL__N_121TransformedMaskSubRunE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %256, align 8
  %257 = getelementptr inbounds i8, i8* %138, i64 24
  %258 = bitcast i8* %257 to i32*
  store i32 %2, i32* %258, align 8
  %259 = getelementptr inbounds i8, i8* %138, i64 32
  %260 = bitcast i8* %259 to i64*
  store i64 %8, i64* %260, align 8
  %261 = getelementptr inbounds i8, i8* %138, i64 40
  %262 = bitcast i8* %261 to i32*
  store i32 %121, i32* %262, align 8
  %263 = getelementptr inbounds i8, i8* %138, i64 44
  %264 = bitcast i8* %263 to i32*
  store i32 %120, i32* %264, align 4
  %265 = getelementptr inbounds i8, i8* %138, i64 48
  %266 = bitcast i8* %265 to i32*
  store i32 %119, i32* %266, align 8
  %267 = getelementptr inbounds i8, i8* %138, i64 52
  %268 = bitcast i8* %267 to i32*
  store i32 %118, i32* %268, align 4
  %269 = getelementptr inbounds i8, i8* %138, i64 56
  %270 = bitcast i8* %269 to i64*
  store i64 %123, i64* %270, align 8
  %271 = getelementptr inbounds i8, i8* %138, i64 64
  %272 = bitcast i8* %271 to i64*
  store i64 %122, i64* %272, align 8
  %273 = getelementptr inbounds i8, i8* %138, i64 72
  %274 = bitcast i8* %273 to %"class.(anonymous namespace)::GlyphVector"*
  %275 = bitcast i8* %273 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor* %275, %class.SkAutoDescriptor* nonnull dereferenceable(128) %140) #18
  %276 = getelementptr inbounds i8, i8* %138, i64 200
  %277 = bitcast i8* %276 to %class.SkMaskFilter**
  %278 = load %class.SkMaskFilter*, %class.SkMaskFilter** %142, align 8
  %279 = icmp eq %class.SkMaskFilter* %278, null
  br i1 %279, label %283, label %280

280:                                              ; preds = %247
  %281 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %278, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = atomicrmw add i32* %281, i32 1 monotonic
  br label %283

283:                                              ; preds = %280, %247
  store %class.SkMaskFilter* %278, %class.SkMaskFilter** %277, align 8
  %284 = getelementptr inbounds i8, i8* %138, i64 208
  %285 = bitcast i8* %284 to %class.SkPathEffect**
  %286 = load %class.SkPathEffect*, %class.SkPathEffect** %150, align 8
  %287 = icmp eq %class.SkPathEffect* %286, null
  br i1 %287, label %291, label %288

288:                                              ; preds = %283
  %289 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %286, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = atomicrmw add i32* %289, i32 1 monotonic
  br label %291

291:                                              ; preds = %288, %283
  store %class.SkPathEffect* %286, %class.SkPathEffect** %285, align 8
  %292 = getelementptr inbounds i8, i8* %138, i64 216
  %293 = bitcast i8* %292 to %class.SkTypeface**
  %294 = load %class.SkTypeface*, %class.SkTypeface** %158, align 8
  %295 = icmp eq %class.SkTypeface* %294, null
  br i1 %295, label %299, label %296

296:                                              ; preds = %291
  %297 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %294, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %298 = atomicrmw add i32* %297, i32 1 monotonic
  br label %299

299:                                              ; preds = %296, %291
  store %class.SkTypeface* %294, %class.SkTypeface** %293, align 8
  %300 = getelementptr inbounds i8, i8* %138, i64 224
  %301 = load i32, i32* %170, align 8
  %302 = bitcast i8* %300 to i32*
  store i32 %301, i32* %302, align 8
  %303 = getelementptr inbounds i8, i8* %138, i64 232
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %303, i8* align 8 %173, i64 16, i1 false) #18
  %304 = getelementptr inbounds i8, i8* %138, i64 248
  %305 = bitcast i8* %304 to %class.GrTextStrike**
  %306 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 2, i32 0
  %307 = load %class.GrTextStrike*, %class.GrTextStrike** %306, align 8
  %308 = icmp eq %class.GrTextStrike* %307, null
  br i1 %308, label %312, label %309

309:                                              ; preds = %299
  %310 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %307, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = atomicrmw add i32* %310, i32 1 monotonic
  br label %312

312:                                              ; preds = %309, %299
  store %class.GrTextStrike* %307, %class.GrTextStrike** %305, align 8
  %313 = getelementptr inbounds i8, i8* %138, i64 256
  %314 = bitcast i8* %313 to i64*
  %315 = load i64, i64* %180, align 8
  store i64 %315, i64* %314, align 8
  %316 = getelementptr inbounds i8, i8* %138, i64 296
  %317 = getelementptr inbounds i8, i8* %138, i64 264
  %318 = getelementptr inbounds i8, i8* %138, i64 304
  %319 = bitcast i8* %318 to i64*
  %320 = bitcast i8* %316 to i8**
  store i8* %317, i8** %320, align 8
  store i64 34359738368, i64* %319, align 8
  %321 = icmp eq %"class.(anonymous namespace)::GlyphVector"* %6, %274
  br i1 %321, label %351, label %322

322:                                              ; preds = %312
  %323 = bitcast i8* %316 to %class.SkTArray.313*
  store i64 34359738368, i64* %319, align 8
  %324 = load i64, i64* %185, align 8
  %325 = lshr i64 %324, 1
  %326 = trunc i64 %325 to i32
  %327 = and i32 %326, 2147483647
  call void @_ZN8SkTArrayIN13GrDrawOpAtlas19BulkUseTokenUpdater8PlotDataELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.313* %323, i32 %327, i32 0) #18
  %328 = load i64, i64* %185, align 8
  %329 = and i64 %328, 4294967294
  %330 = load i64, i64* %319, align 8
  %331 = and i64 %330, -4294967295
  %332 = or i64 %331, %329
  store i64 %332, i64* %319, align 8
  %333 = bitcast i8* %182 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %334 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %333, align 8
  %335 = icmp eq i64 %329, 0
  br i1 %335, label %351, label %336

336:                                              ; preds = %322
  %337 = bitcast i8* %316 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  br label %338

338:                                              ; preds = %338, %336
  %339 = phi i64 [ 0, %336 ], [ %346, %338 ]
  %340 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %337, align 8
  %341 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %340, i64 %339
  %342 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %334, i64 %339
  %343 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %342 to i64*
  %344 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %341 to i64*
  %345 = load i64, i64* %343, align 4
  store i64 %345, i64* %344, align 4
  %346 = add nuw nsw i64 %339, 1
  %347 = load i64, i64* %319, align 8
  %348 = lshr i64 %347, 1
  %349 = and i64 %348, 2147483647
  %350 = icmp ult i64 %346, %349
  br i1 %350, label %338, label %351

351:                                              ; preds = %338, %322, %312
  %352 = getelementptr inbounds i8, i8* %138, i64 312
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %352, i8* align 8 %249, i64 16, i1 false) #18
  %353 = load i64, i64* %185, align 8
  %354 = and i64 %353, 1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %358, label %356

356:                                              ; preds = %351
  %357 = load i8*, i8** %186, align 8
  call void @_Z7sk_freePv(i8* %357) #18
  br label %358

358:                                              ; preds = %356, %351
  %359 = load %class.GrTextStrike*, %class.GrTextStrike** %306, align 8
  %360 = icmp eq %class.GrTextStrike* %359, null
  br i1 %360, label %379, label %361

361:                                              ; preds = %358
  %362 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %359, i64 0, i32 0
  %363 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %359, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = atomicrmw add i32* %363, i32 -1 acq_rel
  %365 = icmp eq i32 %364, 1
  br i1 %365, label %366, label %379

366:                                              ; preds = %361
  %367 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %362, i64 38
  %368 = bitcast %class.SkNVRefCnt.302* %367 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %368) #18
  %369 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %362, i64 6
  %370 = bitcast %class.SkNVRefCnt.302* %369 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %370) #18
  %371 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %362, i64 4
  %372 = bitcast %class.SkNVRefCnt.302* %371 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %373 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %372, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %372, align 8
  %374 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %373, null
  br i1 %374, label %377, label %375

375:                                              ; preds = %366
  %376 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %373 to i8*
  call void @_ZdaPv(i8* %376) #20
  br label %377

377:                                              ; preds = %375, %366
  %378 = bitcast %class.GrTextStrike* %359 to i8*
  call void @_ZdlPv(i8* %378) #20
  br label %379

379:                                              ; preds = %377, %361, %358
  %380 = load %class.SkTypeface*, %class.SkTypeface** %158, align 8
  %381 = icmp eq %class.SkTypeface* %380, null
  br i1 %381, label %392, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %380, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = atomicrmw add i32* %383, i32 -1 acq_rel
  %385 = icmp eq i32 %384, 1
  br i1 %385, label %386, label %392

386:                                              ; preds = %382
  %387 = bitcast %class.SkTypeface* %380 to %class.SkRefCntBase*
  %388 = bitcast %class.SkTypeface* %380 to void (%class.SkRefCntBase*)***
  %389 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %388, align 8
  %390 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %389, i64 2
  %391 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %390, align 8
  call void %391(%class.SkRefCntBase* nonnull %387) #18
  br label %392

392:                                              ; preds = %386, %382, %379
  %393 = load %class.SkPathEffect*, %class.SkPathEffect** %150, align 8
  %394 = icmp eq %class.SkPathEffect* %393, null
  br i1 %394, label %405, label %395

395:                                              ; preds = %392
  %396 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %393, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %397 = atomicrmw add i32* %396, i32 -1 acq_rel
  %398 = icmp eq i32 %397, 1
  br i1 %398, label %399, label %405

399:                                              ; preds = %395
  %400 = bitcast %class.SkPathEffect* %393 to %class.SkRefCntBase*
  %401 = bitcast %class.SkPathEffect* %393 to void (%class.SkRefCntBase*)***
  %402 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %401, align 8
  %403 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %402, i64 2
  %404 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %403, align 8
  call void %404(%class.SkRefCntBase* nonnull %400) #18
  br label %405

405:                                              ; preds = %399, %395, %392
  %406 = load %class.SkMaskFilter*, %class.SkMaskFilter** %142, align 8
  %407 = icmp eq %class.SkMaskFilter* %406, null
  br i1 %407, label %418, label %408

408:                                              ; preds = %405
  %409 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %406, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = atomicrmw add i32* %409, i32 -1 acq_rel
  %411 = icmp eq i32 %410, 1
  br i1 %411, label %412, label %418

412:                                              ; preds = %408
  %413 = bitcast %class.SkMaskFilter* %406 to %class.SkRefCntBase*
  %414 = bitcast %class.SkMaskFilter* %406 to void (%class.SkRefCntBase*)***
  %415 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %414, align 8
  %416 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %415, i64 2
  %417 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %416, align 8
  call void %417(%class.SkRefCntBase* nonnull %413) #18
  br label %418

418:                                              ; preds = %412, %408, %405
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %140) #18
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %127)
  %419 = load i64, i64* %189, align 8
  %420 = and i64 %419, 1
  %421 = icmp eq i64 %420, 0
  br i1 %421, label %425, label %422

422:                                              ; preds = %418
  %423 = bitcast i8* %187 to i8**
  %424 = load i8*, i8** %423, align 8
  call void @_Z7sk_freePv(i8* %424) #18
  br label %425

425:                                              ; preds = %422, %418
  %426 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 2, i32 0
  %427 = load %class.GrTextStrike*, %class.GrTextStrike** %426, align 8
  %428 = icmp eq %class.GrTextStrike* %427, null
  br i1 %428, label %447, label %429

429:                                              ; preds = %425
  %430 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %427, i64 0, i32 0
  %431 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %427, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = atomicrmw add i32* %431, i32 -1 acq_rel
  %433 = icmp eq i32 %432, 1
  br i1 %433, label %434, label %447

434:                                              ; preds = %429
  %435 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %430, i64 38
  %436 = bitcast %class.SkNVRefCnt.302* %435 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %436) #18
  %437 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %430, i64 6
  %438 = bitcast %class.SkNVRefCnt.302* %437 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %438) #18
  %439 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %430, i64 4
  %440 = bitcast %class.SkNVRefCnt.302* %439 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %441 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %440, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %440, align 8
  %442 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %441, null
  br i1 %442, label %445, label %443

443:                                              ; preds = %434
  %444 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %441 to i8*
  call void @_ZdaPv(i8* %444) #20
  br label %445

445:                                              ; preds = %443, %434
  %446 = bitcast %class.GrTextStrike* %427 to i8*
  call void @_ZdlPv(i8* %446) #20
  br label %447

447:                                              ; preds = %425, %429, %445
  %448 = load %class.SkTypeface*, %class.SkTypeface** %159, align 8
  %449 = icmp eq %class.SkTypeface* %448, null
  br i1 %449, label %460, label %450

450:                                              ; preds = %447
  %451 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %448, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %452 = atomicrmw add i32* %451, i32 -1 acq_rel
  %453 = icmp eq i32 %452, 1
  br i1 %453, label %454, label %460

454:                                              ; preds = %450
  %455 = bitcast %class.SkTypeface* %448 to %class.SkRefCntBase*
  %456 = bitcast %class.SkTypeface* %448 to void (%class.SkRefCntBase*)***
  %457 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %456, align 8
  %458 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %457, i64 2
  %459 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %458, align 8
  call void %459(%class.SkRefCntBase* nonnull %455) #18
  br label %460

460:                                              ; preds = %454, %450, %447
  %461 = load %class.SkPathEffect*, %class.SkPathEffect** %151, align 8
  %462 = icmp eq %class.SkPathEffect* %461, null
  br i1 %462, label %473, label %463

463:                                              ; preds = %460
  %464 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %461, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %465 = atomicrmw add i32* %464, i32 -1 acq_rel
  %466 = icmp eq i32 %465, 1
  br i1 %466, label %467, label %473

467:                                              ; preds = %463
  %468 = bitcast %class.SkPathEffect* %461 to %class.SkRefCntBase*
  %469 = bitcast %class.SkPathEffect* %461 to void (%class.SkRefCntBase*)***
  %470 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %469, align 8
  %471 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %470, i64 2
  %472 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %471, align 8
  call void %472(%class.SkRefCntBase* nonnull %468) #18
  br label %473

473:                                              ; preds = %467, %463, %460
  %474 = load %class.SkMaskFilter*, %class.SkMaskFilter** %143, align 8
  %475 = icmp eq %class.SkMaskFilter* %474, null
  br i1 %475, label %486, label %476

476:                                              ; preds = %473
  %477 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %474, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %478 = atomicrmw add i32* %477, i32 -1 acq_rel
  %479 = icmp eq i32 %478, 1
  br i1 %479, label %480, label %486

480:                                              ; preds = %476
  %481 = bitcast %class.SkMaskFilter* %474 to %class.SkRefCntBase*
  %482 = bitcast %class.SkMaskFilter* %474 to void (%class.SkRefCntBase*)***
  %483 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %482, align 8
  %484 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %483, i64 2
  %485 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %484, align 8
  call void %485(%class.SkRefCntBase* nonnull %481) #18
  br label %486

486:                                              ; preds = %473, %476, %480
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %141) #18
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %124) #18
  %487 = bitcast i8* %138 to %class.GrSubRun*
  ret %class.GrSubRun* %487
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN22GrSubRunNoCachePainterC2EP20GrSurfaceDrawContextP17GrSubRunAllocatorPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaint(%class.GrSubRunNoCachePainter* nocapture, %class.GrSurfaceDrawContext*, %class.GrSubRunAllocator*, %class.GrClip*, %class.SkMatrixProvider* dereferenceable(112), %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72)) unnamed_addr #11 align 2 {
  %8 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV22GrSubRunNoCachePainter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 1
  store %class.GrSurfaceDrawContext* %1, %class.GrSurfaceDrawContext** %9, align 8
  %10 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 2
  store %class.GrSubRunAllocator* %2, %class.GrSubRunAllocator** %10, align 8
  %11 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 3
  store %class.GrClip* %3, %class.GrClip** %11, align 8
  %12 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 4
  store %class.SkMatrixProvider* %4, %class.SkMatrixProvider** %12, align 8
  %13 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 5
  store %class.SkGlyphRunList* %5, %class.SkGlyphRunList** %13, align 8
  %14 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 6
  store %class.SkPaint* %6, %class.SkPaint** %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22GrSubRunNoCachePainter18processDeviceMasksERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec(%class.GrSubRunNoCachePainter* nocapture readonly, %class.SkZip.59* nocapture readonly dereferenceable(24), %class.SkStrikeSpec* dereferenceable(160)) unnamed_addr #4 align 2 {
  %4 = alloca %"class.std::__1::function.268", align 8
  %5 = alloca %"class.std::__1::function.268", align 8
  %6 = alloca %class.SkZip.59, align 8
  %7 = alloca %class.SkZip.59, align 8
  %8 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %160, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %12, align 8
  %14 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %13, i64 0, i32 0, i32 0
  %15 = load %class.SkGlyph*, %class.SkGlyph** %14, align 8
  %16 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %15, i64 0, i32 8
  %17 = load i8, i8* %16, align 8
  %18 = icmp ult i8 %17, 6
  br i1 %18, label %20, label %19

19:                                               ; preds = %11
  tail call void @llvm.trap() #18
  unreachable

20:                                               ; preds = %11
  %21 = sext i8 %17 to i64
  %22 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN22GrSubRunNoCachePainter18processSourceMasksERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec.12, i64 0, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = icmp ugt i64 %9, 1
  br i1 %24, label %25, label %42

25:                                               ; preds = %20
  %26 = bitcast %class.SkZip.59* %6 to i8*
  %27 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %6, i64 0, i32 0, i32 0, i32 1, i32 0
  %29 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %6, i64 0, i32 1
  %30 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 2
  %32 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 3
  %33 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 4
  %34 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 5
  %35 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 6
  %36 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 1
  %37 = bitcast %"class.std::__1::function.268"* %5 to i8*
  %38 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %5, i64 0, i32 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %5, i64 0, i32 0, i32 2
  %40 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %5, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %class.SkZip.59* %6 to i8*
  br label %99

42:                                               ; preds = %154, %20
  %43 = phi i64 [ 0, %20 ], [ %156, %154 ]
  %44 = phi i32 [ %23, %20 ], [ %157, %154 ]
  %45 = phi i64 [ 1, %20 ], [ %155, %154 ]
  %46 = bitcast %class.SkZip.59* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #18
  %47 = sub i64 %45, %43
  %48 = icmp eq i64 %47, 0
  %49 = bitcast %class.SkZip.59* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  br i1 %48, label %50, label %51

50:                                               ; preds = %42
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 24, i1 false) #18, !alias.scope !15
  br label %60

51:                                               ; preds = %42
  %52 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %7, i64 0, i32 1
  %54 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %7, i64 0, i32 0, i32 0, i32 1, i32 0
  %55 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %12, align 8, !noalias !15
  %56 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %55, i64 %43
  %57 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %58 = load %struct.SkPoint*, %struct.SkPoint** %57, align 8, !noalias !15
  %59 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %58, i64 %43
  store %class.SkGlyphVariant* %56, %class.SkGlyphVariant** %52, align 8, !alias.scope !15
  store %struct.SkPoint* %59, %struct.SkPoint** %54, align 8, !alias.scope !15
  store i64 %47, i64* %53, align 8, !alias.scope !15
  br label %60

60:                                               ; preds = %50, %51
  %61 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 2
  %62 = load %class.GrSubRunAllocator*, %class.GrSubRunAllocator** %61, align 8
  %63 = call fastcc %class.GrAtlasSubRun* @_ZN12_GLOBAL__N_123DirectMaskSubRunNoCache4MakeERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec12GrMaskFormatP17GrSubRunAllocator(%class.SkZip.59* nonnull dereferenceable(24) %7, %class.SkStrikeSpec* dereferenceable(160) %2, i32 %44, %class.GrSubRunAllocator* %62)
  %64 = icmp eq %class.GrAtlasSubRun* %63, null
  br i1 %64, label %98, label %65

65:                                               ; preds = %60
  %66 = ptrtoint %class.GrAtlasSubRun* %63 to i64
  %67 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 3
  %68 = load %class.GrClip*, %class.GrClip** %67, align 8
  %69 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 4
  %70 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %69, align 8
  %71 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 5
  %72 = load %class.SkGlyphRunList*, %class.SkGlyphRunList** %71, align 8
  %73 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 6
  %74 = load %class.SkPaint*, %class.SkPaint** %73, align 8
  %75 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 1
  %76 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %75, align 8
  %77 = bitcast %class.GrAtlasSubRun* %63 to { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)***
  %78 = load { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)**, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*** %77, align 8
  %79 = getelementptr inbounds { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)** %78, i64 4
  %80 = load { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)** %79, align 8
  %81 = call { %class.GrClip*, %class.GrOp* } %80(%class.GrAtlasSubRun* nonnull %63, %class.GrClip* %68, %class.SkMatrixProvider* dereferenceable(112) %70, %class.SkGlyphRunList* dereferenceable(48) %72, %class.SkPaint* dereferenceable(72) %74, %class.GrSurfaceDrawContext* %76, i64 %66) #18
  %82 = extractvalue { %class.GrClip*, %class.GrOp* } %81, 1
  %83 = icmp eq %class.GrOp* %82, null
  br i1 %83, label %98, label %84

84:                                               ; preds = %65
  %85 = extractvalue { %class.GrClip*, %class.GrOp* } %81, 0
  %86 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %75, align 8
  %87 = bitcast %"class.std::__1::function.268"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %87) #18
  %88 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %4, i64 0, i32 0, i32 1, i32 0
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j, void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)** %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %4, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %89, align 8
  call void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext* %86, %class.GrClip* %85, %class.GrOp* nonnull %82, %"class.std::__1::function.268"* nonnull dereferenceable(32) %4) #18
  %90 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %90, i64 0, i32 1
  %92 = load void (i8*)*, void (i8*)** %91, align 8
  %93 = icmp eq void (i8*)* %92, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %4, i64 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void %92(i8* %96) #18
  br label %97

97:                                               ; preds = %94, %84
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %87) #18
  br label %98

98:                                               ; preds = %60, %65, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #18
  br label %160

99:                                               ; preds = %25, %154
  %100 = phi i64 [ %9, %25 ], [ %155, %154 ]
  %101 = phi i32 [ %23, %25 ], [ %157, %154 ]
  %102 = phi i64 [ 1, %25 ], [ %158, %154 ]
  %103 = phi i64 [ 0, %25 ], [ %156, %154 ]
  %104 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %13, i64 %102, i32 0, i32 0
  %105 = load %class.SkGlyph*, %class.SkGlyph** %104, align 8
  %106 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %105, i64 0, i32 8
  %107 = load i8, i8* %106, align 8
  %108 = icmp ult i8 %107, 6
  br i1 %108, label %110, label %109

109:                                              ; preds = %99
  call void @llvm.trap() #18
  unreachable

110:                                              ; preds = %99
  %111 = sext i8 %107 to i64
  %112 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN22GrSubRunNoCachePainter18processSourceMasksERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec.12, i64 0, i64 %111
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %101, %113
  br i1 %114, label %154, label %115

115:                                              ; preds = %110
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #18
  %116 = sub i64 %102, %103
  %117 = icmp eq i64 %116, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #18, !alias.scope !18
  br label %124

119:                                              ; preds = %115
  %120 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %12, align 8, !noalias !18
  %121 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %120, i64 %103
  %122 = load %struct.SkPoint*, %struct.SkPoint** %30, align 8, !noalias !18
  %123 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %122, i64 %103
  store %class.SkGlyphVariant* %121, %class.SkGlyphVariant** %27, align 8, !alias.scope !18
  store %struct.SkPoint* %123, %struct.SkPoint** %28, align 8, !alias.scope !18
  store i64 %116, i64* %29, align 8, !alias.scope !18
  br label %124

124:                                              ; preds = %118, %119
  %125 = load %class.GrSubRunAllocator*, %class.GrSubRunAllocator** %31, align 8
  %126 = call fastcc %class.GrAtlasSubRun* @_ZN12_GLOBAL__N_123DirectMaskSubRunNoCache4MakeERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec12GrMaskFormatP17GrSubRunAllocator(%class.SkZip.59* nonnull dereferenceable(24) %6, %class.SkStrikeSpec* dereferenceable(160) %2, i32 %101, %class.GrSubRunAllocator* %125)
  %127 = icmp eq %class.GrAtlasSubRun* %126, null
  br i1 %127, label %152, label %128

128:                                              ; preds = %124
  %129 = ptrtoint %class.GrAtlasSubRun* %126 to i64
  %130 = load %class.GrClip*, %class.GrClip** %32, align 8
  %131 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %33, align 8
  %132 = load %class.SkGlyphRunList*, %class.SkGlyphRunList** %34, align 8
  %133 = load %class.SkPaint*, %class.SkPaint** %35, align 8
  %134 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %36, align 8
  %135 = bitcast %class.GrAtlasSubRun* %126 to { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)***
  %136 = load { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)**, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*** %135, align 8
  %137 = getelementptr inbounds { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)** %136, i64 4
  %138 = load { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)** %137, align 8
  %139 = call { %class.GrClip*, %class.GrOp* } %138(%class.GrAtlasSubRun* nonnull %126, %class.GrClip* %130, %class.SkMatrixProvider* dereferenceable(112) %131, %class.SkGlyphRunList* dereferenceable(48) %132, %class.SkPaint* dereferenceable(72) %133, %class.GrSurfaceDrawContext* %134, i64 %129) #18
  %140 = extractvalue { %class.GrClip*, %class.GrOp* } %139, 1
  %141 = icmp eq %class.GrOp* %140, null
  br i1 %141, label %152, label %142

142:                                              ; preds = %128
  %143 = extractvalue { %class.GrClip*, %class.GrOp* } %139, 0
  %144 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #18
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j, void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)** %38, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %39, align 8
  call void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext* %144, %class.GrClip* %143, %class.GrOp* nonnull %140, %"class.std::__1::function.268"* nonnull dereferenceable(32) %5) #18
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %39, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %142
  %150 = load i8*, i8** %40, align 8
  call void %147(i8* %150) #18
  br label %151

151:                                              ; preds = %149, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #18
  br label %152

152:                                              ; preds = %124, %128, %151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #18
  %153 = load i64, i64* %8, align 8
  br label %154

154:                                              ; preds = %110, %152
  %155 = phi i64 [ %153, %152 ], [ %100, %110 ]
  %156 = phi i64 [ %102, %152 ], [ %103, %110 ]
  %157 = phi i32 [ %113, %152 ], [ %101, %110 ]
  %158 = add nuw i64 %102, 1
  %159 = icmp ult i64 %158, %155
  br i1 %159, label %99, label %42

160:                                              ; preds = %3, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22GrSubRunNoCachePainter4drawENSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE(%class.GrSubRunNoCachePainter* nocapture readonly, %class.GrAtlasSubRun*) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.std::__1::function.268", align 8
  %4 = icmp eq %class.GrAtlasSubRun* %1, null
  br i1 %4, label %38, label %5

5:                                                ; preds = %2
  %6 = ptrtoint %class.GrAtlasSubRun* %1 to i64
  %7 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 3
  %8 = load %class.GrClip*, %class.GrClip** %7, align 8
  %9 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 4
  %10 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %9, align 8
  %11 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 5
  %12 = load %class.SkGlyphRunList*, %class.SkGlyphRunList** %11, align 8
  %13 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 6
  %14 = load %class.SkPaint*, %class.SkPaint** %13, align 8
  %15 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 1
  %16 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %15, align 8
  %17 = bitcast %class.GrAtlasSubRun* %1 to { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)***
  %18 = load { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)**, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*** %17, align 8
  %19 = getelementptr inbounds { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)** %18, i64 4
  %20 = load { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)** %19, align 8
  %21 = tail call { %class.GrClip*, %class.GrOp* } %20(%class.GrAtlasSubRun* nonnull %1, %class.GrClip* %8, %class.SkMatrixProvider* dereferenceable(112) %10, %class.SkGlyphRunList* dereferenceable(48) %12, %class.SkPaint* dereferenceable(72) %14, %class.GrSurfaceDrawContext* %16, i64 %6) #18
  %22 = extractvalue { %class.GrClip*, %class.GrOp* } %21, 1
  %23 = icmp eq %class.GrOp* %22, null
  br i1 %23, label %38, label %24

24:                                               ; preds = %5
  %25 = extractvalue { %class.GrClip*, %class.GrOp* } %21, 0
  %26 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %15, align 8
  %27 = bitcast %"class.std::__1::function.268"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #18
  %28 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %3, i64 0, i32 0, i32 1, i32 0
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j, void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %3, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %29, align 8
  call void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext* %26, %class.GrClip* %25, %class.GrOp* nonnull %22, %"class.std::__1::function.268"* nonnull dereferenceable(32) %3) #18
  %30 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %30, i64 0, i32 1
  %32 = load void (i8*)*, void (i8*)** %31, align 8
  %33 = icmp eq void (i8*)* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %3, i64 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void %32(i8* %36) #18
  br label %37

37:                                               ; preds = %34, %24
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #18
  br label %38

38:                                               ; preds = %2, %5, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %class.GrAtlasSubRun* @_ZN12_GLOBAL__N_123DirectMaskSubRunNoCache4MakeERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec12GrMaskFormatP17GrSubRunAllocator(%class.SkZip.59* dereferenceable(24), %class.SkStrikeSpec* dereferenceable(160), i32, %class.GrSubRunAllocator*) unnamed_addr #4 align 2 {
  %5 = alloca %"class.(anonymous namespace)::GlyphVector", align 8
  %6 = alloca %"class.(anonymous namespace)::GlyphVector", align 8
  %7 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %3, i64 0, i32 0
  %11 = icmp ult i32 %9, 536869887
  br i1 %11, label %13, label %12

12:                                               ; preds = %4
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #19
  unreachable

13:                                               ; preds = %4
  %14 = icmp eq i32 %9, 0
  %15 = shl i32 %9, 2
  %16 = select i1 %14, i32 1, i32 %15
  %17 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %3, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, -4
  store i32 %19, i32* %17, align 8
  %20 = icmp slt i32 %19, %16
  br i1 %20, label %21, label %23

21:                                               ; preds = %13
  tail call void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes* %10, i32 %16, i32 4) #18
  %22 = load i32, i32* %17, align 8
  br label %23

23:                                               ; preds = %13, %21
  %24 = phi i32 [ %22, %21 ], [ %19, %13 ]
  %25 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %3, i64 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = sext i32 %24 to i64
  %28 = sub nsw i64 0, %27
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = sub nsw i32 %24, %16
  store i32 %30, i32* %17, align 8
  %31 = bitcast i8* %29 to %"struct.skvx::Vec"*
  %32 = load i64, i64* %7, align 8
  %33 = trunc i64 %32 to i32
  %34 = shl i32 %33, 3
  %35 = tail call i8* @_ZN17GrSubRunAllocator12alignedBytesEii(%class.GrSubRunAllocator* %3, i32 %34, i32 8) #18
  %36 = bitcast i8* %35 to %"union.(anonymous namespace)::GlyphVector::Variant"*
  %37 = load i64, i64* %7, align 8, !noalias !21
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %534, label %39

39:                                               ; preds = %23
  %40 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %41 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %44

42:                                               ; preds = %130
  %43 = icmp eq i64 %135, 0
  br i1 %43, label %534, label %138

44:                                               ; preds = %39, %130
  %45 = phi i64 [ 0, %39 ], [ %135, %130 ]
  %46 = phi i16 [ 32767, %39 ], [ %134, %130 ]
  %47 = phi i16 [ 32767, %39 ], [ %133, %130 ]
  %48 = phi i16 [ 32767, %39 ], [ %132, %130 ]
  %49 = phi i16 [ 32767, %39 ], [ %131, %130 ]
  %50 = phi i64 [ 0, %39 ], [ %136, %130 ]
  %51 = load %struct.SkPoint*, %struct.SkPoint** %40, align 8
  %52 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %51, i64 %50, i32 0
  %53 = load float, float* %52, align 4
  %54 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %51, i64 %50, i32 1
  %55 = load float, float* %54, align 4
  %56 = fcmp ogt float %53, -3.251100e+04
  %57 = fcmp olt float %53, 3.251100e+04
  %58 = and i1 %56, %57
  %59 = fcmp ogt float %55, -3.251100e+04
  %60 = and i1 %58, %59
  %61 = fcmp olt float %55, 3.251100e+04
  %62 = and i1 %61, %60
  br i1 %62, label %63, label %130

63:                                               ; preds = %44
  %64 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %41, align 8
  %65 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %64, i64 %50, i32 0, i32 0
  %66 = load %class.SkGlyph*, %class.SkGlyph** %65, align 8
  %67 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %66, i64 0, i32 3
  %68 = load i16, i16* %67, align 2
  %69 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %66, i64 0, i32 2
  %70 = load i16, i16* %69, align 4
  %71 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %66, i64 0, i32 0
  %72 = load i16, i16* %71, align 8
  %73 = add i16 %68, %72
  %74 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %66, i64 0, i32 1
  %75 = load i16, i16* %74, align 2
  %76 = add i16 %70, %75
  %77 = sub i16 0, %73
  %78 = sub i16 0, %76
  %79 = fadd float %53, 5.000000e-01
  %80 = tail call float @llvm.floor.f32(float %79)
  %81 = fcmp olt float %80, 0x41DFFFFFE0000000
  %82 = select i1 %81, float %80, float 0x41DFFFFFE0000000
  %83 = fcmp ogt float %82, 0xC1DFFFFFE0000000
  %84 = select i1 %83, float %82, float 0xC1DFFFFFE0000000
  %85 = fptosi float %84 to i32
  %86 = trunc i32 %85 to i16
  %87 = fadd float %55, 5.000000e-01
  %88 = tail call float @llvm.floor.f32(float %87)
  %89 = fcmp olt float %88, 0x41DFFFFFE0000000
  %90 = select i1 %89, float %88, float 0x41DFFFFFE0000000
  %91 = fcmp ogt float %90, 0xC1DFFFFFE0000000
  %92 = select i1 %91, float %90, float 0xC1DFFFFFE0000000
  %93 = fptosi float %92 to i32
  %94 = trunc i32 %93 to i16
  %95 = sub i16 0, %86
  %96 = sub i16 0, %94
  %97 = insertelement <4 x i16> undef, i16 %86, i32 0
  %98 = insertelement <4 x i16> %97, i16 %94, i32 1
  %99 = insertelement <4 x i16> undef, i16 %95, i32 2
  %100 = insertelement <4 x i16> %99, i16 %96, i32 3
  %101 = shufflevector <4 x i16> %98, <4 x i16> %100, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %102 = insertelement <4 x i16> undef, i16 %68, i32 0
  %103 = insertelement <4 x i16> %102, i16 %70, i32 1
  %104 = insertelement <4 x i16> %103, i16 %77, i32 2
  %105 = insertelement <4 x i16> %104, i16 %78, i32 3
  %106 = add <4 x i16> %105, %101
  %107 = extractelement <4 x i16> %106, i32 0
  %108 = extractelement <4 x i16> %106, i32 1
  %109 = insertelement <4 x i16> undef, i16 %49, i32 0
  %110 = insertelement <4 x i16> %109, i16 %48, i32 1
  %111 = insertelement <4 x i16> %110, i16 %47, i32 2
  %112 = insertelement <4 x i16> %111, i16 %46, i32 3
  %113 = icmp slt <4 x i16> %106, %112
  %114 = select <4 x i1> %113, <4 x i16> %106, <4 x i16> %112
  %115 = extractelement <4 x i16> %114, i32 0
  %116 = extractelement <4 x i16> %114, i32 1
  %117 = extractelement <4 x i16> %114, i32 2
  %118 = extractelement <4 x i16> %114, i32 3
  %119 = zext i16 %108 to i32
  %120 = shl nuw i32 %119, 16
  %121 = zext i16 %107 to i32
  %122 = or i32 %120, %121
  %123 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %31, i64 %45
  %124 = bitcast %"struct.skvx::Vec"* %123 to i32*
  store i32 %122, i32* %124, align 4
  %125 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %66, i64 0, i32 10, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %36, i64 %45
  %128 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"* %127 to i32*
  store i32 %126, i32* %128, align 8
  %129 = add i64 %45, 1
  br label %130

130:                                              ; preds = %63, %44
  %131 = phi i16 [ %115, %63 ], [ %49, %44 ]
  %132 = phi i16 [ %116, %63 ], [ %48, %44 ]
  %133 = phi i16 [ %117, %63 ], [ %47, %44 ]
  %134 = phi i16 [ %118, %63 ], [ %46, %44 ]
  %135 = phi i64 [ %129, %63 ], [ %45, %44 ]
  %136 = add nuw i64 %50, 1
  %137 = icmp eq i64 %136, %37
  br i1 %137, label %42, label %44

138:                                              ; preds = %42
  %139 = ptrtoint i8* %29 to i64
  %140 = sitofp i16 %131 to float
  %141 = sitofp i16 %132 to float
  %142 = sext i16 %133 to i32
  %143 = sub nsw i32 0, %142
  %144 = sitofp i32 %143 to float
  %145 = sext i16 %134 to i32
  %146 = sub nsw i32 0, %145
  %147 = sitofp i32 %146 to float
  %148 = insertelement <2 x float> undef, float %140, i32 0
  %149 = insertelement <2 x float> %148, float %141, i32 1
  %150 = insertelement <2 x float> undef, float %144, i32 0
  %151 = insertelement <2 x float> %150, float %147, i32 1
  %152 = bitcast %"class.(anonymous namespace)::GlyphVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %152) #18
  %153 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 0
  %154 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 0
  call void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor* nonnull %153, %class.SkAutoDescriptor* dereferenceable(128) %154) #18
  %155 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 1, i32 0
  %156 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 1, i32 0
  %157 = load %class.SkMaskFilter*, %class.SkMaskFilter** %156, align 8
  %158 = icmp eq %class.SkMaskFilter* %157, null
  br i1 %158, label %162, label %159

159:                                              ; preds = %138
  %160 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %157, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw add i32* %160, i32 1 monotonic
  br label %162

162:                                              ; preds = %159, %138
  store %class.SkMaskFilter* %157, %class.SkMaskFilter** %155, align 8
  %163 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 2, i32 0
  %164 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 2, i32 0
  %165 = load %class.SkPathEffect*, %class.SkPathEffect** %164, align 8
  %166 = icmp eq %class.SkPathEffect* %165, null
  br i1 %166, label %170, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %165, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = atomicrmw add i32* %168, i32 1 monotonic
  br label %170

170:                                              ; preds = %167, %162
  store %class.SkPathEffect* %165, %class.SkPathEffect** %163, align 8
  %171 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 3, i32 0
  %172 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 3, i32 0
  %173 = load %class.SkTypeface*, %class.SkTypeface** %172, align 8
  %174 = icmp eq %class.SkTypeface* %173, null
  br i1 %174, label %178, label %175

175:                                              ; preds = %170
  %176 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %173, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = atomicrmw add i32* %176, i32 1 monotonic
  br label %178

178:                                              ; preds = %170, %175
  store %class.SkTypeface* %173, %class.SkTypeface** %171, align 8
  %179 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 4
  %180 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 4
  %181 = bitcast float* %180 to i32*
  %182 = load i32, i32* %181, align 8
  %183 = bitcast float* %179 to i32*
  store i32 %182, i32* %183, align 8
  %184 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 1, i32 0
  %185 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"** %184 to i8**
  store i8* %35, i8** %185, align 8
  %186 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 1, i32 1
  store i64 %135, i64* %186, align 8
  %187 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 2, i32 0
  %188 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i64 32
  %189 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i64 0
  %190 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i64 40
  %191 = bitcast i8* %190 to i64*
  %192 = bitcast i8* %188 to i8**
  %193 = bitcast %class.GrTextStrike** %187 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %193, i8 0, i64 16, i1 false) #18
  store i8* %189, i8** %192, align 8
  store i64 34359738368, i64* %191, align 8
  %194 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 4, i32 1, i64 0
  %195 = bitcast i32* %194 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 16, i1 false) #18
  %196 = bitcast %"class.(anonymous namespace)::GlyphVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %196)
  %197 = load i32, i32* %17, align 8
  %198 = and i32 %197, -8
  store i32 %198, i32* %17, align 8
  %199 = icmp slt i32 %198, 416
  br i1 %199, label %200, label %202

200:                                              ; preds = %178
  call void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes* %10, i32 416, i32 8) #18
  %201 = load i32, i32* %17, align 8
  br label %202

202:                                              ; preds = %200, %178
  %203 = phi i32 [ %201, %200 ], [ %198, %178 ]
  %204 = load i8*, i8** %25, align 8
  %205 = sext i32 %203 to i64
  %206 = sub nsw i64 0, %205
  %207 = getelementptr inbounds i8, i8* %204, i64 %206
  %208 = add nsw i32 %203, -416
  store i32 %208, i32* %17, align 8
  %209 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 0, i32 0
  call void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor* nonnull %209, %class.SkAutoDescriptor* nonnull dereferenceable(128) %153) #18
  %210 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 0, i32 1, i32 0
  %211 = load %class.SkMaskFilter*, %class.SkMaskFilter** %155, align 8
  %212 = icmp eq %class.SkMaskFilter* %211, null
  br i1 %212, label %216, label %213

213:                                              ; preds = %202
  %214 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %211, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = atomicrmw add i32* %214, i32 1 monotonic
  br label %216

216:                                              ; preds = %213, %202
  store %class.SkMaskFilter* %211, %class.SkMaskFilter** %210, align 8
  %217 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 0, i32 2, i32 0
  %218 = load %class.SkPathEffect*, %class.SkPathEffect** %163, align 8
  %219 = icmp eq %class.SkPathEffect* %218, null
  br i1 %219, label %223, label %220

220:                                              ; preds = %216
  %221 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %218, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = atomicrmw add i32* %221, i32 1 monotonic
  br label %223

223:                                              ; preds = %220, %216
  store %class.SkPathEffect* %218, %class.SkPathEffect** %217, align 8
  %224 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 0, i32 3, i32 0
  %225 = load %class.SkTypeface*, %class.SkTypeface** %171, align 8
  %226 = icmp eq %class.SkTypeface* %225, null
  br i1 %226, label %230, label %227

227:                                              ; preds = %223
  %228 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %225, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = atomicrmw add i32* %228, i32 1 monotonic
  br label %230

230:                                              ; preds = %227, %223
  store %class.SkTypeface* %225, %class.SkTypeface** %224, align 8
  %231 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 0, i32 4
  %232 = load i32, i32* %183, align 8
  %233 = bitcast float* %231 to i32*
  store i32 %232, i32* %233, align 8
  %234 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 1
  %235 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 1
  %236 = bitcast %class.SkSpan.300* %234 to i8*
  %237 = bitcast %class.SkSpan.300* %235 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* align 8 %237, i64 16, i1 false) #18
  %238 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 2
  %239 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 2
  %240 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %239, i64 0, i32 0
  %241 = bitcast %class.sk_sp.301* %239 to <2 x i64>*
  %242 = load <2 x i64>, <2 x i64>* %241, align 8
  store %class.GrTextStrike* null, %class.GrTextStrike** %240, align 8
  %243 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 3
  %244 = bitcast %class.sk_sp.301* %238 to <2 x i64>*
  store <2 x i64> %242, <2 x i64>* %244, align 8
  %245 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i64 32
  %246 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i64 0
  %247 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i64 40
  %248 = bitcast i8* %247 to i64*
  %249 = bitcast i8* %245 to i8**
  store i8* %246, i8** %249, align 8
  store i64 34359738368, i64* %248, align 8
  %250 = load i64, i64* %191, align 8
  %251 = lshr i64 %250, 1
  %252 = and i64 %251, 2147483647
  %253 = icmp ult i64 %252, 5
  br i1 %253, label %276, label %254

254:                                              ; preds = %230
  %255 = shl nuw i64 %252, 33
  store i64 %255, i64* %248, align 8
  %256 = call i8* @_Z15sk_malloc_throwmm(i64 %252, i64 8) #18
  %257 = load i64, i64* %248, align 8
  %258 = shl i64 %257, 2
  %259 = and i64 %258, 17179869176
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %264, label %261

261:                                              ; preds = %254
  %262 = load i8*, i8** %249, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %256, i8* align 1 %262, i64 %259, i1 false) #18
  %263 = load i64, i64* %248, align 8
  br label %264

264:                                              ; preds = %261, %254
  %265 = phi i64 [ %257, %254 ], [ %263, %261 ]
  %266 = and i64 %265, 1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %271, label %268

268:                                              ; preds = %264
  %269 = load i8*, i8** %249, align 8
  call void @_Z7sk_freePv(i8* %269) #18
  %270 = load i64, i64* %248, align 8
  br label %271

271:                                              ; preds = %268, %264
  %272 = phi i64 [ %270, %268 ], [ %265, %264 ]
  store i8* %256, i8** %249, align 8
  %273 = and i64 %272, -4294967298
  %274 = or i64 %273, 1
  store i64 %274, i64* %248, align 8
  %275 = load i64, i64* %191, align 8
  br label %276

276:                                              ; preds = %271, %230
  %277 = phi i8* [ %246, %230 ], [ %256, %271 ]
  %278 = phi i64 [ 34359738368, %230 ], [ %274, %271 ]
  %279 = phi i64 [ %250, %230 ], [ %275, %271 ]
  %280 = and i64 %279, 4294967294
  %281 = and i64 %278, -4294967295
  %282 = or i64 %280, %281
  store i64 %282, i64* %248, align 8
  %283 = bitcast i8* %188 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %284 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %283, align 8
  %285 = icmp eq i64 %280, 0
  br i1 %285, label %307, label %286

286:                                              ; preds = %276
  %287 = bitcast i8* %245 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %288 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %284 to i64*
  %289 = bitcast i8* %277 to i64*
  %290 = load i64, i64* %288, align 4
  store i64 %290, i64* %289, align 4
  %291 = load i64, i64* %248, align 8
  %292 = and i64 %291, 4294967292
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %307, label %294

294:                                              ; preds = %286, %294
  %295 = phi i64 [ %302, %294 ], [ 1, %286 ]
  %296 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %287, align 8
  %297 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %296, i64 %295
  %298 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %284, i64 %295
  %299 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %298 to i64*
  %300 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %297 to i64*
  %301 = load i64, i64* %299, align 4
  store i64 %301, i64* %300, align 4
  %302 = add nuw nsw i64 %295, 1
  %303 = load i64, i64* %248, align 8
  %304 = lshr i64 %303, 1
  %305 = and i64 %304, 2147483647
  %306 = icmp ult i64 %302, %305
  br i1 %306, label %294, label %307

307:                                              ; preds = %294, %286, %276
  %308 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 4, i32 1, i64 0
  %309 = bitcast i32* %308 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %309, i8* align 8 %195, i64 16, i1 false) #18
  %310 = bitcast i8* %207 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_123DirectMaskSubRunNoCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %310, align 8
  %311 = getelementptr inbounds i8, i8* %207, i64 8
  %312 = bitcast i8* %311 to i32*
  store i32 %2, i32* %312, align 8
  %313 = getelementptr inbounds i8, i8* %207, i64 12
  %314 = bitcast i8* %313 to <2 x float>*
  store <2 x float> %149, <2 x float>* %314, align 4
  %315 = getelementptr inbounds i8, i8* %207, i64 20
  %316 = bitcast i8* %315 to <2 x float>*
  store <2 x float> %151, <2 x float>* %316, align 4
  %317 = getelementptr inbounds i8, i8* %207, i64 32
  %318 = bitcast i8* %317 to i64*
  store i64 %139, i64* %318, align 8
  %319 = getelementptr inbounds i8, i8* %207, i64 40
  %320 = bitcast i8* %319 to i64*
  store i64 %135, i64* %320, align 8
  %321 = getelementptr inbounds i8, i8* %207, i64 160
  %322 = bitcast i8* %321 to %"class.(anonymous namespace)::GlyphVector"*
  %323 = bitcast i8* %321 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor* %323, %class.SkAutoDescriptor* nonnull dereferenceable(128) %209) #18
  %324 = getelementptr inbounds i8, i8* %207, i64 288
  %325 = bitcast i8* %324 to %class.SkMaskFilter**
  %326 = load %class.SkMaskFilter*, %class.SkMaskFilter** %210, align 8
  %327 = icmp eq %class.SkMaskFilter* %326, null
  br i1 %327, label %331, label %328

328:                                              ; preds = %307
  %329 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %326, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = atomicrmw add i32* %329, i32 1 monotonic
  br label %331

331:                                              ; preds = %328, %307
  store %class.SkMaskFilter* %326, %class.SkMaskFilter** %325, align 8
  %332 = getelementptr inbounds i8, i8* %207, i64 296
  %333 = bitcast i8* %332 to %class.SkPathEffect**
  %334 = load %class.SkPathEffect*, %class.SkPathEffect** %217, align 8
  %335 = icmp eq %class.SkPathEffect* %334, null
  br i1 %335, label %339, label %336

336:                                              ; preds = %331
  %337 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %334, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = atomicrmw add i32* %337, i32 1 monotonic
  br label %339

339:                                              ; preds = %336, %331
  store %class.SkPathEffect* %334, %class.SkPathEffect** %333, align 8
  %340 = getelementptr inbounds i8, i8* %207, i64 304
  %341 = bitcast i8* %340 to %class.SkTypeface**
  %342 = load %class.SkTypeface*, %class.SkTypeface** %224, align 8
  %343 = icmp eq %class.SkTypeface* %342, null
  br i1 %343, label %347, label %344

344:                                              ; preds = %339
  %345 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %342, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = atomicrmw add i32* %345, i32 1 monotonic
  br label %347

347:                                              ; preds = %344, %339
  store %class.SkTypeface* %342, %class.SkTypeface** %341, align 8
  %348 = getelementptr inbounds i8, i8* %207, i64 312
  %349 = load i32, i32* %233, align 8
  %350 = bitcast i8* %348 to i32*
  store i32 %349, i32* %350, align 8
  %351 = getelementptr inbounds i8, i8* %207, i64 320
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %351, i8* align 8 %236, i64 16, i1 false) #18
  %352 = getelementptr inbounds i8, i8* %207, i64 336
  %353 = bitcast i8* %352 to %class.GrTextStrike**
  %354 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 2, i32 0
  %355 = load %class.GrTextStrike*, %class.GrTextStrike** %354, align 8
  %356 = icmp eq %class.GrTextStrike* %355, null
  br i1 %356, label %360, label %357

357:                                              ; preds = %347
  %358 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %355, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = atomicrmw add i32* %358, i32 1 monotonic
  br label %360

360:                                              ; preds = %357, %347
  store %class.GrTextStrike* %355, %class.GrTextStrike** %353, align 8
  %361 = getelementptr inbounds i8, i8* %207, i64 344
  %362 = bitcast i8* %361 to i64*
  %363 = load i64, i64* %243, align 8
  store i64 %363, i64* %362, align 8
  %364 = getelementptr inbounds i8, i8* %207, i64 384
  %365 = getelementptr inbounds i8, i8* %207, i64 352
  %366 = getelementptr inbounds i8, i8* %207, i64 392
  %367 = bitcast i8* %366 to i64*
  %368 = bitcast i8* %364 to i8**
  store i8* %365, i8** %368, align 8
  store i64 34359738368, i64* %367, align 8
  %369 = icmp eq %"class.(anonymous namespace)::GlyphVector"* %5, %322
  br i1 %369, label %399, label %370

370:                                              ; preds = %360
  %371 = bitcast i8* %364 to %class.SkTArray.313*
  store i64 34359738368, i64* %367, align 8
  %372 = load i64, i64* %248, align 8
  %373 = lshr i64 %372, 1
  %374 = trunc i64 %373 to i32
  %375 = and i32 %374, 2147483647
  call void @_ZN8SkTArrayIN13GrDrawOpAtlas19BulkUseTokenUpdater8PlotDataELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.313* %371, i32 %375, i32 0) #18
  %376 = load i64, i64* %248, align 8
  %377 = and i64 %376, 4294967294
  %378 = load i64, i64* %367, align 8
  %379 = and i64 %378, -4294967295
  %380 = or i64 %379, %377
  store i64 %380, i64* %367, align 8
  %381 = bitcast i8* %245 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %382 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %381, align 8
  %383 = icmp eq i64 %377, 0
  br i1 %383, label %399, label %384

384:                                              ; preds = %370
  %385 = bitcast i8* %364 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  br label %386

386:                                              ; preds = %386, %384
  %387 = phi i64 [ 0, %384 ], [ %394, %386 ]
  %388 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %385, align 8
  %389 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %388, i64 %387
  %390 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %382, i64 %387
  %391 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %390 to i64*
  %392 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %389 to i64*
  %393 = load i64, i64* %391, align 4
  store i64 %393, i64* %392, align 4
  %394 = add nuw nsw i64 %387, 1
  %395 = load i64, i64* %367, align 8
  %396 = lshr i64 %395, 1
  %397 = and i64 %396, 2147483647
  %398 = icmp ult i64 %394, %397
  br i1 %398, label %386, label %399

399:                                              ; preds = %386, %370, %360
  %400 = getelementptr inbounds i8, i8* %207, i64 400
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %400, i8* align 8 %309, i64 16, i1 false) #18
  %401 = load i64, i64* %248, align 8
  %402 = and i64 %401, 1
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %406, label %404

404:                                              ; preds = %399
  %405 = load i8*, i8** %249, align 8
  call void @_Z7sk_freePv(i8* %405) #18
  br label %406

406:                                              ; preds = %404, %399
  %407 = load %class.GrTextStrike*, %class.GrTextStrike** %354, align 8
  %408 = icmp eq %class.GrTextStrike* %407, null
  br i1 %408, label %427, label %409

409:                                              ; preds = %406
  %410 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %407, i64 0, i32 0
  %411 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %407, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = atomicrmw add i32* %411, i32 -1 acq_rel
  %413 = icmp eq i32 %412, 1
  br i1 %413, label %414, label %427

414:                                              ; preds = %409
  %415 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %410, i64 38
  %416 = bitcast %class.SkNVRefCnt.302* %415 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %416) #18
  %417 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %410, i64 6
  %418 = bitcast %class.SkNVRefCnt.302* %417 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %418) #18
  %419 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %410, i64 4
  %420 = bitcast %class.SkNVRefCnt.302* %419 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %421 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %420, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %420, align 8
  %422 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %421, null
  br i1 %422, label %425, label %423

423:                                              ; preds = %414
  %424 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %421 to i8*
  call void @_ZdaPv(i8* %424) #20
  br label %425

425:                                              ; preds = %423, %414
  %426 = bitcast %class.GrTextStrike* %407 to i8*
  call void @_ZdlPv(i8* %426) #20
  br label %427

427:                                              ; preds = %425, %409, %406
  %428 = load %class.SkTypeface*, %class.SkTypeface** %224, align 8
  %429 = icmp eq %class.SkTypeface* %428, null
  br i1 %429, label %440, label %430

430:                                              ; preds = %427
  %431 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %428, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = atomicrmw add i32* %431, i32 -1 acq_rel
  %433 = icmp eq i32 %432, 1
  br i1 %433, label %434, label %440

434:                                              ; preds = %430
  %435 = bitcast %class.SkTypeface* %428 to %class.SkRefCntBase*
  %436 = bitcast %class.SkTypeface* %428 to void (%class.SkRefCntBase*)***
  %437 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %436, align 8
  %438 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %437, i64 2
  %439 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %438, align 8
  call void %439(%class.SkRefCntBase* nonnull %435) #18
  br label %440

440:                                              ; preds = %434, %430, %427
  %441 = load %class.SkPathEffect*, %class.SkPathEffect** %217, align 8
  %442 = icmp eq %class.SkPathEffect* %441, null
  br i1 %442, label %453, label %443

443:                                              ; preds = %440
  %444 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %441, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %445 = atomicrmw add i32* %444, i32 -1 acq_rel
  %446 = icmp eq i32 %445, 1
  br i1 %446, label %447, label %453

447:                                              ; preds = %443
  %448 = bitcast %class.SkPathEffect* %441 to %class.SkRefCntBase*
  %449 = bitcast %class.SkPathEffect* %441 to void (%class.SkRefCntBase*)***
  %450 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %449, align 8
  %451 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %450, i64 2
  %452 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %451, align 8
  call void %452(%class.SkRefCntBase* nonnull %448) #18
  br label %453

453:                                              ; preds = %447, %443, %440
  %454 = load %class.SkMaskFilter*, %class.SkMaskFilter** %210, align 8
  %455 = icmp eq %class.SkMaskFilter* %454, null
  br i1 %455, label %466, label %456

456:                                              ; preds = %453
  %457 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %454, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %458 = atomicrmw add i32* %457, i32 -1 acq_rel
  %459 = icmp eq i32 %458, 1
  br i1 %459, label %460, label %466

460:                                              ; preds = %456
  %461 = bitcast %class.SkMaskFilter* %454 to %class.SkRefCntBase*
  %462 = bitcast %class.SkMaskFilter* %454 to void (%class.SkRefCntBase*)***
  %463 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %462, align 8
  %464 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %463, i64 2
  %465 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %464, align 8
  call void %465(%class.SkRefCntBase* nonnull %461) #18
  br label %466

466:                                              ; preds = %460, %456, %453
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %209) #18
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %196)
  %467 = load i64, i64* %191, align 8
  %468 = and i64 %467, 1
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %472, label %470

470:                                              ; preds = %466
  %471 = load i8*, i8** %192, align 8
  call void @_Z7sk_freePv(i8* %471) #18
  br label %472

472:                                              ; preds = %470, %466
  %473 = load %class.GrTextStrike*, %class.GrTextStrike** %187, align 8
  %474 = icmp eq %class.GrTextStrike* %473, null
  br i1 %474, label %493, label %475

475:                                              ; preds = %472
  %476 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %473, i64 0, i32 0
  %477 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %473, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %478 = atomicrmw add i32* %477, i32 -1 acq_rel
  %479 = icmp eq i32 %478, 1
  br i1 %479, label %480, label %493

480:                                              ; preds = %475
  %481 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %476, i64 38
  %482 = bitcast %class.SkNVRefCnt.302* %481 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %482) #18
  %483 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %476, i64 6
  %484 = bitcast %class.SkNVRefCnt.302* %483 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %484) #18
  %485 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %476, i64 4
  %486 = bitcast %class.SkNVRefCnt.302* %485 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %487 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %486, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %486, align 8
  %488 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %487, null
  br i1 %488, label %491, label %489

489:                                              ; preds = %480
  %490 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %487 to i8*
  call void @_ZdaPv(i8* %490) #20
  br label %491

491:                                              ; preds = %489, %480
  %492 = bitcast %class.GrTextStrike* %473 to i8*
  call void @_ZdlPv(i8* %492) #20
  br label %493

493:                                              ; preds = %472, %475, %491
  %494 = load %class.SkTypeface*, %class.SkTypeface** %171, align 8
  %495 = icmp eq %class.SkTypeface* %494, null
  br i1 %495, label %506, label %496

496:                                              ; preds = %493
  %497 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %494, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %498 = atomicrmw add i32* %497, i32 -1 acq_rel
  %499 = icmp eq i32 %498, 1
  br i1 %499, label %500, label %506

500:                                              ; preds = %496
  %501 = bitcast %class.SkTypeface* %494 to %class.SkRefCntBase*
  %502 = bitcast %class.SkTypeface* %494 to void (%class.SkRefCntBase*)***
  %503 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %502, align 8
  %504 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %503, i64 2
  %505 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %504, align 8
  call void %505(%class.SkRefCntBase* nonnull %501) #18
  br label %506

506:                                              ; preds = %500, %496, %493
  %507 = load %class.SkPathEffect*, %class.SkPathEffect** %163, align 8
  %508 = icmp eq %class.SkPathEffect* %507, null
  br i1 %508, label %519, label %509

509:                                              ; preds = %506
  %510 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %507, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %511 = atomicrmw add i32* %510, i32 -1 acq_rel
  %512 = icmp eq i32 %511, 1
  br i1 %512, label %513, label %519

513:                                              ; preds = %509
  %514 = bitcast %class.SkPathEffect* %507 to %class.SkRefCntBase*
  %515 = bitcast %class.SkPathEffect* %507 to void (%class.SkRefCntBase*)***
  %516 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %515, align 8
  %517 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %516, i64 2
  %518 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %517, align 8
  call void %518(%class.SkRefCntBase* nonnull %514) #18
  br label %519

519:                                              ; preds = %513, %509, %506
  %520 = load %class.SkMaskFilter*, %class.SkMaskFilter** %155, align 8
  %521 = icmp eq %class.SkMaskFilter* %520, null
  br i1 %521, label %532, label %522

522:                                              ; preds = %519
  %523 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %520, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %524 = atomicrmw add i32* %523, i32 -1 acq_rel
  %525 = icmp eq i32 %524, 1
  br i1 %525, label %526, label %532

526:                                              ; preds = %522
  %527 = bitcast %class.SkMaskFilter* %520 to %class.SkRefCntBase*
  %528 = bitcast %class.SkMaskFilter* %520 to void (%class.SkRefCntBase*)***
  %529 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %528, align 8
  %530 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %529, i64 2
  %531 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %530, align 8
  call void %531(%class.SkRefCntBase* nonnull %527) #18
  br label %532

532:                                              ; preds = %519, %522, %526
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %153) #18
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %152) #18
  %533 = bitcast i8* %207 to %class.GrAtlasSubRun*
  br label %534

534:                                              ; preds = %23, %42, %532
  %535 = phi %class.GrAtlasSubRun* [ %533, %532 ], [ null, %42 ], [ null, %23 ]
  ret %class.GrAtlasSubRun* %535
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22GrSubRunNoCachePainter18processSourceMasksERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec(%class.GrSubRunNoCachePainter* nocapture readonly, %class.SkZip.59* nocapture readonly dereferenceable(24), %class.SkStrikeSpec* dereferenceable(160)) unnamed_addr #4 align 2 {
  %4 = alloca %"class.std::__1::function.268", align 8
  %5 = alloca %"class.std::__1::function.268", align 8
  %6 = alloca %class.SkZip.59, align 8
  %7 = alloca %class.SkZip.59, align 8
  %8 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %160, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %12, align 8
  %14 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %13, i64 0, i32 0, i32 0
  %15 = load %class.SkGlyph*, %class.SkGlyph** %14, align 8
  %16 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %15, i64 0, i32 8
  %17 = load i8, i8* %16, align 8
  %18 = icmp ult i8 %17, 6
  br i1 %18, label %20, label %19

19:                                               ; preds = %11
  tail call void @llvm.trap() #18
  unreachable

20:                                               ; preds = %11
  %21 = sext i8 %17 to i64
  %22 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN22GrSubRunNoCachePainter18processSourceMasksERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec.12, i64 0, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = icmp ugt i64 %9, 1
  br i1 %24, label %25, label %42

25:                                               ; preds = %20
  %26 = bitcast %class.SkZip.59* %6 to i8*
  %27 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %6, i64 0, i32 0, i32 0, i32 1, i32 0
  %29 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %6, i64 0, i32 1
  %30 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 2
  %32 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 3
  %33 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 4
  %34 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 5
  %35 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 6
  %36 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 1
  %37 = bitcast %"class.std::__1::function.268"* %5 to i8*
  %38 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %5, i64 0, i32 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %5, i64 0, i32 0, i32 2
  %40 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %5, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %class.SkZip.59* %6 to i8*
  br label %99

42:                                               ; preds = %154, %20
  %43 = phi i64 [ 0, %20 ], [ %156, %154 ]
  %44 = phi i32 [ %23, %20 ], [ %157, %154 ]
  %45 = phi i64 [ 1, %20 ], [ %155, %154 ]
  %46 = bitcast %class.SkZip.59* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #18
  %47 = sub i64 %45, %43
  %48 = icmp eq i64 %47, 0
  %49 = bitcast %class.SkZip.59* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  br i1 %48, label %50, label %51

50:                                               ; preds = %42
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 24, i1 false) #18, !alias.scope !24
  br label %60

51:                                               ; preds = %42
  %52 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %7, i64 0, i32 1
  %54 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %7, i64 0, i32 0, i32 0, i32 1, i32 0
  %55 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %12, align 8, !noalias !24
  %56 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %55, i64 %43
  %57 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %58 = load %struct.SkPoint*, %struct.SkPoint** %57, align 8, !noalias !24
  %59 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %58, i64 %43
  store %class.SkGlyphVariant* %56, %class.SkGlyphVariant** %52, align 8, !alias.scope !24
  store %struct.SkPoint* %59, %struct.SkPoint** %54, align 8, !alias.scope !24
  store i64 %47, i64* %53, align 8, !alias.scope !24
  br label %60

60:                                               ; preds = %50, %51
  %61 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 2
  %62 = load %class.GrSubRunAllocator*, %class.GrSubRunAllocator** %61, align 8
  %63 = call fastcc %class.GrAtlasSubRun* @_ZN12_GLOBAL__N_128TransformedMaskSubRunNoCache4MakeERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec12GrMaskFormatP17GrSubRunAllocator(%class.SkZip.59* nonnull dereferenceable(24) %7, %class.SkStrikeSpec* dereferenceable(160) %2, i32 %44, %class.GrSubRunAllocator* %62)
  %64 = icmp eq %class.GrAtlasSubRun* %63, null
  br i1 %64, label %98, label %65

65:                                               ; preds = %60
  %66 = ptrtoint %class.GrAtlasSubRun* %63 to i64
  %67 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 3
  %68 = load %class.GrClip*, %class.GrClip** %67, align 8
  %69 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 4
  %70 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %69, align 8
  %71 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 5
  %72 = load %class.SkGlyphRunList*, %class.SkGlyphRunList** %71, align 8
  %73 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 6
  %74 = load %class.SkPaint*, %class.SkPaint** %73, align 8
  %75 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 1
  %76 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %75, align 8
  %77 = bitcast %class.GrAtlasSubRun* %63 to { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)***
  %78 = load { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)**, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*** %77, align 8
  %79 = getelementptr inbounds { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)** %78, i64 4
  %80 = load { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)** %79, align 8
  %81 = call { %class.GrClip*, %class.GrOp* } %80(%class.GrAtlasSubRun* nonnull %63, %class.GrClip* %68, %class.SkMatrixProvider* dereferenceable(112) %70, %class.SkGlyphRunList* dereferenceable(48) %72, %class.SkPaint* dereferenceable(72) %74, %class.GrSurfaceDrawContext* %76, i64 %66) #18
  %82 = extractvalue { %class.GrClip*, %class.GrOp* } %81, 1
  %83 = icmp eq %class.GrOp* %82, null
  br i1 %83, label %98, label %84

84:                                               ; preds = %65
  %85 = extractvalue { %class.GrClip*, %class.GrOp* } %81, 0
  %86 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %75, align 8
  %87 = bitcast %"class.std::__1::function.268"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %87) #18
  %88 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %4, i64 0, i32 0, i32 1, i32 0
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j, void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)** %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %4, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %89, align 8
  call void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext* %86, %class.GrClip* %85, %class.GrOp* nonnull %82, %"class.std::__1::function.268"* nonnull dereferenceable(32) %4) #18
  %90 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %90, i64 0, i32 1
  %92 = load void (i8*)*, void (i8*)** %91, align 8
  %93 = icmp eq void (i8*)* %92, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %4, i64 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void %92(i8* %96) #18
  br label %97

97:                                               ; preds = %94, %84
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %87) #18
  br label %98

98:                                               ; preds = %60, %65, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #18
  br label %160

99:                                               ; preds = %25, %154
  %100 = phi i64 [ %9, %25 ], [ %155, %154 ]
  %101 = phi i32 [ %23, %25 ], [ %157, %154 ]
  %102 = phi i64 [ 1, %25 ], [ %158, %154 ]
  %103 = phi i64 [ 0, %25 ], [ %156, %154 ]
  %104 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %13, i64 %102, i32 0, i32 0
  %105 = load %class.SkGlyph*, %class.SkGlyph** %104, align 8
  %106 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %105, i64 0, i32 8
  %107 = load i8, i8* %106, align 8
  %108 = icmp ult i8 %107, 6
  br i1 %108, label %110, label %109

109:                                              ; preds = %99
  call void @llvm.trap() #18
  unreachable

110:                                              ; preds = %99
  %111 = sext i8 %107 to i64
  %112 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN22GrSubRunNoCachePainter18processSourceMasksERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec.12, i64 0, i64 %111
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %101, %113
  br i1 %114, label %154, label %115

115:                                              ; preds = %110
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #18
  %116 = sub i64 %102, %103
  %117 = icmp eq i64 %116, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #18, !alias.scope !27
  br label %124

119:                                              ; preds = %115
  %120 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %12, align 8, !noalias !27
  %121 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %120, i64 %103
  %122 = load %struct.SkPoint*, %struct.SkPoint** %30, align 8, !noalias !27
  %123 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %122, i64 %103
  store %class.SkGlyphVariant* %121, %class.SkGlyphVariant** %27, align 8, !alias.scope !27
  store %struct.SkPoint* %123, %struct.SkPoint** %28, align 8, !alias.scope !27
  store i64 %116, i64* %29, align 8, !alias.scope !27
  br label %124

124:                                              ; preds = %118, %119
  %125 = load %class.GrSubRunAllocator*, %class.GrSubRunAllocator** %31, align 8
  %126 = call fastcc %class.GrAtlasSubRun* @_ZN12_GLOBAL__N_128TransformedMaskSubRunNoCache4MakeERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec12GrMaskFormatP17GrSubRunAllocator(%class.SkZip.59* nonnull dereferenceable(24) %6, %class.SkStrikeSpec* dereferenceable(160) %2, i32 %101, %class.GrSubRunAllocator* %125)
  %127 = icmp eq %class.GrAtlasSubRun* %126, null
  br i1 %127, label %152, label %128

128:                                              ; preds = %124
  %129 = ptrtoint %class.GrAtlasSubRun* %126 to i64
  %130 = load %class.GrClip*, %class.GrClip** %32, align 8
  %131 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %33, align 8
  %132 = load %class.SkGlyphRunList*, %class.SkGlyphRunList** %34, align 8
  %133 = load %class.SkPaint*, %class.SkPaint** %35, align 8
  %134 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %36, align 8
  %135 = bitcast %class.GrAtlasSubRun* %126 to { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)***
  %136 = load { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)**, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*** %135, align 8
  %137 = getelementptr inbounds { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)** %136, i64 4
  %138 = load { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)** %137, align 8
  %139 = call { %class.GrClip*, %class.GrOp* } %138(%class.GrAtlasSubRun* nonnull %126, %class.GrClip* %130, %class.SkMatrixProvider* dereferenceable(112) %131, %class.SkGlyphRunList* dereferenceable(48) %132, %class.SkPaint* dereferenceable(72) %133, %class.GrSurfaceDrawContext* %134, i64 %129) #18
  %140 = extractvalue { %class.GrClip*, %class.GrOp* } %139, 1
  %141 = icmp eq %class.GrOp* %140, null
  br i1 %141, label %152, label %142

142:                                              ; preds = %128
  %143 = extractvalue { %class.GrClip*, %class.GrOp* } %139, 0
  %144 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #18
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j, void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)** %38, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %39, align 8
  call void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext* %144, %class.GrClip* %143, %class.GrOp* nonnull %140, %"class.std::__1::function.268"* nonnull dereferenceable(32) %5) #18
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %39, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %142
  %150 = load i8*, i8** %40, align 8
  call void %147(i8* %150) #18
  br label %151

151:                                              ; preds = %149, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #18
  br label %152

152:                                              ; preds = %124, %128, %151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #18
  %153 = load i64, i64* %8, align 8
  br label %154

154:                                              ; preds = %110, %152
  %155 = phi i64 [ %153, %152 ], [ %100, %110 ]
  %156 = phi i64 [ %102, %152 ], [ %103, %110 ]
  %157 = phi i32 [ %113, %152 ], [ %101, %110 ]
  %158 = add nuw i64 %102, 1
  %159 = icmp ult i64 %158, %155
  br i1 %159, label %99, label %42

160:                                              ; preds = %3, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %class.GrAtlasSubRun* @_ZN12_GLOBAL__N_128TransformedMaskSubRunNoCache4MakeERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpec12GrMaskFormatP17GrSubRunAllocator(%class.SkZip.59* nocapture readonly dereferenceable(24), %class.SkStrikeSpec* dereferenceable(160), i32, %class.GrSubRunAllocator*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.(anonymous namespace)::GlyphVector", align 8
  %6 = alloca %"class.(anonymous namespace)::GlyphVector", align 8
  %7 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 4
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %3, i64 0, i32 0
  %13 = icmp ult i32 %11, 134217471
  br i1 %13, label %15, label %14

14:                                               ; preds = %4
  tail call fastcc void @_ZZN12GrBagOfBytes16allocateBytesForIN12_GLOBAL__N_128TransformedMaskSubRunNoCache10VertexDataEEEPciENKUlvE_clEv() #18
  unreachable

15:                                               ; preds = %4
  %16 = icmp eq i32 %11, 0
  %17 = shl i32 %11, 4
  %18 = select i1 %16, i32 1, i32 %17
  %19 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %3, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp slt i32 %21, %18
  br i1 %22, label %23, label %25

23:                                               ; preds = %15
  tail call void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes* %12, i32 %18, i32 4) #18
  %24 = load i32, i32* %19, align 8
  br label %25

25:                                               ; preds = %23, %15
  %26 = phi i32 [ %24, %23 ], [ %21, %15 ]
  %27 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %3, i64 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = sext i32 %26 to i64
  %30 = sub nsw i64 0, %29
  %31 = getelementptr inbounds i8, i8* %28, i64 %30
  %32 = sub nsw i32 %26, %18
  store i32 %32, i32* %19, align 8
  %33 = bitcast i8* %31 to %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"*
  %34 = icmp sgt i32 %11, 0
  br i1 %34, label %35, label %115

35:                                               ; preds = %25
  %36 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %38 = and i64 %10, 4294967295
  br label %39

39:                                               ; preds = %39, %35
  %40 = phi float [ 0xC7EFFFFFE0000000, %35 ], [ %91, %39 ]
  %41 = phi float [ 0xC7EFFFFFE0000000, %35 ], [ %89, %39 ]
  %42 = phi float [ 0x47EFFFFFE0000000, %35 ], [ %87, %39 ]
  %43 = phi float [ 0x47EFFFFFE0000000, %35 ], [ %85, %39 ]
  %44 = phi i64 [ 0, %35 ], [ %108, %39 ]
  %45 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %33, i64 %44
  %46 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %36, align 8
  %47 = load %struct.SkPoint*, %struct.SkPoint** %37, align 8
  %48 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %47, i64 %44
  %49 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %46, i64 %44, i32 0, i32 0
  %50 = load %class.SkGlyph*, %class.SkGlyph** %49, align 8
  %51 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %50, i64 0, i32 3
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i32
  %54 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %50, i64 0, i32 2
  %55 = load i16, i16* %54, align 4
  %56 = sext i16 %55 to i32
  %57 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %50, i64 0, i32 0
  %58 = load i16, i16* %57, align 8
  %59 = zext i16 %58 to i32
  %60 = add nuw nsw i32 %59, %53
  %61 = trunc i32 %60 to i16
  %62 = and i32 %56, 65535
  %63 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %50, i64 0, i32 1
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = add nuw nsw i32 %62, %65
  %67 = trunc i32 %66 to i16
  %68 = sitofp i16 %52 to float
  %69 = sitofp i16 %55 to float
  %70 = fmul float %8, %68
  %71 = fmul float %8, %69
  %72 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %48, i64 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fadd float %70, %73
  %75 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %47, i64 %44, i32 1
  %76 = load float, float* %75, align 4
  %77 = fadd float %71, %76
  %78 = sitofp i16 %61 to float
  %79 = sitofp i16 %67 to float
  %80 = fmul float %8, %78
  %81 = fmul float %8, %79
  %82 = fadd float %73, %80
  %83 = fadd float %76, %81
  %84 = fcmp olt float %74, %43
  %85 = select i1 %84, float %74, float %43
  %86 = fcmp olt float %77, %42
  %87 = select i1 %86, float %77, float %42
  %88 = fcmp olt float %41, %82
  %89 = select i1 %88, float %82, float %41
  %90 = fcmp olt float %40, %83
  %91 = select i1 %90, float %83, float %40
  %92 = bitcast %struct.SkPoint* %48 to i64*
  %93 = load i64, i64* %92, align 4
  %94 = zext i32 %66 to i64
  %95 = shl i64 %94, 48
  %96 = and i32 %60, 65535
  %97 = zext i32 %96 to i64
  %98 = shl nuw nsw i64 %97, 32
  %99 = shl nsw i32 %56, 16
  %100 = zext i32 %99 to i64
  %101 = zext i16 %52 to i64
  %102 = or i64 %100, %101
  %103 = or i64 %102, %98
  %104 = or i64 %103, %95
  %105 = bitcast %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %45 to i64*
  store i64 %93, i64* %105, align 4
  %106 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %33, i64 %44, i32 1
  %107 = bitcast %struct.GrIRect16* %106 to i64*
  store i64 %104, i64* %107, align 4
  %108 = add nuw nsw i64 %44, 1
  %109 = icmp eq i64 %108, %38
  br i1 %109, label %110, label %39

110:                                              ; preds = %39
  %111 = bitcast float %85 to i32
  %112 = bitcast float %87 to i32
  %113 = bitcast float %89 to i32
  %114 = bitcast float %91 to i32
  br label %115

115:                                              ; preds = %110, %25
  %116 = phi i32 [ %114, %110 ], [ -8388609, %25 ]
  %117 = phi i32 [ %113, %110 ], [ -8388609, %25 ]
  %118 = phi i32 [ %112, %110 ], [ 2139095039, %25 ]
  %119 = phi i32 [ %111, %110 ], [ 2139095039, %25 ]
  %120 = load i64, i64* %9, align 8
  %121 = ptrtoint i8* %31 to i64
  %122 = bitcast %"class.(anonymous namespace)::GlyphVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %122) #18
  %123 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %123, align 8
  call fastcc void @_ZN12_GLOBAL__N_111GlyphVector4MakeERK12SkStrikeSpec6SkSpanI14SkGlyphVariantEP17GrSubRunAllocator(%"class.(anonymous namespace)::GlyphVector"* nonnull sret %6, %class.SkStrikeSpec* dereferenceable(160) %1, %class.SkGlyphVariant* %124, i64 %120, %class.GrSubRunAllocator* %3)
  %125 = bitcast %"class.(anonymous namespace)::GlyphVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %125)
  %126 = load i32, i32* %19, align 8
  %127 = and i32 %126, -8
  store i32 %127, i32* %19, align 8
  %128 = icmp slt i32 %127, 416
  br i1 %128, label %129, label %131

129:                                              ; preds = %115
  call void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes* %12, i32 416, i32 8) #18
  %130 = load i32, i32* %19, align 8
  br label %131

131:                                              ; preds = %129, %115
  %132 = phi i32 [ %130, %129 ], [ %127, %115 ]
  %133 = load i8*, i8** %27, align 8
  %134 = sext i32 %132 to i64
  %135 = sub nsw i64 0, %134
  %136 = getelementptr inbounds i8, i8* %133, i64 %135
  %137 = add nsw i32 %132, -416
  store i32 %137, i32* %19, align 8
  %138 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 0
  call void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor* nonnull %138, %class.SkAutoDescriptor* nonnull dereferenceable(128) %139) #18
  %140 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 0, i32 1, i32 0
  %141 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 1, i32 0
  %142 = load %class.SkMaskFilter*, %class.SkMaskFilter** %141, align 8
  %143 = icmp eq %class.SkMaskFilter* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %131
  %145 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %142, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = atomicrmw add i32* %145, i32 1 monotonic
  br label %147

147:                                              ; preds = %144, %131
  store %class.SkMaskFilter* %142, %class.SkMaskFilter** %140, align 8
  %148 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 0, i32 2, i32 0
  %149 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 2, i32 0
  %150 = load %class.SkPathEffect*, %class.SkPathEffect** %149, align 8
  %151 = icmp eq %class.SkPathEffect* %150, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %150, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = atomicrmw add i32* %153, i32 1 monotonic
  br label %155

155:                                              ; preds = %152, %147
  store %class.SkPathEffect* %150, %class.SkPathEffect** %148, align 8
  %156 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 0, i32 3, i32 0
  %157 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 3, i32 0
  %158 = load %class.SkTypeface*, %class.SkTypeface** %157, align 8
  %159 = icmp eq %class.SkTypeface* %158, null
  br i1 %159, label %163, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %158, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = atomicrmw add i32* %161, i32 1 monotonic
  br label %163

163:                                              ; preds = %160, %155
  store %class.SkTypeface* %158, %class.SkTypeface** %156, align 8
  %164 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 0, i32 4
  %165 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 0, i32 4
  %166 = bitcast float* %165 to i32*
  %167 = load i32, i32* %166, align 8
  %168 = bitcast float* %164 to i32*
  store i32 %167, i32* %168, align 8
  %169 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 1
  %170 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 1
  %171 = bitcast %class.SkSpan.300* %169 to i8*
  %172 = bitcast %class.SkSpan.300* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %171, i8* align 8 %172, i64 16, i1 false) #18
  %173 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 2
  %174 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 2
  %175 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %174, i64 0, i32 0
  %176 = bitcast %class.sk_sp.301* %174 to <2 x i64>*
  %177 = load <2 x i64>, <2 x i64>* %176, align 8
  store %class.GrTextStrike* null, %class.GrTextStrike** %175, align 8
  %178 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 3
  %179 = bitcast %class.sk_sp.301* %173 to <2 x i64>*
  store <2 x i64> %177, <2 x i64>* %179, align 8
  %180 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i64 32
  %181 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i64 0
  %182 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i64 40
  %183 = bitcast i8* %182 to i64*
  %184 = bitcast i8* %180 to i8**
  store i8* %181, i8** %184, align 8
  %185 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i64 32
  store i64 34359738368, i64* %183, align 8
  %186 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i64 40
  %187 = bitcast i8* %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = lshr i64 %188, 1
  %190 = and i64 %189, 2147483647
  %191 = icmp ult i64 %190, 5
  br i1 %191, label %214, label %192

192:                                              ; preds = %163
  %193 = shl nuw i64 %190, 33
  store i64 %193, i64* %183, align 8
  %194 = call i8* @_Z15sk_malloc_throwmm(i64 %190, i64 8) #18
  %195 = load i64, i64* %183, align 8
  %196 = shl i64 %195, 2
  %197 = and i64 %196, 17179869176
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %202, label %199

199:                                              ; preds = %192
  %200 = load i8*, i8** %184, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %194, i8* align 1 %200, i64 %197, i1 false) #18
  %201 = load i64, i64* %183, align 8
  br label %202

202:                                              ; preds = %199, %192
  %203 = phi i64 [ %195, %192 ], [ %201, %199 ]
  %204 = and i64 %203, 1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %209, label %206

206:                                              ; preds = %202
  %207 = load i8*, i8** %184, align 8
  call void @_Z7sk_freePv(i8* %207) #18
  %208 = load i64, i64* %183, align 8
  br label %209

209:                                              ; preds = %206, %202
  %210 = phi i64 [ %208, %206 ], [ %203, %202 ]
  store i8* %194, i8** %184, align 8
  %211 = and i64 %210, -4294967298
  %212 = or i64 %211, 1
  store i64 %212, i64* %183, align 8
  %213 = load i64, i64* %187, align 8
  br label %214

214:                                              ; preds = %209, %163
  %215 = phi i8* [ %181, %163 ], [ %194, %209 ]
  %216 = phi i64 [ 34359738368, %163 ], [ %212, %209 ]
  %217 = phi i64 [ %188, %163 ], [ %213, %209 ]
  %218 = and i64 %217, 4294967294
  %219 = and i64 %216, -4294967295
  %220 = or i64 %218, %219
  store i64 %220, i64* %183, align 8
  %221 = bitcast i8* %185 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %222 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %221, align 8
  %223 = icmp eq i64 %218, 0
  br i1 %223, label %245, label %224

224:                                              ; preds = %214
  %225 = bitcast i8* %180 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %226 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %222 to i64*
  %227 = bitcast i8* %215 to i64*
  %228 = load i64, i64* %226, align 4
  store i64 %228, i64* %227, align 4
  %229 = load i64, i64* %183, align 8
  %230 = and i64 %229, 4294967292
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %245, label %232

232:                                              ; preds = %224, %232
  %233 = phi i64 [ %240, %232 ], [ 1, %224 ]
  %234 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %225, align 8
  %235 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %234, i64 %233
  %236 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %222, i64 %233
  %237 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %236 to i64*
  %238 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %235 to i64*
  %239 = load i64, i64* %237, align 4
  store i64 %239, i64* %238, align 4
  %240 = add nuw nsw i64 %233, 1
  %241 = load i64, i64* %183, align 8
  %242 = lshr i64 %241, 1
  %243 = and i64 %242, 2147483647
  %244 = icmp ult i64 %240, %243
  br i1 %244, label %232, label %245

245:                                              ; preds = %232, %224, %214
  %246 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 4, i32 1, i64 0
  %247 = bitcast i32* %246 to i8*
  %248 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 4, i32 1, i64 0
  %249 = bitcast i32* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %249, i64 16, i1 false) #18
  %250 = bitcast i8* %136 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_128TransformedMaskSubRunNoCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %250, align 8
  %251 = getelementptr inbounds i8, i8* %136, i64 8
  %252 = bitcast i8* %251 to i32*
  store i32 %2, i32* %252, align 8
  %253 = getelementptr inbounds i8, i8* %136, i64 12
  %254 = bitcast i8* %253 to i32*
  store i32 %119, i32* %254, align 4
  %255 = getelementptr inbounds i8, i8* %136, i64 16
  %256 = bitcast i8* %255 to i32*
  store i32 %118, i32* %256, align 4
  %257 = getelementptr inbounds i8, i8* %136, i64 20
  %258 = bitcast i8* %257 to i32*
  store i32 %117, i32* %258, align 4
  %259 = getelementptr inbounds i8, i8* %136, i64 24
  %260 = bitcast i8* %259 to i32*
  store i32 %116, i32* %260, align 4
  %261 = getelementptr inbounds i8, i8* %136, i64 32
  %262 = bitcast i8* %261 to i64*
  store i64 %121, i64* %262, align 8
  %263 = getelementptr inbounds i8, i8* %136, i64 40
  %264 = bitcast i8* %263 to i64*
  store i64 %120, i64* %264, align 8
  %265 = getelementptr inbounds i8, i8* %136, i64 160
  %266 = bitcast i8* %265 to %"class.(anonymous namespace)::GlyphVector"*
  %267 = bitcast i8* %265 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor* %267, %class.SkAutoDescriptor* nonnull dereferenceable(128) %138) #18
  %268 = getelementptr inbounds i8, i8* %136, i64 288
  %269 = bitcast i8* %268 to %class.SkMaskFilter**
  %270 = load %class.SkMaskFilter*, %class.SkMaskFilter** %140, align 8
  %271 = icmp eq %class.SkMaskFilter* %270, null
  br i1 %271, label %275, label %272

272:                                              ; preds = %245
  %273 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %270, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = atomicrmw add i32* %273, i32 1 monotonic
  br label %275

275:                                              ; preds = %272, %245
  store %class.SkMaskFilter* %270, %class.SkMaskFilter** %269, align 8
  %276 = getelementptr inbounds i8, i8* %136, i64 296
  %277 = bitcast i8* %276 to %class.SkPathEffect**
  %278 = load %class.SkPathEffect*, %class.SkPathEffect** %148, align 8
  %279 = icmp eq %class.SkPathEffect* %278, null
  br i1 %279, label %283, label %280

280:                                              ; preds = %275
  %281 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %278, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = atomicrmw add i32* %281, i32 1 monotonic
  br label %283

283:                                              ; preds = %280, %275
  store %class.SkPathEffect* %278, %class.SkPathEffect** %277, align 8
  %284 = getelementptr inbounds i8, i8* %136, i64 304
  %285 = bitcast i8* %284 to %class.SkTypeface**
  %286 = load %class.SkTypeface*, %class.SkTypeface** %156, align 8
  %287 = icmp eq %class.SkTypeface* %286, null
  br i1 %287, label %291, label %288

288:                                              ; preds = %283
  %289 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %286, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = atomicrmw add i32* %289, i32 1 monotonic
  br label %291

291:                                              ; preds = %288, %283
  store %class.SkTypeface* %286, %class.SkTypeface** %285, align 8
  %292 = getelementptr inbounds i8, i8* %136, i64 312
  %293 = load i32, i32* %168, align 8
  %294 = bitcast i8* %292 to i32*
  store i32 %293, i32* %294, align 8
  %295 = getelementptr inbounds i8, i8* %136, i64 320
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %295, i8* align 8 %171, i64 16, i1 false) #18
  %296 = getelementptr inbounds i8, i8* %136, i64 336
  %297 = bitcast i8* %296 to %class.GrTextStrike**
  %298 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %5, i64 0, i32 2, i32 0
  %299 = load %class.GrTextStrike*, %class.GrTextStrike** %298, align 8
  %300 = icmp eq %class.GrTextStrike* %299, null
  br i1 %300, label %304, label %301

301:                                              ; preds = %291
  %302 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %299, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = atomicrmw add i32* %302, i32 1 monotonic
  br label %304

304:                                              ; preds = %301, %291
  store %class.GrTextStrike* %299, %class.GrTextStrike** %297, align 8
  %305 = getelementptr inbounds i8, i8* %136, i64 344
  %306 = bitcast i8* %305 to i64*
  %307 = load i64, i64* %178, align 8
  store i64 %307, i64* %306, align 8
  %308 = getelementptr inbounds i8, i8* %136, i64 384
  %309 = getelementptr inbounds i8, i8* %136, i64 352
  %310 = getelementptr inbounds i8, i8* %136, i64 392
  %311 = bitcast i8* %310 to i64*
  %312 = bitcast i8* %308 to i8**
  store i8* %309, i8** %312, align 8
  store i64 34359738368, i64* %311, align 8
  %313 = icmp eq %"class.(anonymous namespace)::GlyphVector"* %5, %266
  br i1 %313, label %343, label %314

314:                                              ; preds = %304
  %315 = bitcast i8* %308 to %class.SkTArray.313*
  store i64 34359738368, i64* %311, align 8
  %316 = load i64, i64* %183, align 8
  %317 = lshr i64 %316, 1
  %318 = trunc i64 %317 to i32
  %319 = and i32 %318, 2147483647
  call void @_ZN8SkTArrayIN13GrDrawOpAtlas19BulkUseTokenUpdater8PlotDataELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.313* %315, i32 %319, i32 0) #18
  %320 = load i64, i64* %183, align 8
  %321 = and i64 %320, 4294967294
  %322 = load i64, i64* %311, align 8
  %323 = and i64 %322, -4294967295
  %324 = or i64 %323, %321
  store i64 %324, i64* %311, align 8
  %325 = bitcast i8* %180 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %326 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %325, align 8
  %327 = icmp eq i64 %321, 0
  br i1 %327, label %343, label %328

328:                                              ; preds = %314
  %329 = bitcast i8* %308 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  br label %330

330:                                              ; preds = %330, %328
  %331 = phi i64 [ 0, %328 ], [ %338, %330 ]
  %332 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %329, align 8
  %333 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %332, i64 %331
  %334 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %326, i64 %331
  %335 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %334 to i64*
  %336 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %333 to i64*
  %337 = load i64, i64* %335, align 4
  store i64 %337, i64* %336, align 4
  %338 = add nuw nsw i64 %331, 1
  %339 = load i64, i64* %311, align 8
  %340 = lshr i64 %339, 1
  %341 = and i64 %340, 2147483647
  %342 = icmp ult i64 %338, %341
  br i1 %342, label %330, label %343

343:                                              ; preds = %330, %314, %304
  %344 = getelementptr inbounds i8, i8* %136, i64 400
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %344, i8* align 8 %247, i64 16, i1 false) #18
  %345 = load i64, i64* %183, align 8
  %346 = and i64 %345, 1
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %350, label %348

348:                                              ; preds = %343
  %349 = load i8*, i8** %184, align 8
  call void @_Z7sk_freePv(i8* %349) #18
  br label %350

350:                                              ; preds = %348, %343
  %351 = load %class.GrTextStrike*, %class.GrTextStrike** %298, align 8
  %352 = icmp eq %class.GrTextStrike* %351, null
  br i1 %352, label %371, label %353

353:                                              ; preds = %350
  %354 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %351, i64 0, i32 0
  %355 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %351, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = atomicrmw add i32* %355, i32 -1 acq_rel
  %357 = icmp eq i32 %356, 1
  br i1 %357, label %358, label %371

358:                                              ; preds = %353
  %359 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %354, i64 38
  %360 = bitcast %class.SkNVRefCnt.302* %359 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %360) #18
  %361 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %354, i64 6
  %362 = bitcast %class.SkNVRefCnt.302* %361 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %362) #18
  %363 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %354, i64 4
  %364 = bitcast %class.SkNVRefCnt.302* %363 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %365 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %364, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %364, align 8
  %366 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %365, null
  br i1 %366, label %369, label %367

367:                                              ; preds = %358
  %368 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %365 to i8*
  call void @_ZdaPv(i8* %368) #20
  br label %369

369:                                              ; preds = %367, %358
  %370 = bitcast %class.GrTextStrike* %351 to i8*
  call void @_ZdlPv(i8* %370) #20
  br label %371

371:                                              ; preds = %369, %353, %350
  %372 = load %class.SkTypeface*, %class.SkTypeface** %156, align 8
  %373 = icmp eq %class.SkTypeface* %372, null
  br i1 %373, label %384, label %374

374:                                              ; preds = %371
  %375 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %372, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %376 = atomicrmw add i32* %375, i32 -1 acq_rel
  %377 = icmp eq i32 %376, 1
  br i1 %377, label %378, label %384

378:                                              ; preds = %374
  %379 = bitcast %class.SkTypeface* %372 to %class.SkRefCntBase*
  %380 = bitcast %class.SkTypeface* %372 to void (%class.SkRefCntBase*)***
  %381 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %380, align 8
  %382 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %381, i64 2
  %383 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %382, align 8
  call void %383(%class.SkRefCntBase* nonnull %379) #18
  br label %384

384:                                              ; preds = %378, %374, %371
  %385 = load %class.SkPathEffect*, %class.SkPathEffect** %148, align 8
  %386 = icmp eq %class.SkPathEffect* %385, null
  br i1 %386, label %397, label %387

387:                                              ; preds = %384
  %388 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %385, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %389 = atomicrmw add i32* %388, i32 -1 acq_rel
  %390 = icmp eq i32 %389, 1
  br i1 %390, label %391, label %397

391:                                              ; preds = %387
  %392 = bitcast %class.SkPathEffect* %385 to %class.SkRefCntBase*
  %393 = bitcast %class.SkPathEffect* %385 to void (%class.SkRefCntBase*)***
  %394 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %393, align 8
  %395 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %394, i64 2
  %396 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %395, align 8
  call void %396(%class.SkRefCntBase* nonnull %392) #18
  br label %397

397:                                              ; preds = %391, %387, %384
  %398 = load %class.SkMaskFilter*, %class.SkMaskFilter** %140, align 8
  %399 = icmp eq %class.SkMaskFilter* %398, null
  br i1 %399, label %410, label %400

400:                                              ; preds = %397
  %401 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %398, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %402 = atomicrmw add i32* %401, i32 -1 acq_rel
  %403 = icmp eq i32 %402, 1
  br i1 %403, label %404, label %410

404:                                              ; preds = %400
  %405 = bitcast %class.SkMaskFilter* %398 to %class.SkRefCntBase*
  %406 = bitcast %class.SkMaskFilter* %398 to void (%class.SkRefCntBase*)***
  %407 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %406, align 8
  %408 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %407, i64 2
  %409 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %408, align 8
  call void %409(%class.SkRefCntBase* nonnull %405) #18
  br label %410

410:                                              ; preds = %404, %400, %397
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %138) #18
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %125)
  %411 = load i64, i64* %187, align 8
  %412 = and i64 %411, 1
  %413 = icmp eq i64 %412, 0
  br i1 %413, label %417, label %414

414:                                              ; preds = %410
  %415 = bitcast i8* %185 to i8**
  %416 = load i8*, i8** %415, align 8
  call void @_Z7sk_freePv(i8* %416) #18
  br label %417

417:                                              ; preds = %414, %410
  %418 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %6, i64 0, i32 2, i32 0
  %419 = load %class.GrTextStrike*, %class.GrTextStrike** %418, align 8
  %420 = icmp eq %class.GrTextStrike* %419, null
  br i1 %420, label %439, label %421

421:                                              ; preds = %417
  %422 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %419, i64 0, i32 0
  %423 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %419, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %424 = atomicrmw add i32* %423, i32 -1 acq_rel
  %425 = icmp eq i32 %424, 1
  br i1 %425, label %426, label %439

426:                                              ; preds = %421
  %427 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %422, i64 38
  %428 = bitcast %class.SkNVRefCnt.302* %427 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %428) #18
  %429 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %422, i64 6
  %430 = bitcast %class.SkNVRefCnt.302* %429 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %430) #18
  %431 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %422, i64 4
  %432 = bitcast %class.SkNVRefCnt.302* %431 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %433 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %432, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %432, align 8
  %434 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %433, null
  br i1 %434, label %437, label %435

435:                                              ; preds = %426
  %436 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %433 to i8*
  call void @_ZdaPv(i8* %436) #20
  br label %437

437:                                              ; preds = %435, %426
  %438 = bitcast %class.GrTextStrike* %419 to i8*
  call void @_ZdlPv(i8* %438) #20
  br label %439

439:                                              ; preds = %417, %421, %437
  %440 = load %class.SkTypeface*, %class.SkTypeface** %157, align 8
  %441 = icmp eq %class.SkTypeface* %440, null
  br i1 %441, label %452, label %442

442:                                              ; preds = %439
  %443 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %440, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %444 = atomicrmw add i32* %443, i32 -1 acq_rel
  %445 = icmp eq i32 %444, 1
  br i1 %445, label %446, label %452

446:                                              ; preds = %442
  %447 = bitcast %class.SkTypeface* %440 to %class.SkRefCntBase*
  %448 = bitcast %class.SkTypeface* %440 to void (%class.SkRefCntBase*)***
  %449 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %448, align 8
  %450 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %449, i64 2
  %451 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %450, align 8
  call void %451(%class.SkRefCntBase* nonnull %447) #18
  br label %452

452:                                              ; preds = %446, %442, %439
  %453 = load %class.SkPathEffect*, %class.SkPathEffect** %149, align 8
  %454 = icmp eq %class.SkPathEffect* %453, null
  br i1 %454, label %465, label %455

455:                                              ; preds = %452
  %456 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %453, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %457 = atomicrmw add i32* %456, i32 -1 acq_rel
  %458 = icmp eq i32 %457, 1
  br i1 %458, label %459, label %465

459:                                              ; preds = %455
  %460 = bitcast %class.SkPathEffect* %453 to %class.SkRefCntBase*
  %461 = bitcast %class.SkPathEffect* %453 to void (%class.SkRefCntBase*)***
  %462 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %461, align 8
  %463 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %462, i64 2
  %464 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %463, align 8
  call void %464(%class.SkRefCntBase* nonnull %460) #18
  br label %465

465:                                              ; preds = %459, %455, %452
  %466 = load %class.SkMaskFilter*, %class.SkMaskFilter** %141, align 8
  %467 = icmp eq %class.SkMaskFilter* %466, null
  br i1 %467, label %478, label %468

468:                                              ; preds = %465
  %469 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %466, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %470 = atomicrmw add i32* %469, i32 -1 acq_rel
  %471 = icmp eq i32 %470, 1
  br i1 %471, label %472, label %478

472:                                              ; preds = %468
  %473 = bitcast %class.SkMaskFilter* %466 to %class.SkRefCntBase*
  %474 = bitcast %class.SkMaskFilter* %466 to void (%class.SkRefCntBase*)***
  %475 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %474, align 8
  %476 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %475, i64 2
  %477 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %476, align 8
  call void %477(%class.SkRefCntBase* nonnull %473) #18
  br label %478

478:                                              ; preds = %465, %468, %472
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %139) #18
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %122) #18
  %479 = bitcast i8* %136 to %class.GrAtlasSubRun*
  ret %class.GrAtlasSubRun* %479
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22GrSubRunNoCachePainter18processSourcePathsERK5SkZipIJ14SkGlyphVariant7SkPointEERK6SkFontRK12SkStrikeSpec(%class.GrSubRunNoCachePainter* nocapture readonly, %class.SkZip.59* dereferenceable(24), %class.SkFont* nocapture readonly dereferenceable(24), %class.SkStrikeSpec* nocapture readonly dereferenceable(160)) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkM44, align 4
  %6 = alloca %class.SkM44, align 4
  %7 = alloca %class.sk_sp.15, align 8
  %8 = alloca %class.SkPaint, align 8
  %9 = alloca %class.GrStyle, align 8
  %10 = alloca %class.SkMatrix, align 16
  %11 = alloca %class.SkMatrix, align 4
  %12 = alloca %class.SkPreConcatMatrixProvider, align 8
  %13 = alloca %class.GrStyledShape, align 8
  %14 = alloca %class.SkMatrix, align 4
  %15 = alloca %class.SkPath, align 8
  %16 = alloca %class.GrStyledShape, align 8
  %17 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 5
  %18 = load %class.SkGlyphRunList*, %class.SkGlyphRunList** %17, align 8
  %19 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %18, i64 0, i32 3
  %20 = bitcast %struct.SkPoint* %19 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 8
  %22 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 6
  %23 = load %class.SkPaint*, %class.SkPaint** %22, align 8
  %24 = bitcast %class.SkPaint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %24) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK12_GLOBAL__N_110PathSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext.runPaint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %8, %class.SkPaint* dereferenceable(72) %23) #18
  %25 = getelementptr inbounds %class.SkFont, %class.SkFont* %2, i64 0, i32 5
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = add nsw i32 %27, -1
  %29 = icmp ult i32 %28, 2
  %30 = zext i1 %29 to i32
  %31 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %8, i64 0, i32 8, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -2
  %34 = or i32 %33, %30
  store i32 %34, i32* %31, align 8
  %35 = bitcast %class.GrStyle* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %35) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 8 bitcast ({ %class.SkStrokeRec, %class.sk_sp.15, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } }* @__const._ZNK12_GLOBAL__N_110PathSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext.style to i8*), i64 64, i1 false)
  %36 = bitcast %class.sk_sp.15* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %9, i64 0, i32 0
  call void @_ZN11SkStrokeRecC1ERK7SkPaintf(%class.SkStrokeRec* nonnull %37, %class.SkPaint* nonnull dereferenceable(72) %8, float 1.000000e+00) #18
  %38 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %9, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %9, i64 0, i32 2, i32 2, i32 1
  store float* null, float** %39, align 8
  %40 = bitcast %class.SkPathEffect** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 20, i1 false) #18
  call void @_ZNK7SkPaint13refPathEffectEv(%class.sk_sp.15* nonnull sret %7, %class.SkPaint* nonnull %8) #18
  call void @_ZN7GrStyle14initPathEffectE5sk_spI12SkPathEffectE(%class.GrStyle* nonnull %9, %class.sk_sp.15* nonnull %7) #18
  %41 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %7, i64 0, i32 0
  %42 = load %class.SkPathEffect*, %class.SkPathEffect** %41, align 8
  %43 = icmp eq %class.SkPathEffect* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %4
  %45 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %42, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %class.SkPathEffect* %42 to %class.SkRefCntBase*
  %50 = bitcast %class.SkPathEffect* %42 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8
  call void %53(%class.SkRefCntBase* nonnull %49) #18
  br label %54

54:                                               ; preds = %4, %44, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  %55 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %8, i64 0, i32 1, i32 0
  %56 = load %class.SkShader*, %class.SkShader** %55, align 8
  %57 = icmp eq %class.SkShader* %56, null
  %58 = load %class.SkPathEffect*, %class.SkPathEffect** %38, align 8
  %59 = icmp eq %class.SkPathEffect* %58, null
  %60 = and i1 %57, %59
  br i1 %60, label %61, label %71

61:                                               ; preds = %54
  %62 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* nonnull %37) #18
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %67, label %64

64:                                               ; preds = %61
  %65 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* nonnull %37) #18
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %64, %61
  %68 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %8, i64 0, i32 2, i32 0
  %69 = load %class.SkMaskFilter*, %class.SkMaskFilter** %68, align 8
  %70 = icmp ne %class.SkMaskFilter* %69, null
  br label %71

71:                                               ; preds = %64, %54, %67
  %72 = phi i1 [ true, %64 ], [ true, %54 ], [ %70, %67 ]
  %73 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %3, i64 0, i32 4
  %74 = load float, float* %73, align 8
  %75 = bitcast %class.SkMatrix* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %75) #18
  %76 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 1
  %77 = bitcast %class.SkMatrix* %10 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %77, align 16, !alias.scope !30
  %78 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 4
  %79 = bitcast float* %78 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %79, align 16, !alias.scope !30
  %80 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %80, align 16, !alias.scope !30
  store i32 16, i32* %76, align 4, !alias.scope !30
  %81 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %10, float %74, float %74) #18
  %82 = extractelement <2 x float> %21, i32 0
  %83 = extractelement <2 x float> %21, i32 1
  %84 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %10, float %82, float %83) #18
  %85 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %72, label %183, label %88

88:                                               ; preds = %71
  br i1 %87, label %258, label %89

89:                                               ; preds = %88
  %90 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %92 = bitcast %class.SkMatrix* %11 to i8*
  %93 = bitcast %class.SkPreConcatMatrixProvider* %12 to i8*
  %94 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 4
  %95 = bitcast %class.SkM44* %5 to i8*
  %96 = bitcast %class.SkM44* %6 to i8*
  %97 = bitcast %class.SkMatrix* %11 to i32*
  %98 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 1
  %99 = bitcast float* %98 to i32*
  %100 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 2
  %101 = bitcast float* %100 to i32*
  %102 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 3
  %103 = bitcast float* %102 to i32*
  %104 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 4
  %105 = bitcast float* %104 to i32*
  %106 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 5
  %107 = bitcast float* %106 to i32*
  %108 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 6
  %109 = bitcast float* %108 to i32*
  %110 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 7
  %111 = bitcast float* %110 to i32*
  %112 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 8
  %113 = bitcast float* %112 to i32*
  %114 = bitcast %class.SkM44* %6 to i32*
  %115 = getelementptr inbounds %class.SkM44, %class.SkM44* %6, i64 0, i32 0, i64 1
  %116 = bitcast float* %115 to i32*
  %117 = getelementptr inbounds %class.SkM44, %class.SkM44* %6, i64 0, i32 0, i64 2
  %118 = getelementptr inbounds %class.SkM44, %class.SkM44* %6, i64 0, i32 0, i64 3
  %119 = bitcast float* %118 to i32*
  %120 = getelementptr inbounds %class.SkM44, %class.SkM44* %6, i64 0, i32 0, i64 4
  %121 = bitcast float* %120 to i32*
  %122 = getelementptr inbounds %class.SkM44, %class.SkM44* %6, i64 0, i32 0, i64 5
  %123 = bitcast float* %122 to i32*
  %124 = getelementptr inbounds %class.SkM44, %class.SkM44* %6, i64 0, i32 0, i64 6
  %125 = getelementptr inbounds %class.SkM44, %class.SkM44* %6, i64 0, i32 0, i64 7
  %126 = bitcast float* %125 to i32*
  %127 = getelementptr inbounds %class.SkM44, %class.SkM44* %6, i64 0, i32 0, i64 8
  %128 = getelementptr inbounds %class.SkM44, %class.SkM44* %6, i64 0, i32 0, i64 12
  %129 = bitcast float* %128 to i32*
  %130 = getelementptr inbounds %class.SkM44, %class.SkM44* %6, i64 0, i32 0, i64 13
  %131 = bitcast float* %130 to i32*
  %132 = getelementptr inbounds %class.SkM44, %class.SkM44* %6, i64 0, i32 0, i64 14
  %133 = getelementptr inbounds %class.SkM44, %class.SkM44* %6, i64 0, i32 0, i64 15
  %134 = bitcast float* %133 to i32*
  %135 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %12, i64 0, i32 0, i32 0
  %136 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %12, i64 0, i32 0, i32 1
  %137 = bitcast %class.SkM44* %136 to i8*
  %138 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %12, i64 0, i32 0, i32 2
  %139 = bitcast %class.SkM44* %5 to i32*
  %140 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 4
  %141 = bitcast float* %140 to i32*
  %142 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 12
  %143 = bitcast float* %142 to i32*
  %144 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 1
  %145 = bitcast float* %144 to i32*
  %146 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 5
  %147 = bitcast float* %146 to i32*
  %148 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 13
  %149 = bitcast float* %148 to i32*
  %150 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 3
  %151 = bitcast float* %150 to i32*
  %152 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 7
  %153 = bitcast float* %152 to i32*
  %154 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 15
  %155 = bitcast float* %154 to i32*
  %156 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %12, i64 0, i32 0, i32 2, i32 1
  %157 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %12, i64 0, i32 0, i32 2, i32 0, i64 1
  %158 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %12, i64 0, i32 0, i32 2, i32 0, i64 2
  %159 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %12, i64 0, i32 0, i32 2, i32 0, i64 3
  %160 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %12, i64 0, i32 0, i32 2, i32 0, i64 4
  %161 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %12, i64 0, i32 0, i32 2, i32 0, i64 5
  %162 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %12, i64 0, i32 0, i32 2, i32 0, i64 6
  %163 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %12, i64 0, i32 0, i32 2, i32 0, i64 7
  %164 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %12, i64 0, i32 0, i32 2, i32 0, i64 8
  %165 = bitcast %class.SkMatrix* %138 to i32*
  %166 = bitcast float* %157 to i32*
  %167 = bitcast float* %158 to i32*
  %168 = bitcast float* %159 to i32*
  %169 = bitcast float* %160 to i32*
  %170 = bitcast float* %161 to i32*
  %171 = bitcast float* %162 to i32*
  %172 = bitcast float* %163 to i32*
  %173 = bitcast float* %164 to i32*
  %174 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %12, i64 0, i32 1
  %175 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %12, i64 0, i32 2
  %176 = bitcast %class.SkMatrix* %175 to i8*
  %177 = bitcast %class.GrStyledShape* %13 to i8*
  %178 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 1
  %179 = bitcast %class.GrSurfaceDrawContext** %178 to %class.GrSurfaceContext**
  %180 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 3
  %181 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %12, i64 0, i32 0
  %182 = bitcast float* %127 to <4 x float>*
  br label %196

183:                                              ; preds = %71
  br i1 %87, label %258, label %184

184:                                              ; preds = %183
  %185 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %186 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %187 = bitcast %class.SkMatrix* %14 to i8*
  %188 = bitcast %class.SkPath* %15 to i8*
  %189 = getelementptr inbounds %class.SkPath, %class.SkPath* %15, i64 0, i32 4
  %190 = bitcast %class.GrStyledShape* %16 to i8*
  %191 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 1
  %192 = bitcast %class.GrSurfaceDrawContext** %191 to %class.GrSurfaceContext**
  %193 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 3
  %194 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 4
  %195 = bitcast %class.SkPath* %15 to i8*
  br label %236

196:                                              ; preds = %89, %196
  %197 = phi i64 [ 0, %89 ], [ %234, %196 ]
  %198 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %90, align 8
  %199 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %198, i64 %197
  %200 = load %struct.SkPoint*, %struct.SkPoint** %91, align 8
  %201 = bitcast %class.SkGlyphVariant* %199 to %class.SkPath**
  %202 = load %class.SkPath*, %class.SkPath** %201, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %92) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %92, i8* nonnull align 16 %75, i64 40, i1 false)
  %203 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %200, i64 %197, i32 0
  %204 = load float, float* %203, align 4
  %205 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %200, i64 %197, i32 1
  %206 = load float, float* %205, align 4
  %207 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %11, float %204, float %206) #18
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %93) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* align 8 bitcast (%class.SkPreConcatMatrixProvider* @__const._ZNK12_GLOBAL__N_110PathSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext.strikeToDevice to i8*), i64 160, i1 false)
  %208 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %94, align 8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %95) #18
  %209 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %208, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %96) #18
  %210 = load i32, i32* %97, align 4
  %211 = load i32, i32* %99, align 4
  %212 = load i32, i32* %101, align 4
  %213 = load i32, i32* %103, align 4
  %214 = load i32, i32* %105, align 4
  %215 = load i32, i32* %107, align 4
  %216 = load i32, i32* %109, align 4
  %217 = load i32, i32* %111, align 4
  %218 = load i32, i32* %113, align 4
  store i32 %210, i32* %114, align 4
  store i32 %213, i32* %116, align 4
  store float 0.000000e+00, float* %117, align 4
  store i32 %216, i32* %119, align 4
  store i32 %211, i32* %121, align 4
  store i32 %214, i32* %123, align 4
  store float 0.000000e+00, float* %124, align 4
  store i32 %217, i32* %126, align 4
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %182, align 4
  store i32 %212, i32* %129, align 4
  store i32 %215, i32* %131, align 4
  store float 0.000000e+00, float* %132, align 4
  store i32 %218, i32* %134, align 4
  %219 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %5, %class.SkM44* dereferenceable(64) %209, %class.SkM44* nonnull dereferenceable(64) %6) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* nonnull align 4 %95, i64 64, i1 false) #18
  %220 = load i32, i32* %139, align 4, !noalias !33
  %221 = load i32, i32* %141, align 4, !noalias !33
  %222 = load i32, i32* %143, align 4, !noalias !33
  %223 = load i32, i32* %145, align 4, !noalias !33
  %224 = load i32, i32* %147, align 4, !noalias !33
  %225 = load i32, i32* %149, align 4, !noalias !33
  %226 = load i32, i32* %151, align 4, !noalias !33
  %227 = load i32, i32* %153, align 4, !noalias !33
  %228 = load i32, i32* %155, align 4, !noalias !33
  store i32 %220, i32* %165, align 8, !alias.scope !36
  store i32 %221, i32* %166, align 4, !alias.scope !36
  store i32 %222, i32* %167, align 8, !alias.scope !36
  store i32 %223, i32* %168, align 4, !alias.scope !36
  store i32 %224, i32* %169, align 8, !alias.scope !36
  store i32 %225, i32* %170, align 4, !alias.scope !36
  store i32 %226, i32* %171, align 8, !alias.scope !36
  store i32 %227, i32* %172, align 4, !alias.scope !36
  store i32 %228, i32* %173, align 8, !alias.scope !36
  store i32 128, i32* %156, align 4, !alias.scope !36
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %96) #18
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %95) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV25SkPreConcatMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %135, align 8
  store %class.SkMatrixProvider* %208, %class.SkMatrixProvider** %174, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %176, i8* nonnull align 4 %92, i64 40, i1 false) #18
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %177) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %177, i8* align 8 bitcast ({ %class.GrShape, { %class.SkStrokeRec, %class.sk_sp.15, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } }, i32, i8, i8, [2 x i8], %class.SkTLazy, { i32, [4 x i8], i32*, [32 x i8] } }* @__const._ZNK12_GLOBAL__N_110PathSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext.shape.9 to i8*), i64 208, i1 false)
  call void @_ZN13GrStyledShapeC2ERK6SkPathRK7SkPaintNS_10DoSimplifyE(%class.GrStyledShape* nonnull %13, %class.SkPath* dereferenceable(16) %202, %class.SkPaint* dereferenceable(72) %23, i1 zeroext true)
  %229 = load %class.GrSurfaceContext*, %class.GrSurfaceContext** %179, align 8
  %230 = getelementptr inbounds %class.GrSurfaceContext, %class.GrSurfaceContext* %229, i64 0, i32 1
  %231 = load %class.GrRecordingContext*, %class.GrRecordingContext** %230, align 8
  %232 = bitcast %class.GrSurfaceContext* %229 to %class.GrSurfaceDrawContext*
  %233 = load %class.GrClip*, %class.GrClip** %180, align 8
  call void @_ZN11GrBlurUtils23drawShapeWithMaskFilterEP18GrRecordingContextP20GrSurfaceDrawContextPK6GrClipRK7SkPaintRK16SkMatrixProviderRK13GrStyledShape(%class.GrRecordingContext* %231, %class.GrSurfaceDrawContext* %232, %class.GrClip* %233, %class.SkPaint* nonnull dereferenceable(72) %8, %class.SkMatrixProvider* nonnull dereferenceable(112) %181, %class.GrStyledShape* nonnull dereferenceable(208) %13) #18
  call void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape* nonnull %13) #18
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %177) #18
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %93) #18
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %92) #18
  %234 = add nuw i64 %197, 1
  %235 = icmp eq i64 %234, %86
  br i1 %235, label %258, label %196

236:                                              ; preds = %184, %236
  %237 = phi i64 [ 0, %184 ], [ %256, %236 ]
  %238 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %185, align 8
  %239 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %238, i64 %237
  %240 = load %struct.SkPoint*, %struct.SkPoint** %186, align 8
  %241 = bitcast %class.SkGlyphVariant* %239 to %class.SkPath**
  %242 = load %class.SkPath*, %class.SkPath** %241, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %187) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %187, i8* nonnull align 16 %75, i64 40, i1 false)
  %243 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %240, i64 %237, i32 0
  %244 = load float, float* %243, align 4
  %245 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %240, i64 %237, i32 1
  %246 = load float, float* %245, align 4
  %247 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %14, float %244, float %246) #18
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %188) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %15) #18
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %242, %class.SkMatrix* nonnull dereferenceable(40) %14, %class.SkPath* nonnull %15, i32 1) #18
  %248 = load i8, i8* %189, align 2
  %249 = or i8 %248, 4
  store i8 %249, i8* %189, align 2
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %190) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %190, i8* align 8 bitcast ({ %class.GrShape, { %class.SkStrokeRec, %class.sk_sp.15, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } }, i32, i8, i8, [2 x i8], %class.SkTLazy, { i32, [4 x i8], i32*, [32 x i8] } }* @__const._ZNK12_GLOBAL__N_110PathSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext.shape.9 to i8*), i64 208, i1 false)
  call void @_ZN13GrStyledShapeC2ERK6SkPathRK7SkPaintNS_10DoSimplifyE(%class.GrStyledShape* nonnull %16, %class.SkPath* nonnull dereferenceable(16) %15, %class.SkPaint* dereferenceable(72) %23, i1 zeroext true)
  %250 = load %class.GrSurfaceContext*, %class.GrSurfaceContext** %192, align 8
  %251 = getelementptr inbounds %class.GrSurfaceContext, %class.GrSurfaceContext* %250, i64 0, i32 1
  %252 = load %class.GrRecordingContext*, %class.GrRecordingContext** %251, align 8
  %253 = bitcast %class.GrSurfaceContext* %250 to %class.GrSurfaceDrawContext*
  %254 = load %class.GrClip*, %class.GrClip** %193, align 8
  %255 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %194, align 8
  call void @_ZN11GrBlurUtils23drawShapeWithMaskFilterEP18GrRecordingContextP20GrSurfaceDrawContextPK6GrClipRK7SkPaintRK16SkMatrixProviderRK13GrStyledShape(%class.GrRecordingContext* %252, %class.GrSurfaceDrawContext* %253, %class.GrClip* %254, %class.SkPaint* nonnull dereferenceable(72) %8, %class.SkMatrixProvider* dereferenceable(112) %255, %class.GrStyledShape* nonnull dereferenceable(208) %16) #18
  call void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape* nonnull %16) #18
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %190) #18
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %188) #18
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %187) #18
  %256 = add nuw i64 %237, 1
  %257 = icmp eq i64 %256, %86
  br i1 %257, label %258, label %236

258:                                              ; preds = %196, %236, %88, %183
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %75) #18
  %259 = load float*, float** %39, align 8
  %260 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %9, i64 0, i32 2, i32 2, i32 0
  %261 = load i32, i32* %260, align 8
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds float, float* %259, i64 %262
  br label %264

264:                                              ; preds = %264, %258
  %265 = phi float* [ %263, %258 ], [ %267, %264 ]
  %266 = icmp ugt float* %265, %259
  %267 = getelementptr inbounds float, float* %265, i64 -1
  br i1 %266, label %264, label %268

268:                                              ; preds = %264
  %269 = bitcast float* %259 to i8*
  %270 = icmp eq i32 %261, 0
  br i1 %270, label %275, label %271

271:                                              ; preds = %268
  %272 = icmp sgt i32 %261, 4
  br i1 %272, label %273, label %274

273:                                              ; preds = %271
  call void @_Z7sk_freePv(i8* %269) #18
  br label %274

274:                                              ; preds = %273, %271
  store float* null, float** %39, align 8
  store i32 0, i32* %260, align 8
  br label %275

275:                                              ; preds = %274, %268
  %276 = load %class.SkPathEffect*, %class.SkPathEffect** %38, align 8
  %277 = icmp eq %class.SkPathEffect* %276, null
  br i1 %277, label %288, label %278

278:                                              ; preds = %275
  %279 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %276, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = atomicrmw add i32* %279, i32 -1 acq_rel
  %281 = icmp eq i32 %280, 1
  br i1 %281, label %282, label %288

282:                                              ; preds = %278
  %283 = bitcast %class.SkPathEffect* %276 to %class.SkRefCntBase*
  %284 = bitcast %class.SkPathEffect* %276 to void (%class.SkRefCntBase*)***
  %285 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %284, align 8
  %286 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %285, i64 2
  %287 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %286, align 8
  call void %287(%class.SkRefCntBase* nonnull %283) #18
  br label %288

288:                                              ; preds = %275, %278, %282
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %35) #18
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %24) #18
  ret void
}

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrStyledShapeC2ERK6SkPathRK7SkPaintNS_10DoSimplifyE(%class.GrStyledShape*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72), i1 zeroext) unnamed_addr #4 comdat align 2 {
  %5 = alloca %class.sk_sp.15, align 8
  %6 = alloca %class.GrStyle, align 8
  %7 = bitcast %class.GrStyle* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #18
  %8 = bitcast %class.sk_sp.15* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %6, i64 0, i32 0
  call void @_ZN11SkStrokeRecC1ERK7SkPaintf(%class.SkStrokeRec* nonnull %9, %class.SkPaint* dereferenceable(72) %2, float 1.000000e+00) #18
  %10 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %6, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %6, i64 0, i32 2, i32 2, i32 1
  store float* null, float** %11, align 8
  %12 = bitcast %class.SkPathEffect** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #18
  call void @_ZNK7SkPaint13refPathEffectEv(%class.sk_sp.15* nonnull sret %5, %class.SkPaint* %2) #18
  call void @_ZN7GrStyle14initPathEffectE5sk_spI12SkPathEffectE(%class.GrStyle* nonnull %6, %class.sk_sp.15* nonnull %5) #18
  %13 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %5, i64 0, i32 0
  %14 = load %class.SkPathEffect*, %class.SkPathEffect** %13, align 8
  %15 = icmp eq %class.SkPathEffect* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %class.SkPathEffect* %14 to %class.SkRefCntBase*
  %22 = bitcast %class.SkPathEffect* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  call void %25(%class.SkRefCntBase* nonnull %21) #18
  br label %26

26:                                               ; preds = %4, %16, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  call void @_ZN13GrStyledShapeC2ERK6SkPathRK7GrStyleNS_10DoSimplifyE(%class.GrStyledShape* %0, %class.SkPath* dereferenceable(16) %1, %class.GrStyle* nonnull dereferenceable(64) %6, i1 zeroext %3)
  %27 = load float*, float** %11, align 8
  %28 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %6, i64 0, i32 2, i32 2, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds float, float* %27, i64 %30
  br label %32

32:                                               ; preds = %32, %26
  %33 = phi float* [ %31, %26 ], [ %35, %32 ]
  %34 = icmp ugt float* %33, %27
  %35 = getelementptr inbounds float, float* %33, i64 -1
  br i1 %34, label %32, label %36

36:                                               ; preds = %32
  %37 = bitcast float* %27 to i8*
  %38 = icmp eq i32 %29, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = icmp sgt i32 %29, 4
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  call void @_Z7sk_freePv(i8* %37) #18
  br label %42

42:                                               ; preds = %41, %39
  store float* null, float** %11, align 8
  store i32 0, i32* %28, align 8
  br label %43

43:                                               ; preds = %42, %36
  %44 = load %class.SkPathEffect*, %class.SkPathEffect** %10, align 8
  %45 = icmp eq %class.SkPathEffect* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %class.SkPathEffect* %44 to %class.SkRefCntBase*
  %52 = bitcast %class.SkPathEffect* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  call void %55(%class.SkRefCntBase* nonnull %51) #18
  br label %56

56:                                               ; preds = %43, %46, %50
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #18
  ret void
}

declare void @_ZN11GrBlurUtils23drawShapeWithMaskFilterEP18GrRecordingContextP20GrSurfaceDrawContextPK6GrClipRK7SkPaintRK16SkMatrixProviderRK13GrStyledShape(%class.GrRecordingContext*, %class.GrSurfaceDrawContext*, %class.GrClip*, %class.SkPaint* dereferenceable(72), %class.SkMatrixProvider* dereferenceable(112), %class.GrStyledShape* dereferenceable(208)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 1
  %3 = load i32*, i32** %2, align 8
  %4 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i32, i32* %3, i64 %6
  br label %8

8:                                                ; preds = %8, %1
  %9 = phi i32* [ %7, %1 ], [ %11, %8 ]
  %10 = icmp ugt i32* %9, %3
  %11 = getelementptr inbounds i32, i32* %9, i64 -1
  br i1 %10, label %8, label %12

12:                                               ; preds = %8
  %13 = bitcast i32* %3 to i8*
  %14 = icmp eq i32 %5, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = icmp sgt i32 %5, 8
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @_Z7sk_freePv(i8* %13) #18
  br label %18

18:                                               ; preds = %17, %15
  store i32* null, i32** %2, align 8
  store i32 0, i32* %4, align 8
  br label %19

19:                                               ; preds = %12, %18
  %20 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 5, i32 1
  %21 = load %class.SkPath*, %class.SkPath** %20, align 8
  %22 = icmp eq %class.SkPath* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %21) #18
  store %class.SkPath* null, %class.SkPath** %20, align 8
  br label %24

24:                                               ; preds = %19, %23
  %25 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 1
  %26 = load float*, float** %25, align 8
  %27 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds float, float* %26, i64 %29
  br label %31

31:                                               ; preds = %31, %24
  %32 = phi float* [ %30, %24 ], [ %34, %31 ]
  %33 = icmp ugt float* %32, %26
  %34 = getelementptr inbounds float, float* %32, i64 -1
  br i1 %33, label %31, label %35

35:                                               ; preds = %31
  %36 = bitcast float* %26 to i8*
  %37 = icmp eq i32 %28, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = icmp sgt i32 %28, 4
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @_Z7sk_freePv(i8* %36) #18
  br label %41

41:                                               ; preds = %40, %38
  store float* null, float** %25, align 8
  store i32 0, i32* %27, align 8
  br label %42

42:                                               ; preds = %41, %35
  %43 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 1, i32 0
  %44 = load %class.SkPathEffect*, %class.SkPathEffect** %43, align 8
  %45 = icmp eq %class.SkPathEffect* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %class.SkPathEffect* %44 to %class.SkRefCntBase*
  %52 = bitcast %class.SkPathEffect* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  tail call void %55(%class.SkRefCntBase* nonnull %51) #18
  br label %56

56:                                               ; preds = %42, %46, %50
  %57 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 1
  %58 = load i8, i8* %57, align 8
  %59 = icmp eq i8 %58, 4
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = bitcast %class.GrStyledShape* %0 to %class.SkPath*
  %62 = getelementptr inbounds %class.SkPath, %class.SkPath* %61, i64 0, i32 4
  %63 = load i8, i8* %62, align 2
  %64 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 4
  %65 = lshr i8 %63, 1
  %66 = and i8 %65, 1
  store i8 %66, i8* %64, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %61) #18
  br label %67

67:                                               ; preds = %56, %60
  store i8 0, i8* %57, align 8
  %68 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %68, align 2
  %69 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %70, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkMatrixProviderD2Ev(%class.SkMatrixProvider*) unnamed_addr #4 comdat align 2 {
  ret void
}

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

declare void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22GrSubRunNoCachePainter17processSourceSDFTERK5SkZipIJ14SkGlyphVariant7SkPointEERK12SkStrikeSpecRK6SkFontff(%class.GrSubRunNoCachePainter* nocapture readonly, %class.SkZip.59* nocapture readonly dereferenceable(24), %class.SkStrikeSpec* dereferenceable(160), %class.SkFont* nocapture readonly dereferenceable(24), float, float) unnamed_addr #0 align 2 {
  %7 = alloca %"class.(anonymous namespace)::GlyphVector", align 8
  %8 = alloca %"class.(anonymous namespace)::GlyphVector", align 8
  %9 = alloca %"class.std::__1::function.268", align 8
  %10 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %531, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 2
  %15 = load %class.GrSubRunAllocator*, %class.GrSubRunAllocator** %14, align 8
  %16 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %2, i64 0, i32 4
  %17 = load float, float* %16, align 8
  %18 = trunc i64 %11 to i32
  %19 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %15, i64 0, i32 0
  %20 = icmp ult i32 %18, 134217471
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  tail call fastcc void @_ZZN12GrBagOfBytes16allocateBytesForIN12_GLOBAL__N_117SDFTSubRunNoCache10VertexDataEEEPciENKUlvE_clEv() #18
  unreachable

22:                                               ; preds = %13
  %23 = icmp eq i32 %18, 0
  %24 = shl i32 %18, 4
  %25 = select i1 %23, i32 1, i32 %24
  %26 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %15, i64 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, -4
  store i32 %28, i32* %26, align 8
  %29 = icmp slt i32 %28, %25
  br i1 %29, label %30, label %32

30:                                               ; preds = %22
  tail call void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes* %19, i32 %25, i32 4) #18
  %31 = load i32, i32* %26, align 8
  br label %32

32:                                               ; preds = %30, %22
  %33 = phi i32 [ %31, %30 ], [ %28, %22 ]
  %34 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %15, i64 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = sext i32 %33 to i64
  %37 = sub nsw i64 0, %36
  %38 = getelementptr inbounds i8, i8* %35, i64 %37
  %39 = sub nsw i32 %33, %25
  store i32 %39, i32* %26, align 8
  %40 = bitcast i8* %38 to %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData"*
  %41 = icmp sgt i32 %18, 0
  br i1 %41, label %42, label %122

42:                                               ; preds = %32
  %43 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %45 = and i64 %11, 4294967295
  br label %46

46:                                               ; preds = %46, %42
  %47 = phi float [ 0xC7EFFFFFE0000000, %42 ], [ %98, %46 ]
  %48 = phi float [ 0xC7EFFFFFE0000000, %42 ], [ %96, %46 ]
  %49 = phi float [ 0x47EFFFFFE0000000, %42 ], [ %94, %46 ]
  %50 = phi float [ 0x47EFFFFFE0000000, %42 ], [ %92, %46 ]
  %51 = phi i64 [ 0, %42 ], [ %115, %46 ]
  %52 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData", %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData"* %40, i64 %51
  %53 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %43, align 8
  %54 = load %struct.SkPoint*, %struct.SkPoint** %44, align 8
  %55 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %54, i64 %51
  %56 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %53, i64 %51, i32 0, i32 0
  %57 = load %class.SkGlyph*, %class.SkGlyph** %56, align 8
  %58 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %57, i64 0, i32 3
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %57, i64 0, i32 2
  %62 = load i16, i16* %61, align 4
  %63 = sext i16 %62 to i32
  %64 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %57, i64 0, i32 0
  %65 = load i16, i16* %64, align 8
  %66 = zext i16 %65 to i32
  %67 = add nuw nsw i32 %66, %60
  %68 = trunc i32 %67 to i16
  %69 = and i32 %63, 65535
  %70 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %57, i64 0, i32 1
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = add nuw nsw i32 %69, %72
  %74 = trunc i32 %73 to i16
  %75 = sitofp i16 %59 to float
  %76 = sitofp i16 %62 to float
  %77 = fmul float %17, %75
  %78 = fmul float %17, %76
  %79 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %55, i64 0, i32 0
  %80 = load float, float* %79, align 4
  %81 = fadd float %77, %80
  %82 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %54, i64 %51, i32 1
  %83 = load float, float* %82, align 4
  %84 = fadd float %78, %83
  %85 = sitofp i16 %68 to float
  %86 = sitofp i16 %74 to float
  %87 = fmul float %17, %85
  %88 = fmul float %17, %86
  %89 = fadd float %80, %87
  %90 = fadd float %83, %88
  %91 = fcmp olt float %81, %50
  %92 = select i1 %91, float %81, float %50
  %93 = fcmp olt float %84, %49
  %94 = select i1 %93, float %84, float %49
  %95 = fcmp olt float %48, %89
  %96 = select i1 %95, float %89, float %48
  %97 = fcmp olt float %47, %90
  %98 = select i1 %97, float %90, float %47
  %99 = bitcast %struct.SkPoint* %55 to i64*
  %100 = load i64, i64* %99, align 4
  %101 = zext i32 %73 to i64
  %102 = shl i64 %101, 48
  %103 = and i32 %67, 65535
  %104 = zext i32 %103 to i64
  %105 = shl nuw nsw i64 %104, 32
  %106 = shl nsw i32 %63, 16
  %107 = zext i32 %106 to i64
  %108 = zext i16 %59 to i64
  %109 = or i64 %107, %108
  %110 = or i64 %109, %105
  %111 = or i64 %110, %102
  %112 = bitcast %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData"* %52 to i64*
  store i64 %100, i64* %112, align 4
  %113 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData", %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData"* %40, i64 %51, i32 1
  %114 = bitcast %struct.GrIRect16* %113 to i64*
  store i64 %111, i64* %114, align 4
  %115 = add nuw nsw i64 %51, 1
  %116 = icmp eq i64 %115, %45
  br i1 %116, label %117, label %46

117:                                              ; preds = %46
  %118 = bitcast float %92 to i32
  %119 = bitcast float %94 to i32
  %120 = bitcast float %96 to i32
  %121 = bitcast float %98 to i32
  br label %122

122:                                              ; preds = %117, %32
  %123 = phi i32 [ %121, %117 ], [ -8388609, %32 ]
  %124 = phi i32 [ %120, %117 ], [ -8388609, %32 ]
  %125 = phi i32 [ %119, %117 ], [ 2139095039, %32 ]
  %126 = phi i32 [ %118, %117 ], [ 2139095039, %32 ]
  %127 = load i64, i64* %10, align 8
  %128 = ptrtoint i8* %38 to i64
  %129 = bitcast %"class.(anonymous namespace)::GlyphVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %129) #18
  %130 = getelementptr inbounds %class.SkZip.59, %class.SkZip.59* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %131 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %130, align 8
  call fastcc void @_ZN12_GLOBAL__N_111GlyphVector4MakeERK12SkStrikeSpec6SkSpanI14SkGlyphVariantEP17GrSubRunAllocator(%"class.(anonymous namespace)::GlyphVector"* nonnull sret %8, %class.SkStrikeSpec* dereferenceable(160) %2, %class.SkGlyphVariant* %131, i64 %127, %class.GrSubRunAllocator* %15) #18
  %132 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 5
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = icmp eq i8 %133, 2
  %136 = zext i1 %135 to i8
  %137 = add nsw i32 %134, -1
  %138 = icmp ult i32 %137, 2
  %139 = zext i1 %138 to i8
  %140 = bitcast %"class.(anonymous namespace)::GlyphVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %140) #18
  %141 = load i32, i32* %26, align 8
  %142 = and i32 %141, -8
  store i32 %142, i32* %26, align 8
  %143 = icmp slt i32 %142, 424
  br i1 %143, label %144, label %146

144:                                              ; preds = %122
  call void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes* %19, i32 424, i32 8) #18
  %145 = load i32, i32* %26, align 8
  br label %146

146:                                              ; preds = %144, %122
  %147 = phi i32 [ %145, %144 ], [ %142, %122 ]
  %148 = load i8*, i8** %34, align 8
  %149 = sext i32 %147 to i64
  %150 = sub nsw i64 0, %149
  %151 = getelementptr inbounds i8, i8* %148, i64 %150
  %152 = add nsw i32 %147, -424
  store i32 %152, i32* %26, align 8
  %153 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 0
  %154 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 0, i32 0
  call void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor* nonnull %153, %class.SkAutoDescriptor* nonnull dereferenceable(128) %154) #18
  %155 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 1, i32 0
  %156 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 0, i32 1, i32 0
  %157 = load %class.SkMaskFilter*, %class.SkMaskFilter** %156, align 8
  %158 = icmp eq %class.SkMaskFilter* %157, null
  br i1 %158, label %162, label %159

159:                                              ; preds = %146
  %160 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %157, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw add i32* %160, i32 1 monotonic
  br label %162

162:                                              ; preds = %159, %146
  store %class.SkMaskFilter* %157, %class.SkMaskFilter** %155, align 8
  %163 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 2, i32 0
  %164 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 0, i32 2, i32 0
  %165 = load %class.SkPathEffect*, %class.SkPathEffect** %164, align 8
  %166 = icmp eq %class.SkPathEffect* %165, null
  br i1 %166, label %170, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %165, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = atomicrmw add i32* %168, i32 1 monotonic
  br label %170

170:                                              ; preds = %167, %162
  store %class.SkPathEffect* %165, %class.SkPathEffect** %163, align 8
  %171 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 3, i32 0
  %172 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 0, i32 3, i32 0
  %173 = load %class.SkTypeface*, %class.SkTypeface** %172, align 8
  %174 = icmp eq %class.SkTypeface* %173, null
  br i1 %174, label %178, label %175

175:                                              ; preds = %170
  %176 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %173, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = atomicrmw add i32* %176, i32 1 monotonic
  br label %178

178:                                              ; preds = %175, %170
  store %class.SkTypeface* %173, %class.SkTypeface** %171, align 8
  %179 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 0, i32 4
  %180 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 0, i32 4
  %181 = bitcast float* %180 to i32*
  %182 = load i32, i32* %181, align 8
  %183 = bitcast float* %179 to i32*
  store i32 %182, i32* %183, align 8
  %184 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 1
  %185 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 1
  %186 = bitcast %class.SkSpan.300* %184 to i8*
  %187 = bitcast %class.SkSpan.300* %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %186, i8* align 8 %187, i64 16, i1 false) #18
  %188 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 2
  %189 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 2
  %190 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %189, i64 0, i32 0
  %191 = bitcast %class.sk_sp.301* %189 to <2 x i64>*
  %192 = load <2 x i64>, <2 x i64>* %191, align 8
  store %class.GrTextStrike* null, %class.GrTextStrike** %190, align 8
  %193 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 3
  %194 = bitcast %class.sk_sp.301* %188 to <2 x i64>*
  store <2 x i64> %192, <2 x i64>* %194, align 8
  %195 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0, i64 32
  %196 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0, i64 0
  %197 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0, i64 40
  %198 = bitcast i8* %197 to i64*
  %199 = bitcast i8* %195 to i8**
  store i8* %196, i8** %199, align 8
  %200 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0, i64 32
  store i64 34359738368, i64* %198, align 8
  %201 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0, i64 40
  %202 = bitcast i8* %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = lshr i64 %203, 1
  %205 = and i64 %204, 2147483647
  %206 = icmp ult i64 %205, 5
  br i1 %206, label %229, label %207

207:                                              ; preds = %178
  %208 = shl nuw i64 %205, 33
  store i64 %208, i64* %198, align 8
  %209 = call i8* @_Z15sk_malloc_throwmm(i64 %205, i64 8) #18
  %210 = load i64, i64* %198, align 8
  %211 = shl i64 %210, 2
  %212 = and i64 %211, 17179869176
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %217, label %214

214:                                              ; preds = %207
  %215 = load i8*, i8** %199, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %209, i8* align 1 %215, i64 %212, i1 false) #18
  %216 = load i64, i64* %198, align 8
  br label %217

217:                                              ; preds = %214, %207
  %218 = phi i64 [ %210, %207 ], [ %216, %214 ]
  %219 = and i64 %218, 1
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %224, label %221

221:                                              ; preds = %217
  %222 = load i8*, i8** %199, align 8
  call void @_Z7sk_freePv(i8* %222) #18
  %223 = load i64, i64* %198, align 8
  br label %224

224:                                              ; preds = %221, %217
  %225 = phi i64 [ %223, %221 ], [ %218, %217 ]
  store i8* %209, i8** %199, align 8
  %226 = and i64 %225, -4294967298
  %227 = or i64 %226, 1
  store i64 %227, i64* %198, align 8
  %228 = load i64, i64* %202, align 8
  br label %229

229:                                              ; preds = %224, %178
  %230 = phi i8* [ %196, %178 ], [ %209, %224 ]
  %231 = phi i64 [ 34359738368, %178 ], [ %227, %224 ]
  %232 = phi i64 [ %203, %178 ], [ %228, %224 ]
  %233 = and i64 %232, 4294967294
  %234 = and i64 %231, -4294967295
  %235 = or i64 %233, %234
  store i64 %235, i64* %198, align 8
  %236 = bitcast i8* %200 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %237 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %236, align 8
  %238 = icmp eq i64 %233, 0
  br i1 %238, label %260, label %239

239:                                              ; preds = %229
  %240 = bitcast i8* %195 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %241 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %237 to i64*
  %242 = bitcast i8* %230 to i64*
  %243 = load i64, i64* %241, align 4
  store i64 %243, i64* %242, align 4
  %244 = load i64, i64* %198, align 8
  %245 = and i64 %244, 4294967292
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %260, label %247

247:                                              ; preds = %239, %247
  %248 = phi i64 [ %255, %247 ], [ 1, %239 ]
  %249 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %240, align 8
  %250 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %249, i64 %248
  %251 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %237, i64 %248
  %252 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %251 to i64*
  %253 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %250 to i64*
  %254 = load i64, i64* %252, align 4
  store i64 %254, i64* %253, align 4
  %255 = add nuw nsw i64 %248, 1
  %256 = load i64, i64* %198, align 8
  %257 = lshr i64 %256, 1
  %258 = and i64 %257, 2147483647
  %259 = icmp ult i64 %255, %258
  br i1 %259, label %247, label %260

260:                                              ; preds = %247, %239, %229
  %261 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 4, i32 1, i64 0
  %262 = bitcast i32* %261 to i8*
  %263 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 4, i32 1, i64 0
  %264 = bitcast i32* %263 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 8 %264, i64 16, i1 false) #18
  %265 = bitcast i8* %151 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_117SDFTSubRunNoCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %266 = getelementptr inbounds i8, i8* %151, i64 8
  %267 = bitcast i8* %266 to i32*
  store i32 0, i32* %267, align 8
  %268 = getelementptr inbounds i8, i8* %151, i64 12
  %269 = bitcast i8* %268 to i32*
  store i32 %126, i32* %269, align 4
  %270 = getelementptr inbounds i8, i8* %151, i64 16
  %271 = bitcast i8* %270 to i32*
  store i32 %125, i32* %271, align 4
  %272 = getelementptr inbounds i8, i8* %151, i64 20
  %273 = bitcast i8* %272 to i32*
  store i32 %124, i32* %273, align 4
  %274 = getelementptr inbounds i8, i8* %151, i64 24
  %275 = bitcast i8* %274 to i32*
  store i32 %123, i32* %275, align 4
  %276 = getelementptr inbounds i8, i8* %151, i64 32
  %277 = bitcast i8* %276 to i64*
  store i64 %128, i64* %277, align 8
  %278 = getelementptr inbounds i8, i8* %151, i64 40
  %279 = bitcast i8* %278 to i64*
  store i64 %127, i64* %279, align 8
  %280 = getelementptr inbounds i8, i8* %151, i64 160
  %281 = bitcast i8* %280 to %"class.(anonymous namespace)::GlyphVector"*
  %282 = bitcast i8* %280 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor* %282, %class.SkAutoDescriptor* nonnull dereferenceable(128) %153) #18
  %283 = getelementptr inbounds i8, i8* %151, i64 288
  %284 = bitcast i8* %283 to %class.SkMaskFilter**
  %285 = load %class.SkMaskFilter*, %class.SkMaskFilter** %155, align 8
  %286 = icmp eq %class.SkMaskFilter* %285, null
  br i1 %286, label %290, label %287

287:                                              ; preds = %260
  %288 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %285, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = atomicrmw add i32* %288, i32 1 monotonic
  br label %290

290:                                              ; preds = %287, %260
  store %class.SkMaskFilter* %285, %class.SkMaskFilter** %284, align 8
  %291 = getelementptr inbounds i8, i8* %151, i64 296
  %292 = bitcast i8* %291 to %class.SkPathEffect**
  %293 = load %class.SkPathEffect*, %class.SkPathEffect** %163, align 8
  %294 = icmp eq %class.SkPathEffect* %293, null
  br i1 %294, label %298, label %295

295:                                              ; preds = %290
  %296 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %293, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = atomicrmw add i32* %296, i32 1 monotonic
  br label %298

298:                                              ; preds = %295, %290
  store %class.SkPathEffect* %293, %class.SkPathEffect** %292, align 8
  %299 = getelementptr inbounds i8, i8* %151, i64 304
  %300 = bitcast i8* %299 to %class.SkTypeface**
  %301 = load %class.SkTypeface*, %class.SkTypeface** %171, align 8
  %302 = icmp eq %class.SkTypeface* %301, null
  br i1 %302, label %306, label %303

303:                                              ; preds = %298
  %304 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %301, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = atomicrmw add i32* %304, i32 1 monotonic
  br label %306

306:                                              ; preds = %303, %298
  store %class.SkTypeface* %301, %class.SkTypeface** %300, align 8
  %307 = getelementptr inbounds i8, i8* %151, i64 312
  %308 = load i32, i32* %183, align 8
  %309 = bitcast i8* %307 to i32*
  store i32 %308, i32* %309, align 8
  %310 = getelementptr inbounds i8, i8* %151, i64 320
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %310, i8* align 8 %186, i64 16, i1 false) #18
  %311 = getelementptr inbounds i8, i8* %151, i64 336
  %312 = bitcast i8* %311 to %class.GrTextStrike**
  %313 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %7, i64 0, i32 2, i32 0
  %314 = load %class.GrTextStrike*, %class.GrTextStrike** %313, align 8
  %315 = icmp eq %class.GrTextStrike* %314, null
  br i1 %315, label %319, label %316

316:                                              ; preds = %306
  %317 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %314, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %318 = atomicrmw add i32* %317, i32 1 monotonic
  br label %319

319:                                              ; preds = %316, %306
  store %class.GrTextStrike* %314, %class.GrTextStrike** %312, align 8
  %320 = getelementptr inbounds i8, i8* %151, i64 344
  %321 = bitcast i8* %320 to i64*
  %322 = load i64, i64* %193, align 8
  store i64 %322, i64* %321, align 8
  %323 = getelementptr inbounds i8, i8* %151, i64 384
  %324 = getelementptr inbounds i8, i8* %151, i64 352
  %325 = getelementptr inbounds i8, i8* %151, i64 392
  %326 = bitcast i8* %325 to i64*
  %327 = bitcast i8* %323 to i8**
  store i8* %324, i8** %327, align 8
  store i64 34359738368, i64* %326, align 8
  %328 = icmp eq %"class.(anonymous namespace)::GlyphVector"* %7, %281
  br i1 %328, label %358, label %329

329:                                              ; preds = %319
  %330 = bitcast i8* %323 to %class.SkTArray.313*
  store i64 34359738368, i64* %326, align 8
  %331 = load i64, i64* %198, align 8
  %332 = lshr i64 %331, 1
  %333 = trunc i64 %332 to i32
  %334 = and i32 %333, 2147483647
  call void @_ZN8SkTArrayIN13GrDrawOpAtlas19BulkUseTokenUpdater8PlotDataELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.313* %330, i32 %334, i32 0) #18
  %335 = load i64, i64* %198, align 8
  %336 = and i64 %335, 4294967294
  %337 = load i64, i64* %326, align 8
  %338 = and i64 %337, -4294967295
  %339 = or i64 %338, %336
  store i64 %339, i64* %326, align 8
  %340 = bitcast i8* %195 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %341 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %340, align 8
  %342 = icmp eq i64 %336, 0
  br i1 %342, label %358, label %343

343:                                              ; preds = %329
  %344 = bitcast i8* %323 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  br label %345

345:                                              ; preds = %345, %343
  %346 = phi i64 [ 0, %343 ], [ %353, %345 ]
  %347 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %344, align 8
  %348 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %347, i64 %346
  %349 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %341, i64 %346
  %350 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %349 to i64*
  %351 = bitcast %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %348 to i64*
  %352 = load i64, i64* %350, align 4
  store i64 %352, i64* %351, align 4
  %353 = add nuw nsw i64 %346, 1
  %354 = load i64, i64* %326, align 8
  %355 = lshr i64 %354, 1
  %356 = and i64 %355, 2147483647
  %357 = icmp ult i64 %353, %356
  br i1 %357, label %345, label %358

358:                                              ; preds = %345, %329, %319
  %359 = getelementptr inbounds i8, i8* %151, i64 400
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %359, i8* align 8 %262, i64 16, i1 false) #18
  %360 = getelementptr inbounds i8, i8* %151, i64 416
  store i8 %136, i8* %360, align 8
  %361 = getelementptr inbounds i8, i8* %151, i64 417
  store i8 %139, i8* %361, align 1
  %362 = load i64, i64* %198, align 8
  %363 = and i64 %362, 1
  %364 = icmp eq i64 %363, 0
  br i1 %364, label %367, label %365

365:                                              ; preds = %358
  %366 = load i8*, i8** %199, align 8
  call void @_Z7sk_freePv(i8* %366) #18
  br label %367

367:                                              ; preds = %365, %358
  %368 = load %class.GrTextStrike*, %class.GrTextStrike** %313, align 8
  %369 = icmp eq %class.GrTextStrike* %368, null
  br i1 %369, label %388, label %370

370:                                              ; preds = %367
  %371 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %368, i64 0, i32 0
  %372 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %368, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = atomicrmw add i32* %372, i32 -1 acq_rel
  %374 = icmp eq i32 %373, 1
  br i1 %374, label %375, label %388

375:                                              ; preds = %370
  %376 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %371, i64 38
  %377 = bitcast %class.SkNVRefCnt.302* %376 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %377) #18
  %378 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %371, i64 6
  %379 = bitcast %class.SkNVRefCnt.302* %378 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %379) #18
  %380 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %371, i64 4
  %381 = bitcast %class.SkNVRefCnt.302* %380 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %382 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %381, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %381, align 8
  %383 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %382, null
  br i1 %383, label %386, label %384

384:                                              ; preds = %375
  %385 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %382 to i8*
  call void @_ZdaPv(i8* %385) #20
  br label %386

386:                                              ; preds = %384, %375
  %387 = bitcast %class.GrTextStrike* %368 to i8*
  call void @_ZdlPv(i8* %387) #20
  br label %388

388:                                              ; preds = %386, %370, %367
  %389 = load %class.SkTypeface*, %class.SkTypeface** %171, align 8
  %390 = icmp eq %class.SkTypeface* %389, null
  br i1 %390, label %401, label %391

391:                                              ; preds = %388
  %392 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %389, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %393 = atomicrmw add i32* %392, i32 -1 acq_rel
  %394 = icmp eq i32 %393, 1
  br i1 %394, label %395, label %401

395:                                              ; preds = %391
  %396 = bitcast %class.SkTypeface* %389 to %class.SkRefCntBase*
  %397 = bitcast %class.SkTypeface* %389 to void (%class.SkRefCntBase*)***
  %398 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %397, align 8
  %399 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %398, i64 2
  %400 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %399, align 8
  call void %400(%class.SkRefCntBase* nonnull %396) #18
  br label %401

401:                                              ; preds = %395, %391, %388
  %402 = load %class.SkPathEffect*, %class.SkPathEffect** %163, align 8
  %403 = icmp eq %class.SkPathEffect* %402, null
  br i1 %403, label %414, label %404

404:                                              ; preds = %401
  %405 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %402, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %406 = atomicrmw add i32* %405, i32 -1 acq_rel
  %407 = icmp eq i32 %406, 1
  br i1 %407, label %408, label %414

408:                                              ; preds = %404
  %409 = bitcast %class.SkPathEffect* %402 to %class.SkRefCntBase*
  %410 = bitcast %class.SkPathEffect* %402 to void (%class.SkRefCntBase*)***
  %411 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %410, align 8
  %412 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %411, i64 2
  %413 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %412, align 8
  call void %413(%class.SkRefCntBase* nonnull %409) #18
  br label %414

414:                                              ; preds = %408, %404, %401
  %415 = load %class.SkMaskFilter*, %class.SkMaskFilter** %155, align 8
  %416 = icmp eq %class.SkMaskFilter* %415, null
  br i1 %416, label %427, label %417

417:                                              ; preds = %414
  %418 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %415, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = atomicrmw add i32* %418, i32 -1 acq_rel
  %420 = icmp eq i32 %419, 1
  br i1 %420, label %421, label %427

421:                                              ; preds = %417
  %422 = bitcast %class.SkMaskFilter* %415 to %class.SkRefCntBase*
  %423 = bitcast %class.SkMaskFilter* %415 to void (%class.SkRefCntBase*)***
  %424 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %423, align 8
  %425 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %424, i64 2
  %426 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %425, align 8
  call void %426(%class.SkRefCntBase* nonnull %422) #18
  br label %427

427:                                              ; preds = %421, %417, %414
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %153) #18
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %140) #18
  %428 = load i64, i64* %202, align 8
  %429 = and i64 %428, 1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %434, label %431

431:                                              ; preds = %427
  %432 = bitcast i8* %200 to i8**
  %433 = load i8*, i8** %432, align 8
  call void @_Z7sk_freePv(i8* %433) #18
  br label %434

434:                                              ; preds = %431, %427
  %435 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %8, i64 0, i32 2, i32 0
  %436 = load %class.GrTextStrike*, %class.GrTextStrike** %435, align 8
  %437 = icmp eq %class.GrTextStrike* %436, null
  br i1 %437, label %456, label %438

438:                                              ; preds = %434
  %439 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %436, i64 0, i32 0
  %440 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %436, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %441 = atomicrmw add i32* %440, i32 -1 acq_rel
  %442 = icmp eq i32 %441, 1
  br i1 %442, label %443, label %456

443:                                              ; preds = %438
  %444 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %439, i64 38
  %445 = bitcast %class.SkNVRefCnt.302* %444 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %445) #18
  %446 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %439, i64 6
  %447 = bitcast %class.SkNVRefCnt.302* %446 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %447) #18
  %448 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %439, i64 4
  %449 = bitcast %class.SkNVRefCnt.302* %448 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %450 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %449, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %449, align 8
  %451 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %450, null
  br i1 %451, label %454, label %452

452:                                              ; preds = %443
  %453 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %450 to i8*
  call void @_ZdaPv(i8* %453) #20
  br label %454

454:                                              ; preds = %452, %443
  %455 = bitcast %class.GrTextStrike* %436 to i8*
  call void @_ZdlPv(i8* %455) #20
  br label %456

456:                                              ; preds = %454, %438, %434
  %457 = load %class.SkTypeface*, %class.SkTypeface** %172, align 8
  %458 = icmp eq %class.SkTypeface* %457, null
  br i1 %458, label %469, label %459

459:                                              ; preds = %456
  %460 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %457, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %461 = atomicrmw add i32* %460, i32 -1 acq_rel
  %462 = icmp eq i32 %461, 1
  br i1 %462, label %463, label %469

463:                                              ; preds = %459
  %464 = bitcast %class.SkTypeface* %457 to %class.SkRefCntBase*
  %465 = bitcast %class.SkTypeface* %457 to void (%class.SkRefCntBase*)***
  %466 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %465, align 8
  %467 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %466, i64 2
  %468 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %467, align 8
  call void %468(%class.SkRefCntBase* nonnull %464) #18
  br label %469

469:                                              ; preds = %463, %459, %456
  %470 = load %class.SkPathEffect*, %class.SkPathEffect** %164, align 8
  %471 = icmp eq %class.SkPathEffect* %470, null
  br i1 %471, label %482, label %472

472:                                              ; preds = %469
  %473 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %470, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %474 = atomicrmw add i32* %473, i32 -1 acq_rel
  %475 = icmp eq i32 %474, 1
  br i1 %475, label %476, label %482

476:                                              ; preds = %472
  %477 = bitcast %class.SkPathEffect* %470 to %class.SkRefCntBase*
  %478 = bitcast %class.SkPathEffect* %470 to void (%class.SkRefCntBase*)***
  %479 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %478, align 8
  %480 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %479, i64 2
  %481 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %480, align 8
  call void %481(%class.SkRefCntBase* nonnull %477) #18
  br label %482

482:                                              ; preds = %476, %472, %469
  %483 = load %class.SkMaskFilter*, %class.SkMaskFilter** %156, align 8
  %484 = icmp eq %class.SkMaskFilter* %483, null
  br i1 %484, label %495, label %485

485:                                              ; preds = %482
  %486 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %483, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %487 = atomicrmw add i32* %486, i32 -1 acq_rel
  %488 = icmp eq i32 %487, 1
  br i1 %488, label %489, label %495

489:                                              ; preds = %485
  %490 = bitcast %class.SkMaskFilter* %483 to %class.SkRefCntBase*
  %491 = bitcast %class.SkMaskFilter* %483 to void (%class.SkRefCntBase*)***
  %492 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %491, align 8
  %493 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %492, i64 2
  %494 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %493, align 8
  call void %494(%class.SkRefCntBase* nonnull %490) #18
  br label %495

495:                                              ; preds = %482, %485, %489
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %154) #18
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %129) #18
  %496 = icmp eq i8* %151, null
  br i1 %496, label %531, label %497

497:                                              ; preds = %495
  %498 = bitcast i8* %151 to %class.GrAtlasSubRun*
  %499 = ptrtoint i8* %151 to i64
  %500 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 3
  %501 = load %class.GrClip*, %class.GrClip** %500, align 8
  %502 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 4
  %503 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %502, align 8
  %504 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 5
  %505 = load %class.SkGlyphRunList*, %class.SkGlyphRunList** %504, align 8
  %506 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 6
  %507 = load %class.SkPaint*, %class.SkPaint** %506, align 8
  %508 = getelementptr inbounds %class.GrSubRunNoCachePainter, %class.GrSubRunNoCachePainter* %0, i64 0, i32 1
  %509 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %508, align 8
  %510 = bitcast i8* %151 to { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)***
  %511 = load { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)**, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*** %510, align 8
  %512 = getelementptr inbounds { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)** %511, i64 4
  %513 = load { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)*, { %class.GrClip*, %class.GrOp* } (%class.GrAtlasSubRun*, %class.GrClip*, %class.SkMatrixProvider*, %class.SkGlyphRunList*, %class.SkPaint*, %class.GrSurfaceDrawContext*, i64)** %512, align 8
  %514 = call { %class.GrClip*, %class.GrOp* } %513(%class.GrAtlasSubRun* nonnull %498, %class.GrClip* %501, %class.SkMatrixProvider* dereferenceable(112) %503, %class.SkGlyphRunList* dereferenceable(48) %505, %class.SkPaint* dereferenceable(72) %507, %class.GrSurfaceDrawContext* %509, i64 %499) #18
  %515 = extractvalue { %class.GrClip*, %class.GrOp* } %514, 1
  %516 = icmp eq %class.GrOp* %515, null
  br i1 %516, label %531, label %517

517:                                              ; preds = %497
  %518 = extractvalue { %class.GrClip*, %class.GrOp* } %514, 0
  %519 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %508, align 8
  %520 = bitcast %"class.std::__1::function.268"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %520) #18
  %521 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %9, i64 0, i32 0, i32 1, i32 0
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j, void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)** %521, align 8
  %522 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %9, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %522, align 8
  call void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext* %519, %class.GrClip* %518, %class.GrOp* nonnull %515, %"class.std::__1::function.268"* nonnull dereferenceable(32) %9) #18
  %523 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %522, align 8
  %524 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %523, i64 0, i32 1
  %525 = load void (i8*)*, void (i8*)** %524, align 8
  %526 = icmp eq void (i8*)* %525, null
  br i1 %526, label %530, label %527

527:                                              ; preds = %517
  %528 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %9, i64 0, i32 0, i32 0, i32 0
  %529 = load i8*, i8** %528, align 8
  call void %525(i8* %529) #18
  br label %530

530:                                              ; preds = %527, %517
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %520) #18
  br label %531

531:                                              ; preds = %530, %497, %495, %6
  ret void
}

declare void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrOp*, %"class.std::__1::function.268"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22GrSubRunNoCachePainterD0Ev(%class.GrSubRunNoCachePainter*) unnamed_addr #12 comdat align 2 {
  %2 = bitcast %class.GrSubRunNoCachePainter* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

declare zeroext i1 @_ZNK12SkColorSpace13gammaIsLinearEv(%class.SkColorSpace*) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

declare void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix*, float, float, %struct.SkPoint*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12GrBagOfBytesD1Ev(%class.GrBagOfBytes*) unnamed_addr #13

declare zeroext i1 @_ZeqRK8SkMatrixS1_(%class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26SkGlyphRunPainterInterfaceD2Ev(%class.SkGlyphRunPainterInterface*) unnamed_addr #4 comdat align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #14

declare void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @_ZZN12GrBagOfBytes16allocateBytesForIN12_GLOBAL__N_111GlyphVector7VariantEEEPciENKUlvE_clEv() unnamed_addr #15 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #19
  unreachable
}

declare void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor*, %class.SkAutoDescriptor* dereferenceable(128)) unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN13GrDrawOpAtlas19BulkUseTokenUpdater8PlotDataELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.313*, i32, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.313, %class.SkTArray.313* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %65

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %65, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #18
  %45 = load i64, i64* %4, align 8
  %46 = shl i64 %45, 2
  %47 = and i64 %46, 17179869176
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = bitcast %class.SkTArray.313* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #18
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  %57 = bitcast %class.SkTArray.313* %0 to i8**
  br i1 %56, label %61, label %58

58:                                               ; preds = %53
  %59 = load i8*, i8** %57, align 8
  tail call void @_Z7sk_freePv(i8* %59) #18
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %60, %58 ], [ %54, %53 ]
  store i8* %44, i8** %57, align 8
  %63 = and i64 %62, -4294967298
  %64 = or i64 %63, 1
  store i64 %64, i64* %4, align 8
  br label %65

65:                                               ; preds = %61, %32, %21
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_116DirectMaskSubRunD2Ev(%"class.(anonymous namespace)::DirectMaskSubRun"*) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [10 x i8*] }, { [13 x i8*], [10 x i8*] }* @_ZTVN12_GLOBAL__N_116DirectMaskSubRunE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [10 x i8*] }, { [13 x i8*], [10 x i8*] }* @_ZTVN12_GLOBAL__N_116DirectMaskSubRunE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7, i32 4, i32 0, i32 0, i32 0, i64 40
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7, i32 4, i32 0, i32 0, i32 0, i64 32
  %11 = bitcast i8* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @_Z7sk_freePv(i8* %12) #18
  br label %13

13:                                               ; preds = %9, %1
  %14 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7, i32 2, i32 0
  %15 = load %class.GrTextStrike*, %class.GrTextStrike** %14, align 8
  %16 = icmp eq %class.GrTextStrike* %15, null
  br i1 %16, label %35, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %15, i64 0, i32 0
  %19 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %35

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 38
  %24 = bitcast %class.SkNVRefCnt.302* %23 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %24) #18
  %25 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 6
  %26 = bitcast %class.SkNVRefCnt.302* %25 to %class.SkAutoDescriptor*
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %26) #18
  %27 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 4
  %28 = bitcast %class.SkNVRefCnt.302* %27 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %29 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  %30 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %22
  %32 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29 to i8*
  tail call void @_ZdaPv(i8* %32) #20
  br label %33

33:                                               ; preds = %31, %22
  %34 = bitcast %class.GrTextStrike* %15 to i8*
  tail call void @_ZdlPv(i8* %34) #20
  br label %35

35:                                               ; preds = %13, %17, %33
  %36 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7, i32 0, i32 3, i32 0
  %37 = load %class.SkTypeface*, %class.SkTypeface** %36, align 8
  %38 = icmp eq %class.SkTypeface* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = bitcast %class.SkTypeface* %37 to %class.SkRefCntBase*
  %45 = bitcast %class.SkTypeface* %37 to void (%class.SkRefCntBase*)***
  %46 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, i64 2
  %48 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, align 8
  tail call void %48(%class.SkRefCntBase* nonnull %44) #18
  br label %49

49:                                               ; preds = %43, %39, %35
  %50 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7, i32 0, i32 2, i32 0
  %51 = load %class.SkPathEffect*, %class.SkPathEffect** %50, align 8
  %52 = icmp eq %class.SkPathEffect* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkPathEffect* %51 to %class.SkRefCntBase*
  %59 = bitcast %class.SkPathEffect* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  tail call void %62(%class.SkRefCntBase* nonnull %58) #18
  br label %63

63:                                               ; preds = %57, %53, %49
  %64 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7, i32 0, i32 1, i32 0
  %65 = load %class.SkMaskFilter*, %class.SkMaskFilter** %64, align 8
  %66 = icmp eq %class.SkMaskFilter* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %65, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = bitcast %class.SkMaskFilter* %65 to %class.SkRefCntBase*
  %73 = bitcast %class.SkMaskFilter* %65 to void (%class.SkRefCntBase*)***
  %74 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, i64 2
  %76 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, align 8
  tail call void %76(%class.SkRefCntBase* nonnull %72) #18
  br label %77

77:                                               ; preds = %63, %67, %71
  %78 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7, i32 0, i32 0
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %78) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8GrSubRun, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %79 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %80 = load %class.GrSubRun*, %class.GrSubRun** %79, align 8
  store %class.GrSubRun* null, %class.GrSubRun** %79, align 8
  %81 = icmp eq %class.GrSubRun* %80, null
  br i1 %81, label %86, label %82

82:                                               ; preds = %77
  %83 = bitcast %class.GrSubRun* %80 to void (%class.GrSubRun*)***
  %84 = load void (%class.GrSubRun*)**, void (%class.GrSubRun*)*** %83, align 8
  %85 = load void (%class.GrSubRun*)*, void (%class.GrSubRun*)** %84, align 8
  tail call void %85(%class.GrSubRun* nonnull %80) #18
  br label %86

86:                                               ; preds = %77, %82
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_116DirectMaskSubRunD0Ev(%"class.(anonymous namespace)::DirectMaskSubRun"*) unnamed_addr #12 align 2 {
  tail call void @_ZN12_GLOBAL__N_116DirectMaskSubRunD2Ev(%"class.(anonymous namespace)::DirectMaskSubRun"* %0) #18
  %2 = bitcast %"class.(anonymous namespace)::DirectMaskSubRun"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_116DirectMaskSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext(%"class.(anonymous namespace)::DirectMaskSubRun"*, %class.GrClip*, %class.SkMatrixProvider* dereferenceable(112), %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.GrSurfaceDrawContext*) unnamed_addr #4 align 2 {
  %7 = alloca %"class.std::__1::function.268", align 8
  %8 = tail call { %class.GrClip*, %class.GrOp* } @_ZNK12_GLOBAL__N_116DirectMaskSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE(%"class.(anonymous namespace)::DirectMaskSubRun"* %0, %class.GrClip* %1, %class.SkMatrixProvider* dereferenceable(112) %2, %class.SkGlyphRunList* dereferenceable(48) %3, %class.SkPaint* dereferenceable(72) %4, %class.GrSurfaceDrawContext* %5, i64 0)
  %9 = extractvalue { %class.GrClip*, %class.GrOp* } %8, 1
  %10 = icmp eq %class.GrOp* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %6
  %12 = extractvalue { %class.GrClip*, %class.GrOp* } %8, 0
  %13 = bitcast %"class.std::__1::function.268"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #18
  %14 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %7, i64 0, i32 0, i32 1, i32 0
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j, void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %7, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %15, align 8
  call void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext* %5, %class.GrClip* %12, %class.GrOp* nonnull %9, %"class.std::__1::function.268"* nonnull dereferenceable(32) %7) #18
  %16 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %16, i64 0, i32 1
  %18 = load void (i8*)*, void (i8*)** %17, align 8
  %19 = icmp eq void (i8*)* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %7, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void %18(i8* %22) #18
  br label %23

23:                                               ; preds = %20, %11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #18
  br label %24

24:                                               ; preds = %6, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_116DirectMaskSubRun8canReuseERK7SkPaintRK8SkMatrix(%"class.(anonymous namespace)::DirectMaskSubRun"* nocapture readonly, %class.SkPaint* nocapture readnone dereferenceable(72), %class.SkMatrix* dereferenceable(40)) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 3
  %5 = load %class.GrTextBlob*, %class.GrTextBlob** %4, align 8
  %6 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %5, i64 0, i32 8
  %7 = tail call fastcc { i64, float } @_ZN12_GLOBAL__N_123check_integer_translateERK8SkMatrixS2_(%class.SkMatrix* dereferenceable(40) %6, %class.SkMatrix* dereferenceable(40) %2)
  %8 = extractvalue { i64, float } %7, 0
  %9 = extractvalue { i64, float } %7, 1
  %10 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 6
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %3
  %14 = lshr i64 %8, 32
  %15 = trunc i64 %14 to i32
  %16 = bitcast i32 %15 to float
  %17 = fcmp oeq float %16, 0.000000e+00
  br i1 %17, label %18, label %23

18:                                               ; preds = %13
  %19 = fcmp oeq float %9, 0.000000e+00
  br label %23

20:                                               ; preds = %3
  %21 = trunc i64 %8 to i8
  %22 = icmp ne i8 %21, 0
  br label %23

23:                                               ; preds = %13, %18, %20
  %24 = phi i1 [ %22, %20 ], [ false, %13 ], [ %19, %18 ]
  ret i1 %24
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %class.GrAtlasSubRun* @_ZN12_GLOBAL__N_116DirectMaskSubRun23testingOnly_atlasSubRunEv(%"class.(anonymous namespace)::DirectMaskSubRun"* readnone) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 1
  ret %class.GrAtlasSubRun* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_116DirectMaskSubRun12vertexStrideERK8SkMatrix(%"class.(anonymous namespace)::DirectMaskSubRun"* nocapture readonly, %class.SkMatrix* nocapture readnone dereferenceable(40)) unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  %6 = select i1 %5, i64 12, i64 16
  ret i64 %6
}

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_116DirectMaskSubRun10glyphCountEv(%"class.(anonymous namespace)::DirectMaskSubRun"* nocapture readonly) unnamed_addr #16 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal { %class.GrClip*, %class.GrOp* } @_ZNK12_GLOBAL__N_116DirectMaskSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE(%"class.(anonymous namespace)::DirectMaskSubRun"*, %class.GrClip*, %class.SkMatrixProvider* dereferenceable(112), %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.GrSurfaceDrawContext*, i64) unnamed_addr #0 align 2 {
  %8 = alloca %class.sk_sp.209, align 8
  %9 = alloca <2 x float>, align 8
  %10 = alloca %"class.std::__1::tuple.333", align 4
  %11 = alloca %class.GrPaint, align 8
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRGBA4f.337*
  %14 = alloca %class.sk_sp.58, align 8
  %15 = inttoptr i64 %6 to %class.GrAtlasSubRun*
  %16 = ptrtoint %class.GrClip* %1 to i64
  %17 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %2, i64 0, i32 2
  %18 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %3, i64 0, i32 3
  %19 = bitcast %struct.SkPoint* %18 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 8
  %21 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %22 = load i16, i16* %21, align 2
  %23 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 4, i32 0, i32 0, i32 1, i32 0
  %24 = load i16, i16* %23, align 2
  %25 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %26 = load i16, i16* %25, align 2
  %27 = sext i16 %26 to i64
  %28 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 4, i32 0, i32 1, i32 1, i32 0
  %29 = load i16, i16* %28, align 2
  %30 = sext i16 %29 to i64
  %31 = shl nsw i64 %30, 32
  %32 = sub nsw i64 0, %31
  %33 = bitcast <2 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #18
  %34 = bitcast <2 x float>* %9 to %struct.SkPoint*
  %35 = getelementptr inbounds <2 x float>, <2 x float>* %9, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %35, align 8
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %34, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %36, align 4
  %37 = extractelement <2 x float> %20, i32 0
  %38 = extractelement <2 x float> %20, i32 1
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %17, float %37, float %38, %struct.SkPoint* nonnull %34) #18
  %39 = load <2 x float>, <2 x float>* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #18
  %40 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 3
  %41 = load %class.GrTextBlob*, %class.GrTextBlob** %40, align 8
  %42 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %41, i64 0, i32 8, i32 0, i64 2
  %43 = load float, float* %42, align 4
  %44 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %41, i64 0, i32 8, i32 0, i64 5
  %45 = load float, float* %44, align 4
  %46 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %41, i64 0, i32 8, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, 192
  %49 = icmp eq i32 %48, 128
  br i1 %49, label %50, label %54

50:                                               ; preds = %7
  %51 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %41, i64 0, i32 8
  %52 = call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %51) #18
  %53 = zext i8 %52 to i32
  store i32 %53, i32* %46, align 4
  br label %54

54:                                               ; preds = %50, %7
  %55 = phi i32 [ %53, %50 ], [ %47, %7 ]
  %56 = and i32 %55, 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %41, i64 0, i32 8, i32 0, i64 8
  %60 = load float, float* %59, align 4
  %61 = fcmp une float %60, 0.000000e+00
  %62 = fdiv float 1.000000e+00, %60
  %63 = select i1 %61, float %62, float %60
  %64 = fmul float %43, %63
  %65 = fmul float %45, %63
  br label %66

66:                                               ; preds = %54, %58
  %67 = phi float [ %64, %58 ], [ %43, %54 ]
  %68 = phi float [ %65, %58 ], [ %45, %54 ]
  %69 = extractelement <2 x float> %39, i32 0
  %70 = fsub float %69, %67
  %71 = extractelement <2 x float> %39, i32 1
  %72 = fsub float %71, %68
  %73 = fadd float %70, 5.000000e-01
  %74 = call float @llvm.floor.f32(float %73) #18
  %75 = fcmp olt float %74, 0x41DFFFFFE0000000
  %76 = select i1 %75, float %74, float 0x41DFFFFFE0000000
  %77 = fcmp ogt float %76, 0xC1DFFFFFE0000000
  %78 = select i1 %77, float %76, float 0xC1DFFFFFE0000000
  %79 = fptosi float %78 to i32
  %80 = fadd float %72, 5.000000e-01
  %81 = call float @llvm.floor.f32(float %80) #18
  %82 = fcmp olt float %81, 0x41DFFFFFE0000000
  %83 = select i1 %82, float %81, float 0x41DFFFFFE0000000
  %84 = fcmp ogt float %83, 0xC1DFFFFFE0000000
  %85 = select i1 %84, float %83, float 0xC1DFFFFFE0000000
  %86 = fptosi float %85 to i32
  %87 = sext i16 %22 to i64
  %88 = sext i32 %79 to i64
  %89 = add nsw i64 %88, %87
  %90 = icmp slt i64 %89, 2147483647
  %91 = select i1 %90, i64 %89, i64 2147483647
  %92 = icmp sgt i64 %91, -2147483647
  %93 = select i1 %92, i64 %91, i64 -2147483647
  %94 = sext i16 %24 to i64
  %95 = sext i32 %86 to i64
  %96 = add nsw i64 %95, %94
  %97 = icmp slt i64 %96, 2147483647
  %98 = select i1 %97, i64 %96, i64 2147483647
  %99 = icmp sgt i64 %98, -2147483647
  %100 = select i1 %99, i64 %98, i64 -2147483647
  %101 = sub nsw i64 %88, %27
  %102 = icmp slt i64 %101, 2147483647
  %103 = select i1 %102, i64 %101, i64 2147483647
  %104 = icmp sgt i64 %103, -2147483647
  %105 = select i1 %104, i64 %103, i64 -2147483647
  %106 = ashr exact i64 %32, 32
  %107 = add nsw i64 %106, %95
  %108 = icmp slt i64 %107, 2147483647
  %109 = select i1 %108, i64 %107, i64 2147483647
  %110 = icmp sgt i64 %109, -2147483647
  %111 = select i1 %110, i64 %109, i64 -2147483647
  %112 = trunc i64 %93 to i32
  %113 = trunc i64 %100 to i32
  %114 = sitofp i32 %112 to float
  %115 = insertelement <2 x float> undef, float %114, i32 0
  %116 = sitofp i32 %113 to float
  %117 = insertelement <2 x float> %115, float %116, i32 1
  %118 = trunc i64 %105 to i32
  %119 = sitofp i32 %118 to float
  %120 = insertelement <2 x float> undef, float %119, i32 0
  %121 = trunc i64 %111 to i32
  %122 = sitofp i32 %121 to float
  %123 = insertelement <2 x float> %120, float %122, i32 1
  %124 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %125 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %124, align 8
  %126 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %125, i64 0, i32 6
  %127 = bitcast %struct.SkISize* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = trunc i64 %128 to i32
  %130 = sitofp i32 %129 to float
  %131 = lshr i64 %128, 32
  %132 = trunc i64 %131 to i32
  %133 = sitofp i32 %132 to float
  %134 = insertelement <2 x float> undef, float %130, i32 0
  %135 = insertelement <2 x float> %134, float %133, i32 1
  %136 = bitcast %"class.std::__1::tuple.333"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %136) #18
  %137 = getelementptr inbounds %"class.std::__1::tuple.333", %"class.std::__1::tuple.333"* %10, i64 0, i32 0, i32 0, i32 0
  %138 = getelementptr inbounds %"class.std::__1::tuple.333", %"class.std::__1::tuple.333"* %10, i64 0, i32 0, i32 1, i32 0, i32 2
  %139 = bitcast %"class.std::__1::tuple.333"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %139, i8 -86, i64 20, i1 false)
  call fastcc void @_ZN12_GLOBAL__N_112_GLOBAL__N_114calculate_clipEPK6GrClip6SkRectS4_(%"class.std::__1::tuple.333"* nonnull sret %10, %class.GrClip* %1, <2 x float> zeroinitializer, <2 x float> %135, <2 x float> %117, <2 x float> %123)
  %140 = getelementptr inbounds %"class.std::__1::tuple.333", %"class.std::__1::tuple.333"* %10, i64 0, i32 0, i32 1, i32 0
  %141 = load i32, i32* %137, align 4
  switch i32 %141, label %143 [
    i32 0, label %254
    i32 1, label %142
    i32 3, label %142
  ]

142:                                              ; preds = %66, %66
  br label %143

143:                                              ; preds = %66, %142
  %144 = phi i64 [ %16, %66 ], [ 0, %142 ]
  %145 = bitcast %class.GrPaint* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %145) #18
  %146 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %147 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 2, i32 0, i32 0, i32 0
  %148 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 3
  %149 = bitcast %class.GrPaint* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %149, i8 -86, i64 28, i1 false)
  %150 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 6, i64 0
  %151 = bitcast i8* %150 to i32*
  store i32 -1431655766, i32* %151, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 0, i64 24, i1 false) #18
  store i8 1, i8* %148, align 8
  %152 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 5
  %153 = bitcast %struct.SkRGBA4f.337* %152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %153, i8* align 4 bitcast (%struct.SkRGBA4f.337* @_ZL17SK_PMColor4fWHITE to i8*), i64 16, i1 false) #18
  %154 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %154) #18
  %155 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 2
  %156 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %156, i8 -1, i64 16, i1 false)
  %157 = load i32, i32* %155, align 8
  %158 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 0, i32 1
  %159 = load %class.GrRecordingContext*, %class.GrRecordingContext** %158, align 8
  %160 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 0, i32 3
  %161 = icmp eq i32 %157, 2
  br i1 %161, label %162, label %164

162:                                              ; preds = %143
  %163 = call zeroext i1 @_Z25SkPaintToGrPaintWithBlendP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProvider11SkBlendModeP7GrPaint(%class.GrRecordingContext* %159, %class.GrColorInfo* dereferenceable(24) %160, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrixProvider* dereferenceable(112) %2, i32 2, %class.GrPaint* nonnull %11) #18
  br label %171

164:                                              ; preds = %143
  %165 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 5, i32 2
  %166 = call zeroext i1 @_Z16SkPaintToGrPaintP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderP7GrPaint(%class.GrRecordingContext* %159, %class.GrColorInfo* dereferenceable(24) %160, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrixProvider* dereferenceable(112) %2, %class.GrPaint* nonnull %11) #18
  %167 = bitcast %struct.SkRGBA4f.337* %152 to <2 x float>*
  %168 = load <2 x float>, <2 x float>* %167, align 4
  %169 = bitcast float* %165 to <2 x float>*
  %170 = load <2 x float>, <2 x float>* %169, align 4
  br label %171

171:                                              ; preds = %162, %164
  %172 = phi <2 x float> [ <float 1.000000e+00, float 1.000000e+00>, %162 ], [ %168, %164 ]
  %173 = phi <2 x float> [ <float 1.000000e+00, float 1.000000e+00>, %162 ], [ %170, %164 ]
  %174 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  store <2 x float> %172, <2 x float>* %174, align 8
  %175 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  store <2 x float> %173, <2 x float>* %175, align 8
  %176 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 1
  %177 = bitcast %struct.SkIRect* %140 to i64*
  %178 = load i64, i64* %177, align 4
  %179 = bitcast i32* %138 to i64*
  %180 = load i64, i64* %179, align 4
  %181 = load %class.GrTextBlob*, %class.GrTextBlob** %40, align 8
  %182 = icmp eq %class.GrTextBlob* %181, null
  br i1 %182, label %186, label %183

183:                                              ; preds = %171
  %184 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %181, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = atomicrmw add i32* %184, i32 1 monotonic, !noalias !39
  br label %186

186:                                              ; preds = %171, %183
  %187 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %14, i64 0, i32 0
  store %class.GrTextBlob* %181, %class.GrTextBlob** %187, align 8, !alias.scope !39
  %188 = bitcast %class.sk_sp.209* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #18
  %189 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %190 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %189, align 8, !noalias !42
  %191 = bitcast %class.GrSurfaceProxy* %190 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %192 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %191, align 8, !noalias !42
  %193 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %192, i64 5
  %194 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %193, align 8, !noalias !42
  %195 = call %class.GrRenderTargetProxy* %194(%class.GrSurfaceProxy* %190) #18, !noalias !42
  call void @_ZN19GrRenderTargetProxy6arenasEv(%class.sk_sp.209* nonnull sret %8, %class.GrRenderTargetProxy* %195) #18
  %196 = getelementptr inbounds %class.sk_sp.209, %class.sk_sp.209* %8, i64 0, i32 0
  %197 = load %class.GrArenas*, %class.GrArenas** %196, align 8
  %198 = getelementptr inbounds %class.GrArenas, %class.GrArenas* %197, i64 0, i32 2
  %199 = icmp eq %class.GrArenas* %197, null
  br i1 %199, label %211, label %200

200:                                              ; preds = %186
  %201 = getelementptr inbounds %class.GrArenas, %class.GrArenas* %197, i64 0, i32 0
  %202 = getelementptr inbounds %class.GrArenas, %class.GrArenas* %197, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = atomicrmw add i32* %202, i32 -1 acq_rel
  %204 = icmp eq i32 %203, 1
  br i1 %204, label %205, label %211

205:                                              ; preds = %200
  %206 = getelementptr inbounds %class.SkNVRefCnt.210, %class.SkNVRefCnt.210* %201, i64 10
  %207 = bitcast %class.SkNVRefCnt.210* %206 to %class.GrBagOfBytes*
  call void @_ZN12GrBagOfBytesD1Ev(%class.GrBagOfBytes* %207) #18
  %208 = getelementptr inbounds %class.SkNVRefCnt.210, %class.SkNVRefCnt.210* %201, i64 2
  %209 = bitcast %class.SkNVRefCnt.210* %208 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %209) #18
  %210 = bitcast %class.GrArenas* %197 to i8*
  call void @_ZdlPv(i8* %210) #20
  br label %211

211:                                              ; preds = %186, %200, %205
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #18
  %212 = call %"struct.GrAtlasTextOp::Geometry"* @_ZN13GrAtlasTextOp8Geometry11MakeForBlobERK13GrAtlasSubRunRK8SkMatrix7SkPoint7SkIRect5sk_spI10GrTextBlobERK8SkRGBA4fIL11SkAlphaType2EEP12SkArenaAlloc(%class.GrAtlasSubRun* dereferenceable(8) %176, %class.SkMatrix* dereferenceable(40) %17, <2 x float> %20, i64 %178, i64 %180, %class.sk_sp.58* nonnull %14, %struct.SkRGBA4f.337* nonnull dereferenceable(16) %13, %class.SkArenaAlloc* %198) #18
  %213 = load %class.GrTextBlob*, %class.GrTextBlob** %187, align 8
  %214 = icmp eq %class.GrTextBlob* %213, null
  br i1 %214, label %227, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %213, i64 0, i32 1
  %217 = getelementptr inbounds %class.SkNVRefCnt.30, %class.SkNVRefCnt.30* %216, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = atomicrmw add i32* %217, i32 -1 acq_rel
  %219 = icmp eq i32 %218, 1
  br i1 %219, label %220, label %227

220:                                              ; preds = %215
  %221 = getelementptr inbounds %class.SkNVRefCnt.30, %class.SkNVRefCnt.30* %216, i64 -2
  %222 = bitcast %class.SkNVRefCnt.30* %221 to %class.GrTextBlob*
  %223 = bitcast %class.SkNVRefCnt.30* %221 to void (%class.GrTextBlob*)***
  %224 = load void (%class.GrTextBlob*)**, void (%class.GrTextBlob*)*** %223, align 8
  %225 = getelementptr inbounds void (%class.GrTextBlob*)*, void (%class.GrTextBlob*)** %224, i64 1
  %226 = load void (%class.GrTextBlob*)*, void (%class.GrTextBlob*)** %225, align 8
  call void %226(%class.GrTextBlob* nonnull %222) #18
  br label %227

227:                                              ; preds = %211, %215, %220
  %228 = load i32, i32* %155, align 8
  %229 = icmp ult i32 %228, 3
  br i1 %229, label %231, label %230

230:                                              ; preds = %227
  call void @llvm.trap() #18
  unreachable

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7, i32 1, i32 1
  %233 = load i64, i64* %232, align 8
  %234 = trunc i64 %233 to i32
  %235 = call i8* @_ZN13GrAtlasTextOpnwEm(i64 112) #18
  %236 = bitcast i8* %235 to %class.GrAtlasTextOp*
  call void @_ZN13GrAtlasTextOpC1ENS_8MaskTypeEbi6SkRectPNS_8GeometryEO7GrPaint(%class.GrAtlasTextOp* %236, i32 %228, i1 zeroext false, i32 %234, <2 x float> %117, <2 x float> %123, %"struct.GrAtlasTextOp::Geometry"* %212, %class.GrPaint* nonnull dereferenceable(48) %11) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %154) #18
  %237 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %147, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %147, align 8
  %238 = icmp eq %class.GrFragmentProcessor* %237, null
  br i1 %238, label %244, label %239

239:                                              ; preds = %231
  %240 = bitcast %class.GrFragmentProcessor* %237 to void (%class.GrFragmentProcessor*)***
  %241 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %240, align 8
  %242 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %241, i64 1
  %243 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %242, align 8
  call void %243(%class.GrFragmentProcessor* nonnull %237) #18
  br label %244

244:                                              ; preds = %239, %231
  %245 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %146, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %146, align 8
  %246 = icmp eq %class.GrFragmentProcessor* %245, null
  br i1 %246, label %252, label %247

247:                                              ; preds = %244
  %248 = bitcast %class.GrFragmentProcessor* %245 to void (%class.GrFragmentProcessor*)***
  %249 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %248, align 8
  %250 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %249, i64 1
  %251 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %250, align 8
  call void %251(%class.GrFragmentProcessor* nonnull %245) #18
  br label %252

252:                                              ; preds = %244, %247
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %145) #18
  %253 = bitcast i8* %235 to %class.GrOp*
  br label %254

254:                                              ; preds = %66, %252
  %255 = phi %class.GrOp* [ %253, %252 ], [ null, %66 ]
  %256 = phi i64 [ %144, %252 ], [ 0, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %136) #18
  %257 = icmp eq i64 %6, 0
  br i1 %257, label %262, label %258

258:                                              ; preds = %254
  %259 = inttoptr i64 %6 to void (%class.GrAtlasSubRun*)***
  %260 = load void (%class.GrAtlasSubRun*)**, void (%class.GrAtlasSubRun*)*** %259, align 8
  %261 = load void (%class.GrAtlasSubRun*)*, void (%class.GrAtlasSubRun*)** %260, align 8
  call void %261(%class.GrAtlasSubRun* nonnull %15) #18
  br label %262

262:                                              ; preds = %254, %258
  %263 = inttoptr i64 %256 to %class.GrClip*
  %264 = insertvalue { %class.GrClip*, %class.GrOp* } undef, %class.GrClip* %263, 0
  %265 = insertvalue { %class.GrClip*, %class.GrOp* } %264, %class.GrOp* %255, 1
  ret { %class.GrClip*, %class.GrOp* } %265
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_116DirectMaskSubRun34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache(%"class.(anonymous namespace)::DirectMaskSubRun"*, %class.GrStrikeCache*) unnamed_addr #4 align 2 {
  %3 = alloca %class.sk_sp.301, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7, i32 2
  %5 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %4, i64 0, i32 0
  %6 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %7 = icmp eq %class.GrTextStrike* %6, null
  br i1 %7, label %8, label %72

8:                                                ; preds = %2
  %9 = bitcast %class.sk_sp.301* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7, i32 0
  call void @_ZNK12SkStrikeSpec20findOrCreateGrStrikeEP13GrStrikeCache(%class.sk_sp.301* nonnull sret %3, %class.SkStrikeSpec* %10, %class.GrStrikeCache* %1) #18
  %11 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %3, i64 0, i32 0
  %12 = bitcast %class.sk_sp.301* %3 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.GrTextStrike* null, %class.GrTextStrike** %11, align 8
  %14 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %15 = bitcast %class.sk_sp.301* %4 to i64*
  store i64 %13, i64* %15, align 8
  %16 = icmp eq %class.GrTextStrike* %14, null
  br i1 %16, label %56, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0
  %19 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %35

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 38
  %24 = bitcast %class.SkNVRefCnt.302* %23 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %24) #18
  %25 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 6
  %26 = bitcast %class.SkNVRefCnt.302* %25 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %26) #18
  %27 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 4
  %28 = bitcast %class.SkNVRefCnt.302* %27 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %29 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  %30 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %22
  %32 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29 to i8*
  call void @_ZdaPv(i8* %32) #20
  br label %33

33:                                               ; preds = %31, %22
  %34 = bitcast %class.GrTextStrike* %14 to i8*
  call void @_ZdlPv(i8* %34) #20
  br label %35

35:                                               ; preds = %17, %33
  %36 = load %class.GrTextStrike*, %class.GrTextStrike** %11, align 8
  %37 = icmp eq %class.GrTextStrike* %36, null
  br i1 %37, label %56, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %36, i64 0, i32 0
  %40 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %56

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 38
  %45 = bitcast %class.SkNVRefCnt.302* %44 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %45) #18
  %46 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 6
  %47 = bitcast %class.SkNVRefCnt.302* %46 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %47) #18
  %48 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 4
  %49 = bitcast %class.SkNVRefCnt.302* %48 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %50 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %49, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %49, align 8
  %51 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %43
  %53 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %50 to i8*
  call void @_ZdaPv(i8* %53) #20
  br label %54

54:                                               ; preds = %52, %43
  %55 = bitcast %class.GrTextStrike* %36 to i8*
  call void @_ZdlPv(i8* %55) #20
  br label %56

56:                                               ; preds = %8, %35, %38, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  %57 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7, i32 1, i32 0
  %58 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %57, align 8
  %59 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7, i32 1, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %58, i64 %60
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %56, %63
  %64 = phi %"union.(anonymous namespace)::GlyphVector::Variant"* [ %70, %63 ], [ %58, %56 ]
  %65 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %66 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"* %64 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = call %class.GrGlyph* @_ZN12GrTextStrike8getGlyphE15SkPackedGlyphID(%class.GrTextStrike* %65, i32 %67) #18
  %69 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %64, i64 0, i32 0
  store %class.GrGlyph* %68, %class.GrGlyph** %69, align 8
  %70 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %64, i64 1
  %71 = icmp eq %"union.(anonymous namespace)::GlyphVector::Variant"* %70, %61
  br i1 %71, label %72, label %63

72:                                               ; preds = %63, %2, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_116DirectMaskSubRun15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::DirectMaskSubRun"*, i32, i32, %"class.GrMeshDrawOp::Target"*) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7
  %6 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = tail call fastcc i64 @_ZN12_GLOBAL__N_111GlyphVector15regenerateAtlasEii12GrMaskFormatiPN12GrMeshDrawOp6TargetEb(%"class.(anonymous namespace)::GlyphVector"* %5, i32 %1, i32 %2, i32 %7, i32 0, %"class.GrMeshDrawOp::Target"* %3, i1 zeroext false)
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_116DirectMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRect(%"class.(anonymous namespace)::DirectMaskSubRun"*, i8*, i32, i32, i32, %class.SkMatrix* dereferenceable(40), %struct.SkIRect* byval(%struct.SkIRect) align 8) unnamed_addr #0 align 2 {
  %8 = alloca %class.SkZip.401, align 8
  %9 = alloca %class.SkZip.407, align 8
  %10 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 2
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 5
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 192
  %17 = icmp eq i32 %16, 128
  br i1 %17, label %18, label %21

18:                                               ; preds = %7
  %19 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %5) #18
  %20 = zext i8 %19 to i32
  store i32 %20, i32* %14, align 4
  br label %21

21:                                               ; preds = %18, %7
  %22 = phi i32 [ %20, %18 ], [ %15, %7 ]
  %23 = and i32 %22, 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  %27 = load float, float* %26, align 4
  %28 = fcmp une float %27, 0.000000e+00
  %29 = fdiv float 1.000000e+00, %27
  %30 = select i1 %28, float %29, float %27
  %31 = fmul float %11, %30
  %32 = fmul float %13, %30
  br label %33

33:                                               ; preds = %21, %25
  %34 = phi float [ %31, %25 ], [ %11, %21 ]
  %35 = phi float [ %32, %25 ], [ %13, %21 ]
  %36 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 3
  %37 = load %class.GrTextBlob*, %class.GrTextBlob** %36, align 8
  %38 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %37, i64 0, i32 8, i32 0, i64 2
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %37, i64 0, i32 8, i32 0, i64 5
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %37, i64 0, i32 8, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 192
  %45 = icmp eq i32 %44, 128
  br i1 %45, label %46, label %50

46:                                               ; preds = %33
  %47 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %37, i64 0, i32 8
  %48 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %47) #18
  %49 = zext i8 %48 to i32
  store i32 %49, i32* %42, align 4
  br label %50

50:                                               ; preds = %46, %33
  %51 = phi i32 [ %49, %46 ], [ %43, %33 ]
  %52 = and i32 %51, 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %62, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %37, i64 0, i32 8, i32 0, i64 8
  %56 = load float, float* %55, align 4
  %57 = fcmp une float %56, 0.000000e+00
  %58 = fdiv float 1.000000e+00, %56
  %59 = select i1 %57, float %58, float %56
  %60 = fmul float %39, %59
  %61 = fmul float %41, %59
  br label %62

62:                                               ; preds = %50, %54
  %63 = phi float [ %60, %54 ], [ %39, %50 ]
  %64 = phi float [ %61, %54 ], [ %41, %50 ]
  %65 = fsub float %34, %63
  %66 = fsub float %35, %64
  %67 = fadd float %65, 5.000000e-01
  %68 = tail call float @llvm.floor.f32(float %67)
  %69 = fcmp olt float %68, 0x41DFFFFFE0000000
  %70 = select i1 %69, float %68, float 0x41DFFFFFE0000000
  %71 = fcmp ogt float %70, 0xC1DFFFFFE0000000
  %72 = select i1 %71, float %70, float 0xC1DFFFFFE0000000
  %73 = fptosi float %72 to i32
  %74 = fadd float %66, 5.000000e-01
  %75 = tail call float @llvm.floor.f32(float %74)
  %76 = fcmp olt float %75, 0x41DFFFFFE0000000
  %77 = select i1 %76, float %75, float 0x41DFFFFFE0000000
  %78 = fcmp ogt float %77, 0xC1DFFFFFE0000000
  %79 = select i1 %78, float %77, float 0xC1DFFFFFE0000000
  %80 = fptosi float %79 to i32
  %81 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = sext i32 %85 to i64
  %87 = sub nsw i64 %83, %86
  %88 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %89 = load i32, i32* %88, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = sext i32 %92 to i64
  %94 = sub nsw i64 %90, %93
  %95 = icmp slt i64 %87, 1
  %96 = icmp slt i64 %94, 1
  %97 = or i1 %95, %96
  br i1 %97, label %98, label %102

98:                                               ; preds = %62
  %99 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 2
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 2
  br i1 %101, label %180, label %110

102:                                              ; preds = %62
  %103 = or i64 %94, %87
  %104 = add nsw i64 %103, 2147483648
  %105 = icmp ugt i64 %104, 4294967295
  %106 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 2
  %107 = load i32, i32* %106, align 8
  %108 = icmp ne i32 %107, 2
  br i1 %105, label %109, label %256

109:                                              ; preds = %102
  br i1 %108, label %110, label %180

110:                                              ; preds = %98, %109
  %111 = bitcast i8* %1 to [4 x %"struct.(anonymous namespace)::Mask2DVertex"]*
  %112 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7, i32 1, i32 0
  %113 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %112, align 8, !noalias !45
  %114 = sext i32 %2 to i64
  %115 = sext i32 %3 to i64
  %116 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %113, i64 %114, i32 0
  %117 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 5, i32 0
  %118 = load %"struct.skvx::Vec"*, %"struct.skvx::Vec"** %117, align 8, !noalias !45
  %119 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %118, i64 %114
  %120 = icmp eq i32 %3, 0
  br i1 %120, label %290, label %121

121:                                              ; preds = %110, %121
  %122 = phi i64 [ %178, %121 ], [ 0, %110 ]
  %123 = getelementptr inbounds %class.GrGlyph*, %class.GrGlyph** %116, i64 %122
  %124 = load %class.GrGlyph*, %class.GrGlyph** %123, align 8
  %125 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %124, i64 0, i32 1, i32 1
  %126 = bitcast %"struct.std::__1::array.294"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = trunc i64 %127 to i16
  %129 = lshr i64 %127, 16
  %130 = trunc i64 %129 to i16
  %131 = lshr i64 %127, 32
  %132 = trunc i64 %131 to i16
  %133 = lshr i64 %127, 48
  %134 = trunc i64 %133 to i16
  %135 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %119, i64 %122, i32 0, i32 0
  %136 = load i16, i16* %135, align 2
  %137 = sext i16 %136 to i32
  %138 = add nsw i32 %137, %73
  %139 = sitofp i32 %138 to float
  %140 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %119, i64 %122, i32 1, i32 0
  %141 = load i16, i16* %140, align 2
  %142 = sext i16 %141 to i32
  %143 = add nsw i32 %142, %80
  %144 = sitofp i32 %143 to float
  %145 = trunc i64 %131 to i32
  %146 = and i32 %145, 65535
  %147 = trunc i64 %127 to i32
  %148 = and i32 %147, 65535
  %149 = sub nsw i32 %146, %148
  %150 = sitofp i32 %149 to float
  %151 = fadd float %139, %150
  %152 = trunc i64 %133 to i32
  %153 = trunc i64 %129 to i32
  %154 = and i32 %153, 65535
  %155 = sub nsw i32 %152, %154
  %156 = sitofp i32 %155 to float
  %157 = fadd float %144, %156
  %158 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 0, i32 0, i32 0
  store float %139, float* %158, align 4
  %159 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 0, i32 0, i32 1
  store float %144, float* %159, align 4
  %160 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 0, i32 1
  store i32 %4, i32* %160, align 4
  %161 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 0, i32 2, i32 0
  store i16 %128, i16* %161, align 4
  %162 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 0, i32 2, i32 1
  store i16 %130, i16* %162, align 2
  %163 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 1, i32 0, i32 0
  store float %139, float* %163, align 4
  %164 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 1, i32 0, i32 1
  store float %157, float* %164, align 4
  %165 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 1, i32 1
  store i32 %4, i32* %165, align 4
  %166 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 1, i32 2, i32 0
  store i16 %128, i16* %166, align 4
  %167 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 1, i32 2, i32 1
  store i16 %134, i16* %167, align 2
  %168 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 2, i32 0, i32 0
  store float %151, float* %168, align 4
  %169 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 2, i32 0, i32 1
  store float %144, float* %169, align 4
  %170 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 2, i32 1
  store i32 %4, i32* %170, align 4
  %171 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 2, i32 2, i32 0
  store i16 %132, i16* %171, align 4
  %172 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 2, i32 2, i32 1
  store i16 %130, i16* %172, align 2
  %173 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 3, i32 0, i32 0
  store float %151, float* %173, align 4
  %174 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 3, i32 0, i32 1
  store float %157, float* %174, align 4
  %175 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 3, i32 1
  store i32 %4, i32* %175, align 4
  %176 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 3, i32 2, i32 0
  store i16 %132, i16* %176, align 4
  %177 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %111, i64 %122, i64 3, i32 2, i32 1
  store i16 %134, i16* %177, align 2
  %178 = add nuw i64 %122, 1
  %179 = icmp eq i64 %178, %115
  br i1 %179, label %290, label %121

180:                                              ; preds = %98, %109
  %181 = bitcast i8* %1 to [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]*
  %182 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7, i32 1, i32 0
  %183 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %182, align 8, !noalias !48
  %184 = sext i32 %2 to i64
  %185 = sext i32 %3 to i64
  %186 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %183, i64 %184, i32 0
  %187 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 5, i32 0
  %188 = load %"struct.skvx::Vec"*, %"struct.skvx::Vec"** %187, align 8, !noalias !48
  %189 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %188, i64 %184
  %190 = icmp eq i32 %3, 0
  br i1 %190, label %290, label %191

191:                                              ; preds = %180
  %192 = sitofp i32 %73 to float
  %193 = sitofp i32 %80 to float
  br label %194

194:                                              ; preds = %194, %191
  %195 = phi i64 [ 0, %191 ], [ %254, %194 ]
  %196 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %181, i64 %195
  %197 = getelementptr inbounds %class.GrGlyph*, %class.GrGlyph** %186, i64 %195
  %198 = load %class.GrGlyph*, %class.GrGlyph** %197, align 8
  %199 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %198, i64 0, i32 1, i32 1
  %200 = bitcast %"struct.std::__1::array.294"* %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = trunc i64 %201 to i16
  %203 = lshr i64 %201, 16
  %204 = trunc i64 %203 to i16
  %205 = lshr i64 %201, 32
  %206 = trunc i64 %205 to i16
  %207 = lshr i64 %201, 48
  %208 = trunc i64 %207 to i16
  %209 = sub i16 %206, %202
  %210 = sub i16 %208, %204
  %211 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %189, i64 %195, i32 0, i32 0
  %212 = load i16, i16* %211, align 2
  %213 = sitofp i16 %212 to float
  %214 = fadd float %192, %213
  %215 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %189, i64 %195, i32 1, i32 0
  %216 = load i16, i16* %215, align 2
  %217 = sitofp i16 %216 to float
  %218 = fadd float %193, %217
  %219 = uitofp i16 %209 to float
  %220 = fadd float %214, %219
  %221 = uitofp i16 %210 to float
  %222 = fadd float %218, %221
  %223 = insertelement <2 x float> undef, float %214, i32 0
  %224 = insertelement <2 x float> %223, float %218, i32 1
  %225 = insertelement <2 x float> undef, float %220, i32 0
  %226 = insertelement <2 x float> %225, float %222, i32 1
  %227 = trunc i64 %201 to i32
  %228 = and i32 %227, -65536
  %229 = and i32 %227, 65535
  %230 = bitcast [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %196 to <2 x float>*
  store <2 x float> %224, <2 x float>* %230, align 4
  %231 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %181, i64 %195, i64 0, i32 1
  %232 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %231 to i32*
  store i32 %227, i32* %232, align 4
  %233 = insertelement <2 x float> %224, float %222, i32 1
  %234 = shl nuw nsw i64 %207, 16
  %235 = trunc i64 %234 to i32
  %236 = or i32 %229, %235
  %237 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %181, i64 %195, i64 1
  %238 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %237 to <2 x float>*
  store <2 x float> %233, <2 x float>* %238, align 4
  %239 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %181, i64 %195, i64 1, i32 1
  %240 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %239 to i32*
  store i32 %236, i32* %240, align 4
  %241 = insertelement <2 x float> %226, float %218, i32 1
  %242 = trunc i64 %205 to i32
  %243 = and i32 %242, 65535
  %244 = or i32 %243, %228
  %245 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %181, i64 %195, i64 2
  %246 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %245 to <2 x float>*
  store <2 x float> %241, <2 x float>* %246, align 4
  %247 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %181, i64 %195, i64 2, i32 1
  %248 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %247 to i32*
  store i32 %244, i32* %248, align 4
  %249 = or i32 %243, %235
  %250 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %181, i64 %195, i64 3
  %251 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %250 to <2 x float>*
  store <2 x float> %226, <2 x float>* %251, align 4
  %252 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %181, i64 %195, i64 3, i32 1
  %253 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %252 to i32*
  store i32 %249, i32* %253, align 4
  %254 = add nuw i64 %195, 1
  %255 = icmp eq i64 %254, %185
  br i1 %255, label %290, label %194

256:                                              ; preds = %102
  %257 = ptrtoint i8* %1 to i64
  %258 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 7, i32 1, i32 0
  %259 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %258, align 8
  %260 = sext i32 %2 to i64
  %261 = sext i32 %3 to i64
  %262 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %259, i64 %260, i32 0
  %263 = ptrtoint %class.GrGlyph** %262 to i64
  %264 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 0, i32 5, i32 0
  %265 = load %"struct.skvx::Vec"*, %"struct.skvx::Vec"** %264, align 8
  %266 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %265, i64 %260
  %267 = ptrtoint %"struct.skvx::Vec"* %266 to i64
  br i1 %108, label %268, label %279

268:                                              ; preds = %256
  %269 = bitcast %class.SkZip.401* %8 to i64*
  store i64 %257, i64* %269, align 8, !alias.scope !51
  %270 = getelementptr inbounds %class.SkZip.401, %class.SkZip.401* %8, i64 0, i32 0, i32 0, i32 1
  %271 = bitcast %"class.std::__1::__tuple_leaf.405"* %270 to i64*
  store i64 %263, i64* %271, align 8, !alias.scope !51
  %272 = getelementptr inbounds %class.SkZip.401, %class.SkZip.401* %8, i64 0, i32 0, i32 0, i32 2
  %273 = bitcast %"class.std::__1::__tuple_leaf.406"* %272 to i64*
  store i64 %267, i64* %273, align 8, !alias.scope !51
  %274 = getelementptr inbounds %class.SkZip.401, %class.SkZip.401* %8, i64 0, i32 1
  store i64 %261, i64* %274, align 8, !alias.scope !51
  %275 = zext i32 %80 to i64
  %276 = shl nuw i64 %275, 32
  %277 = zext i32 %73 to i64
  %278 = or i64 %276, %277
  call fastcc void @_ZN12_GLOBAL__N_121generalized_direct_2DIA4_NS_12Mask2DVertexEN4skvx3VecILi2EsEEEEv5SkZipIJT_PK7GrGlyphKT0_EEj8SkIPointP7SkIRect(%class.SkZip.401* nonnull byval(%class.SkZip.401) align 8 %8, i32 %4, i64 %278, %struct.SkIRect* nonnull %6)
  br label %290

279:                                              ; preds = %256
  %280 = bitcast %class.SkZip.407* %9 to i64*
  store i64 %257, i64* %280, align 8, !alias.scope !58
  %281 = getelementptr inbounds %class.SkZip.407, %class.SkZip.407* %9, i64 0, i32 0, i32 0, i32 1
  %282 = bitcast %"class.std::__1::__tuple_leaf.405"* %281 to i64*
  store i64 %263, i64* %282, align 8, !alias.scope !58
  %283 = getelementptr inbounds %class.SkZip.407, %class.SkZip.407* %9, i64 0, i32 0, i32 0, i32 2
  %284 = bitcast %"class.std::__1::__tuple_leaf.406"* %283 to i64*
  store i64 %267, i64* %284, align 8, !alias.scope !58
  %285 = getelementptr inbounds %class.SkZip.407, %class.SkZip.407* %9, i64 0, i32 1
  store i64 %261, i64* %285, align 8, !alias.scope !58
  %286 = zext i32 %80 to i64
  %287 = shl nuw i64 %286, 32
  %288 = zext i32 %73 to i64
  %289 = or i64 %287, %288
  call fastcc void @_ZN12_GLOBAL__N_121generalized_direct_2DIA4_NS_12ARGB2DVertexEN4skvx3VecILi2EsEEEEv5SkZipIJT_PK7GrGlyphKT0_EEj8SkIPointP7SkIRect(%class.SkZip.407* nonnull byval(%class.SkZip.407) align 8 %9, i64 %289, %struct.SkIRect* nonnull %6)
  br label %290

290:                                              ; preds = %121, %194, %180, %110, %268, %279
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn16_N12_GLOBAL__N_116DirectMaskSubRunD1Ev(%"class.(anonymous namespace)::DirectMaskSubRun"*) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 -1, i32 7, i32 4, i32 1
  %3 = bitcast [4 x i32]* %2 to %"class.(anonymous namespace)::DirectMaskSubRun"*
  tail call void @_ZN12_GLOBAL__N_116DirectMaskSubRunD2Ev(%"class.(anonymous namespace)::DirectMaskSubRun"* %3) #18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn16_N12_GLOBAL__N_116DirectMaskSubRunD0Ev(%"class.(anonymous namespace)::DirectMaskSubRun"*) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 -1, i32 7, i32 4, i32 1
  %3 = bitcast [4 x i32]* %2 to %"class.(anonymous namespace)::DirectMaskSubRun"*
  tail call void @_ZN12_GLOBAL__N_116DirectMaskSubRunD2Ev(%"class.(anonymous namespace)::DirectMaskSubRun"* %3) #18
  %4 = bitcast [4 x i32]* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #20
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZThn16_NK12_GLOBAL__N_116DirectMaskSubRun12vertexStrideERK8SkMatrix(%"class.(anonymous namespace)::DirectMaskSubRun"* nocapture readonly, %class.SkMatrix* nocapture readnone dereferenceable(40)) unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 -1, i32 7, i32 4, i32 1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 1, i64 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 2
  %7 = select i1 %6, i64 12, i64 16
  ret i64 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZThn16_NK12_GLOBAL__N_116DirectMaskSubRun10glyphCountEv(%"class.(anonymous namespace)::DirectMaskSubRun"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 -1, i32 7, i32 4, i32 1
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* %2, i64 15
  %4 = bitcast [4 x i32]* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal { %class.GrClip*, %class.GrOp* } @_ZThn16_NK12_GLOBAL__N_116DirectMaskSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE(%"class.(anonymous namespace)::DirectMaskSubRun"*, %class.GrClip*, %class.SkMatrixProvider* dereferenceable(112), %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.GrSurfaceDrawContext*, i64) unnamed_addr #4 align 2 {
  %8 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 -1, i32 7, i32 4, i32 1
  %9 = bitcast [4 x i32]* %8 to %"class.(anonymous namespace)::DirectMaskSubRun"*
  %10 = tail call { %class.GrClip*, %class.GrOp* } @_ZNK12_GLOBAL__N_116DirectMaskSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE(%"class.(anonymous namespace)::DirectMaskSubRun"* %9, %class.GrClip* %1, %class.SkMatrixProvider* dereferenceable(112) %2, %class.SkGlyphRunList* dereferenceable(48) %3, %class.SkPaint* dereferenceable(72) %4, %class.GrSurfaceDrawContext* %5, i64 %6)
  ret { %class.GrClip*, %class.GrOp* } %10
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn16_NK12_GLOBAL__N_116DirectMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRect(%"class.(anonymous namespace)::DirectMaskSubRun"*, i8*, i32, i32, i32, %class.SkMatrix* dereferenceable(40), %struct.SkIRect* byval(%struct.SkIRect) align 8) unnamed_addr #4 align 2 {
  %8 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 -1, i32 7, i32 4, i32 1
  %9 = bitcast [4 x i32]* %8 to %"class.(anonymous namespace)::DirectMaskSubRun"*
  tail call void @_ZNK12_GLOBAL__N_116DirectMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRect(%"class.(anonymous namespace)::DirectMaskSubRun"* %9, i8* %1, i32 %2, i32 %3, i32 %4, %class.SkMatrix* dereferenceable(40) %5, %struct.SkIRect* nonnull byval(%struct.SkIRect) align 8 %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn16_N12_GLOBAL__N_116DirectMaskSubRun34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache(%"class.(anonymous namespace)::DirectMaskSubRun"*, %class.GrStrikeCache*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 -1, i32 7, i32 4, i32 1
  %4 = bitcast [4 x i32]* %3 to %"class.(anonymous namespace)::DirectMaskSubRun"*
  tail call void @_ZN12_GLOBAL__N_116DirectMaskSubRun34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache(%"class.(anonymous namespace)::DirectMaskSubRun"* %4, %class.GrStrikeCache* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZThn16_NK12_GLOBAL__N_116DirectMaskSubRun15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::DirectMaskSubRun"*, i32, i32, %"class.GrMeshDrawOp::Target"*) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRun", %"class.(anonymous namespace)::DirectMaskSubRun"* %0, i64 -1, i32 7, i32 4, i32 1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 4, i64 2
  %7 = bitcast i32* %6 to %"class.(anonymous namespace)::GlyphVector"*
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 1, i64 2
  %9 = load i32, i32* %8, align 8
  %10 = tail call fastcc i64 @_ZN12_GLOBAL__N_111GlyphVector15regenerateAtlasEii12GrMaskFormatiPN12GrMeshDrawOp6TargetEb(%"class.(anonymous namespace)::GlyphVector"* %7, i32 %1, i32 %2, i32 %9, i32 0, %"class.GrMeshDrawOp::Target"* %3, i1 zeroext false) #18
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8GrSubRunD2Ev(%class.GrSubRun*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.GrSubRun, %class.GrSubRun* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8GrSubRun, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrSubRun, %class.GrSubRun* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.GrSubRun*, %class.GrSubRun** %3, align 8
  store %class.GrSubRun* null, %class.GrSubRun** %3, align 8
  %5 = icmp eq %class.GrSubRun* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrSubRun* %4 to void (%class.GrSubRun*)***
  %8 = load void (%class.GrSubRun*)**, void (%class.GrSubRun*)*** %7, align 8
  %9 = load void (%class.GrSubRun*)*, void (%class.GrSubRun*)** %8, align 8
  tail call void %9(%class.GrSubRun* nonnull %4) #18
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8GrSubRunD0Ev(%class.GrSubRun*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_112_GLOBAL__N_114calculate_clipEPK6GrClip6SkRectS4_(%"class.std::__1::tuple.333"* noalias nocapture sret, %class.GrClip*, <2 x float>, <2 x float>, <2 x float>, <2 x float>) unnamed_addr #0 {
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %9 = alloca %"struct.GrClip::PreClipResult", align 4
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %4, <2 x float>* %10, align 8
  %11 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %5, <2 x float>* %11, align 8
  %12 = icmp eq %class.GrClip* %1, null
  %13 = extractelement <2 x float> %4, i32 0
  %14 = extractelement <2 x float> %4, i32 1
  %15 = extractelement <2 x float> %5, i32 0
  %16 = extractelement <2 x float> %5, i32 1
  br i1 %12, label %17, label %35

17:                                               ; preds = %6
  %18 = extractelement <2 x float> %2, i32 0
  %19 = extractelement <2 x float> %2, i32 1
  %20 = extractelement <2 x float> %3, i32 0
  %21 = extractelement <2 x float> %3, i32 1
  %22 = fcmp olt float %18, %13
  %23 = select i1 %22, float %13, float %18
  %24 = fcmp ogt float %20, %15
  %25 = select i1 %24, float %15, float %20
  %26 = fcmp olt float %19, %14
  %27 = select i1 %26, float %14, float %19
  %28 = fcmp olt float %16, %21
  %29 = fcmp olt float %23, %25
  %30 = select i1 %28, float %16, float %21
  %31 = fcmp olt float %27, %30
  %32 = and i1 %29, %31
  br i1 %32, label %166, label %33

33:                                               ; preds = %17
  %34 = bitcast %"class.std::__1::tuple.333"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 0, i64 20, i1 false)
  br label %170

35:                                               ; preds = %6
  %36 = bitcast %"struct.GrClip::PreClipResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %36) #18
  %37 = getelementptr inbounds %"struct.GrClip::PreClipResult", %"struct.GrClip::PreClipResult"* %9, i64 0, i32 0
  store i32 -1431655766, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.GrClip::PreClipResult", %"struct.GrClip::PreClipResult"* %9, i64 0, i32 1, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.GrClip::PreClipResult", %"struct.GrClip::PreClipResult"* %9, i64 0, i32 1, i32 0, i32 1
  %40 = getelementptr inbounds %"struct.GrClip::PreClipResult", %"struct.GrClip::PreClipResult"* %9, i64 0, i32 1, i32 0, i32 2
  %41 = getelementptr inbounds %"struct.GrClip::PreClipResult", %"struct.GrClip::PreClipResult"* %9, i64 0, i32 1, i32 0, i32 3
  %42 = getelementptr inbounds %"struct.GrClip::PreClipResult", %"struct.GrClip::PreClipResult"* %9, i64 0, i32 1, i32 2
  %43 = bitcast float* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 -1, i64 48, i1 false)
  %44 = getelementptr inbounds %"struct.GrClip::PreClipResult", %"struct.GrClip::PreClipResult"* %9, i64 0, i32 2
  %45 = bitcast %class.GrClip* %1 to void (%"struct.GrClip::PreClipResult"*, %class.GrClip*, %struct.SkRect*, i1)***
  %46 = bitcast i32* %42 to i64*
  store i64 -6148914691236517206, i64* %46, align 4
  %47 = load void (%"struct.GrClip::PreClipResult"*, %class.GrClip*, %struct.SkRect*, i1)**, void (%"struct.GrClip::PreClipResult"*, %class.GrClip*, %struct.SkRect*, i1)*** %45, align 8
  %48 = getelementptr inbounds void (%"struct.GrClip::PreClipResult"*, %class.GrClip*, %struct.SkRect*, i1)*, void (%"struct.GrClip::PreClipResult"*, %class.GrClip*, %struct.SkRect*, i1)** %47, i64 4
  %49 = load void (%"struct.GrClip::PreClipResult"*, %class.GrClip*, %struct.SkRect*, i1)*, void (%"struct.GrClip::PreClipResult"*, %class.GrClip*, %struct.SkRect*, i1)** %48, align 8
  call void %49(%"struct.GrClip::PreClipResult"* nonnull sret %9, %class.GrClip* nonnull %1, %struct.SkRect* nonnull dereferenceable(16) %8, i1 zeroext false) #18
  %50 = load i32, i32* %37, align 4
  switch i32 %50, label %165 [
    i32 2, label %51
    i32 1, label %53
    i32 0, label %57
  ]

51:                                               ; preds = %35
  %52 = bitcast %"class.std::__1::tuple.333"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 20, i1 false)
  br label %164

53:                                               ; preds = %35
  %54 = getelementptr inbounds %"class.std::__1::tuple.333", %"class.std::__1::tuple.333"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 1, i32* %54, align 4
  %55 = getelementptr inbounds %"class.std::__1::tuple.333", %"class.std::__1::tuple.333"* %0, i64 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::__tuple_leaf.336"* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %56, i8 0, i64 16, i1 false)
  br label %164

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.GrClip::PreClipResult", %"struct.GrClip::PreClipResult"* %9, i64 0, i32 3
  %59 = load i8, i8* %58, align 1, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = load i32, i32* %42, align 4
  %62 = icmp eq i32 %61, 1
  %63 = and i1 %60, %62
  br i1 %63, label %64, label %165

64:                                               ; preds = %57
  %65 = load float, float* %38, align 4
  %66 = load float, float* %39, align 4
  %67 = load float, float* %40, align 4
  %68 = load float, float* %41, align 4
  %69 = load i8, i8* %44, align 4, !range !2
  %70 = icmp eq i8 %69, 0
  %71 = fadd float %65, 5.000000e-01
  %72 = call float @llvm.floor.f32(float %71) #18
  br i1 %70, label %73, label %80

73:                                               ; preds = %64
  %74 = fadd float %66, 5.000000e-01
  %75 = call float @llvm.floor.f32(float %74) #18
  %76 = fadd float %67, 5.000000e-01
  %77 = call float @llvm.floor.f32(float %76) #18
  %78 = fadd float %68, 5.000000e-01
  %79 = call float @llvm.floor.f32(float %78) #18
  br label %102

80:                                               ; preds = %64
  %81 = fsub float %72, %65
  %82 = call float @llvm.fabs.f32(float %81) #18
  %83 = fcmp ugt float %82, 0x3F50624DE0000000
  br i1 %83, label %165, label %84

84:                                               ; preds = %80
  %85 = fadd float %66, 5.000000e-01
  %86 = call float @llvm.floor.f32(float %85) #18
  %87 = fsub float %86, %66
  %88 = call float @llvm.fabs.f32(float %87) #18
  %89 = fcmp ugt float %88, 0x3F50624DE0000000
  br i1 %89, label %165, label %90

90:                                               ; preds = %84
  %91 = fadd float %67, 5.000000e-01
  %92 = call float @llvm.floor.f32(float %91) #18
  %93 = fsub float %92, %67
  %94 = call float @llvm.fabs.f32(float %93) #18
  %95 = fcmp ugt float %94, 0x3F50624DE0000000
  br i1 %95, label %165, label %96

96:                                               ; preds = %90
  %97 = fadd float %68, 5.000000e-01
  %98 = call float @llvm.floor.f32(float %97) #18
  %99 = fsub float %98, %68
  %100 = call float @llvm.fabs.f32(float %99) #18
  %101 = fcmp ugt float %100, 0x3F50624DE0000000
  br i1 %101, label %165, label %102

102:                                              ; preds = %73, %96
  %103 = phi float [ %79, %73 ], [ %98, %96 ]
  %104 = phi float [ %77, %73 ], [ %92, %96 ]
  %105 = phi float [ %75, %73 ], [ %86, %96 ]
  %106 = insertelement <4 x float> undef, float %72, i32 0
  %107 = insertelement <4 x float> %106, float %105, i32 1
  %108 = insertelement <4 x float> %107, float %104, i32 2
  %109 = insertelement <4 x float> %108, float %103, i32 3
  %110 = fcmp olt <4 x float> %109, <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %111 = select <4 x i1> %110, <4 x float> %109, <4 x float> <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %112 = fcmp ogt <4 x float> %111, <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %113 = select <4 x i1> %112, <4 x float> %111, <4 x float> <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %114 = fptosi <4 x float> %113 to <4 x i32>
  %115 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0, i64 0
  %116 = load float, float* %115, align 8
  %117 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1, i64 0
  %118 = load float, float* %117, align 8
  %119 = fcmp olt float %116, %118
  br i1 %119, label %120, label %160

120:                                              ; preds = %102
  %121 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 1
  %122 = load float, float* %121, align 4
  %123 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 3
  %124 = load float, float* %123, align 4
  %125 = fcmp uge float %122, %124
  br i1 %125, label %160, label %126

126:                                              ; preds = %120
  %127 = extractelement <4 x i32> %114, i32 2
  %128 = sext i32 %127 to i64
  %129 = extractelement <4 x i32> %114, i32 0
  %130 = sext i32 %129 to i64
  %131 = sub nsw i64 %128, %130
  %132 = extractelement <4 x i32> %114, i32 3
  %133 = sext i32 %132 to i64
  %134 = extractelement <4 x i32> %114, i32 1
  %135 = sext i32 %134 to i64
  %136 = sub nsw i64 %133, %135
  %137 = icmp slt i64 %131, 1
  %138 = icmp slt i64 %136, 1
  %139 = or i1 %137, %138
  br i1 %139, label %160, label %140

140:                                              ; preds = %126
  %141 = or i64 %136, %131
  %142 = add nsw i64 %141, 2147483648
  %143 = icmp ugt i64 %142, 4294967295
  %144 = sitofp i32 %129 to float
  %145 = fcmp ult float %116, %144
  %146 = or i1 %143, %145
  br i1 %146, label %160, label %147

147:                                              ; preds = %140
  %148 = sitofp i32 %134 to float
  %149 = fcmp oge float %122, %148
  %150 = sitofp i32 %127 to float
  %151 = fcmp ole float %118, %150
  %152 = and i1 %151, %149
  %153 = sitofp i32 %132 to float
  %154 = fcmp ole float %124, %153
  %155 = and i1 %152, %154
  br i1 %155, label %156, label %160

156:                                              ; preds = %147
  %157 = getelementptr inbounds %"class.std::__1::tuple.333", %"class.std::__1::tuple.333"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 1, i32* %157, align 4
  %158 = getelementptr inbounds %"class.std::__1::tuple.333", %"class.std::__1::tuple.333"* %0, i64 0, i32 0, i32 1
  %159 = bitcast %"class.std::__1::__tuple_leaf.336"* %158 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %159, i8 0, i64 16, i1 false)
  br label %164

160:                                              ; preds = %147, %126, %102, %120, %140
  %161 = getelementptr inbounds %"class.std::__1::tuple.333", %"class.std::__1::tuple.333"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 3, i32* %161, align 4
  %162 = getelementptr inbounds %"class.std::__1::tuple.333", %"class.std::__1::tuple.333"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %114, <4 x i32>* %163, align 4
  br label %164

164:                                              ; preds = %53, %51, %160, %156
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %36) #18
  br label %170

165:                                              ; preds = %57, %96, %80, %84, %90, %35
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %36) #18
  br label %166

166:                                              ; preds = %17, %165
  %167 = getelementptr inbounds %"class.std::__1::tuple.333", %"class.std::__1::tuple.333"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 2, i32* %167, align 4
  %168 = getelementptr inbounds %"class.std::__1::tuple.333", %"class.std::__1::tuple.333"* %0, i64 0, i32 0, i32 1
  %169 = bitcast %"class.std::__1::__tuple_leaf.336"* %168 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %169, i8 0, i64 16, i1 false)
  br label %170

170:                                              ; preds = %164, %166, %33
  ret void
}

declare %"struct.GrAtlasTextOp::Geometry"* @_ZN13GrAtlasTextOp8Geometry11MakeForBlobERK13GrAtlasSubRunRK8SkMatrix7SkPoint7SkIRect5sk_spI10GrTextBlobERK8SkRGBA4fIL11SkAlphaType2EEP12SkArenaAlloc(%class.GrAtlasSubRun* dereferenceable(8), %class.SkMatrix* dereferenceable(40), <2 x float>, i64, i64, %class.sk_sp.58*, %struct.SkRGBA4f.337* dereferenceable(16), %class.SkArenaAlloc*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #3

declare zeroext i1 @_Z16SkPaintToGrPaintP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderP7GrPaint(%class.GrRecordingContext*, %class.GrColorInfo* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkMatrixProvider* dereferenceable(112), %class.GrPaint*) local_unnamed_addr #2

declare zeroext i1 @_Z25SkPaintToGrPaintWithBlendP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProvider11SkBlendModeP7GrPaint(%class.GrRecordingContext*, %class.GrColorInfo* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkMatrixProvider* dereferenceable(112), i32, %class.GrPaint*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrRenderTargetProxy6arenasEv(%class.sk_sp.209* noalias sret, %class.GrRenderTargetProxy*) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %class.GrRenderTargetProxy, %class.GrRenderTargetProxy* %1, i64 0, i32 7
  %4 = getelementptr inbounds %class.sk_sp.209, %class.sk_sp.209* %3, i64 0, i32 0
  %5 = load %class.GrArenas*, %class.GrArenas** %4, align 8
  %6 = icmp eq %class.GrArenas* %5, null
  br i1 %6, label %7, label %30

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 56) #20, !noalias !65
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 56, i1 false) #18, !noalias !65
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4, !noalias !65
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %11, i8* null, i64 0, i64 1024) #18, !noalias !65
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = bitcast i8* %12 to %class.GrSubRunAllocator*
  tail call void @_ZN17GrSubRunAllocatorC1Ei(%class.GrSubRunAllocator* %13, i32 1024) #18, !noalias !65
  %14 = ptrtoint i8* %8 to i64
  %15 = load %class.GrArenas*, %class.GrArenas** %4, align 8
  %16 = bitcast %class.sk_sp.209* %3 to i64*
  store i64 %14, i64* %16, align 8
  %17 = icmp eq %class.GrArenas* %15, null
  %18 = bitcast i8* %8 to %class.GrArenas*
  br i1 %17, label %30, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %class.GrArenas, %class.GrArenas* %15, i64 0, i32 0
  %21 = getelementptr inbounds %class.GrArenas, %class.GrArenas* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %33

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.SkNVRefCnt.210, %class.SkNVRefCnt.210* %20, i64 10
  %26 = bitcast %class.SkNVRefCnt.210* %25 to %class.GrBagOfBytes*
  tail call void @_ZN12GrBagOfBytesD1Ev(%class.GrBagOfBytes* %26) #18
  %27 = getelementptr inbounds %class.SkNVRefCnt.210, %class.SkNVRefCnt.210* %20, i64 2
  %28 = bitcast %class.SkNVRefCnt.210* %27 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %28) #18
  %29 = bitcast %class.GrArenas* %15 to i8*
  tail call void @_ZdlPv(i8* %29) #20
  br label %33

30:                                               ; preds = %7, %2
  %31 = phi %class.GrArenas* [ %5, %2 ], [ %18, %7 ]
  %32 = getelementptr inbounds %class.sk_sp.209, %class.sk_sp.209* %0, i64 0, i32 0
  br label %37

33:                                               ; preds = %19, %24
  %34 = load %class.GrArenas*, %class.GrArenas** %4, align 8
  %35 = getelementptr inbounds %class.sk_sp.209, %class.sk_sp.209* %0, i64 0, i32 0
  %36 = icmp eq %class.GrArenas* %34, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %30, %33
  %38 = phi %class.GrArenas** [ %32, %30 ], [ %35, %33 ]
  %39 = phi %class.GrArenas* [ %31, %30 ], [ %34, %33 ]
  %40 = getelementptr inbounds %class.GrArenas, %class.GrArenas* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic
  br label %42

42:                                               ; preds = %33, %37
  %43 = phi %class.GrArenas** [ %35, %33 ], [ %38, %37 ]
  %44 = phi %class.GrArenas* [ null, %33 ], [ %39, %37 ]
  store %class.GrArenas* %44, %class.GrArenas** %43, align 8
  ret void
}

declare void @_ZN17GrSubRunAllocatorC1Ei(%class.GrSubRunAllocator*, i32) unnamed_addr #2

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc*) unnamed_addr #13

declare i8* @_ZN13GrAtlasTextOpnwEm(i64) local_unnamed_addr #2

declare void @_ZN13GrAtlasTextOpC1ENS_8MaskTypeEbi6SkRectPNS_8GeometryEO7GrPaint(%class.GrAtlasTextOp*, i32, i1 zeroext, i32, <2 x float>, <2 x float>, %"struct.GrAtlasTextOp::Geometry"*, %class.GrPaint* dereferenceable(48)) unnamed_addr #2

declare void @_ZNK12SkStrikeSpec20findOrCreateGrStrikeEP13GrStrikeCache(%class.sk_sp.301* sret, %class.SkStrikeSpec*, %class.GrStrikeCache*) local_unnamed_addr #2

declare %class.GrGlyph* @_ZN12GrTextStrike8getGlyphE15SkPackedGlyphID(%class.GrTextStrike*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor*) unnamed_addr #13

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN12_GLOBAL__N_111GlyphVector15regenerateAtlasEii12GrMaskFormatiPN12GrMeshDrawOp6TargetEb(%"class.(anonymous namespace)::GlyphVector"*, i32, i32, i32, i32, %"class.GrMeshDrawOp::Target"*, i1 zeroext) unnamed_addr #4 align 2 {
  %8 = alloca %class.GrBackendFormat, align 8
  %9 = alloca %class.GrBackendFormat, align 8
  %10 = alloca %class.sk_sp.301, align 8
  %11 = alloca %class.GrBackendFormat, align 8
  %12 = alloca %class.SkBulkGlyphMetricsAndImages, align 8
  %13 = bitcast %"class.GrMeshDrawOp::Target"* %5 to %class.GrAtlasManager* (%"class.GrMeshDrawOp::Target"*)***
  %14 = load %class.GrAtlasManager* (%"class.GrMeshDrawOp::Target"*)**, %class.GrAtlasManager* (%"class.GrMeshDrawOp::Target"*)*** %13, align 8
  %15 = getelementptr inbounds %class.GrAtlasManager* (%"class.GrMeshDrawOp::Target"*)*, %class.GrAtlasManager* (%"class.GrMeshDrawOp::Target"*)** %14, i64 24
  %16 = load %class.GrAtlasManager* (%"class.GrMeshDrawOp::Target"*)*, %class.GrAtlasManager* (%"class.GrMeshDrawOp::Target"*)** %15, align 8
  %17 = tail call %class.GrAtlasManager* %16(%"class.GrMeshDrawOp::Target"* %5) #18
  %18 = bitcast %"class.GrMeshDrawOp::Target"* %5 to %class.GrDeferredUploadTarget* (%"class.GrMeshDrawOp::Target"*)***
  %19 = load %class.GrDeferredUploadTarget* (%"class.GrMeshDrawOp::Target"*)**, %class.GrDeferredUploadTarget* (%"class.GrMeshDrawOp::Target"*)*** %18, align 8
  %20 = getelementptr inbounds %class.GrDeferredUploadTarget* (%"class.GrMeshDrawOp::Target"*)*, %class.GrDeferredUploadTarget* (%"class.GrMeshDrawOp::Target"*)** %19, i64 28
  %21 = load %class.GrDeferredUploadTarget* (%"class.GrMeshDrawOp::Target"*)*, %class.GrDeferredUploadTarget* (%"class.GrMeshDrawOp::Target"*)** %20, align 8
  %22 = tail call %class.GrDeferredUploadTarget* %21(%"class.GrMeshDrawOp::Target"* %5) #18
  %23 = icmp eq i32 %3, 1
  %24 = bitcast %class.GrBackendFormat* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %24) #18
  br i1 %23, label %25, label %33

25:                                               ; preds = %7
  %26 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %17, i64 0, i32 5
  %27 = load %class.GrProxyProvider*, %class.GrProxyProvider** %26, align 8
  %28 = tail call %class.GrCaps* @_ZNK15GrProxyProvider4capsEv(%class.GrProxyProvider* %27) #18
  call void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %11, %class.GrCaps* %28, i32 2, i1 zeroext false) #18
  %29 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %11, i64 0, i32 1
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp eq i8 %30, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %24) #18
  %32 = select i1 %31, i32 2, i32 1
  br label %34

33:                                               ; preds = %7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %24) #18
  br label %34

34:                                               ; preds = %25, %33
  %35 = phi i32 [ %32, %25 ], [ %3, %33 ]
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %17, i64 0, i32 4, i64 %36, i32 0, i32 0, i32 0
  %38 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %37, align 8
  %39 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %38, i64 0, i32 8
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.GrMeshDrawOp::Target"* %5 to %class.GrStrikeCache* (%"class.GrMeshDrawOp::Target"*)***
  %42 = load %class.GrStrikeCache* (%"class.GrMeshDrawOp::Target"*)**, %class.GrStrikeCache* (%"class.GrMeshDrawOp::Target"*)*** %41, align 8
  %43 = getelementptr inbounds %class.GrStrikeCache* (%"class.GrMeshDrawOp::Target"*)*, %class.GrStrikeCache* (%"class.GrMeshDrawOp::Target"*)** %42, i64 23
  %44 = load %class.GrStrikeCache* (%"class.GrMeshDrawOp::Target"*)*, %class.GrStrikeCache* (%"class.GrMeshDrawOp::Target"*)** %43, align 8
  %45 = call %class.GrStrikeCache* %44(%"class.GrMeshDrawOp::Target"* %5) #18
  %46 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %46, i64 0, i32 0
  %48 = load %class.GrTextStrike*, %class.GrTextStrike** %47, align 8
  %49 = icmp eq %class.GrTextStrike* %48, null
  br i1 %49, label %50, label %114

50:                                               ; preds = %34
  %51 = bitcast %class.sk_sp.301* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #18
  %52 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 0
  call void @_ZNK12SkStrikeSpec20findOrCreateGrStrikeEP13GrStrikeCache(%class.sk_sp.301* nonnull sret %10, %class.SkStrikeSpec* %52, %class.GrStrikeCache* %45) #18
  %53 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %10, i64 0, i32 0
  %54 = bitcast %class.sk_sp.301* %10 to i64*
  %55 = load i64, i64* %54, align 8
  store %class.GrTextStrike* null, %class.GrTextStrike** %53, align 8
  %56 = load %class.GrTextStrike*, %class.GrTextStrike** %47, align 8
  %57 = bitcast %class.sk_sp.301* %46 to i64*
  store i64 %55, i64* %57, align 8
  %58 = icmp eq %class.GrTextStrike* %56, null
  br i1 %58, label %98, label %59

59:                                               ; preds = %50
  %60 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %56, i64 0, i32 0
  %61 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %77

64:                                               ; preds = %59
  %65 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %60, i64 38
  %66 = bitcast %class.SkNVRefCnt.302* %65 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %66) #18
  %67 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %60, i64 6
  %68 = bitcast %class.SkNVRefCnt.302* %67 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %68) #18
  %69 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %60, i64 4
  %70 = bitcast %class.SkNVRefCnt.302* %69 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %71 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %70, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %70, align 8
  %72 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %64
  %74 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %71 to i8*
  call void @_ZdaPv(i8* %74) #20
  br label %75

75:                                               ; preds = %73, %64
  %76 = bitcast %class.GrTextStrike* %56 to i8*
  call void @_ZdlPv(i8* %76) #20
  br label %77

77:                                               ; preds = %59, %75
  %78 = load %class.GrTextStrike*, %class.GrTextStrike** %53, align 8
  %79 = icmp eq %class.GrTextStrike* %78, null
  br i1 %79, label %98, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %78, i64 0, i32 0
  %82 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 -1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %98

85:                                               ; preds = %80
  %86 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %81, i64 38
  %87 = bitcast %class.SkNVRefCnt.302* %86 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %87) #18
  %88 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %81, i64 6
  %89 = bitcast %class.SkNVRefCnt.302* %88 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %89) #18
  %90 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %81, i64 4
  %91 = bitcast %class.SkNVRefCnt.302* %90 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %92 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %91, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %91, align 8
  %93 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %85
  %95 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %92 to i8*
  call void @_ZdaPv(i8* %95) #20
  br label %96

96:                                               ; preds = %94, %85
  %97 = bitcast %class.GrTextStrike* %78 to i8*
  call void @_ZdlPv(i8* %97) #20
  br label %98

98:                                               ; preds = %50, %77, %80, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #18
  %99 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 1, i32 0
  %100 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %99, align 8
  %101 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 1, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %100, i64 %102
  %104 = icmp eq i64 %102, 0
  br i1 %104, label %114, label %105

105:                                              ; preds = %98, %105
  %106 = phi %"union.(anonymous namespace)::GlyphVector::Variant"* [ %112, %105 ], [ %100, %98 ]
  %107 = load %class.GrTextStrike*, %class.GrTextStrike** %47, align 8
  %108 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"* %106 to i32*
  %109 = load i32, i32* %108, align 8
  %110 = call %class.GrGlyph* @_ZN12GrTextStrike8getGlyphE15SkPackedGlyphID(%class.GrTextStrike* %107, i32 %109) #18
  %111 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %106, i64 0, i32 0
  store %class.GrGlyph* %110, %class.GrGlyph** %111, align 8
  %112 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %106, i64 1
  %113 = icmp eq %"union.(anonymous namespace)::GlyphVector::Variant"* %112, %103
  br i1 %113, label %114, label %105

114:                                              ; preds = %105, %34, %98
  %115 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 3
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq i64 %116, %40
  br i1 %117, label %229, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 4
  %120 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i64 32
  %121 = bitcast i8* %120 to %class.SkTArray.313*
  %122 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i64 40
  %123 = bitcast i8* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = and i64 %124, -4294967295
  store i64 %125, i64* %123, align 8
  call void @_ZN8SkTArrayIN13GrDrawOpAtlas19BulkUseTokenUpdater8PlotDataELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.313* %121, i32 0, i32 2) #18
  %126 = load i64, i64* %123, align 8
  %127 = and i64 %126, -4294967297
  store i64 %127, i64* %123, align 8
  %128 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 4, i32 1, i64 0
  %129 = bitcast i32* %128 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 16, i1 false) #18
  %130 = bitcast %class.SkBulkGlyphMetricsAndImages* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %130) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 -86, i64 536, i1 false)
  %131 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 0
  call void @_ZN27SkBulkGlyphMetricsAndImagesC1ERK12SkStrikeSpec(%class.SkBulkGlyphMetricsAndImages* nonnull %12, %class.SkStrikeSpec* dereferenceable(160) %131) #18
  %132 = bitcast %class.GrDeferredUploadTarget* %22 to %class.GrTokenTracker* (%class.GrDeferredUploadTarget*)***
  %133 = load %class.GrTokenTracker* (%class.GrDeferredUploadTarget*)**, %class.GrTokenTracker* (%class.GrDeferredUploadTarget*)*** %132, align 8
  %134 = getelementptr inbounds %class.GrTokenTracker* (%class.GrDeferredUploadTarget*)*, %class.GrTokenTracker* (%class.GrDeferredUploadTarget*)** %133, i64 2
  %135 = load %class.GrTokenTracker* (%class.GrDeferredUploadTarget*)*, %class.GrTokenTracker* (%class.GrDeferredUploadTarget*)** %134, align 8
  %136 = call %class.GrTokenTracker* %135(%class.GrDeferredUploadTarget* %22) #18
  %137 = sext i32 %1 to i64
  %138 = sub nsw i32 %2, %1
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 1, i32 0
  %141 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %140, align 8
  %142 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %141, i64 %137
  %143 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %142, i64 %139
  %144 = icmp eq i32 %138, 0
  br i1 %144, label %169, label %145

145:                                              ; preds = %118
  %146 = bitcast %"class.GrMeshDrawOp::Target"* %5 to %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)***
  %147 = getelementptr inbounds %class.GrTokenTracker, %class.GrTokenTracker* %136, i64 0, i32 0, i32 0
  br label %148

148:                                              ; preds = %145, %163
  %149 = phi %"union.(anonymous namespace)::GlyphVector::Variant"* [ %142, %145 ], [ %167, %163 ]
  %150 = phi i32 [ 0, %145 ], [ %166, %163 ]
  %151 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %149, i64 0, i32 0
  %152 = load %class.GrGlyph*, %class.GrGlyph** %151, align 8
  %153 = call zeroext i1 @_ZN14GrAtlasManager8hasGlyphE12GrMaskFormatP7GrGlyph(%class.GrAtlasManager* %17, i32 %3, %class.GrGlyph* %152) #18
  br i1 %153, label %163, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %152, i64 0, i32 0, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = call %class.SkGlyph* @_ZN27SkBulkGlyphMetricsAndImages5glyphE15SkPackedGlyphID(%class.SkBulkGlyphMetricsAndImages* nonnull %12, i32 %156) #18
  %158 = load %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)**, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*** %146, align 8
  %159 = getelementptr inbounds %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)** %158, i64 22
  %160 = load %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)** %159, align 8
  %161 = call %class.GrResourceProvider* %160(%"class.GrMeshDrawOp::Target"* %5) #18
  %162 = call i32 @_ZN14GrAtlasManager15addGlyphToAtlasERK7SkGlyphP7GrGlyphiP18GrResourceProviderP22GrDeferredUploadTargetb(%class.GrAtlasManager* %17, %class.SkGlyph* dereferenceable(40) %157, %class.GrGlyph* %152, i32 %4, %class.GrResourceProvider* %161, %class.GrDeferredUploadTarget* %22, i1 zeroext %6) #18
  switch i32 %162, label %169 [
    i32 1, label %163
    i32 0, label %194
  ]

163:                                              ; preds = %154, %148
  %164 = load i64, i64* %147, align 8
  %165 = add i64 %164, 1
  call void @_ZN14GrAtlasManager28addGlyphToBulkAndSetUseTokenEPN13GrDrawOpAtlas19BulkUseTokenUpdaterE12GrMaskFormatP7GrGlyph21GrDeferredUploadToken(%class.GrAtlasManager* %17, %"class.GrDrawOpAtlas::BulkUseTokenUpdater"* %119, i32 %3, %class.GrGlyph* %152, i64 %165) #18
  %166 = add nuw nsw i32 %150, 1
  %167 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %149, i64 1
  %168 = icmp eq %"union.(anonymous namespace)::GlyphVector::Variant"* %167, %143
  br i1 %168, label %169, label %148

169:                                              ; preds = %163, %154, %118
  %170 = phi i32 [ 0, %118 ], [ %150, %154 ], [ %166, %163 ]
  %171 = add nsw i32 %170, %1
  %172 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 1, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = trunc i64 %173 to i32
  %175 = icmp eq i32 %171, %174
  br i1 %175, label %176, label %194

176:                                              ; preds = %169
  %177 = bitcast %class.GrBackendFormat* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %177) #18
  br i1 %23, label %178, label %186

178:                                              ; preds = %176
  %179 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %17, i64 0, i32 5
  %180 = load %class.GrProxyProvider*, %class.GrProxyProvider** %179, align 8
  %181 = call %class.GrCaps* @_ZNK15GrProxyProvider4capsEv(%class.GrProxyProvider* %180) #18
  call void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %9, %class.GrCaps* %181, i32 2, i1 zeroext false) #18
  %182 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %9, i64 0, i32 1
  %183 = load i8, i8* %182, align 4, !range !2
  %184 = icmp eq i8 %183, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %177) #18
  %185 = select i1 %184, i32 2, i32 1
  br label %187

186:                                              ; preds = %176
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %177) #18
  br label %187

187:                                              ; preds = %178, %186
  %188 = phi i32 [ %185, %178 ], [ %3, %186 ]
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %17, i64 0, i32 4, i64 %189, i32 0, i32 0, i32 0
  %191 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %190, align 8
  %192 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %191, i64 0, i32 8
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %115, align 8
  br label %194

194:                                              ; preds = %154, %187, %169
  %195 = phi i32 [ %170, %187 ], [ %170, %169 ], [ %150, %154 ]
  %196 = phi i64 [ 1, %187 ], [ 1, %169 ], [ 0, %154 ]
  %197 = getelementptr inbounds %class.SkBulkGlyphMetricsAndImages, %class.SkBulkGlyphMetricsAndImages* %12, i64 0, i32 1, i32 0
  %198 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %197, align 8
  %199 = icmp eq %"class.SkStrikeCache::Strike"* %198, null
  br i1 %199, label %210, label %200

200:                                              ; preds = %194
  %201 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %198, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = atomicrmw add i32* %201, i32 -1 acq_rel
  %203 = icmp eq i32 %202, 1
  br i1 %203, label %204, label %210

204:                                              ; preds = %200
  %205 = bitcast %"class.SkStrikeCache::Strike"* %198 to %class.SkRefCntBase*
  %206 = bitcast %"class.SkStrikeCache::Strike"* %198 to void (%class.SkRefCntBase*)***
  %207 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %206, align 8
  %208 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %207, i64 2
  %209 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %208, align 8
  call void %209(%class.SkRefCntBase* nonnull %205) #18
  br label %210

210:                                              ; preds = %204, %200, %194
  %211 = getelementptr inbounds %class.SkBulkGlyphMetricsAndImages, %class.SkBulkGlyphMetricsAndImages* %12, i64 0, i32 0, i32 1
  %212 = load %class.SkGlyph**, %class.SkGlyph*** %211, align 8
  %213 = getelementptr inbounds %class.SkBulkGlyphMetricsAndImages, %class.SkBulkGlyphMetricsAndImages* %12, i64 0, i32 0, i32 0
  %214 = load i32, i32* %213, align 8
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %212, i64 %215
  br label %217

217:                                              ; preds = %217, %210
  %218 = phi %class.SkGlyph** [ %216, %210 ], [ %220, %217 ]
  %219 = icmp ugt %class.SkGlyph** %218, %212
  %220 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %218, i64 -1
  br i1 %219, label %217, label %221

221:                                              ; preds = %217
  %222 = bitcast %class.SkGlyph** %212 to i8*
  %223 = icmp eq i32 %214, 0
  br i1 %223, label %228, label %224

224:                                              ; preds = %221
  %225 = icmp sgt i32 %214, 64
  br i1 %225, label %226, label %227

226:                                              ; preds = %224
  call void @_Z7sk_freePv(i8* %222) #18
  br label %227

227:                                              ; preds = %226, %224
  store %class.SkGlyph** null, %class.SkGlyph*** %211, align 8
  store i32 0, i32* %213, align 8
  br label %228

228:                                              ; preds = %221, %227
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %130) #18
  br label %323

229:                                              ; preds = %114
  %230 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 1, i32 1
  %231 = load i64, i64* %230, align 8
  %232 = trunc i64 %231 to i32
  %233 = icmp eq i32 %232, %2
  br i1 %233, label %234, label %321

234:                                              ; preds = %229
  %235 = bitcast %class.GrDeferredUploadTarget* %22 to %class.GrTokenTracker* (%class.GrDeferredUploadTarget*)***
  %236 = load %class.GrTokenTracker* (%class.GrDeferredUploadTarget*)**, %class.GrTokenTracker* (%class.GrDeferredUploadTarget*)*** %235, align 8
  %237 = getelementptr inbounds %class.GrTokenTracker* (%class.GrDeferredUploadTarget*)*, %class.GrTokenTracker* (%class.GrDeferredUploadTarget*)** %236, i64 2
  %238 = load %class.GrTokenTracker* (%class.GrDeferredUploadTarget*)*, %class.GrTokenTracker* (%class.GrDeferredUploadTarget*)** %237, align 8
  %239 = call %class.GrTokenTracker* %238(%class.GrDeferredUploadTarget* %22) #18
  %240 = getelementptr inbounds %class.GrTokenTracker, %class.GrTokenTracker* %239, i64 0, i32 0, i32 0
  %241 = load i64, i64* %240, align 8
  %242 = add i64 %241, 1
  %243 = bitcast %class.GrBackendFormat* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %243) #18
  br i1 %23, label %244, label %252

244:                                              ; preds = %234
  %245 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %17, i64 0, i32 5
  %246 = load %class.GrProxyProvider*, %class.GrProxyProvider** %245, align 8
  %247 = call %class.GrCaps* @_ZNK15GrProxyProvider4capsEv(%class.GrProxyProvider* %246) #18
  call void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %8, %class.GrCaps* %247, i32 2, i1 zeroext false) #18
  %248 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %8, i64 0, i32 1
  %249 = load i8, i8* %248, align 4, !range !2
  %250 = icmp eq i8 %249, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %243) #18
  %251 = select i1 %250, i32 2, i32 1
  br label %253

252:                                              ; preds = %234
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %243) #18
  br label %253

253:                                              ; preds = %244, %252
  %254 = phi i32 [ %251, %244 ], [ %3, %252 ]
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds %class.GrAtlasManager, %class.GrAtlasManager* %17, i64 0, i32 4, i64 %255, i32 0, i32 0, i32 0
  %257 = load %class.GrDrawOpAtlas*, %class.GrDrawOpAtlas** %256, align 8
  %258 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i64 40
  %259 = bitcast i8* %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = lshr i64 %260, 1
  %262 = trunc i64 %261 to i32
  %263 = and i32 %262, 2147483647
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %321, label %265

265:                                              ; preds = %253
  %266 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i64 32
  %267 = bitcast i8* %266 to %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"**
  %268 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %257, i64 0, i32 15
  %269 = zext i32 %263 to i64
  br label %270

270:                                              ; preds = %318, %265
  %271 = phi i64 [ 0, %265 ], [ %319, %318 ]
  %272 = load %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"*, %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"** %267, align 8
  %273 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %272, i64 %271, i32 0
  %274 = load i32, i32* %273, align 4
  %275 = load i32, i32* %268, align 4
  %276 = icmp ult i32 %274, %275
  br i1 %276, label %277, label %318

277:                                              ; preds = %270
  %278 = zext i32 %274 to i64
  %279 = getelementptr inbounds %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData", %"struct.GrDrawOpAtlas::BulkUseTokenUpdater::PlotData"* %272, i64 %271, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %257, i64 0, i32 13, i64 %278, i32 0, i32 0, i32 0, i32 0
  %283 = load %class.sk_sp.350*, %class.sk_sp.350** %282, align 8
  %284 = getelementptr inbounds %class.sk_sp.350, %class.sk_sp.350* %283, i64 %281, i32 0
  %285 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %284, align 8
  %286 = sext i32 %274 to i64
  %287 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %257, i64 0, i32 13, i64 %286, i32 1
  %288 = getelementptr inbounds %class.SkTInternalLList, %class.SkTInternalLList* %287, i64 0, i32 0
  %289 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %288, align 8
  %290 = icmp eq %"class.GrDrawOpAtlas::Plot"* %289, %285
  br i1 %290, label %316, label %291

291:                                              ; preds = %277
  %292 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %285, i64 0, i32 1
  %293 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %292, align 8
  %294 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %285, i64 0, i32 2
  %295 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %294, align 8
  %296 = icmp eq %"class.GrDrawOpAtlas::Plot"* %293, null
  %297 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %293, i64 0, i32 2
  %298 = select i1 %296, %"class.GrDrawOpAtlas::Plot"** %288, %"class.GrDrawOpAtlas::Plot"** %297
  store %"class.GrDrawOpAtlas::Plot"* %295, %"class.GrDrawOpAtlas::Plot"** %298, align 8
  %299 = icmp eq %"class.GrDrawOpAtlas::Plot"* %295, null
  %300 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %257, i64 0, i32 13, i64 %286, i32 1, i32 1
  %301 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %295, i64 0, i32 1
  %302 = select i1 %299, %"class.GrDrawOpAtlas::Plot"** %300, %"class.GrDrawOpAtlas::Plot"** %301
  store %"class.GrDrawOpAtlas::Plot"* %293, %"class.GrDrawOpAtlas::Plot"** %302, align 8
  %303 = bitcast %class.SkTInternalLList* %287 to i64*
  %304 = bitcast %"class.GrDrawOpAtlas::Plot"** %292 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %304, i8 0, i64 16, i1 false) #18
  %305 = load i64, i64* %303, align 8
  %306 = bitcast %"class.GrDrawOpAtlas::Plot"** %294 to i64*
  store i64 %305, i64* %306, align 8
  %307 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %288, align 8
  %308 = icmp eq %"class.GrDrawOpAtlas::Plot"* %307, null
  br i1 %308, label %311, label %309

309:                                              ; preds = %291
  %310 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %307, i64 0, i32 1
  store %"class.GrDrawOpAtlas::Plot"* %285, %"class.GrDrawOpAtlas::Plot"** %310, align 8
  br label %311

311:                                              ; preds = %309, %291
  store %"class.GrDrawOpAtlas::Plot"* %285, %"class.GrDrawOpAtlas::Plot"** %288, align 8
  %312 = getelementptr inbounds %class.GrDrawOpAtlas, %class.GrDrawOpAtlas* %257, i64 0, i32 13, i64 %286, i32 1, i32 1
  %313 = load %"class.GrDrawOpAtlas::Plot"*, %"class.GrDrawOpAtlas::Plot"** %312, align 8
  %314 = icmp eq %"class.GrDrawOpAtlas::Plot"* %313, null
  br i1 %314, label %315, label %316

315:                                              ; preds = %311
  store %"class.GrDrawOpAtlas::Plot"* %285, %"class.GrDrawOpAtlas::Plot"** %312, align 8
  br label %316

316:                                              ; preds = %315, %311, %277
  %317 = getelementptr inbounds %"class.GrDrawOpAtlas::Plot", %"class.GrDrawOpAtlas::Plot"* %285, i64 0, i32 4, i32 0
  store i64 %242, i64* %317, align 8
  br label %318

318:                                              ; preds = %316, %270
  %319 = add nuw nsw i64 %271, 1
  %320 = icmp eq i64 %319, %269
  br i1 %320, label %321, label %270

321:                                              ; preds = %318, %253, %229
  %322 = sub nsw i32 %2, %1
  br label %323

323:                                              ; preds = %321, %228
  %324 = phi i64 [ 1, %321 ], [ %196, %228 ]
  %325 = phi i32 [ %322, %321 ], [ %195, %228 ]
  %326 = zext i32 %325 to i64
  %327 = shl nuw i64 %326, 32
  %328 = and i64 %324, 255
  %329 = or i64 %327, %328
  ret i64 %329
}

declare void @_ZN27SkBulkGlyphMetricsAndImagesC1ERK12SkStrikeSpec(%class.SkBulkGlyphMetricsAndImages*, %class.SkStrikeSpec* dereferenceable(160)) unnamed_addr #2

declare zeroext i1 @_ZN14GrAtlasManager8hasGlyphE12GrMaskFormatP7GrGlyph(%class.GrAtlasManager*, i32, %class.GrGlyph*) local_unnamed_addr #2

declare %class.SkGlyph* @_ZN27SkBulkGlyphMetricsAndImages5glyphE15SkPackedGlyphID(%class.SkBulkGlyphMetricsAndImages*, i32) local_unnamed_addr #2

declare i32 @_ZN14GrAtlasManager15addGlyphToAtlasERK7SkGlyphP7GrGlyphiP18GrResourceProviderP22GrDeferredUploadTargetb(%class.GrAtlasManager*, %class.SkGlyph* dereferenceable(40), %class.GrGlyph*, i32, %class.GrResourceProvider*, %class.GrDeferredUploadTarget*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN14GrAtlasManager28addGlyphToBulkAndSetUseTokenEPN13GrDrawOpAtlas19BulkUseTokenUpdaterE12GrMaskFormatP7GrGlyph21GrDeferredUploadToken(%class.GrAtlasManager*, %"class.GrDrawOpAtlas::BulkUseTokenUpdater"*, i32, %class.GrGlyph*, i64) local_unnamed_addr #2

declare %class.GrCaps* @_ZNK15GrProxyProvider4capsEv(%class.GrProxyProvider*) local_unnamed_addr #2

declare void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* sret, %class.GrCaps*, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_121generalized_direct_2DIA4_NS_12ARGB2DVertexEN4skvx3VecILi2EsEEEEv5SkZipIJT_PK7GrGlyphKT0_EEj8SkIPointP7SkIRect(%class.SkZip.407* byval(%class.SkZip.407) align 8, i64, %struct.SkIRect*) unnamed_addr #0 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %6 = alloca %struct.SkIRect, align 4
  %7 = getelementptr inbounds %class.SkZip.407, %class.SkZip.407* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8, !noalias !68
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %40, label %10

10:                                               ; preds = %3
  %11 = lshr i64 %1, 32
  %12 = trunc i64 %11 to i32
  %13 = trunc i64 %1 to i32
  %14 = getelementptr inbounds %class.SkZip.407, %class.SkZip.407* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]*, [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]** %14, align 8, !noalias !71
  %16 = getelementptr inbounds %class.SkZip.407, %class.SkZip.407* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %17 = load %class.GrGlyph**, %class.GrGlyph*** %16, align 8, !noalias !71
  %18 = getelementptr inbounds %class.SkZip.407, %class.SkZip.407* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %19 = load %"struct.skvx::Vec"*, %"struct.skvx::Vec"** %18, align 8, !noalias !71
  %20 = sitofp i32 %13 to float
  %21 = sitofp i32 %12 to float
  %22 = icmp eq %struct.SkIRect* %2, null
  %23 = bitcast { i64, i64 }* %4 to i8*
  %24 = bitcast { i64, i64 }* %4 to i32*
  %25 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 1
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %27 = bitcast i64* %26 to i32*
  %28 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 3
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %30 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %33 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %34 = bitcast %struct.SkIRect* %6 to i8*
  %35 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %36 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %37 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %38 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %39 = bitcast %struct.SkIRect* %6 to i8*
  br label %41

40:                                               ; preds = %211, %3
  ret void

41:                                               ; preds = %10, %211
  %42 = phi i64 [ 0, %10 ], [ %212, %211 ]
  %43 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %15, i64 %42
  %44 = getelementptr inbounds %class.GrGlyph*, %class.GrGlyph** %17, i64 %42
  %45 = load %class.GrGlyph*, %class.GrGlyph** %44, align 8
  %46 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %45, i64 0, i32 1, i32 1
  %47 = bitcast %"struct.std::__1::array.294"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %48 to i16
  %50 = lshr i64 %48, 16
  %51 = trunc i64 %50 to i16
  %52 = lshr i64 %48, 32
  %53 = trunc i64 %52 to i16
  %54 = lshr i64 %48, 48
  %55 = trunc i64 %54 to i16
  %56 = sub i16 %53, %49
  %57 = sub i16 %55, %51
  %58 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %19, i64 %42, i32 0, i32 0
  %59 = load i16, i16* %58, align 2
  %60 = sitofp i16 %59 to float
  %61 = fadd float %20, %60
  %62 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %19, i64 %42, i32 1, i32 0
  %63 = load i16, i16* %62, align 2
  %64 = sitofp i16 %63 to float
  %65 = fadd float %21, %64
  br i1 %22, label %66, label %102

66:                                               ; preds = %41
  %67 = uitofp i16 %56 to float
  %68 = fadd float %61, %67
  %69 = uitofp i16 %57 to float
  %70 = fadd float %65, %69
  %71 = insertelement <2 x float> undef, float %61, i32 0
  %72 = insertelement <2 x float> %71, float %65, i32 1
  %73 = insertelement <2 x float> undef, float %68, i32 0
  %74 = insertelement <2 x float> %73, float %70, i32 1
  %75 = trunc i64 %48 to i32
  %76 = and i32 %75, -65536
  %77 = and i32 %75, 65535
  %78 = bitcast [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %43 to <2 x float>*
  store <2 x float> %72, <2 x float>* %78, align 4
  %79 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %15, i64 %42, i64 0, i32 1
  %80 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %79 to i32*
  store i32 %75, i32* %80, align 4
  %81 = insertelement <2 x float> %72, float %70, i32 1
  %82 = shl nuw nsw i64 %54, 16
  %83 = trunc i64 %82 to i32
  %84 = or i32 %77, %83
  %85 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %15, i64 %42, i64 1
  %86 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %85 to <2 x float>*
  store <2 x float> %81, <2 x float>* %86, align 4
  %87 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %15, i64 %42, i64 1, i32 1
  %88 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %87 to i32*
  store i32 %84, i32* %88, align 4
  %89 = insertelement <2 x float> %74, float %65, i32 1
  %90 = trunc i64 %52 to i32
  %91 = and i32 %90, 65535
  %92 = or i32 %91, %76
  %93 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %15, i64 %42, i64 2
  %94 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %93 to <2 x float>*
  store <2 x float> %89, <2 x float>* %94, align 4
  %95 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %15, i64 %42, i64 2, i32 1
  %96 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %95 to i32*
  store i32 %92, i32* %96, align 4
  %97 = or i32 %91, %83
  %98 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %15, i64 %42, i64 3
  %99 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %98 to <2 x float>*
  store <2 x float> %74, <2 x float>* %99, align 4
  %100 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %15, i64 %42, i64 3, i32 1
  %101 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %100 to i32*
  store i32 %97, i32* %101, align 4
  br label %211

102:                                              ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #18
  %103 = fptosi float %61 to i32
  %104 = fptosi float %65 to i32
  %105 = uitofp i16 %56 to float
  %106 = fadd float %61, %105
  %107 = fptosi float %106 to i32
  %108 = uitofp i16 %57 to float
  %109 = fadd float %65, %108
  %110 = fptosi float %109 to i32
  %111 = zext i32 %104 to i64
  %112 = shl nuw i64 %111, 32
  %113 = zext i32 %103 to i64
  %114 = or i64 %112, %113
  %115 = zext i32 %110 to i64
  %116 = shl nuw i64 %115, 32
  %117 = zext i32 %107 to i64
  %118 = or i64 %116, %117
  store i64 %114, i64* %29, align 8
  store i64 %118, i64* %26, align 8
  %119 = load i32, i32* %30, align 4
  %120 = icmp sgt i32 %119, %103
  br i1 %120, label %130, label %121

121:                                              ; preds = %102
  %122 = load i32, i32* %31, align 4
  %123 = icmp sgt i32 %122, %104
  br i1 %123, label %130, label %124

124:                                              ; preds = %121
  %125 = load i32, i32* %32, align 4
  %126 = icmp slt i32 %125, %107
  br i1 %126, label %130, label %127

127:                                              ; preds = %124
  %128 = load i32, i32* %33, align 4
  %129 = icmp slt i32 %128, %110
  br i1 %129, label %130, label %166

130:                                              ; preds = %127, %102, %121, %124
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %39, i8 -86, i64 16, i1 false)
  %131 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %6, %struct.SkIRect* nonnull dereferenceable(16) %5, %struct.SkIRect* nonnull dereferenceable(16) %2) #18
  br i1 %131, label %132, label %157

132:                                              ; preds = %130
  %133 = load i32, i32* %35, align 4
  %134 = load i32, i32* %24, align 8
  %135 = sub nsw i32 %133, %134
  %136 = trunc i32 %135 to i16
  %137 = add i16 %136, %49
  %138 = load i32, i32* %36, align 4
  %139 = load i32, i32* %25, align 4
  %140 = sub nsw i32 %138, %139
  %141 = trunc i32 %140 to i16
  %142 = add i16 %141, %51
  %143 = load i32, i32* %37, align 4
  %144 = load i32, i32* %27, align 8
  %145 = sub nsw i32 %143, %144
  %146 = trunc i32 %145 to i16
  %147 = add i16 %146, %53
  %148 = load i32, i32* %38, align 4
  %149 = load i32, i32* %28, align 4
  %150 = sub nsw i32 %148, %149
  %151 = trunc i32 %150 to i16
  %152 = add i16 %151, %55
  %153 = sitofp i32 %133 to float
  %154 = sitofp i32 %138 to float
  %155 = sitofp i32 %143 to float
  %156 = sitofp i32 %148 to float
  br label %157

157:                                              ; preds = %130, %132
  %158 = phi float [ %153, %132 ], [ 0.000000e+00, %130 ]
  %159 = phi float [ %154, %132 ], [ 0.000000e+00, %130 ]
  %160 = phi float [ %155, %132 ], [ 0.000000e+00, %130 ]
  %161 = phi float [ %156, %132 ], [ 0.000000e+00, %130 ]
  %162 = phi i16 [ %152, %132 ], [ 0, %130 ]
  %163 = phi i16 [ %147, %132 ], [ 0, %130 ]
  %164 = phi i16 [ %142, %132 ], [ 0, %130 ]
  %165 = phi i16 [ %137, %132 ], [ 0, %130 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #18
  br label %171

166:                                              ; preds = %127
  %167 = sitofp i32 %103 to float
  %168 = sitofp i32 %104 to float
  %169 = sitofp i32 %107 to float
  %170 = sitofp i32 %110 to float
  br label %171

171:                                              ; preds = %166, %157
  %172 = phi float [ %167, %166 ], [ %158, %157 ]
  %173 = phi float [ %168, %166 ], [ %159, %157 ]
  %174 = phi float [ %169, %166 ], [ %160, %157 ]
  %175 = phi float [ %170, %166 ], [ %161, %157 ]
  %176 = phi i16 [ %55, %166 ], [ %162, %157 ]
  %177 = phi i16 [ %53, %166 ], [ %163, %157 ]
  %178 = phi i16 [ %51, %166 ], [ %164, %157 ]
  %179 = phi i16 [ %49, %166 ], [ %165, %157 ]
  %180 = insertelement <2 x float> undef, float %172, i32 0
  %181 = insertelement <2 x float> %180, float %173, i32 1
  %182 = zext i16 %178 to i32
  %183 = shl nuw i32 %182, 16
  %184 = zext i16 %179 to i32
  %185 = or i32 %183, %184
  %186 = bitcast [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %43 to <2 x float>*
  store <2 x float> %181, <2 x float>* %186, align 4
  %187 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %15, i64 %42, i64 0, i32 1
  %188 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %187 to i32*
  store i32 %185, i32* %188, align 4
  %189 = insertelement <2 x float> %180, float %175, i32 1
  %190 = zext i16 %176 to i32
  %191 = shl nuw i32 %190, 16
  %192 = or i32 %191, %184
  %193 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %15, i64 %42, i64 1
  %194 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %193 to <2 x float>*
  store <2 x float> %189, <2 x float>* %194, align 4
  %195 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %15, i64 %42, i64 1, i32 1
  %196 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %195 to i32*
  store i32 %192, i32* %196, align 4
  %197 = insertelement <2 x float> undef, float %174, i32 0
  %198 = insertelement <2 x float> %197, float %173, i32 1
  %199 = zext i16 %177 to i32
  %200 = or i32 %183, %199
  %201 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %15, i64 %42, i64 2
  %202 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %201 to <2 x float>*
  store <2 x float> %198, <2 x float>* %202, align 4
  %203 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %15, i64 %42, i64 2, i32 1
  %204 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %203 to i32*
  store i32 %200, i32* %204, align 4
  %205 = insertelement <2 x float> %197, float %175, i32 1
  %206 = or i32 %191, %199
  %207 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %15, i64 %42, i64 3
  %208 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %207 to <2 x float>*
  store <2 x float> %205, <2 x float>* %208, align 4
  %209 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %15, i64 %42, i64 3, i32 1
  %210 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %209 to i32*
  store i32 %206, i32* %210, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #18
  br label %211

211:                                              ; preds = %171, %66
  %212 = add nuw i64 %42, 1
  %213 = icmp eq i64 %212, %8
  br i1 %213, label %40, label %41
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_121generalized_direct_2DIA4_NS_12Mask2DVertexEN4skvx3VecILi2EsEEEEv5SkZipIJT_PK7GrGlyphKT0_EEj8SkIPointP7SkIRect(%class.SkZip.401* byval(%class.SkZip.401) align 8, i32, i64, %struct.SkIRect*) unnamed_addr #4 {
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %struct.SkIRect*
  %7 = alloca %struct.SkIRect, align 4
  %8 = getelementptr inbounds %class.SkZip.401, %class.SkZip.401* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8, !noalias !80
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %41, label %11

11:                                               ; preds = %4
  %12 = lshr i64 %2, 32
  %13 = trunc i64 %12 to i32
  %14 = trunc i64 %2 to i32
  %15 = getelementptr inbounds %class.SkZip.401, %class.SkZip.401* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load [4 x %"struct.(anonymous namespace)::Mask2DVertex"]*, [4 x %"struct.(anonymous namespace)::Mask2DVertex"]** %15, align 8, !noalias !83
  %17 = getelementptr inbounds %class.SkZip.401, %class.SkZip.401* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %18 = load %class.GrGlyph**, %class.GrGlyph*** %17, align 8, !noalias !83
  %19 = getelementptr inbounds %class.SkZip.401, %class.SkZip.401* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %20 = load %"struct.skvx::Vec"*, %"struct.skvx::Vec"** %19, align 8, !noalias !83
  %21 = sitofp i32 %14 to float
  %22 = sitofp i32 %13 to float
  %23 = icmp eq %struct.SkIRect* %3, null
  %24 = bitcast { i64, i64 }* %5 to i8*
  %25 = bitcast { i64, i64 }* %5 to i32*
  %26 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %28 = bitcast i64* %27 to i32*
  %29 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %33 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %34 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %35 = bitcast %struct.SkIRect* %7 to i8*
  %36 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 0
  %37 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 1
  %38 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 2
  %39 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 3
  %40 = bitcast %struct.SkIRect* %7 to i8*
  br label %42

41:                                               ; preds = %205, %4
  ret void

42:                                               ; preds = %11, %205
  %43 = phi i64 [ 0, %11 ], [ %206, %205 ]
  %44 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43
  %45 = getelementptr inbounds %class.GrGlyph*, %class.GrGlyph** %18, i64 %43
  %46 = load %class.GrGlyph*, %class.GrGlyph** %45, align 8
  %47 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %46, i64 0, i32 1, i32 1
  %48 = bitcast %"struct.std::__1::array.294"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i16
  %51 = lshr i64 %49, 16
  %52 = trunc i64 %51 to i16
  %53 = lshr i64 %49, 32
  %54 = trunc i64 %53 to i16
  %55 = lshr i64 %49, 48
  %56 = trunc i64 %55 to i16
  %57 = sub i16 %54, %50
  %58 = sub i16 %56, %52
  %59 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %20, i64 %43, i32 0, i32 0
  %60 = load i16, i16* %59, align 2
  %61 = sitofp i16 %60 to float
  %62 = fadd float %21, %61
  %63 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %20, i64 %43, i32 1, i32 0
  %64 = load i16, i16* %63, align 2
  %65 = sitofp i16 %64 to float
  %66 = fadd float %22, %65
  br i1 %23, label %67, label %92

67:                                               ; preds = %42
  %68 = uitofp i16 %57 to float
  %69 = fadd float %62, %68
  %70 = uitofp i16 %58 to float
  %71 = fadd float %66, %70
  %72 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %44, i64 0, i64 0, i32 0, i32 0
  store float %62, float* %72, align 4
  %73 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 0, i32 0, i32 1
  store float %66, float* %73, align 4
  %74 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 0, i32 1
  store i32 %1, i32* %74, align 4
  %75 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 0, i32 2, i32 0
  store i16 %50, i16* %75, align 4
  %76 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 0, i32 2, i32 1
  store i16 %52, i16* %76, align 2
  %77 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 1, i32 0, i32 0
  store float %62, float* %77, align 4
  %78 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 1, i32 0, i32 1
  store float %71, float* %78, align 4
  %79 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 1, i32 1
  store i32 %1, i32* %79, align 4
  %80 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 1, i32 2, i32 0
  store i16 %50, i16* %80, align 4
  %81 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 1, i32 2, i32 1
  store i16 %56, i16* %81, align 2
  %82 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 2, i32 0, i32 0
  store float %69, float* %82, align 4
  %83 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 2, i32 0, i32 1
  store float %66, float* %83, align 4
  %84 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 2, i32 1
  store i32 %1, i32* %84, align 4
  %85 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 2, i32 2, i32 0
  store i16 %54, i16* %85, align 4
  %86 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 2, i32 2, i32 1
  store i16 %52, i16* %86, align 2
  %87 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 3, i32 0, i32 0
  store float %69, float* %87, align 4
  %88 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 3, i32 0, i32 1
  store float %71, float* %88, align 4
  %89 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 3, i32 1
  store i32 %1, i32* %89, align 4
  %90 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 3, i32 2, i32 0
  store i16 %54, i16* %90, align 4
  %91 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 3, i32 2, i32 1
  store i16 %56, i16* %91, align 2
  br label %205

92:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #18
  %93 = fptosi float %62 to i32
  %94 = fptosi float %66 to i32
  %95 = uitofp i16 %57 to float
  %96 = fadd float %62, %95
  %97 = fptosi float %96 to i32
  %98 = uitofp i16 %58 to float
  %99 = fadd float %66, %98
  %100 = fptosi float %99 to i32
  %101 = zext i32 %94 to i64
  %102 = shl nuw i64 %101, 32
  %103 = zext i32 %93 to i64
  %104 = or i64 %102, %103
  %105 = zext i32 %100 to i64
  %106 = shl nuw i64 %105, 32
  %107 = zext i32 %97 to i64
  %108 = or i64 %106, %107
  store i64 %104, i64* %30, align 8
  store i64 %108, i64* %27, align 8
  %109 = load i32, i32* %31, align 4
  %110 = icmp sgt i32 %109, %93
  br i1 %110, label %120, label %111

111:                                              ; preds = %92
  %112 = load i32, i32* %32, align 4
  %113 = icmp sgt i32 %112, %94
  br i1 %113, label %120, label %114

114:                                              ; preds = %111
  %115 = load i32, i32* %33, align 4
  %116 = icmp slt i32 %115, %97
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = load i32, i32* %34, align 4
  %119 = icmp slt i32 %118, %100
  br i1 %119, label %120, label %160

120:                                              ; preds = %117, %92, %111, %114
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %40, i8 -86, i64 16, i1 false)
  %121 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %7, %struct.SkIRect* nonnull dereferenceable(16) %6, %struct.SkIRect* nonnull dereferenceable(16) %3) #18
  br i1 %121, label %122, label %151

122:                                              ; preds = %120
  %123 = load i32, i32* %36, align 4
  %124 = load i32, i32* %25, align 8
  %125 = sub nsw i32 %123, %124
  %126 = trunc i32 %125 to i16
  %127 = add i16 %126, %50
  %128 = load i32, i32* %37, align 4
  %129 = load i32, i32* %26, align 4
  %130 = sub nsw i32 %128, %129
  %131 = trunc i32 %130 to i16
  %132 = add i16 %131, %52
  %133 = load i32, i32* %38, align 4
  %134 = load i32, i32* %28, align 8
  %135 = sub nsw i32 %133, %134
  %136 = trunc i32 %135 to i16
  %137 = add i16 %136, %54
  %138 = load i32, i32* %39, align 4
  %139 = load i32, i32* %29, align 4
  %140 = sub nsw i32 %138, %139
  %141 = trunc i32 %140 to i16
  %142 = add i16 %141, %56
  %143 = sitofp i32 %123 to float
  %144 = bitcast float %143 to i32
  %145 = sitofp i32 %128 to float
  %146 = bitcast float %145 to i32
  %147 = sitofp i32 %133 to float
  %148 = bitcast float %147 to i32
  %149 = sitofp i32 %138 to float
  %150 = bitcast float %149 to i32
  br label %151

151:                                              ; preds = %120, %122
  %152 = phi i32 [ %144, %122 ], [ 0, %120 ]
  %153 = phi i32 [ %146, %122 ], [ 0, %120 ]
  %154 = phi i32 [ %148, %122 ], [ 0, %120 ]
  %155 = phi i32 [ %150, %122 ], [ 0, %120 ]
  %156 = phi i16 [ %142, %122 ], [ 0, %120 ]
  %157 = phi i16 [ %137, %122 ], [ 0, %120 ]
  %158 = phi i16 [ %132, %122 ], [ 0, %120 ]
  %159 = phi i16 [ %127, %122 ], [ 0, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #18
  br label %169

160:                                              ; preds = %117
  %161 = sitofp i32 %93 to float
  %162 = bitcast float %161 to i32
  %163 = sitofp i32 %94 to float
  %164 = bitcast float %163 to i32
  %165 = sitofp i32 %97 to float
  %166 = bitcast float %165 to i32
  %167 = sitofp i32 %100 to float
  %168 = bitcast float %167 to i32
  br label %169

169:                                              ; preds = %160, %151
  %170 = phi i32 [ %162, %160 ], [ %152, %151 ]
  %171 = phi i32 [ %164, %160 ], [ %153, %151 ]
  %172 = phi i32 [ %166, %160 ], [ %154, %151 ]
  %173 = phi i32 [ %168, %160 ], [ %155, %151 ]
  %174 = phi i16 [ %56, %160 ], [ %156, %151 ]
  %175 = phi i16 [ %54, %160 ], [ %157, %151 ]
  %176 = phi i16 [ %52, %160 ], [ %158, %151 ]
  %177 = phi i16 [ %50, %160 ], [ %159, %151 ]
  %178 = bitcast [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %44 to i32*
  store i32 %170, i32* %178, align 4
  %179 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 0, i32 0, i32 1
  %180 = bitcast float* %179 to i32*
  store i32 %171, i32* %180, align 4
  %181 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 0, i32 1
  store i32 %1, i32* %181, align 4
  %182 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 0, i32 2, i32 0
  store i16 %177, i16* %182, align 4
  %183 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 0, i32 2, i32 1
  store i16 %176, i16* %183, align 2
  %184 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 1, i32 0, i32 0
  %185 = bitcast float* %184 to i32*
  store i32 %170, i32* %185, align 4
  %186 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 1, i32 0, i32 1
  %187 = bitcast float* %186 to i32*
  store i32 %173, i32* %187, align 4
  %188 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 1, i32 1
  store i32 %1, i32* %188, align 4
  %189 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 1, i32 2, i32 0
  store i16 %177, i16* %189, align 4
  %190 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 1, i32 2, i32 1
  store i16 %174, i16* %190, align 2
  %191 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 2, i32 0, i32 0
  %192 = bitcast float* %191 to i32*
  store i32 %172, i32* %192, align 4
  %193 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 2, i32 0, i32 1
  %194 = bitcast float* %193 to i32*
  store i32 %171, i32* %194, align 4
  %195 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 2, i32 1
  store i32 %1, i32* %195, align 4
  %196 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 2, i32 2, i32 0
  store i16 %175, i16* %196, align 4
  %197 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 2, i32 2, i32 1
  store i16 %176, i16* %197, align 2
  %198 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 3, i32 0, i32 0
  %199 = bitcast float* %198 to i32*
  store i32 %172, i32* %199, align 4
  %200 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 3, i32 0, i32 1
  %201 = bitcast float* %200 to i32*
  store i32 %173, i32* %201, align 4
  %202 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 3, i32 1
  store i32 %1, i32* %202, align 4
  %203 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 3, i32 2, i32 0
  store i16 %175, i16* %203, align 4
  %204 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %16, i64 %43, i64 3, i32 2, i32 1
  store i16 %174, i16* %204, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #18
  br label %205

205:                                              ; preds = %169, %67
  %206 = add nuw i64 %43, 1
  %207 = icmp eq i64 %206, %9
  br i1 %207, label %41, label %42
}

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @_ZZN12GrBagOfBytes16allocateBytesForIN12_GLOBAL__N_110PathSubRun9PathGlyphEEEPciENKUlvE_clEv() unnamed_addr #15 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #19
  unreachable
}

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110PathSubRunD2Ev(%"class.(anonymous namespace)::PathSubRun"*) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN12_GLOBAL__N_110PathSubRunE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"struct.(anonymous namespace)::PathSubRun::PathGlyph"*, %"struct.(anonymous namespace)::PathSubRun::PathGlyph"** %3, align 8
  store %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* null, %"struct.(anonymous namespace)::PathSubRun::PathGlyph"** %3, align 8
  %5 = icmp eq %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %6, %10
  %11 = phi i64 [ %13, %10 ], [ 0, %6 ]
  %12 = getelementptr inbounds %"struct.(anonymous namespace)::PathSubRun::PathGlyph", %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %4, i64 %11, i32 0
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %12) #18
  %13 = add nuw nsw i64 %11, 1
  %14 = load i32, i32* %7, align 4
  %15 = sext i32 %14 to i64
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %1, %6
  %18 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 3, i32 3, i32 0
  %19 = load %class.SkTypeface*, %class.SkTypeface** %18, align 8
  %20 = icmp eq %class.SkTypeface* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %class.SkTypeface* %19 to %class.SkRefCntBase*
  %27 = bitcast %class.SkTypeface* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  tail call void %30(%class.SkRefCntBase* nonnull %26) #18
  br label %31

31:                                               ; preds = %25, %21, %17
  %32 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 3, i32 2, i32 0
  %33 = load %class.SkPathEffect*, %class.SkPathEffect** %32, align 8
  %34 = icmp eq %class.SkPathEffect* %33, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %33, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %45

39:                                               ; preds = %35
  %40 = bitcast %class.SkPathEffect* %33 to %class.SkRefCntBase*
  %41 = bitcast %class.SkPathEffect* %33 to void (%class.SkRefCntBase*)***
  %42 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, i64 2
  %44 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, align 8
  tail call void %44(%class.SkRefCntBase* nonnull %40) #18
  br label %45

45:                                               ; preds = %39, %35, %31
  %46 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %class.SkMaskFilter*, %class.SkMaskFilter** %46, align 8
  %48 = icmp eq %class.SkMaskFilter* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %47, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = bitcast %class.SkMaskFilter* %47 to %class.SkRefCntBase*
  %55 = bitcast %class.SkMaskFilter* %47 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8
  tail call void %58(%class.SkRefCntBase* nonnull %54) #18
  br label %59

59:                                               ; preds = %45, %49, %53
  %60 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %60) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8GrSubRun, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %61 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %class.GrSubRun*, %class.GrSubRun** %61, align 8
  store %class.GrSubRun* null, %class.GrSubRun** %61, align 8
  %63 = icmp eq %class.GrSubRun* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %59
  %65 = bitcast %class.GrSubRun* %62 to void (%class.GrSubRun*)***
  %66 = load void (%class.GrSubRun*)**, void (%class.GrSubRun*)*** %65, align 8
  %67 = load void (%class.GrSubRun*)*, void (%class.GrSubRun*)** %66, align 8
  tail call void %67(%class.GrSubRun* nonnull %62) #18
  br label %68

68:                                               ; preds = %59, %64
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110PathSubRunD0Ev(%"class.(anonymous namespace)::PathSubRun"*) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN12_GLOBAL__N_110PathSubRunE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"struct.(anonymous namespace)::PathSubRun::PathGlyph"*, %"struct.(anonymous namespace)::PathSubRun::PathGlyph"** %3, align 8
  store %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* null, %"struct.(anonymous namespace)::PathSubRun::PathGlyph"** %3, align 8
  %5 = icmp eq %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %6, %10
  %11 = phi i64 [ %13, %10 ], [ 0, %6 ]
  %12 = getelementptr inbounds %"struct.(anonymous namespace)::PathSubRun::PathGlyph", %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %4, i64 %11, i32 0
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %12) #18
  %13 = add nuw nsw i64 %11, 1
  %14 = load i32, i32* %7, align 4
  %15 = sext i32 %14 to i64
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %6, %1
  %18 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 3, i32 3, i32 0
  %19 = load %class.SkTypeface*, %class.SkTypeface** %18, align 8
  %20 = icmp eq %class.SkTypeface* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %class.SkTypeface* %19 to %class.SkRefCntBase*
  %27 = bitcast %class.SkTypeface* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  tail call void %30(%class.SkRefCntBase* nonnull %26) #18
  br label %31

31:                                               ; preds = %25, %21, %17
  %32 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 3, i32 2, i32 0
  %33 = load %class.SkPathEffect*, %class.SkPathEffect** %32, align 8
  %34 = icmp eq %class.SkPathEffect* %33, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %33, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %45

39:                                               ; preds = %35
  %40 = bitcast %class.SkPathEffect* %33 to %class.SkRefCntBase*
  %41 = bitcast %class.SkPathEffect* %33 to void (%class.SkRefCntBase*)***
  %42 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, i64 2
  %44 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, align 8
  tail call void %44(%class.SkRefCntBase* nonnull %40) #18
  br label %45

45:                                               ; preds = %39, %35, %31
  %46 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %class.SkMaskFilter*, %class.SkMaskFilter** %46, align 8
  %48 = icmp eq %class.SkMaskFilter* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %47, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = bitcast %class.SkMaskFilter* %47 to %class.SkRefCntBase*
  %55 = bitcast %class.SkMaskFilter* %47 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8
  tail call void %58(%class.SkRefCntBase* nonnull %54) #18
  br label %59

59:                                               ; preds = %53, %49, %45
  %60 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %60) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8GrSubRun, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %61 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %class.GrSubRun*, %class.GrSubRun** %61, align 8
  store %class.GrSubRun* null, %class.GrSubRun** %61, align 8
  %63 = icmp eq %class.GrSubRun* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %59
  %65 = bitcast %class.GrSubRun* %62 to void (%class.GrSubRun*)***
  %66 = load void (%class.GrSubRun*)**, void (%class.GrSubRun*)*** %65, align 8
  %67 = load void (%class.GrSubRun*)*, void (%class.GrSubRun*)** %66, align 8
  tail call void %67(%class.GrSubRun* nonnull %62) #18
  br label %68

68:                                               ; preds = %59, %64
  %69 = bitcast %"class.(anonymous namespace)::PathSubRun"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_110PathSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext(%"class.(anonymous namespace)::PathSubRun"* nocapture readonly, %class.GrClip*, %class.SkMatrixProvider* dereferenceable(112), %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.GrSurfaceDrawContext*) unnamed_addr #0 align 2 {
  %7 = alloca %class.SkM44, align 4
  %8 = alloca %class.SkM44, align 4
  %9 = alloca %class.sk_sp.15, align 8
  %10 = alloca %class.SkPaint, align 8
  %11 = alloca %class.GrStyle, align 8
  %12 = alloca %class.SkMatrix, align 16
  %13 = alloca %class.SkMatrix, align 4
  %14 = alloca %class.SkPreConcatMatrixProvider, align 8
  %15 = alloca %class.GrStyledShape, align 8
  %16 = alloca %class.SkMatrix, align 4
  %17 = alloca %class.SkPath, align 8
  %18 = alloca %class.GrStyledShape, align 8
  %19 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %3, i64 0, i32 3
  %20 = bitcast %struct.SkPoint* %19 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 8
  %22 = bitcast %class.SkPaint* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %22) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK12_GLOBAL__N_110PathSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext.runPaint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %10, %class.SkPaint* dereferenceable(72) %4) #18
  %23 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 1
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %10, i64 0, i32 8, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, -2
  %29 = or i32 %28, %25
  store i32 %29, i32* %26, align 8
  %30 = bitcast %class.GrStyle* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %30) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 bitcast ({ %class.SkStrokeRec, %class.sk_sp.15, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } }* @__const._ZNK12_GLOBAL__N_110PathSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext.style to i8*), i64 64, i1 false)
  %31 = bitcast %class.sk_sp.15* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31)
  %32 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %11, i64 0, i32 0
  call void @_ZN11SkStrokeRecC1ERK7SkPaintf(%class.SkStrokeRec* nonnull %32, %class.SkPaint* nonnull dereferenceable(72) %10, float 1.000000e+00) #18
  %33 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %11, i64 0, i32 1, i32 0
  %34 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %11, i64 0, i32 2, i32 2, i32 1
  store float* null, float** %34, align 8
  %35 = bitcast %class.SkPathEffect** %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 20, i1 false) #18
  call void @_ZNK7SkPaint13refPathEffectEv(%class.sk_sp.15* nonnull sret %9, %class.SkPaint* nonnull %10) #18
  call void @_ZN7GrStyle14initPathEffectE5sk_spI12SkPathEffectE(%class.GrStyle* nonnull %11, %class.sk_sp.15* nonnull %9) #18
  %36 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %9, i64 0, i32 0
  %37 = load %class.SkPathEffect*, %class.SkPathEffect** %36, align 8
  %38 = icmp eq %class.SkPathEffect* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %6
  %40 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = bitcast %class.SkPathEffect* %37 to %class.SkRefCntBase*
  %45 = bitcast %class.SkPathEffect* %37 to void (%class.SkRefCntBase*)***
  %46 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, i64 2
  %48 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, align 8
  call void %48(%class.SkRefCntBase* nonnull %44) #18
  br label %49

49:                                               ; preds = %6, %39, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31)
  %50 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %10, i64 0, i32 1, i32 0
  %51 = load %class.SkShader*, %class.SkShader** %50, align 8
  %52 = icmp eq %class.SkShader* %51, null
  %53 = load %class.SkPathEffect*, %class.SkPathEffect** %33, align 8
  %54 = icmp eq %class.SkPathEffect* %53, null
  %55 = and i1 %52, %54
  br i1 %55, label %56, label %66

56:                                               ; preds = %49
  %57 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* nonnull %32) #18
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %62, label %59

59:                                               ; preds = %56
  %60 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* nonnull %32) #18
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %59, %56
  %63 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %10, i64 0, i32 2, i32 0
  %64 = load %class.SkMaskFilter*, %class.SkMaskFilter** %63, align 8
  %65 = icmp ne %class.SkMaskFilter* %64, null
  br label %66

66:                                               ; preds = %59, %49, %62
  %67 = phi i1 [ true, %59 ], [ true, %49 ], [ %65, %62 ]
  %68 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 3, i32 4
  %69 = load float, float* %68, align 8
  %70 = bitcast %class.SkMatrix* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70) #18
  %71 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 1
  %72 = bitcast %class.SkMatrix* %12 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %72, align 16, !alias.scope !92
  %73 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 4
  %74 = bitcast float* %73 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %74, align 16, !alias.scope !92
  %75 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %75, align 16, !alias.scope !92
  store i32 16, i32* %71, align 4, !alias.scope !92
  %76 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %12, float %69, float %69) #18
  %77 = extractelement <2 x float> %21, i32 0
  %78 = extractelement <2 x float> %21, i32 1
  %79 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %12, float %77, float %78) #18
  %80 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 4, i32 0
  %81 = load %"struct.(anonymous namespace)::PathSubRun::PathGlyph"*, %"struct.(anonymous namespace)::PathSubRun::PathGlyph"** %80, align 8
  %82 = getelementptr inbounds %"class.(anonymous namespace)::PathSubRun", %"class.(anonymous namespace)::PathSubRun"* %0, i64 0, i32 4, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"struct.(anonymous namespace)::PathSubRun::PathGlyph", %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %81, i64 %83
  %85 = icmp eq i64 %83, 0
  br i1 %67, label %177, label %86

86:                                               ; preds = %66
  br i1 %85, label %228, label %87

87:                                               ; preds = %86
  %88 = bitcast %class.SkMatrix* %13 to i8*
  %89 = bitcast %class.SkPreConcatMatrixProvider* %14 to i8*
  %90 = bitcast %class.SkM44* %7 to i8*
  %91 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %2, i64 0, i32 1
  %92 = bitcast %class.SkM44* %8 to i8*
  %93 = bitcast %class.SkMatrix* %13 to i32*
  %94 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 1
  %95 = bitcast float* %94 to i32*
  %96 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 2
  %97 = bitcast float* %96 to i32*
  %98 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 3
  %99 = bitcast float* %98 to i32*
  %100 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 4
  %101 = bitcast float* %100 to i32*
  %102 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 5
  %103 = bitcast float* %102 to i32*
  %104 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 6
  %105 = bitcast float* %104 to i32*
  %106 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 7
  %107 = bitcast float* %106 to i32*
  %108 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 8
  %109 = bitcast float* %108 to i32*
  %110 = bitcast %class.SkM44* %8 to i32*
  %111 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 1
  %112 = bitcast float* %111 to i32*
  %113 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 2
  %114 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 3
  %115 = bitcast float* %114 to i32*
  %116 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 4
  %117 = bitcast float* %116 to i32*
  %118 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 5
  %119 = bitcast float* %118 to i32*
  %120 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 6
  %121 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 7
  %122 = bitcast float* %121 to i32*
  %123 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 8
  %124 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 12
  %125 = bitcast float* %124 to i32*
  %126 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 13
  %127 = bitcast float* %126 to i32*
  %128 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 14
  %129 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 15
  %130 = bitcast float* %129 to i32*
  %131 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %14, i64 0, i32 0, i32 0
  %132 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %14, i64 0, i32 0, i32 1
  %133 = bitcast %class.SkM44* %132 to i8*
  %134 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %14, i64 0, i32 0, i32 2
  %135 = bitcast %class.SkM44* %7 to i32*
  %136 = getelementptr inbounds %class.SkM44, %class.SkM44* %7, i64 0, i32 0, i64 4
  %137 = bitcast float* %136 to i32*
  %138 = getelementptr inbounds %class.SkM44, %class.SkM44* %7, i64 0, i32 0, i64 12
  %139 = bitcast float* %138 to i32*
  %140 = getelementptr inbounds %class.SkM44, %class.SkM44* %7, i64 0, i32 0, i64 1
  %141 = bitcast float* %140 to i32*
  %142 = getelementptr inbounds %class.SkM44, %class.SkM44* %7, i64 0, i32 0, i64 5
  %143 = bitcast float* %142 to i32*
  %144 = getelementptr inbounds %class.SkM44, %class.SkM44* %7, i64 0, i32 0, i64 13
  %145 = bitcast float* %144 to i32*
  %146 = getelementptr inbounds %class.SkM44, %class.SkM44* %7, i64 0, i32 0, i64 3
  %147 = bitcast float* %146 to i32*
  %148 = getelementptr inbounds %class.SkM44, %class.SkM44* %7, i64 0, i32 0, i64 7
  %149 = bitcast float* %148 to i32*
  %150 = getelementptr inbounds %class.SkM44, %class.SkM44* %7, i64 0, i32 0, i64 15
  %151 = bitcast float* %150 to i32*
  %152 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %14, i64 0, i32 0, i32 2, i32 1
  %153 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %14, i64 0, i32 0, i32 2, i32 0, i64 1
  %154 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %14, i64 0, i32 0, i32 2, i32 0, i64 2
  %155 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %14, i64 0, i32 0, i32 2, i32 0, i64 3
  %156 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %14, i64 0, i32 0, i32 2, i32 0, i64 4
  %157 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %14, i64 0, i32 0, i32 2, i32 0, i64 5
  %158 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %14, i64 0, i32 0, i32 2, i32 0, i64 6
  %159 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %14, i64 0, i32 0, i32 2, i32 0, i64 7
  %160 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %14, i64 0, i32 0, i32 2, i32 0, i64 8
  %161 = bitcast %class.SkMatrix* %134 to i32*
  %162 = bitcast float* %153 to i32*
  %163 = bitcast float* %154 to i32*
  %164 = bitcast float* %155 to i32*
  %165 = bitcast float* %156 to i32*
  %166 = bitcast float* %157 to i32*
  %167 = bitcast float* %158 to i32*
  %168 = bitcast float* %159 to i32*
  %169 = bitcast float* %160 to i32*
  %170 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %14, i64 0, i32 1
  %171 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %14, i64 0, i32 2
  %172 = bitcast %class.SkMatrix* %171 to i8*
  %173 = bitcast %class.GrStyledShape* %15 to i8*
  %174 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 0, i32 1
  %175 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %14, i64 0, i32 0
  %176 = bitcast float* %123 to <4 x float>*
  br label %185

177:                                              ; preds = %66
  br i1 %85, label %228, label %178

178:                                              ; preds = %177
  %179 = bitcast %class.SkMatrix* %16 to i8*
  %180 = bitcast %class.SkPath* %17 to i8*
  %181 = getelementptr inbounds %class.SkPath, %class.SkPath* %17, i64 0, i32 4
  %182 = bitcast %class.GrStyledShape* %18 to i8*
  %183 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 0, i32 1
  %184 = bitcast %class.SkPath* %17 to i8*
  br label %215

185:                                              ; preds = %87, %185
  %186 = phi %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* [ %81, %87 ], [ %213, %185 ]
  %187 = getelementptr inbounds %"struct.(anonymous namespace)::PathSubRun::PathGlyph", %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %186, i64 0, i32 0
  %188 = getelementptr inbounds %"struct.(anonymous namespace)::PathSubRun::PathGlyph", %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %186, i64 0, i32 1, i32 0
  %189 = load float, float* %188, align 8
  %190 = getelementptr inbounds %"struct.(anonymous namespace)::PathSubRun::PathGlyph", %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %186, i64 0, i32 1, i32 1
  %191 = load float, float* %190, align 4
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %88) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %88, i8* nonnull align 16 %70, i64 40, i1 false)
  %192 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %13, float %189, float %191) #18
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %89) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %89, i8* align 8 bitcast (%class.SkPreConcatMatrixProvider* @__const._ZNK12_GLOBAL__N_110PathSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext.strikeToDevice to i8*), i64 160, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %90) #18
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %92) #18
  %193 = load i32, i32* %93, align 4
  %194 = load i32, i32* %95, align 4
  %195 = load i32, i32* %97, align 4
  %196 = load i32, i32* %99, align 4
  %197 = load i32, i32* %101, align 4
  %198 = load i32, i32* %103, align 4
  %199 = load i32, i32* %105, align 4
  %200 = load i32, i32* %107, align 4
  %201 = load i32, i32* %109, align 4
  store i32 %193, i32* %110, align 4
  store i32 %196, i32* %112, align 4
  store float 0.000000e+00, float* %113, align 4
  store i32 %199, i32* %115, align 4
  store i32 %194, i32* %117, align 4
  store i32 %197, i32* %119, align 4
  store float 0.000000e+00, float* %120, align 4
  store i32 %200, i32* %122, align 4
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %176, align 4
  store i32 %195, i32* %125, align 4
  store i32 %198, i32* %127, align 4
  store float 0.000000e+00, float* %128, align 4
  store i32 %201, i32* %130, align 4
  %202 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %7, %class.SkM44* dereferenceable(64) %91, %class.SkM44* nonnull dereferenceable(64) %8) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* nonnull align 4 %90, i64 64, i1 false) #18
  %203 = load i32, i32* %135, align 4, !noalias !95
  %204 = load i32, i32* %137, align 4, !noalias !95
  %205 = load i32, i32* %139, align 4, !noalias !95
  %206 = load i32, i32* %141, align 4, !noalias !95
  %207 = load i32, i32* %143, align 4, !noalias !95
  %208 = load i32, i32* %145, align 4, !noalias !95
  %209 = load i32, i32* %147, align 4, !noalias !95
  %210 = load i32, i32* %149, align 4, !noalias !95
  %211 = load i32, i32* %151, align 4, !noalias !95
  store i32 %203, i32* %161, align 8, !alias.scope !98
  store i32 %204, i32* %162, align 4, !alias.scope !98
  store i32 %205, i32* %163, align 8, !alias.scope !98
  store i32 %206, i32* %164, align 4, !alias.scope !98
  store i32 %207, i32* %165, align 8, !alias.scope !98
  store i32 %208, i32* %166, align 4, !alias.scope !98
  store i32 %209, i32* %167, align 8, !alias.scope !98
  store i32 %210, i32* %168, align 4, !alias.scope !98
  store i32 %211, i32* %169, align 8, !alias.scope !98
  store i32 128, i32* %152, align 4, !alias.scope !98
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %92) #18
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %90) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV25SkPreConcatMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  store %class.SkMatrixProvider* %2, %class.SkMatrixProvider** %170, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* nonnull align 4 %88, i64 40, i1 false) #18
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %173) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %173, i8* align 8 bitcast ({ %class.GrShape, { %class.SkStrokeRec, %class.sk_sp.15, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } }, i32, i8, i8, [2 x i8], %class.SkTLazy, { i32, [4 x i8], i32*, [32 x i8] } }* @__const._ZNK12_GLOBAL__N_110PathSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext.shape.9 to i8*), i64 208, i1 false)
  call void @_ZN13GrStyledShapeC2ERK6SkPathRK7SkPaintNS_10DoSimplifyE(%class.GrStyledShape* nonnull %15, %class.SkPath* dereferenceable(16) %187, %class.SkPaint* dereferenceable(72) %4, i1 zeroext true)
  %212 = load %class.GrRecordingContext*, %class.GrRecordingContext** %174, align 8
  call void @_ZN11GrBlurUtils23drawShapeWithMaskFilterEP18GrRecordingContextP20GrSurfaceDrawContextPK6GrClipRK7SkPaintRK16SkMatrixProviderRK13GrStyledShape(%class.GrRecordingContext* %212, %class.GrSurfaceDrawContext* %5, %class.GrClip* %1, %class.SkPaint* nonnull dereferenceable(72) %10, %class.SkMatrixProvider* nonnull dereferenceable(112) %175, %class.GrStyledShape* nonnull dereferenceable(208) %15) #18
  call void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %173) #18
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %89) #18
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %88) #18
  %213 = getelementptr inbounds %"struct.(anonymous namespace)::PathSubRun::PathGlyph", %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %186, i64 1
  %214 = icmp eq %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %213, %84
  br i1 %214, label %228, label %185

215:                                              ; preds = %178, %215
  %216 = phi %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* [ %81, %178 ], [ %226, %215 ]
  %217 = getelementptr inbounds %"struct.(anonymous namespace)::PathSubRun::PathGlyph", %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %216, i64 0, i32 0
  %218 = getelementptr inbounds %"struct.(anonymous namespace)::PathSubRun::PathGlyph", %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %216, i64 0, i32 1, i32 0
  %219 = load float, float* %218, align 8
  %220 = getelementptr inbounds %"struct.(anonymous namespace)::PathSubRun::PathGlyph", %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %216, i64 0, i32 1, i32 1
  %221 = load float, float* %220, align 4
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %179) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %179, i8* nonnull align 16 %70, i64 40, i1 false)
  %222 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %16, float %219, float %221) #18
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %180) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %184, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %17) #18
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %217, %class.SkMatrix* nonnull dereferenceable(40) %16, %class.SkPath* nonnull %17, i32 1) #18
  %223 = load i8, i8* %181, align 2
  %224 = or i8 %223, 4
  store i8 %224, i8* %181, align 2
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %182) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %182, i8* align 8 bitcast ({ %class.GrShape, { %class.SkStrokeRec, %class.sk_sp.15, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } }, i32, i8, i8, [2 x i8], %class.SkTLazy, { i32, [4 x i8], i32*, [32 x i8] } }* @__const._ZNK12_GLOBAL__N_110PathSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext.shape.9 to i8*), i64 208, i1 false)
  call void @_ZN13GrStyledShapeC2ERK6SkPathRK7SkPaintNS_10DoSimplifyE(%class.GrStyledShape* nonnull %18, %class.SkPath* nonnull dereferenceable(16) %17, %class.SkPaint* dereferenceable(72) %4, i1 zeroext true)
  %225 = load %class.GrRecordingContext*, %class.GrRecordingContext** %183, align 8
  call void @_ZN11GrBlurUtils23drawShapeWithMaskFilterEP18GrRecordingContextP20GrSurfaceDrawContextPK6GrClipRK7SkPaintRK16SkMatrixProviderRK13GrStyledShape(%class.GrRecordingContext* %225, %class.GrSurfaceDrawContext* %5, %class.GrClip* %1, %class.SkPaint* nonnull dereferenceable(72) %10, %class.SkMatrixProvider* dereferenceable(112) %2, %class.GrStyledShape* nonnull dereferenceable(208) %18) #18
  call void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape* nonnull %18) #18
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %182) #18
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %17) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %180) #18
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %179) #18
  %226 = getelementptr inbounds %"struct.(anonymous namespace)::PathSubRun::PathGlyph", %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %216, i64 1
  %227 = icmp eq %"struct.(anonymous namespace)::PathSubRun::PathGlyph"* %226, %84
  br i1 %227, label %228, label %215

228:                                              ; preds = %185, %215, %86, %177
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #18
  %229 = load float*, float** %34, align 8
  %230 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %11, i64 0, i32 2, i32 2, i32 0
  %231 = load i32, i32* %230, align 8
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds float, float* %229, i64 %232
  br label %234

234:                                              ; preds = %234, %228
  %235 = phi float* [ %233, %228 ], [ %237, %234 ]
  %236 = icmp ugt float* %235, %229
  %237 = getelementptr inbounds float, float* %235, i64 -1
  br i1 %236, label %234, label %238

238:                                              ; preds = %234
  %239 = bitcast float* %229 to i8*
  %240 = icmp eq i32 %231, 0
  br i1 %240, label %245, label %241

241:                                              ; preds = %238
  %242 = icmp sgt i32 %231, 4
  br i1 %242, label %243, label %244

243:                                              ; preds = %241
  call void @_Z7sk_freePv(i8* %239) #18
  br label %244

244:                                              ; preds = %243, %241
  store float* null, float** %34, align 8
  store i32 0, i32* %230, align 8
  br label %245

245:                                              ; preds = %244, %238
  %246 = load %class.SkPathEffect*, %class.SkPathEffect** %33, align 8
  %247 = icmp eq %class.SkPathEffect* %246, null
  br i1 %247, label %258, label %248

248:                                              ; preds = %245
  %249 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %246, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = atomicrmw add i32* %249, i32 -1 acq_rel
  %251 = icmp eq i32 %250, 1
  br i1 %251, label %252, label %258

252:                                              ; preds = %248
  %253 = bitcast %class.SkPathEffect* %246 to %class.SkRefCntBase*
  %254 = bitcast %class.SkPathEffect* %246 to void (%class.SkRefCntBase*)***
  %255 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %254, align 8
  %256 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %255, i64 2
  %257 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %256, align 8
  call void %257(%class.SkRefCntBase* nonnull %253) #18
  br label %258

258:                                              ; preds = %245, %248, %252
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %30) #18
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %22) #18
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_110PathSubRun8canReuseERK7SkPaintRK8SkMatrix(%"class.(anonymous namespace)::PathSubRun"* nocapture readnone, %class.SkPaint* nocapture readnone dereferenceable(72), %class.SkMatrix* nocapture readnone dereferenceable(40)) unnamed_addr #8 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias %class.GrAtlasSubRun* @_ZN12_GLOBAL__N_110PathSubRun23testingOnly_atlasSubRunEv(%"class.(anonymous namespace)::PathSubRun"* nocapture readnone) unnamed_addr #8 align 2 {
  ret %class.GrAtlasSubRun* null
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_111GlyphVector4MakeERK12SkStrikeSpec6SkSpanI14SkGlyphVariantEP17GrSubRunAllocator(%"class.(anonymous namespace)::GlyphVector"* noalias sret, %class.SkStrikeSpec* dereferenceable(160), %class.SkGlyphVariant*, i64, %class.GrSubRunAllocator*) unnamed_addr #4 align 2 {
  %6 = trunc i64 %3 to i32
  %7 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %4, i64 0, i32 0
  %8 = icmp ult i32 %6, 268434943
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call fastcc void @_ZZN12GrBagOfBytes16allocateBytesForIN12_GLOBAL__N_111GlyphVector7VariantEEEPciENKUlvE_clEv() #18
  unreachable

10:                                               ; preds = %5
  %11 = icmp eq i32 %6, 0
  %12 = shl i32 %6, 3
  %13 = select i1 %11, i32 1, i32 %12
  %14 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %4, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, -8
  store i32 %16, i32* %14, align 8
  %17 = icmp slt i32 %16, %13
  br i1 %17, label %18, label %20

18:                                               ; preds = %10
  tail call void @_ZN12GrBagOfBytes13needMoreBytesEii(%class.GrBagOfBytes* %7, i32 %13, i32 8) #18
  %19 = load i32, i32* %14, align 8
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i32 [ %19, %18 ], [ %16, %10 ]
  %22 = getelementptr inbounds %class.GrSubRunAllocator, %class.GrSubRunAllocator* %4, i64 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = sext i32 %21 to i64
  %25 = sub nsw i64 0, %24
  %26 = getelementptr inbounds i8, i8* %23, i64 %25
  %27 = sub nsw i32 %21, %13
  store i32 %27, i32* %14, align 8
  %28 = bitcast i8* %26 to %"union.(anonymous namespace)::GlyphVector::Variant"*
  %29 = icmp eq i64 %3, 0
  br i1 %29, label %58, label %30

30:                                               ; preds = %20
  %31 = shl nsw i64 %3, 3
  %32 = add i64 %31, -8
  %33 = lshr exact i64 %32, 3
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 3
  %36 = icmp ult i64 %32, 24
  br i1 %36, label %39, label %37

37:                                               ; preds = %30
  %38 = sub nsw i64 %34, %35
  br label %102

39:                                               ; preds = %102, %30
  %40 = phi %class.SkGlyphVariant* [ %2, %30 ], [ %138, %102 ]
  %41 = phi i64 [ 0, %30 ], [ %137, %102 ]
  %42 = icmp eq i64 %35, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %39, %43
  %44 = phi %class.SkGlyphVariant* [ %55, %43 ], [ %40, %39 ]
  %45 = phi i64 [ %54, %43 ], [ %41, %39 ]
  %46 = phi i64 [ %56, %43 ], [ %35, %39 ]
  %47 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %44, i64 0, i32 0, i32 0
  %48 = load %class.SkGlyph*, %class.SkGlyph** %47, align 8
  %49 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %48, i64 0, i32 10, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %28, i64 %45
  %52 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"* %51 to i64*
  %53 = zext i32 %50 to i64
  store i64 %53, i64* %52, align 8
  %54 = add nuw nsw i64 %45, 1
  %55 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %44, i64 1
  %56 = add i64 %46, -1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %43, !llvm.loop !101

58:                                               ; preds = %39, %43, %20
  %59 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 0
  tail call void @_ZN16SkAutoDescriptorC1ERKS_(%class.SkAutoDescriptor* %59, %class.SkAutoDescriptor* dereferenceable(128) %60) #18
  %61 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 0, i32 1, i32 0
  %62 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 1, i32 0
  %63 = load %class.SkMaskFilter*, %class.SkMaskFilter** %62, align 8
  %64 = icmp eq %class.SkMaskFilter* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %63, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 1 monotonic
  br label %68

68:                                               ; preds = %65, %58
  store %class.SkMaskFilter* %63, %class.SkMaskFilter** %61, align 8
  %69 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 0, i32 2, i32 0
  %70 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 2, i32 0
  %71 = load %class.SkPathEffect*, %class.SkPathEffect** %70, align 8
  %72 = icmp eq %class.SkPathEffect* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %71, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 1 monotonic
  br label %76

76:                                               ; preds = %73, %68
  store %class.SkPathEffect* %71, %class.SkPathEffect** %69, align 8
  %77 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 0, i32 3, i32 0
  %78 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 3, i32 0
  %79 = load %class.SkTypeface*, %class.SkTypeface** %78, align 8
  %80 = icmp eq %class.SkTypeface* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %79, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 1 monotonic
  br label %84

84:                                               ; preds = %76, %81
  store %class.SkTypeface* %79, %class.SkTypeface** %77, align 8
  %85 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 0, i32 4
  %86 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 4
  %87 = bitcast float* %86 to i32*
  %88 = load i32, i32* %87, align 8
  %89 = bitcast float* %85 to i32*
  store i32 %88, i32* %89, align 8
  %90 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 1, i32 0
  %91 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"** %90 to i8**
  store i8* %26, i8** %91, align 8
  %92 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 1, i32 1
  store i64 %3, i64* %92, align 8
  %93 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 2, i32 0
  %94 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i64 32
  %95 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i64 0
  %96 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i64 40
  %97 = bitcast i8* %96 to i64*
  %98 = bitcast i8* %94 to i8**
  %99 = bitcast %class.GrTextStrike** %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 16, i1 false) #18
  store i8* %95, i8** %98, align 8
  store i64 34359738368, i64* %97, align 8
  %100 = getelementptr inbounds %"class.(anonymous namespace)::GlyphVector", %"class.(anonymous namespace)::GlyphVector"* %0, i64 0, i32 4, i32 1, i64 0
  %101 = bitcast i32* %100 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #18
  ret void

102:                                              ; preds = %102, %37
  %103 = phi %class.SkGlyphVariant* [ %2, %37 ], [ %138, %102 ]
  %104 = phi i64 [ 0, %37 ], [ %137, %102 ]
  %105 = phi i64 [ %38, %37 ], [ %139, %102 ]
  %106 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %103, i64 0, i32 0, i32 0
  %107 = load %class.SkGlyph*, %class.SkGlyph** %106, align 8
  %108 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %107, i64 0, i32 10, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %28, i64 %104
  %111 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"* %110 to i64*
  %112 = zext i32 %109 to i64
  store i64 %112, i64* %111, align 8
  %113 = or i64 %104, 1
  %114 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %103, i64 1, i32 0, i32 0
  %115 = load %class.SkGlyph*, %class.SkGlyph** %114, align 8
  %116 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %115, i64 0, i32 10, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %28, i64 %113
  %119 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"* %118 to i64*
  %120 = zext i32 %117 to i64
  store i64 %120, i64* %119, align 8
  %121 = or i64 %104, 2
  %122 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %103, i64 2, i32 0, i32 0
  %123 = load %class.SkGlyph*, %class.SkGlyph** %122, align 8
  %124 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %123, i64 0, i32 10, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %28, i64 %121
  %127 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"* %126 to i64*
  %128 = zext i32 %125 to i64
  store i64 %128, i64* %127, align 8
  %129 = or i64 %104, 3
  %130 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %103, i64 3, i32 0, i32 0
  %131 = load %class.SkGlyph*, %class.SkGlyph** %130, align 8
  %132 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %131, i64 0, i32 10, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %28, i64 %129
  %135 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"* %134 to i64*
  %136 = zext i32 %133 to i64
  store i64 %136, i64* %135, align 8
  %137 = add nuw nsw i64 %104, 4
  %138 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %103, i64 4
  %139 = add i64 %105, -4
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %39, label %102
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @_ZZN12GrBagOfBytes16allocateBytesForIN12_GLOBAL__N_110SDFTSubRun10VertexDataEEEPciENKUlvE_clEv() unnamed_addr #15 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #19
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110SDFTSubRunD2Ev(%"class.(anonymous namespace)::SDFTSubRun"*) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [10 x i8*] }, { [13 x i8*], [10 x i8*] }* @_ZTVN12_GLOBAL__N_110SDFTSubRunE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [10 x i8*] }, { [13 x i8*], [10 x i8*] }* @_ZTVN12_GLOBAL__N_110SDFTSubRunE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 7, i32 4, i32 0, i32 0, i32 0, i64 40
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 7, i32 4, i32 0, i32 0, i32 0, i64 32
  %11 = bitcast i8* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @_Z7sk_freePv(i8* %12) #18
  br label %13

13:                                               ; preds = %9, %1
  %14 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 7, i32 2, i32 0
  %15 = load %class.GrTextStrike*, %class.GrTextStrike** %14, align 8
  %16 = icmp eq %class.GrTextStrike* %15, null
  br i1 %16, label %35, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %15, i64 0, i32 0
  %19 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %35

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 38
  %24 = bitcast %class.SkNVRefCnt.302* %23 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %24) #18
  %25 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 6
  %26 = bitcast %class.SkNVRefCnt.302* %25 to %class.SkAutoDescriptor*
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %26) #18
  %27 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 4
  %28 = bitcast %class.SkNVRefCnt.302* %27 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %29 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  %30 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %22
  %32 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29 to i8*
  tail call void @_ZdaPv(i8* %32) #20
  br label %33

33:                                               ; preds = %31, %22
  %34 = bitcast %class.GrTextStrike* %15 to i8*
  tail call void @_ZdlPv(i8* %34) #20
  br label %35

35:                                               ; preds = %13, %17, %33
  %36 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 7, i32 0, i32 3, i32 0
  %37 = load %class.SkTypeface*, %class.SkTypeface** %36, align 8
  %38 = icmp eq %class.SkTypeface* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = bitcast %class.SkTypeface* %37 to %class.SkRefCntBase*
  %45 = bitcast %class.SkTypeface* %37 to void (%class.SkRefCntBase*)***
  %46 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, i64 2
  %48 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, align 8
  tail call void %48(%class.SkRefCntBase* nonnull %44) #18
  br label %49

49:                                               ; preds = %43, %39, %35
  %50 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 7, i32 0, i32 2, i32 0
  %51 = load %class.SkPathEffect*, %class.SkPathEffect** %50, align 8
  %52 = icmp eq %class.SkPathEffect* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkPathEffect* %51 to %class.SkRefCntBase*
  %59 = bitcast %class.SkPathEffect* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  tail call void %62(%class.SkRefCntBase* nonnull %58) #18
  br label %63

63:                                               ; preds = %57, %53, %49
  %64 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 7, i32 0, i32 1, i32 0
  %65 = load %class.SkMaskFilter*, %class.SkMaskFilter** %64, align 8
  %66 = icmp eq %class.SkMaskFilter* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %65, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = bitcast %class.SkMaskFilter* %65 to %class.SkRefCntBase*
  %73 = bitcast %class.SkMaskFilter* %65 to void (%class.SkRefCntBase*)***
  %74 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, i64 2
  %76 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, align 8
  tail call void %76(%class.SkRefCntBase* nonnull %72) #18
  br label %77

77:                                               ; preds = %63, %67, %71
  %78 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 7, i32 0, i32 0
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %78) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8GrSubRun, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %79 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %80 = load %class.GrSubRun*, %class.GrSubRun** %79, align 8
  store %class.GrSubRun* null, %class.GrSubRun** %79, align 8
  %81 = icmp eq %class.GrSubRun* %80, null
  br i1 %81, label %86, label %82

82:                                               ; preds = %77
  %83 = bitcast %class.GrSubRun* %80 to void (%class.GrSubRun*)***
  %84 = load void (%class.GrSubRun*)**, void (%class.GrSubRun*)*** %83, align 8
  %85 = load void (%class.GrSubRun*)*, void (%class.GrSubRun*)** %84, align 8
  tail call void %85(%class.GrSubRun* nonnull %80) #18
  br label %86

86:                                               ; preds = %77, %82
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110SDFTSubRunD0Ev(%"class.(anonymous namespace)::SDFTSubRun"*) unnamed_addr #12 align 2 {
  tail call void @_ZN12_GLOBAL__N_110SDFTSubRunD2Ev(%"class.(anonymous namespace)::SDFTSubRun"* %0) #18
  %2 = bitcast %"class.(anonymous namespace)::SDFTSubRun"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_110SDFTSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext(%"class.(anonymous namespace)::SDFTSubRun"*, %class.GrClip*, %class.SkMatrixProvider* dereferenceable(112), %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.GrSurfaceDrawContext*) unnamed_addr #4 align 2 {
  %7 = alloca %"class.std::__1::function.268", align 8
  %8 = tail call { %class.GrClip*, %class.GrOp* } @_ZNK12_GLOBAL__N_110SDFTSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE(%"class.(anonymous namespace)::SDFTSubRun"* %0, %class.GrClip* %1, %class.SkMatrixProvider* dereferenceable(112) %2, %class.SkGlyphRunList* dereferenceable(48) %3, %class.SkPaint* dereferenceable(72) %4, %class.GrSurfaceDrawContext* %5, i64 0)
  %9 = extractvalue { %class.GrClip*, %class.GrOp* } %8, 1
  %10 = icmp eq %class.GrOp* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %6
  %12 = extractvalue { %class.GrClip*, %class.GrOp* } %8, 0
  %13 = bitcast %"class.std::__1::function.268"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #18
  %14 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %7, i64 0, i32 0, i32 1, i32 0
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j, void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %7, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %15, align 8
  call void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext* %5, %class.GrClip* %12, %class.GrOp* nonnull %9, %"class.std::__1::function.268"* nonnull dereferenceable(32) %7) #18
  %16 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %16, i64 0, i32 1
  %18 = load void (i8*)*, void (i8*)** %17, align 8
  %19 = icmp eq void (i8*)* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %7, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void %18(i8* %22) #18
  br label %23

23:                                               ; preds = %20, %11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #18
  br label %24

24:                                               ; preds = %6, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_110SDFTSubRun8canReuseERK7SkPaintRK8SkMatrix(%"class.(anonymous namespace)::SDFTSubRun"* nocapture readonly, %class.SkPaint* nocapture readnone dereferenceable(72), %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 4
  %5 = load %class.GrTextBlob*, %class.GrTextBlob** %4, align 8
  %6 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %5, i64 0, i32 8
  %7 = tail call float @_ZNK8SkMatrix11getMaxScaleEv(%class.SkMatrix* %2) #18
  %8 = tail call float @_ZNK8SkMatrix11getMaxScaleEv(%class.SkMatrix* %6) #18
  %9 = fdiv float %7, %8
  %10 = load %class.GrTextBlob*, %class.GrTextBlob** %4, align 8
  %11 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %10, i64 0, i32 11
  %12 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %10, i64 0, i32 12
  %13 = load float, float* %11, align 4
  %14 = load float, float* %12, align 4
  %15 = fcmp uge float %9, %13
  %16 = fcmp ule float %9, %14
  %17 = and i1 %15, %16
  ret i1 %17
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %class.GrAtlasSubRun* @_ZN12_GLOBAL__N_110SDFTSubRun23testingOnly_atlasSubRunEv(%"class.(anonymous namespace)::SDFTSubRun"* readnone) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 1
  ret %class.GrAtlasSubRun* %2
}

; Function Attrs: nounwind ssp uwtable
define internal { %class.GrClip*, %class.GrOp* } @_ZNK12_GLOBAL__N_110SDFTSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE(%"class.(anonymous namespace)::SDFTSubRun"*, %class.GrClip*, %class.SkMatrixProvider* dereferenceable(112), %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.GrSurfaceDrawContext*, i64) unnamed_addr #0 align 2 {
  %8 = alloca %class.sk_sp.209, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = alloca <4 x float>, align 16
  %11 = bitcast <4 x float>* %10 to %struct.SkRect*
  %12 = alloca %class.GrPaint, align 8
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = bitcast { <2 x float>, <2 x float> }* %13 to %struct.SkRGBA4f.337*
  %15 = alloca %class.sk_sp.58, align 8
  %16 = inttoptr i64 %6 to %class.GrAtlasSubRun*
  %17 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %3, i64 0, i32 3
  %18 = bitcast %struct.SkPoint* %17 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 8
  %20 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %2, i64 0, i32 2
  %21 = bitcast %class.GrPaint* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #18
  %22 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %12, i64 0, i32 3
  %25 = bitcast %class.GrPaint* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 28, i1 false)
  %26 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %12, i64 0, i32 6, i64 0
  %27 = bitcast i8* %26 to i32*
  store i32 -1431655766, i32* %27, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #18
  store i8 1, i8* %24, align 8
  %28 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %12, i64 0, i32 5
  %29 = bitcast %struct.SkRGBA4f.337* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 bitcast (%struct.SkRGBA4f.337* @_ZL17SK_PMColor4fWHITE to i8*), i64 16, i1 false) #18
  %30 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #18
  %31 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 2
  %32 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -1, i64 16, i1 false)
  %33 = load i32, i32* %31, align 8
  %34 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 0, i32 1
  %35 = load %class.GrRecordingContext*, %class.GrRecordingContext** %34, align 8
  %36 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 0, i32 3
  %37 = icmp eq i32 %33, 2
  br i1 %37, label %38, label %40

38:                                               ; preds = %7
  %39 = call zeroext i1 @_Z25SkPaintToGrPaintWithBlendP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProvider11SkBlendModeP7GrPaint(%class.GrRecordingContext* %35, %class.GrColorInfo* dereferenceable(24) %36, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrixProvider* dereferenceable(112) %2, i32 2, %class.GrPaint* nonnull %12) #18
  br label %47

40:                                               ; preds = %7
  %41 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %12, i64 0, i32 5, i32 2
  %42 = call zeroext i1 @_Z16SkPaintToGrPaintP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderP7GrPaint(%class.GrRecordingContext* %35, %class.GrColorInfo* dereferenceable(24) %36, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrixProvider* dereferenceable(112) %2, %class.GrPaint* nonnull %12) #18
  %43 = bitcast %struct.SkRGBA4f.337* %28 to <2 x float>*
  %44 = load <2 x float>, <2 x float>* %43, align 4
  %45 = bitcast float* %41 to <2 x float>*
  %46 = load <2 x float>, <2 x float>* %45, align 4
  br label %47

47:                                               ; preds = %38, %40
  %48 = phi <2 x float> [ <float 1.000000e+00, float 1.000000e+00>, %38 ], [ %44, %40 ]
  %49 = phi <2 x float> [ <float 1.000000e+00, float 1.000000e+00>, %38 ], [ %46, %40 ]
  %50 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  store <2 x float> %48, <2 x float>* %50, align 8
  %51 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  store <2 x float> %49, <2 x float>* %51, align 8
  %52 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 8
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp ne i8 %53, 0
  %55 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 9
  %56 = load i8, i8* %55, align 1, !range !2
  %57 = icmp ne i8 %56, 0
  %58 = call fastcc { i64, i8 } @_ZN12_GLOBAL__N_124calculate_sdf_parametersERK20GrSurfaceDrawContextRK8SkMatrixbb(%class.GrSurfaceDrawContext* dereferenceable(312) %5, %class.SkMatrix* dereferenceable(40) %20, i1 zeroext %54, i1 zeroext %57)
  %59 = extractvalue { i64, i8 } %58, 0
  %60 = extractvalue { i64, i8 } %58, 1
  %61 = trunc i64 %59 to i32
  %62 = lshr i64 %59, 32
  %63 = trunc i64 %62 to i32
  %64 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 1
  %65 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 4
  %66 = load %class.GrTextBlob*, %class.GrTextBlob** %65, align 8
  %67 = icmp eq %class.GrTextBlob* %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %47
  %69 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %66, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 1 monotonic, !noalias !103
  br label %71

71:                                               ; preds = %47, %68
  %72 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %15, i64 0, i32 0
  store %class.GrTextBlob* %66, %class.GrTextBlob** %72, align 8, !alias.scope !103
  %73 = bitcast %class.sk_sp.209* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #18
  %74 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %75 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %74, align 8, !noalias !106
  %76 = bitcast %class.GrSurfaceProxy* %75 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %77 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %76, align 8, !noalias !106
  %78 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %77, i64 5
  %79 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %78, align 8, !noalias !106
  %80 = call %class.GrRenderTargetProxy* %79(%class.GrSurfaceProxy* %75) #18, !noalias !106
  call void @_ZN19GrRenderTargetProxy6arenasEv(%class.sk_sp.209* nonnull sret %8, %class.GrRenderTargetProxy* %80) #18
  %81 = getelementptr inbounds %class.sk_sp.209, %class.sk_sp.209* %8, i64 0, i32 0
  %82 = load %class.GrArenas*, %class.GrArenas** %81, align 8
  %83 = getelementptr inbounds %class.GrArenas, %class.GrArenas* %82, i64 0, i32 2
  %84 = icmp eq %class.GrArenas* %82, null
  br i1 %84, label %96, label %85

85:                                               ; preds = %71
  %86 = getelementptr inbounds %class.GrArenas, %class.GrArenas* %82, i64 0, i32 0
  %87 = getelementptr inbounds %class.GrArenas, %class.GrArenas* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 -1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %96

90:                                               ; preds = %85
  %91 = getelementptr inbounds %class.SkNVRefCnt.210, %class.SkNVRefCnt.210* %86, i64 10
  %92 = bitcast %class.SkNVRefCnt.210* %91 to %class.GrBagOfBytes*
  call void @_ZN12GrBagOfBytesD1Ev(%class.GrBagOfBytes* %92) #18
  %93 = getelementptr inbounds %class.SkNVRefCnt.210, %class.SkNVRefCnt.210* %86, i64 2
  %94 = bitcast %class.SkNVRefCnt.210* %93 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %94) #18
  %95 = bitcast %class.GrArenas* %82 to i8*
  call void @_ZdlPv(i8* %95) #20
  br label %96

96:                                               ; preds = %71, %85, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #18
  %97 = call %"struct.GrAtlasTextOp::Geometry"* @_ZN13GrAtlasTextOp8Geometry11MakeForBlobERK13GrAtlasSubRunRK8SkMatrix7SkPoint7SkIRect5sk_spI10GrTextBlobERK8SkRGBA4fIL11SkAlphaType2EEP12SkArenaAlloc(%class.GrAtlasSubRun* dereferenceable(8) %64, %class.SkMatrix* dereferenceable(40) %20, <2 x float> %19, i64 0, i64 0, %class.sk_sp.58* nonnull %15, %struct.SkRGBA4f.337* nonnull dereferenceable(16) %14, %class.SkArenaAlloc* %83) #18
  %98 = load %class.GrTextBlob*, %class.GrTextBlob** %72, align 8
  %99 = icmp eq %class.GrTextBlob* %98, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %98, i64 0, i32 1
  %102 = getelementptr inbounds %class.SkNVRefCnt.30, %class.SkNVRefCnt.30* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i32* %102, i32 -1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %112

105:                                              ; preds = %100
  %106 = getelementptr inbounds %class.SkNVRefCnt.30, %class.SkNVRefCnt.30* %101, i64 -2
  %107 = bitcast %class.SkNVRefCnt.30* %106 to %class.GrTextBlob*
  %108 = bitcast %class.SkNVRefCnt.30* %106 to void (%class.GrTextBlob*)***
  %109 = load void (%class.GrTextBlob*)**, void (%class.GrTextBlob*)*** %108, align 8
  %110 = getelementptr inbounds void (%class.GrTextBlob*)*, void (%class.GrTextBlob*)** %109, i64 1
  %111 = load void (%class.GrTextBlob*)*, void (%class.GrTextBlob*)** %110, align 8
  call void %111(%class.GrTextBlob* nonnull %107) #18
  br label %112

112:                                              ; preds = %105, %100, %96
  %113 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 6, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = trunc i64 %114 to i32
  %116 = bitcast <4 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #18
  %117 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 5
  %118 = bitcast %struct.SkRect* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %116, i8* align 8 %118, i64 16, i1 false) #18
  %119 = shufflevector <2 x float> %19, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %120 = load <4 x float>, <4 x float>* %10, align 16
  %121 = fadd <4 x float> %119, %120
  store <4 x float> %121, <4 x float>* %10, align 16
  %122 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #18
  %123 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -1, i64 16, i1 false) #18
  %124 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %20, %struct.SkRect* nonnull %123, %struct.SkRect* nonnull dereferenceable(16) %11, i32 1) #18
  %125 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %126 = load <2 x float>, <2 x float>* %125, align 8
  %127 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %128 = load <2 x float>, <2 x float>* %127, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %122) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #18
  %129 = call i32 @_ZN11SkPaintPriv21ComputeLuminanceColorERK7SkPaint(%class.SkPaint* dereferenceable(72) %4) #18
  %130 = call i8* @_ZN13GrAtlasTextOpnwEm(i64 112) #18
  %131 = bitcast i8* %130 to %class.GrAtlasTextOp*
  %132 = icmp ne i8 %60, 0
  call void @_ZN13GrAtlasTextOpC1ENS_8MaskTypeEbi6SkRectjbjPNS_8GeometryEO7GrPaint(%class.GrAtlasTextOp* %131, i32 %61, i1 zeroext true, i32 %115, <2 x float> %126, <2 x float> %128, i32 %129, i1 zeroext %132, i32 %63, %"struct.GrAtlasTextOp::Geometry"* %97, %class.GrPaint* nonnull dereferenceable(48) %12) #18
  %133 = bitcast i8* %130 to %class.GrOp*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #18
  %134 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %23, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %23, align 8
  %135 = icmp eq %class.GrFragmentProcessor* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %112
  %137 = bitcast %class.GrFragmentProcessor* %134 to void (%class.GrFragmentProcessor*)***
  %138 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %137, align 8
  %139 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %138, i64 1
  %140 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %139, align 8
  call void %140(%class.GrFragmentProcessor* nonnull %134) #18
  br label %141

141:                                              ; preds = %136, %112
  %142 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %22, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %22, align 8
  %143 = icmp eq %class.GrFragmentProcessor* %142, null
  br i1 %143, label %149, label %144

144:                                              ; preds = %141
  %145 = bitcast %class.GrFragmentProcessor* %142 to void (%class.GrFragmentProcessor*)***
  %146 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %145, align 8
  %147 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %146, i64 1
  %148 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %147, align 8
  call void %148(%class.GrFragmentProcessor* nonnull %142) #18
  br label %149

149:                                              ; preds = %141, %144
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #18
  %150 = icmp eq i64 %6, 0
  br i1 %150, label %155, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %6 to void (%class.GrAtlasSubRun*)***
  %153 = load void (%class.GrAtlasSubRun*)**, void (%class.GrAtlasSubRun*)*** %152, align 8
  %154 = load void (%class.GrAtlasSubRun*)*, void (%class.GrAtlasSubRun*)** %153, align 8
  call void %154(%class.GrAtlasSubRun* nonnull %16) #18
  br label %155

155:                                              ; preds = %149, %151
  %156 = insertvalue { %class.GrClip*, %class.GrOp* } undef, %class.GrClip* %1, 0
  %157 = insertvalue { %class.GrClip*, %class.GrOp* } %156, %class.GrOp* %133, 1
  ret { %class.GrClip*, %class.GrOp* } %157
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110SDFTSubRun34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache(%"class.(anonymous namespace)::SDFTSubRun"*, %class.GrStrikeCache*) unnamed_addr #4 align 2 {
  %3 = alloca %class.sk_sp.301, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 7, i32 2
  %5 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %4, i64 0, i32 0
  %6 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %7 = icmp eq %class.GrTextStrike* %6, null
  br i1 %7, label %8, label %72

8:                                                ; preds = %2
  %9 = bitcast %class.sk_sp.301* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 7, i32 0
  call void @_ZNK12SkStrikeSpec20findOrCreateGrStrikeEP13GrStrikeCache(%class.sk_sp.301* nonnull sret %3, %class.SkStrikeSpec* %10, %class.GrStrikeCache* %1) #18
  %11 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %3, i64 0, i32 0
  %12 = bitcast %class.sk_sp.301* %3 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.GrTextStrike* null, %class.GrTextStrike** %11, align 8
  %14 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %15 = bitcast %class.sk_sp.301* %4 to i64*
  store i64 %13, i64* %15, align 8
  %16 = icmp eq %class.GrTextStrike* %14, null
  br i1 %16, label %56, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0
  %19 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %35

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 38
  %24 = bitcast %class.SkNVRefCnt.302* %23 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %24) #18
  %25 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 6
  %26 = bitcast %class.SkNVRefCnt.302* %25 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %26) #18
  %27 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 4
  %28 = bitcast %class.SkNVRefCnt.302* %27 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %29 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  %30 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %22
  %32 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29 to i8*
  call void @_ZdaPv(i8* %32) #20
  br label %33

33:                                               ; preds = %31, %22
  %34 = bitcast %class.GrTextStrike* %14 to i8*
  call void @_ZdlPv(i8* %34) #20
  br label %35

35:                                               ; preds = %17, %33
  %36 = load %class.GrTextStrike*, %class.GrTextStrike** %11, align 8
  %37 = icmp eq %class.GrTextStrike* %36, null
  br i1 %37, label %56, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %36, i64 0, i32 0
  %40 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %56

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 38
  %45 = bitcast %class.SkNVRefCnt.302* %44 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %45) #18
  %46 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 6
  %47 = bitcast %class.SkNVRefCnt.302* %46 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %47) #18
  %48 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 4
  %49 = bitcast %class.SkNVRefCnt.302* %48 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %50 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %49, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %49, align 8
  %51 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %43
  %53 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %50 to i8*
  call void @_ZdaPv(i8* %53) #20
  br label %54

54:                                               ; preds = %52, %43
  %55 = bitcast %class.GrTextStrike* %36 to i8*
  call void @_ZdlPv(i8* %55) #20
  br label %56

56:                                               ; preds = %8, %35, %38, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  %57 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 7, i32 1, i32 0
  %58 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %57, align 8
  %59 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 7, i32 1, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %58, i64 %60
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %56, %63
  %64 = phi %"union.(anonymous namespace)::GlyphVector::Variant"* [ %70, %63 ], [ %58, %56 ]
  %65 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %66 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"* %64 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = call %class.GrGlyph* @_ZN12GrTextStrike8getGlyphE15SkPackedGlyphID(%class.GrTextStrike* %65, i32 %67) #18
  %69 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %64, i64 0, i32 0
  store %class.GrGlyph* %68, %class.GrGlyph** %69, align 8
  %70 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %64, i64 1
  %71 = icmp eq %"union.(anonymous namespace)::GlyphVector::Variant"* %70, %61
  br i1 %71, label %72, label %63

72:                                               ; preds = %63, %2, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_110SDFTSubRun15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::SDFTSubRun"*, i32, i32, %"class.GrMeshDrawOp::Target"*) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 7
  %6 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = tail call fastcc i64 @_ZN12_GLOBAL__N_111GlyphVector15regenerateAtlasEii12GrMaskFormatiPN12GrMeshDrawOp6TargetEb(%"class.(anonymous namespace)::GlyphVector"* %5, i32 %1, i32 %2, i32 %7, i32 2, %"class.GrMeshDrawOp::Target"* %3, i1 zeroext false)
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_110SDFTSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRect(%"class.(anonymous namespace)::SDFTSubRun"* nocapture readonly, i8*, i32, i32, i32, %class.SkMatrix* dereferenceable(40), %struct.SkIRect* nocapture readnone byval(%struct.SkIRect) align 8) unnamed_addr #0 align 2 {
  %8 = alloca <2 x float>, align 8
  %9 = alloca <2 x float>, align 8
  %10 = alloca <2 x float>, align 8
  %11 = alloca <2 x float>, align 8
  %12 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 7, i32 1, i32 0
  %13 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %12, align 8
  %14 = sext i32 %2 to i64
  %15 = sext i32 %3 to i64
  %16 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %13, i64 %14, i32 0
  %17 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 6, i32 0
  %18 = load %"struct.(anonymous namespace)::SDFTSubRun::VertexData"*, %"struct.(anonymous namespace)::SDFTSubRun::VertexData"** %17, align 8
  %19 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRun::VertexData", %"struct.(anonymous namespace)::SDFTSubRun::VertexData"* %18, i64 %14
  %20 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 7, i32 0, i32 4
  %21 = load float, float* %20, align 8
  %22 = icmp eq i32 %3, 0
  br i1 %22, label %113, label %23

23:                                               ; preds = %7
  %24 = bitcast i8* %1 to [4 x %"struct.(anonymous namespace)::Mask2DVertex"]*
  %25 = bitcast <2 x float>* %8 to i8*
  %26 = bitcast <2 x float>* %8 to %struct.SkPoint*
  %27 = getelementptr inbounds <2 x float>, <2 x float>* %8, i64 0, i64 0
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 0, i32 1
  %29 = bitcast <2 x float>* %8 to i64*
  %30 = bitcast <2 x float>* %9 to i8*
  %31 = bitcast <2 x float>* %9 to %struct.SkPoint*
  %32 = getelementptr inbounds <2 x float>, <2 x float>* %9, i64 0, i64 0
  %33 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %31, i64 0, i32 1
  %34 = bitcast <2 x float>* %9 to i64*
  %35 = bitcast <2 x float>* %10 to i8*
  %36 = bitcast <2 x float>* %10 to %struct.SkPoint*
  %37 = getelementptr inbounds <2 x float>, <2 x float>* %10, i64 0, i64 0
  %38 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %36, i64 0, i32 1
  %39 = bitcast <2 x float>* %10 to i64*
  %40 = bitcast <2 x float>* %11 to i8*
  %41 = bitcast <2 x float>* %11 to %struct.SkPoint*
  %42 = getelementptr inbounds <2 x float>, <2 x float>* %11, i64 0, i64 0
  %43 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %41, i64 0, i32 1
  %44 = bitcast <2 x float>* %11 to i64*
  br label %45

45:                                               ; preds = %45, %23
  %46 = phi i64 [ 0, %23 ], [ %111, %45 ]
  %47 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46
  %48 = getelementptr inbounds %class.GrGlyph*, %class.GrGlyph** %16, i64 %46
  %49 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRun::VertexData", %"struct.(anonymous namespace)::SDFTSubRun::VertexData"* %19, i64 %46, i32 0, i32 0
  %50 = load float, float* %49, align 4
  %51 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRun::VertexData", %"struct.(anonymous namespace)::SDFTSubRun::VertexData"* %19, i64 %46, i32 0, i32 1
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRun::VertexData", %"struct.(anonymous namespace)::SDFTSubRun::VertexData"* %19, i64 %46, i32 1, i32 0
  %54 = load i16, i16* %53, align 4
  %55 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRun::VertexData", %"struct.(anonymous namespace)::SDFTSubRun::VertexData"* %19, i64 %46, i32 1, i32 1
  %56 = load i16, i16* %55, align 2
  %57 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRun::VertexData", %"struct.(anonymous namespace)::SDFTSubRun::VertexData"* %19, i64 %46, i32 1, i32 2
  %58 = load i16, i16* %57, align 4
  %59 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRun::VertexData", %"struct.(anonymous namespace)::SDFTSubRun::VertexData"* %19, i64 %46, i32 1, i32 3
  %60 = load i16, i16* %59, align 2
  %61 = sitofp i16 %54 to float
  %62 = sitofp i16 %56 to float
  %63 = fadd float %61, 2.000000e+00
  %64 = fadd float %62, 2.000000e+00
  %65 = fmul float %21, %63
  %66 = fmul float %21, %64
  %67 = fadd float %50, %65
  %68 = fadd float %52, %66
  %69 = sitofp i16 %58 to float
  %70 = sitofp i16 %60 to float
  %71 = fadd float %69, -2.000000e+00
  %72 = fadd float %70, -2.000000e+00
  %73 = fmul float %21, %71
  %74 = fmul float %21, %72
  %75 = fadd float %50, %73
  %76 = fadd float %52, %74
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #18
  store float 0xFFFFFFFFE0000000, float* %27, align 8
  store float 0xFFFFFFFFE0000000, float* %28, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %67, float %68, %struct.SkPoint* nonnull %26) #18
  %77 = load i64, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #18
  store float 0xFFFFFFFFE0000000, float* %32, align 8
  store float 0xFFFFFFFFE0000000, float* %33, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %67, float %76, %struct.SkPoint* nonnull %31) #18
  %78 = load i64, i64* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #18
  store float 0xFFFFFFFFE0000000, float* %37, align 8
  store float 0xFFFFFFFFE0000000, float* %38, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %75, float %68, %struct.SkPoint* nonnull %36) #18
  %79 = load i64, i64* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #18
  store float 0xFFFFFFFFE0000000, float* %42, align 8
  store float 0xFFFFFFFFE0000000, float* %43, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %75, float %76, %struct.SkPoint* nonnull %41) #18
  %80 = load i64, i64* %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #18
  %81 = load %class.GrGlyph*, %class.GrGlyph** %48, align 8
  %82 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %81, i64 0, i32 1, i32 1
  %83 = bitcast %"struct.std::__1::array.294"* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = trunc i64 %84 to i16
  %86 = lshr i64 %84, 16
  %87 = trunc i64 %86 to i16
  %88 = lshr i64 %84, 32
  %89 = trunc i64 %88 to i16
  %90 = lshr i64 %84, 48
  %91 = trunc i64 %90 to i16
  %92 = bitcast [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %47 to i64*
  store i64 %77, i64* %92, align 4
  %93 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 0, i32 1
  store i32 %4, i32* %93, align 4
  %94 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 0, i32 2, i32 0
  store i16 %85, i16* %94, align 4
  %95 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 0, i32 2, i32 1
  store i16 %87, i16* %95, align 2
  %96 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 1
  %97 = bitcast %"struct.(anonymous namespace)::Mask2DVertex"* %96 to i64*
  store i64 %78, i64* %97, align 4
  %98 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 1, i32 1
  store i32 %4, i32* %98, align 4
  %99 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 1, i32 2, i32 0
  store i16 %85, i16* %99, align 4
  %100 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 1, i32 2, i32 1
  store i16 %91, i16* %100, align 2
  %101 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 2
  %102 = bitcast %"struct.(anonymous namespace)::Mask2DVertex"* %101 to i64*
  store i64 %79, i64* %102, align 4
  %103 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 2, i32 1
  store i32 %4, i32* %103, align 4
  %104 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 2, i32 2, i32 0
  store i16 %89, i16* %104, align 4
  %105 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 2, i32 2, i32 1
  store i16 %87, i16* %105, align 2
  %106 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 3
  %107 = bitcast %"struct.(anonymous namespace)::Mask2DVertex"* %106 to i64*
  store i64 %80, i64* %107, align 4
  %108 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 3, i32 1
  store i32 %4, i32* %108, align 4
  %109 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 3, i32 2, i32 0
  store i16 %89, i16* %109, align 4
  %110 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 3, i32 2, i32 1
  store i16 %91, i16* %110, align 2
  %111 = add nuw i64 %46, 1
  %112 = icmp eq i64 %111, %15
  br i1 %112, label %113, label %45

113:                                              ; preds = %45, %7
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_110SDFTSubRun12vertexStrideERK8SkMatrix(%"class.(anonymous namespace)::SDFTSubRun"* nocapture readnone, %class.SkMatrix* nocapture readnone dereferenceable(40)) unnamed_addr #8 align 2 {
  ret i64 16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_110SDFTSubRun10glyphCountEv(%"class.(anonymous namespace)::SDFTSubRun"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 0, i32 6, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn16_N12_GLOBAL__N_110SDFTSubRunD1Ev(%"class.(anonymous namespace)::SDFTSubRun"*) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 -1, i32 7, i32 4, i32 1, i64 2
  %3 = bitcast i32* %2 to %"class.(anonymous namespace)::SDFTSubRun"*
  tail call void @_ZN12_GLOBAL__N_110SDFTSubRunD2Ev(%"class.(anonymous namespace)::SDFTSubRun"* %3) #18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn16_N12_GLOBAL__N_110SDFTSubRunD0Ev(%"class.(anonymous namespace)::SDFTSubRun"*) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 -1, i32 7, i32 4, i32 1, i64 2
  %3 = bitcast i32* %2 to %"class.(anonymous namespace)::SDFTSubRun"*
  tail call void @_ZN12_GLOBAL__N_110SDFTSubRunD2Ev(%"class.(anonymous namespace)::SDFTSubRun"* %3) #18
  %4 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #20
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZThn16_NK12_GLOBAL__N_110SDFTSubRun12vertexStrideERK8SkMatrix(%"class.(anonymous namespace)::SDFTSubRun"* nocapture readnone, %class.SkMatrix* nocapture readnone dereferenceable(40)) unnamed_addr #8 align 2 {
  ret i64 16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZThn16_NK12_GLOBAL__N_110SDFTSubRun10glyphCountEv(%"class.(anonymous namespace)::SDFTSubRun"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 -1, i32 7, i32 4, i32 1, i64 18
  %3 = bitcast i32* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i32
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal { %class.GrClip*, %class.GrOp* } @_ZThn16_NK12_GLOBAL__N_110SDFTSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE(%"class.(anonymous namespace)::SDFTSubRun"*, %class.GrClip*, %class.SkMatrixProvider* dereferenceable(112), %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.GrSurfaceDrawContext*, i64) unnamed_addr #4 align 2 {
  %8 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 -1, i32 7, i32 4, i32 1, i64 2
  %9 = bitcast i32* %8 to %"class.(anonymous namespace)::SDFTSubRun"*
  %10 = tail call { %class.GrClip*, %class.GrOp* } @_ZNK12_GLOBAL__N_110SDFTSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE(%"class.(anonymous namespace)::SDFTSubRun"* %9, %class.GrClip* %1, %class.SkMatrixProvider* dereferenceable(112) %2, %class.SkGlyphRunList* dereferenceable(48) %3, %class.SkPaint* dereferenceable(72) %4, %class.GrSurfaceDrawContext* %5, i64 %6)
  ret { %class.GrClip*, %class.GrOp* } %10
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn16_NK12_GLOBAL__N_110SDFTSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRect(%"class.(anonymous namespace)::SDFTSubRun"* nocapture readonly, i8*, i32, i32, i32, %class.SkMatrix* dereferenceable(40), %struct.SkIRect* nocapture readnone byval(%struct.SkIRect) align 8) unnamed_addr #4 align 2 {
  %8 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 -1, i32 7, i32 4, i32 1, i64 2
  %9 = bitcast i32* %8 to %"class.(anonymous namespace)::SDFTSubRun"*
  tail call void @_ZNK12_GLOBAL__N_110SDFTSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRect(%"class.(anonymous namespace)::SDFTSubRun"* %9, i8* %1, i32 %2, i32 %3, i32 %4, %class.SkMatrix* dereferenceable(40) %5, %struct.SkIRect* nonnull byval(%struct.SkIRect) align 8 %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn16_N12_GLOBAL__N_110SDFTSubRun34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache(%"class.(anonymous namespace)::SDFTSubRun"*, %class.GrStrikeCache*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 -1, i32 7, i32 4, i32 1, i64 2
  %4 = bitcast i32* %3 to %"class.(anonymous namespace)::SDFTSubRun"*
  tail call void @_ZN12_GLOBAL__N_110SDFTSubRun34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache(%"class.(anonymous namespace)::SDFTSubRun"* %4, %class.GrStrikeCache* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZThn16_NK12_GLOBAL__N_110SDFTSubRun15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::SDFTSubRun"*, i32, i32, %"class.GrMeshDrawOp::Target"*) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 -1, i32 7, i32 4, i32 1, i64 20
  %6 = bitcast i32* %5 to %"class.(anonymous namespace)::GlyphVector"*
  %7 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRun", %"class.(anonymous namespace)::SDFTSubRun"* %0, i64 -1, i32 7, i32 4, i32 1, i64 8
  %8 = load i32, i32* %7, align 8
  %9 = tail call fastcc i64 @_ZN12_GLOBAL__N_111GlyphVector15regenerateAtlasEii12GrMaskFormatiPN12GrMeshDrawOp6TargetEb(%"class.(anonymous namespace)::GlyphVector"* %6, i32 %1, i32 %2, i32 %8, i32 2, %"class.GrMeshDrawOp::Target"* %3, i1 zeroext false) #18
  ret i64 %9
}

declare float @_ZNK8SkMatrix11getMaxScaleEv(%class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64, i8 } @_ZN12_GLOBAL__N_124calculate_sdf_parametersERK20GrSurfaceDrawContextRK8SkMatrixbb(%class.GrSurfaceDrawContext* nocapture readonly dereferenceable(312), %class.SkMatrix* dereferenceable(40), i1 zeroext, i1 zeroext) unnamed_addr #4 {
  %5 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %0, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  br i1 %2, label %7, label %15

7:                                                ; preds = %4
  %8 = icmp eq i32 %6, 2
  %9 = icmp eq i32 %6, 4
  %10 = or i1 %8, %9
  %11 = add i32 %6, -1
  %12 = icmp ult i32 %11, 2
  %13 = select i1 %10, i32 6, i32 5
  %14 = select i1 %12, i32 %13, i32 4
  br label %15

15:                                               ; preds = %7, %4
  %16 = phi i1 [ false, %4 ], [ %12, %7 ]
  %17 = phi i32 [ 4, %4 ], [ %14, %7 ]
  %18 = select i1 %3, i32 %17, i32 3
  %19 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %20 = load %class.SkColorSpace*, %class.SkColorSpace** %19, align 8
  %21 = icmp eq %class.SkColorSpace* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %15
  %23 = tail call zeroext i1 @_ZNK12SkColorSpace13gammaIsLinearEv(%class.SkColorSpace* nonnull %20) #18
  %24 = zext i1 %23 to i8
  br label %25

25:                                               ; preds = %15, %22
  %26 = phi i8 [ 0, %15 ], [ %24, %22 ]
  %27 = tail call zeroext i1 @_ZNK8SkMatrix12isSimilarityEf(%class.SkMatrix* %1, float 0x3F30000000000000) #18
  %28 = zext i1 %27 to i32
  %29 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = trunc i32 %30 to i8
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %25
  %34 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %1) #18
  %35 = zext i8 %34 to i32
  store i32 %35, i32* %29, align 4
  br label %36

36:                                               ; preds = %25, %33
  %37 = phi i32 [ %35, %33 ], [ %30, %25 ]
  %38 = and i32 %37, 12
  %39 = icmp eq i32 %38, 0
  %40 = select i1 %39, i32 2, i32 0
  %41 = icmp eq i8 %26, 0
  %42 = select i1 %41, i32 0, i32 64
  %43 = icmp eq i32 %18, 3
  %44 = select i1 %43, i32 128, i32 0
  %45 = or i32 %44, %28
  %46 = or i32 %45, %42
  %47 = or i32 %46, %40
  br i1 %16, label %48, label %52

48:                                               ; preds = %36
  %49 = icmp eq i32 %18, 6
  %50 = select i1 %49, i32 24, i32 8
  %51 = or i32 %50, %47
  br label %52

52:                                               ; preds = %48, %36
  %53 = phi i32 [ %51, %48 ], [ %47, %36 ]
  %54 = zext i32 %53 to i64
  %55 = shl nuw i64 %54, 32
  %56 = zext i32 %18 to i64
  %57 = or i64 %55, %56
  %58 = insertvalue { i64, i8 } undef, i64 %57, 0
  %59 = insertvalue { i64, i8 } %58, i8 %26, 1
  ret { i64, i8 } %59
}

declare zeroext i1 @_ZNK8SkMatrix12isSimilarityEf(%class.SkMatrix*, float) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

declare void @_ZN13GrAtlasTextOpC1ENS_8MaskTypeEbi6SkRectjbjPNS_8GeometryEO7GrPaint(%class.GrAtlasTextOp*, i32, i1 zeroext, i32, <2 x float>, <2 x float>, i32, i1 zeroext, i32, %"struct.GrAtlasTextOp::Geometry"*, %class.GrPaint* dereferenceable(48)) unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @_ZZN12GrBagOfBytes16allocateBytesForIN12_GLOBAL__N_121TransformedMaskSubRun10VertexDataEEEPciENKUlvE_clEv() unnamed_addr #15 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #19
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_121TransformedMaskSubRunD2Ev(%"class.(anonymous namespace)::TransformedMaskSubRun"*) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [10 x i8*] }, { [13 x i8*], [10 x i8*] }* @_ZTVN12_GLOBAL__N_121TransformedMaskSubRunE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [10 x i8*] }, { [13 x i8*], [10 x i8*] }* @_ZTVN12_GLOBAL__N_121TransformedMaskSubRunE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 0, i64 40
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 0, i64 32
  %11 = bitcast i8* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @_Z7sk_freePv(i8* %12) #18
  br label %13

13:                                               ; preds = %9, %1
  %14 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 2, i32 0
  %15 = load %class.GrTextStrike*, %class.GrTextStrike** %14, align 8
  %16 = icmp eq %class.GrTextStrike* %15, null
  br i1 %16, label %35, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %15, i64 0, i32 0
  %19 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %35

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 38
  %24 = bitcast %class.SkNVRefCnt.302* %23 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %24) #18
  %25 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 6
  %26 = bitcast %class.SkNVRefCnt.302* %25 to %class.SkAutoDescriptor*
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %26) #18
  %27 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 4
  %28 = bitcast %class.SkNVRefCnt.302* %27 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %29 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  %30 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %22
  %32 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29 to i8*
  tail call void @_ZdaPv(i8* %32) #20
  br label %33

33:                                               ; preds = %31, %22
  %34 = bitcast %class.GrTextStrike* %15 to i8*
  tail call void @_ZdlPv(i8* %34) #20
  br label %35

35:                                               ; preds = %13, %17, %33
  %36 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 0, i32 3, i32 0
  %37 = load %class.SkTypeface*, %class.SkTypeface** %36, align 8
  %38 = icmp eq %class.SkTypeface* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = bitcast %class.SkTypeface* %37 to %class.SkRefCntBase*
  %45 = bitcast %class.SkTypeface* %37 to void (%class.SkRefCntBase*)***
  %46 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, i64 2
  %48 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, align 8
  tail call void %48(%class.SkRefCntBase* nonnull %44) #18
  br label %49

49:                                               ; preds = %43, %39, %35
  %50 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 0, i32 2, i32 0
  %51 = load %class.SkPathEffect*, %class.SkPathEffect** %50, align 8
  %52 = icmp eq %class.SkPathEffect* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkPathEffect* %51 to %class.SkRefCntBase*
  %59 = bitcast %class.SkPathEffect* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  tail call void %62(%class.SkRefCntBase* nonnull %58) #18
  br label %63

63:                                               ; preds = %57, %53, %49
  %64 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %65 = load %class.SkMaskFilter*, %class.SkMaskFilter** %64, align 8
  %66 = icmp eq %class.SkMaskFilter* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %65, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = bitcast %class.SkMaskFilter* %65 to %class.SkRefCntBase*
  %73 = bitcast %class.SkMaskFilter* %65 to void (%class.SkRefCntBase*)***
  %74 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, i64 2
  %76 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, align 8
  tail call void %76(%class.SkRefCntBase* nonnull %72) #18
  br label %77

77:                                               ; preds = %63, %67, %71
  %78 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 0, i32 0
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %78) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8GrSubRun, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %79 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %80 = load %class.GrSubRun*, %class.GrSubRun** %79, align 8
  store %class.GrSubRun* null, %class.GrSubRun** %79, align 8
  %81 = icmp eq %class.GrSubRun* %80, null
  br i1 %81, label %86, label %82

82:                                               ; preds = %77
  %83 = bitcast %class.GrSubRun* %80 to void (%class.GrSubRun*)***
  %84 = load void (%class.GrSubRun*)**, void (%class.GrSubRun*)*** %83, align 8
  %85 = load void (%class.GrSubRun*)*, void (%class.GrSubRun*)** %84, align 8
  tail call void %85(%class.GrSubRun* nonnull %80) #18
  br label %86

86:                                               ; preds = %77, %82
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_121TransformedMaskSubRunD0Ev(%"class.(anonymous namespace)::TransformedMaskSubRun"*) unnamed_addr #12 align 2 {
  tail call void @_ZN12_GLOBAL__N_121TransformedMaskSubRunD2Ev(%"class.(anonymous namespace)::TransformedMaskSubRun"* %0) #18
  %2 = bitcast %"class.(anonymous namespace)::TransformedMaskSubRun"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_121TransformedMaskSubRun4drawEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContext(%"class.(anonymous namespace)::TransformedMaskSubRun"*, %class.GrClip*, %class.SkMatrixProvider* dereferenceable(112), %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.GrSurfaceDrawContext*) unnamed_addr #4 align 2 {
  %7 = alloca %"class.std::__1::function.268", align 8
  %8 = tail call { %class.GrClip*, %class.GrOp* } @_ZNK12_GLOBAL__N_121TransformedMaskSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE(%"class.(anonymous namespace)::TransformedMaskSubRun"* %0, %class.GrClip* %1, %class.SkMatrixProvider* dereferenceable(112) %2, %class.SkGlyphRunList* dereferenceable(48) %3, %class.SkPaint* dereferenceable(72) %4, %class.GrSurfaceDrawContext* %5, i64 0)
  %9 = extractvalue { %class.GrClip*, %class.GrOp* } %8, 1
  %10 = icmp eq %class.GrOp* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %6
  %12 = extractvalue { %class.GrClip*, %class.GrOp* } %8, 0
  %13 = bitcast %"class.std::__1::function.268"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #18
  %14 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %7, i64 0, i32 0, i32 1, i32 0
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j, void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %7, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %15, align 8
  call void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext* %5, %class.GrClip* %12, %class.GrOp* nonnull %9, %"class.std::__1::function.268"* nonnull dereferenceable(32) %7) #18
  %16 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %16, i64 0, i32 1
  %18 = load void (i8*)*, void (i8*)** %17, align 8
  %19 = icmp eq void (i8*)* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.std::__1::function.268", %"class.std::__1::function.268"* %7, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void %18(i8* %22) #18
  br label %23

23:                                               ; preds = %20, %11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #18
  br label %24

24:                                               ; preds = %6, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_121TransformedMaskSubRun8canReuseERK7SkPaintRK8SkMatrix(%"class.(anonymous namespace)::TransformedMaskSubRun"* nocapture readonly, %class.SkPaint* nocapture readnone dereferenceable(72), %class.SkMatrix* nocapture readnone dereferenceable(40)) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 3
  %5 = load %class.GrTextBlob*, %class.GrTextBlob** %4, align 8
  %6 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %5, i64 0, i32 8
  %7 = tail call float @_ZNK8SkMatrix11getMaxScaleEv(%class.SkMatrix* %6) #18
  %8 = fcmp uge float %7, 1.000000e+00
  ret i1 %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %class.GrAtlasSubRun* @_ZN12_GLOBAL__N_121TransformedMaskSubRun23testingOnly_atlasSubRunEv(%"class.(anonymous namespace)::TransformedMaskSubRun"* readnone) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 1
  ret %class.GrAtlasSubRun* %2
}

; Function Attrs: nounwind ssp uwtable
define internal { %class.GrClip*, %class.GrOp* } @_ZNK12_GLOBAL__N_121TransformedMaskSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE(%"class.(anonymous namespace)::TransformedMaskSubRun"*, %class.GrClip*, %class.SkMatrixProvider* dereferenceable(112), %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.GrSurfaceDrawContext*, i64) unnamed_addr #0 align 2 {
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca <4 x float>, align 16
  %10 = bitcast <4 x float>* %9 to %struct.SkRect*
  %11 = alloca %class.sk_sp.209, align 8
  %12 = alloca %class.GrPaint, align 8
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = bitcast { <2 x float>, <2 x float> }* %13 to %struct.SkRGBA4f.337*
  %15 = alloca %class.sk_sp.58, align 8
  %16 = inttoptr i64 %6 to %class.GrAtlasSubRun*
  %17 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %3, i64 0, i32 3
  %18 = bitcast %struct.SkPoint* %17 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 8
  %20 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %2, i64 0, i32 2
  %21 = bitcast %class.GrPaint* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #18
  %22 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %12, i64 0, i32 3
  %25 = bitcast %class.GrPaint* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 28, i1 false)
  %26 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %12, i64 0, i32 6, i64 0
  %27 = bitcast i8* %26 to i32*
  store i32 -1431655766, i32* %27, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #18
  store i8 1, i8* %24, align 8
  %28 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %12, i64 0, i32 5
  %29 = bitcast %struct.SkRGBA4f.337* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 bitcast (%struct.SkRGBA4f.337* @_ZL17SK_PMColor4fWHITE to i8*), i64 16, i1 false) #18
  %30 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #18
  %31 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 2
  %32 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -1, i64 16, i1 false)
  %33 = load i32, i32* %31, align 8
  %34 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 0, i32 1
  %35 = load %class.GrRecordingContext*, %class.GrRecordingContext** %34, align 8
  %36 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 0, i32 3
  %37 = icmp eq i32 %33, 2
  br i1 %37, label %38, label %40

38:                                               ; preds = %7
  %39 = call zeroext i1 @_Z25SkPaintToGrPaintWithBlendP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProvider11SkBlendModeP7GrPaint(%class.GrRecordingContext* %35, %class.GrColorInfo* dereferenceable(24) %36, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrixProvider* dereferenceable(112) %2, i32 2, %class.GrPaint* nonnull %12) #18
  br label %47

40:                                               ; preds = %7
  %41 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %12, i64 0, i32 5, i32 2
  %42 = call zeroext i1 @_Z16SkPaintToGrPaintP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderP7GrPaint(%class.GrRecordingContext* %35, %class.GrColorInfo* dereferenceable(24) %36, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrixProvider* dereferenceable(112) %2, %class.GrPaint* nonnull %12) #18
  %43 = bitcast %struct.SkRGBA4f.337* %28 to <2 x float>*
  %44 = load <2 x float>, <2 x float>* %43, align 4
  %45 = bitcast float* %41 to <2 x float>*
  %46 = load <2 x float>, <2 x float>* %45, align 4
  br label %47

47:                                               ; preds = %38, %40
  %48 = phi <2 x float> [ <float 1.000000e+00, float 1.000000e+00>, %38 ], [ %44, %40 ]
  %49 = phi <2 x float> [ <float 1.000000e+00, float 1.000000e+00>, %38 ], [ %46, %40 ]
  %50 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  store <2 x float> %48, <2 x float>* %50, align 8
  %51 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  store <2 x float> %49, <2 x float>* %51, align 8
  %52 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 1
  %53 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 3
  %54 = load %class.GrTextBlob*, %class.GrTextBlob** %53, align 8
  %55 = icmp eq %class.GrTextBlob* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %54, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 1 monotonic, !noalias !109
  br label %59

59:                                               ; preds = %47, %56
  %60 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %15, i64 0, i32 0
  store %class.GrTextBlob* %54, %class.GrTextBlob** %60, align 8, !alias.scope !109
  %61 = bitcast %class.sk_sp.209* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #18
  %62 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %63 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %62, align 8, !noalias !112
  %64 = bitcast %class.GrSurfaceProxy* %63 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %65 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %64, align 8, !noalias !112
  %66 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %65, i64 5
  %67 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %66, align 8, !noalias !112
  %68 = call %class.GrRenderTargetProxy* %67(%class.GrSurfaceProxy* %63) #18, !noalias !112
  call void @_ZN19GrRenderTargetProxy6arenasEv(%class.sk_sp.209* nonnull sret %11, %class.GrRenderTargetProxy* %68) #18
  %69 = getelementptr inbounds %class.sk_sp.209, %class.sk_sp.209* %11, i64 0, i32 0
  %70 = load %class.GrArenas*, %class.GrArenas** %69, align 8
  %71 = getelementptr inbounds %class.GrArenas, %class.GrArenas* %70, i64 0, i32 2
  %72 = icmp eq %class.GrArenas* %70, null
  br i1 %72, label %84, label %73

73:                                               ; preds = %59
  %74 = getelementptr inbounds %class.GrArenas, %class.GrArenas* %70, i64 0, i32 0
  %75 = getelementptr inbounds %class.GrArenas, %class.GrArenas* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %84

78:                                               ; preds = %73
  %79 = getelementptr inbounds %class.SkNVRefCnt.210, %class.SkNVRefCnt.210* %74, i64 10
  %80 = bitcast %class.SkNVRefCnt.210* %79 to %class.GrBagOfBytes*
  call void @_ZN12GrBagOfBytesD1Ev(%class.GrBagOfBytes* %80) #18
  %81 = getelementptr inbounds %class.SkNVRefCnt.210, %class.SkNVRefCnt.210* %74, i64 2
  %82 = bitcast %class.SkNVRefCnt.210* %81 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %82) #18
  %83 = bitcast %class.GrArenas* %70 to i8*
  call void @_ZdlPv(i8* %83) #20
  br label %84

84:                                               ; preds = %59, %73, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #18
  %85 = call %"struct.GrAtlasTextOp::Geometry"* @_ZN13GrAtlasTextOp8Geometry11MakeForBlobERK13GrAtlasSubRunRK8SkMatrix7SkPoint7SkIRect5sk_spI10GrTextBlobERK8SkRGBA4fIL11SkAlphaType2EEP12SkArenaAlloc(%class.GrAtlasSubRun* dereferenceable(8) %52, %class.SkMatrix* dereferenceable(40) %20, <2 x float> %19, i64 0, i64 0, %class.sk_sp.58* nonnull %15, %struct.SkRGBA4f.337* nonnull dereferenceable(16) %14, %class.SkArenaAlloc* %71) #18
  %86 = load %class.GrTextBlob*, %class.GrTextBlob** %60, align 8
  %87 = icmp eq %class.GrTextBlob* %86, null
  br i1 %87, label %100, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %class.GrTextBlob, %class.GrTextBlob* %86, i64 0, i32 1
  %90 = getelementptr inbounds %class.SkNVRefCnt.30, %class.SkNVRefCnt.30* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %100

93:                                               ; preds = %88
  %94 = getelementptr inbounds %class.SkNVRefCnt.30, %class.SkNVRefCnt.30* %89, i64 -2
  %95 = bitcast %class.SkNVRefCnt.30* %94 to %class.GrTextBlob*
  %96 = bitcast %class.SkNVRefCnt.30* %94 to void (%class.GrTextBlob*)***
  %97 = load void (%class.GrTextBlob*)**, void (%class.GrTextBlob*)*** %96, align 8
  %98 = getelementptr inbounds void (%class.GrTextBlob*)*, void (%class.GrTextBlob*)** %97, i64 1
  %99 = load void (%class.GrTextBlob*)*, void (%class.GrTextBlob*)** %98, align 8
  call void %99(%class.GrTextBlob* nonnull %95) #18
  br label %100

100:                                              ; preds = %84, %88, %93
  %101 = load i32, i32* %31, align 8
  %102 = icmp ult i32 %101, 3
  br i1 %102, label %104, label %103

103:                                              ; preds = %100
  call void @llvm.trap() #18
  unreachable

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 5, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = trunc i64 %106 to i32
  %108 = bitcast <4 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #18
  %109 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 4
  %110 = bitcast %struct.SkRect* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %108, i8* align 8 %110, i64 16, i1 false) #18
  %111 = shufflevector <2 x float> %19, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %112 = load <4 x float>, <4 x float>* %9, align 16
  %113 = fadd <4 x float> %111, %112
  store <4 x float> %113, <4 x float>* %9, align 16
  %114 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114) #18
  %115 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -1, i64 16, i1 false) #18
  %116 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %20, %struct.SkRect* nonnull %115, %struct.SkRect* nonnull dereferenceable(16) %10, i32 1) #18
  %117 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %118 = load <2 x float>, <2 x float>* %117, align 8
  %119 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %120 = load <2 x float>, <2 x float>* %119, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %114) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #18
  %121 = call i8* @_ZN13GrAtlasTextOpnwEm(i64 112) #18
  %122 = bitcast i8* %121 to %class.GrAtlasTextOp*
  call void @_ZN13GrAtlasTextOpC1ENS_8MaskTypeEbi6SkRectPNS_8GeometryEO7GrPaint(%class.GrAtlasTextOp* %122, i32 %101, i1 zeroext true, i32 %107, <2 x float> %118, <2 x float> %120, %"struct.GrAtlasTextOp::Geometry"* %85, %class.GrPaint* nonnull dereferenceable(48) %12) #18
  %123 = bitcast i8* %121 to %class.GrOp*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #18
  %124 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %23, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %23, align 8
  %125 = icmp eq %class.GrFragmentProcessor* %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %104
  %127 = bitcast %class.GrFragmentProcessor* %124 to void (%class.GrFragmentProcessor*)***
  %128 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %127, align 8
  %129 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %128, i64 1
  %130 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %129, align 8
  call void %130(%class.GrFragmentProcessor* nonnull %124) #18
  br label %131

131:                                              ; preds = %126, %104
  %132 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %22, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %22, align 8
  %133 = icmp eq %class.GrFragmentProcessor* %132, null
  br i1 %133, label %139, label %134

134:                                              ; preds = %131
  %135 = bitcast %class.GrFragmentProcessor* %132 to void (%class.GrFragmentProcessor*)***
  %136 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %135, align 8
  %137 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %136, i64 1
  %138 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %137, align 8
  call void %138(%class.GrFragmentProcessor* nonnull %132) #18
  br label %139

139:                                              ; preds = %131, %134
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #18
  %140 = icmp eq i64 %6, 0
  br i1 %140, label %145, label %141

141:                                              ; preds = %139
  %142 = inttoptr i64 %6 to void (%class.GrAtlasSubRun*)***
  %143 = load void (%class.GrAtlasSubRun*)**, void (%class.GrAtlasSubRun*)*** %142, align 8
  %144 = load void (%class.GrAtlasSubRun*)*, void (%class.GrAtlasSubRun*)** %143, align 8
  call void %144(%class.GrAtlasSubRun* nonnull %16) #18
  br label %145

145:                                              ; preds = %139, %141
  %146 = insertvalue { %class.GrClip*, %class.GrOp* } undef, %class.GrClip* %1, 0
  %147 = insertvalue { %class.GrClip*, %class.GrOp* } %146, %class.GrOp* %123, 1
  ret { %class.GrClip*, %class.GrOp* } %147
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_121TransformedMaskSubRun34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache(%"class.(anonymous namespace)::TransformedMaskSubRun"*, %class.GrStrikeCache*) unnamed_addr #4 align 2 {
  %3 = alloca %class.sk_sp.301, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 2
  %5 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %4, i64 0, i32 0
  %6 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %7 = icmp eq %class.GrTextStrike* %6, null
  br i1 %7, label %8, label %72

8:                                                ; preds = %2
  %9 = bitcast %class.sk_sp.301* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 0
  call void @_ZNK12SkStrikeSpec20findOrCreateGrStrikeEP13GrStrikeCache(%class.sk_sp.301* nonnull sret %3, %class.SkStrikeSpec* %10, %class.GrStrikeCache* %1) #18
  %11 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %3, i64 0, i32 0
  %12 = bitcast %class.sk_sp.301* %3 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.GrTextStrike* null, %class.GrTextStrike** %11, align 8
  %14 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %15 = bitcast %class.sk_sp.301* %4 to i64*
  store i64 %13, i64* %15, align 8
  %16 = icmp eq %class.GrTextStrike* %14, null
  br i1 %16, label %56, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0
  %19 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %35

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 38
  %24 = bitcast %class.SkNVRefCnt.302* %23 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %24) #18
  %25 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 6
  %26 = bitcast %class.SkNVRefCnt.302* %25 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %26) #18
  %27 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 4
  %28 = bitcast %class.SkNVRefCnt.302* %27 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %29 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  %30 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %22
  %32 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29 to i8*
  call void @_ZdaPv(i8* %32) #20
  br label %33

33:                                               ; preds = %31, %22
  %34 = bitcast %class.GrTextStrike* %14 to i8*
  call void @_ZdlPv(i8* %34) #20
  br label %35

35:                                               ; preds = %17, %33
  %36 = load %class.GrTextStrike*, %class.GrTextStrike** %11, align 8
  %37 = icmp eq %class.GrTextStrike* %36, null
  br i1 %37, label %56, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %36, i64 0, i32 0
  %40 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %56

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 38
  %45 = bitcast %class.SkNVRefCnt.302* %44 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %45) #18
  %46 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 6
  %47 = bitcast %class.SkNVRefCnt.302* %46 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %47) #18
  %48 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 4
  %49 = bitcast %class.SkNVRefCnt.302* %48 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %50 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %49, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %49, align 8
  %51 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %43
  %53 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %50 to i8*
  call void @_ZdaPv(i8* %53) #20
  br label %54

54:                                               ; preds = %52, %43
  %55 = bitcast %class.GrTextStrike* %36 to i8*
  call void @_ZdlPv(i8* %55) #20
  br label %56

56:                                               ; preds = %8, %35, %38, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  %57 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 1, i32 0
  %58 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %57, align 8
  %59 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 1, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %58, i64 %60
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %56, %63
  %64 = phi %"union.(anonymous namespace)::GlyphVector::Variant"* [ %70, %63 ], [ %58, %56 ]
  %65 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %66 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"* %64 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = call %class.GrGlyph* @_ZN12GrTextStrike8getGlyphE15SkPackedGlyphID(%class.GrTextStrike* %65, i32 %67) #18
  %69 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %64, i64 0, i32 0
  store %class.GrGlyph* %68, %class.GrGlyph** %69, align 8
  %70 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %64, i64 1
  %71 = icmp eq %"union.(anonymous namespace)::GlyphVector::Variant"* %70, %61
  br i1 %71, label %72, label %63

72:                                               ; preds = %63, %2, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_121TransformedMaskSubRun15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::TransformedMaskSubRun"*, i32, i32, %"class.GrMeshDrawOp::Target"*) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = tail call fastcc i64 @_ZN12_GLOBAL__N_111GlyphVector15regenerateAtlasEii12GrMaskFormatiPN12GrMeshDrawOp6TargetEb(%"class.(anonymous namespace)::GlyphVector"* %5, i32 %1, i32 %2, i32 %7, i32 1, %"class.GrMeshDrawOp::Target"* %3, i1 zeroext true)
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_121TransformedMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRect(%"class.(anonymous namespace)::TransformedMaskSubRun"*, i8*, i32, i32, i32, %class.SkMatrix* dereferenceable(40), %struct.SkIRect* nocapture readnone byval(%struct.SkIRect) align 8) unnamed_addr #0 align 2 {
  %8 = alloca %struct.SkPoint, align 4
  %9 = alloca %struct.SkPoint3, align 8
  %10 = alloca %struct.SkPoint, align 4
  %11 = alloca %struct.SkPoint3, align 8
  %12 = alloca %struct.SkPoint, align 4
  %13 = alloca %struct.SkPoint3, align 8
  %14 = alloca %struct.SkPoint, align 4
  %15 = alloca %struct.SkPoint3, align 8
  %16 = alloca <2 x float>, align 8
  %17 = alloca <2 x float>, align 8
  %18 = alloca <2 x float>, align 8
  %19 = alloca <2 x float>, align 8
  %20 = alloca <2 x float>, align 8
  %21 = alloca <2 x float>, align 8
  %22 = alloca <2 x float>, align 8
  %23 = alloca <2 x float>, align 8
  %24 = alloca %struct.SkPoint, align 4
  %25 = alloca %struct.SkPoint3, align 8
  %26 = alloca %struct.SkPoint, align 4
  %27 = alloca %struct.SkPoint3, align 8
  %28 = alloca %struct.SkPoint, align 4
  %29 = alloca %struct.SkPoint3, align 8
  %30 = alloca %struct.SkPoint, align 4
  %31 = alloca %struct.SkPoint3, align 8
  %32 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 192
  %35 = icmp eq i32 %34, 128
  br i1 %35, label %36, label %39

36:                                               ; preds = %7
  %37 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %5) #18
  %38 = zext i8 %37 to i32
  store i32 %38, i32* %32, align 4
  br label %39

39:                                               ; preds = %7, %36
  %40 = phi i32 [ %38, %36 ], [ %33, %7 ]
  %41 = and i32 %40, 8
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 2
  br i1 %42, label %46, label %241

46:                                               ; preds = %39
  br i1 %45, label %47, label %143

47:                                               ; preds = %46
  %48 = bitcast i8* %1 to [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]*
  %49 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 1, i32 0
  %50 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %49, align 8, !noalias !115
  %51 = sext i32 %2 to i64
  %52 = sext i32 %3 to i64
  %53 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %50, i64 %51, i32 0
  %54 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 5, i32 0
  %55 = load %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"*, %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"** %54, align 8, !noalias !115
  %56 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %55, i64 %51
  %57 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 0, i32 4
  %58 = load float, float* %57, align 8
  %59 = icmp eq i32 %3, 0
  br i1 %59, label %492, label %60

60:                                               ; preds = %47
  %61 = bitcast <2 x float>* %20 to i8*
  %62 = bitcast <2 x float>* %20 to %struct.SkPoint*
  %63 = getelementptr inbounds <2 x float>, <2 x float>* %20, i64 0, i64 0
  %64 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %62, i64 0, i32 1
  %65 = bitcast <2 x float>* %20 to i64*
  %66 = bitcast <2 x float>* %21 to i8*
  %67 = bitcast <2 x float>* %21 to %struct.SkPoint*
  %68 = getelementptr inbounds <2 x float>, <2 x float>* %21, i64 0, i64 0
  %69 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %67, i64 0, i32 1
  %70 = bitcast <2 x float>* %21 to i64*
  %71 = bitcast <2 x float>* %22 to i8*
  %72 = bitcast <2 x float>* %22 to %struct.SkPoint*
  %73 = getelementptr inbounds <2 x float>, <2 x float>* %22, i64 0, i64 0
  %74 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %72, i64 0, i32 1
  %75 = bitcast <2 x float>* %22 to i64*
  %76 = bitcast <2 x float>* %23 to i8*
  %77 = bitcast <2 x float>* %23 to %struct.SkPoint*
  %78 = getelementptr inbounds <2 x float>, <2 x float>* %23, i64 0, i64 0
  %79 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %77, i64 0, i32 1
  %80 = bitcast <2 x float>* %23 to i64*
  br label %81

81:                                               ; preds = %81, %60
  %82 = phi i64 [ 0, %60 ], [ %141, %81 ]
  %83 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %48, i64 %82
  %84 = getelementptr inbounds %class.GrGlyph*, %class.GrGlyph** %53, i64 %82
  %85 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %56, i64 %82, i32 0, i32 0
  %86 = load float, float* %85, align 4
  %87 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %56, i64 %82, i32 0, i32 1
  %88 = load float, float* %87, align 4
  %89 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %56, i64 %82, i32 1, i32 0
  %90 = load i16, i16* %89, align 4
  %91 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %56, i64 %82, i32 1, i32 1
  %92 = load i16, i16* %91, align 2
  %93 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %56, i64 %82, i32 1, i32 2
  %94 = load i16, i16* %93, align 4
  %95 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %56, i64 %82, i32 1, i32 3
  %96 = load i16, i16* %95, align 2
  %97 = sitofp i16 %90 to float
  %98 = sitofp i16 %92 to float
  %99 = fmul float %58, %97
  %100 = fmul float %58, %98
  %101 = fadd float %86, %99
  %102 = fadd float %88, %100
  %103 = sitofp i16 %94 to float
  %104 = sitofp i16 %96 to float
  %105 = fmul float %58, %103
  %106 = fmul float %58, %104
  %107 = fadd float %86, %105
  %108 = fadd float %88, %106
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #18
  store float 0xFFFFFFFFE0000000, float* %63, align 8
  store float 0xFFFFFFFFE0000000, float* %64, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %101, float %102, %struct.SkPoint* nonnull %62) #18
  %109 = load i64, i64* %65, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #18
  store float 0xFFFFFFFFE0000000, float* %68, align 8
  store float 0xFFFFFFFFE0000000, float* %69, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %101, float %108, %struct.SkPoint* nonnull %67) #18
  %110 = load i64, i64* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #18
  store float 0xFFFFFFFFE0000000, float* %73, align 8
  store float 0xFFFFFFFFE0000000, float* %74, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %107, float %102, %struct.SkPoint* nonnull %72) #18
  %111 = load i64, i64* %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #18
  store float 0xFFFFFFFFE0000000, float* %78, align 8
  store float 0xFFFFFFFFE0000000, float* %79, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %107, float %108, %struct.SkPoint* nonnull %77) #18
  %112 = load i64, i64* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #18
  %113 = load %class.GrGlyph*, %class.GrGlyph** %84, align 8
  %114 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %113, i64 0, i32 1, i32 1
  %115 = bitcast %"struct.std::__1::array.294"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = trunc i64 %116 to i32
  %118 = lshr i64 %116, 32
  %119 = trunc i64 %118 to i32
  %120 = and i32 %117, -65536
  %121 = and i32 %117, 65535
  %122 = bitcast [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %83 to i64*
  store i64 %109, i64* %122, align 4
  %123 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %48, i64 %82, i64 0, i32 1
  %124 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %123 to i32*
  store i32 %117, i32* %124, align 4
  %125 = and i32 %119, -65536
  %126 = or i32 %125, %121
  %127 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %48, i64 %82, i64 1
  %128 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %127 to i64*
  store i64 %110, i64* %128, align 4
  %129 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %48, i64 %82, i64 1, i32 1
  %130 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %129 to i32*
  store i32 %126, i32* %130, align 4
  %131 = and i32 %119, 65535
  %132 = or i32 %131, %120
  %133 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %48, i64 %82, i64 2
  %134 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %133 to i64*
  store i64 %111, i64* %134, align 4
  %135 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %48, i64 %82, i64 2, i32 1
  %136 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %135 to i32*
  store i32 %132, i32* %136, align 4
  %137 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %48, i64 %82, i64 3
  %138 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %137 to i64*
  store i64 %112, i64* %138, align 4
  %139 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %48, i64 %82, i64 3, i32 1
  %140 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %139 to i32*
  store i32 %119, i32* %140, align 4
  %141 = add nuw i64 %82, 1
  %142 = icmp eq i64 %141, %52
  br i1 %142, label %492, label %81

143:                                              ; preds = %46
  %144 = bitcast i8* %1 to [4 x %"struct.(anonymous namespace)::Mask2DVertex"]*
  %145 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 1, i32 0
  %146 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %145, align 8, !noalias !118
  %147 = sext i32 %2 to i64
  %148 = sext i32 %3 to i64
  %149 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %146, i64 %147, i32 0
  %150 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 5, i32 0
  %151 = load %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"*, %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"** %150, align 8, !noalias !118
  %152 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %151, i64 %147
  %153 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 0, i32 4
  %154 = load float, float* %153, align 8
  %155 = icmp eq i32 %3, 0
  br i1 %155, label %492, label %156

156:                                              ; preds = %143
  %157 = bitcast <2 x float>* %16 to i8*
  %158 = bitcast <2 x float>* %16 to %struct.SkPoint*
  %159 = getelementptr inbounds <2 x float>, <2 x float>* %16, i64 0, i64 0
  %160 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %158, i64 0, i32 1
  %161 = bitcast <2 x float>* %16 to i64*
  %162 = bitcast <2 x float>* %17 to i8*
  %163 = bitcast <2 x float>* %17 to %struct.SkPoint*
  %164 = getelementptr inbounds <2 x float>, <2 x float>* %17, i64 0, i64 0
  %165 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %163, i64 0, i32 1
  %166 = bitcast <2 x float>* %17 to i64*
  %167 = bitcast <2 x float>* %18 to i8*
  %168 = bitcast <2 x float>* %18 to %struct.SkPoint*
  %169 = getelementptr inbounds <2 x float>, <2 x float>* %18, i64 0, i64 0
  %170 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %168, i64 0, i32 1
  %171 = bitcast <2 x float>* %18 to i64*
  %172 = bitcast <2 x float>* %19 to i8*
  %173 = bitcast <2 x float>* %19 to %struct.SkPoint*
  %174 = getelementptr inbounds <2 x float>, <2 x float>* %19, i64 0, i64 0
  %175 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %173, i64 0, i32 1
  %176 = bitcast <2 x float>* %19 to i64*
  br label %177

177:                                              ; preds = %177, %156
  %178 = phi i64 [ 0, %156 ], [ %239, %177 ]
  %179 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178
  %180 = getelementptr inbounds %class.GrGlyph*, %class.GrGlyph** %149, i64 %178
  %181 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %152, i64 %178, i32 0, i32 0
  %182 = load float, float* %181, align 4
  %183 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %152, i64 %178, i32 0, i32 1
  %184 = load float, float* %183, align 4
  %185 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %152, i64 %178, i32 1, i32 0
  %186 = load i16, i16* %185, align 4
  %187 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %152, i64 %178, i32 1, i32 1
  %188 = load i16, i16* %187, align 2
  %189 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %152, i64 %178, i32 1, i32 2
  %190 = load i16, i16* %189, align 4
  %191 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %152, i64 %178, i32 1, i32 3
  %192 = load i16, i16* %191, align 2
  %193 = sitofp i16 %186 to float
  %194 = sitofp i16 %188 to float
  %195 = fmul float %154, %193
  %196 = fmul float %154, %194
  %197 = fadd float %182, %195
  %198 = fadd float %184, %196
  %199 = sitofp i16 %190 to float
  %200 = sitofp i16 %192 to float
  %201 = fmul float %154, %199
  %202 = fmul float %154, %200
  %203 = fadd float %182, %201
  %204 = fadd float %184, %202
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #18
  store float 0xFFFFFFFFE0000000, float* %159, align 8
  store float 0xFFFFFFFFE0000000, float* %160, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %197, float %198, %struct.SkPoint* nonnull %158) #18
  %205 = load i64, i64* %161, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #18
  store float 0xFFFFFFFFE0000000, float* %164, align 8
  store float 0xFFFFFFFFE0000000, float* %165, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %197, float %204, %struct.SkPoint* nonnull %163) #18
  %206 = load i64, i64* %166, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #18
  store float 0xFFFFFFFFE0000000, float* %169, align 8
  store float 0xFFFFFFFFE0000000, float* %170, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %203, float %198, %struct.SkPoint* nonnull %168) #18
  %207 = load i64, i64* %171, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #18
  store float 0xFFFFFFFFE0000000, float* %174, align 8
  store float 0xFFFFFFFFE0000000, float* %175, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %203, float %204, %struct.SkPoint* nonnull %173) #18
  %208 = load i64, i64* %176, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #18
  %209 = load %class.GrGlyph*, %class.GrGlyph** %180, align 8
  %210 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %209, i64 0, i32 1, i32 1
  %211 = bitcast %"struct.std::__1::array.294"* %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = trunc i64 %212 to i16
  %214 = lshr i64 %212, 16
  %215 = trunc i64 %214 to i16
  %216 = lshr i64 %212, 32
  %217 = trunc i64 %216 to i16
  %218 = lshr i64 %212, 48
  %219 = trunc i64 %218 to i16
  %220 = bitcast [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %179 to i64*
  store i64 %205, i64* %220, align 4
  %221 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 0, i32 1
  store i32 %4, i32* %221, align 4
  %222 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 0, i32 2, i32 0
  store i16 %213, i16* %222, align 4
  %223 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 0, i32 2, i32 1
  store i16 %215, i16* %223, align 2
  %224 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 1
  %225 = bitcast %"struct.(anonymous namespace)::Mask2DVertex"* %224 to i64*
  store i64 %206, i64* %225, align 4
  %226 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 1, i32 1
  store i32 %4, i32* %226, align 4
  %227 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 1, i32 2, i32 0
  store i16 %213, i16* %227, align 4
  %228 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 1, i32 2, i32 1
  store i16 %219, i16* %228, align 2
  %229 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 2
  %230 = bitcast %"struct.(anonymous namespace)::Mask2DVertex"* %229 to i64*
  store i64 %207, i64* %230, align 4
  %231 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 2, i32 1
  store i32 %4, i32* %231, align 4
  %232 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 2, i32 2, i32 0
  store i16 %217, i16* %232, align 4
  %233 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 2, i32 2, i32 1
  store i16 %215, i16* %233, align 2
  %234 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 3
  %235 = bitcast %"struct.(anonymous namespace)::Mask2DVertex"* %234 to i64*
  store i64 %208, i64* %235, align 4
  %236 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 3, i32 1
  store i32 %4, i32* %236, align 4
  %237 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 3, i32 2, i32 0
  store i16 %217, i16* %237, align 4
  %238 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 3, i32 2, i32 1
  store i16 %219, i16* %238, align 2
  %239 = add nuw i64 %178, 1
  %240 = icmp eq i64 %239, %148
  br i1 %240, label %492, label %177

241:                                              ; preds = %39
  br i1 %45, label %242, label %366

242:                                              ; preds = %241
  %243 = bitcast i8* %1 to [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]*
  %244 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 1, i32 0
  %245 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %244, align 8, !noalias !121
  %246 = sext i32 %2 to i64
  %247 = sext i32 %3 to i64
  %248 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %245, i64 %246, i32 0
  %249 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 5, i32 0
  %250 = load %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"*, %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"** %249, align 8, !noalias !121
  %251 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %250, i64 %246
  %252 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 0, i32 4
  %253 = load float, float* %252, align 8
  %254 = icmp eq i32 %3, 0
  br i1 %254, label %492, label %255

255:                                              ; preds = %242
  %256 = bitcast %struct.SkPoint* %8 to i8*
  %257 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 0
  %258 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 1
  %259 = bitcast %struct.SkPoint3* %9 to i8*
  %260 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %9, i64 0, i32 0
  %261 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %9, i64 0, i32 1
  %262 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %9, i64 0, i32 2
  %263 = bitcast %struct.SkPoint3* %9 to i64*
  %264 = bitcast float* %262 to i32*
  %265 = bitcast %struct.SkPoint* %10 to i8*
  %266 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 0, i32 0
  %267 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 0, i32 1
  %268 = bitcast %struct.SkPoint3* %11 to i8*
  %269 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %11, i64 0, i32 0
  %270 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %11, i64 0, i32 1
  %271 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %11, i64 0, i32 2
  %272 = bitcast %struct.SkPoint3* %11 to i64*
  %273 = bitcast float* %271 to i32*
  %274 = bitcast %struct.SkPoint* %12 to i8*
  %275 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 0, i32 0
  %276 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 0, i32 1
  %277 = bitcast %struct.SkPoint3* %13 to i8*
  %278 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %13, i64 0, i32 0
  %279 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %13, i64 0, i32 1
  %280 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %13, i64 0, i32 2
  %281 = bitcast %struct.SkPoint3* %13 to i64*
  %282 = bitcast float* %280 to i32*
  %283 = bitcast %struct.SkPoint* %14 to i8*
  %284 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 0
  %285 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 1
  %286 = bitcast %struct.SkPoint3* %15 to i8*
  %287 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %15, i64 0, i32 0
  %288 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %15, i64 0, i32 1
  %289 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %15, i64 0, i32 2
  %290 = bitcast %struct.SkPoint3* %15 to i64*
  %291 = bitcast float* %289 to i32*
  br label %292

292:                                              ; preds = %292, %255
  %293 = phi i64 [ 0, %255 ], [ %364, %292 ]
  %294 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293
  %295 = getelementptr inbounds %class.GrGlyph*, %class.GrGlyph** %248, i64 %293
  %296 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %251, i64 %293, i32 0, i32 0
  %297 = load float, float* %296, align 4
  %298 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %251, i64 %293, i32 0, i32 1
  %299 = load float, float* %298, align 4
  %300 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %251, i64 %293, i32 1, i32 0
  %301 = load i16, i16* %300, align 4
  %302 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %251, i64 %293, i32 1, i32 1
  %303 = load i16, i16* %302, align 2
  %304 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %251, i64 %293, i32 1, i32 2
  %305 = load i16, i16* %304, align 4
  %306 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %251, i64 %293, i32 1, i32 3
  %307 = load i16, i16* %306, align 2
  %308 = sitofp i16 %301 to float
  %309 = sitofp i16 %303 to float
  %310 = fmul float %253, %308
  %311 = fmul float %253, %309
  %312 = fadd float %297, %310
  %313 = fadd float %299, %311
  %314 = sitofp i16 %305 to float
  %315 = sitofp i16 %307 to float
  %316 = fmul float %253, %314
  %317 = fmul float %253, %315
  %318 = fadd float %297, %316
  %319 = fadd float %299, %317
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %256) #18
  store float %312, float* %257, align 4
  store float %313, float* %258, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %259) #18
  store float 0xFFFFFFFFE0000000, float* %260, align 8
  store float 0xFFFFFFFFE0000000, float* %261, align 4
  store float 0xFFFFFFFFE0000000, float* %262, align 8
  call void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix* %5, %struct.SkPoint3* nonnull %9, %struct.SkPoint* nonnull %8, i32 1) #18
  %320 = load i64, i64* %263, align 8
  %321 = load i32, i32* %264, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %259) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %256) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %265) #18
  store float %312, float* %266, align 4
  store float %319, float* %267, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %268) #18
  store float 0xFFFFFFFFE0000000, float* %269, align 8
  store float 0xFFFFFFFFE0000000, float* %270, align 4
  store float 0xFFFFFFFFE0000000, float* %271, align 8
  call void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix* %5, %struct.SkPoint3* nonnull %11, %struct.SkPoint* nonnull %10, i32 1) #18
  %322 = load i64, i64* %272, align 8
  %323 = load i32, i32* %273, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %268) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %265) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %274) #18
  store float %318, float* %275, align 4
  store float %313, float* %276, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %277) #18
  store float 0xFFFFFFFFE0000000, float* %278, align 8
  store float 0xFFFFFFFFE0000000, float* %279, align 4
  store float 0xFFFFFFFFE0000000, float* %280, align 8
  call void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix* %5, %struct.SkPoint3* nonnull %13, %struct.SkPoint* nonnull %12, i32 1) #18
  %324 = load i64, i64* %281, align 8
  %325 = load i32, i32* %282, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %277) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %274) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %283) #18
  store float %318, float* %284, align 4
  store float %319, float* %285, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %286) #18
  store float 0xFFFFFFFFE0000000, float* %287, align 8
  store float 0xFFFFFFFFE0000000, float* %288, align 4
  store float 0xFFFFFFFFE0000000, float* %289, align 8
  call void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix* %5, %struct.SkPoint3* nonnull %15, %struct.SkPoint* nonnull %14, i32 1) #18
  %326 = load i64, i64* %290, align 8
  %327 = load i32, i32* %291, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %286) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %283) #18
  %328 = load %class.GrGlyph*, %class.GrGlyph** %295, align 8
  %329 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %328, i64 0, i32 1, i32 1
  %330 = bitcast %"struct.std::__1::array.294"* %329 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = trunc i64 %331 to i32
  %333 = lshr i64 %331, 32
  %334 = trunc i64 %333 to i32
  %335 = and i32 %332, -65536
  %336 = and i32 %332, 65535
  %337 = bitcast [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %294 to i64*
  store i64 %320, i64* %337, align 4
  %338 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 0, i32 0, i32 2
  %339 = bitcast float* %338 to i32*
  store i32 %321, i32* %339, align 4
  %340 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 0, i32 1
  %341 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %340 to i32*
  store i32 %332, i32* %341, align 4
  %342 = and i32 %334, -65536
  %343 = or i32 %342, %336
  %344 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 1
  %345 = bitcast %"struct.(anonymous namespace)::ARGB3DVertex"* %344 to i64*
  store i64 %322, i64* %345, align 4
  %346 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 1, i32 0, i32 2
  %347 = bitcast float* %346 to i32*
  store i32 %323, i32* %347, align 4
  %348 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 1, i32 1
  %349 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %348 to i32*
  store i32 %343, i32* %349, align 4
  %350 = and i32 %334, 65535
  %351 = or i32 %350, %335
  %352 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 2
  %353 = bitcast %"struct.(anonymous namespace)::ARGB3DVertex"* %352 to i64*
  store i64 %324, i64* %353, align 4
  %354 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 2, i32 0, i32 2
  %355 = bitcast float* %354 to i32*
  store i32 %325, i32* %355, align 4
  %356 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 2, i32 1
  %357 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %356 to i32*
  store i32 %351, i32* %357, align 4
  %358 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 3
  %359 = bitcast %"struct.(anonymous namespace)::ARGB3DVertex"* %358 to i64*
  store i64 %326, i64* %359, align 4
  %360 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 3, i32 0, i32 2
  %361 = bitcast float* %360 to i32*
  store i32 %327, i32* %361, align 4
  %362 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 3, i32 1
  %363 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %362 to i32*
  store i32 %334, i32* %363, align 4
  %364 = add nuw i64 %293, 1
  %365 = icmp eq i64 %364, %247
  br i1 %365, label %492, label %292

366:                                              ; preds = %241
  %367 = bitcast i8* %1 to [4 x %"struct.(anonymous namespace)::Mask3DVertex"]*
  %368 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 1, i32 0
  %369 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %368, align 8, !noalias !124
  %370 = sext i32 %2 to i64
  %371 = sext i32 %3 to i64
  %372 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %369, i64 %370, i32 0
  %373 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 5, i32 0
  %374 = load %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"*, %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"** %373, align 8, !noalias !124
  %375 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %374, i64 %370
  %376 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 6, i32 0, i32 4
  %377 = load float, float* %376, align 8
  %378 = icmp eq i32 %3, 0
  br i1 %378, label %492, label %379

379:                                              ; preds = %366
  %380 = bitcast %struct.SkPoint* %24 to i8*
  %381 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %24, i64 0, i32 0
  %382 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %24, i64 0, i32 1
  %383 = bitcast %struct.SkPoint3* %25 to i8*
  %384 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %25, i64 0, i32 0
  %385 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %25, i64 0, i32 1
  %386 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %25, i64 0, i32 2
  %387 = bitcast %struct.SkPoint3* %25 to i64*
  %388 = bitcast float* %386 to i32*
  %389 = bitcast %struct.SkPoint* %26 to i8*
  %390 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 0, i32 0
  %391 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 0, i32 1
  %392 = bitcast %struct.SkPoint3* %27 to i8*
  %393 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %27, i64 0, i32 0
  %394 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %27, i64 0, i32 1
  %395 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %27, i64 0, i32 2
  %396 = bitcast %struct.SkPoint3* %27 to i64*
  %397 = bitcast float* %395 to i32*
  %398 = bitcast %struct.SkPoint* %28 to i8*
  %399 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %28, i64 0, i32 0
  %400 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %28, i64 0, i32 1
  %401 = bitcast %struct.SkPoint3* %29 to i8*
  %402 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %29, i64 0, i32 0
  %403 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %29, i64 0, i32 1
  %404 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %29, i64 0, i32 2
  %405 = bitcast %struct.SkPoint3* %29 to i64*
  %406 = bitcast float* %404 to i32*
  %407 = bitcast %struct.SkPoint* %30 to i8*
  %408 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %30, i64 0, i32 0
  %409 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %30, i64 0, i32 1
  %410 = bitcast %struct.SkPoint3* %31 to i8*
  %411 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %31, i64 0, i32 0
  %412 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %31, i64 0, i32 1
  %413 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %31, i64 0, i32 2
  %414 = bitcast %struct.SkPoint3* %31 to i64*
  %415 = bitcast float* %413 to i32*
  br label %416

416:                                              ; preds = %416, %379
  %417 = phi i64 [ 0, %379 ], [ %490, %416 ]
  %418 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417
  %419 = getelementptr inbounds %class.GrGlyph*, %class.GrGlyph** %372, i64 %417
  %420 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %375, i64 %417, i32 0, i32 0
  %421 = load float, float* %420, align 4
  %422 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %375, i64 %417, i32 0, i32 1
  %423 = load float, float* %422, align 4
  %424 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %375, i64 %417, i32 1, i32 0
  %425 = load i16, i16* %424, align 4
  %426 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %375, i64 %417, i32 1, i32 1
  %427 = load i16, i16* %426, align 2
  %428 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %375, i64 %417, i32 1, i32 2
  %429 = load i16, i16* %428, align 4
  %430 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRun::VertexData"* %375, i64 %417, i32 1, i32 3
  %431 = load i16, i16* %430, align 2
  %432 = sitofp i16 %425 to float
  %433 = sitofp i16 %427 to float
  %434 = fmul float %377, %432
  %435 = fmul float %377, %433
  %436 = fadd float %421, %434
  %437 = fadd float %423, %435
  %438 = sitofp i16 %429 to float
  %439 = sitofp i16 %431 to float
  %440 = fmul float %377, %438
  %441 = fmul float %377, %439
  %442 = fadd float %421, %440
  %443 = fadd float %423, %441
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %380) #18
  store float %436, float* %381, align 4
  store float %437, float* %382, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %383) #18
  store float 0xFFFFFFFFE0000000, float* %384, align 8
  store float 0xFFFFFFFFE0000000, float* %385, align 4
  store float 0xFFFFFFFFE0000000, float* %386, align 8
  call void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix* %5, %struct.SkPoint3* nonnull %25, %struct.SkPoint* nonnull %24, i32 1) #18
  %444 = load i64, i64* %387, align 8
  %445 = load i32, i32* %388, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %383) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %380) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %389) #18
  store float %436, float* %390, align 4
  store float %443, float* %391, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %392) #18
  store float 0xFFFFFFFFE0000000, float* %393, align 8
  store float 0xFFFFFFFFE0000000, float* %394, align 4
  store float 0xFFFFFFFFE0000000, float* %395, align 8
  call void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix* %5, %struct.SkPoint3* nonnull %27, %struct.SkPoint* nonnull %26, i32 1) #18
  %446 = load i64, i64* %396, align 8
  %447 = load i32, i32* %397, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %392) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %389) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %398) #18
  store float %442, float* %399, align 4
  store float %437, float* %400, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %401) #18
  store float 0xFFFFFFFFE0000000, float* %402, align 8
  store float 0xFFFFFFFFE0000000, float* %403, align 4
  store float 0xFFFFFFFFE0000000, float* %404, align 8
  call void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix* %5, %struct.SkPoint3* nonnull %29, %struct.SkPoint* nonnull %28, i32 1) #18
  %448 = load i64, i64* %405, align 8
  %449 = load i32, i32* %406, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %401) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %398) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %407) #18
  store float %442, float* %408, align 4
  store float %443, float* %409, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %410) #18
  store float 0xFFFFFFFFE0000000, float* %411, align 8
  store float 0xFFFFFFFFE0000000, float* %412, align 4
  store float 0xFFFFFFFFE0000000, float* %413, align 8
  call void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix* %5, %struct.SkPoint3* nonnull %31, %struct.SkPoint* nonnull %30, i32 1) #18
  %450 = load i64, i64* %414, align 8
  %451 = load i32, i32* %415, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %410) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %407) #18
  %452 = load %class.GrGlyph*, %class.GrGlyph** %419, align 8
  %453 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %452, i64 0, i32 1, i32 1
  %454 = bitcast %"struct.std::__1::array.294"* %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = trunc i64 %455 to i16
  %457 = lshr i64 %455, 16
  %458 = trunc i64 %457 to i16
  %459 = lshr i64 %455, 32
  %460 = trunc i64 %459 to i16
  %461 = lshr i64 %455, 48
  %462 = trunc i64 %461 to i16
  %463 = bitcast [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %418 to i64*
  store i64 %444, i64* %463, align 4
  %464 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 0, i32 0, i32 2
  %465 = bitcast float* %464 to i32*
  store i32 %445, i32* %465, align 4
  %466 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 0, i32 1
  store i32 %4, i32* %466, align 4
  %467 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 0, i32 2, i32 0
  store i16 %456, i16* %467, align 4
  %468 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 0, i32 2, i32 1
  store i16 %458, i16* %468, align 2
  %469 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 1
  %470 = bitcast %"struct.(anonymous namespace)::Mask3DVertex"* %469 to i64*
  store i64 %446, i64* %470, align 4
  %471 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 1, i32 0, i32 2
  %472 = bitcast float* %471 to i32*
  store i32 %447, i32* %472, align 4
  %473 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 1, i32 1
  store i32 %4, i32* %473, align 4
  %474 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 1, i32 2, i32 0
  store i16 %456, i16* %474, align 4
  %475 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 1, i32 2, i32 1
  store i16 %462, i16* %475, align 2
  %476 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 2
  %477 = bitcast %"struct.(anonymous namespace)::Mask3DVertex"* %476 to i64*
  store i64 %448, i64* %477, align 4
  %478 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 2, i32 0, i32 2
  %479 = bitcast float* %478 to i32*
  store i32 %449, i32* %479, align 4
  %480 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 2, i32 1
  store i32 %4, i32* %480, align 4
  %481 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 2, i32 2, i32 0
  store i16 %460, i16* %481, align 4
  %482 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 2, i32 2, i32 1
  store i16 %458, i16* %482, align 2
  %483 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 3
  %484 = bitcast %"struct.(anonymous namespace)::Mask3DVertex"* %483 to i64*
  store i64 %450, i64* %484, align 4
  %485 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 3, i32 0, i32 2
  %486 = bitcast float* %485 to i32*
  store i32 %451, i32* %486, align 4
  %487 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 3, i32 1
  store i32 %4, i32* %487, align 4
  %488 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 3, i32 2, i32 0
  store i16 %460, i16* %488, align 4
  %489 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 3, i32 2, i32 1
  store i16 %462, i16* %489, align 2
  %490 = add nuw i64 %417, 1
  %491 = icmp eq i64 %490, %371
  br i1 %491, label %492, label %416

492:                                              ; preds = %416, %292, %177, %81, %366, %242, %143, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_121TransformedMaskSubRun12vertexStrideERK8SkMatrix(%"class.(anonymous namespace)::TransformedMaskSubRun"* nocapture readonly, %class.SkMatrix* dereferenceable(40)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %31 [
    i32 0, label %5
    i32 2, label %18
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 192
  %9 = icmp eq i32 %8, 128
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %1) #18
  %12 = zext i8 %11 to i32
  store i32 %12, i32* %6, align 4
  br label %13

13:                                               ; preds = %5, %10
  %14 = phi i32 [ %12, %10 ], [ %7, %5 ]
  %15 = and i32 %14, 8
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, i64 16, i64 20
  br label %31

18:                                               ; preds = %2
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 192
  %22 = icmp eq i32 %21, 128
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %1) #18
  %25 = zext i8 %24 to i32
  store i32 %25, i32* %19, align 4
  br label %26

26:                                               ; preds = %18, %23
  %27 = phi i32 [ %25, %23 ], [ %20, %18 ]
  %28 = and i32 %27, 8
  %29 = icmp eq i32 %28, 0
  %30 = select i1 %29, i64 12, i64 16
  br label %31

31:                                               ; preds = %2, %26, %13
  %32 = phi i64 [ %30, %26 ], [ %17, %13 ], [ 16, %2 ]
  ret i64 %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_121TransformedMaskSubRun10glyphCountEv(%"class.(anonymous namespace)::TransformedMaskSubRun"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 0, i32 5, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn16_N12_GLOBAL__N_121TransformedMaskSubRunD1Ev(%"class.(anonymous namespace)::TransformedMaskSubRun"*) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 -1, i32 6, i32 4, i32 1
  %3 = bitcast [4 x i32]* %2 to %"class.(anonymous namespace)::TransformedMaskSubRun"*
  tail call void @_ZN12_GLOBAL__N_121TransformedMaskSubRunD2Ev(%"class.(anonymous namespace)::TransformedMaskSubRun"* %3) #18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn16_N12_GLOBAL__N_121TransformedMaskSubRunD0Ev(%"class.(anonymous namespace)::TransformedMaskSubRun"*) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 -1, i32 6, i32 4, i32 1
  %3 = bitcast [4 x i32]* %2 to %"class.(anonymous namespace)::TransformedMaskSubRun"*
  tail call void @_ZN12_GLOBAL__N_121TransformedMaskSubRunD2Ev(%"class.(anonymous namespace)::TransformedMaskSubRun"* %3) #18
  %4 = bitcast [4 x i32]* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZThn16_NK12_GLOBAL__N_121TransformedMaskSubRun12vertexStrideERK8SkMatrix(%"class.(anonymous namespace)::TransformedMaskSubRun"* nocapture readonly, %class.SkMatrix* dereferenceable(40)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 -1, i32 6, i32 4, i32 1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 1, i64 2
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %32 [
    i32 0, label %6
    i32 2, label %19
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 192
  %10 = icmp eq i32 %9, 128
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %1) #18
  %13 = zext i8 %12 to i32
  store i32 %13, i32* %7, align 4
  br label %14

14:                                               ; preds = %11, %6
  %15 = phi i32 [ %13, %11 ], [ %8, %6 ]
  %16 = and i32 %15, 8
  %17 = icmp eq i32 %16, 0
  %18 = select i1 %17, i64 16, i64 20
  br label %32

19:                                               ; preds = %2
  %20 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 192
  %23 = icmp eq i32 %22, 128
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %1) #18
  %26 = zext i8 %25 to i32
  store i32 %26, i32* %20, align 4
  br label %27

27:                                               ; preds = %24, %19
  %28 = phi i32 [ %26, %24 ], [ %21, %19 ]
  %29 = and i32 %28, 8
  %30 = icmp eq i32 %29, 0
  %31 = select i1 %30, i64 12, i64 16
  br label %32

32:                                               ; preds = %2, %14, %27
  %33 = phi i64 [ %31, %27 ], [ %18, %14 ], [ 16, %2 ]
  ret i64 %33
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZThn16_NK12_GLOBAL__N_121TransformedMaskSubRun10glyphCountEv(%"class.(anonymous namespace)::TransformedMaskSubRun"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 -1, i32 6, i32 4, i32 1
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* %2, i64 4
  %4 = bitcast [4 x i32]* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal { %class.GrClip*, %class.GrOp* } @_ZThn16_NK12_GLOBAL__N_121TransformedMaskSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE(%"class.(anonymous namespace)::TransformedMaskSubRun"*, %class.GrClip*, %class.SkMatrixProvider* dereferenceable(112), %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.GrSurfaceDrawContext*, i64) unnamed_addr #4 align 2 {
  %8 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 -1, i32 6, i32 4, i32 1
  %9 = bitcast [4 x i32]* %8 to %"class.(anonymous namespace)::TransformedMaskSubRun"*
  %10 = tail call { %class.GrClip*, %class.GrOp* } @_ZNK12_GLOBAL__N_121TransformedMaskSubRun15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE(%"class.(anonymous namespace)::TransformedMaskSubRun"* %9, %class.GrClip* %1, %class.SkMatrixProvider* dereferenceable(112) %2, %class.SkGlyphRunList* dereferenceable(48) %3, %class.SkPaint* dereferenceable(72) %4, %class.GrSurfaceDrawContext* %5, i64 %6)
  ret { %class.GrClip*, %class.GrOp* } %10
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn16_NK12_GLOBAL__N_121TransformedMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRect(%"class.(anonymous namespace)::TransformedMaskSubRun"*, i8*, i32, i32, i32, %class.SkMatrix* dereferenceable(40), %struct.SkIRect* nocapture readnone byval(%struct.SkIRect) align 8) unnamed_addr #4 align 2 {
  %8 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 -1, i32 6, i32 4, i32 1
  %9 = bitcast [4 x i32]* %8 to %"class.(anonymous namespace)::TransformedMaskSubRun"*
  tail call void @_ZNK12_GLOBAL__N_121TransformedMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRect(%"class.(anonymous namespace)::TransformedMaskSubRun"* %9, i8* %1, i32 %2, i32 %3, i32 %4, %class.SkMatrix* dereferenceable(40) %5, %struct.SkIRect* nonnull byval(%struct.SkIRect) align 8 %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn16_N12_GLOBAL__N_121TransformedMaskSubRun34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache(%"class.(anonymous namespace)::TransformedMaskSubRun"*, %class.GrStrikeCache*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 -1, i32 6, i32 4, i32 1
  %4 = bitcast [4 x i32]* %3 to %"class.(anonymous namespace)::TransformedMaskSubRun"*
  tail call void @_ZN12_GLOBAL__N_121TransformedMaskSubRun34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache(%"class.(anonymous namespace)::TransformedMaskSubRun"* %4, %class.GrStrikeCache* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZThn16_NK12_GLOBAL__N_121TransformedMaskSubRun15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::TransformedMaskSubRun"*, i32, i32, %"class.GrMeshDrawOp::Target"*) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRun", %"class.(anonymous namespace)::TransformedMaskSubRun"* %0, i64 -1, i32 6, i32 4, i32 1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 4, i64 2
  %7 = bitcast i32* %6 to %"class.(anonymous namespace)::GlyphVector"*
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 1, i64 2
  %9 = load i32, i32* %8, align 8
  %10 = tail call fastcc i64 @_ZN12_GLOBAL__N_111GlyphVector15regenerateAtlasEii12GrMaskFormatiPN12GrMeshDrawOp6TargetEb(%"class.(anonymous namespace)::GlyphVector"* %7, i32 %1, i32 %2, i32 %9, i32 1, %"class.GrMeshDrawOp::Target"* %3, i1 zeroext true) #18
  ret i64 %10
}

declare void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix*, %struct.SkPoint3*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare i8* @_ZN17GrSubRunAllocator12alignedBytesEii(%class.GrSubRunAllocator*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_123DirectMaskSubRunNoCacheD2Ev(%"class.(anonymous namespace)::DirectMaskSubRunNoCache"*) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_123DirectMaskSubRunNoCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5, i32 4, i32 0, i32 0, i32 0, i64 40
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5, i32 4, i32 0, i32 0, i32 0, i64 32
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #18
  br label %12

12:                                               ; preds = %8, %1
  %13 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5, i32 2, i32 0
  %14 = load %class.GrTextStrike*, %class.GrTextStrike** %13, align 8
  %15 = icmp eq %class.GrTextStrike* %14, null
  br i1 %15, label %34, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0
  %18 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %34

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %17, i64 38
  %23 = bitcast %class.SkNVRefCnt.302* %22 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %23) #18
  %24 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %17, i64 6
  %25 = bitcast %class.SkNVRefCnt.302* %24 to %class.SkAutoDescriptor*
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %25) #18
  %26 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %17, i64 4
  %27 = bitcast %class.SkNVRefCnt.302* %26 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %28 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %27, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %27, align 8
  %29 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %21
  %31 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %28 to i8*
  tail call void @_ZdaPv(i8* %31) #20
  br label %32

32:                                               ; preds = %30, %21
  %33 = bitcast %class.GrTextStrike* %14 to i8*
  tail call void @_ZdlPv(i8* %33) #20
  br label %34

34:                                               ; preds = %12, %16, %32
  %35 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5, i32 0, i32 3, i32 0
  %36 = load %class.SkTypeface*, %class.SkTypeface** %35, align 8
  %37 = icmp eq %class.SkTypeface* %36, null
  br i1 %37, label %48, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %36, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = bitcast %class.SkTypeface* %36 to %class.SkRefCntBase*
  %44 = bitcast %class.SkTypeface* %36 to void (%class.SkRefCntBase*)***
  %45 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, i64 2
  %47 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, align 8
  tail call void %47(%class.SkRefCntBase* nonnull %43) #18
  br label %48

48:                                               ; preds = %42, %38, %34
  %49 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5, i32 0, i32 2, i32 0
  %50 = load %class.SkPathEffect*, %class.SkPathEffect** %49, align 8
  %51 = icmp eq %class.SkPathEffect* %50, null
  br i1 %51, label %62, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %50, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %62

56:                                               ; preds = %52
  %57 = bitcast %class.SkPathEffect* %50 to %class.SkRefCntBase*
  %58 = bitcast %class.SkPathEffect* %50 to void (%class.SkRefCntBase*)***
  %59 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, i64 2
  %61 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, align 8
  tail call void %61(%class.SkRefCntBase* nonnull %57) #18
  br label %62

62:                                               ; preds = %56, %52, %48
  %63 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %64 = load %class.SkMaskFilter*, %class.SkMaskFilter** %63, align 8
  %65 = icmp eq %class.SkMaskFilter* %64, null
  br i1 %65, label %76, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %64, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %76

70:                                               ; preds = %66
  %71 = bitcast %class.SkMaskFilter* %64 to %class.SkRefCntBase*
  %72 = bitcast %class.SkMaskFilter* %64 to void (%class.SkRefCntBase*)***
  %73 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %72, align 8
  %74 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, i64 2
  %75 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, align 8
  tail call void %75(%class.SkRefCntBase* nonnull %71) #18
  br label %76

76:                                               ; preds = %62, %66, %70
  %77 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %77) #18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_123DirectMaskSubRunNoCacheD0Ev(%"class.(anonymous namespace)::DirectMaskSubRunNoCache"*) unnamed_addr #12 align 2 {
  tail call void @_ZN12_GLOBAL__N_123DirectMaskSubRunNoCacheD2Ev(%"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0) #18
  %2 = bitcast %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_123DirectMaskSubRunNoCache12vertexStrideERK8SkMatrix(%"class.(anonymous namespace)::DirectMaskSubRunNoCache"* nocapture readonly, %class.SkMatrix* nocapture readnone dereferenceable(40)) unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  %6 = select i1 %5, i64 12, i64 16
  ret i64 %6
}

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_123DirectMaskSubRunNoCache10glyphCountEv(%"class.(anonymous namespace)::DirectMaskSubRunNoCache"* nocapture readonly) unnamed_addr #16 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal { %class.GrClip*, %class.GrOp* } @_ZNK12_GLOBAL__N_123DirectMaskSubRunNoCache15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE(%"class.(anonymous namespace)::DirectMaskSubRunNoCache"*, %class.GrClip*, %class.SkMatrixProvider* dereferenceable(112), %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.GrSurfaceDrawContext*, i64) unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::tuple.333", align 4
  %9 = alloca %class.GrPaint, align 8
  %10 = ptrtoint %class.GrClip* %1 to i64
  %11 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %2, i64 0, i32 2
  %12 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %3, i64 0, i32 3
  %13 = bitcast %struct.SkPoint* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %15, align 8
  %17 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %16, i64 0, i32 6
  %18 = bitcast %struct.SkISize* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = sitofp i32 %20 to float
  %22 = lshr i64 %19, 32
  %23 = trunc i64 %22 to i32
  %24 = sitofp i32 %23 to float
  %25 = insertelement <2 x float> undef, float %21, i32 0
  %26 = insertelement <2 x float> %25, float %24, i32 1
  %27 = bitcast %"class.std::__1::tuple.333"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %27) #18
  %28 = getelementptr inbounds %"class.std::__1::tuple.333", %"class.std::__1::tuple.333"* %8, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 2
  %30 = bitcast %struct.SkRect* %29 to <2 x float>*
  %31 = bitcast %"class.std::__1::tuple.333"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %31, i8 -86, i64 20, i1 false)
  %32 = load <2 x float>, <2 x float>* %30, align 4
  %33 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 2, i32 2
  %34 = bitcast float* %33 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 4
  call fastcc void @_ZN12_GLOBAL__N_112_GLOBAL__N_114calculate_clipEPK6GrClip6SkRectS4_(%"class.std::__1::tuple.333"* nonnull sret %8, %class.GrClip* %1, <2 x float> zeroinitializer, <2 x float> %26, <2 x float> %32, <2 x float> %35)
  %36 = getelementptr inbounds %"class.std::__1::tuple.333", %"class.std::__1::tuple.333"* %8, i64 0, i32 0, i32 1, i32 0
  %37 = load i32, i32* %28, align 4
  switch i32 %37, label %39 [
    i32 0, label %118
    i32 1, label %38
    i32 3, label %38
  ]

38:                                               ; preds = %7, %7
  br label %39

39:                                               ; preds = %7, %38
  %40 = phi i64 [ %10, %7 ], [ 0, %38 ]
  %41 = bitcast %class.GrPaint* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %41) #18
  %42 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %9, i64 0, i32 3
  %45 = bitcast %class.GrPaint* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 28, i1 false)
  %46 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %9, i64 0, i32 6, i64 0
  %47 = bitcast i8* %46 to i32*
  store i32 -1431655766, i32* %47, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #18
  store i8 1, i8* %44, align 8
  %48 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %9, i64 0, i32 5
  %49 = bitcast %struct.SkRGBA4f.337* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 bitcast (%struct.SkRGBA4f.337* @_ZL17SK_PMColor4fWHITE to i8*), i64 16, i1 false) #18
  %50 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 0, i32 1
  %53 = load %class.GrRecordingContext*, %class.GrRecordingContext** %52, align 8
  %54 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 0, i32 3
  %55 = icmp eq i32 %51, 2
  br i1 %55, label %56, label %58

56:                                               ; preds = %39
  %57 = call zeroext i1 @_Z25SkPaintToGrPaintWithBlendP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProvider11SkBlendModeP7GrPaint(%class.GrRecordingContext* %53, %class.GrColorInfo* dereferenceable(24) %54, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrixProvider* dereferenceable(112) %2, i32 2, %class.GrPaint* nonnull %9) #18
  br label %65

58:                                               ; preds = %39
  %59 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %9, i64 0, i32 5, i32 2
  %60 = call zeroext i1 @_Z16SkPaintToGrPaintP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderP7GrPaint(%class.GrRecordingContext* %53, %class.GrColorInfo* dereferenceable(24) %54, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrixProvider* dereferenceable(112) %2, %class.GrPaint* nonnull %9) #18
  %61 = bitcast %struct.SkRGBA4f.337* %48 to <2 x float>*
  %62 = load <2 x float>, <2 x float>* %61, align 4
  %63 = bitcast float* %59 to <2 x float>*
  %64 = load <2 x float>, <2 x float>* %63, align 4
  br label %65

65:                                               ; preds = %58, %56
  %66 = phi <2 x float> [ <float 1.000000e+00, float 1.000000e+00>, %56 ], [ %62, %58 ]
  %67 = phi <2 x float> [ <float 1.000000e+00, float 1.000000e+00>, %56 ], [ %64, %58 ]
  %68 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 4, i64 0
  %69 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 0
  %70 = bitcast %struct.SkIRect* %36 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 4
  %72 = bitcast i8* %68 to %class.GrAtlasSubRun**
  store %class.GrAtlasSubRun* %69, %class.GrAtlasSubRun** %72, align 8
  %73 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 4, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 4, i64 16
  %76 = bitcast i8* %75 to i64*
  store i64 %6, i64* %76, align 8
  %77 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 4, i64 24
  %78 = bitcast %class.SkMatrix* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 4 %78, i64 40, i1 false) #18
  %79 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 4, i64 64
  %80 = bitcast i8* %79 to i64*
  store i64 %14, i64* %80, align 8
  %81 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 4, i64 72
  %82 = bitcast i8* %81 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %82, align 8
  %83 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 4, i64 88
  %84 = bitcast i8* %83 to <2 x float>*
  store <2 x float> %66, <2 x float>* %84, align 8
  %85 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 4, i64 96
  %86 = bitcast i8* %85 to <2 x float>*
  store <2 x float> %67, <2 x float>* %86, align 8
  %87 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 4, i64 104
  %88 = bitcast i8* %87 to %"struct.GrAtlasTextOp::Geometry"**
  store %"struct.GrAtlasTextOp::Geometry"* null, %"struct.GrAtlasTextOp::Geometry"** %88, align 8
  %89 = load i32, i32* %50, align 8
  %90 = icmp ult i32 %89, 3
  br i1 %90, label %92, label %91

91:                                               ; preds = %65
  call void @llvm.trap() #18
  unreachable

92:                                               ; preds = %65
  %93 = bitcast i8* %68 to %"struct.GrAtlasTextOp::Geometry"*
  %94 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5, i32 1, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = trunc i64 %95 to i32
  %97 = call i8* @_ZN13GrAtlasTextOpnwEm(i64 112) #18
  %98 = bitcast i8* %97 to %class.GrAtlasTextOp*
  %99 = load <2 x float>, <2 x float>* %30, align 4
  %100 = load <2 x float>, <2 x float>* %34, align 4
  call void @_ZN13GrAtlasTextOpC1ENS_8MaskTypeEbi6SkRectPNS_8GeometryEO7GrPaint(%class.GrAtlasTextOp* %98, i32 %89, i1 zeroext false, i32 %96, <2 x float> %99, <2 x float> %100, %"struct.GrAtlasTextOp::Geometry"* %93, %class.GrPaint* nonnull dereferenceable(48) %9) #18
  %101 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %43, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %43, align 8
  %102 = icmp eq %class.GrFragmentProcessor* %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %92
  %104 = bitcast %class.GrFragmentProcessor* %101 to void (%class.GrFragmentProcessor*)***
  %105 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %104, align 8
  %106 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %105, i64 1
  %107 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %106, align 8
  call void %107(%class.GrFragmentProcessor* nonnull %101) #18
  br label %108

108:                                              ; preds = %103, %92
  %109 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %42, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %42, align 8
  %110 = icmp eq %class.GrFragmentProcessor* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %108
  %112 = bitcast %class.GrFragmentProcessor* %109 to void (%class.GrFragmentProcessor*)***
  %113 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %112, align 8
  %114 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %113, i64 1
  %115 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %114, align 8
  call void %115(%class.GrFragmentProcessor* nonnull %109) #18
  br label %116

116:                                              ; preds = %111, %108
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %41) #18
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %27) #18
  %117 = bitcast i8* %97 to %class.GrOp*
  br label %125

118:                                              ; preds = %7
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %27) #18
  %119 = icmp eq i64 %6, 0
  br i1 %119, label %125, label %120

120:                                              ; preds = %118
  %121 = inttoptr i64 %6 to %class.GrAtlasSubRun*
  %122 = inttoptr i64 %6 to void (%class.GrAtlasSubRun*)***
  %123 = load void (%class.GrAtlasSubRun*)**, void (%class.GrAtlasSubRun*)*** %122, align 8
  %124 = load void (%class.GrAtlasSubRun*)*, void (%class.GrAtlasSubRun*)** %123, align 8
  tail call void %124(%class.GrAtlasSubRun* nonnull %121) #18
  br label %125

125:                                              ; preds = %116, %118, %120
  %126 = phi i64 [ %40, %116 ], [ 0, %118 ], [ 0, %120 ]
  %127 = phi %class.GrOp* [ %117, %116 ], [ null, %118 ], [ null, %120 ]
  %128 = inttoptr i64 %126 to %class.GrClip*
  %129 = insertvalue { %class.GrClip*, %class.GrOp* } undef, %class.GrClip* %128, 0
  %130 = insertvalue { %class.GrClip*, %class.GrOp* } %129, %class.GrOp* %127, 1
  ret { %class.GrClip*, %class.GrOp* } %130
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_123DirectMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRect(%"class.(anonymous namespace)::DirectMaskSubRunNoCache"*, i8*, i32, i32, i32, %class.SkMatrix* nocapture readnone dereferenceable(40), %struct.SkIRect* byval(%struct.SkIRect) align 8) unnamed_addr #0 align 2 {
  %8 = alloca %class.SkZip.401, align 8
  %9 = alloca %class.SkZip.407, align 8
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  %16 = sub nsw i64 %12, %15
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = sub nsw i64 %19, %22
  %24 = icmp slt i64 %16, 1
  %25 = icmp slt i64 %23, 1
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %31

27:                                               ; preds = %7
  %28 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 2
  br i1 %30, label %105, label %39

31:                                               ; preds = %7
  %32 = or i64 %23, %16
  %33 = add nsw i64 %32, 2147483648
  %34 = icmp ugt i64 %33, 4294967295
  %35 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp ne i32 %36, 2
  br i1 %34, label %38, label %176

38:                                               ; preds = %31
  br i1 %37, label %39, label %105

39:                                               ; preds = %27, %38
  %40 = bitcast i8* %1 to [4 x %"struct.(anonymous namespace)::Mask2DVertex"]*
  %41 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5, i32 1, i32 0
  %42 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %41, align 8, !noalias !127
  %43 = sext i32 %2 to i64
  %44 = sext i32 %3 to i64
  %45 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %42, i64 %43, i32 0
  %46 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 3, i32 0
  %47 = load %"struct.skvx::Vec"*, %"struct.skvx::Vec"** %46, align 8, !noalias !127
  %48 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %47, i64 %43
  %49 = icmp eq i32 %3, 0
  br i1 %49, label %202, label %50

50:                                               ; preds = %39, %50
  %51 = phi i64 [ %103, %50 ], [ 0, %39 ]
  %52 = getelementptr inbounds %class.GrGlyph*, %class.GrGlyph** %45, i64 %51
  %53 = load %class.GrGlyph*, %class.GrGlyph** %52, align 8
  %54 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %53, i64 0, i32 1, i32 1
  %55 = bitcast %"struct.std::__1::array.294"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = trunc i64 %56 to i16
  %58 = lshr i64 %56, 16
  %59 = trunc i64 %58 to i16
  %60 = lshr i64 %56, 32
  %61 = trunc i64 %60 to i16
  %62 = lshr i64 %56, 48
  %63 = trunc i64 %62 to i16
  %64 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %48, i64 %51, i32 0, i32 0
  %65 = load i16, i16* %64, align 2
  %66 = sitofp i16 %65 to float
  %67 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %48, i64 %51, i32 1, i32 0
  %68 = load i16, i16* %67, align 2
  %69 = sitofp i16 %68 to float
  %70 = trunc i64 %60 to i32
  %71 = and i32 %70, 65535
  %72 = trunc i64 %56 to i32
  %73 = and i32 %72, 65535
  %74 = sub nsw i32 %71, %73
  %75 = sitofp i32 %74 to float
  %76 = fadd float %66, %75
  %77 = trunc i64 %62 to i32
  %78 = trunc i64 %58 to i32
  %79 = and i32 %78, 65535
  %80 = sub nsw i32 %77, %79
  %81 = sitofp i32 %80 to float
  %82 = fadd float %69, %81
  %83 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 0, i32 0, i32 0
  store float %66, float* %83, align 4
  %84 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 0, i32 0, i32 1
  store float %69, float* %84, align 4
  %85 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 0, i32 1
  store i32 %4, i32* %85, align 4
  %86 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 0, i32 2, i32 0
  store i16 %57, i16* %86, align 4
  %87 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 0, i32 2, i32 1
  store i16 %59, i16* %87, align 2
  %88 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 1, i32 0, i32 0
  store float %66, float* %88, align 4
  %89 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 1, i32 0, i32 1
  store float %82, float* %89, align 4
  %90 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 1, i32 1
  store i32 %4, i32* %90, align 4
  %91 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 1, i32 2, i32 0
  store i16 %57, i16* %91, align 4
  %92 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 1, i32 2, i32 1
  store i16 %63, i16* %92, align 2
  %93 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 2, i32 0, i32 0
  store float %76, float* %93, align 4
  %94 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 2, i32 0, i32 1
  store float %69, float* %94, align 4
  %95 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 2, i32 1
  store i32 %4, i32* %95, align 4
  %96 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 2, i32 2, i32 0
  store i16 %61, i16* %96, align 4
  %97 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 2, i32 2, i32 1
  store i16 %59, i16* %97, align 2
  %98 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 3, i32 0, i32 0
  store float %76, float* %98, align 4
  %99 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 3, i32 0, i32 1
  store float %82, float* %99, align 4
  %100 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 3, i32 1
  store i32 %4, i32* %100, align 4
  %101 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 3, i32 2, i32 0
  store i16 %61, i16* %101, align 4
  %102 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %40, i64 %51, i64 3, i32 2, i32 1
  store i16 %63, i16* %102, align 2
  %103 = add nuw i64 %51, 1
  %104 = icmp eq i64 %103, %44
  br i1 %104, label %202, label %50

105:                                              ; preds = %27, %38
  %106 = bitcast i8* %1 to [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]*
  %107 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5, i32 1, i32 0
  %108 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %107, align 8, !noalias !130
  %109 = sext i32 %2 to i64
  %110 = sext i32 %3 to i64
  %111 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %108, i64 %109, i32 0
  %112 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 3, i32 0
  %113 = load %"struct.skvx::Vec"*, %"struct.skvx::Vec"** %112, align 8, !noalias !130
  %114 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %113, i64 %109
  %115 = icmp eq i32 %3, 0
  br i1 %115, label %202, label %116

116:                                              ; preds = %105, %116
  %117 = phi i64 [ %174, %116 ], [ 0, %105 ]
  %118 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %106, i64 %117
  %119 = getelementptr inbounds %class.GrGlyph*, %class.GrGlyph** %111, i64 %117
  %120 = load %class.GrGlyph*, %class.GrGlyph** %119, align 8
  %121 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %120, i64 0, i32 1, i32 1
  %122 = bitcast %"struct.std::__1::array.294"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = trunc i64 %123 to i16
  %125 = lshr i64 %123, 16
  %126 = trunc i64 %125 to i16
  %127 = lshr i64 %123, 32
  %128 = trunc i64 %127 to i16
  %129 = lshr i64 %123, 48
  %130 = trunc i64 %129 to i16
  %131 = sub i16 %128, %124
  %132 = sub i16 %130, %126
  %133 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %114, i64 %117, i32 0, i32 0
  %134 = load i16, i16* %133, align 2
  %135 = sitofp i16 %134 to float
  %136 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %114, i64 %117, i32 1, i32 0
  %137 = load i16, i16* %136, align 2
  %138 = sitofp i16 %137 to float
  %139 = uitofp i16 %131 to float
  %140 = fadd float %135, %139
  %141 = uitofp i16 %132 to float
  %142 = fadd float %138, %141
  %143 = insertelement <2 x float> undef, float %135, i32 0
  %144 = insertelement <2 x float> %143, float %138, i32 1
  %145 = insertelement <2 x float> undef, float %140, i32 0
  %146 = insertelement <2 x float> %145, float %142, i32 1
  %147 = trunc i64 %123 to i32
  %148 = and i32 %147, -65536
  %149 = and i32 %147, 65535
  %150 = bitcast [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %118 to <2 x float>*
  store <2 x float> %144, <2 x float>* %150, align 4
  %151 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %106, i64 %117, i64 0, i32 1
  %152 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %151 to i32*
  store i32 %147, i32* %152, align 4
  %153 = insertelement <2 x float> %144, float %142, i32 1
  %154 = shl nuw nsw i64 %129, 16
  %155 = trunc i64 %154 to i32
  %156 = or i32 %149, %155
  %157 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %106, i64 %117, i64 1
  %158 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %157 to <2 x float>*
  store <2 x float> %153, <2 x float>* %158, align 4
  %159 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %106, i64 %117, i64 1, i32 1
  %160 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %159 to i32*
  store i32 %156, i32* %160, align 4
  %161 = insertelement <2 x float> %146, float %138, i32 1
  %162 = trunc i64 %127 to i32
  %163 = and i32 %162, 65535
  %164 = or i32 %163, %148
  %165 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %106, i64 %117, i64 2
  %166 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %165 to <2 x float>*
  store <2 x float> %161, <2 x float>* %166, align 4
  %167 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %106, i64 %117, i64 2, i32 1
  %168 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %167 to i32*
  store i32 %164, i32* %168, align 4
  %169 = or i32 %163, %155
  %170 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %106, i64 %117, i64 3
  %171 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %170 to <2 x float>*
  store <2 x float> %146, <2 x float>* %171, align 4
  %172 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %106, i64 %117, i64 3, i32 1
  %173 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %172 to i32*
  store i32 %169, i32* %173, align 4
  %174 = add nuw i64 %117, 1
  %175 = icmp eq i64 %174, %110
  br i1 %175, label %202, label %116

176:                                              ; preds = %31
  %177 = ptrtoint i8* %1 to i64
  %178 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5, i32 1, i32 0
  %179 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %178, align 8
  %180 = sext i32 %2 to i64
  %181 = sext i32 %3 to i64
  %182 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %179, i64 %180, i32 0
  %183 = ptrtoint %class.GrGlyph** %182 to i64
  %184 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 3, i32 0
  %185 = load %"struct.skvx::Vec"*, %"struct.skvx::Vec"** %184, align 8
  %186 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %185, i64 %180
  %187 = ptrtoint %"struct.skvx::Vec"* %186 to i64
  br i1 %37, label %188, label %195

188:                                              ; preds = %176
  %189 = bitcast %class.SkZip.401* %8 to i64*
  store i64 %177, i64* %189, align 8, !alias.scope !133
  %190 = getelementptr inbounds %class.SkZip.401, %class.SkZip.401* %8, i64 0, i32 0, i32 0, i32 1
  %191 = bitcast %"class.std::__1::__tuple_leaf.405"* %190 to i64*
  store i64 %183, i64* %191, align 8, !alias.scope !133
  %192 = getelementptr inbounds %class.SkZip.401, %class.SkZip.401* %8, i64 0, i32 0, i32 0, i32 2
  %193 = bitcast %"class.std::__1::__tuple_leaf.406"* %192 to i64*
  store i64 %187, i64* %193, align 8, !alias.scope !133
  %194 = getelementptr inbounds %class.SkZip.401, %class.SkZip.401* %8, i64 0, i32 1
  store i64 %181, i64* %194, align 8, !alias.scope !133
  call fastcc void @_ZN12_GLOBAL__N_121generalized_direct_2DIA4_NS_12Mask2DVertexEN4skvx3VecILi2EsEEEEv5SkZipIJT_PK7GrGlyphKT0_EEj8SkIPointP7SkIRect(%class.SkZip.401* nonnull byval(%class.SkZip.401) align 8 %8, i32 %4, i64 0, %struct.SkIRect* nonnull %6)
  br label %202

195:                                              ; preds = %176
  %196 = bitcast %class.SkZip.407* %9 to i64*
  store i64 %177, i64* %196, align 8, !alias.scope !140
  %197 = getelementptr inbounds %class.SkZip.407, %class.SkZip.407* %9, i64 0, i32 0, i32 0, i32 1
  %198 = bitcast %"class.std::__1::__tuple_leaf.405"* %197 to i64*
  store i64 %183, i64* %198, align 8, !alias.scope !140
  %199 = getelementptr inbounds %class.SkZip.407, %class.SkZip.407* %9, i64 0, i32 0, i32 0, i32 2
  %200 = bitcast %"class.std::__1::__tuple_leaf.406"* %199 to i64*
  store i64 %187, i64* %200, align 8, !alias.scope !140
  %201 = getelementptr inbounds %class.SkZip.407, %class.SkZip.407* %9, i64 0, i32 1
  store i64 %181, i64* %201, align 8, !alias.scope !140
  call fastcc void @_ZN12_GLOBAL__N_121generalized_direct_2DIA4_NS_12ARGB2DVertexEN4skvx3VecILi2EsEEEEv5SkZipIJT_PK7GrGlyphKT0_EEj8SkIPointP7SkIRect(%class.SkZip.407* nonnull byval(%class.SkZip.407) align 8 %9, i64 0, %struct.SkIRect* nonnull %6)
  br label %202

202:                                              ; preds = %50, %116, %105, %39, %188, %195
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_123DirectMaskSubRunNoCache34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache(%"class.(anonymous namespace)::DirectMaskSubRunNoCache"*, %class.GrStrikeCache*) unnamed_addr #4 align 2 {
  %3 = alloca %class.sk_sp.301, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5, i32 2
  %5 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %4, i64 0, i32 0
  %6 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %7 = icmp eq %class.GrTextStrike* %6, null
  br i1 %7, label %8, label %72

8:                                                ; preds = %2
  %9 = bitcast %class.sk_sp.301* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5, i32 0
  call void @_ZNK12SkStrikeSpec20findOrCreateGrStrikeEP13GrStrikeCache(%class.sk_sp.301* nonnull sret %3, %class.SkStrikeSpec* %10, %class.GrStrikeCache* %1) #18
  %11 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %3, i64 0, i32 0
  %12 = bitcast %class.sk_sp.301* %3 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.GrTextStrike* null, %class.GrTextStrike** %11, align 8
  %14 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %15 = bitcast %class.sk_sp.301* %4 to i64*
  store i64 %13, i64* %15, align 8
  %16 = icmp eq %class.GrTextStrike* %14, null
  br i1 %16, label %56, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0
  %19 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %35

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 38
  %24 = bitcast %class.SkNVRefCnt.302* %23 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %24) #18
  %25 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 6
  %26 = bitcast %class.SkNVRefCnt.302* %25 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %26) #18
  %27 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 4
  %28 = bitcast %class.SkNVRefCnt.302* %27 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %29 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  %30 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %22
  %32 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29 to i8*
  call void @_ZdaPv(i8* %32) #20
  br label %33

33:                                               ; preds = %31, %22
  %34 = bitcast %class.GrTextStrike* %14 to i8*
  call void @_ZdlPv(i8* %34) #20
  br label %35

35:                                               ; preds = %17, %33
  %36 = load %class.GrTextStrike*, %class.GrTextStrike** %11, align 8
  %37 = icmp eq %class.GrTextStrike* %36, null
  br i1 %37, label %56, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %36, i64 0, i32 0
  %40 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %56

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 38
  %45 = bitcast %class.SkNVRefCnt.302* %44 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %45) #18
  %46 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 6
  %47 = bitcast %class.SkNVRefCnt.302* %46 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %47) #18
  %48 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 4
  %49 = bitcast %class.SkNVRefCnt.302* %48 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %50 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %49, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %49, align 8
  %51 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %43
  %53 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %50 to i8*
  call void @_ZdaPv(i8* %53) #20
  br label %54

54:                                               ; preds = %52, %43
  %55 = bitcast %class.GrTextStrike* %36 to i8*
  call void @_ZdlPv(i8* %55) #20
  br label %56

56:                                               ; preds = %8, %35, %38, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  %57 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5, i32 1, i32 0
  %58 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %57, align 8
  %59 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5, i32 1, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %58, i64 %60
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %56, %63
  %64 = phi %"union.(anonymous namespace)::GlyphVector::Variant"* [ %70, %63 ], [ %58, %56 ]
  %65 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %66 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"* %64 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = call %class.GrGlyph* @_ZN12GrTextStrike8getGlyphE15SkPackedGlyphID(%class.GrTextStrike* %65, i32 %67) #18
  %69 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %64, i64 0, i32 0
  store %class.GrGlyph* %68, %class.GrGlyph** %69, align 8
  %70 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %64, i64 1
  %71 = icmp eq %"union.(anonymous namespace)::GlyphVector::Variant"* %70, %61
  br i1 %71, label %72, label %63

72:                                               ; preds = %63, %2, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_123DirectMaskSubRunNoCache15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::DirectMaskSubRunNoCache"*, i32, i32, %"class.GrMeshDrawOp::Target"*) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.(anonymous namespace)::DirectMaskSubRunNoCache", %"class.(anonymous namespace)::DirectMaskSubRunNoCache"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = tail call fastcc i64 @_ZN12_GLOBAL__N_111GlyphVector15regenerateAtlasEii12GrMaskFormatiPN12GrMeshDrawOp6TargetEb(%"class.(anonymous namespace)::GlyphVector"* %5, i32 %1, i32 %2, i32 %7, i32 0, %"class.GrMeshDrawOp::Target"* %3, i1 zeroext false)
  ret i64 %8
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @_ZZN12GrBagOfBytes16allocateBytesForIN12_GLOBAL__N_128TransformedMaskSubRunNoCache10VertexDataEEEPciENKUlvE_clEv() unnamed_addr #15 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #19
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_128TransformedMaskSubRunNoCacheD2Ev(%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"*) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_128TransformedMaskSubRunNoCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 4, i32 0, i32 0, i32 0, i64 40
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 4, i32 0, i32 0, i32 0, i64 32
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #18
  br label %12

12:                                               ; preds = %8, %1
  %13 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 2, i32 0
  %14 = load %class.GrTextStrike*, %class.GrTextStrike** %13, align 8
  %15 = icmp eq %class.GrTextStrike* %14, null
  br i1 %15, label %34, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0
  %18 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %34

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %17, i64 38
  %23 = bitcast %class.SkNVRefCnt.302* %22 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %23) #18
  %24 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %17, i64 6
  %25 = bitcast %class.SkNVRefCnt.302* %24 to %class.SkAutoDescriptor*
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %25) #18
  %26 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %17, i64 4
  %27 = bitcast %class.SkNVRefCnt.302* %26 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %28 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %27, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %27, align 8
  %29 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %21
  %31 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %28 to i8*
  tail call void @_ZdaPv(i8* %31) #20
  br label %32

32:                                               ; preds = %30, %21
  %33 = bitcast %class.GrTextStrike* %14 to i8*
  tail call void @_ZdlPv(i8* %33) #20
  br label %34

34:                                               ; preds = %12, %16, %32
  %35 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 0, i32 3, i32 0
  %36 = load %class.SkTypeface*, %class.SkTypeface** %35, align 8
  %37 = icmp eq %class.SkTypeface* %36, null
  br i1 %37, label %48, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %36, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = bitcast %class.SkTypeface* %36 to %class.SkRefCntBase*
  %44 = bitcast %class.SkTypeface* %36 to void (%class.SkRefCntBase*)***
  %45 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, i64 2
  %47 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, align 8
  tail call void %47(%class.SkRefCntBase* nonnull %43) #18
  br label %48

48:                                               ; preds = %42, %38, %34
  %49 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 0, i32 2, i32 0
  %50 = load %class.SkPathEffect*, %class.SkPathEffect** %49, align 8
  %51 = icmp eq %class.SkPathEffect* %50, null
  br i1 %51, label %62, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %50, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %62

56:                                               ; preds = %52
  %57 = bitcast %class.SkPathEffect* %50 to %class.SkRefCntBase*
  %58 = bitcast %class.SkPathEffect* %50 to void (%class.SkRefCntBase*)***
  %59 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, i64 2
  %61 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, align 8
  tail call void %61(%class.SkRefCntBase* nonnull %57) #18
  br label %62

62:                                               ; preds = %56, %52, %48
  %63 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %64 = load %class.SkMaskFilter*, %class.SkMaskFilter** %63, align 8
  %65 = icmp eq %class.SkMaskFilter* %64, null
  br i1 %65, label %76, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %64, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %76

70:                                               ; preds = %66
  %71 = bitcast %class.SkMaskFilter* %64 to %class.SkRefCntBase*
  %72 = bitcast %class.SkMaskFilter* %64 to void (%class.SkRefCntBase*)***
  %73 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %72, align 8
  %74 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, i64 2
  %75 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, align 8
  tail call void %75(%class.SkRefCntBase* nonnull %71) #18
  br label %76

76:                                               ; preds = %62, %66, %70
  %77 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %77) #18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_128TransformedMaskSubRunNoCacheD0Ev(%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"*) unnamed_addr #12 align 2 {
  tail call void @_ZN12_GLOBAL__N_128TransformedMaskSubRunNoCacheD2Ev(%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0) #18
  %2 = bitcast %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache12vertexStrideERK8SkMatrix(%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* nocapture readonly, %class.SkMatrix* dereferenceable(40)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %31 [
    i32 0, label %5
    i32 2, label %18
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 192
  %9 = icmp eq i32 %8, 128
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %1) #18
  %12 = zext i8 %11 to i32
  store i32 %12, i32* %6, align 4
  br label %13

13:                                               ; preds = %5, %10
  %14 = phi i32 [ %12, %10 ], [ %7, %5 ]
  %15 = and i32 %14, 8
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, i64 16, i64 20
  br label %31

18:                                               ; preds = %2
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 192
  %22 = icmp eq i32 %21, 128
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %1) #18
  %25 = zext i8 %24 to i32
  store i32 %25, i32* %19, align 4
  br label %26

26:                                               ; preds = %18, %23
  %27 = phi i32 [ %25, %23 ], [ %20, %18 ]
  %28 = and i32 %27, 8
  %29 = icmp eq i32 %28, 0
  %30 = select i1 %29, i64 12, i64 16
  br label %31

31:                                               ; preds = %2, %26, %13
  %32 = phi i64 [ %30, %26 ], [ %17, %13 ], [ 16, %2 ]
  ret i64 %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache10glyphCountEv(%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 3, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal { %class.GrClip*, %class.GrOp* } @_ZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE(%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"*, %class.GrClip*, %class.SkMatrixProvider* dereferenceable(112), %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.GrSurfaceDrawContext*, i64) unnamed_addr #0 align 2 {
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca <4 x float>, align 16
  %10 = bitcast <4 x float>* %9 to %struct.SkRect*
  %11 = alloca %class.GrPaint, align 8
  %12 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %3, i64 0, i32 3
  %13 = bitcast %struct.SkPoint* %12 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 8
  %15 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %2, i64 0, i32 2
  %16 = bitcast %class.GrPaint* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #18
  %17 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 3
  %20 = bitcast %class.GrPaint* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 28, i1 false)
  %21 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 6, i64 0
  %22 = bitcast i8* %21 to i32*
  store i32 -1431655766, i32* %22, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #18
  store i8 1, i8* %19, align 8
  %23 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 5
  %24 = bitcast %struct.SkRGBA4f.337* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 bitcast (%struct.SkRGBA4f.337* @_ZL17SK_PMColor4fWHITE to i8*), i64 16, i1 false) #18
  %25 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 0, i32 1
  %28 = load %class.GrRecordingContext*, %class.GrRecordingContext** %27, align 8
  %29 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 0, i32 3
  %30 = icmp eq i32 %26, 2
  br i1 %30, label %31, label %33

31:                                               ; preds = %7
  %32 = call zeroext i1 @_Z25SkPaintToGrPaintWithBlendP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProvider11SkBlendModeP7GrPaint(%class.GrRecordingContext* %28, %class.GrColorInfo* dereferenceable(24) %29, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrixProvider* dereferenceable(112) %2, i32 2, %class.GrPaint* nonnull %11) #18
  br label %40

33:                                               ; preds = %7
  %34 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 5, i32 2
  %35 = call zeroext i1 @_Z16SkPaintToGrPaintP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderP7GrPaint(%class.GrRecordingContext* %28, %class.GrColorInfo* dereferenceable(24) %29, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrixProvider* dereferenceable(112) %2, %class.GrPaint* nonnull %11) #18
  %36 = bitcast %struct.SkRGBA4f.337* %23 to <2 x float>*
  %37 = load <2 x float>, <2 x float>* %36, align 4
  %38 = bitcast float* %34 to <2 x float>*
  %39 = load <2 x float>, <2 x float>* %38, align 4
  br label %40

40:                                               ; preds = %33, %31
  %41 = phi <2 x float> [ <float 1.000000e+00, float 1.000000e+00>, %31 ], [ %37, %33 ]
  %42 = phi <2 x float> [ <float 1.000000e+00, float 1.000000e+00>, %31 ], [ %39, %33 ]
  %43 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 4, i64 0
  %44 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 0
  %45 = bitcast i8* %43 to %class.GrAtlasSubRun**
  store %class.GrAtlasSubRun* %44, %class.GrAtlasSubRun** %45, align 8
  %46 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 4, i64 8
  %47 = bitcast i8* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 4, i64 16
  %49 = bitcast i8* %48 to i64*
  store i64 %6, i64* %49, align 8
  %50 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 4, i64 24
  %51 = bitcast %class.SkMatrix* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 4 %51, i64 40, i1 false) #18
  %52 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 4, i64 64
  %53 = bitcast i8* %52 to <2 x float>*
  store <2 x float> %14, <2 x float>* %53, align 8
  %54 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 4, i64 72
  %55 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 4, i64 88
  %56 = bitcast i8* %55 to <2 x float>*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false)
  store <2 x float> %41, <2 x float>* %56, align 8
  %57 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 4, i64 96
  %58 = bitcast i8* %57 to <2 x float>*
  store <2 x float> %42, <2 x float>* %58, align 8
  %59 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 4, i64 104
  %60 = bitcast i8* %59 to %"struct.GrAtlasTextOp::Geometry"**
  store %"struct.GrAtlasTextOp::Geometry"* null, %"struct.GrAtlasTextOp::Geometry"** %60, align 8
  %61 = load i32, i32* %25, align 8
  %62 = icmp ult i32 %61, 3
  br i1 %62, label %64, label %63

63:                                               ; preds = %40
  call void @llvm.trap() #18
  unreachable

64:                                               ; preds = %40
  %65 = bitcast i8* %43 to %"struct.GrAtlasTextOp::Geometry"*
  %66 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 3, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = trunc i64 %67 to i32
  %69 = bitcast <4 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #18
  %70 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 2
  %71 = bitcast %struct.SkRect* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %69, i8* align 4 %71, i64 16, i1 false) #18
  %72 = shufflevector <2 x float> %14, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %73 = load <4 x float>, <4 x float>* %9, align 16
  %74 = fadd <4 x float> %72, %73
  store <4 x float> %74, <4 x float>* %9, align 16
  %75 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #18
  %76 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -1, i64 16, i1 false) #18
  %77 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %15, %struct.SkRect* nonnull %76, %struct.SkRect* nonnull dereferenceable(16) %10, i32 1) #18
  %78 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %79 = load <2 x float>, <2 x float>* %78, align 8
  %80 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %81 = load <2 x float>, <2 x float>* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #18
  %82 = call i8* @_ZN13GrAtlasTextOpnwEm(i64 112) #18
  %83 = bitcast i8* %82 to %class.GrAtlasTextOp*
  call void @_ZN13GrAtlasTextOpC1ENS_8MaskTypeEbi6SkRectPNS_8GeometryEO7GrPaint(%class.GrAtlasTextOp* %83, i32 %61, i1 zeroext true, i32 %68, <2 x float> %79, <2 x float> %81, %"struct.GrAtlasTextOp::Geometry"* %65, %class.GrPaint* nonnull dereferenceable(48) %11) #18
  %84 = bitcast i8* %82 to %class.GrOp*
  %85 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %86 = icmp eq %class.GrFragmentProcessor* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %64
  %88 = bitcast %class.GrFragmentProcessor* %85 to void (%class.GrFragmentProcessor*)***
  %89 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %89, i64 1
  %91 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %90, align 8
  call void %91(%class.GrFragmentProcessor* nonnull %85) #18
  br label %92

92:                                               ; preds = %87, %64
  %93 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %94 = icmp eq %class.GrFragmentProcessor* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %92
  %96 = bitcast %class.GrFragmentProcessor* %93 to void (%class.GrFragmentProcessor*)***
  %97 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %96, align 8
  %98 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %97, i64 1
  %99 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %98, align 8
  call void %99(%class.GrFragmentProcessor* nonnull %93) #18
  br label %100

100:                                              ; preds = %95, %92
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #18
  %101 = insertvalue { %class.GrClip*, %class.GrOp* } undef, %class.GrClip* %1, 0
  %102 = insertvalue { %class.GrClip*, %class.GrOp* } %101, %class.GrOp* %84, 1
  ret { %class.GrClip*, %class.GrOp* } %102
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRect(%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"*, i8*, i32, i32, i32, %class.SkMatrix* dereferenceable(40), %struct.SkIRect* nocapture readnone byval(%struct.SkIRect) align 8) unnamed_addr #0 align 2 {
  %8 = alloca %struct.SkPoint, align 4
  %9 = alloca %struct.SkPoint3, align 8
  %10 = alloca %struct.SkPoint, align 4
  %11 = alloca %struct.SkPoint3, align 8
  %12 = alloca %struct.SkPoint, align 4
  %13 = alloca %struct.SkPoint3, align 8
  %14 = alloca %struct.SkPoint, align 4
  %15 = alloca %struct.SkPoint3, align 8
  %16 = alloca <2 x float>, align 8
  %17 = alloca <2 x float>, align 8
  %18 = alloca <2 x float>, align 8
  %19 = alloca <2 x float>, align 8
  %20 = alloca <2 x float>, align 8
  %21 = alloca <2 x float>, align 8
  %22 = alloca <2 x float>, align 8
  %23 = alloca <2 x float>, align 8
  %24 = alloca %struct.SkPoint, align 4
  %25 = alloca %struct.SkPoint3, align 8
  %26 = alloca %struct.SkPoint, align 4
  %27 = alloca %struct.SkPoint3, align 8
  %28 = alloca %struct.SkPoint, align 4
  %29 = alloca %struct.SkPoint3, align 8
  %30 = alloca %struct.SkPoint, align 4
  %31 = alloca %struct.SkPoint3, align 8
  %32 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 192
  %35 = icmp eq i32 %34, 128
  br i1 %35, label %36, label %39

36:                                               ; preds = %7
  %37 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %5) #18
  %38 = zext i8 %37 to i32
  store i32 %38, i32* %32, align 4
  br label %39

39:                                               ; preds = %7, %36
  %40 = phi i32 [ %38, %36 ], [ %33, %7 ]
  %41 = and i32 %40, 8
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 2
  br i1 %42, label %46, label %241

46:                                               ; preds = %39
  br i1 %45, label %47, label %143

47:                                               ; preds = %46
  %48 = bitcast i8* %1 to [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]*
  %49 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 1, i32 0
  %50 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %49, align 8, !noalias !147
  %51 = sext i32 %2 to i64
  %52 = sext i32 %3 to i64
  %53 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %50, i64 %51, i32 0
  %54 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 3, i32 0
  %55 = load %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"*, %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"** %54, align 8, !noalias !147
  %56 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %55, i64 %51
  %57 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 0, i32 4
  %58 = load float, float* %57, align 8
  %59 = icmp eq i32 %3, 0
  br i1 %59, label %492, label %60

60:                                               ; preds = %47
  %61 = bitcast <2 x float>* %20 to i8*
  %62 = bitcast <2 x float>* %20 to %struct.SkPoint*
  %63 = getelementptr inbounds <2 x float>, <2 x float>* %20, i64 0, i64 0
  %64 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %62, i64 0, i32 1
  %65 = bitcast <2 x float>* %20 to i64*
  %66 = bitcast <2 x float>* %21 to i8*
  %67 = bitcast <2 x float>* %21 to %struct.SkPoint*
  %68 = getelementptr inbounds <2 x float>, <2 x float>* %21, i64 0, i64 0
  %69 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %67, i64 0, i32 1
  %70 = bitcast <2 x float>* %21 to i64*
  %71 = bitcast <2 x float>* %22 to i8*
  %72 = bitcast <2 x float>* %22 to %struct.SkPoint*
  %73 = getelementptr inbounds <2 x float>, <2 x float>* %22, i64 0, i64 0
  %74 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %72, i64 0, i32 1
  %75 = bitcast <2 x float>* %22 to i64*
  %76 = bitcast <2 x float>* %23 to i8*
  %77 = bitcast <2 x float>* %23 to %struct.SkPoint*
  %78 = getelementptr inbounds <2 x float>, <2 x float>* %23, i64 0, i64 0
  %79 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %77, i64 0, i32 1
  %80 = bitcast <2 x float>* %23 to i64*
  br label %81

81:                                               ; preds = %81, %60
  %82 = phi i64 [ 0, %60 ], [ %141, %81 ]
  %83 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %48, i64 %82
  %84 = getelementptr inbounds %class.GrGlyph*, %class.GrGlyph** %53, i64 %82
  %85 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %56, i64 %82, i32 0, i32 0
  %86 = load float, float* %85, align 4
  %87 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %56, i64 %82, i32 0, i32 1
  %88 = load float, float* %87, align 4
  %89 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %56, i64 %82, i32 1, i32 0
  %90 = load i16, i16* %89, align 4
  %91 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %56, i64 %82, i32 1, i32 1
  %92 = load i16, i16* %91, align 2
  %93 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %56, i64 %82, i32 1, i32 2
  %94 = load i16, i16* %93, align 4
  %95 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %56, i64 %82, i32 1, i32 3
  %96 = load i16, i16* %95, align 2
  %97 = sitofp i16 %90 to float
  %98 = sitofp i16 %92 to float
  %99 = fmul float %58, %97
  %100 = fmul float %58, %98
  %101 = fadd float %86, %99
  %102 = fadd float %88, %100
  %103 = sitofp i16 %94 to float
  %104 = sitofp i16 %96 to float
  %105 = fmul float %58, %103
  %106 = fmul float %58, %104
  %107 = fadd float %86, %105
  %108 = fadd float %88, %106
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #18
  store float 0xFFFFFFFFE0000000, float* %63, align 8
  store float 0xFFFFFFFFE0000000, float* %64, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %101, float %102, %struct.SkPoint* nonnull %62) #18
  %109 = load i64, i64* %65, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #18
  store float 0xFFFFFFFFE0000000, float* %68, align 8
  store float 0xFFFFFFFFE0000000, float* %69, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %101, float %108, %struct.SkPoint* nonnull %67) #18
  %110 = load i64, i64* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #18
  store float 0xFFFFFFFFE0000000, float* %73, align 8
  store float 0xFFFFFFFFE0000000, float* %74, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %107, float %102, %struct.SkPoint* nonnull %72) #18
  %111 = load i64, i64* %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #18
  store float 0xFFFFFFFFE0000000, float* %78, align 8
  store float 0xFFFFFFFFE0000000, float* %79, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %107, float %108, %struct.SkPoint* nonnull %77) #18
  %112 = load i64, i64* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #18
  %113 = load %class.GrGlyph*, %class.GrGlyph** %84, align 8
  %114 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %113, i64 0, i32 1, i32 1
  %115 = bitcast %"struct.std::__1::array.294"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = trunc i64 %116 to i32
  %118 = lshr i64 %116, 32
  %119 = trunc i64 %118 to i32
  %120 = and i32 %117, -65536
  %121 = and i32 %117, 65535
  %122 = bitcast [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %83 to i64*
  store i64 %109, i64* %122, align 4
  %123 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %48, i64 %82, i64 0, i32 1
  %124 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %123 to i32*
  store i32 %117, i32* %124, align 4
  %125 = and i32 %119, -65536
  %126 = or i32 %125, %121
  %127 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %48, i64 %82, i64 1
  %128 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %127 to i64*
  store i64 %110, i64* %128, align 4
  %129 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %48, i64 %82, i64 1, i32 1
  %130 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %129 to i32*
  store i32 %126, i32* %130, align 4
  %131 = and i32 %119, 65535
  %132 = or i32 %131, %120
  %133 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %48, i64 %82, i64 2
  %134 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %133 to i64*
  store i64 %111, i64* %134, align 4
  %135 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %48, i64 %82, i64 2, i32 1
  %136 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %135 to i32*
  store i32 %132, i32* %136, align 4
  %137 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %48, i64 %82, i64 3
  %138 = bitcast %"struct.(anonymous namespace)::ARGB2DVertex"* %137 to i64*
  store i64 %112, i64* %138, align 4
  %139 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB2DVertex"], [4 x %"struct.(anonymous namespace)::ARGB2DVertex"]* %48, i64 %82, i64 3, i32 1
  %140 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %139 to i32*
  store i32 %119, i32* %140, align 4
  %141 = add nuw i64 %82, 1
  %142 = icmp eq i64 %141, %52
  br i1 %142, label %492, label %81

143:                                              ; preds = %46
  %144 = bitcast i8* %1 to [4 x %"struct.(anonymous namespace)::Mask2DVertex"]*
  %145 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 1, i32 0
  %146 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %145, align 8, !noalias !150
  %147 = sext i32 %2 to i64
  %148 = sext i32 %3 to i64
  %149 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %146, i64 %147, i32 0
  %150 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 3, i32 0
  %151 = load %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"*, %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"** %150, align 8, !noalias !150
  %152 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %151, i64 %147
  %153 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 0, i32 4
  %154 = load float, float* %153, align 8
  %155 = icmp eq i32 %3, 0
  br i1 %155, label %492, label %156

156:                                              ; preds = %143
  %157 = bitcast <2 x float>* %16 to i8*
  %158 = bitcast <2 x float>* %16 to %struct.SkPoint*
  %159 = getelementptr inbounds <2 x float>, <2 x float>* %16, i64 0, i64 0
  %160 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %158, i64 0, i32 1
  %161 = bitcast <2 x float>* %16 to i64*
  %162 = bitcast <2 x float>* %17 to i8*
  %163 = bitcast <2 x float>* %17 to %struct.SkPoint*
  %164 = getelementptr inbounds <2 x float>, <2 x float>* %17, i64 0, i64 0
  %165 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %163, i64 0, i32 1
  %166 = bitcast <2 x float>* %17 to i64*
  %167 = bitcast <2 x float>* %18 to i8*
  %168 = bitcast <2 x float>* %18 to %struct.SkPoint*
  %169 = getelementptr inbounds <2 x float>, <2 x float>* %18, i64 0, i64 0
  %170 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %168, i64 0, i32 1
  %171 = bitcast <2 x float>* %18 to i64*
  %172 = bitcast <2 x float>* %19 to i8*
  %173 = bitcast <2 x float>* %19 to %struct.SkPoint*
  %174 = getelementptr inbounds <2 x float>, <2 x float>* %19, i64 0, i64 0
  %175 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %173, i64 0, i32 1
  %176 = bitcast <2 x float>* %19 to i64*
  br label %177

177:                                              ; preds = %177, %156
  %178 = phi i64 [ 0, %156 ], [ %239, %177 ]
  %179 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178
  %180 = getelementptr inbounds %class.GrGlyph*, %class.GrGlyph** %149, i64 %178
  %181 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %152, i64 %178, i32 0, i32 0
  %182 = load float, float* %181, align 4
  %183 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %152, i64 %178, i32 0, i32 1
  %184 = load float, float* %183, align 4
  %185 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %152, i64 %178, i32 1, i32 0
  %186 = load i16, i16* %185, align 4
  %187 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %152, i64 %178, i32 1, i32 1
  %188 = load i16, i16* %187, align 2
  %189 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %152, i64 %178, i32 1, i32 2
  %190 = load i16, i16* %189, align 4
  %191 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %152, i64 %178, i32 1, i32 3
  %192 = load i16, i16* %191, align 2
  %193 = sitofp i16 %186 to float
  %194 = sitofp i16 %188 to float
  %195 = fmul float %154, %193
  %196 = fmul float %154, %194
  %197 = fadd float %182, %195
  %198 = fadd float %184, %196
  %199 = sitofp i16 %190 to float
  %200 = sitofp i16 %192 to float
  %201 = fmul float %154, %199
  %202 = fmul float %154, %200
  %203 = fadd float %182, %201
  %204 = fadd float %184, %202
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #18
  store float 0xFFFFFFFFE0000000, float* %159, align 8
  store float 0xFFFFFFFFE0000000, float* %160, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %197, float %198, %struct.SkPoint* nonnull %158) #18
  %205 = load i64, i64* %161, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #18
  store float 0xFFFFFFFFE0000000, float* %164, align 8
  store float 0xFFFFFFFFE0000000, float* %165, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %197, float %204, %struct.SkPoint* nonnull %163) #18
  %206 = load i64, i64* %166, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #18
  store float 0xFFFFFFFFE0000000, float* %169, align 8
  store float 0xFFFFFFFFE0000000, float* %170, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %203, float %198, %struct.SkPoint* nonnull %168) #18
  %207 = load i64, i64* %171, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #18
  store float 0xFFFFFFFFE0000000, float* %174, align 8
  store float 0xFFFFFFFFE0000000, float* %175, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %203, float %204, %struct.SkPoint* nonnull %173) #18
  %208 = load i64, i64* %176, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #18
  %209 = load %class.GrGlyph*, %class.GrGlyph** %180, align 8
  %210 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %209, i64 0, i32 1, i32 1
  %211 = bitcast %"struct.std::__1::array.294"* %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = trunc i64 %212 to i16
  %214 = lshr i64 %212, 16
  %215 = trunc i64 %214 to i16
  %216 = lshr i64 %212, 32
  %217 = trunc i64 %216 to i16
  %218 = lshr i64 %212, 48
  %219 = trunc i64 %218 to i16
  %220 = bitcast [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %179 to i64*
  store i64 %205, i64* %220, align 4
  %221 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 0, i32 1
  store i32 %4, i32* %221, align 4
  %222 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 0, i32 2, i32 0
  store i16 %213, i16* %222, align 4
  %223 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 0, i32 2, i32 1
  store i16 %215, i16* %223, align 2
  %224 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 1
  %225 = bitcast %"struct.(anonymous namespace)::Mask2DVertex"* %224 to i64*
  store i64 %206, i64* %225, align 4
  %226 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 1, i32 1
  store i32 %4, i32* %226, align 4
  %227 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 1, i32 2, i32 0
  store i16 %213, i16* %227, align 4
  %228 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 1, i32 2, i32 1
  store i16 %219, i16* %228, align 2
  %229 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 2
  %230 = bitcast %"struct.(anonymous namespace)::Mask2DVertex"* %229 to i64*
  store i64 %207, i64* %230, align 4
  %231 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 2, i32 1
  store i32 %4, i32* %231, align 4
  %232 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 2, i32 2, i32 0
  store i16 %217, i16* %232, align 4
  %233 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 2, i32 2, i32 1
  store i16 %215, i16* %233, align 2
  %234 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 3
  %235 = bitcast %"struct.(anonymous namespace)::Mask2DVertex"* %234 to i64*
  store i64 %208, i64* %235, align 4
  %236 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 3, i32 1
  store i32 %4, i32* %236, align 4
  %237 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 3, i32 2, i32 0
  store i16 %217, i16* %237, align 4
  %238 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %144, i64 %178, i64 3, i32 2, i32 1
  store i16 %219, i16* %238, align 2
  %239 = add nuw i64 %178, 1
  %240 = icmp eq i64 %239, %148
  br i1 %240, label %492, label %177

241:                                              ; preds = %39
  br i1 %45, label %242, label %366

242:                                              ; preds = %241
  %243 = bitcast i8* %1 to [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]*
  %244 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 1, i32 0
  %245 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %244, align 8, !noalias !153
  %246 = sext i32 %2 to i64
  %247 = sext i32 %3 to i64
  %248 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %245, i64 %246, i32 0
  %249 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 3, i32 0
  %250 = load %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"*, %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"** %249, align 8, !noalias !153
  %251 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %250, i64 %246
  %252 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 0, i32 4
  %253 = load float, float* %252, align 8
  %254 = icmp eq i32 %3, 0
  br i1 %254, label %492, label %255

255:                                              ; preds = %242
  %256 = bitcast %struct.SkPoint* %8 to i8*
  %257 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 0
  %258 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 1
  %259 = bitcast %struct.SkPoint3* %9 to i8*
  %260 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %9, i64 0, i32 0
  %261 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %9, i64 0, i32 1
  %262 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %9, i64 0, i32 2
  %263 = bitcast %struct.SkPoint3* %9 to i64*
  %264 = bitcast float* %262 to i32*
  %265 = bitcast %struct.SkPoint* %10 to i8*
  %266 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 0, i32 0
  %267 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 0, i32 1
  %268 = bitcast %struct.SkPoint3* %11 to i8*
  %269 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %11, i64 0, i32 0
  %270 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %11, i64 0, i32 1
  %271 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %11, i64 0, i32 2
  %272 = bitcast %struct.SkPoint3* %11 to i64*
  %273 = bitcast float* %271 to i32*
  %274 = bitcast %struct.SkPoint* %12 to i8*
  %275 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 0, i32 0
  %276 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 0, i32 1
  %277 = bitcast %struct.SkPoint3* %13 to i8*
  %278 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %13, i64 0, i32 0
  %279 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %13, i64 0, i32 1
  %280 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %13, i64 0, i32 2
  %281 = bitcast %struct.SkPoint3* %13 to i64*
  %282 = bitcast float* %280 to i32*
  %283 = bitcast %struct.SkPoint* %14 to i8*
  %284 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 0
  %285 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 1
  %286 = bitcast %struct.SkPoint3* %15 to i8*
  %287 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %15, i64 0, i32 0
  %288 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %15, i64 0, i32 1
  %289 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %15, i64 0, i32 2
  %290 = bitcast %struct.SkPoint3* %15 to i64*
  %291 = bitcast float* %289 to i32*
  br label %292

292:                                              ; preds = %292, %255
  %293 = phi i64 [ 0, %255 ], [ %364, %292 ]
  %294 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293
  %295 = getelementptr inbounds %class.GrGlyph*, %class.GrGlyph** %248, i64 %293
  %296 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %251, i64 %293, i32 0, i32 0
  %297 = load float, float* %296, align 4
  %298 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %251, i64 %293, i32 0, i32 1
  %299 = load float, float* %298, align 4
  %300 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %251, i64 %293, i32 1, i32 0
  %301 = load i16, i16* %300, align 4
  %302 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %251, i64 %293, i32 1, i32 1
  %303 = load i16, i16* %302, align 2
  %304 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %251, i64 %293, i32 1, i32 2
  %305 = load i16, i16* %304, align 4
  %306 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %251, i64 %293, i32 1, i32 3
  %307 = load i16, i16* %306, align 2
  %308 = sitofp i16 %301 to float
  %309 = sitofp i16 %303 to float
  %310 = fmul float %253, %308
  %311 = fmul float %253, %309
  %312 = fadd float %297, %310
  %313 = fadd float %299, %311
  %314 = sitofp i16 %305 to float
  %315 = sitofp i16 %307 to float
  %316 = fmul float %253, %314
  %317 = fmul float %253, %315
  %318 = fadd float %297, %316
  %319 = fadd float %299, %317
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %256) #18
  store float %312, float* %257, align 4
  store float %313, float* %258, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %259) #18
  store float 0xFFFFFFFFE0000000, float* %260, align 8
  store float 0xFFFFFFFFE0000000, float* %261, align 4
  store float 0xFFFFFFFFE0000000, float* %262, align 8
  call void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix* %5, %struct.SkPoint3* nonnull %9, %struct.SkPoint* nonnull %8, i32 1) #18
  %320 = load i64, i64* %263, align 8
  %321 = load i32, i32* %264, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %259) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %256) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %265) #18
  store float %312, float* %266, align 4
  store float %319, float* %267, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %268) #18
  store float 0xFFFFFFFFE0000000, float* %269, align 8
  store float 0xFFFFFFFFE0000000, float* %270, align 4
  store float 0xFFFFFFFFE0000000, float* %271, align 8
  call void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix* %5, %struct.SkPoint3* nonnull %11, %struct.SkPoint* nonnull %10, i32 1) #18
  %322 = load i64, i64* %272, align 8
  %323 = load i32, i32* %273, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %268) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %265) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %274) #18
  store float %318, float* %275, align 4
  store float %313, float* %276, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %277) #18
  store float 0xFFFFFFFFE0000000, float* %278, align 8
  store float 0xFFFFFFFFE0000000, float* %279, align 4
  store float 0xFFFFFFFFE0000000, float* %280, align 8
  call void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix* %5, %struct.SkPoint3* nonnull %13, %struct.SkPoint* nonnull %12, i32 1) #18
  %324 = load i64, i64* %281, align 8
  %325 = load i32, i32* %282, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %277) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %274) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %283) #18
  store float %318, float* %284, align 4
  store float %319, float* %285, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %286) #18
  store float 0xFFFFFFFFE0000000, float* %287, align 8
  store float 0xFFFFFFFFE0000000, float* %288, align 4
  store float 0xFFFFFFFFE0000000, float* %289, align 8
  call void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix* %5, %struct.SkPoint3* nonnull %15, %struct.SkPoint* nonnull %14, i32 1) #18
  %326 = load i64, i64* %290, align 8
  %327 = load i32, i32* %291, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %286) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %283) #18
  %328 = load %class.GrGlyph*, %class.GrGlyph** %295, align 8
  %329 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %328, i64 0, i32 1, i32 1
  %330 = bitcast %"struct.std::__1::array.294"* %329 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = trunc i64 %331 to i32
  %333 = lshr i64 %331, 32
  %334 = trunc i64 %333 to i32
  %335 = and i32 %332, -65536
  %336 = and i32 %332, 65535
  %337 = bitcast [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %294 to i64*
  store i64 %320, i64* %337, align 4
  %338 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 0, i32 0, i32 2
  %339 = bitcast float* %338 to i32*
  store i32 %321, i32* %339, align 4
  %340 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 0, i32 1
  %341 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %340 to i32*
  store i32 %332, i32* %341, align 4
  %342 = and i32 %334, -65536
  %343 = or i32 %342, %336
  %344 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 1
  %345 = bitcast %"struct.(anonymous namespace)::ARGB3DVertex"* %344 to i64*
  store i64 %322, i64* %345, align 4
  %346 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 1, i32 0, i32 2
  %347 = bitcast float* %346 to i32*
  store i32 %323, i32* %347, align 4
  %348 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 1, i32 1
  %349 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %348 to i32*
  store i32 %343, i32* %349, align 4
  %350 = and i32 %334, 65535
  %351 = or i32 %350, %335
  %352 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 2
  %353 = bitcast %"struct.(anonymous namespace)::ARGB3DVertex"* %352 to i64*
  store i64 %324, i64* %353, align 4
  %354 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 2, i32 0, i32 2
  %355 = bitcast float* %354 to i32*
  store i32 %325, i32* %355, align 4
  %356 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 2, i32 1
  %357 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %356 to i32*
  store i32 %351, i32* %357, align 4
  %358 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 3
  %359 = bitcast %"struct.(anonymous namespace)::ARGB3DVertex"* %358 to i64*
  store i64 %326, i64* %359, align 4
  %360 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 3, i32 0, i32 2
  %361 = bitcast float* %360 to i32*
  store i32 %327, i32* %361, align 4
  %362 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::ARGB3DVertex"], [4 x %"struct.(anonymous namespace)::ARGB3DVertex"]* %243, i64 %293, i64 3, i32 1
  %363 = bitcast %"struct.(anonymous namespace)::AtlasPt"* %362 to i32*
  store i32 %334, i32* %363, align 4
  %364 = add nuw i64 %293, 1
  %365 = icmp eq i64 %364, %247
  br i1 %365, label %492, label %292

366:                                              ; preds = %241
  %367 = bitcast i8* %1 to [4 x %"struct.(anonymous namespace)::Mask3DVertex"]*
  %368 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 1, i32 0
  %369 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %368, align 8, !noalias !156
  %370 = sext i32 %2 to i64
  %371 = sext i32 %3 to i64
  %372 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %369, i64 %370, i32 0
  %373 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 3, i32 0
  %374 = load %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"*, %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"** %373, align 8, !noalias !156
  %375 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %374, i64 %370
  %376 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 0, i32 4
  %377 = load float, float* %376, align 8
  %378 = icmp eq i32 %3, 0
  br i1 %378, label %492, label %379

379:                                              ; preds = %366
  %380 = bitcast %struct.SkPoint* %24 to i8*
  %381 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %24, i64 0, i32 0
  %382 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %24, i64 0, i32 1
  %383 = bitcast %struct.SkPoint3* %25 to i8*
  %384 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %25, i64 0, i32 0
  %385 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %25, i64 0, i32 1
  %386 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %25, i64 0, i32 2
  %387 = bitcast %struct.SkPoint3* %25 to i64*
  %388 = bitcast float* %386 to i32*
  %389 = bitcast %struct.SkPoint* %26 to i8*
  %390 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 0, i32 0
  %391 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 0, i32 1
  %392 = bitcast %struct.SkPoint3* %27 to i8*
  %393 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %27, i64 0, i32 0
  %394 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %27, i64 0, i32 1
  %395 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %27, i64 0, i32 2
  %396 = bitcast %struct.SkPoint3* %27 to i64*
  %397 = bitcast float* %395 to i32*
  %398 = bitcast %struct.SkPoint* %28 to i8*
  %399 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %28, i64 0, i32 0
  %400 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %28, i64 0, i32 1
  %401 = bitcast %struct.SkPoint3* %29 to i8*
  %402 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %29, i64 0, i32 0
  %403 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %29, i64 0, i32 1
  %404 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %29, i64 0, i32 2
  %405 = bitcast %struct.SkPoint3* %29 to i64*
  %406 = bitcast float* %404 to i32*
  %407 = bitcast %struct.SkPoint* %30 to i8*
  %408 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %30, i64 0, i32 0
  %409 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %30, i64 0, i32 1
  %410 = bitcast %struct.SkPoint3* %31 to i8*
  %411 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %31, i64 0, i32 0
  %412 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %31, i64 0, i32 1
  %413 = getelementptr inbounds %struct.SkPoint3, %struct.SkPoint3* %31, i64 0, i32 2
  %414 = bitcast %struct.SkPoint3* %31 to i64*
  %415 = bitcast float* %413 to i32*
  br label %416

416:                                              ; preds = %416, %379
  %417 = phi i64 [ 0, %379 ], [ %490, %416 ]
  %418 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417
  %419 = getelementptr inbounds %class.GrGlyph*, %class.GrGlyph** %372, i64 %417
  %420 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %375, i64 %417, i32 0, i32 0
  %421 = load float, float* %420, align 4
  %422 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %375, i64 %417, i32 0, i32 1
  %423 = load float, float* %422, align 4
  %424 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %375, i64 %417, i32 1, i32 0
  %425 = load i16, i16* %424, align 4
  %426 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %375, i64 %417, i32 1, i32 1
  %427 = load i16, i16* %426, align 2
  %428 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %375, i64 %417, i32 1, i32 2
  %429 = load i16, i16* %428, align 4
  %430 = getelementptr inbounds %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData", %"struct.(anonymous namespace)::TransformedMaskSubRunNoCache::VertexData"* %375, i64 %417, i32 1, i32 3
  %431 = load i16, i16* %430, align 2
  %432 = sitofp i16 %425 to float
  %433 = sitofp i16 %427 to float
  %434 = fmul float %377, %432
  %435 = fmul float %377, %433
  %436 = fadd float %421, %434
  %437 = fadd float %423, %435
  %438 = sitofp i16 %429 to float
  %439 = sitofp i16 %431 to float
  %440 = fmul float %377, %438
  %441 = fmul float %377, %439
  %442 = fadd float %421, %440
  %443 = fadd float %423, %441
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %380) #18
  store float %436, float* %381, align 4
  store float %437, float* %382, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %383) #18
  store float 0xFFFFFFFFE0000000, float* %384, align 8
  store float 0xFFFFFFFFE0000000, float* %385, align 4
  store float 0xFFFFFFFFE0000000, float* %386, align 8
  call void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix* %5, %struct.SkPoint3* nonnull %25, %struct.SkPoint* nonnull %24, i32 1) #18
  %444 = load i64, i64* %387, align 8
  %445 = load i32, i32* %388, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %383) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %380) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %389) #18
  store float %436, float* %390, align 4
  store float %443, float* %391, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %392) #18
  store float 0xFFFFFFFFE0000000, float* %393, align 8
  store float 0xFFFFFFFFE0000000, float* %394, align 4
  store float 0xFFFFFFFFE0000000, float* %395, align 8
  call void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix* %5, %struct.SkPoint3* nonnull %27, %struct.SkPoint* nonnull %26, i32 1) #18
  %446 = load i64, i64* %396, align 8
  %447 = load i32, i32* %397, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %392) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %389) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %398) #18
  store float %442, float* %399, align 4
  store float %437, float* %400, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %401) #18
  store float 0xFFFFFFFFE0000000, float* %402, align 8
  store float 0xFFFFFFFFE0000000, float* %403, align 4
  store float 0xFFFFFFFFE0000000, float* %404, align 8
  call void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix* %5, %struct.SkPoint3* nonnull %29, %struct.SkPoint* nonnull %28, i32 1) #18
  %448 = load i64, i64* %405, align 8
  %449 = load i32, i32* %406, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %401) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %398) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %407) #18
  store float %442, float* %408, align 4
  store float %443, float* %409, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %410) #18
  store float 0xFFFFFFFFE0000000, float* %411, align 8
  store float 0xFFFFFFFFE0000000, float* %412, align 4
  store float 0xFFFFFFFFE0000000, float* %413, align 8
  call void @_ZNK8SkMatrix20mapHomogeneousPointsEP8SkPoint3PK7SkPointi(%class.SkMatrix* %5, %struct.SkPoint3* nonnull %31, %struct.SkPoint* nonnull %30, i32 1) #18
  %450 = load i64, i64* %414, align 8
  %451 = load i32, i32* %415, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %410) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %407) #18
  %452 = load %class.GrGlyph*, %class.GrGlyph** %419, align 8
  %453 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %452, i64 0, i32 1, i32 1
  %454 = bitcast %"struct.std::__1::array.294"* %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = trunc i64 %455 to i16
  %457 = lshr i64 %455, 16
  %458 = trunc i64 %457 to i16
  %459 = lshr i64 %455, 32
  %460 = trunc i64 %459 to i16
  %461 = lshr i64 %455, 48
  %462 = trunc i64 %461 to i16
  %463 = bitcast [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %418 to i64*
  store i64 %444, i64* %463, align 4
  %464 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 0, i32 0, i32 2
  %465 = bitcast float* %464 to i32*
  store i32 %445, i32* %465, align 4
  %466 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 0, i32 1
  store i32 %4, i32* %466, align 4
  %467 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 0, i32 2, i32 0
  store i16 %456, i16* %467, align 4
  %468 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 0, i32 2, i32 1
  store i16 %458, i16* %468, align 2
  %469 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 1
  %470 = bitcast %"struct.(anonymous namespace)::Mask3DVertex"* %469 to i64*
  store i64 %446, i64* %470, align 4
  %471 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 1, i32 0, i32 2
  %472 = bitcast float* %471 to i32*
  store i32 %447, i32* %472, align 4
  %473 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 1, i32 1
  store i32 %4, i32* %473, align 4
  %474 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 1, i32 2, i32 0
  store i16 %456, i16* %474, align 4
  %475 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 1, i32 2, i32 1
  store i16 %462, i16* %475, align 2
  %476 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 2
  %477 = bitcast %"struct.(anonymous namespace)::Mask3DVertex"* %476 to i64*
  store i64 %448, i64* %477, align 4
  %478 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 2, i32 0, i32 2
  %479 = bitcast float* %478 to i32*
  store i32 %449, i32* %479, align 4
  %480 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 2, i32 1
  store i32 %4, i32* %480, align 4
  %481 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 2, i32 2, i32 0
  store i16 %460, i16* %481, align 4
  %482 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 2, i32 2, i32 1
  store i16 %458, i16* %482, align 2
  %483 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 3
  %484 = bitcast %"struct.(anonymous namespace)::Mask3DVertex"* %483 to i64*
  store i64 %450, i64* %484, align 4
  %485 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 3, i32 0, i32 2
  %486 = bitcast float* %485 to i32*
  store i32 %451, i32* %486, align 4
  %487 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 3, i32 1
  store i32 %4, i32* %487, align 4
  %488 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 3, i32 2, i32 0
  store i16 %460, i16* %488, align 4
  %489 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask3DVertex"], [4 x %"struct.(anonymous namespace)::Mask3DVertex"]* %367, i64 %417, i64 3, i32 2, i32 1
  store i16 %462, i16* %489, align 2
  %490 = add nuw i64 %417, 1
  %491 = icmp eq i64 %490, %371
  br i1 %491, label %492, label %416

492:                                              ; preds = %416, %292, %177, %81, %366, %242, %143, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_128TransformedMaskSubRunNoCache34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache(%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"*, %class.GrStrikeCache*) unnamed_addr #4 align 2 {
  %3 = alloca %class.sk_sp.301, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 2
  %5 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %4, i64 0, i32 0
  %6 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %7 = icmp eq %class.GrTextStrike* %6, null
  br i1 %7, label %8, label %72

8:                                                ; preds = %2
  %9 = bitcast %class.sk_sp.301* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 0
  call void @_ZNK12SkStrikeSpec20findOrCreateGrStrikeEP13GrStrikeCache(%class.sk_sp.301* nonnull sret %3, %class.SkStrikeSpec* %10, %class.GrStrikeCache* %1) #18
  %11 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %3, i64 0, i32 0
  %12 = bitcast %class.sk_sp.301* %3 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.GrTextStrike* null, %class.GrTextStrike** %11, align 8
  %14 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %15 = bitcast %class.sk_sp.301* %4 to i64*
  store i64 %13, i64* %15, align 8
  %16 = icmp eq %class.GrTextStrike* %14, null
  br i1 %16, label %56, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0
  %19 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %35

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 38
  %24 = bitcast %class.SkNVRefCnt.302* %23 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %24) #18
  %25 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 6
  %26 = bitcast %class.SkNVRefCnt.302* %25 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %26) #18
  %27 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 4
  %28 = bitcast %class.SkNVRefCnt.302* %27 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %29 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  %30 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %22
  %32 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29 to i8*
  call void @_ZdaPv(i8* %32) #20
  br label %33

33:                                               ; preds = %31, %22
  %34 = bitcast %class.GrTextStrike* %14 to i8*
  call void @_ZdlPv(i8* %34) #20
  br label %35

35:                                               ; preds = %17, %33
  %36 = load %class.GrTextStrike*, %class.GrTextStrike** %11, align 8
  %37 = icmp eq %class.GrTextStrike* %36, null
  br i1 %37, label %56, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %36, i64 0, i32 0
  %40 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %56

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 38
  %45 = bitcast %class.SkNVRefCnt.302* %44 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %45) #18
  %46 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 6
  %47 = bitcast %class.SkNVRefCnt.302* %46 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %47) #18
  %48 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 4
  %49 = bitcast %class.SkNVRefCnt.302* %48 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %50 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %49, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %49, align 8
  %51 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %43
  %53 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %50 to i8*
  call void @_ZdaPv(i8* %53) #20
  br label %54

54:                                               ; preds = %52, %43
  %55 = bitcast %class.GrTextStrike* %36 to i8*
  call void @_ZdlPv(i8* %55) #20
  br label %56

56:                                               ; preds = %8, %35, %38, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  %57 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 1, i32 0
  %58 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %57, align 8
  %59 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5, i32 1, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %58, i64 %60
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %56, %63
  %64 = phi %"union.(anonymous namespace)::GlyphVector::Variant"* [ %70, %63 ], [ %58, %56 ]
  %65 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %66 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"* %64 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = call %class.GrGlyph* @_ZN12GrTextStrike8getGlyphE15SkPackedGlyphID(%class.GrTextStrike* %65, i32 %67) #18
  %69 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %64, i64 0, i32 0
  store %class.GrGlyph* %68, %class.GrGlyph** %69, align 8
  %70 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %64, i64 1
  %71 = icmp eq %"union.(anonymous namespace)::GlyphVector::Variant"* %70, %61
  br i1 %71, label %72, label %63

72:                                               ; preds = %63, %2, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::TransformedMaskSubRunNoCache"*, i32, i32, %"class.GrMeshDrawOp::Target"*) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.(anonymous namespace)::TransformedMaskSubRunNoCache", %"class.(anonymous namespace)::TransformedMaskSubRunNoCache"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = tail call fastcc i64 @_ZN12_GLOBAL__N_111GlyphVector15regenerateAtlasEii12GrMaskFormatiPN12GrMeshDrawOp6TargetEb(%"class.(anonymous namespace)::GlyphVector"* %5, i32 %1, i32 %2, i32 %7, i32 1, %"class.GrMeshDrawOp::Target"* %3, i1 zeroext true)
  ret i64 %8
}

declare void @_ZN11SkStrokeRecC1ERK7SkPaintf(%class.SkStrokeRec*, %class.SkPaint* dereferenceable(72), float) unnamed_addr #2

declare void @_ZN7GrStyle14initPathEffectE5sk_spI12SkPathEffectE(%class.GrStyle*, %class.sk_sp.15*) local_unnamed_addr #2

declare void @_ZNK7SkPaint13refPathEffectEv(%class.sk_sp.15* sret, %class.SkPaint*) local_unnamed_addr #2

declare i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN25SkPreConcatMatrixProviderD0Ev(%class.SkPreConcatMatrixProvider*) unnamed_addr #12 comdat align 2 {
  %2 = bitcast %class.SkPreConcatMatrixProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK25SkPreConcatMatrixProvider16getLocalToMarkerEjP5SkM44(%class.SkPreConcatMatrixProvider*, i32, %class.SkM44*) unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %0, i64 0, i32 1
  %5 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %4, align 8
  %6 = bitcast %class.SkMatrixProvider* %5 to i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)***
  %7 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)**, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %7, i64 2
  %9 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkMatrixProvider* %5, i32 %1, %class.SkM44* %2) #18
  br i1 %10, label %11, label %16

11:                                               ; preds = %3
  %12 = icmp eq %class.SkM44* %2, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %0, i64 0, i32 2
  %15 = tail call dereferenceable(64) %class.SkM44* @_ZN5SkM449preConcatERK8SkMatrix(%class.SkM44* nonnull %2, %class.SkMatrix* dereferenceable(40) %14) #18
  br label %16

16:                                               ; preds = %3, %13, %11
  %17 = phi i1 [ true, %11 ], [ true, %13 ], [ false, %3 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK25SkPreConcatMatrixProvider29localToDeviceHitsPixelCentersEv(%class.SkPreConcatMatrixProvider*) unnamed_addr #4 comdat align 2 {
  ret i1 true
}

declare dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44*, %class.SkM44* dereferenceable(64), %class.SkM44* dereferenceable(64)) local_unnamed_addr #2

declare dereferenceable(64) %class.SkM44* @_ZN5SkM449preConcatERK8SkMatrix(%class.SkM44*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrStyledShapeC2ERK6SkPathRK7GrStyleNS_10DoSimplifyE(%class.GrStyledShape*, %class.SkPath* dereferenceable(16), %class.GrStyle* dereferenceable(64), i1 zeroext) unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 1
  store i8 4, i8* %5, align 8
  %6 = bitcast %class.GrStyledShape* %0 to %class.SkPath*
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %6, %class.SkPath* dereferenceable(16) %1) #18
  %7 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %7, align 2
  %8 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %10 = load i8, i8* %9, align 2
  %11 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 4
  %12 = lshr i8 %10, 1
  %13 = and i8 %12, 1
  store i8 %13, i8* %11, align 1
  %14 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1
  %15 = bitcast %class.GrStyle* %14 to i8*
  %16 = bitcast %class.GrStyle* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 16, i1 false) #18
  %17 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 1, i32 0
  %18 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %2, i64 0, i32 1, i32 0
  %19 = load %class.SkPathEffect*, %class.SkPathEffect** %18, align 8
  %20 = icmp eq %class.SkPathEffect* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  br label %24

24:                                               ; preds = %21, %4
  store %class.SkPathEffect* %19, %class.SkPathEffect** %17, align 8
  %25 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 1
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 1
  store float* null, float** %26, align 8
  %27 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 0
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %2, i64 0, i32 2, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 0
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %2, i64 0, i32 2, i32 1
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = bitcast float* %25 to i32*
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %2, i64 0, i32 2, i32 2, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %60, label %38

38:                                               ; preds = %24
  %39 = icmp sgt i32 %36, 4
  br i1 %39, label %40, label %44

40:                                               ; preds = %38
  %41 = sext i32 %36 to i64
  %42 = tail call i8* @_Z15sk_malloc_throwmm(i64 %41, i64 4) #18
  %43 = bitcast float** %26 to i8**
  store i8* %42, i8** %43, align 8
  br label %50

44:                                               ; preds = %38
  %45 = icmp sgt i32 %36, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %44
  %47 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 2, i64 0
  %48 = bitcast float** %26 to i8**
  store i8* %47, i8** %48, align 8
  br label %50

49:                                               ; preds = %44
  store float* null, float** %26, align 8
  br label %50

50:                                               ; preds = %49, %46, %40
  %51 = phi i8* [ null, %49 ], [ %47, %46 ], [ %42, %40 ]
  store i32 %36, i32* %27, align 8
  %52 = load i32, i32* %35, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = sext i32 %52 to i64
  %56 = shl nsw i64 %55, 2
  %57 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %2, i64 0, i32 2, i32 2, i32 1
  %58 = bitcast float** %57 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %59, i64 %56, i1 false) #18
  br label %60

60:                                               ; preds = %24, %50, %54
  %61 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 2
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 3
  store i8 0, i8* %62, align 4
  %63 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 4
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 5, i32 1
  store %class.SkPath* null, %class.SkPath** %64, align 8
  %65 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 1
  store i32* null, i32** %65, align 8
  %66 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 0
  store i32 0, i32* %66, align 8
  br i1 %3, label %67, label %68

67:                                               ; preds = %60
  tail call void @_ZN13GrStyledShape8simplifyEv(%class.GrStyledShape* %0) #18
  br label %68

68:                                               ; preds = %67, %60
  ret void
}

declare void @_ZN13GrStyledShape8simplifyEv(%class.GrStyledShape*) local_unnamed_addr #2

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @_ZZN12GrBagOfBytes16allocateBytesForIN12_GLOBAL__N_117SDFTSubRunNoCache10VertexDataEEEPciENKUlvE_clEv() unnamed_addr #15 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #19
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117SDFTSubRunNoCacheD2Ev(%"class.(anonymous namespace)::SDFTSubRunNoCache"*) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_117SDFTSubRunNoCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 0, i64 40
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 0, i64 32
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #18
  br label %12

12:                                               ; preds = %8, %1
  %13 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 6, i32 2, i32 0
  %14 = load %class.GrTextStrike*, %class.GrTextStrike** %13, align 8
  %15 = icmp eq %class.GrTextStrike* %14, null
  br i1 %15, label %34, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0
  %18 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %34

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %17, i64 38
  %23 = bitcast %class.SkNVRefCnt.302* %22 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %23) #18
  %24 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %17, i64 6
  %25 = bitcast %class.SkNVRefCnt.302* %24 to %class.SkAutoDescriptor*
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %25) #18
  %26 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %17, i64 4
  %27 = bitcast %class.SkNVRefCnt.302* %26 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %28 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %27, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %27, align 8
  %29 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %21
  %31 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %28 to i8*
  tail call void @_ZdaPv(i8* %31) #20
  br label %32

32:                                               ; preds = %30, %21
  %33 = bitcast %class.GrTextStrike* %14 to i8*
  tail call void @_ZdlPv(i8* %33) #20
  br label %34

34:                                               ; preds = %12, %16, %32
  %35 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 6, i32 0, i32 3, i32 0
  %36 = load %class.SkTypeface*, %class.SkTypeface** %35, align 8
  %37 = icmp eq %class.SkTypeface* %36, null
  br i1 %37, label %48, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %36, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = bitcast %class.SkTypeface* %36 to %class.SkRefCntBase*
  %44 = bitcast %class.SkTypeface* %36 to void (%class.SkRefCntBase*)***
  %45 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, i64 2
  %47 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, align 8
  tail call void %47(%class.SkRefCntBase* nonnull %43) #18
  br label %48

48:                                               ; preds = %42, %38, %34
  %49 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 6, i32 0, i32 2, i32 0
  %50 = load %class.SkPathEffect*, %class.SkPathEffect** %49, align 8
  %51 = icmp eq %class.SkPathEffect* %50, null
  br i1 %51, label %62, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %50, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %62

56:                                               ; preds = %52
  %57 = bitcast %class.SkPathEffect* %50 to %class.SkRefCntBase*
  %58 = bitcast %class.SkPathEffect* %50 to void (%class.SkRefCntBase*)***
  %59 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, i64 2
  %61 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, align 8
  tail call void %61(%class.SkRefCntBase* nonnull %57) #18
  br label %62

62:                                               ; preds = %56, %52, %48
  %63 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %64 = load %class.SkMaskFilter*, %class.SkMaskFilter** %63, align 8
  %65 = icmp eq %class.SkMaskFilter* %64, null
  br i1 %65, label %76, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %64, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %76

70:                                               ; preds = %66
  %71 = bitcast %class.SkMaskFilter* %64 to %class.SkRefCntBase*
  %72 = bitcast %class.SkMaskFilter* %64 to void (%class.SkRefCntBase*)***
  %73 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %72, align 8
  %74 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, i64 2
  %75 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, align 8
  tail call void %75(%class.SkRefCntBase* nonnull %71) #18
  br label %76

76:                                               ; preds = %62, %66, %70
  %77 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 6, i32 0, i32 0
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %77) #18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117SDFTSubRunNoCacheD0Ev(%"class.(anonymous namespace)::SDFTSubRunNoCache"*) unnamed_addr #12 align 2 {
  tail call void @_ZN12_GLOBAL__N_117SDFTSubRunNoCacheD2Ev(%"class.(anonymous namespace)::SDFTSubRunNoCache"* %0) #18
  %2 = bitcast %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_117SDFTSubRunNoCache12vertexStrideERK8SkMatrix(%"class.(anonymous namespace)::SDFTSubRunNoCache"* nocapture readnone, %class.SkMatrix* nocapture readnone dereferenceable(40)) unnamed_addr #8 align 2 {
  ret i64 16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_117SDFTSubRunNoCache10glyphCountEv(%"class.(anonymous namespace)::SDFTSubRunNoCache"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 4, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal { %class.GrClip*, %class.GrOp* } @_ZNK12_GLOBAL__N_117SDFTSubRunNoCache15makeAtlasTextOpEPK6GrClipRK16SkMatrixProviderRK14SkGlyphRunListRK7SkPaintP20GrSurfaceDrawContextNSt3__110unique_ptrI13GrAtlasSubRunN17GrSubRunAllocator9DestroyerEEE(%"class.(anonymous namespace)::SDFTSubRunNoCache"*, %class.GrClip*, %class.SkMatrixProvider* dereferenceable(112), %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.GrSurfaceDrawContext*, i64) unnamed_addr #0 align 2 {
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca <4 x float>, align 16
  %10 = bitcast <4 x float>* %9 to %struct.SkRect*
  %11 = alloca %class.GrPaint, align 8
  %12 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %3, i64 0, i32 3
  %13 = bitcast %struct.SkPoint* %12 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 8
  %15 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %2, i64 0, i32 2
  %16 = bitcast %class.GrPaint* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #18
  %17 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 3
  %20 = bitcast %class.GrPaint* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 28, i1 false)
  %21 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 6, i64 0
  %22 = bitcast i8* %21 to i32*
  store i32 -1431655766, i32* %22, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #18
  store i8 1, i8* %19, align 8
  %23 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 5
  %24 = bitcast %struct.SkRGBA4f.337* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 bitcast (%struct.SkRGBA4f.337* @_ZL17SK_PMColor4fWHITE to i8*), i64 16, i1 false) #18
  %25 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 0, i32 1
  %28 = load %class.GrRecordingContext*, %class.GrRecordingContext** %27, align 8
  %29 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %5, i64 0, i32 0, i32 0, i32 3
  %30 = icmp eq i32 %26, 2
  br i1 %30, label %31, label %33

31:                                               ; preds = %7
  %32 = call zeroext i1 @_Z25SkPaintToGrPaintWithBlendP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProvider11SkBlendModeP7GrPaint(%class.GrRecordingContext* %28, %class.GrColorInfo* dereferenceable(24) %29, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrixProvider* dereferenceable(112) %2, i32 2, %class.GrPaint* nonnull %11) #18
  br label %40

33:                                               ; preds = %7
  %34 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 5, i32 2
  %35 = call zeroext i1 @_Z16SkPaintToGrPaintP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderP7GrPaint(%class.GrRecordingContext* %28, %class.GrColorInfo* dereferenceable(24) %29, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrixProvider* dereferenceable(112) %2, %class.GrPaint* nonnull %11) #18
  %36 = bitcast %struct.SkRGBA4f.337* %23 to <2 x float>*
  %37 = load <2 x float>, <2 x float>* %36, align 4
  %38 = bitcast float* %34 to <2 x float>*
  %39 = load <2 x float>, <2 x float>* %38, align 4
  br label %40

40:                                               ; preds = %31, %33
  %41 = phi <2 x float> [ <float 1.000000e+00, float 1.000000e+00>, %31 ], [ %37, %33 ]
  %42 = phi <2 x float> [ <float 1.000000e+00, float 1.000000e+00>, %31 ], [ %39, %33 ]
  %43 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp ne i8 %44, 0
  %46 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 8
  %47 = load i8, i8* %46, align 1, !range !2
  %48 = icmp ne i8 %47, 0
  %49 = call fastcc { i64, i8 } @_ZN12_GLOBAL__N_124calculate_sdf_parametersERK20GrSurfaceDrawContextRK8SkMatrixbb(%class.GrSurfaceDrawContext* dereferenceable(312) %5, %class.SkMatrix* dereferenceable(40) %15, i1 zeroext %45, i1 zeroext %48)
  %50 = extractvalue { i64, i8 } %49, 0
  %51 = extractvalue { i64, i8 } %49, 1
  %52 = trunc i64 %50 to i32
  %53 = lshr i64 %50, 32
  %54 = trunc i64 %53 to i32
  %55 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 5, i64 0
  %56 = bitcast i8* %55 to %"struct.GrAtlasTextOp::Geometry"*
  %57 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 0
  %58 = bitcast i8* %55 to %class.GrAtlasSubRun**
  store %class.GrAtlasSubRun* %57, %class.GrAtlasSubRun** %58, align 8
  %59 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 5, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 5, i64 16
  %62 = bitcast i8* %61 to i64*
  store i64 %6, i64* %62, align 8
  %63 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 5, i64 24
  %64 = bitcast %class.SkMatrix* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 4 %64, i64 40, i1 false) #18
  %65 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 5, i64 64
  %66 = bitcast i8* %65 to <2 x float>*
  store <2 x float> %14, <2 x float>* %66, align 8
  %67 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 5, i64 72
  %68 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 5, i64 88
  %69 = bitcast i8* %68 to <2 x float>*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false)
  store <2 x float> %41, <2 x float>* %69, align 8
  %70 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 5, i64 96
  %71 = bitcast i8* %70 to <2 x float>*
  store <2 x float> %42, <2 x float>* %71, align 8
  %72 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 5, i64 104
  %73 = bitcast i8* %72 to %"struct.GrAtlasTextOp::Geometry"**
  store %"struct.GrAtlasTextOp::Geometry"* null, %"struct.GrAtlasTextOp::Geometry"** %73, align 8
  %74 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 4, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = trunc i64 %75 to i32
  %77 = bitcast <4 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #18
  %78 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 2
  %79 = bitcast %struct.SkRect* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %77, i8* align 4 %79, i64 16, i1 false) #18
  %80 = shufflevector <2 x float> %14, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %81 = load <4 x float>, <4 x float>* %9, align 16
  %82 = fadd <4 x float> %80, %81
  store <4 x float> %82, <4 x float>* %9, align 16
  %83 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #18
  %84 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -1, i64 16, i1 false) #18
  %85 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %15, %struct.SkRect* nonnull %84, %struct.SkRect* nonnull dereferenceable(16) %10, i32 1) #18
  %86 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %87 = load <2 x float>, <2 x float>* %86, align 8
  %88 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %89 = load <2 x float>, <2 x float>* %88, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #18
  %90 = call i32 @_ZN11SkPaintPriv21ComputeLuminanceColorERK7SkPaint(%class.SkPaint* dereferenceable(72) %4) #18
  %91 = call i8* @_ZN13GrAtlasTextOpnwEm(i64 112) #18
  %92 = bitcast i8* %91 to %class.GrAtlasTextOp*
  %93 = icmp ne i8 %51, 0
  call void @_ZN13GrAtlasTextOpC1ENS_8MaskTypeEbi6SkRectjbjPNS_8GeometryEO7GrPaint(%class.GrAtlasTextOp* %92, i32 %52, i1 zeroext true, i32 %76, <2 x float> %87, <2 x float> %89, i32 %90, i1 zeroext %93, i32 %54, %"struct.GrAtlasTextOp::Geometry"* %56, %class.GrPaint* nonnull dereferenceable(48) %11) #18
  %94 = bitcast i8* %91 to %class.GrOp*
  %95 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %96 = icmp eq %class.GrFragmentProcessor* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %40
  %98 = bitcast %class.GrFragmentProcessor* %95 to void (%class.GrFragmentProcessor*)***
  %99 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %98, align 8
  %100 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %99, i64 1
  %101 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %100, align 8
  call void %101(%class.GrFragmentProcessor* nonnull %95) #18
  br label %102

102:                                              ; preds = %97, %40
  %103 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %104 = icmp eq %class.GrFragmentProcessor* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %102
  %106 = bitcast %class.GrFragmentProcessor* %103 to void (%class.GrFragmentProcessor*)***
  %107 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %106, align 8
  %108 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %107, i64 1
  %109 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %108, align 8
  call void %109(%class.GrFragmentProcessor* nonnull %103) #18
  br label %110

110:                                              ; preds = %105, %102
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #18
  %111 = insertvalue { %class.GrClip*, %class.GrOp* } undef, %class.GrClip* %1, 0
  %112 = insertvalue { %class.GrClip*, %class.GrOp* } %111, %class.GrOp* %94, 1
  ret { %class.GrClip*, %class.GrOp* } %112
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_117SDFTSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRect(%"class.(anonymous namespace)::SDFTSubRunNoCache"* nocapture readonly, i8*, i32, i32, i32, %class.SkMatrix* dereferenceable(40), %struct.SkIRect* nocapture readnone byval(%struct.SkIRect) align 8) unnamed_addr #0 align 2 {
  %8 = alloca <2 x float>, align 8
  %9 = alloca <2 x float>, align 8
  %10 = alloca <2 x float>, align 8
  %11 = alloca <2 x float>, align 8
  %12 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 6, i32 1, i32 0
  %13 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %12, align 8
  %14 = sext i32 %2 to i64
  %15 = sext i32 %3 to i64
  %16 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %13, i64 %14, i32 0
  %17 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 4, i32 0
  %18 = load %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData"*, %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData"** %17, align 8
  %19 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData", %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData"* %18, i64 %14
  %20 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 6, i32 0, i32 4
  %21 = load float, float* %20, align 8
  %22 = icmp eq i32 %3, 0
  br i1 %22, label %113, label %23

23:                                               ; preds = %7
  %24 = bitcast i8* %1 to [4 x %"struct.(anonymous namespace)::Mask2DVertex"]*
  %25 = bitcast <2 x float>* %8 to i8*
  %26 = bitcast <2 x float>* %8 to %struct.SkPoint*
  %27 = getelementptr inbounds <2 x float>, <2 x float>* %8, i64 0, i64 0
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 0, i32 1
  %29 = bitcast <2 x float>* %8 to i64*
  %30 = bitcast <2 x float>* %9 to i8*
  %31 = bitcast <2 x float>* %9 to %struct.SkPoint*
  %32 = getelementptr inbounds <2 x float>, <2 x float>* %9, i64 0, i64 0
  %33 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %31, i64 0, i32 1
  %34 = bitcast <2 x float>* %9 to i64*
  %35 = bitcast <2 x float>* %10 to i8*
  %36 = bitcast <2 x float>* %10 to %struct.SkPoint*
  %37 = getelementptr inbounds <2 x float>, <2 x float>* %10, i64 0, i64 0
  %38 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %36, i64 0, i32 1
  %39 = bitcast <2 x float>* %10 to i64*
  %40 = bitcast <2 x float>* %11 to i8*
  %41 = bitcast <2 x float>* %11 to %struct.SkPoint*
  %42 = getelementptr inbounds <2 x float>, <2 x float>* %11, i64 0, i64 0
  %43 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %41, i64 0, i32 1
  %44 = bitcast <2 x float>* %11 to i64*
  br label %45

45:                                               ; preds = %45, %23
  %46 = phi i64 [ 0, %23 ], [ %111, %45 ]
  %47 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46
  %48 = getelementptr inbounds %class.GrGlyph*, %class.GrGlyph** %16, i64 %46
  %49 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData", %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData"* %19, i64 %46, i32 0, i32 0
  %50 = load float, float* %49, align 4
  %51 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData", %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData"* %19, i64 %46, i32 0, i32 1
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData", %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData"* %19, i64 %46, i32 1, i32 0
  %54 = load i16, i16* %53, align 4
  %55 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData", %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData"* %19, i64 %46, i32 1, i32 1
  %56 = load i16, i16* %55, align 2
  %57 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData", %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData"* %19, i64 %46, i32 1, i32 2
  %58 = load i16, i16* %57, align 4
  %59 = getelementptr inbounds %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData", %"struct.(anonymous namespace)::SDFTSubRunNoCache::VertexData"* %19, i64 %46, i32 1, i32 3
  %60 = load i16, i16* %59, align 2
  %61 = sitofp i16 %54 to float
  %62 = sitofp i16 %56 to float
  %63 = fadd float %61, 2.000000e+00
  %64 = fadd float %62, 2.000000e+00
  %65 = fmul float %21, %63
  %66 = fmul float %21, %64
  %67 = fadd float %50, %65
  %68 = fadd float %52, %66
  %69 = sitofp i16 %58 to float
  %70 = sitofp i16 %60 to float
  %71 = fadd float %69, -2.000000e+00
  %72 = fadd float %70, -2.000000e+00
  %73 = fmul float %21, %71
  %74 = fmul float %21, %72
  %75 = fadd float %50, %73
  %76 = fadd float %52, %74
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #18
  store float 0xFFFFFFFFE0000000, float* %27, align 8
  store float 0xFFFFFFFFE0000000, float* %28, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %67, float %68, %struct.SkPoint* nonnull %26) #18
  %77 = load i64, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #18
  store float 0xFFFFFFFFE0000000, float* %32, align 8
  store float 0xFFFFFFFFE0000000, float* %33, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %67, float %76, %struct.SkPoint* nonnull %31) #18
  %78 = load i64, i64* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #18
  store float 0xFFFFFFFFE0000000, float* %37, align 8
  store float 0xFFFFFFFFE0000000, float* %38, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %75, float %68, %struct.SkPoint* nonnull %36) #18
  %79 = load i64, i64* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #18
  store float 0xFFFFFFFFE0000000, float* %42, align 8
  store float 0xFFFFFFFFE0000000, float* %43, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %5, float %75, float %76, %struct.SkPoint* nonnull %41) #18
  %80 = load i64, i64* %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #18
  %81 = load %class.GrGlyph*, %class.GrGlyph** %48, align 8
  %82 = getelementptr inbounds %class.GrGlyph, %class.GrGlyph* %81, i64 0, i32 1, i32 1
  %83 = bitcast %"struct.std::__1::array.294"* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = trunc i64 %84 to i16
  %86 = lshr i64 %84, 16
  %87 = trunc i64 %86 to i16
  %88 = lshr i64 %84, 32
  %89 = trunc i64 %88 to i16
  %90 = lshr i64 %84, 48
  %91 = trunc i64 %90 to i16
  %92 = bitcast [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %47 to i64*
  store i64 %77, i64* %92, align 4
  %93 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 0, i32 1
  store i32 %4, i32* %93, align 4
  %94 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 0, i32 2, i32 0
  store i16 %85, i16* %94, align 4
  %95 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 0, i32 2, i32 1
  store i16 %87, i16* %95, align 2
  %96 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 1
  %97 = bitcast %"struct.(anonymous namespace)::Mask2DVertex"* %96 to i64*
  store i64 %78, i64* %97, align 4
  %98 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 1, i32 1
  store i32 %4, i32* %98, align 4
  %99 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 1, i32 2, i32 0
  store i16 %85, i16* %99, align 4
  %100 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 1, i32 2, i32 1
  store i16 %91, i16* %100, align 2
  %101 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 2
  %102 = bitcast %"struct.(anonymous namespace)::Mask2DVertex"* %101 to i64*
  store i64 %79, i64* %102, align 4
  %103 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 2, i32 1
  store i32 %4, i32* %103, align 4
  %104 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 2, i32 2, i32 0
  store i16 %89, i16* %104, align 4
  %105 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 2, i32 2, i32 1
  store i16 %87, i16* %105, align 2
  %106 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 3
  %107 = bitcast %"struct.(anonymous namespace)::Mask2DVertex"* %106 to i64*
  store i64 %80, i64* %107, align 4
  %108 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 3, i32 1
  store i32 %4, i32* %108, align 4
  %109 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 3, i32 2, i32 0
  store i16 %89, i16* %109, align 4
  %110 = getelementptr inbounds [4 x %"struct.(anonymous namespace)::Mask2DVertex"], [4 x %"struct.(anonymous namespace)::Mask2DVertex"]* %24, i64 %46, i64 3, i32 2, i32 1
  store i16 %91, i16* %110, align 2
  %111 = add nuw i64 %46, 1
  %112 = icmp eq i64 %111, %15
  br i1 %112, label %113, label %45

113:                                              ; preds = %45, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117SDFTSubRunNoCache34testingOnly_packedGlyphIDToGrGlyphEP13GrStrikeCache(%"class.(anonymous namespace)::SDFTSubRunNoCache"*, %class.GrStrikeCache*) unnamed_addr #4 align 2 {
  %3 = alloca %class.sk_sp.301, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 6, i32 2
  %5 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %4, i64 0, i32 0
  %6 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %7 = icmp eq %class.GrTextStrike* %6, null
  br i1 %7, label %8, label %72

8:                                                ; preds = %2
  %9 = bitcast %class.sk_sp.301* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 6, i32 0
  call void @_ZNK12SkStrikeSpec20findOrCreateGrStrikeEP13GrStrikeCache(%class.sk_sp.301* nonnull sret %3, %class.SkStrikeSpec* %10, %class.GrStrikeCache* %1) #18
  %11 = getelementptr inbounds %class.sk_sp.301, %class.sk_sp.301* %3, i64 0, i32 0
  %12 = bitcast %class.sk_sp.301* %3 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.GrTextStrike* null, %class.GrTextStrike** %11, align 8
  %14 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %15 = bitcast %class.sk_sp.301* %4 to i64*
  store i64 %13, i64* %15, align 8
  %16 = icmp eq %class.GrTextStrike* %14, null
  br i1 %16, label %56, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0
  %19 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %35

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 38
  %24 = bitcast %class.SkNVRefCnt.302* %23 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %24) #18
  %25 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 6
  %26 = bitcast %class.SkNVRefCnt.302* %25 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %26) #18
  %27 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %18, i64 4
  %28 = bitcast %class.SkNVRefCnt.302* %27 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %29 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %28, align 8
  %30 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %22
  %32 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %29 to i8*
  call void @_ZdaPv(i8* %32) #20
  br label %33

33:                                               ; preds = %31, %22
  %34 = bitcast %class.GrTextStrike* %14 to i8*
  call void @_ZdlPv(i8* %34) #20
  br label %35

35:                                               ; preds = %17, %33
  %36 = load %class.GrTextStrike*, %class.GrTextStrike** %11, align 8
  %37 = icmp eq %class.GrTextStrike* %36, null
  br i1 %37, label %56, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %36, i64 0, i32 0
  %40 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %56

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 38
  %45 = bitcast %class.SkNVRefCnt.302* %44 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %45) #18
  %46 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 6
  %47 = bitcast %class.SkNVRefCnt.302* %46 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %47) #18
  %48 = getelementptr inbounds %class.SkNVRefCnt.302, %class.SkNVRefCnt.302* %39, i64 4
  %49 = bitcast %class.SkNVRefCnt.302* %48 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %50 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %49, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %49, align 8
  %51 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %43
  %53 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %50 to i8*
  call void @_ZdaPv(i8* %53) #20
  br label %54

54:                                               ; preds = %52, %43
  %55 = bitcast %class.GrTextStrike* %36 to i8*
  call void @_ZdlPv(i8* %55) #20
  br label %56

56:                                               ; preds = %8, %35, %38, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  %57 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 6, i32 1, i32 0
  %58 = load %"union.(anonymous namespace)::GlyphVector::Variant"*, %"union.(anonymous namespace)::GlyphVector::Variant"** %57, align 8
  %59 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 6, i32 1, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %58, i64 %60
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %56, %63
  %64 = phi %"union.(anonymous namespace)::GlyphVector::Variant"* [ %70, %63 ], [ %58, %56 ]
  %65 = load %class.GrTextStrike*, %class.GrTextStrike** %5, align 8
  %66 = bitcast %"union.(anonymous namespace)::GlyphVector::Variant"* %64 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = call %class.GrGlyph* @_ZN12GrTextStrike8getGlyphE15SkPackedGlyphID(%class.GrTextStrike* %65, i32 %67) #18
  %69 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %64, i64 0, i32 0
  store %class.GrGlyph* %68, %class.GrGlyph** %69, align 8
  %70 = getelementptr inbounds %"union.(anonymous namespace)::GlyphVector::Variant", %"union.(anonymous namespace)::GlyphVector::Variant"* %64, i64 1
  %71 = icmp eq %"union.(anonymous namespace)::GlyphVector::Variant"* %70, %61
  br i1 %71, label %72, label %63

72:                                               ; preds = %63, %2, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_117SDFTSubRunNoCache15regenerateAtlasEiiPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::SDFTSubRunNoCache"*, i32, i32, %"class.GrMeshDrawOp::Target"*) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"class.(anonymous namespace)::SDFTSubRunNoCache", %"class.(anonymous namespace)::SDFTSubRunNoCache"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = tail call fastcc i64 @_ZN12_GLOBAL__N_111GlyphVector15regenerateAtlasEii12GrMaskFormatiPN12GrMeshDrawOp6TargetEb(%"class.(anonymous namespace)::GlyphVector"* %5, i32 %1, i32 %2, i32 %7, i32 2, %"class.GrMeshDrawOp::Target"* %3, i1 zeroext false)
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j(%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32) #4 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #21
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #15 comdat {
  tail call void @abort() #19
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #17

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { cold noreturn nounwind }
attributes #15 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind }
attributes #19 = { noreturn nounwind }
attributes #20 = { builtin nounwind }
attributes #21 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE4lastEm: argument 0"}
!5 = distinct !{!5, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE4lastEm"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE7subspanEmm: argument 0"}
!8 = distinct !{!8, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE7subspanEmm"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZZN12_GLOBAL__N_110PathSubRun4MakeERK5SkZipIJ14SkGlyphVariant7SkPointEEbRK12SkStrikeSpecRK10GrTextBlobP17GrSubRunAllocatorENK3$_4clEi: argument 0"}
!14 = distinct !{!14, !"_ZZN12_GLOBAL__N_110PathSubRun4MakeERK5SkZipIJ14SkGlyphVariant7SkPointEEbRK12SkStrikeSpecRK10GrTextBlobP17GrSubRunAllocatorENK3$_4clEi"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE4lastEm: argument 0"}
!17 = distinct !{!17, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE4lastEm"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE7subspanEmm: argument 0"}
!20 = distinct !{!20, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE7subspanEmm"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv: argument 0"}
!23 = distinct !{!23, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE4lastEm: argument 0"}
!26 = distinct !{!26, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE4lastEm"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE7subspanEmm: argument 0"}
!29 = distinct !{!29, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE7subspanEmm"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN8SkMatrix5ScaleEff: argument 0"}
!32 = distinct !{!32, !"_ZN8SkMatrix5ScaleEff"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK5SkM445asM33Ev: argument 0"}
!35 = distinct !{!35, !"_ZNK5SkM445asM33Ev"}
!36 = !{!37, !34}
!37 = distinct !{!37, !38, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!38 = distinct !{!38, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_Z9sk_ref_spI10GrTextBlobE5sk_spIT_EPS2_: argument 0"}
!41 = distinct !{!41, !"_Z9sk_ref_spI10GrTextBlobE5sk_spIT_EPS2_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN20GrSurfaceFillContext6arenasEv: argument 0"}
!44 = distinct !{!44, !"_ZN20GrSurfaceFillContext6arenasEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZZNK12_GLOBAL__N_116DirectMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_0clIPA4_NS_12Mask2DVertexEEEDaT_: argument 0"}
!47 = distinct !{!47, !"_ZZNK12_GLOBAL__N_116DirectMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_0clIPA4_NS_12Mask2DVertexEEEDaT_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZZNK12_GLOBAL__N_116DirectMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_0clIPA4_NS_12ARGB2DVertexEEEDaT_: argument 0"}
!50 = distinct !{!50, !"_ZZNK12_GLOBAL__N_116DirectMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_0clIPA4_NS_12ARGB2DVertexEEEDaT_"}
!51 = !{!52, !54, !56}
!52 = distinct !{!52, !53, !"_ZN15SkMakeZipDetail7MakeZipIJRPA4_N12_GLOBAL__N_112Mask2DVertexE6SkSpanIPK7GrGlyphES6_IKN4skvx3VecILi2EsEEEEEEDaDpOT_: argument 0"}
!53 = distinct !{!53, !"_ZN15SkMakeZipDetail7MakeZipIJRPA4_N12_GLOBAL__N_112Mask2DVertexE6SkSpanIPK7GrGlyphES6_IKN4skvx3VecILi2EsEEEEEEDaDpOT_"}
!54 = distinct !{!54, !55, !"_Z9SkMakeZipIJRPA4_N12_GLOBAL__N_112Mask2DVertexE6SkSpanIPK7GrGlyphES5_IKN4skvx3VecILi2EsEEEEEDaDpOT_: argument 0"}
!55 = distinct !{!55, !"_Z9SkMakeZipIJRPA4_N12_GLOBAL__N_112Mask2DVertexE6SkSpanIPK7GrGlyphES5_IKN4skvx3VecILi2EsEEEEEDaDpOT_"}
!56 = distinct !{!56, !57, !"_ZZNK12_GLOBAL__N_116DirectMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_0clIPA4_NS_12Mask2DVertexEEEDaT_: argument 0"}
!57 = distinct !{!57, !"_ZZNK12_GLOBAL__N_116DirectMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_0clIPA4_NS_12Mask2DVertexEEEDaT_"}
!58 = !{!59, !61, !63}
!59 = distinct !{!59, !60, !"_ZN15SkMakeZipDetail7MakeZipIJRPA4_N12_GLOBAL__N_112ARGB2DVertexE6SkSpanIPK7GrGlyphES6_IKN4skvx3VecILi2EsEEEEEEDaDpOT_: argument 0"}
!60 = distinct !{!60, !"_ZN15SkMakeZipDetail7MakeZipIJRPA4_N12_GLOBAL__N_112ARGB2DVertexE6SkSpanIPK7GrGlyphES6_IKN4skvx3VecILi2EsEEEEEEDaDpOT_"}
!61 = distinct !{!61, !62, !"_Z9SkMakeZipIJRPA4_N12_GLOBAL__N_112ARGB2DVertexE6SkSpanIPK7GrGlyphES5_IKN4skvx3VecILi2EsEEEEEDaDpOT_: argument 0"}
!62 = distinct !{!62, !"_Z9SkMakeZipIJRPA4_N12_GLOBAL__N_112ARGB2DVertexE6SkSpanIPK7GrGlyphES5_IKN4skvx3VecILi2EsEEEEEDaDpOT_"}
!63 = distinct !{!63, !64, !"_ZZNK12_GLOBAL__N_116DirectMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_0clIPA4_NS_12ARGB2DVertexEEEDaT_: argument 0"}
!64 = distinct !{!64, !"_ZZNK12_GLOBAL__N_116DirectMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_0clIPA4_NS_12ARGB2DVertexEEEDaT_"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_Z10sk_make_spI8GrArenasJEE5sk_spIT_EDpOT0_: argument 0"}
!67 = distinct !{!67, !"_Z10sk_make_spI8GrArenasJEE5sk_spIT_EDpOT0_"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNK5SkZipIJA4_N12_GLOBAL__N_112ARGB2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEE3endEv: argument 0"}
!70 = distinct !{!70, !"_ZNK5SkZipIJA4_N12_GLOBAL__N_112ARGB2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEE3endEv"}
!71 = !{!72, !74, !76, !78}
!72 = distinct !{!72, !73, !"_ZNK5SkZipIJA4_N12_GLOBAL__N_112ARGB2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEE11indexDetailIJLm0ELm1ELm2EEEENSt3__15tupleIJRS2_RS5_RS9_EEEmNSC_16integer_sequenceImJXspT_EEEE: argument 0"}
!73 = distinct !{!73, !"_ZNK5SkZipIJA4_N12_GLOBAL__N_112ARGB2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEE11indexDetailIJLm0ELm1ELm2EEEENSt3__15tupleIJRS2_RS5_RS9_EEEmNSC_16integer_sequenceImJXspT_EEEE"}
!74 = distinct !{!74, !75, !"_ZNK5SkZipIJA4_N12_GLOBAL__N_112ARGB2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEE5indexEm: argument 0"}
!75 = distinct !{!75, !"_ZNK5SkZipIJA4_N12_GLOBAL__N_112ARGB2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEE5indexEm"}
!76 = distinct !{!76, !77, !"_ZNK5SkZipIJA4_N12_GLOBAL__N_112ARGB2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEEixEm: argument 0"}
!77 = distinct !{!77, !"_ZNK5SkZipIJA4_N12_GLOBAL__N_112ARGB2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEEixEm"}
!78 = distinct !{!78, !79, !"_ZN5SkZipIJA4_N12_GLOBAL__N_112ARGB2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEE8IteratordeEv: argument 0"}
!79 = distinct !{!79, !"_ZN5SkZipIJA4_N12_GLOBAL__N_112ARGB2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEE8IteratordeEv"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNK5SkZipIJA4_N12_GLOBAL__N_112Mask2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEE3endEv: argument 0"}
!82 = distinct !{!82, !"_ZNK5SkZipIJA4_N12_GLOBAL__N_112Mask2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEE3endEv"}
!83 = !{!84, !86, !88, !90}
!84 = distinct !{!84, !85, !"_ZNK5SkZipIJA4_N12_GLOBAL__N_112Mask2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEE11indexDetailIJLm0ELm1ELm2EEEENSt3__15tupleIJRS2_RS5_RS9_EEEmNSC_16integer_sequenceImJXspT_EEEE: argument 0"}
!85 = distinct !{!85, !"_ZNK5SkZipIJA4_N12_GLOBAL__N_112Mask2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEE11indexDetailIJLm0ELm1ELm2EEEENSt3__15tupleIJRS2_RS5_RS9_EEEmNSC_16integer_sequenceImJXspT_EEEE"}
!86 = distinct !{!86, !87, !"_ZNK5SkZipIJA4_N12_GLOBAL__N_112Mask2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEE5indexEm: argument 0"}
!87 = distinct !{!87, !"_ZNK5SkZipIJA4_N12_GLOBAL__N_112Mask2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEE5indexEm"}
!88 = distinct !{!88, !89, !"_ZNK5SkZipIJA4_N12_GLOBAL__N_112Mask2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEEixEm: argument 0"}
!89 = distinct !{!89, !"_ZNK5SkZipIJA4_N12_GLOBAL__N_112Mask2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEEixEm"}
!90 = distinct !{!90, !91, !"_ZN5SkZipIJA4_N12_GLOBAL__N_112Mask2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEE8IteratordeEv: argument 0"}
!91 = distinct !{!91, !"_ZN5SkZipIJA4_N12_GLOBAL__N_112Mask2DVertexEPK7GrGlyphKN4skvx3VecILi2EsEEEE8IteratordeEv"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZN8SkMatrix5ScaleEff: argument 0"}
!94 = distinct !{!94, !"_ZN8SkMatrix5ScaleEff"}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZNK5SkM445asM33Ev: argument 0"}
!97 = distinct !{!97, !"_ZNK5SkM445asM33Ev"}
!98 = !{!99, !96}
!99 = distinct !{!99, !100, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!100 = distinct !{!100, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!101 = distinct !{!101, !102}
!102 = !{!"llvm.loop.unroll.disable"}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_Z9sk_ref_spI10GrTextBlobE5sk_spIT_EPS2_: argument 0"}
!105 = distinct !{!105, !"_Z9sk_ref_spI10GrTextBlobE5sk_spIT_EPS2_"}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZN20GrSurfaceFillContext6arenasEv: argument 0"}
!108 = distinct !{!108, !"_ZN20GrSurfaceFillContext6arenasEv"}
!109 = !{!110}
!110 = distinct !{!110, !111, !"_Z9sk_ref_spI10GrTextBlobE5sk_spIT_EPS2_: argument 0"}
!111 = distinct !{!111, !"_Z9sk_ref_spI10GrTextBlobE5sk_spIT_EPS2_"}
!112 = !{!113}
!113 = distinct !{!113, !114, !"_ZN20GrSurfaceFillContext6arenasEv: argument 0"}
!114 = distinct !{!114, !"_ZN20GrSurfaceFillContext6arenasEv"}
!115 = !{!116}
!116 = distinct !{!116, !117, !"_ZZNK12_GLOBAL__N_121TransformedMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_1clIPA4_NS_12ARGB2DVertexEEEDaT_: argument 0"}
!117 = distinct !{!117, !"_ZZNK12_GLOBAL__N_121TransformedMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_1clIPA4_NS_12ARGB2DVertexEEEDaT_"}
!118 = !{!119}
!119 = distinct !{!119, !120, !"_ZZNK12_GLOBAL__N_121TransformedMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_1clIPA4_NS_12Mask2DVertexEEEDaT_: argument 0"}
!120 = distinct !{!120, !"_ZZNK12_GLOBAL__N_121TransformedMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_1clIPA4_NS_12Mask2DVertexEEEDaT_"}
!121 = !{!122}
!122 = distinct !{!122, !123, !"_ZZNK12_GLOBAL__N_121TransformedMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_1clIPA4_NS_12ARGB3DVertexEEEDaT_: argument 0"}
!123 = distinct !{!123, !"_ZZNK12_GLOBAL__N_121TransformedMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_1clIPA4_NS_12ARGB3DVertexEEEDaT_"}
!124 = !{!125}
!125 = distinct !{!125, !126, !"_ZZNK12_GLOBAL__N_121TransformedMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_1clIPA4_NS_12Mask3DVertexEEEDaT_: argument 0"}
!126 = distinct !{!126, !"_ZZNK12_GLOBAL__N_121TransformedMaskSubRun14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_1clIPA4_NS_12Mask3DVertexEEEDaT_"}
!127 = !{!128}
!128 = distinct !{!128, !129, !"_ZZNK12_GLOBAL__N_123DirectMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_2clIPA4_NS_12Mask2DVertexEEEDaT_: argument 0"}
!129 = distinct !{!129, !"_ZZNK12_GLOBAL__N_123DirectMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_2clIPA4_NS_12Mask2DVertexEEEDaT_"}
!130 = !{!131}
!131 = distinct !{!131, !132, !"_ZZNK12_GLOBAL__N_123DirectMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_2clIPA4_NS_12ARGB2DVertexEEEDaT_: argument 0"}
!132 = distinct !{!132, !"_ZZNK12_GLOBAL__N_123DirectMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_2clIPA4_NS_12ARGB2DVertexEEEDaT_"}
!133 = !{!134, !136, !138}
!134 = distinct !{!134, !135, !"_ZN15SkMakeZipDetail7MakeZipIJRPA4_N12_GLOBAL__N_112Mask2DVertexE6SkSpanIPK7GrGlyphES6_IKN4skvx3VecILi2EsEEEEEEDaDpOT_: argument 0"}
!135 = distinct !{!135, !"_ZN15SkMakeZipDetail7MakeZipIJRPA4_N12_GLOBAL__N_112Mask2DVertexE6SkSpanIPK7GrGlyphES6_IKN4skvx3VecILi2EsEEEEEEDaDpOT_"}
!136 = distinct !{!136, !137, !"_Z9SkMakeZipIJRPA4_N12_GLOBAL__N_112Mask2DVertexE6SkSpanIPK7GrGlyphES5_IKN4skvx3VecILi2EsEEEEEDaDpOT_: argument 0"}
!137 = distinct !{!137, !"_Z9SkMakeZipIJRPA4_N12_GLOBAL__N_112Mask2DVertexE6SkSpanIPK7GrGlyphES5_IKN4skvx3VecILi2EsEEEEEDaDpOT_"}
!138 = distinct !{!138, !139, !"_ZZNK12_GLOBAL__N_123DirectMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_2clIPA4_NS_12Mask2DVertexEEEDaT_: argument 0"}
!139 = distinct !{!139, !"_ZZNK12_GLOBAL__N_123DirectMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_2clIPA4_NS_12Mask2DVertexEEEDaT_"}
!140 = !{!141, !143, !145}
!141 = distinct !{!141, !142, !"_ZN15SkMakeZipDetail7MakeZipIJRPA4_N12_GLOBAL__N_112ARGB2DVertexE6SkSpanIPK7GrGlyphES6_IKN4skvx3VecILi2EsEEEEEEDaDpOT_: argument 0"}
!142 = distinct !{!142, !"_ZN15SkMakeZipDetail7MakeZipIJRPA4_N12_GLOBAL__N_112ARGB2DVertexE6SkSpanIPK7GrGlyphES6_IKN4skvx3VecILi2EsEEEEEEDaDpOT_"}
!143 = distinct !{!143, !144, !"_Z9SkMakeZipIJRPA4_N12_GLOBAL__N_112ARGB2DVertexE6SkSpanIPK7GrGlyphES5_IKN4skvx3VecILi2EsEEEEEDaDpOT_: argument 0"}
!144 = distinct !{!144, !"_Z9SkMakeZipIJRPA4_N12_GLOBAL__N_112ARGB2DVertexE6SkSpanIPK7GrGlyphES5_IKN4skvx3VecILi2EsEEEEEDaDpOT_"}
!145 = distinct !{!145, !146, !"_ZZNK12_GLOBAL__N_123DirectMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_2clIPA4_NS_12ARGB2DVertexEEEDaT_: argument 0"}
!146 = distinct !{!146, !"_ZZNK12_GLOBAL__N_123DirectMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_2clIPA4_NS_12ARGB2DVertexEEEDaT_"}
!147 = !{!148}
!148 = distinct !{!148, !149, !"_ZZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_3clIPA4_NS_12ARGB2DVertexEEEDaT_: argument 0"}
!149 = distinct !{!149, !"_ZZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_3clIPA4_NS_12ARGB2DVertexEEEDaT_"}
!150 = !{!151}
!151 = distinct !{!151, !152, !"_ZZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_3clIPA4_NS_12Mask2DVertexEEEDaT_: argument 0"}
!152 = distinct !{!152, !"_ZZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_3clIPA4_NS_12Mask2DVertexEEEDaT_"}
!153 = !{!154}
!154 = distinct !{!154, !155, !"_ZZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_3clIPA4_NS_12ARGB3DVertexEEEDaT_: argument 0"}
!155 = distinct !{!155, !"_ZZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_3clIPA4_NS_12ARGB3DVertexEEEDaT_"}
!156 = !{!157}
!157 = distinct !{!157, !158, !"_ZZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_3clIPA4_NS_12Mask3DVertexEEEDaT_: argument 0"}
!158 = distinct !{!158, !"_ZZNK12_GLOBAL__N_128TransformedMaskSubRunNoCache14fillVertexDataEPviijRK8SkMatrix7SkIRectENK3$_3clIPA4_NS_12Mask3DVertexEEEDaT_"}
