; ModuleID = '../../third_party/opus/src/celt/cwrs.c'
source_filename = "../../third_party/opus/src/celt/cwrs.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.ec_ctx = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [23 x i8] c"assertion failed: _k>0\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"../../third_party/opus/src/celt/cwrs.c\00", align 1
@CELT_PVQ_U_ROW = internal unnamed_addr constant [15 x i32*] [i32* getelementptr inbounds ([1272 x i32], [1272 x i32]* @CELT_PVQ_U_DATA, i32 0, i32 0), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @CELT_PVQ_U_DATA to i8*), i64 704) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @CELT_PVQ_U_DATA to i8*), i64 1404) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @CELT_PVQ_U_DATA to i8*), i64 2100) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @CELT_PVQ_U_DATA to i8*), i64 2792) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @CELT_PVQ_U_DATA to i8*), i64 3480) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @CELT_PVQ_U_DATA to i8*), i64 4164) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @CELT_PVQ_U_DATA to i8*), i64 4524) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @CELT_PVQ_U_DATA to i8*), i64 4712) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @CELT_PVQ_U_DATA to i8*), i64 4828) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @CELT_PVQ_U_DATA to i8*), i64 4904) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @CELT_PVQ_U_DATA to i8*), i64 4960) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @CELT_PVQ_U_DATA to i8*), i64 4992) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @CELT_PVQ_U_DATA to i8*), i64 5016) to i32*), i32* bitcast (i8* getelementptr (i8, i8* bitcast ([1272 x i32]* @CELT_PVQ_U_DATA to i8*), i64 5028) to i32*)], align 16
@.str.2 = private unnamed_addr constant [24 x i8] c"assertion failed: _n>=2\00", align 1
@CELT_PVQ_U_DATA = internal constant [1272 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 35, i32 37, i32 39, i32 41, i32 43, i32 45, i32 47, i32 49, i32 51, i32 53, i32 55, i32 57, i32 59, i32 61, i32 63, i32 65, i32 67, i32 69, i32 71, i32 73, i32 75, i32 77, i32 79, i32 81, i32 83, i32 85, i32 87, i32 89, i32 91, i32 93, i32 95, i32 97, i32 99, i32 101, i32 103, i32 105, i32 107, i32 109, i32 111, i32 113, i32 115, i32 117, i32 119, i32 121, i32 123, i32 125, i32 127, i32 129, i32 131, i32 133, i32 135, i32 137, i32 139, i32 141, i32 143, i32 145, i32 147, i32 149, i32 151, i32 153, i32 155, i32 157, i32 159, i32 161, i32 163, i32 165, i32 167, i32 169, i32 171, i32 173, i32 175, i32 177, i32 179, i32 181, i32 183, i32 185, i32 187, i32 189, i32 191, i32 193, i32 195, i32 197, i32 199, i32 201, i32 203, i32 205, i32 207, i32 209, i32 211, i32 213, i32 215, i32 217, i32 219, i32 221, i32 223, i32 225, i32 227, i32 229, i32 231, i32 233, i32 235, i32 237, i32 239, i32 241, i32 243, i32 245, i32 247, i32 249, i32 251, i32 253, i32 255, i32 257, i32 259, i32 261, i32 263, i32 265, i32 267, i32 269, i32 271, i32 273, i32 275, i32 277, i32 279, i32 281, i32 283, i32 285, i32 287, i32 289, i32 291, i32 293, i32 295, i32 297, i32 299, i32 301, i32 303, i32 305, i32 307, i32 309, i32 311, i32 313, i32 315, i32 317, i32 319, i32 321, i32 323, i32 325, i32 327, i32 329, i32 331, i32 333, i32 335, i32 337, i32 339, i32 341, i32 343, i32 345, i32 347, i32 349, i32 351, i32 13, i32 25, i32 41, i32 61, i32 85, i32 113, i32 145, i32 181, i32 221, i32 265, i32 313, i32 365, i32 421, i32 481, i32 545, i32 613, i32 685, i32 761, i32 841, i32 925, i32 1013, i32 1105, i32 1201, i32 1301, i32 1405, i32 1513, i32 1625, i32 1741, i32 1861, i32 1985, i32 2113, i32 2245, i32 2381, i32 2521, i32 2665, i32 2813, i32 2965, i32 3121, i32 3281, i32 3445, i32 3613, i32 3785, i32 3961, i32 4141, i32 4325, i32 4513, i32 4705, i32 4901, i32 5101, i32 5305, i32 5513, i32 5725, i32 5941, i32 6161, i32 6385, i32 6613, i32 6845, i32 7081, i32 7321, i32 7565, i32 7813, i32 8065, i32 8321, i32 8581, i32 8845, i32 9113, i32 9385, i32 9661, i32 9941, i32 10225, i32 10513, i32 10805, i32 11101, i32 11401, i32 11705, i32 12013, i32 12325, i32 12641, i32 12961, i32 13285, i32 13613, i32 13945, i32 14281, i32 14621, i32 14965, i32 15313, i32 15665, i32 16021, i32 16381, i32 16745, i32 17113, i32 17485, i32 17861, i32 18241, i32 18625, i32 19013, i32 19405, i32 19801, i32 20201, i32 20605, i32 21013, i32 21425, i32 21841, i32 22261, i32 22685, i32 23113, i32 23545, i32 23981, i32 24421, i32 24865, i32 25313, i32 25765, i32 26221, i32 26681, i32 27145, i32 27613, i32 28085, i32 28561, i32 29041, i32 29525, i32 30013, i32 30505, i32 31001, i32 31501, i32 32005, i32 32513, i32 33025, i32 33541, i32 34061, i32 34585, i32 35113, i32 35645, i32 36181, i32 36721, i32 37265, i32 37813, i32 38365, i32 38921, i32 39481, i32 40045, i32 40613, i32 41185, i32 41761, i32 42341, i32 42925, i32 43513, i32 44105, i32 44701, i32 45301, i32 45905, i32 46513, i32 47125, i32 47741, i32 48361, i32 48985, i32 49613, i32 50245, i32 50881, i32 51521, i32 52165, i32 52813, i32 53465, i32 54121, i32 54781, i32 55445, i32 56113, i32 56785, i32 57461, i32 58141, i32 58825, i32 59513, i32 60205, i32 60901, i32 61601, i32 63, i32 129, i32 231, i32 377, i32 575, i32 833, i32 1159, i32 1561, i32 2047, i32 2625, i32 3303, i32 4089, i32 4991, i32 6017, i32 7175, i32 8473, i32 9919, i32 11521, i32 13287, i32 15225, i32 17343, i32 19649, i32 22151, i32 24857, i32 27775, i32 30913, i32 34279, i32 37881, i32 41727, i32 45825, i32 50183, i32 54809, i32 59711, i32 64897, i32 70375, i32 76153, i32 82239, i32 88641, i32 95367, i32 102425, i32 109823, i32 117569, i32 125671, i32 134137, i32 142975, i32 152193, i32 161799, i32 171801, i32 182207, i32 193025, i32 204263, i32 215929, i32 228031, i32 240577, i32 253575, i32 267033, i32 280959, i32 295361, i32 310247, i32 325625, i32 341503, i32 357889, i32 374791, i32 392217, i32 410175, i32 428673, i32 447719, i32 467321, i32 487487, i32 508225, i32 529543, i32 551449, i32 573951, i32 597057, i32 620775, i32 645113, i32 670079, i32 695681, i32 721927, i32 748825, i32 776383, i32 804609, i32 833511, i32 863097, i32 893375, i32 924353, i32 956039, i32 988441, i32 1021567, i32 1055425, i32 1090023, i32 1125369, i32 1161471, i32 1198337, i32 1235975, i32 1274393, i32 1313599, i32 1353601, i32 1394407, i32 1436025, i32 1478463, i32 1521729, i32 1565831, i32 1610777, i32 1656575, i32 1703233, i32 1750759, i32 1799161, i32 1848447, i32 1898625, i32 1949703, i32 2001689, i32 2054591, i32 2108417, i32 2163175, i32 2218873, i32 2275519, i32 2333121, i32 2391687, i32 2451225, i32 2511743, i32 2573249, i32 2635751, i32 2699257, i32 2763775, i32 2829313, i32 2895879, i32 2963481, i32 3032127, i32 3101825, i32 3172583, i32 3244409, i32 3317311, i32 3391297, i32 3466375, i32 3542553, i32 3619839, i32 3698241, i32 3777767, i32 3858425, i32 3940223, i32 4023169, i32 4107271, i32 4192537, i32 4278975, i32 4366593, i32 4455399, i32 4545401, i32 4636607, i32 4729025, i32 4822663, i32 4917529, i32 5013631, i32 5110977, i32 5209575, i32 5309433, i32 5410559, i32 5512961, i32 5616647, i32 5721625, i32 5827903, i32 5935489, i32 6044391, i32 6154617, i32 6266175, i32 6379073, i32 6493319, i32 6608921, i32 6725887, i32 6844225, i32 6963943, i32 7085049, i32 7207551, i32 321, i32 681, i32 1289, i32 2241, i32 3649, i32 5641, i32 8361, i32 11969, i32 16641, i32 22569, i32 29961, i32 39041, i32 50049, i32 63241, i32 78889, i32 97281, i32 118721, i32 143529, i32 172041, i32 204609, i32 241601, i32 283401, i32 330409, i32 383041, i32 441729, i32 506921, i32 579081, i32 658689, i32 746241, i32 842249, i32 947241, i32 1061761, i32 1186369, i32 1321641, i32 1468169, i32 1626561, i32 1797441, i32 1981449, i32 2179241, i32 2391489, i32 2618881, i32 2862121, i32 3121929, i32 3399041, i32 3694209, i32 4008201, i32 4341801, i32 4695809, i32 5071041, i32 5468329, i32 5888521, i32 6332481, i32 6801089, i32 7295241, i32 7815849, i32 8363841, i32 8940161, i32 9545769, i32 10181641, i32 10848769, i32 11548161, i32 12280841, i32 13047849, i32 13850241, i32 14689089, i32 15565481, i32 16480521, i32 17435329, i32 18431041, i32 19468809, i32 20549801, i32 21675201, i32 22846209, i32 24064041, i32 25329929, i32 26645121, i32 28010881, i32 29428489, i32 30899241, i32 32424449, i32 34005441, i32 35643561, i32 37340169, i32 39096641, i32 40914369, i32 42794761, i32 44739241, i32 46749249, i32 48826241, i32 50971689, i32 53187081, i32 55473921, i32 57833729, i32 60268041, i32 62778409, i32 65366401, i32 68033601, i32 70781609, i32 73612041, i32 76526529, i32 79526721, i32 82614281, i32 85790889, i32 89058241, i32 92418049, i32 95872041, i32 99421961, i32 103069569, i32 106816641, i32 110664969, i32 114616361, i32 118672641, i32 122835649, i32 127107241, i32 131489289, i32 135983681, i32 140592321, i32 145317129, i32 150160041, i32 155123009, i32 160208001, i32 165417001, i32 170752009, i32 176215041, i32 181808129, i32 187533321, i32 193392681, i32 199388289, i32 205522241, i32 211796649, i32 218213641, i32 224775361, i32 231483969, i32 238341641, i32 245350569, i32 252512961, i32 259831041, i32 267307049, i32 274943241, i32 282741889, i32 290705281, i32 298835721, i32 307135529, i32 315607041, i32 324252609, i32 333074601, i32 342075401, i32 351257409, i32 360623041, i32 370174729, i32 379914921, i32 389846081, i32 399970689, i32 410291241, i32 420810249, i32 431530241, i32 442453761, i32 453583369, i32 464921641, i32 476471169, i32 488234561, i32 500214441, i32 512413449, i32 524834241, i32 537479489, i32 550351881, i32 563454121, i32 576788929, i32 590359041, i32 604167209, i32 618216201, i32 632508801, i32 1683, i32 3653, i32 7183, i32 13073, i32 22363, i32 36365, i32 56695, i32 85305, i32 124515, i32 177045, i32 246047, i32 335137, i32 448427, i32 590557, i32 766727, i32 982729, i32 1244979, i32 1560549, i32 1937199, i32 2383409, i32 2908411, i32 3522221, i32 4235671, i32 5060441, i32 6009091, i32 7095093, i32 8332863, i32 9737793, i32 11326283, i32 13115773, i32 15124775, i32 17372905, i32 19880915, i32 22670725, i32 25765455, i32 29189457, i32 32968347, i32 37129037, i32 41699767, i32 46710137, i32 52191139, i32 58175189, i32 64696159, i32 71789409, i32 79491819, i32 87841821, i32 96879431, i32 106646281, i32 117185651, i32 128542501, i32 140763503, i32 153897073, i32 167993403, i32 183104493, i32 199284183, i32 216588185, i32 235074115, i32 254801525, i32 275831935, i32 298228865, i32 322057867, i32 347386557, i32 374284647, i32 402823977, i32 433078547, i32 465124549, i32 499040399, i32 534906769, i32 572806619, i32 612825229, i32 655050231, i32 699571641, i32 746481891, i32 795875861, i32 847850911, i32 902506913, i32 959946283, i32 1020274013, i32 1083597703, i32 1150027593, i32 1219676595, i32 1292660325, i32 1369097135, i32 1449108145, i32 1532817275, i32 1620351277, i32 1711839767, i32 1807415257, i32 1907213187, i32 2011371957, i32 2120032959, i32 8989, i32 19825, i32 40081, i32 75517, i32 134245, i32 227305, i32 369305, i32 579125, i32 880685, i32 1303777, i32 1884961, i32 2668525, i32 3707509, i32 5064793, i32 6814249, i32 9041957, i32 11847485, i32 15345233, i32 19665841, i32 24957661, i32 31388293, i32 39146185, i32 48442297, i32 59511829, i32 72616013, i32 88043969, i32 106114625, i32 127178701, i32 151620757, i32 179861305, i32 212358985, i32 249612805, i32 292164445, i32 340600625, i32 395555537, i32 457713341, i32 527810725, i32 606639529, i32 695049433, i32 793950709, i32 904317037, i32 1027188385, i32 1163673953, i32 1314955181, i32 1482288821, i32 1667010073, i32 1870535785, i32 2094367717, i32 48639, i32 108545, i32 224143, i32 433905, i32 795455, i32 1392065, i32 2340495, i32 3800305, i32 5984767, i32 9173505, i32 13726991, i32 20103025, i32 28875327, i32 40754369, i32 56610575, i32 77500017, i32 104692735, i32 139703809, i32 184327311, i32 240673265, i32 311207743, i32 398796225, i32 506750351, i32 638878193, i32 799538175, i32 993696769, i32 1226990095, i32 1505789553, i32 1837271615, i32 -2065475391, i32 265729, i32 598417, i32 1256465, i32 2485825, i32 4673345, i32 8405905, i32 14546705, i32 24331777, i32 39490049, i32 62390545, i32 96220561, i32 145198913, i32 214828609, i32 312193553, i32 446304145, i32 628496897, i32 872893441, i32 1196924561, i32 1621925137, i32 -2121161151, i32 1462563, i32 3317445, i32 7059735, i32 14218905, i32 27298155, i32 50250765, i32 89129247, i32 152951073, i32 254831667, i32 413442773, i32 654862247, i32 1014889769, i32 1541911931, i32 -1994557667, i32 -919756625, i32 8097453, i32 18474633, i32 39753273, i32 81270333, i32 158819253, i32 298199265, i32 540279585, i32 948062325, i32 1616336765, i32 45046719, i32 103274625, i32 224298231, i32 464387817, i32 921406335, i32 1759885185, i32 -1046740201, i32 251595969, i32 579168825, i32 1267854873, i32 -1641318271, i32 1409933619], align 16
@.str.3 = private unnamed_addr constant [23 x i8] c"assertion failed: _n>1\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @encode_pulses(i32* nocapture readonly, i32, i32, %struct.ec_ctx*) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %4
  tail call void @celt_fatal(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 459) #3
  unreachable

7:                                                ; preds = %4
  %8 = icmp sgt i32 %1, 1
  br i1 %8, label %10, label %9

9:                                                ; preds = %7
  tail call void @celt_fatal(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 444) #3
  unreachable

10:                                               ; preds = %7
  %11 = add nsw i32 %1, -1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i32, i32* %0, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = lshr i32 %14, 31
  %16 = icmp slt i32 %14, 0
  %17 = sub nsw i32 0, %14
  %18 = select i1 %16, i32 %17, i32 %14
  %19 = sext i32 %1 to i64
  %20 = add nsw i64 %19, -1
  br label %21

21:                                               ; preds = %61, %10
  %22 = phi i64 [ %25, %61 ], [ %20, %10 ]
  %23 = phi i32 [ %62, %61 ], [ %15, %10 ]
  %24 = phi i32 [ %45, %61 ], [ %18, %10 ]
  %25 = add nsw i64 %22, -1
  %26 = sub nsw i64 %19, %25
  %27 = zext i32 %24 to i64
  %28 = icmp ult i64 %26, %27
  %29 = trunc i64 %26 to i32
  %30 = select i1 %28, i32 %29, i32 %24
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [15 x i32*], [15 x i32*]* @CELT_PVQ_U_ROW, i64 0, i64 %31
  %33 = load i32*, i32** %32, align 8
  %34 = icmp ugt i64 %26, %27
  %35 = select i1 %34, i32 %29, i32 %24
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %33, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, %23
  %40 = getelementptr inbounds i32, i32* %0, i64 %25
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %41, 0
  %43 = sub nsw i32 0, %41
  %44 = select i1 %42, i32 %43, i32 %41
  %45 = add nuw nsw i32 %44, %24
  br i1 %42, label %46, label %61

46:                                               ; preds = %21
  %47 = add nuw nsw i32 %45, 1
  %48 = zext i32 %45 to i64
  %49 = icmp ugt i64 %26, %48
  %50 = select i1 %49, i32 %47, i32 %29
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [15 x i32*], [15 x i32*]* @CELT_PVQ_U_ROW, i64 0, i64 %51
  %53 = load i32*, i32** %52, align 8
  %54 = zext i32 %47 to i64
  %55 = icmp ugt i64 %26, %54
  %56 = select i1 %55, i32 %29, i32 %47
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %53, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, %39
  br label %61

61:                                               ; preds = %46, %21
  %62 = phi i32 [ %60, %46 ], [ %39, %21 ]
  %63 = icmp sgt i64 %25, 0
  br i1 %63, label %21, label %64

64:                                               ; preds = %61
  %65 = icmp slt i32 %1, %2
  %66 = select i1 %65, i32 %1, i32 %2
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [15 x i32*], [15 x i32*]* @CELT_PVQ_U_ROW, i64 0, i64 %67
  %69 = load i32*, i32** %68, align 8
  %70 = icmp sgt i32 %1, %2
  %71 = select i1 %70, i32 %1, i32 %2
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %69, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = add nsw i32 %2, 1
  %76 = icmp sgt i32 %75, %1
  %77 = select i1 %76, i32 %1, i32 %75
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [15 x i32*], [15 x i32*]* @CELT_PVQ_U_ROW, i64 0, i64 %78
  %80 = load i32*, i32** %79, align 8
  %81 = icmp slt i32 %75, %1
  %82 = select i1 %81, i32 %1, i32 %75
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i32, i32* %80, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = add i32 %85, %74
  tail call void @ec_enc_uint(%struct.ec_ctx* %3, i32 %62, i32 %86) #4
  ret void
}

; Function Attrs: noreturn
declare void @celt_fatal(i8*, i8*, i32) local_unnamed_addr #1

declare void @ec_enc_uint(%struct.ec_ctx*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden float @decode_pulses(i32* nocapture, i32, i32, %struct.ec_ctx*) local_unnamed_addr #0 {
  %5 = icmp slt i32 %1, %2
  %6 = select i1 %5, i32 %1, i32 %2
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [15 x i32*], [15 x i32*]* @CELT_PVQ_U_ROW, i64 0, i64 %7
  %9 = load i32*, i32** %8, align 8
  %10 = icmp sgt i32 %1, %2
  %11 = select i1 %10, i32 %1, i32 %2
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i32, i32* %9, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = add nsw i32 %2, 1
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [15 x i32*], [15 x i32*]* @CELT_PVQ_U_ROW, i64 0, i64 %18
  %20 = load i32*, i32** %19, align 8
  %21 = icmp slt i32 %15, %1
  %22 = select i1 %21, i32 %1, i32 %15
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i32, i32* %20, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %25, %14
  %27 = tail call i32 @ec_dec_uint(%struct.ec_ctx* %3, i32 %26) #4
  %28 = icmp sgt i32 %2, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %4
  tail call void @celt_fatal(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 469) #3
  unreachable

30:                                               ; preds = %4
  %31 = icmp sgt i32 %1, 1
  br i1 %31, label %32, label %36

32:                                               ; preds = %30
  %33 = icmp eq i32 %1, 2
  br i1 %33, label %136, label %34

34:                                               ; preds = %32
  %35 = sext i32 %1 to i64
  br label %37

36:                                               ; preds = %30
  tail call void @celt_fatal(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 470) #3
  unreachable

37:                                               ; preds = %129, %34
  %38 = phi i64 [ %35, %34 ], [ %134, %129 ]
  %39 = phi float [ 0.000000e+00, %34 ], [ %132, %129 ]
  %40 = phi i32* [ %0, %34 ], [ %133, %129 ]
  %41 = phi i32 [ %27, %34 ], [ %131, %129 ]
  %42 = phi i32 [ %2, %34 ], [ %130, %129 ]
  %43 = sext i32 %42 to i64
  %44 = icmp sgt i64 %38, %43
  br i1 %44, label %87, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds [15 x i32*], [15 x i32*]* @CELT_PVQ_U_ROW, i64 0, i64 %38
  %47 = load i32*, i32** %46, align 8
  %48 = add nsw i32 %42, 1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, i32* %47, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = icmp uge i32 %41, %51
  %53 = sext i1 %52 to i32
  %54 = and i32 %51, %53
  %55 = sub i32 %41, %54
  %56 = getelementptr inbounds i32, i32* %47, i64 %38
  %57 = load i32, i32* %56, align 4
  %58 = icmp ugt i32 %57, %55
  br i1 %58, label %59, label %67

59:                                               ; preds = %45, %59
  %60 = phi i64 [ %61, %59 ], [ %38, %45 ]
  %61 = add nsw i64 %60, -1
  %62 = getelementptr inbounds [15 x i32*], [15 x i32*]* @CELT_PVQ_U_ROW, i64 0, i64 %61
  %63 = load i32*, i32** %62, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 %38
  %65 = load i32, i32* %64, align 4
  %66 = icmp ugt i32 %65, %55
  br i1 %66, label %59, label %73

67:                                               ; preds = %45, %67
  %68 = phi i64 [ %72, %67 ], [ %43, %45 ]
  %69 = getelementptr inbounds i32, i32* %47, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = icmp ugt i32 %70, %55
  %72 = add i64 %68, -1
  br i1 %71, label %67, label %73

73:                                               ; preds = %67, %59
  %74 = phi i64 [ %61, %59 ], [ %68, %67 ]
  %75 = phi i32 [ %65, %59 ], [ %70, %67 ]
  %76 = trunc i64 %74 to i32
  %77 = sub i32 %55, %75
  %78 = add i32 %42, %53
  %79 = sub i32 %78, %76
  %80 = xor i32 %79, %53
  %81 = trunc i32 %80 to i16
  %82 = shl i32 %80, 16
  %83 = ashr exact i32 %82, 16
  store i32 %83, i32* %40, align 4
  %84 = sitofp i16 %81 to float
  %85 = fmul float %84, %84
  %86 = fadd float %39, %85
  br label %129

87:                                               ; preds = %37
  %88 = getelementptr inbounds [15 x i32*], [15 x i32*]* @CELT_PVQ_U_ROW, i64 0, i64 %43
  %89 = load i32*, i32** %88, align 8
  %90 = getelementptr inbounds i32, i32* %89, i64 %38
  %91 = load i32, i32* %90, align 4
  %92 = add i32 %42, 1
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [15 x i32*], [15 x i32*]* @CELT_PVQ_U_ROW, i64 0, i64 %93
  %95 = load i32*, i32** %94, align 8
  %96 = getelementptr inbounds i32, i32* %95, i64 %38
  %97 = load i32, i32* %96, align 4
  %98 = icmp uge i32 %41, %91
  %99 = icmp ult i32 %41, %97
  %100 = and i1 %98, %99
  br i1 %100, label %101, label %103

101:                                              ; preds = %87
  %102 = sub i32 %41, %91
  store i32 0, i32* %40, align 4
  br label %129

103:                                              ; preds = %87
  %104 = icmp uge i32 %41, %97
  %105 = sext i1 %104 to i32
  %106 = and i32 %97, %105
  %107 = sub i32 %41, %106
  br label %108

108:                                              ; preds = %108, %103
  %109 = phi i64 [ %110, %108 ], [ %43, %103 ]
  %110 = add nsw i64 %109, -1
  %111 = getelementptr inbounds [15 x i32*], [15 x i32*]* @CELT_PVQ_U_ROW, i64 0, i64 %110
  %112 = load i32*, i32** %111, align 8
  %113 = getelementptr inbounds i32, i32* %112, i64 %38
  %114 = load i32, i32* %113, align 4
  %115 = icmp ult i32 %107, %114
  br i1 %115, label %108, label %116

116:                                              ; preds = %108
  %117 = trunc i64 %109 to i32
  %118 = trunc i64 %110 to i32
  %119 = sub i32 %107, %114
  %120 = add i32 %92, %105
  %121 = sub i32 %120, %117
  %122 = xor i32 %121, %105
  %123 = trunc i32 %122 to i16
  %124 = shl i32 %122, 16
  %125 = ashr exact i32 %124, 16
  store i32 %125, i32* %40, align 4
  %126 = sitofp i16 %123 to float
  %127 = fmul float %126, %126
  %128 = fadd float %39, %127
  br label %129

129:                                              ; preds = %116, %101, %73
  %130 = phi i32 [ %76, %73 ], [ %42, %101 ], [ %118, %116 ]
  %131 = phi i32 [ %77, %73 ], [ %102, %101 ], [ %119, %116 ]
  %132 = phi float [ %86, %73 ], [ %39, %101 ], [ %128, %116 ]
  %133 = getelementptr inbounds i32, i32* %40, i64 1
  %134 = add nsw i64 %38, -1
  %135 = icmp sgt i64 %134, 2
  br i1 %135, label %37, label %136

136:                                              ; preds = %129, %32
  %137 = phi i32 [ %2, %32 ], [ %130, %129 ]
  %138 = phi i32 [ %27, %32 ], [ %131, %129 ]
  %139 = phi i32* [ %0, %32 ], [ %133, %129 ]
  %140 = phi float [ 0.000000e+00, %32 ], [ %132, %129 ]
  %141 = shl nsw i32 %137, 1
  %142 = or i32 %141, 1
  %143 = icmp uge i32 %138, %142
  %144 = sext i1 %143 to i32
  %145 = and i32 %142, %144
  %146 = sub i32 %138, %145
  %147 = add i32 %146, 1
  %148 = lshr i32 %147, 1
  %149 = icmp eq i32 %148, 0
  %150 = and i32 %147, 1
  %151 = select i1 %149, i32 %146, i32 %150
  %152 = add i32 %137, %144
  %153 = sub i32 %152, %148
  %154 = xor i32 %153, %144
  %155 = trunc i32 %154 to i16
  %156 = shl i32 %154, 16
  %157 = ashr exact i32 %156, 16
  %158 = getelementptr inbounds i32, i32* %139, i64 1
  store i32 %157, i32* %139, align 4
  %159 = sitofp i16 %155 to float
  %160 = fmul float %159, %159
  %161 = fadd float %140, %160
  %162 = sub nsw i32 0, %151
  %163 = sub i32 %148, %151
  %164 = xor i32 %163, %162
  %165 = trunc i32 %164 to i16
  %166 = shl i32 %164, 16
  %167 = ashr exact i32 %166, 16
  store i32 %167, i32* %158, align 4
  %168 = sitofp i16 %165 to float
  %169 = fmul float %168, %168
  %170 = fadd float %161, %169
  ret float %170
}

declare i32 @ec_dec_uint(%struct.ec_ctx*, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
