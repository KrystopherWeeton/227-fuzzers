; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_base_audio_context.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_base_audio_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.252 }
%class.scoped_refptr.252 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.253" }
%"struct.std::__1::atomic.253" = type { %"struct.std::__1::__atomic_base.254" }
%"struct.std::__1::__atomic_base.254" = type { %"struct.std::__1::__atomic_base.255" }
%"struct.std::__1::__atomic_base.255" = type { %"struct.std::__1::__cxx_atomic_impl.256" }
%"struct.std::__1::__cxx_atomic_impl.256" = type { %"struct.std::__1::__cxx_atomic_base_impl.257" }
%"struct.std::__1::__cxx_atomic_base_impl.257" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.356" }
%"struct.std::__1::atomic.356" = type { %"struct.std::__1::__atomic_base.357" }
%"struct.std::__1::__atomic_base.357" = type { %"struct.std::__1::__atomic_base.358" }
%"struct.std::__1::__atomic_base.358" = type { %"struct.std::__1::__cxx_atomic_impl.359" }
%"struct.std::__1::__cxx_atomic_impl.359" = type { %"struct.std::__1::__cxx_atomic_base_impl.360" }
%"struct.std::__1::__cxx_atomic_base_impl.360" = type { i32 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::AttributeConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i16, [6 x i8] }>
%"class.base::span.181" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.184, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.184 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.188", %"class.blink::HeapHashMap.195", %"class.std::__1::unique_ptr.205", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.217", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.220" }
%"class.blink::HeapHashMap.188" = type { %"class.WTF::HashMap.191" }
%"class.WTF::HashMap.191" = type { %"class.WTF::HashTable.192" }
%"class.WTF::HashTable.192" = type <{ %"struct.WTF::KeyValuePair.194"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.194" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.195" = type { %"class.WTF::HashMap.198" }
%"class.WTF::HashMap.198" = type { %"class.WTF::HashTable.199" }
%"class.WTF::HashTable.199" = type <{ %"struct.WTF::KeyValuePair.201"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.201" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.202" }
%"class.blink::TraceWrapperV8Reference.202" = type { %"class.v8::TracedReference.203" }
%"class.v8::TracedReference.203" = type { %"class.v8::BasicTracedReference.204" }
%"class.v8::BasicTracedReference.204" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.208" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.217" = type { %"class.v8::Persistent.218" }
%"class.v8::Persistent.218" = type { %"class.v8::PersistentBase.219" }
%"class.v8::PersistentBase.219" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.220" = type { %"class.WTF::HashMap.223" }
%"class.WTF::HashMap.223" = type { %"class.WTF::HashTable.224" }
%"class.WTF::HashTable.224" = type <{ %"struct.WTF::KeyValuePair.226"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.226" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.227" }
%"class.blink::Persistent.227" = type { %"class.blink::PersistentBase.228" }
%"class.blink::PersistentBase.228" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.277", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.286", %"class.blink::Member.288", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.297", %"class.blink::Member.303", %"class.blink::Member.305", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.229" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.229" = type { %"class.WTF::HashMap.232" }
%"class.WTF::HashMap.232" = type { %"class.WTF::HashTable.233" }
%"class.WTF::HashTable.233" = type <{ %"struct.WTF::KeyValuePair.235"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.235" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.241" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.238" }
%"class.WTF::HashTable.238" = type <{ %"class.blink::WeakMember.240"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.240" = type opaque
%"class.blink::Supplementable.241" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.242" }
%"class.blink::HeapHashMap.242" = type { %"class.WTF::HashMap.245" }
%"class.WTF::HashMap.245" = type { %"class.WTF::HashTable.246" }
%"class.WTF::HashTable.246" = type <{ %"struct.WTF::KeyValuePair.248"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.248" = type { i8*, %"class.blink::Member.307" }
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.309" }
%"class.blink::Member.309" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.249, %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.265", %"class.blink::Member.271", i32, [4 x i8], %"class.WTF::HashSet.273", i32, i32 }
%class.scoped_refptr.249 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.250", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.258 }
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.258 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.271" = type { %"class.blink::MemberBase.272" }
%"class.blink::MemberBase.272" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.273" = type { %"class.WTF::HashTable.274" }
%"class.WTF::HashTable.274" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.277" = type { %"class.blink::MemberBase.278" }
%"class.blink::MemberBase.278" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.281" }
%"class.WTF::Vector.281" = type { %"class.WTF::VectorBuffer.282" }
%"class.WTF::VectorBuffer.282" = type { %"class.WTF::VectorBufferBase.283" }
%"class.WTF::VectorBufferBase.283" = type { %"class.blink::Member.284"*, i32, i32 }
%"class.blink::Member.284" = type opaque
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.288" = type { %"class.blink::MemberBase.289" }
%"class.blink::MemberBase.289" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.290", i32, i32 }
%"class.blink::HeapHashMap.290" = type { %"class.WTF::HashMap.293" }
%"class.WTF::HashMap.293" = type { %"class.WTF::HashTable.294" }
%"class.WTF::HashTable.294" = type <{ %"struct.WTF::KeyValuePair.296"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.296" = type opaque
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::BaseAudioContext" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.350", %"class.blink::HeapVector.408", i8, %class.scoped_refptr.390, i8, %"class.blink::Member.430", i8, %class.scoped_refptr.355, i32, %"class.blink::AsyncAudioDecoder", [3 x i8], %"class.blink::HeapHashSet.509", %"class.blink::Member.515", %"class.blink::Member.515", %"class.blink::Member.515", %"class.blink::Member.515", %class.scoped_refptr.461, %"class.blink::Member.522", %"class.blink::WorkerThread"* }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.325" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.313" }
%"class.blink::HeapVector.313" = type { %"class.WTF::Vector.316" }
%"class.WTF::Vector.316" = type { %"class.WTF::VectorBuffer.317" }
%"class.WTF::VectorBuffer.317" = type { %"class.WTF::VectorBufferBase.318", [32 x i8] }
%"class.WTF::VectorBufferBase.318" = type { %"struct.std::__1::pair.319"*, i32, i32 }
%"struct.std::__1::pair.319" = type { %"class.WTF::AtomicString", %"class.blink::Member.320" }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::HeapVector.322"* }
%"class.blink::HeapVector.322" = type opaque
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.WTF::Vector.328"* }
%"class.WTF::Vector.328" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.332" }
%"class.blink::WeakMember.332" = type { %"class.blink::MemberBase.333" }
%"class.blink::MemberBase.333" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::InspectorHelperMixin" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.334", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.334" = type { %"class.blink::MemberBase.335" }
%"class.blink::MemberBase.335" = type { %"class.blink::AudioGraphTracer"* }
%"class.blink::AudioGraphTracer" = type { %"class.blink::Supplement.338", %"class.blink::Member.341", %"class.blink::HeapHashSet.343" }
%"class.blink::Supplement.338" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.556", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.570", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.572", %"class.blink::Member.576", %"class.blink::Member.578", %"class.blink::Member.580", %"class.blink::Member.582", %"class.blink::Member.584", %"class.blink::Member.586", %"class.blink::Member.588", %"class.blink::HeapObserverSet.590", %"class.blink::Member.598", %"class.blink::Member.600", %"class.blink::Member.602", %"class.blink::Member.604", %"class.blink::Member.606", %"class.blink::Member.608", %"class.blink::Member.610", %"class.blink::Member.612", %"class.blink::Member.614", %"class.blink::Member.616", %"class.blink::Member.618", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.654", %"class.blink::Member.339", %"class.blink::Member.339", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.662", %"class.std::__1::unique_ptr.668", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.556" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.557" }
%"class.blink::HeapHashMap.557" = type { %"class.WTF::HashMap.560" }
%"class.WTF::HashMap.560" = type { %"class.WTF::HashTable.561" }
%"class.WTF::HashTable.561" = type <{ %"struct.WTF::KeyValuePair.563"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.563" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.564" }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.339", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.590" = type { i32, [4 x i8], %"class.blink::HeapHashSet.591" }
%"class.blink::HeapHashSet.591" = type { %"class.WTF::HashSet.594" }
%"class.WTF::HashSet.594" = type { %"class.WTF::HashTable.595" }
%"class.WTF::HashTable.595" = type <{ %"class.blink::WeakMember.597"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.597" = type opaque
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.610" = type { %"class.blink::MemberBase.611" }
%"class.blink::MemberBase.611" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.612" = type { %"class.blink::MemberBase.613" }
%"class.blink::MemberBase.613" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.618" = type { %"class.blink::MemberBase.619" }
%"class.blink::MemberBase.619" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.620" }
%"class.WTF::Deque.620" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.623" }
%"class.WTF::VectorBuffer.623" = type { %"class.WTF::VectorBufferBase.624" }
%"class.WTF::VectorBufferBase.624" = type { %"class.std::__1::unique_ptr.625"*, i32, i32 }
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.631", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.631" = type { %"class.std::__1::__bitset.632" }
%"class.std::__1::__bitset.632" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.633" }
%"class.absl::optional.633" = type { %"class.absl::optional_internal::optional_data.634" }
%"class.absl::optional_internal::optional_data.634" = type { %"class.absl::optional_internal::optional_data_base.635" }
%"class.absl::optional_internal::optional_data_base.635" = type { %"class.absl::optional_internal::optional_data_dtor_base.636" }
%"class.absl::optional_internal::optional_data_dtor_base.636" = type { i8, %union.anon.637 }
%union.anon.637 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.638", i64, %"class.absl::optional.643", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.638" = type { %"class.absl::optional_internal::optional_data.639" }
%"class.absl::optional_internal::optional_data.639" = type { %"class.absl::optional_internal::optional_data_base.640" }
%"class.absl::optional_internal::optional_data_base.640" = type { %"class.absl::optional_internal::optional_data_dtor_base.641" }
%"class.absl::optional_internal::optional_data_dtor_base.641" = type { i8, %union.anon.642 }
%union.anon.642 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.643" = type { %"class.absl::optional_internal::optional_data.644" }
%"class.absl::optional_internal::optional_data.644" = type { %"class.absl::optional_internal::optional_data_base.645" }
%"class.absl::optional_internal::optional_data_base.645" = type { %"class.absl::optional_internal::optional_data_dtor_base.646" }
%"class.absl::optional_internal::optional_data_dtor_base.646" = type { i8, %union.anon.647 }
%union.anon.647 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.648" }
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.654" = type { %"class.WTF::HashSet.657" }
%"class.WTF::HashSet.657" = type { %"class.WTF::HashTable.658" }
%"class.WTF::HashTable.658" = type <{ %"class.blink::WeakMember.660"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.660" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.661 }
%class.scoped_refptr.661 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.362", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.362" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.356" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.363" }
%"struct.std::__1::atomic.363" = type { %"struct.std::__1::__atomic_base.364" }
%"struct.std::__1::__atomic_base.364" = type { %"struct.std::__1::__atomic_base.365" }
%"struct.std::__1::__atomic_base.365" = type { %"struct.std::__1::__cxx_atomic_impl.366" }
%"struct.std::__1::__cxx_atomic_impl.366" = type { %"struct.std::__1::__cxx_atomic_base_impl.367" }
%"struct.std::__1::__cxx_atomic_base_impl.367" = type { i8 }
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.252 }
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::InspectorWebAudioAgent"* }
%"class.blink::InspectorWebAudioAgent" = type opaque
%"class.blink::HeapHashSet.343" = type { %"class.WTF::HashSet.346" }
%"class.WTF::HashSet.346" = type { %"class.WTF::HashTable.347" }
%"class.WTF::HashTable.347" = type <{ %"class.blink::WeakMember.349"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.349" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.350" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::AudioDestinationNode"* }
%"class.blink::AudioDestinationNode" = type { %"class.blink::AudioNode" }
%"class.blink::AudioNode" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration.352", %"class.blink::Member.353", %class.scoped_refptr.355, %class.scoped_refptr.372, %"class.blink::HeapVector.392", %"class.blink::HeapVector.400" }
%"class.blink::ThreadState::PrefinalizerRegistration.352" = type { i8 }
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::BaseAudioContext"* }
%class.scoped_refptr.372 = type { %"class.blink::AudioHandler"* }
%"class.blink::AudioHandler" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted.462", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.355, %"class.WTF::Vector.467", %"class.WTF::Vector.473", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.462" = type { %"class.base::RefCountedThreadSafe.463" }
%"class.base::RefCountedThreadSafe.463" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.464" }
%"class.blink::PersistentBase.464" = type { %"class.blink::AudioNode"*, %"class.blink::PersistentNodePtr.465" }
%"class.blink::PersistentNodePtr.465" = type { %"class.blink::PersistentNode"* }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::BaseAudioContext"* }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"class.std::__1::unique_ptr.470"*, i32, i32 }
%"class.std::__1::unique_ptr.470" = type opaque
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475" }
%"class.WTF::VectorBufferBase.475" = type { %"class.std::__1::unique_ptr.476"*, i32, i32 }
%"class.std::__1::unique_ptr.476" = type opaque
%"class.blink::HeapVector.392" = type { %"class.WTF::Vector.395" }
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397" }
%"class.WTF::VectorBufferBase.397" = type { %"class.blink::Member.398"*, i32, i32 }
%"class.blink::Member.398" = type opaque
%"class.blink::HeapVector.400" = type { %"class.WTF::Vector.403" }
%"class.WTF::Vector.403" = type { %"class.WTF::VectorBuffer.404" }
%"class.WTF::VectorBuffer.404" = type { %"class.WTF::VectorBufferBase.405" }
%"class.WTF::VectorBufferBase.405" = type { %"class.blink::Member.406"*, i32, i32 }
%"class.blink::Member.406" = type opaque
%"class.blink::HeapVector.408" = type { %"class.WTF::Vector.411" }
%"class.WTF::Vector.411" = type { %"class.WTF::VectorBuffer.412" }
%"class.WTF::VectorBuffer.412" = type { %"class.WTF::VectorBufferBase.413" }
%"class.WTF::VectorBufferBase.413" = type { %"class.blink::Member.414"*, i32, i32 }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.418", i32, %"class.blink::Member.419", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.422", %"class.blink::SelfKeepAlive.426" }
%"class.blink::ThreadState::PrefinalizerRegistration.418" = type { i8 }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptState"* }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.421 }
%class.scoped_refptr.421 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.419", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.422", %class.scoped_refptr.425 }
%class.scoped_refptr.425 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.422" = type { %"class.v8::TracedReference.423" }
%"class.v8::TracedReference.423" = type { %"class.v8::BasicTracedReference.424" }
%"class.v8::BasicTracedReference.424" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.426" = type { %"class.blink::Persistent.427" }
%"class.blink::Persistent.427" = type { %"class.blink::PersistentBase.428" }
%"class.blink::PersistentBase.428" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%class.scoped_refptr.390 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.391" }>
%"class.base::RefCountedThreadSafe.391" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::AudioListener"* }
%"class.blink::AudioListener" = type { %"class.blink::ScriptWrappable", %"class.blink::InspectorHelperMixin", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D", double, i8, [7 x i8], %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.WTF::Mutex", %"class.WTF::HashSet.493", %class.scoped_refptr.508 }
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::AudioParam"* }
%"class.blink::AudioParam" = type { %"class.blink::ScriptWrappable", %"class.blink::InspectorHelperMixin", %class.scoped_refptr.434, %"class.blink::Member.353", %class.scoped_refptr.355 }
%class.scoped_refptr.434 = type { %"class.blink::AudioParamHandler"* }
%"class.blink::AudioParamHandler" = type { %"class.blink::AudioSummingJunction.base", %"class.WTF::ThreadSafeRefCounted.435", i32, %"class.WTF::String", %"struct.std::__1::atomic.442", float, i32, i32, float, float, %"class.blink::AudioParamTimeline", %class.scoped_refptr.461, %class.scoped_refptr.479 }
%"class.blink::AudioSummingJunction.base" = type <{ i32 (...)**, %class.scoped_refptr.355, %"class.WTF::HashSet.386", %"class.WTF::Vector.437", i8 }>
%"class.WTF::HashSet.386" = type { %"class.WTF::HashTable.387" }
%"class.WTF::HashTable.387" = type <{ %"class.blink::AudioNodeOutput"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioNodeOutput" = type opaque
%"class.WTF::Vector.437" = type { %"class.WTF::VectorBuffer.438" }
%"class.WTF::VectorBuffer.438" = type { %"class.WTF::VectorBufferBase.439" }
%"class.WTF::VectorBufferBase.439" = type { %"class.blink::AudioNodeOutput"**, i32, i32 }
%"class.WTF::ThreadSafeRefCounted.435" = type { %"class.base::RefCountedThreadSafe.436" }
%"class.base::RefCountedThreadSafe.436" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.442" = type { %"struct.std::__1::__atomic_base.443" }
%"struct.std::__1::__atomic_base.443" = type { %"struct.std::__1::__cxx_atomic_impl.444" }
%"struct.std::__1::__cxx_atomic_impl.444" = type { %"struct.std::__1::__cxx_atomic_base_impl.445" }
%"struct.std::__1::__cxx_atomic_base_impl.445" = type { float }
%"class.blink::AudioParamTimeline" = type <{ %"class.WTF::Vector.446", %"class.WTF::HashSet.457", %"class.WTF::Mutex", float, [4 x i8] }>
%"class.WTF::Vector.446" = type { %"class.WTF::VectorBuffer.447" }
%"class.WTF::VectorBuffer.447" = type { %"class.WTF::VectorBufferBase.448" }
%"class.WTF::VectorBufferBase.448" = type { %"class.std::__1::unique_ptr.449"*, i32, i32 }
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.blink::AudioParamTimeline::ParamEvent"* }
%"class.blink::AudioParamTimeline::ParamEvent" = type <{ i32, float, double, float, [4 x i8], double, double, double, %"class.WTF::Vector.549", double, float, [4 x i8], %"class.std::__1::unique_ptr.449", i8, [7 x i8] }>
%"class.WTF::Vector.549" = type { %"class.WTF::VectorBuffer.550" }
%"class.WTF::VectorBuffer.550" = type { %"class.WTF::VectorBufferBase.551" }
%"class.WTF::VectorBufferBase.551" = type { float*, i32, i32 }
%"class.WTF::HashSet.457" = type { %"class.WTF::HashTable.458" }
%"class.WTF::HashTable.458" = type <{ %"class.blink::AudioParamTimeline::ParamEvent"**, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.479 = type { %"class.blink::AudioBus"* }
%"class.blink::AudioBus" = type { %"class.WTF::ThreadSafeRefCounted.480", i32, %"class.WTF::Vector.482", i32, float }
%"class.WTF::ThreadSafeRefCounted.480" = type { %"class.base::RefCountedThreadSafe.481" }
%"class.base::RefCountedThreadSafe.481" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.482" = type { %"class.WTF::VectorBuffer.483" }
%"class.WTF::VectorBuffer.483" = type { %"class.WTF::VectorBufferBase.484", [64 x i8] }
%"class.WTF::VectorBufferBase.484" = type { %"class.blink::AudioChannel"*, i32, i32 }
%"class.blink::AudioChannel" = type <{ i64, float*, %"class.std::__1::unique_ptr.485", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.blink::AudioArray"* }
%"class.blink::FloatPoint3D" = type { float, float, float }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.WTF::HashSet.493" = type { %"class.WTF::HashTable.494" }
%"class.WTF::HashTable.494" = type <{ %"class.blink::PannerHandler"**, i32, i32, i32, [4 x i8] }>
%"class.blink::PannerHandler" = type { %"class.blink::AudioHandler.base", %"class.blink::CrossThreadWeakPersistent", %"class.std::__1::unique_ptr.502", i32, i32, i8, i8, %"class.blink::DistanceEffect", %"class.blink::ConeEffect", double, double, float, %class.scoped_refptr.434, %class.scoped_refptr.434, %class.scoped_refptr.434, %class.scoped_refptr.434, %class.scoped_refptr.434, %class.scoped_refptr.434, %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D", %"class.WTF::Mutex" }
%"class.blink::AudioHandler.base" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted.462", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.355, %"class.WTF::Vector.467", %"class.WTF::Vector.473", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32 }>
%"class.blink::CrossThreadWeakPersistent" = type { %"class.blink::PersistentBase.497" }
%"class.blink::PersistentBase.497" = type { %"class.blink::AudioListener"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.498" }
%"struct.std::__1::atomic.498" = type { %"struct.std::__1::__atomic_base.499" }
%"struct.std::__1::__atomic_base.499" = type { %"struct.std::__1::__cxx_atomic_impl.500" }
%"struct.std::__1::__cxx_atomic_impl.500" = type { %"struct.std::__1::__cxx_atomic_base_impl.501" }
%"struct.std::__1::__cxx_atomic_base_impl.501" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.blink::Panner"* }
%"class.blink::Panner" = type { i32 (...)** }
%"class.blink::DistanceEffect" = type { i32, double, double, double }
%"class.blink::ConeEffect" = type { double, double, double }
%class.scoped_refptr.508 = type { %"class.blink::HRTFDatabaseLoader"* }
%"class.blink::HRTFDatabaseLoader" = type opaque
%class.scoped_refptr.355 = type { %"class.blink::DeferredTaskHandler"* }
%"class.blink::DeferredTaskHandler" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.base::SupportsWeakPtr", %"class.WTF::HashSet.368", %"class.WTF::Vector.373", i8, [3 x i8], i32, %"class.WTF::HashSet.378", %"class.WTF::HashSet.378", %"class.WTF::HashSet.382", %"class.WTF::HashSet.386", %"class.WTF::Vector.373", %"class.WTF::Vector.373", %"class.WTF::Vector.373", %"class.WTF::Vector.373", i8, [7 x i8], %"class.WTF::HashSet.368", %"class.WTF::Vector.373", %class.scoped_refptr.390, %"class.WTF::RecursiveMutex", %"class.WTF::Mutex", %"struct.std::__1::atomic.356", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.361 }
%class.scoped_refptr.361 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.WTF::HashSet.378" = type { %"class.WTF::HashTable.379" }
%"class.WTF::HashTable.379" = type <{ %"class.blink::AudioHandler"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.382" = type { %"class.WTF::HashTable.383" }
%"class.WTF::HashTable.383" = type <{ %"class.blink::AudioSummingJunction"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioSummingJunction" = type <{ i32 (...)**, %class.scoped_refptr.355, %"class.WTF::HashSet.386", %"class.WTF::Vector.437", i8, [7 x i8] }>
%"class.WTF::HashSet.368" = type { %"class.WTF::HashTable.369" }
%"class.WTF::HashTable.369" = type <{ %class.scoped_refptr.372*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.373" = type { %"class.WTF::VectorBuffer.374" }
%"class.WTF::VectorBuffer.374" = type { %"class.WTF::VectorBufferBase.375" }
%"class.WTF::VectorBufferBase.375" = type { %class.scoped_refptr.372*, i32, i32 }
%"class.WTF::RecursiveMutex" = type { %"class.WTF::MutexBase" }
%"class.blink::AsyncAudioDecoder" = type { i8 }
%"class.blink::HeapHashSet.509" = type { %"class.WTF::HashSet.512" }
%"class.WTF::HashSet.512" = type { %"class.WTF::HashTable.513" }
%"class.WTF::HashTable.513" = type <{ %"class.blink::Member.414"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::PeriodicWave"* }
%"class.blink::PeriodicWave" = type { %"class.blink::ScriptWrappable", i64, float, i32, float, float, float, %"class.WTF::Vector.517" }
%"class.WTF::Vector.517" = type { %"class.WTF::VectorBuffer.518" }
%"class.WTF::VectorBuffer.518" = type { %"class.WTF::VectorBufferBase.519" }
%"class.WTF::VectorBufferBase.519" = type { %"class.std::__1::unique_ptr.485"*, i32, i32 }
%class.scoped_refptr.461 = type { %"class.blink::AudioDestinationHandler"* }
%"class.blink::AudioDestinationHandler" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"struct.std::__1::atomic", i8, [7 x i8] }>
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::AudioWorklet"* }
%"class.blink::AudioWorklet" = type { %"class.blink::Worklet", i8, %"class.blink::Member.353" }
%"class.blink::Worklet" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.524", %"class.blink::HeapVector.525", %"class.blink::Member.533", %"class.blink::HeapHashSet.542" }
%"class.blink::ThreadState::PrefinalizerRegistration.524" = type { i8 }
%"class.blink::HeapVector.525" = type { %"class.WTF::Vector.528" }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { %"class.blink::Member.531"*, i32, i32 }
%"class.blink::Member.531" = type opaque
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::WorkletModuleResponsesMap"* }
%"class.blink::WorkletModuleResponsesMap" = type { i8, [7 x i8], %"class.WTF::HashMap.537", %"class.WTF::Mutex" }
%"class.WTF::HashMap.537" = type { %"class.WTF::HashTable.538" }
%"class.WTF::HashTable.538" = type <{ %"struct.WTF::KeyValuePair.541"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.541" = type opaque
%"class.blink::HeapHashSet.542" = type { %"class.WTF::HashSet.545" }
%"class.WTF::HashSet.545" = type { %"class.WTF::HashTable.546" }
%"class.WTF::HashTable.546" = type <{ %"class.blink::Member.548"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.548" = type opaque
%"class.blink::WorkerThread" = type opaque
%"class.v8::Value" = type { i8 }
%"class.v8::Number" = type { i8 }
%"class.blink::IdentifiableToken" = type { i64 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.695", %"class.WTF::HashMap.695", %"class.WTF::HashMap.700", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.752", %"class.blink::Persistent.227", i8, i8, i8, %"class.WTF::Vector.763", %"class.std::__1::unique_ptr.770", %"class.blink::Persistent.776", %"class.blink::Persistent.780", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.677", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.683", %"class.std::__1::unique_ptr.689", i32, i32 }
%"class.std::__1::unique_ptr.677" = type { %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.683" = type { %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.695" = type { %"class.WTF::HashTable.696" }
%"class.WTF::HashTable.696" = type <{ %"struct.WTF::KeyValuePair.699"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.699" = type opaque
%"class.WTF::HashMap.700" = type { %"class.WTF::HashTable.701" }
%"class.WTF::HashTable.701" = type <{ %"struct.WTF::KeyValuePair.704"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.704" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.713", %class.scoped_refptr.252 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.708", i8* }
%"class.WTF::HashMap.708" = type { %"class.WTF::HashTable.709" }
%"class.WTF::HashTable.709" = type <{ %"struct.WTF::KeyValuePair.712"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.712" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.713" = type { %"class.v8::PersistentValueMapBase.714" }
%"class.v8::PersistentValueMapBase.714" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.715", i8* }
%"class.WTF::HashMap.715" = type { %"class.WTF::HashTable.716" }
%"class.WTF::HashTable.716" = type <{ %"struct.WTF::KeyValuePair.719"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.719" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.720", %"class.WTF::String", %"class.std::__1::unique_ptr.722" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.725", %"class.std::__1::unique_ptr.736", %"class.WTF::Vector.742", i8, i32 }
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.WTF::Vector.728"* }
%"class.WTF::Vector.728" = type { %"class.WTF::VectorBuffer.729" }
%"class.WTF::VectorBuffer.729" = type { %"class.WTF::VectorBufferBase.730" }
%"class.WTF::VectorBufferBase.730" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.742" = type { %"class.WTF::VectorBuffer.743" }
%"class.WTF::VectorBuffer.743" = type { %"class.WTF::VectorBufferBase.730", [32 x i8] }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent.217", %"class.WTF::HashMap.755" }
%"class.WTF::HashMap.755" = type { %"class.WTF::HashTable.756" }
%"class.WTF::HashTable.756" = type <{ %"struct.WTF::KeyValuePair.759"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.759" = type opaque
%"class.WTF::Vector.763" = type { %"class.WTF::VectorBuffer.764" }
%"class.WTF::VectorBuffer.764" = type { %"class.WTF::VectorBufferBase.765" }
%"class.WTF::VectorBufferBase.765" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.766 }
%class.scoped_refptr.766 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.767", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.767" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.776" = type { %"class.blink::PersistentBase.777" }
%"class.blink::PersistentBase.777" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.780" = type { %"class.blink::PersistentBase.781" }
%"class.blink::PersistentBase.781" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.784", i64 }
%"class.blink::HeapVector.784" = type { %"class.WTF::Vector.787" }
%"class.WTF::Vector.787" = type { %"class.WTF::VectorBuffer.788" }
%"class.WTF::VectorBuffer.788" = type { %"class.WTF::VectorBufferBase.789" }
%"class.WTF::VectorBufferBase.789" = type { %"struct.std::__1::pair.790"*, i32, i32 }
%"struct.std::__1::pair.790" = type { %"class.blink::UntracedMember.791", %"class.blink::Member.793" }
%"class.blink::UntracedMember.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.798" }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { i64 }
%"class.blink::JSBasedEventListener" = type { %"class.blink::EventListener" }
%"class.blink::JSEventHandler" = type <{ %"class.blink::JSBasedEventListener", %"class.blink::Member.803", i32, [4 x i8] }>
%"class.blink::Member.803" = type { %"class.blink::MemberBase.804" }
%"class.blink::MemberBase.804" = type { %"class.blink::V8EventHandlerNonNull"* }
%"class.blink::V8EventHandlerNonNull" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.419", %"class.blink::Member.419" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.422" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::AnalyserNode" = type { %"class.blink::AudioBasicInspectorNode" }
%"class.blink::AudioBasicInspectorNode" = type { %"class.blink::AudioNode" }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::BiquadFilterNode" = type { %"class.blink::AudioNode", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.432" }
%"class.v8::Uint32" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.blink::AudioBuffer" = type { %"class.blink::ScriptWrappable", float, i32, %"class.blink::HeapVector.809" }
%"class.blink::HeapVector.809" = type { %"class.WTF::Vector.812" }
%"class.WTF::Vector.812" = type { %"class.WTF::VectorBuffer.813" }
%"class.WTF::VectorBuffer.813" = type { %"class.WTF::VectorBufferBase.814" }
%"class.WTF::VectorBufferBase.814" = type { %"class.blink::Member.815"*, i32, i32 }
%"class.blink::Member.815" = type { %"class.blink::MemberBase.816" }
%"class.blink::MemberBase.816" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.817" }
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::AudioBufferSourceNode" = type { %"class.blink::AudioScheduledSourceNode", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.823" }
%"class.blink::AudioScheduledSourceNode" = type { %"class.blink::AudioNode", %"class.blink::ActiveScriptWrappable.822" }
%"class.blink::ActiveScriptWrappable.822" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::AudioBuffer"* }
%"class.blink::ChannelMergerNode" = type { %"class.blink::AudioNode" }
%"class.blink::ChannelSplitterNode" = type { %"class.blink::AudioNode" }
%"class.blink::ConstantSourceNode" = type { %"class.blink::AudioScheduledSourceNode", %"class.blink::Member.432" }
%"class.blink::ConvolverNode" = type { %"class.blink::AudioNode", %"class.blink::Member.823" }
%"class.blink::DelayNode" = type { %"class.blink::AudioNode", %"class.blink::Member.432" }
%"class.blink::DynamicsCompressorNode" = type { %"class.blink::AudioNode", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.432" }
%"class.blink::GainNode" = type { %"class.blink::AudioNode", %"class.blink::Member.432" }
%"class.WTF::Vector.825" = type { %"class.WTF::VectorBuffer.826" }
%"class.WTF::VectorBuffer.826" = type { %"class.WTF::VectorBufferBase.827" }
%"class.WTF::VectorBufferBase.827" = type { double*, i32, i32 }
%"class.blink::IIRFilterNode" = type { %"class.blink::AudioNode" }
%"class.blink::OscillatorNode" = type { %"class.blink::AudioScheduledSourceNode", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.515" }
%"class.blink::PannerNode" = type { %"class.blink::AudioNode", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.430" }
%"class.blink::PeriodicWaveConstraints" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ScriptProcessorNode" = type { %"class.blink::AudioNode", %"class.blink::ActiveScriptWrappable.863", %"class.blink::HeapVector.864", %"class.blink::HeapVector.864", %"class.blink::Member.823", %"class.blink::Member.823" }
%"class.blink::ActiveScriptWrappable.863" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::HeapVector.864" = type { %"class.WTF::Vector.867" }
%"class.WTF::Vector.867" = type { %"class.WTF::VectorBuffer.868" }
%"class.WTF::VectorBuffer.868" = type { %"class.WTF::VectorBufferBase.869" }
%"class.WTF::VectorBufferBase.869" = type { %"class.blink::Member.823"*, i32, i32 }
%"class.blink::StereoPannerNode" = type { %"class.blink::AudioNode", %"class.blink::Member.432" }
%"class.blink::WaveShaperNode" = type { %"class.blink::AudioNode" }
%"class.blink::ExceptionToRejectPromiseScope" = type { %"class.v8::FunctionCallbackInfo"*, %"class.blink::ExceptionState"* }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.419", %"class.blink::ScriptValue" }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::V8DecodeSuccessCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::V8DecodeErrorCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.838 }
%union.anon.838 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.177", %"class.v8::Local.674", %"class.v8::Local.831", %"class.v8::Local.831", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local.177" = type { %"class.v8::Object"* }
%"class.v8::Local.674" = type { %"class.v8::Value"* }
%"class.v8::Local.831" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"class.v8::Array" = type { i8 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_30IDLFloatingPointNumberTypeBaseIdLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_30IDLFloatingPointNumberTypeBaseIdLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm = comdat any

$_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_ = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm = comdat any

$_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_23V8DecodeSuccessCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_21V8DecodeErrorCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink29ExceptionToRejectPromiseScopeD2Ev = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [17 x i8] c"BaseAudioContext\00", align 1
@_ZN5blink13V8EventTarget18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink18V8BaseAudioContext18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink18V8BaseAudioContext24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* @_ZN5blink18V8BaseAudioContext33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* @_ZN5blink13V8EventTarget18wrapper_type_info_E, i8 24 }, align 8
@_ZN5blink16BaseAudioContext18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink18V8BaseAudioContext18wrapper_type_info_E, align 8
@_ZZN5blink18V8BaseAudioContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable = internal constant [6 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context31DestinationAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context31CurrentTimeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context30SampleRateAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context28ListenerAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context25StateAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context33OnstatechangeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context33OnstatechangeAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [12 x i8] c"destination\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"currentTime\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"sampleRate\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"listener\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"state\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"onstatechange\00", align 1
@_ZZN5blink18V8BaseAudioContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [19 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context31CreateAnalyserOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context35CreateBiquadFilterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context29CreateBufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context35CreateBufferSourceOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context36CreateChannelMergerOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context38CreateChannelSplitterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context37CreateConstantSourceOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context32CreateConvolverOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context28CreateDelayOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context41CreateDynamicsCompressorOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context27CreateGainOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context32CreateIIRFilterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context33CreateOscillatorOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context29CreatePannerOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context35CreatePeriodicWaveOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context38CreateScriptProcessorOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context35CreateStereoPannerOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context33CreateWaveShaperOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context32DecodeAudioDataOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 -24, i8 0 }], align 16
@.str.7 = private unnamed_addr constant [15 x i8] c"createAnalyser\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"createBiquadFilter\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"createBuffer\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"createBufferSource\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"createChannelMerger\00", align 1
@.str.12 = private unnamed_addr constant [22 x i8] c"createChannelSplitter\00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"createConstantSource\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"createConvolver\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"createDelay\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"createDynamicsCompressor\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"createGain\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"createIIRFilter\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"createOscillator\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"createPanner\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"createPeriodicWave\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"createScriptProcessor\00", align 1
@.str.23 = private unnamed_addr constant [19 x i8] c"createStereoPanner\00", align 1
@.str.24 = private unnamed_addr constant [17 x i8] c"createWaveShaper\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"decodeAudioData\00", align 1
@_ZZN5blink18V8BaseAudioContext33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE15kAttributeTable = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_base_audio_context32AudioWorkletAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }], align 16
@.str.26 = private unnamed_addr constant [13 x i8] c"audioWorklet\00", align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@_ZN5blink16event_type_names12kStatechangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.27 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.28 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.29 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.30 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.31 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv = private unnamed_addr constant [54 x i8] c"const char *WTF::GetStringWithTypeName() [T = double]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv = private unnamed_addr constant [53 x i8] c"const char *WTF::GetStringWithTypeName() [T = float]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.35 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.36 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.37 = private unnamed_addr constant [19 x i8] c"Illegal invocation\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.38 = private unnamed_addr constant [9 x i8] c"Function\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20CallbackFunctionBaseEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CallbackFunctionBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink23V8DecodeSuccessCallbackE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN5blink21V8DecodeErrorCallbackE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.39 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.40 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.41 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8BaseAudioContext24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = alloca %"class.base::span.181", align 8
  %6 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %6) #6
  %8 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %6) #6
  %9 = tail call %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8EventTarget18wrapper_type_info_E, %"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1) #6
  %10 = bitcast %"class.v8::Template"* %9 to %"class.v8::FunctionTemplate"*
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink18V8BaseAudioContext18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %7, %"class.v8::ObjectTemplate"* %8, %"class.v8::FunctionTemplate"* %6, %"class.v8::FunctionTemplate"* %10) #6
  %11 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  %12 = bitcast %"class.v8::ObjectTemplate"* %8 to %"class.v8::Template"*
  %13 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13)
  %14 = bitcast %"class.base::span.181"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  %15 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %6) #6
  %16 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 6, i64* %16, align 8
  %17 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([6 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink18V8BaseAudioContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %17, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %11, %"class.v8::Template"* %12, %"class.v8::Template"* %2, %"class.v8::Signature"* %15, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #6
  %18 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 0, i32 0
  store i64 19, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([19 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink18V8BaseAudioContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %19, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %11, %"class.v8::Template"* %12, %"class.v8::Template"* %2, %"class.v8::Signature"* %15, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8BaseAudioContext33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE(%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64) #0 align 2 {
  %8 = alloca %"class.base::span", align 8
  %9 = trunc i64 %6 to i8
  %10 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %0)
  %11 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %10) #6
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %11, i64 0, i32 6, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  %15 = icmp ne i8 %9, 0
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %23

17:                                               ; preds = %7
  %18 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #6
  %19 = bitcast %"class.v8::Template"* %5 to %"class.v8::FunctionTemplate"*
  %20 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %18, %"class.v8::FunctionTemplate"* %19) #6
  %21 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 0, i32 0
  store i64 1, i64* %21, align 8
  %22 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink18V8BaseAudioContext33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %22, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_6ObjectEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %18, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Object"* %2, %"class.v8::Object"* %3, %"class.v8::Object"* %4, %"class.v8::Signature"* %20, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %8) #6
  br label %23

23:                                               ; preds = %17, %7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8BaseAudioContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span.181", align 8
  %8 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %9 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #6
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 6, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([6 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink18V8BaseAudioContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %11, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #6
  %12 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 0, i32 0
  store i64 19, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([19 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink18V8BaseAudioContext30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %7) #6
  ret void
}

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context31DestinationAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::BaseAudioContext"*
  %25 = tail call %"class.blink::AudioDestinationNode"* @_ZNK5blink16BaseAudioContext11destinationEv(%"class.blink::BaseAudioContext"* %24) #6
  %26 = getelementptr inbounds %"class.blink::AudioDestinationNode", %"class.blink::AudioDestinationNode"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::AudioDestinationNode"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !2

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #6
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #6
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #6
  %49 = bitcast %"class.blink::AudioDestinationNode"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #6
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context31CurrentTimeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 280
  %25 = bitcast i8* %24 to %"class.blink::AudioDestinationHandler"**
  %26 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i64, i64* %27 acquire, align 8
  %29 = uitofp i64 %28 to double
  %30 = bitcast %"class.blink::AudioDestinationHandler"* %26 to double (%"class.blink::AudioDestinationHandler"*)***
  %31 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %30, align 8
  %32 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %31, i64 25
  %33 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %32, align 8
  %34 = tail call double %33(%"class.blink::AudioDestinationHandler"* %26) #6
  %35 = fdiv double %29, %34
  %36 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds i64, i64* %37, i64 3
  %39 = getelementptr inbounds i64, i64* %37, i64 1
  %40 = bitcast i64* %39 to %"class.v8::Isolate"**
  %41 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %40, align 8
  %42 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %41, double %35) #6
  %43 = icmp eq %"class.v8::Number"* %42, null
  %44 = bitcast %"class.v8::Number"* %42 to i64*
  %45 = getelementptr inbounds i64, i64* %37, i64 2
  %46 = select i1 %43, i64* %45, i64* %44, !prof !2
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %38, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context30SampleRateAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::IdentifiableToken", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 3566) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 280
  %43 = bitcast i8* %42 to %"class.blink::AudioDestinationHandler"**
  %44 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %43, align 8
  %45 = bitcast %"class.blink::AudioDestinationHandler"* %44 to double (%"class.blink::AudioDestinationHandler"*)***
  %46 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %45, align 8
  %47 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %46, i64 25
  %48 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %47, align 8
  %49 = tail call double %48(%"class.blink::AudioDestinationHandler"* %44) #6
  %50 = fptrunc double %49 to float
  %51 = fpext float %50 to double
  %52 = load i64*, i64** %3, align 8
  %53 = getelementptr inbounds i64, i64* %52, i64 3
  %54 = getelementptr inbounds i64, i64* %52, i64 1
  %55 = bitcast i64* %54 to %"class.v8::Isolate"**
  %56 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %55, align 8
  %57 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %56, double %51) #6
  %58 = icmp eq %"class.v8::Number"* %57, null
  %59 = bitcast %"class.v8::Number"* %57 to i64*
  %60 = getelementptr inbounds i64, i64* %52, i64 2
  %61 = select i1 %58, i64* %60, i64* %59, !prof !2
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %53, align 8
  %63 = bitcast %"class.blink::IdentifiableToken"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #6
  %64 = bitcast %"class.blink::IdentifiableToken"* %2 to double*
  store double %51, double* %64, align 8
  call void @_ZN5blink13Dactyloscoper19RecordDirectSurfaceEPNS_16ExecutionContextENS_5mojom10WebFeatureERKNS_17IdentifiableTokenE(%"class.blink::ExecutionContext"* %9, i32 3566, %"class.blink::IdentifiableToken"* nonnull dereferenceable(8) %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context28ListenerAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 192
  %25 = bitcast i8* %24 to %"class.blink::AudioListener"**
  %26 = load %"class.blink::AudioListener"*, %"class.blink::AudioListener"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::AudioListener", %"class.blink::AudioListener"* %26, i64 0, i32 0
  %28 = icmp eq %"class.blink::AudioListener"* %26, null
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 3
  br i1 %28, label %32, label %38, !prof !2

32:                                               ; preds = %22
  %33 = getelementptr inbounds i64, i64* %30, i64 1
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 176
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %31, align 8
  br label %61

38:                                               ; preds = %22
  %39 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %40 = load i64*, i64** %2, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 -1
  %42 = bitcast i64* %41 to %"class.v8::Object"*
  %43 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %31, %"class.blink::ScriptWrappable"* nonnull %27, %"class.v8::Object"* %42, %"class.blink::ScriptWrappable"* %39) #6
  br i1 %43, label %61, label %44

44:                                               ; preds = %38
  %45 = load i64*, i64** %2, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = bitcast i64* %46 to %"class.v8::Object"*
  %48 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %47) #6
  %49 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %48) #6
  %50 = bitcast %"class.blink::AudioListener"* %26 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %51 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, i64 7
  %53 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %52, align 8
  %54 = tail call %"class.v8::Value"* %53(%"class.blink::ScriptWrappable"* nonnull %27, %"class.blink::ScriptState"* %49) #6
  %55 = icmp eq %"class.v8::Value"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %44
  %57 = load i64*, i64** %29, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 3
  %59 = bitcast %"class.v8::Value"* %54 to i64*
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %58, align 8
  br label %61

61:                                               ; preds = %32, %38, %44, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context25StateAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::BaseAudioContext"*
  %25 = tail call %"class.WTF::StringImpl"* @_ZNK5blink16BaseAudioContext5stateEv(%"class.blink::BaseAudioContext"* %24) #6
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %22
  %31 = load i64, i64* %28, align 8
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to %"class.blink::V8PerIsolateData"**
  %34 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %34, i64 0, i32 5, i32 0, i32 0, i32 0
  %36 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %35, align 8
  %37 = getelementptr inbounds i64, i64* %27, i64 3
  %38 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %36, i64 0, i32 3, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, %25
  br i1 %40, label %41, label %48

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %36, i64 0, i32 1, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %41
  %46 = inttoptr i64 %43 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %37, align 8
  br label %55

48:                                               ; preds = %30
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %36, i64* %37, %"class.WTF::StringImpl"* nonnull %25) #6
  br label %55

49:                                               ; preds = %22
  %50 = getelementptr inbounds i64, i64* %27, i64 3
  %51 = load i64, i64* %28, align 8
  %52 = add i64 %51, 200
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %50, align 8
  br label %68

55:                                               ; preds = %41, %45, %48
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #6
  br label %68

68:                                               ; preds = %49, %64, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context33OnstatechangeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::EventTarget"*
  %25 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kStatechangeE, align 8
  %26 = tail call %"class.blink::EventListener"* @_ZN5blink11EventTarget25GetAttributeEventListenerERKN3WTF12AtomicStringE(%"class.blink::EventTarget"* %24, %"class.WTF::AtomicString"* dereferenceable(8) %25) #6
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i64, i64* %28, i64 3
  %32 = icmp eq %"class.blink::EventListener"* %26, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %22
  %34 = bitcast %"class.blink::EventListener"* %26 to i1 (%"class.blink::EventListener"*)***
  %35 = load i1 (%"class.blink::EventListener"*)**, i1 (%"class.blink::EventListener"*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::EventListener"*)*, i1 (%"class.blink::EventListener"*)** %35, i64 10
  %37 = load i1 (%"class.blink::EventListener"*)*, i1 (%"class.blink::EventListener"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.blink::EventListener"* nonnull %26) #6
  br i1 %38, label %39, label %53

39:                                               ; preds = %33
  %40 = bitcast %"class.blink::EventListener"* %26 to %"class.blink::JSBasedEventListener"*
  %41 = bitcast %"class.blink::EventListener"* %26 to i1 (%"class.blink::JSBasedEventListener"*)***
  %42 = load i1 (%"class.blink::JSBasedEventListener"*)**, i1 (%"class.blink::JSBasedEventListener"*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::JSBasedEventListener"*)*, i1 (%"class.blink::JSBasedEventListener"*)** %42, i64 16
  %44 = load i1 (%"class.blink::JSBasedEventListener"*)*, i1 (%"class.blink::JSBasedEventListener"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::JSBasedEventListener"* nonnull %40) #6
  br i1 %45, label %46, label %53

46:                                               ; preds = %39
  %47 = bitcast %"class.blink::EventListener"* %26 to %"class.blink::JSEventHandler"*
  %48 = bitcast %"class.blink::EventListener"* %26 to %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)***
  %49 = load %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)**, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*** %48, align 8
  %50 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)** %49, i64 12
  %51 = load %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSEventHandler"*, %"class.blink::EventTarget"*)** %50, align 8
  %52 = tail call %"class.v8::Value"* %51(%"class.blink::JSEventHandler"* nonnull %47, %"class.blink::EventTarget"* dereferenceable(16) %24) #6
  br label %56

53:                                               ; preds = %39, %33, %22
  %54 = add i64 %30, 176
  %55 = inttoptr i64 %54 to %"class.v8::Value"*
  br label %56

56:                                               ; preds = %46, %53
  %57 = phi %"class.v8::Value"* [ %55, %53 ], [ %52, %46 ]
  %58 = icmp eq %"class.v8::Value"* %57, null
  %59 = bitcast %"class.v8::Value"* %57 to i64*
  %60 = getelementptr inbounds i64, i64* %28, i64 2
  %61 = select i1 %58, i64* %60, i64* %59, !prof !2
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context33OnstatechangeAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 160
  %11 = inttoptr i64 %10 to %"class.v8::Value"*
  br label %16

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %14 = bitcast i64** %13 to %"class.v8::Value"**
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %14, align 8
  br label %16

16:                                               ; preds = %5, %12
  %17 = phi %"class.v8::Value"* [ %11, %5 ], [ %15, %12 ]
  %18 = tail call %"class.blink::JSEventHandler"* @_ZN5blink14JSEventHandler12CreateOrNullEN2v85LocalINS1_5ValueEEENS0_11HandlerTypeE(%"class.v8::Value"* %17, i32 0) #6
  %19 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %16, %16, %16
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %16
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::EventTarget"*
  %43 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kStatechangeE, align 8
  %44 = tail call zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"* %42, %"class.WTF::AtomicString"* dereferenceable(8) %43, %"class.blink::EventListener"* %19) #6
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context31CreateAnalyserOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 631) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::BaseAudioContext"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  %54 = call %"class.blink::AnalyserNode"* @_ZN5blink16BaseAudioContext14createAnalyserERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %55 = load i32, i32* %51, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %91

57:                                               ; preds = %40
  %58 = getelementptr inbounds %"class.blink::AnalyserNode", %"class.blink::AnalyserNode"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = icmp eq %"class.blink::AnalyserNode"* %54, null
  %60 = load i64*, i64** %3, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 3
  br i1 %59, label %62, label %68, !prof !2

62:                                               ; preds = %57
  %63 = getelementptr inbounds i64, i64* %60, i64 1
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 176
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %61, align 8
  br label %91

68:                                               ; preds = %57
  %69 = bitcast i8* %41 to %"class.blink::ScriptWrappable"*
  %70 = load i64*, i64** %20, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 -1
  %72 = bitcast i64* %71 to %"class.v8::Object"*
  %73 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %61, %"class.blink::ScriptWrappable"* nonnull %58, %"class.v8::Object"* %72, %"class.blink::ScriptWrappable"* %69) #6
  br i1 %73, label %91, label %74

74:                                               ; preds = %68
  %75 = load i64*, i64** %20, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 -1
  %77 = bitcast i64* %76 to %"class.v8::Object"*
  %78 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %77) #6
  %79 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %78) #6
  %80 = bitcast %"class.blink::AnalyserNode"* %54 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %81 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %81, i64 7
  %83 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %82, align 8
  %84 = call %"class.v8::Value"* %83(%"class.blink::ScriptWrappable"* nonnull %58, %"class.blink::ScriptState"* %79) #6
  %85 = icmp eq %"class.v8::Value"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %74
  %87 = load i64*, i64** %3, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 3
  %89 = bitcast %"class.v8::Value"* %84 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %40, %86, %74, %68, %62
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %93, null
  br i1 %94, label %104, label %95

95:                                               ; preds = %91
  %96 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %97 = bitcast %"class.v8::Isolate"* %96 to %"class.v8::internal::Isolate"*
  %98 = load i64, i64* %93, align 8
  %99 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %97, i64 %98) #6
  %100 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %96) #6
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast i64* %99 to %"class.v8::Value"*
  %103 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %96, %"class.v8::Value"* %102) #6
  br label %104

104:                                              ; preds = %101, %95, %91
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #6
  br label %120

120:                                              ; preds = %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context35CreateBiquadFilterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 632) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::BaseAudioContext"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  %54 = call %"class.blink::BiquadFilterNode"* @_ZN5blink16BaseAudioContext18createBiquadFilterERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %55 = load i32, i32* %51, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %91

57:                                               ; preds = %40
  %58 = getelementptr inbounds %"class.blink::BiquadFilterNode", %"class.blink::BiquadFilterNode"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = icmp eq %"class.blink::BiquadFilterNode"* %54, null
  %60 = load i64*, i64** %3, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 3
  br i1 %59, label %62, label %68, !prof !2

62:                                               ; preds = %57
  %63 = getelementptr inbounds i64, i64* %60, i64 1
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 176
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %61, align 8
  br label %91

68:                                               ; preds = %57
  %69 = bitcast i8* %41 to %"class.blink::ScriptWrappable"*
  %70 = load i64*, i64** %20, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 -1
  %72 = bitcast i64* %71 to %"class.v8::Object"*
  %73 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %61, %"class.blink::ScriptWrappable"* nonnull %58, %"class.v8::Object"* %72, %"class.blink::ScriptWrappable"* %69) #6
  br i1 %73, label %91, label %74

74:                                               ; preds = %68
  %75 = load i64*, i64** %20, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 -1
  %77 = bitcast i64* %76 to %"class.v8::Object"*
  %78 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %77) #6
  %79 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %78) #6
  %80 = bitcast %"class.blink::BiquadFilterNode"* %54 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %81 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %81, i64 7
  %83 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %82, align 8
  %84 = call %"class.v8::Value"* %83(%"class.blink::ScriptWrappable"* nonnull %58, %"class.blink::ScriptState"* %79) #6
  %85 = icmp eq %"class.v8::Value"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %74
  %87 = load i64*, i64** %3, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 3
  %89 = bitcast %"class.v8::Value"* %84 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %40, %86, %74, %68, %62
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %93, null
  br i1 %94, label %104, label %95

95:                                               ; preds = %91
  %96 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %97 = bitcast %"class.v8::Isolate"* %96 to %"class.v8::internal::Isolate"*
  %98 = load i64, i64* %93, align 8
  %99 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %97, i64 %98) #6
  %100 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %96) #6
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast i64* %99 to %"class.v8::Value"*
  %103 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %96, %"class.v8::Value"* %102) #6
  br label %104

104:                                              ; preds = %101, %95, %91
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #6
  br label %120

120:                                              ; preds = %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context29CreateBufferOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #6
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 3
  br i1 %22, label %23, label %43, !prof !2

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %21) #6
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #6
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6
  br label %183

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %62 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  %61 = bitcast i8* %60 to %"class.blink::BaseAudioContext"*
  br label %74

62:                                               ; preds = %43
  %63 = bitcast i64* %46 to %"class.v8::Object"*
  %64 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %63, i32 1) #6
  %65 = load i32, i32* %20, align 8
  %66 = bitcast i8* %64 to %"class.blink::BaseAudioContext"*
  %67 = icmp sgt i32 %65, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %62
  %69 = load i64*, i64** %4, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 1
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 160
  %73 = inttoptr i64 %72 to %"class.v8::Value"*
  br label %79

74:                                               ; preds = %57, %62
  %75 = phi %"class.blink::BaseAudioContext"* [ %61, %57 ], [ %66, %62 ]
  %76 = phi i8* [ %60, %57 ], [ %64, %62 ]
  %77 = bitcast i64** %44 to %"class.v8::Value"**
  %78 = load %"class.v8::Value"*, %"class.v8::Value"** %77, align 8
  br label %79

79:                                               ; preds = %68, %74
  %80 = phi %"class.blink::BaseAudioContext"* [ %66, %68 ], [ %75, %74 ]
  %81 = phi i8* [ %64, %68 ], [ %76, %74 ]
  %82 = phi %"class.v8::Value"* [ %73, %68 ], [ %78, %74 ]
  %83 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %82) #6
  br i1 %83, label %84, label %87, !prof !3

84:                                               ; preds = %79
  %85 = bitcast %"class.v8::Value"* %82 to %"class.v8::Uint32"*
  %86 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %85) #6
  br label %96

87:                                               ; preds = %79
  %88 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %82) #6
  br i1 %88, label %89, label %92, !prof !3

89:                                               ; preds = %87
  %90 = bitcast %"class.v8::Value"* %82 to %"class.v8::Int32"*
  %91 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %90) #6
  br label %96

92:                                               ; preds = %87
  %93 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %82, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %94 = load i32, i32* %17, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %183

96:                                               ; preds = %89, %84, %92
  %97 = phi i32 [ %93, %92 ], [ %91, %89 ], [ %86, %84 ]
  %98 = load i32, i32* %20, align 8
  %99 = icmp sgt i32 %98, 1
  br i1 %99, label %106, label %100

100:                                              ; preds = %96
  %101 = load i64*, i64** %4, align 8
  %102 = getelementptr inbounds i64, i64* %101, i64 1
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %103, 160
  %105 = inttoptr i64 %104 to %"class.v8::Value"*
  br label %110

106:                                              ; preds = %96
  %107 = load i64*, i64** %44, align 8
  %108 = getelementptr inbounds i64, i64* %107, i64 1
  %109 = bitcast i64* %108 to %"class.v8::Value"*
  br label %110

110:                                              ; preds = %100, %106
  %111 = phi %"class.v8::Value"* [ %105, %100 ], [ %109, %106 ]
  %112 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %111) #6
  br i1 %112, label %113, label %116, !prof !3

113:                                              ; preds = %110
  %114 = bitcast %"class.v8::Value"* %111 to %"class.v8::Uint32"*
  %115 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %114) #6
  br label %123

116:                                              ; preds = %110
  %117 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %111) #6
  br i1 %117, label %118, label %121, !prof !3

118:                                              ; preds = %116
  %119 = bitcast %"class.v8::Value"* %111 to %"class.v8::Int32"*
  %120 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %119) #6
  br label %123

121:                                              ; preds = %116
  %122 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %111, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %123

123:                                              ; preds = %113, %118, %121
  %124 = phi i32 [ %115, %113 ], [ %120, %118 ], [ %122, %121 ]
  %125 = load i32, i32* %17, align 8
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %183

127:                                              ; preds = %123
  %128 = load i32, i32* %20, align 8
  %129 = icmp sgt i32 %128, 2
  br i1 %129, label %136, label %130

130:                                              ; preds = %127
  %131 = load i64*, i64** %4, align 8
  %132 = getelementptr inbounds i64, i64* %131, i64 1
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 160
  %135 = inttoptr i64 %134 to %"class.v8::Value"*
  br label %140

136:                                              ; preds = %127
  %137 = load i64*, i64** %44, align 8
  %138 = getelementptr inbounds i64, i64* %137, i64 2
  %139 = bitcast i64* %138 to %"class.v8::Value"*
  br label %140

140:                                              ; preds = %130, %136
  %141 = phi %"class.v8::Value"* [ %135, %130 ], [ %139, %136 ]
  %142 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %141, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %143 = load i32, i32* %17, align 8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %183

145:                                              ; preds = %140
  %146 = call %"class.blink::AudioBuffer"* @_ZN5blink16BaseAudioContext12createBufferEjjfRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %80, i32 %97, i32 %124, float %142, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %147 = load i32, i32* %17, align 8
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %183

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %146, i64 0, i32 0
  %151 = icmp eq %"class.blink::AudioBuffer"* %146, null
  %152 = load i64*, i64** %4, align 8
  %153 = getelementptr inbounds i64, i64* %152, i64 3
  br i1 %151, label %154, label %160, !prof !2

154:                                              ; preds = %149
  %155 = getelementptr inbounds i64, i64* %152, i64 1
  %156 = load i64, i64* %155, align 8
  %157 = add i64 %156, 176
  %158 = inttoptr i64 %157 to i64*
  %159 = load i64, i64* %158, align 8
  store i64 %159, i64* %153, align 8
  br label %183

160:                                              ; preds = %149
  %161 = bitcast i8* %81 to %"class.blink::ScriptWrappable"*
  %162 = load i64*, i64** %44, align 8
  %163 = getelementptr inbounds i64, i64* %162, i64 -1
  %164 = bitcast i64* %163 to %"class.v8::Object"*
  %165 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %153, %"class.blink::ScriptWrappable"* nonnull %150, %"class.v8::Object"* %164, %"class.blink::ScriptWrappable"* %161) #6
  br i1 %165, label %183, label %166

166:                                              ; preds = %160
  %167 = load i64*, i64** %44, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 -1
  %169 = bitcast i64* %168 to %"class.v8::Object"*
  %170 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %169) #6
  %171 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %170) #6
  %172 = bitcast %"class.blink::AudioBuffer"* %146 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %173 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %172, align 8
  %174 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %173, i64 7
  %175 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %174, align 8
  %176 = call %"class.v8::Value"* %175(%"class.blink::ScriptWrappable"* nonnull %150, %"class.blink::ScriptState"* %171) #6
  %177 = icmp eq %"class.v8::Value"* %176, null
  br i1 %177, label %183, label %178

178:                                              ; preds = %166
  %179 = load i64*, i64** %4, align 8
  %180 = getelementptr inbounds i64, i64* %179, i64 3
  %181 = bitcast %"class.v8::Value"* %176 to i64*
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %180, align 8
  br label %183

183:                                              ; preds = %145, %140, %123, %92, %178, %166, %160, %154, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %184 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %185 = load i64*, i64** %184, align 8
  %186 = icmp eq i64* %185, null
  br i1 %186, label %196, label %187

187:                                              ; preds = %183
  %188 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %189 = bitcast %"class.v8::Isolate"* %188 to %"class.v8::internal::Isolate"*
  %190 = load i64, i64* %185, align 8
  %191 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %189, i64 %190) #6
  %192 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %188) #6
  br i1 %192, label %196, label %193

193:                                              ; preds = %187
  %194 = bitcast i64* %191 to %"class.v8::Value"*
  %195 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %188, %"class.v8::Value"* %194) #6
  br label %196

196:                                              ; preds = %193, %187, %183
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %196
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #6
  br label %212

212:                                              ; preds = %196, %208, %211
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context35CreateBufferSourceOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 633) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::BaseAudioContext"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  %54 = call %"class.blink::AudioBufferSourceNode"* @_ZN5blink16BaseAudioContext18createBufferSourceERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %55 = load i32, i32* %51, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %91

57:                                               ; preds = %40
  %58 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = icmp eq %"class.blink::AudioBufferSourceNode"* %54, null
  %60 = load i64*, i64** %3, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 3
  br i1 %59, label %62, label %68, !prof !2

62:                                               ; preds = %57
  %63 = getelementptr inbounds i64, i64* %60, i64 1
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 176
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %61, align 8
  br label %91

68:                                               ; preds = %57
  %69 = bitcast i8* %41 to %"class.blink::ScriptWrappable"*
  %70 = load i64*, i64** %20, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 -1
  %72 = bitcast i64* %71 to %"class.v8::Object"*
  %73 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %61, %"class.blink::ScriptWrappable"* nonnull %58, %"class.v8::Object"* %72, %"class.blink::ScriptWrappable"* %69) #6
  br i1 %73, label %91, label %74

74:                                               ; preds = %68
  %75 = load i64*, i64** %20, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 -1
  %77 = bitcast i64* %76 to %"class.v8::Object"*
  %78 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %77) #6
  %79 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %78) #6
  %80 = bitcast %"class.blink::AudioBufferSourceNode"* %54 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %81 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %81, i64 7
  %83 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %82, align 8
  %84 = call %"class.v8::Value"* %83(%"class.blink::ScriptWrappable"* nonnull %58, %"class.blink::ScriptState"* %79) #6
  %85 = icmp eq %"class.v8::Value"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %74
  %87 = load i64*, i64** %3, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 3
  %89 = bitcast %"class.v8::Value"* %84 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %40, %86, %74, %68, %62
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %93, null
  br i1 %94, label %104, label %95

95:                                               ; preds = %91
  %96 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %97 = bitcast %"class.v8::Isolate"* %96 to %"class.v8::internal::Isolate"*
  %98 = load i64, i64* %93, align 8
  %99 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %97, i64 %98) #6
  %100 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %96) #6
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast i64* %99 to %"class.v8::Value"*
  %103 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %96, %"class.v8::Value"* %102) #6
  br label %104

104:                                              ; preds = %101, %95, %91
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #6
  br label %120

120:                                              ; preds = %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context36CreateChannelMergerOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 634) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::BaseAudioContext"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  %54 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = sext i32 %55 to i64
  br label %57

57:                                               ; preds = %90, %40
  %58 = phi i64 [ %59, %90 ], [ %56, %40 ]
  %59 = add nsw i64 %58, -1
  %60 = icmp sgt i64 %58, 0
  br i1 %60, label %61, label %99

61:                                               ; preds = %57
  %62 = icmp sgt i64 %58, %56
  br i1 %62, label %63, label %69

63:                                               ; preds = %61
  %64 = load i64*, i64** %3, align 8
  %65 = getelementptr inbounds i64, i64* %64, i64 1
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 160
  %68 = inttoptr i64 %67 to %"class.v8::Value"*
  br label %73

69:                                               ; preds = %61
  %70 = load i64*, i64** %20, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 %59
  %72 = bitcast i64* %71 to %"class.v8::Value"*
  br label %73

73:                                               ; preds = %69, %63
  %74 = phi %"class.v8::Value"* [ %68, %63 ], [ %72, %69 ]
  %75 = bitcast %"class.v8::Value"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 3
  %78 = icmp eq i64 %77, 1
  br i1 %78, label %79, label %96

79:                                               ; preds = %73
  %80 = add i64 %76, -1
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = and i64 %76, -4294967296
  %84 = zext i32 %82 to i64
  %85 = or i64 %83, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 67
  br i1 %89, label %90, label %96

90:                                               ; preds = %79
  %91 = add i64 %76, 23
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = and i32 %93, -2
  %95 = icmp eq i32 %94, 10
  br i1 %95, label %57, label %96

96:                                               ; preds = %90, %73, %79
  %97 = trunc i64 %58 to i32
  %98 = icmp slt i32 %97, 1
  br i1 %98, label %99, label %101

99:                                               ; preds = %57, %96
  %100 = call %"class.blink::ChannelMergerNode"* @_ZN5blink16BaseAudioContext19createChannelMergerERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %130

101:                                              ; preds = %96
  %102 = icmp sgt i32 %55, 0
  br i1 %102, label %109, label %103

103:                                              ; preds = %101
  %104 = load i64*, i64** %3, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 1
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, 160
  %108 = inttoptr i64 %107 to %"class.v8::Value"*
  br label %112

109:                                              ; preds = %101
  %110 = bitcast i64** %20 to %"class.v8::Value"**
  %111 = load %"class.v8::Value"*, %"class.v8::Value"** %110, align 8
  br label %112

112:                                              ; preds = %103, %109
  %113 = phi %"class.v8::Value"* [ %108, %103 ], [ %111, %109 ]
  %114 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %113) #6
  br i1 %114, label %115, label %118, !prof !3

115:                                              ; preds = %112
  %116 = bitcast %"class.v8::Value"* %113 to %"class.v8::Uint32"*
  %117 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %116) #6
  br label %127

118:                                              ; preds = %112
  %119 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %113) #6
  br i1 %119, label %120, label %123, !prof !3

120:                                              ; preds = %118
  %121 = bitcast %"class.v8::Value"* %113 to %"class.v8::Int32"*
  %122 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %121) #6
  br label %127

123:                                              ; preds = %118
  %124 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %7, %"class.v8::Value"* %113, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %125 = load i32, i32* %51, align 8
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %168

127:                                              ; preds = %120, %115, %123
  %128 = phi i32 [ %124, %123 ], [ %122, %120 ], [ %117, %115 ]
  %129 = call %"class.blink::ChannelMergerNode"* @_ZN5blink16BaseAudioContext19createChannelMergerEjRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, i32 %128, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %130

130:                                              ; preds = %99, %127
  %131 = phi %"class.blink::ChannelMergerNode"* [ %129, %127 ], [ %100, %99 ]
  %132 = load i32, i32* %51, align 8
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %168

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::ChannelMergerNode", %"class.blink::ChannelMergerNode"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = icmp eq %"class.blink::ChannelMergerNode"* %131, null
  %137 = load i64*, i64** %3, align 8
  %138 = getelementptr inbounds i64, i64* %137, i64 3
  br i1 %136, label %139, label %145, !prof !2

139:                                              ; preds = %134
  %140 = getelementptr inbounds i64, i64* %137, i64 1
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, 176
  %143 = inttoptr i64 %142 to i64*
  %144 = load i64, i64* %143, align 8
  store i64 %144, i64* %138, align 8
  br label %168

145:                                              ; preds = %134
  %146 = bitcast i8* %41 to %"class.blink::ScriptWrappable"*
  %147 = load i64*, i64** %20, align 8
  %148 = getelementptr inbounds i64, i64* %147, i64 -1
  %149 = bitcast i64* %148 to %"class.v8::Object"*
  %150 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %138, %"class.blink::ScriptWrappable"* nonnull %135, %"class.v8::Object"* %149, %"class.blink::ScriptWrappable"* %146) #6
  br i1 %150, label %168, label %151

151:                                              ; preds = %145
  %152 = load i64*, i64** %20, align 8
  %153 = getelementptr inbounds i64, i64* %152, i64 -1
  %154 = bitcast i64* %153 to %"class.v8::Object"*
  %155 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %154) #6
  %156 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %155) #6
  %157 = bitcast %"class.blink::ChannelMergerNode"* %131 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %158 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %157, align 8
  %159 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %158, i64 7
  %160 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %159, align 8
  %161 = call %"class.v8::Value"* %160(%"class.blink::ScriptWrappable"* nonnull %135, %"class.blink::ScriptState"* %156) #6
  %162 = icmp eq %"class.v8::Value"* %161, null
  br i1 %162, label %168, label %163

163:                                              ; preds = %151
  %164 = load i64*, i64** %3, align 8
  %165 = getelementptr inbounds i64, i64* %164, i64 3
  %166 = bitcast %"class.v8::Value"* %161 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %165, align 8
  br label %168

168:                                              ; preds = %123, %130, %163, %151, %145, %139
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %169 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %170 = load i64*, i64** %169, align 8
  %171 = icmp eq i64* %170, null
  br i1 %171, label %181, label %172

172:                                              ; preds = %168
  %173 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %174 = bitcast %"class.v8::Isolate"* %173 to %"class.v8::internal::Isolate"*
  %175 = load i64, i64* %170, align 8
  %176 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %174, i64 %175) #6
  %177 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %173) #6
  br i1 %177, label %181, label %178

178:                                              ; preds = %172
  %179 = bitcast i64* %176 to %"class.v8::Value"*
  %180 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %173, %"class.v8::Value"* %179) #6
  br label %181

181:                                              ; preds = %178, %172, %168
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #6
  br label %197

197:                                              ; preds = %181, %193, %196
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context38CreateChannelSplitterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 635) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::BaseAudioContext"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  %54 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = sext i32 %55 to i64
  br label %57

57:                                               ; preds = %90, %40
  %58 = phi i64 [ %59, %90 ], [ %56, %40 ]
  %59 = add nsw i64 %58, -1
  %60 = icmp sgt i64 %58, 0
  br i1 %60, label %61, label %99

61:                                               ; preds = %57
  %62 = icmp sgt i64 %58, %56
  br i1 %62, label %63, label %69

63:                                               ; preds = %61
  %64 = load i64*, i64** %3, align 8
  %65 = getelementptr inbounds i64, i64* %64, i64 1
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 160
  %68 = inttoptr i64 %67 to %"class.v8::Value"*
  br label %73

69:                                               ; preds = %61
  %70 = load i64*, i64** %20, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 %59
  %72 = bitcast i64* %71 to %"class.v8::Value"*
  br label %73

73:                                               ; preds = %69, %63
  %74 = phi %"class.v8::Value"* [ %68, %63 ], [ %72, %69 ]
  %75 = bitcast %"class.v8::Value"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 3
  %78 = icmp eq i64 %77, 1
  br i1 %78, label %79, label %96

79:                                               ; preds = %73
  %80 = add i64 %76, -1
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = and i64 %76, -4294967296
  %84 = zext i32 %82 to i64
  %85 = or i64 %83, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 67
  br i1 %89, label %90, label %96

90:                                               ; preds = %79
  %91 = add i64 %76, 23
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = and i32 %93, -2
  %95 = icmp eq i32 %94, 10
  br i1 %95, label %57, label %96

96:                                               ; preds = %90, %73, %79
  %97 = trunc i64 %58 to i32
  %98 = icmp slt i32 %97, 1
  br i1 %98, label %99, label %101

99:                                               ; preds = %57, %96
  %100 = call %"class.blink::ChannelSplitterNode"* @_ZN5blink16BaseAudioContext21createChannelSplitterERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %130

101:                                              ; preds = %96
  %102 = icmp sgt i32 %55, 0
  br i1 %102, label %109, label %103

103:                                              ; preds = %101
  %104 = load i64*, i64** %3, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 1
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, 160
  %108 = inttoptr i64 %107 to %"class.v8::Value"*
  br label %112

109:                                              ; preds = %101
  %110 = bitcast i64** %20 to %"class.v8::Value"**
  %111 = load %"class.v8::Value"*, %"class.v8::Value"** %110, align 8
  br label %112

112:                                              ; preds = %103, %109
  %113 = phi %"class.v8::Value"* [ %108, %103 ], [ %111, %109 ]
  %114 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %113) #6
  br i1 %114, label %115, label %118, !prof !3

115:                                              ; preds = %112
  %116 = bitcast %"class.v8::Value"* %113 to %"class.v8::Uint32"*
  %117 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %116) #6
  br label %127

118:                                              ; preds = %112
  %119 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %113) #6
  br i1 %119, label %120, label %123, !prof !3

120:                                              ; preds = %118
  %121 = bitcast %"class.v8::Value"* %113 to %"class.v8::Int32"*
  %122 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %121) #6
  br label %127

123:                                              ; preds = %118
  %124 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %7, %"class.v8::Value"* %113, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %125 = load i32, i32* %51, align 8
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %168

127:                                              ; preds = %120, %115, %123
  %128 = phi i32 [ %124, %123 ], [ %122, %120 ], [ %117, %115 ]
  %129 = call %"class.blink::ChannelSplitterNode"* @_ZN5blink16BaseAudioContext21createChannelSplitterEjRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, i32 %128, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %130

130:                                              ; preds = %99, %127
  %131 = phi %"class.blink::ChannelSplitterNode"* [ %129, %127 ], [ %100, %99 ]
  %132 = load i32, i32* %51, align 8
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %168

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::ChannelSplitterNode", %"class.blink::ChannelSplitterNode"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = icmp eq %"class.blink::ChannelSplitterNode"* %131, null
  %137 = load i64*, i64** %3, align 8
  %138 = getelementptr inbounds i64, i64* %137, i64 3
  br i1 %136, label %139, label %145, !prof !2

139:                                              ; preds = %134
  %140 = getelementptr inbounds i64, i64* %137, i64 1
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, 176
  %143 = inttoptr i64 %142 to i64*
  %144 = load i64, i64* %143, align 8
  store i64 %144, i64* %138, align 8
  br label %168

145:                                              ; preds = %134
  %146 = bitcast i8* %41 to %"class.blink::ScriptWrappable"*
  %147 = load i64*, i64** %20, align 8
  %148 = getelementptr inbounds i64, i64* %147, i64 -1
  %149 = bitcast i64* %148 to %"class.v8::Object"*
  %150 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %138, %"class.blink::ScriptWrappable"* nonnull %135, %"class.v8::Object"* %149, %"class.blink::ScriptWrappable"* %146) #6
  br i1 %150, label %168, label %151

151:                                              ; preds = %145
  %152 = load i64*, i64** %20, align 8
  %153 = getelementptr inbounds i64, i64* %152, i64 -1
  %154 = bitcast i64* %153 to %"class.v8::Object"*
  %155 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %154) #6
  %156 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %155) #6
  %157 = bitcast %"class.blink::ChannelSplitterNode"* %131 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %158 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %157, align 8
  %159 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %158, i64 7
  %160 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %159, align 8
  %161 = call %"class.v8::Value"* %160(%"class.blink::ScriptWrappable"* nonnull %135, %"class.blink::ScriptState"* %156) #6
  %162 = icmp eq %"class.v8::Value"* %161, null
  br i1 %162, label %168, label %163

163:                                              ; preds = %151
  %164 = load i64*, i64** %3, align 8
  %165 = getelementptr inbounds i64, i64* %164, i64 3
  %166 = bitcast %"class.v8::Value"* %161 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %165, align 8
  br label %168

168:                                              ; preds = %123, %130, %163, %151, %145, %139
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %169 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %170 = load i64*, i64** %169, align 8
  %171 = icmp eq i64* %170, null
  br i1 %171, label %181, label %172

172:                                              ; preds = %168
  %173 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %174 = bitcast %"class.v8::Isolate"* %173 to %"class.v8::internal::Isolate"*
  %175 = load i64, i64* %170, align 8
  %176 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %174, i64 %175) #6
  %177 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %173) #6
  br i1 %177, label %181, label %178

178:                                              ; preds = %172
  %179 = bitcast i64* %176 to %"class.v8::Value"*
  %180 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %173, %"class.v8::Value"* %179) #6
  br label %181

181:                                              ; preds = %178, %172, %168
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #6
  br label %197

197:                                              ; preds = %181, %193, %196
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context37CreateConstantSourceOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 1650) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::BaseAudioContext"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  %54 = call %"class.blink::ConstantSourceNode"* @_ZN5blink16BaseAudioContext20createConstantSourceERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %55 = load i32, i32* %51, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %91

57:                                               ; preds = %40
  %58 = getelementptr inbounds %"class.blink::ConstantSourceNode", %"class.blink::ConstantSourceNode"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = icmp eq %"class.blink::ConstantSourceNode"* %54, null
  %60 = load i64*, i64** %3, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 3
  br i1 %59, label %62, label %68, !prof !2

62:                                               ; preds = %57
  %63 = getelementptr inbounds i64, i64* %60, i64 1
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 176
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %61, align 8
  br label %91

68:                                               ; preds = %57
  %69 = bitcast i8* %41 to %"class.blink::ScriptWrappable"*
  %70 = load i64*, i64** %20, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 -1
  %72 = bitcast i64* %71 to %"class.v8::Object"*
  %73 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %61, %"class.blink::ScriptWrappable"* nonnull %58, %"class.v8::Object"* %72, %"class.blink::ScriptWrappable"* %69) #6
  br i1 %73, label %91, label %74

74:                                               ; preds = %68
  %75 = load i64*, i64** %20, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 -1
  %77 = bitcast i64* %76 to %"class.v8::Object"*
  %78 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %77) #6
  %79 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %78) #6
  %80 = bitcast %"class.blink::ConstantSourceNode"* %54 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %81 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %81, i64 7
  %83 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %82, align 8
  %84 = call %"class.v8::Value"* %83(%"class.blink::ScriptWrappable"* nonnull %58, %"class.blink::ScriptState"* %79) #6
  %85 = icmp eq %"class.v8::Value"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %74
  %87 = load i64*, i64** %3, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 3
  %89 = bitcast %"class.v8::Value"* %84 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %40, %86, %74, %68, %62
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %93, null
  br i1 %94, label %104, label %95

95:                                               ; preds = %91
  %96 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %97 = bitcast %"class.v8::Isolate"* %96 to %"class.v8::internal::Isolate"*
  %98 = load i64, i64* %93, align 8
  %99 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %97, i64 %98) #6
  %100 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %96) #6
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast i64* %99 to %"class.v8::Value"*
  %103 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %96, %"class.v8::Value"* %102) #6
  br label %104

104:                                              ; preds = %101, %95, %91
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #6
  br label %120

120:                                              ; preds = %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context32CreateConvolverOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 636) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::BaseAudioContext"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  %54 = call %"class.blink::ConvolverNode"* @_ZN5blink16BaseAudioContext15createConvolverERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %55 = load i32, i32* %51, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %91

57:                                               ; preds = %40
  %58 = getelementptr inbounds %"class.blink::ConvolverNode", %"class.blink::ConvolverNode"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = icmp eq %"class.blink::ConvolverNode"* %54, null
  %60 = load i64*, i64** %3, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 3
  br i1 %59, label %62, label %68, !prof !2

62:                                               ; preds = %57
  %63 = getelementptr inbounds i64, i64* %60, i64 1
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 176
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %61, align 8
  br label %91

68:                                               ; preds = %57
  %69 = bitcast i8* %41 to %"class.blink::ScriptWrappable"*
  %70 = load i64*, i64** %20, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 -1
  %72 = bitcast i64* %71 to %"class.v8::Object"*
  %73 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %61, %"class.blink::ScriptWrappable"* nonnull %58, %"class.v8::Object"* %72, %"class.blink::ScriptWrappable"* %69) #6
  br i1 %73, label %91, label %74

74:                                               ; preds = %68
  %75 = load i64*, i64** %20, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 -1
  %77 = bitcast i64* %76 to %"class.v8::Object"*
  %78 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %77) #6
  %79 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %78) #6
  %80 = bitcast %"class.blink::ConvolverNode"* %54 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %81 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %81, i64 7
  %83 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %82, align 8
  %84 = call %"class.v8::Value"* %83(%"class.blink::ScriptWrappable"* nonnull %58, %"class.blink::ScriptState"* %79) #6
  %85 = icmp eq %"class.v8::Value"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %74
  %87 = load i64*, i64** %3, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 3
  %89 = bitcast %"class.v8::Value"* %84 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %40, %86, %74, %68, %62
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %93, null
  br i1 %94, label %104, label %95

95:                                               ; preds = %91
  %96 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %97 = bitcast %"class.v8::Isolate"* %96 to %"class.v8::internal::Isolate"*
  %98 = load i64, i64* %93, align 8
  %99 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %97, i64 %98) #6
  %100 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %96) #6
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast i64* %99 to %"class.v8::Value"*
  %103 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %96, %"class.v8::Value"* %102) #6
  br label %104

104:                                              ; preds = %101, %95, %91
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #6
  br label %120

120:                                              ; preds = %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context28CreateDelayOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 637) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::BaseAudioContext"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  %54 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = sext i32 %55 to i64
  br label %57

57:                                               ; preds = %90, %40
  %58 = phi i64 [ %59, %90 ], [ %56, %40 ]
  %59 = add nsw i64 %58, -1
  %60 = icmp sgt i64 %58, 0
  br i1 %60, label %61, label %99

61:                                               ; preds = %57
  %62 = icmp sgt i64 %58, %56
  br i1 %62, label %63, label %69

63:                                               ; preds = %61
  %64 = load i64*, i64** %3, align 8
  %65 = getelementptr inbounds i64, i64* %64, i64 1
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 160
  %68 = inttoptr i64 %67 to %"class.v8::Value"*
  br label %73

69:                                               ; preds = %61
  %70 = load i64*, i64** %20, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 %59
  %72 = bitcast i64* %71 to %"class.v8::Value"*
  br label %73

73:                                               ; preds = %69, %63
  %74 = phi %"class.v8::Value"* [ %68, %63 ], [ %72, %69 ]
  %75 = bitcast %"class.v8::Value"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 3
  %78 = icmp eq i64 %77, 1
  br i1 %78, label %79, label %96

79:                                               ; preds = %73
  %80 = add i64 %76, -1
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = and i64 %76, -4294967296
  %84 = zext i32 %82 to i64
  %85 = or i64 %83, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 67
  br i1 %89, label %90, label %96

90:                                               ; preds = %79
  %91 = add i64 %76, 23
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = and i32 %93, -2
  %95 = icmp eq i32 %94, 10
  br i1 %95, label %57, label %96

96:                                               ; preds = %90, %73, %79
  %97 = trunc i64 %58 to i32
  %98 = icmp slt i32 %97, 1
  br i1 %98, label %99, label %101

99:                                               ; preds = %57, %96
  %100 = call %"class.blink::DelayNode"* @_ZN5blink16BaseAudioContext11createDelayERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %119

101:                                              ; preds = %96
  %102 = icmp sgt i32 %55, 0
  br i1 %102, label %109, label %103

103:                                              ; preds = %101
  %104 = load i64*, i64** %3, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 1
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, 160
  %108 = inttoptr i64 %107 to %"class.v8::Value"*
  br label %112

109:                                              ; preds = %101
  %110 = bitcast i64** %20 to %"class.v8::Value"**
  %111 = load %"class.v8::Value"*, %"class.v8::Value"** %110, align 8
  br label %112

112:                                              ; preds = %103, %109
  %113 = phi %"class.v8::Value"* [ %108, %103 ], [ %111, %109 ]
  %114 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %7, %"class.v8::Value"* %113, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %115 = load i32, i32* %51, align 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %157

117:                                              ; preds = %112
  %118 = call %"class.blink::DelayNode"* @_ZN5blink16BaseAudioContext11createDelayEdRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, double %114, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %119

119:                                              ; preds = %99, %117
  %120 = phi %"class.blink::DelayNode"* [ %118, %117 ], [ %100, %99 ]
  %121 = load i32, i32* %51, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %157

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.blink::DelayNode", %"class.blink::DelayNode"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = icmp eq %"class.blink::DelayNode"* %120, null
  %126 = load i64*, i64** %3, align 8
  %127 = getelementptr inbounds i64, i64* %126, i64 3
  br i1 %125, label %128, label %134, !prof !2

128:                                              ; preds = %123
  %129 = getelementptr inbounds i64, i64* %126, i64 1
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, 176
  %132 = inttoptr i64 %131 to i64*
  %133 = load i64, i64* %132, align 8
  store i64 %133, i64* %127, align 8
  br label %157

134:                                              ; preds = %123
  %135 = bitcast i8* %41 to %"class.blink::ScriptWrappable"*
  %136 = load i64*, i64** %20, align 8
  %137 = getelementptr inbounds i64, i64* %136, i64 -1
  %138 = bitcast i64* %137 to %"class.v8::Object"*
  %139 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %127, %"class.blink::ScriptWrappable"* nonnull %124, %"class.v8::Object"* %138, %"class.blink::ScriptWrappable"* %135) #6
  br i1 %139, label %157, label %140

140:                                              ; preds = %134
  %141 = load i64*, i64** %20, align 8
  %142 = getelementptr inbounds i64, i64* %141, i64 -1
  %143 = bitcast i64* %142 to %"class.v8::Object"*
  %144 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %143) #6
  %145 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %144) #6
  %146 = bitcast %"class.blink::DelayNode"* %120 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %147 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %146, align 8
  %148 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %147, i64 7
  %149 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %148, align 8
  %150 = call %"class.v8::Value"* %149(%"class.blink::ScriptWrappable"* nonnull %124, %"class.blink::ScriptState"* %145) #6
  %151 = icmp eq %"class.v8::Value"* %150, null
  br i1 %151, label %157, label %152

152:                                              ; preds = %140
  %153 = load i64*, i64** %3, align 8
  %154 = getelementptr inbounds i64, i64* %153, i64 3
  %155 = bitcast %"class.v8::Value"* %150 to i64*
  %156 = load i64, i64* %155, align 8
  store i64 %156, i64* %154, align 8
  br label %157

157:                                              ; preds = %112, %119, %152, %140, %134, %128
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %158 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %159 = load i64*, i64** %158, align 8
  %160 = icmp eq i64* %159, null
  br i1 %160, label %170, label %161

161:                                              ; preds = %157
  %162 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %163 = bitcast %"class.v8::Isolate"* %162 to %"class.v8::internal::Isolate"*
  %164 = load i64, i64* %159, align 8
  %165 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %163, i64 %164) #6
  %166 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %162) #6
  br i1 %166, label %170, label %167

167:                                              ; preds = %161
  %168 = bitcast i64* %165 to %"class.v8::Value"*
  %169 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %162, %"class.v8::Value"* %168) #6
  br label %170

170:                                              ; preds = %167, %161, %157
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #6
  br label %186

186:                                              ; preds = %170, %182, %185
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context41CreateDynamicsCompressorOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 638) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::BaseAudioContext"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  %54 = call %"class.blink::DynamicsCompressorNode"* @_ZN5blink16BaseAudioContext24createDynamicsCompressorERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %55 = load i32, i32* %51, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %91

57:                                               ; preds = %40
  %58 = getelementptr inbounds %"class.blink::DynamicsCompressorNode", %"class.blink::DynamicsCompressorNode"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = icmp eq %"class.blink::DynamicsCompressorNode"* %54, null
  %60 = load i64*, i64** %3, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 3
  br i1 %59, label %62, label %68, !prof !2

62:                                               ; preds = %57
  %63 = getelementptr inbounds i64, i64* %60, i64 1
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 176
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %61, align 8
  br label %91

68:                                               ; preds = %57
  %69 = bitcast i8* %41 to %"class.blink::ScriptWrappable"*
  %70 = load i64*, i64** %20, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 -1
  %72 = bitcast i64* %71 to %"class.v8::Object"*
  %73 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %61, %"class.blink::ScriptWrappable"* nonnull %58, %"class.v8::Object"* %72, %"class.blink::ScriptWrappable"* %69) #6
  br i1 %73, label %91, label %74

74:                                               ; preds = %68
  %75 = load i64*, i64** %20, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 -1
  %77 = bitcast i64* %76 to %"class.v8::Object"*
  %78 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %77) #6
  %79 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %78) #6
  %80 = bitcast %"class.blink::DynamicsCompressorNode"* %54 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %81 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %81, i64 7
  %83 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %82, align 8
  %84 = call %"class.v8::Value"* %83(%"class.blink::ScriptWrappable"* nonnull %58, %"class.blink::ScriptState"* %79) #6
  %85 = icmp eq %"class.v8::Value"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %74
  %87 = load i64*, i64** %3, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 3
  %89 = bitcast %"class.v8::Value"* %84 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %40, %86, %74, %68, %62
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %93, null
  br i1 %94, label %104, label %95

95:                                               ; preds = %91
  %96 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %97 = bitcast %"class.v8::Isolate"* %96 to %"class.v8::internal::Isolate"*
  %98 = load i64, i64* %93, align 8
  %99 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %97, i64 %98) #6
  %100 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %96) #6
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast i64* %99 to %"class.v8::Value"*
  %103 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %96, %"class.v8::Value"* %102) #6
  br label %104

104:                                              ; preds = %101, %95, %91
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #6
  br label %120

120:                                              ; preds = %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context27CreateGainOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 639) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::BaseAudioContext"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  %54 = call %"class.blink::GainNode"* @_ZN5blink16BaseAudioContext10createGainERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %55 = load i32, i32* %51, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %91

57:                                               ; preds = %40
  %58 = getelementptr inbounds %"class.blink::GainNode", %"class.blink::GainNode"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = icmp eq %"class.blink::GainNode"* %54, null
  %60 = load i64*, i64** %3, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 3
  br i1 %59, label %62, label %68, !prof !2

62:                                               ; preds = %57
  %63 = getelementptr inbounds i64, i64* %60, i64 1
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 176
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %61, align 8
  br label %91

68:                                               ; preds = %57
  %69 = bitcast i8* %41 to %"class.blink::ScriptWrappable"*
  %70 = load i64*, i64** %20, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 -1
  %72 = bitcast i64* %71 to %"class.v8::Object"*
  %73 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %61, %"class.blink::ScriptWrappable"* nonnull %58, %"class.v8::Object"* %72, %"class.blink::ScriptWrappable"* %69) #6
  br i1 %73, label %91, label %74

74:                                               ; preds = %68
  %75 = load i64*, i64** %20, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 -1
  %77 = bitcast i64* %76 to %"class.v8::Object"*
  %78 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %77) #6
  %79 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %78) #6
  %80 = bitcast %"class.blink::GainNode"* %54 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %81 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %81, i64 7
  %83 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %82, align 8
  %84 = call %"class.v8::Value"* %83(%"class.blink::ScriptWrappable"* nonnull %58, %"class.blink::ScriptState"* %79) #6
  %85 = icmp eq %"class.v8::Value"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %74
  %87 = load i64*, i64** %3, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 3
  %89 = bitcast %"class.v8::Value"* %84 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %40, %86, %74, %68, %62
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %93, null
  br i1 %94, label %104, label %95

95:                                               ; preds = %91
  %96 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %97 = bitcast %"class.v8::Isolate"* %96 to %"class.v8::internal::Isolate"*
  %98 = load i64, i64* %93, align 8
  %99 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %97, i64 %98) #6
  %100 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %96) #6
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast i64* %99 to %"class.v8::Value"*
  %103 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %96, %"class.v8::Value"* %102) #6
  br label %104

104:                                              ; preds = %101, %95, %91
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #6
  br label %120

120:                                              ; preds = %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context32CreateIIRFilterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.825", align 8
  %5 = alloca %"class.WTF::Vector.825", align 8
  %6 = alloca %"class.WTF::Vector.825", align 8
  %7 = alloca %"class.WTF::Vector.825", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  %11 = bitcast i64* %10 to %"class.v8::Isolate"**
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  %13 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %12) #6
  %14 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %13) #6
  %15 = icmp eq %"class.blink::ExecutionContext"* %14, null
  %16 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %14, i64 0, i32 3
  %17 = icmp eq %"class.blink::UseCounter"* %16, null
  %18 = or i1 %15, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::UseCounter"* %16 to void (%"class.blink::UseCounter"*, i32)***
  %21 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %21, i64 3
  %23 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %22, align 8
  tail call void %23(%"class.blink::UseCounter"* nonnull %16, i32 1117) #6
  br label %24

24:                                               ; preds = %1, %19
  %25 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %25) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 56, i1 false)
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %30 = bitcast i8** %29 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0)>, <2 x i8*>* %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %35 = bitcast %"class.WTF::StringImpl"** %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #6
  %36 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = icmp slt i32 %37, 2
  br i1 %38, label %39, label %59, !prof !2

39:                                               ; preds = %24
  %40 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #6
  %41 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %37) #6
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #6
  br label %58

58:                                               ; preds = %39, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #6
  br label %261

59:                                               ; preds = %24
  %60 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %61 = load i64*, i64** %60, align 8
  %62 = getelementptr inbounds i64, i64* %61, i64 -1
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, -1
  %65 = inttoptr i64 %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = and i64 %63, -4294967296
  %68 = zext i32 %66 to i64
  %69 = or i64 %67, %68
  %70 = add i64 %69, 7
  %71 = inttoptr i64 %70 to i16*
  %72 = load i16, i16* %71, align 2
  switch i16 %72, label %79 [
    i16 1057, label %73
    i16 1056, label %73
    i16 1040, label %73
  ]

73:                                               ; preds = %59, %59, %59
  %74 = add i64 %63, 19
  %75 = inttoptr i64 %74 to i8**
  %76 = load i8*, i8** %75, align 1
  %77 = bitcast i8* %76 to %"class.blink::BaseAudioContext"*
  %78 = bitcast %"class.WTF::Vector.825"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #6
  br label %92

79:                                               ; preds = %59
  %80 = bitcast i64* %62 to %"class.v8::Object"*
  %81 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %80, i32 1) #6
  %82 = load i32, i32* %36, align 8
  %83 = bitcast i8* %81 to %"class.blink::BaseAudioContext"*
  %84 = bitcast %"class.WTF::Vector.825"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #6
  %85 = icmp sgt i32 %82, 0
  br i1 %85, label %92, label %86

86:                                               ; preds = %79
  %87 = load i64*, i64** %8, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 1
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, 160
  %91 = inttoptr i64 %90 to %"class.v8::Value"*
  br label %98

92:                                               ; preds = %73, %79
  %93 = phi i8* [ %78, %73 ], [ %84, %79 ]
  %94 = phi %"class.blink::BaseAudioContext"* [ %77, %73 ], [ %83, %79 ]
  %95 = phi i8* [ %76, %73 ], [ %81, %79 ]
  %96 = bitcast i64** %60 to %"class.v8::Value"**
  %97 = load %"class.v8::Value"*, %"class.v8::Value"** %96, align 8
  br label %98

98:                                               ; preds = %86, %92
  %99 = phi i8* [ %84, %86 ], [ %93, %92 ]
  %100 = phi %"class.blink::BaseAudioContext"* [ %83, %86 ], [ %94, %92 ]
  %101 = phi i8* [ %81, %86 ], [ %95, %92 ]
  %102 = phi %"class.v8::Value"* [ %91, %86 ], [ %97, %92 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.825"* nonnull sret %4, %"class.v8::Isolate"* %12, %"class.v8::Value"* %102, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %103 = load i32, i32* %33, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %249

105:                                              ; preds = %98
  %106 = bitcast %"class.WTF::Vector.825"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #6
  %107 = load i32, i32* %36, align 8
  %108 = icmp sgt i32 %107, 1
  br i1 %108, label %115, label %109

109:                                              ; preds = %105
  %110 = load i64*, i64** %8, align 8
  %111 = getelementptr inbounds i64, i64* %110, i64 1
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, 160
  %114 = inttoptr i64 %113 to %"class.v8::Value"*
  br label %119

115:                                              ; preds = %105
  %116 = load i64*, i64** %60, align 8
  %117 = getelementptr inbounds i64, i64* %116, i64 1
  %118 = bitcast i64* %117 to %"class.v8::Value"*
  br label %119

119:                                              ; preds = %109, %115
  %120 = phi %"class.v8::Value"* [ %114, %109 ], [ %118, %115 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.825"* nonnull sret %5, %"class.v8::Isolate"* %12, %"class.v8::Value"* %120, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %121 = load i32, i32* %33, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %237

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %4, i64 0, i32 0, i32 0, i32 1
  %125 = load i32, i32* %124, align 8
  %126 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %6, i64 0, i32 0, i32 0, i32 0
  store double* null, double** %126, align 8
  %127 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %6, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %127, align 8
  %128 = icmp eq i32 %125, 0
  br i1 %128, label %138, label %129

129:                                              ; preds = %123
  %130 = zext i32 %125 to i64
  %131 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %130) #6
  %132 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %131, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #6
  %133 = ptrtoint i8* %132 to i64
  %134 = bitcast %"class.WTF::Vector.825"* %6 to i64*
  store atomic i64 %133, i64* %134 monotonic, align 8
  %135 = lshr i64 %131, 3
  %136 = trunc i64 %135 to i32
  store i32 %136, i32* %127, align 8
  %137 = icmp ne i8* %132, null
  br label %138

138:                                              ; preds = %129, %123
  %139 = phi i8* [ null, %123 ], [ %132, %129 ]
  %140 = phi i1 [ false, %123 ], [ %137, %129 ]
  %141 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %4, i64 0, i32 0, i32 0, i32 2
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %6, i64 0, i32 0, i32 0, i32 2
  store i32 %142, i32* %143, align 4
  %144 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %4, i64 0, i32 0, i32 0, i32 0
  %145 = load double*, double** %144, align 8
  %146 = icmp ne double* %145, null
  %147 = and i1 %140, %146
  br i1 %147, label %148, label %152, !prof !3

148:                                              ; preds = %138
  %149 = zext i32 %142 to i64
  %150 = bitcast double* %145 to i8*
  %151 = shl nuw nsw i64 %149, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %139, i8* nonnull align 8 %150, i64 %151, i1 false) #6
  br label %152

152:                                              ; preds = %138, %148
  %153 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %5, i64 0, i32 0, i32 0, i32 1
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %7, i64 0, i32 0, i32 0, i32 0
  store double* null, double** %155, align 8
  %156 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %7, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %156, align 8
  %157 = icmp eq i32 %154, 0
  br i1 %157, label %167, label %158

158:                                              ; preds = %152
  %159 = zext i32 %154 to i64
  %160 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %159) #6
  %161 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %160, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #6
  %162 = ptrtoint i8* %161 to i64
  %163 = bitcast %"class.WTF::Vector.825"* %7 to i64*
  store atomic i64 %162, i64* %163 monotonic, align 8
  %164 = lshr i64 %160, 3
  %165 = trunc i64 %164 to i32
  store i32 %165, i32* %156, align 8
  %166 = icmp ne i8* %161, null
  br label %167

167:                                              ; preds = %158, %152
  %168 = phi i8* [ null, %152 ], [ %161, %158 ]
  %169 = phi i1 [ false, %152 ], [ %166, %158 ]
  %170 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %5, i64 0, i32 0, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %7, i64 0, i32 0, i32 0, i32 2
  store i32 %171, i32* %172, align 4
  %173 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %5, i64 0, i32 0, i32 0, i32 0
  %174 = load double*, double** %173, align 8
  %175 = icmp ne double* %174, null
  %176 = and i1 %169, %175
  br i1 %176, label %177, label %181, !prof !3

177:                                              ; preds = %167
  %178 = zext i32 %171 to i64
  %179 = bitcast double* %174 to i8*
  %180 = shl nuw nsw i64 %178, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %168, i8* nonnull align 8 %179, i64 %180, i1 false) #6
  br label %181

181:                                              ; preds = %167, %177
  %182 = call %"class.blink::IIRFilterNode"* @_ZN5blink16BaseAudioContext15createIIRFilterEN3WTF6VectorIdLj0ENS1_18PartitionAllocatorEEES4_RNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %100, %"class.WTF::Vector.825"* nonnull %6, %"class.WTF::Vector.825"* nonnull %7, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %183 = load double*, double** %155, align 8
  %184 = icmp eq double* %183, null
  %185 = bitcast double* %183 to i8*
  br i1 %184, label %191, label %186, !prof !3

186:                                              ; preds = %181
  %187 = load i32, i32* %172, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %190, label %189, !prof !2

189:                                              ; preds = %186
  store i32 0, i32* %172, align 4
  br label %190

190:                                              ; preds = %189, %186
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %185) #6
  store double* null, double** %155, align 8
  br label %191

191:                                              ; preds = %181, %190
  %192 = load double*, double** %126, align 8
  %193 = icmp eq double* %192, null
  %194 = bitcast double* %192 to i8*
  br i1 %193, label %200, label %195, !prof !3

195:                                              ; preds = %191
  %196 = load i32, i32* %143, align 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %199, label %198, !prof !2

198:                                              ; preds = %195
  store i32 0, i32* %143, align 4
  br label %199

199:                                              ; preds = %198, %195
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %194) #6
  store double* null, double** %126, align 8
  br label %200

200:                                              ; preds = %191, %199
  %201 = load i32, i32* %33, align 8
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %237

203:                                              ; preds = %200
  %204 = getelementptr inbounds %"class.blink::IIRFilterNode", %"class.blink::IIRFilterNode"* %182, i64 0, i32 0, i32 0, i32 0, i32 0
  %205 = icmp eq %"class.blink::IIRFilterNode"* %182, null
  %206 = load i64*, i64** %8, align 8
  %207 = getelementptr inbounds i64, i64* %206, i64 3
  br i1 %205, label %208, label %214, !prof !2

208:                                              ; preds = %203
  %209 = getelementptr inbounds i64, i64* %206, i64 1
  %210 = load i64, i64* %209, align 8
  %211 = add i64 %210, 176
  %212 = inttoptr i64 %211 to i64*
  %213 = load i64, i64* %212, align 8
  store i64 %213, i64* %207, align 8
  br label %237

214:                                              ; preds = %203
  %215 = bitcast i8* %101 to %"class.blink::ScriptWrappable"*
  %216 = load i64*, i64** %60, align 8
  %217 = getelementptr inbounds i64, i64* %216, i64 -1
  %218 = bitcast i64* %217 to %"class.v8::Object"*
  %219 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %207, %"class.blink::ScriptWrappable"* nonnull %204, %"class.v8::Object"* %218, %"class.blink::ScriptWrappable"* %215) #6
  br i1 %219, label %237, label %220

220:                                              ; preds = %214
  %221 = load i64*, i64** %60, align 8
  %222 = getelementptr inbounds i64, i64* %221, i64 -1
  %223 = bitcast i64* %222 to %"class.v8::Object"*
  %224 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %223) #6
  %225 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %224) #6
  %226 = bitcast %"class.blink::IIRFilterNode"* %182 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %227 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %226, align 8
  %228 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %227, i64 7
  %229 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %228, align 8
  %230 = call %"class.v8::Value"* %229(%"class.blink::ScriptWrappable"* nonnull %204, %"class.blink::ScriptState"* %225) #6
  %231 = icmp eq %"class.v8::Value"* %230, null
  br i1 %231, label %237, label %232

232:                                              ; preds = %220
  %233 = load i64*, i64** %8, align 8
  %234 = getelementptr inbounds i64, i64* %233, i64 3
  %235 = bitcast %"class.v8::Value"* %230 to i64*
  %236 = load i64, i64* %235, align 8
  store i64 %236, i64* %234, align 8
  br label %237

237:                                              ; preds = %200, %119, %232, %220, %214, %208
  %238 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %5, i64 0, i32 0, i32 0, i32 0
  %239 = load double*, double** %238, align 8
  %240 = icmp eq double* %239, null
  %241 = bitcast double* %239 to i8*
  br i1 %240, label %248, label %242, !prof !3

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %5, i64 0, i32 0, i32 0, i32 2
  %244 = load i32, i32* %243, align 4
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %247, label %246, !prof !2

246:                                              ; preds = %242
  store i32 0, i32* %243, align 4
  br label %247

247:                                              ; preds = %246, %242
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %241) #6
  store double* null, double** %238, align 8
  br label %248

248:                                              ; preds = %237, %247
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #6
  br label %249

249:                                              ; preds = %98, %248
  %250 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %4, i64 0, i32 0, i32 0, i32 0
  %251 = load double*, double** %250, align 8
  %252 = icmp eq double* %251, null
  %253 = bitcast double* %251 to i8*
  br i1 %252, label %260, label %254, !prof !3

254:                                              ; preds = %249
  %255 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %4, i64 0, i32 0, i32 0, i32 2
  %256 = load i32, i32* %255, align 4
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %259, label %258, !prof !2

258:                                              ; preds = %254
  store i32 0, i32* %255, align 4
  br label %259

259:                                              ; preds = %258, %254
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %253) #6
  store double* null, double** %250, align 8
  br label %260

260:                                              ; preds = %249, %259
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #6
  br label %261

261:                                              ; preds = %260, %58
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %262 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %263 = load i64*, i64** %262, align 8
  %264 = icmp eq i64* %263, null
  br i1 %264, label %274, label %265

265:                                              ; preds = %261
  %266 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %32, align 8
  %267 = bitcast %"class.v8::Isolate"* %266 to %"class.v8::internal::Isolate"*
  %268 = load i64, i64* %263, align 8
  %269 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %267, i64 %268) #6
  %270 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %266) #6
  br i1 %270, label %274, label %271

271:                                              ; preds = %265
  %272 = bitcast i64* %269 to %"class.v8::Value"*
  %273 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %266, %"class.v8::Value"* %272) #6
  br label %274

274:                                              ; preds = %271, %265, %261
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %274
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #6
  br label %290

290:                                              ; preds = %274, %286, %289
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %25) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context33CreateOscillatorOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 643) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::BaseAudioContext"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  %54 = call %"class.blink::OscillatorNode"* @_ZN5blink16BaseAudioContext16createOscillatorERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %55 = load i32, i32* %51, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %91

57:                                               ; preds = %40
  %58 = getelementptr inbounds %"class.blink::OscillatorNode", %"class.blink::OscillatorNode"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = icmp eq %"class.blink::OscillatorNode"* %54, null
  %60 = load i64*, i64** %3, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 3
  br i1 %59, label %62, label %68, !prof !2

62:                                               ; preds = %57
  %63 = getelementptr inbounds i64, i64* %60, i64 1
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 176
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %61, align 8
  br label %91

68:                                               ; preds = %57
  %69 = bitcast i8* %41 to %"class.blink::ScriptWrappable"*
  %70 = load i64*, i64** %20, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 -1
  %72 = bitcast i64* %71 to %"class.v8::Object"*
  %73 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %61, %"class.blink::ScriptWrappable"* nonnull %58, %"class.v8::Object"* %72, %"class.blink::ScriptWrappable"* %69) #6
  br i1 %73, label %91, label %74

74:                                               ; preds = %68
  %75 = load i64*, i64** %20, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 -1
  %77 = bitcast i64* %76 to %"class.v8::Object"*
  %78 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %77) #6
  %79 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %78) #6
  %80 = bitcast %"class.blink::OscillatorNode"* %54 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %81 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %81, i64 7
  %83 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %82, align 8
  %84 = call %"class.v8::Value"* %83(%"class.blink::ScriptWrappable"* nonnull %58, %"class.blink::ScriptState"* %79) #6
  %85 = icmp eq %"class.v8::Value"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %74
  %87 = load i64*, i64** %3, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 3
  %89 = bitcast %"class.v8::Value"* %84 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %40, %86, %74, %68, %62
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %93, null
  br i1 %94, label %104, label %95

95:                                               ; preds = %91
  %96 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %97 = bitcast %"class.v8::Isolate"* %96 to %"class.v8::internal::Isolate"*
  %98 = load i64, i64* %93, align 8
  %99 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %97, i64 %98) #6
  %100 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %96) #6
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast i64* %99 to %"class.v8::Value"*
  %103 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %96, %"class.v8::Value"* %102) #6
  br label %104

104:                                              ; preds = %101, %95, %91
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #6
  br label %120

120:                                              ; preds = %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context29CreatePannerOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 1363) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::BaseAudioContext"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  %54 = call %"class.blink::PannerNode"* @_ZN5blink16BaseAudioContext12createPannerERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %55 = load i32, i32* %51, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %91

57:                                               ; preds = %40
  %58 = getelementptr inbounds %"class.blink::PannerNode", %"class.blink::PannerNode"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = icmp eq %"class.blink::PannerNode"* %54, null
  %60 = load i64*, i64** %3, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 3
  br i1 %59, label %62, label %68, !prof !2

62:                                               ; preds = %57
  %63 = getelementptr inbounds i64, i64* %60, i64 1
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 176
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %61, align 8
  br label %91

68:                                               ; preds = %57
  %69 = bitcast i8* %41 to %"class.blink::ScriptWrappable"*
  %70 = load i64*, i64** %20, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 -1
  %72 = bitcast i64* %71 to %"class.v8::Object"*
  %73 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %61, %"class.blink::ScriptWrappable"* nonnull %58, %"class.v8::Object"* %72, %"class.blink::ScriptWrappable"* %69) #6
  br i1 %73, label %91, label %74

74:                                               ; preds = %68
  %75 = load i64*, i64** %20, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 -1
  %77 = bitcast i64* %76 to %"class.v8::Object"*
  %78 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %77) #6
  %79 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %78) #6
  %80 = bitcast %"class.blink::PannerNode"* %54 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %81 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %81, i64 7
  %83 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %82, align 8
  %84 = call %"class.v8::Value"* %83(%"class.blink::ScriptWrappable"* nonnull %58, %"class.blink::ScriptState"* %79) #6
  %85 = icmp eq %"class.v8::Value"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %74
  %87 = load i64*, i64** %3, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 3
  %89 = bitcast %"class.v8::Value"* %84 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %40, %86, %74, %68, %62
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %93, null
  br i1 %94, label %104, label %95

95:                                               ; preds = %91
  %96 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %97 = bitcast %"class.v8::Isolate"* %96 to %"class.v8::internal::Isolate"*
  %98 = load i64, i64* %93, align 8
  %99 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %97, i64 %98) #6
  %100 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %96) #6
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast i64* %99 to %"class.v8::Value"*
  %103 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %96, %"class.v8::Value"* %102) #6
  br label %104

104:                                              ; preds = %101, %95, %91
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #6
  br label %120

120:                                              ; preds = %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context35CreatePeriodicWaveOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.549", align 8
  %5 = alloca %"class.WTF::Vector.549", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %10) #6
  %12 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %11) #6
  %13 = icmp eq %"class.blink::ExecutionContext"* %12, null
  %14 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %12, i64 0, i32 3
  %15 = icmp eq %"class.blink::UseCounter"* %14, null
  %16 = or i1 %13, %15
  br i1 %16, label %22, label %17

17:                                               ; preds = %1
  %18 = bitcast %"class.blink::UseCounter"* %14 to void (%"class.blink::UseCounter"*, i32)***
  %19 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %19, i64 3
  %21 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %20, align 8
  tail call void %21(%"class.blink::UseCounter"* nonnull %14, i32 645) #6
  br label %22

22:                                               ; preds = %1, %17
  %23 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %23) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 56, i1 false)
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %25, align 8
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %26, align 2
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %28 = bitcast i8** %27 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i64 0, i64 0)>, <2 x i8*>* %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %33 = bitcast %"class.WTF::StringImpl"** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #6
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = icmp slt i32 %35, 2
  br i1 %36, label %37, label %57, !prof !2

37:                                               ; preds = %22
  %38 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #6
  %39 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %35) #6
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %40, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #6
  br label %56

56:                                               ; preds = %37, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #6
  br label %243

57:                                               ; preds = %22
  %58 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds i64, i64* %59, i64 -1
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = and i64 %61, -4294967296
  %66 = zext i32 %64 to i64
  %67 = or i64 %65, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load i16, i16* %69, align 2
  switch i16 %70, label %77 [
    i16 1057, label %71
    i16 1056, label %71
    i16 1040, label %71
  ]

71:                                               ; preds = %57, %57, %57
  %72 = add i64 %61, 19
  %73 = inttoptr i64 %72 to i8**
  %74 = load i8*, i8** %73, align 1
  %75 = bitcast i8* %74 to %"class.blink::BaseAudioContext"*
  %76 = bitcast %"class.WTF::Vector.549"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #6
  br label %90

77:                                               ; preds = %57
  %78 = bitcast i64* %60 to %"class.v8::Object"*
  %79 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %78, i32 1) #6
  %80 = load i32, i32* %34, align 8
  %81 = bitcast i8* %79 to %"class.blink::BaseAudioContext"*
  %82 = bitcast %"class.WTF::Vector.549"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #6
  %83 = icmp sgt i32 %80, 0
  br i1 %83, label %90, label %84

84:                                               ; preds = %77
  %85 = load i64*, i64** %6, align 8
  %86 = getelementptr inbounds i64, i64* %85, i64 1
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, 160
  %89 = inttoptr i64 %88 to %"class.v8::Value"*
  br label %96

90:                                               ; preds = %71, %77
  %91 = phi i8* [ %76, %71 ], [ %82, %77 ]
  %92 = phi %"class.blink::BaseAudioContext"* [ %75, %71 ], [ %81, %77 ]
  %93 = phi i8* [ %74, %71 ], [ %79, %77 ]
  %94 = bitcast i64** %58 to %"class.v8::Value"**
  %95 = load %"class.v8::Value"*, %"class.v8::Value"** %94, align 8
  br label %96

96:                                               ; preds = %84, %90
  %97 = phi i8* [ %82, %84 ], [ %91, %90 ]
  %98 = phi %"class.blink::BaseAudioContext"* [ %81, %84 ], [ %92, %90 ]
  %99 = phi i8* [ %79, %84 ], [ %93, %90 ]
  %100 = phi %"class.v8::Value"* [ %89, %84 ], [ %95, %90 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.549"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %100, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %101 = load i32, i32* %31, align 8
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %231

103:                                              ; preds = %96
  %104 = bitcast %"class.WTF::Vector.549"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #6
  %105 = load i32, i32* %34, align 8
  %106 = icmp sgt i32 %105, 1
  br i1 %106, label %113, label %107

107:                                              ; preds = %103
  %108 = load i64*, i64** %6, align 8
  %109 = getelementptr inbounds i64, i64* %108, i64 1
  %110 = load i64, i64* %109, align 8
  %111 = add i64 %110, 160
  %112 = inttoptr i64 %111 to %"class.v8::Value"*
  br label %117

113:                                              ; preds = %103
  %114 = load i64*, i64** %58, align 8
  %115 = getelementptr inbounds i64, i64* %114, i64 1
  %116 = bitcast i64* %115 to %"class.v8::Value"*
  br label %117

117:                                              ; preds = %107, %113
  %118 = phi %"class.v8::Value"* [ %112, %107 ], [ %116, %113 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.549"* nonnull sret %5, %"class.v8::Isolate"* %10, %"class.v8::Value"* %118, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %119 = load i32, i32* %31, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %219

121:                                              ; preds = %117
  %122 = load i32, i32* %34, align 8
  %123 = icmp sgt i32 %122, 2
  br i1 %123, label %130, label %124

124:                                              ; preds = %121
  %125 = load i64*, i64** %6, align 8
  %126 = getelementptr inbounds i64, i64* %125, i64 1
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, 160
  %129 = inttoptr i64 %128 to %"class.v8::Value"*
  br label %134

130:                                              ; preds = %121
  %131 = load i64*, i64** %58, align 8
  %132 = getelementptr inbounds i64, i64* %131, i64 2
  %133 = bitcast i64* %132 to %"class.v8::Value"*
  br label %134

134:                                              ; preds = %124, %130
  %135 = phi %"class.v8::Value"* [ %129, %124 ], [ %133, %130 ]
  %136 = bitcast %"class.v8::Value"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, 3
  %139 = icmp eq i64 %138, 1
  br i1 %139, label %140, label %164

140:                                              ; preds = %134
  %141 = add i64 %137, -1
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = and i64 %137, -4294967296
  %145 = zext i32 %143 to i64
  %146 = or i64 %144, %145
  %147 = add i64 %146, 7
  %148 = inttoptr i64 %147 to i16*
  %149 = load i16, i16* %148, align 2
  %150 = icmp eq i16 %149, 67
  br i1 %150, label %151, label %164

151:                                              ; preds = %140
  %152 = add i64 %137, 23
  %153 = inttoptr i64 %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = and i32 %154, -2
  %156 = icmp eq i32 %155, 10
  br i1 %156, label %157, label %164

157:                                              ; preds = %151
  %158 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 16) #6
  %159 = bitcast i8* %158 to %"class.blink::PeriodicWaveConstraints"*
  call void @_ZN5blink23PeriodicWaveConstraintsC1Ev(%"class.blink::PeriodicWaveConstraints"* %159) #6
  %160 = getelementptr inbounds i8, i8* %158, i64 -4
  %161 = bitcast i8* %160 to i16*
  %162 = load atomic i16, i16* %161 monotonic, align 2
  %163 = or i16 %162, 1
  store atomic i16 %163, i16* %161 release, align 2
  br label %180

164:                                              ; preds = %140, %134, %151
  br i1 %123, label %171, label %165

165:                                              ; preds = %164
  %166 = load i64*, i64** %6, align 8
  %167 = getelementptr inbounds i64, i64* %166, i64 1
  %168 = load i64, i64* %167, align 8
  %169 = add i64 %168, 160
  %170 = inttoptr i64 %169 to %"class.v8::Value"*
  br label %175

171:                                              ; preds = %164
  %172 = load i64*, i64** %58, align 8
  %173 = getelementptr inbounds i64, i64* %172, i64 2
  %174 = bitcast i64* %173 to %"class.v8::Value"*
  br label %175

175:                                              ; preds = %165, %171
  %176 = phi %"class.v8::Value"* [ %170, %165 ], [ %174, %171 ]
  %177 = call %"class.blink::PeriodicWaveConstraints"* @_ZN5blink17NativeValueTraitsINS_23PeriodicWaveConstraintsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %176, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %178 = load i32, i32* %31, align 8
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %219

180:                                              ; preds = %175, %157
  %181 = phi %"class.blink::PeriodicWaveConstraints"* [ %159, %157 ], [ %177, %175 ]
  %182 = call %"class.blink::PeriodicWave"* @_ZN5blink16BaseAudioContext18createPeriodicWaveERKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEES6_PKNS_23PeriodicWaveConstraintsERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %98, %"class.WTF::Vector.549"* nonnull dereferenceable(16) %4, %"class.WTF::Vector.549"* nonnull dereferenceable(16) %5, %"class.blink::PeriodicWaveConstraints"* %181, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %183 = load i32, i32* %31, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %219

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.blink::PeriodicWave", %"class.blink::PeriodicWave"* %182, i64 0, i32 0
  %187 = icmp eq %"class.blink::PeriodicWave"* %182, null
  %188 = load i64*, i64** %6, align 8
  %189 = getelementptr inbounds i64, i64* %188, i64 3
  br i1 %187, label %190, label %196, !prof !2

190:                                              ; preds = %185
  %191 = getelementptr inbounds i64, i64* %188, i64 1
  %192 = load i64, i64* %191, align 8
  %193 = add i64 %192, 176
  %194 = inttoptr i64 %193 to i64*
  %195 = load i64, i64* %194, align 8
  store i64 %195, i64* %189, align 8
  br label %219

196:                                              ; preds = %185
  %197 = bitcast i8* %99 to %"class.blink::ScriptWrappable"*
  %198 = load i64*, i64** %58, align 8
  %199 = getelementptr inbounds i64, i64* %198, i64 -1
  %200 = bitcast i64* %199 to %"class.v8::Object"*
  %201 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %189, %"class.blink::ScriptWrappable"* nonnull %186, %"class.v8::Object"* %200, %"class.blink::ScriptWrappable"* %197) #6
  br i1 %201, label %219, label %202

202:                                              ; preds = %196
  %203 = load i64*, i64** %58, align 8
  %204 = getelementptr inbounds i64, i64* %203, i64 -1
  %205 = bitcast i64* %204 to %"class.v8::Object"*
  %206 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %205) #6
  %207 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %206) #6
  %208 = bitcast %"class.blink::PeriodicWave"* %182 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %209 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %208, align 8
  %210 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %209, i64 7
  %211 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %210, align 8
  %212 = call %"class.v8::Value"* %211(%"class.blink::ScriptWrappable"* nonnull %186, %"class.blink::ScriptState"* %207) #6
  %213 = icmp eq %"class.v8::Value"* %212, null
  br i1 %213, label %219, label %214

214:                                              ; preds = %202
  %215 = load i64*, i64** %6, align 8
  %216 = getelementptr inbounds i64, i64* %215, i64 3
  %217 = bitcast %"class.v8::Value"* %212 to i64*
  %218 = load i64, i64* %217, align 8
  store i64 %218, i64* %216, align 8
  br label %219

219:                                              ; preds = %180, %175, %117, %214, %202, %196, %190
  %220 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %5, i64 0, i32 0, i32 0, i32 0
  %221 = load float*, float** %220, align 8
  %222 = icmp eq float* %221, null
  %223 = bitcast float* %221 to i8*
  br i1 %222, label %230, label %224, !prof !3

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %5, i64 0, i32 0, i32 0, i32 2
  %226 = load i32, i32* %225, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %229, label %228, !prof !2

228:                                              ; preds = %224
  store i32 0, i32* %225, align 4
  br label %229

229:                                              ; preds = %228, %224
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %223) #6
  store float* null, float** %220, align 8
  br label %230

230:                                              ; preds = %219, %229
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #6
  br label %231

231:                                              ; preds = %96, %230
  %232 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %4, i64 0, i32 0, i32 0, i32 0
  %233 = load float*, float** %232, align 8
  %234 = icmp eq float* %233, null
  %235 = bitcast float* %233 to i8*
  br i1 %234, label %242, label %236, !prof !3

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %4, i64 0, i32 0, i32 0, i32 2
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %241, label %240, !prof !2

240:                                              ; preds = %236
  store i32 0, i32* %237, align 4
  br label %241

241:                                              ; preds = %240, %236
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %235) #6
  store float* null, float** %232, align 8
  br label %242

242:                                              ; preds = %231, %241
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #6
  br label %243

243:                                              ; preds = %242, %56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %244 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %245 = load i64*, i64** %244, align 8
  %246 = icmp eq i64* %245, null
  br i1 %246, label %256, label %247

247:                                              ; preds = %243
  %248 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %249 = bitcast %"class.v8::Isolate"* %248 to %"class.v8::internal::Isolate"*
  %250 = load i64, i64* %245, align 8
  %251 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %249, i64 %250) #6
  %252 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %248) #6
  br i1 %252, label %256, label %253

253:                                              ; preds = %247
  %254 = bitcast i64* %251 to %"class.v8::Value"*
  %255 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %248, %"class.v8::Value"* %254) #6
  br label %256

256:                                              ; preds = %253, %247, %243
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %258, label %272, label %259

259:                                              ; preds = %256
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  br i1 %263, label %266, label %268

266:                                              ; preds = %259
  %267 = add i32 %265, -1
  store i32 %267, i32* %264, align 4
  br label %268

268:                                              ; preds = %266, %259
  %269 = phi i32 [ %267, %266 ], [ %265, %259 ]
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %268
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %257) #6
  br label %272

272:                                              ; preds = %256, %268, %271
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %23) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context38CreateScriptProcessorOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 646) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::BaseAudioContext"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  %54 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = sext i32 %55 to i64
  br label %57

57:                                               ; preds = %90, %40
  %58 = phi i64 [ %59, %90 ], [ %56, %40 ]
  %59 = add nsw i64 %58, -1
  %60 = icmp sgt i64 %58, 0
  br i1 %60, label %61, label %99

61:                                               ; preds = %57
  %62 = icmp sgt i64 %58, %56
  br i1 %62, label %63, label %69

63:                                               ; preds = %61
  %64 = load i64*, i64** %3, align 8
  %65 = getelementptr inbounds i64, i64* %64, i64 1
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 160
  %68 = inttoptr i64 %67 to %"class.v8::Value"*
  br label %73

69:                                               ; preds = %61
  %70 = load i64*, i64** %20, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 %59
  %72 = bitcast i64* %71 to %"class.v8::Value"*
  br label %73

73:                                               ; preds = %69, %63
  %74 = phi %"class.v8::Value"* [ %68, %63 ], [ %72, %69 ]
  %75 = bitcast %"class.v8::Value"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 3
  %78 = icmp eq i64 %77, 1
  br i1 %78, label %79, label %96

79:                                               ; preds = %73
  %80 = add i64 %76, -1
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = and i64 %76, -4294967296
  %84 = zext i32 %82 to i64
  %85 = or i64 %83, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 67
  br i1 %89, label %90, label %96

90:                                               ; preds = %79
  %91 = add i64 %76, 23
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = and i32 %93, -2
  %95 = icmp eq i32 %94, 10
  br i1 %95, label %57, label %96

96:                                               ; preds = %90, %73, %79
  %97 = trunc i64 %58 to i32
  %98 = icmp slt i32 %97, 1
  br i1 %98, label %99, label %101

99:                                               ; preds = %57, %96
  %100 = call %"class.blink::ScriptProcessorNode"* @_ZN5blink16BaseAudioContext21createScriptProcessorERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %198

101:                                              ; preds = %96
  %102 = icmp sgt i32 %55, 0
  br i1 %102, label %109, label %103

103:                                              ; preds = %101
  %104 = load i64*, i64** %3, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 1
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, 160
  %108 = inttoptr i64 %107 to %"class.v8::Value"*
  br label %112

109:                                              ; preds = %101
  %110 = bitcast i64** %20 to %"class.v8::Value"**
  %111 = load %"class.v8::Value"*, %"class.v8::Value"** %110, align 8
  br label %112

112:                                              ; preds = %103, %109
  %113 = phi %"class.v8::Value"* [ %108, %103 ], [ %111, %109 ]
  %114 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %113) #6
  br i1 %114, label %115, label %118, !prof !3

115:                                              ; preds = %112
  %116 = bitcast %"class.v8::Value"* %113 to %"class.v8::Uint32"*
  %117 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %116) #6
  br label %127

118:                                              ; preds = %112
  %119 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %113) #6
  br i1 %119, label %120, label %123, !prof !3

120:                                              ; preds = %118
  %121 = bitcast %"class.v8::Value"* %113 to %"class.v8::Int32"*
  %122 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %121) #6
  br label %127

123:                                              ; preds = %118
  %124 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %7, %"class.v8::Value"* %113, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %125 = load i32, i32* %51, align 8
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %236

127:                                              ; preds = %120, %115, %123
  %128 = phi i32 [ %124, %123 ], [ %122, %120 ], [ %117, %115 ]
  %129 = icmp slt i32 %97, 2
  br i1 %129, label %130, label %132

130:                                              ; preds = %127
  %131 = call %"class.blink::ScriptProcessorNode"* @_ZN5blink16BaseAudioContext21createScriptProcessorEjRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, i32 %128, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %198

132:                                              ; preds = %127
  %133 = load i32, i32* %54, align 8
  %134 = icmp sgt i32 %133, 1
  br i1 %134, label %141, label %135

135:                                              ; preds = %132
  %136 = load i64*, i64** %3, align 8
  %137 = getelementptr inbounds i64, i64* %136, i64 1
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, 160
  %140 = inttoptr i64 %139 to %"class.v8::Value"*
  br label %145

141:                                              ; preds = %132
  %142 = load i64*, i64** %20, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 1
  %144 = bitcast i64* %143 to %"class.v8::Value"*
  br label %145

145:                                              ; preds = %135, %141
  %146 = phi %"class.v8::Value"* [ %140, %135 ], [ %144, %141 ]
  %147 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %146) #6
  br i1 %147, label %148, label %151, !prof !3

148:                                              ; preds = %145
  %149 = bitcast %"class.v8::Value"* %146 to %"class.v8::Uint32"*
  %150 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %149) #6
  br label %158

151:                                              ; preds = %145
  %152 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %146) #6
  br i1 %152, label %153, label %156, !prof !3

153:                                              ; preds = %151
  %154 = bitcast %"class.v8::Value"* %146 to %"class.v8::Int32"*
  %155 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %154) #6
  br label %158

156:                                              ; preds = %151
  %157 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %7, %"class.v8::Value"* %146, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %158

158:                                              ; preds = %148, %153, %156
  %159 = phi i32 [ %150, %148 ], [ %155, %153 ], [ %157, %156 ]
  %160 = load i32, i32* %51, align 8
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %236

162:                                              ; preds = %158
  %163 = icmp slt i32 %97, 3
  br i1 %163, label %164, label %166

164:                                              ; preds = %162
  %165 = call %"class.blink::ScriptProcessorNode"* @_ZN5blink16BaseAudioContext21createScriptProcessorEjjRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, i32 %128, i32 %159, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %198

166:                                              ; preds = %162
  %167 = load i32, i32* %54, align 8
  %168 = icmp sgt i32 %167, 2
  br i1 %168, label %175, label %169

169:                                              ; preds = %166
  %170 = load i64*, i64** %3, align 8
  %171 = getelementptr inbounds i64, i64* %170, i64 1
  %172 = load i64, i64* %171, align 8
  %173 = add i64 %172, 160
  %174 = inttoptr i64 %173 to %"class.v8::Value"*
  br label %179

175:                                              ; preds = %166
  %176 = load i64*, i64** %20, align 8
  %177 = getelementptr inbounds i64, i64* %176, i64 2
  %178 = bitcast i64* %177 to %"class.v8::Value"*
  br label %179

179:                                              ; preds = %169, %175
  %180 = phi %"class.v8::Value"* [ %174, %169 ], [ %178, %175 ]
  %181 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %180) #6
  br i1 %181, label %182, label %185, !prof !3

182:                                              ; preds = %179
  %183 = bitcast %"class.v8::Value"* %180 to %"class.v8::Uint32"*
  %184 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %183) #6
  br label %192

185:                                              ; preds = %179
  %186 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %180) #6
  br i1 %186, label %187, label %190, !prof !3

187:                                              ; preds = %185
  %188 = bitcast %"class.v8::Value"* %180 to %"class.v8::Int32"*
  %189 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %188) #6
  br label %192

190:                                              ; preds = %185
  %191 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %7, %"class.v8::Value"* %180, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %192

192:                                              ; preds = %182, %187, %190
  %193 = phi i32 [ %184, %182 ], [ %189, %187 ], [ %191, %190 ]
  %194 = load i32, i32* %51, align 8
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %236

196:                                              ; preds = %192
  %197 = call %"class.blink::ScriptProcessorNode"* @_ZN5blink16BaseAudioContext21createScriptProcessorEjjjRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, i32 %128, i32 %159, i32 %193, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %198

198:                                              ; preds = %99, %130, %164, %196
  %199 = phi %"class.blink::ScriptProcessorNode"* [ %197, %196 ], [ %165, %164 ], [ %131, %130 ], [ %100, %99 ]
  %200 = load i32, i32* %51, align 8
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %236

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::ScriptProcessorNode", %"class.blink::ScriptProcessorNode"* %199, i64 0, i32 0, i32 0, i32 0, i32 0
  %204 = icmp eq %"class.blink::ScriptProcessorNode"* %199, null
  %205 = load i64*, i64** %3, align 8
  %206 = getelementptr inbounds i64, i64* %205, i64 3
  br i1 %204, label %207, label %213, !prof !2

207:                                              ; preds = %202
  %208 = getelementptr inbounds i64, i64* %205, i64 1
  %209 = load i64, i64* %208, align 8
  %210 = add i64 %209, 176
  %211 = inttoptr i64 %210 to i64*
  %212 = load i64, i64* %211, align 8
  store i64 %212, i64* %206, align 8
  br label %236

213:                                              ; preds = %202
  %214 = bitcast i8* %41 to %"class.blink::ScriptWrappable"*
  %215 = load i64*, i64** %20, align 8
  %216 = getelementptr inbounds i64, i64* %215, i64 -1
  %217 = bitcast i64* %216 to %"class.v8::Object"*
  %218 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %206, %"class.blink::ScriptWrappable"* nonnull %203, %"class.v8::Object"* %217, %"class.blink::ScriptWrappable"* %214) #6
  br i1 %218, label %236, label %219

219:                                              ; preds = %213
  %220 = load i64*, i64** %20, align 8
  %221 = getelementptr inbounds i64, i64* %220, i64 -1
  %222 = bitcast i64* %221 to %"class.v8::Object"*
  %223 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %222) #6
  %224 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %223) #6
  %225 = bitcast %"class.blink::ScriptProcessorNode"* %199 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %226 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %225, align 8
  %227 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %226, i64 7
  %228 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %227, align 8
  %229 = call %"class.v8::Value"* %228(%"class.blink::ScriptWrappable"* nonnull %203, %"class.blink::ScriptState"* %224) #6
  %230 = icmp eq %"class.v8::Value"* %229, null
  br i1 %230, label %236, label %231

231:                                              ; preds = %219
  %232 = load i64*, i64** %3, align 8
  %233 = getelementptr inbounds i64, i64* %232, i64 3
  %234 = bitcast %"class.v8::Value"* %229 to i64*
  %235 = load i64, i64* %234, align 8
  store i64 %235, i64* %233, align 8
  br label %236

236:                                              ; preds = %192, %158, %123, %198, %231, %219, %213, %207
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %237 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %238 = load i64*, i64** %237, align 8
  %239 = icmp eq i64* %238, null
  br i1 %239, label %249, label %240

240:                                              ; preds = %236
  %241 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %242 = bitcast %"class.v8::Isolate"* %241 to %"class.v8::internal::Isolate"*
  %243 = load i64, i64* %238, align 8
  %244 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %242, i64 %243) #6
  %245 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %241) #6
  br i1 %245, label %249, label %246

246:                                              ; preds = %240
  %247 = bitcast i64* %244 to %"class.v8::Value"*
  %248 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %241, %"class.v8::Value"* %247) #6
  br label %249

249:                                              ; preds = %246, %240, %236
  %250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %251 = icmp eq %"class.WTF::StringImpl"* %250, null
  br i1 %251, label %265, label %252

252:                                              ; preds = %249
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  br i1 %256, label %259, label %261

259:                                              ; preds = %252
  %260 = add i32 %258, -1
  store i32 %260, i32* %257, align 4
  br label %261

261:                                              ; preds = %259, %252
  %262 = phi i32 [ %260, %259 ], [ %258, %252 ]
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %261
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %250) #6
  br label %265

265:                                              ; preds = %249, %261, %264
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context35CreateStereoPannerOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 647) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::BaseAudioContext"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  %54 = call %"class.blink::StereoPannerNode"* @_ZN5blink16BaseAudioContext18createStereoPannerERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %55 = load i32, i32* %51, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %91

57:                                               ; preds = %40
  %58 = getelementptr inbounds %"class.blink::StereoPannerNode", %"class.blink::StereoPannerNode"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = icmp eq %"class.blink::StereoPannerNode"* %54, null
  %60 = load i64*, i64** %3, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 3
  br i1 %59, label %62, label %68, !prof !2

62:                                               ; preds = %57
  %63 = getelementptr inbounds i64, i64* %60, i64 1
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 176
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %61, align 8
  br label %91

68:                                               ; preds = %57
  %69 = bitcast i8* %41 to %"class.blink::ScriptWrappable"*
  %70 = load i64*, i64** %20, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 -1
  %72 = bitcast i64* %71 to %"class.v8::Object"*
  %73 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %61, %"class.blink::ScriptWrappable"* nonnull %58, %"class.v8::Object"* %72, %"class.blink::ScriptWrappable"* %69) #6
  br i1 %73, label %91, label %74

74:                                               ; preds = %68
  %75 = load i64*, i64** %20, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 -1
  %77 = bitcast i64* %76 to %"class.v8::Object"*
  %78 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %77) #6
  %79 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %78) #6
  %80 = bitcast %"class.blink::StereoPannerNode"* %54 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %81 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %81, i64 7
  %83 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %82, align 8
  %84 = call %"class.v8::Value"* %83(%"class.blink::ScriptWrappable"* nonnull %58, %"class.blink::ScriptState"* %79) #6
  %85 = icmp eq %"class.v8::Value"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %74
  %87 = load i64*, i64** %3, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 3
  %89 = bitcast %"class.v8::Value"* %84 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %40, %86, %74, %68, %62
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %93, null
  br i1 %94, label %104, label %95

95:                                               ; preds = %91
  %96 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %97 = bitcast %"class.v8::Isolate"* %96 to %"class.v8::internal::Isolate"*
  %98 = load i64, i64* %93, align 8
  %99 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %97, i64 %98) #6
  %100 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %96) #6
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast i64* %99 to %"class.v8::Value"*
  %103 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %96, %"class.v8::Value"* %102) #6
  br label %104

104:                                              ; preds = %101, %95, %91
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #6
  br label %120

120:                                              ; preds = %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context33CreateWaveShaperOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 648) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::BaseAudioContext"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  %54 = call %"class.blink::WaveShaperNode"* @_ZN5blink16BaseAudioContext16createWaveShaperERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %55 = load i32, i32* %51, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %91

57:                                               ; preds = %40
  %58 = getelementptr inbounds %"class.blink::WaveShaperNode", %"class.blink::WaveShaperNode"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = icmp eq %"class.blink::WaveShaperNode"* %54, null
  %60 = load i64*, i64** %3, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 3
  br i1 %59, label %62, label %68, !prof !2

62:                                               ; preds = %57
  %63 = getelementptr inbounds i64, i64* %60, i64 1
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 176
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %61, align 8
  br label %91

68:                                               ; preds = %57
  %69 = bitcast i8* %41 to %"class.blink::ScriptWrappable"*
  %70 = load i64*, i64** %20, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 -1
  %72 = bitcast i64* %71 to %"class.v8::Object"*
  %73 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %61, %"class.blink::ScriptWrappable"* nonnull %58, %"class.v8::Object"* %72, %"class.blink::ScriptWrappable"* %69) #6
  br i1 %73, label %91, label %74

74:                                               ; preds = %68
  %75 = load i64*, i64** %20, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 -1
  %77 = bitcast i64* %76 to %"class.v8::Object"*
  %78 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %77) #6
  %79 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %78) #6
  %80 = bitcast %"class.blink::WaveShaperNode"* %54 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %81 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %81, i64 7
  %83 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %82, align 8
  %84 = call %"class.v8::Value"* %83(%"class.blink::ScriptWrappable"* nonnull %58, %"class.blink::ScriptState"* %79) #6
  %85 = icmp eq %"class.v8::Value"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %74
  %87 = load i64*, i64** %3, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 3
  %89 = bitcast %"class.v8::Value"* %84 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %40, %86, %74, %68, %62
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %93, null
  br i1 %94, label %104, label %95

95:                                               ; preds = %91
  %96 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %97 = bitcast %"class.v8::Isolate"* %96 to %"class.v8::internal::Isolate"*
  %98 = load i64, i64* %93, align 8
  %99 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %97, i64 %98) #6
  %100 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %96) #6
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast i64* %99 to %"class.v8::Value"*
  %103 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %96, %"class.v8::Value"* %102) #6
  br label %104

104:                                              ; preds = %101, %95, %91
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #6
  br label %120

120:                                              ; preds = %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context32DecodeAudioDataOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::ExceptionToRejectPromiseScope", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::ScriptPromise", align 8
  %6 = alloca %"class.blink::ScriptPromise", align 8
  %7 = alloca %"class.blink::ScriptPromise", align 8
  %8 = alloca %"class.blink::ScriptPromise", align 8
  %9 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds i64, i64* %10, i64 1
  %12 = bitcast i64* %11 to %"class.v8::Isolate"**
  %13 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds i64, i64* %15, i64 -1
  %17 = bitcast i64* %16 to %"class.v8::Object"*
  %18 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %18) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 56, i1 false)
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %21, align 2
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %23 = bitcast i8** %22 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0)>, <2 x i8*>* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %24, align 8
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %13, %"class.v8::Isolate"** %25, align 8
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %28 = bitcast %"class.WTF::StringImpl"** %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #6
  %29 = bitcast %"class.blink::ExceptionToRejectPromiseScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #6
  %30 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %3, i64 0, i32 0
  %31 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %3, i64 0, i32 1
  store %"class.v8::FunctionCallbackInfo"* %0, %"class.v8::FunctionCallbackInfo"** %30, align 8
  store %"class.blink::ExceptionState"* %2, %"class.blink::ExceptionState"** %31, align 8
  %32 = bitcast i64* %16 to %"class.v8::Value"*
  %33 = ptrtoint %"class.v8::Isolate"* %13 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to %"class.blink::V8PerIsolateData"**
  %36 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %35, align 8
  %37 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %36, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink18V8BaseAudioContext18wrapper_type_info_E, %"class.v8::Value"* %32) #6
  br i1 %37, label %39, label %38

38:                                               ; preds = %1
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i64 0, i64 0)) #6
  br label %315

39:                                               ; preds = %1
  %40 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %13) #6
  %41 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %40) #6
  %42 = icmp eq %"class.blink::ExecutionContext"* %41, null
  %43 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %41, i64 0, i32 3
  %44 = icmp eq %"class.blink::UseCounter"* %43, null
  %45 = or i1 %42, %44
  br i1 %45, label %51, label %46

46:                                               ; preds = %39
  %47 = bitcast %"class.blink::UseCounter"* %43 to void (%"class.blink::UseCounter"*, i32)***
  %48 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %48, i64 3
  %50 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %49, align 8
  call void %50(%"class.blink::UseCounter"* nonnull %43, i32 649) #6
  br label %51

51:                                               ; preds = %39, %46
  %52 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = icmp slt i32 %53, 1
  br i1 %54, label %55, label %75, !prof !2

55:                                               ; preds = %51
  %56 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #6
  %57 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %53) #6
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %58, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #6
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #6
  br label %74

74:                                               ; preds = %55, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #6
  br label %315

75:                                               ; preds = %51
  %76 = bitcast %"class.blink::ScriptPromise"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #6
  %77 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %5, i64 0, i32 1, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 32, i1 false) #6
  %78 = sext i32 %53 to i64
  br label %79

79:                                               ; preds = %112, %75
  %80 = phi i64 [ %81, %112 ], [ %78, %75 ]
  %81 = add nsw i64 %80, -1
  %82 = icmp sgt i64 %80, 0
  br i1 %82, label %83, label %124

83:                                               ; preds = %79
  %84 = icmp sgt i64 %80, %78
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = load i64*, i64** %9, align 8
  %87 = getelementptr inbounds i64, i64* %86, i64 1
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 160
  %90 = inttoptr i64 %89 to %"class.v8::Value"*
  br label %95

91:                                               ; preds = %83
  %92 = load i64*, i64** %14, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 %81
  %94 = bitcast i64* %93 to %"class.v8::Value"*
  br label %95

95:                                               ; preds = %91, %85
  %96 = phi %"class.v8::Value"* [ %90, %85 ], [ %94, %91 ]
  %97 = bitcast %"class.v8::Value"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = and i64 %98, 3
  %100 = icmp eq i64 %99, 1
  br i1 %100, label %101, label %120

101:                                              ; preds = %95
  %102 = add i64 %98, -1
  %103 = inttoptr i64 %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = and i64 %98, -4294967296
  %106 = zext i32 %104 to i64
  %107 = or i64 %105, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load i16, i16* %109, align 2
  %111 = icmp eq i16 %110, 67
  br i1 %111, label %112, label %118

112:                                              ; preds = %101
  %113 = add i64 %98, 23
  %114 = inttoptr i64 %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = and i32 %115, -2
  %117 = icmp eq i32 %116, 10
  br i1 %117, label %79, label %122

118:                                              ; preds = %101
  %119 = trunc i64 %80 to i32
  br label %124

120:                                              ; preds = %95
  %121 = trunc i64 %80 to i32
  br label %124

122:                                              ; preds = %112
  %123 = trunc i64 %80 to i32
  br label %124

124:                                              ; preds = %79, %118, %120, %122
  %125 = phi i32 [ %119, %118 ], [ %121, %120 ], [ %123, %122 ], [ 0, %79 ]
  %126 = load i64, i64* %16, align 8
  %127 = add i64 %126, -1
  %128 = inttoptr i64 %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = and i64 %126, -4294967296
  %131 = zext i32 %129 to i64
  %132 = or i64 %130, %131
  %133 = add i64 %132, 7
  %134 = inttoptr i64 %133 to i16*
  %135 = load i16, i16* %134, align 2
  switch i16 %135, label %140 [
    i16 1057, label %136
    i16 1056, label %136
    i16 1040, label %136
  ]

136:                                              ; preds = %124, %124, %124
  %137 = add i64 %126, 19
  %138 = inttoptr i64 %137 to i8**
  %139 = load i8*, i8** %138, align 1
  br label %142

140:                                              ; preds = %124
  %141 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %17, i32 1) #6
  br label %142

142:                                              ; preds = %136, %140
  %143 = phi i8* [ %139, %136 ], [ %141, %140 ]
  %144 = bitcast i8* %143 to %"class.blink::BaseAudioContext"*
  %145 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %17) #6
  %146 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %145)
  %147 = load i32, i32* %52, align 8
  %148 = icmp sgt i32 %147, 0
  br i1 %148, label %155, label %149

149:                                              ; preds = %142
  %150 = load i64*, i64** %9, align 8
  %151 = getelementptr inbounds i64, i64* %150, i64 1
  %152 = load i64, i64* %151, align 8
  %153 = add i64 %152, 160
  %154 = inttoptr i64 %153 to %"class.v8::Value"*
  br label %158

155:                                              ; preds = %142
  %156 = bitcast i64** %14 to %"class.v8::Value"**
  %157 = load %"class.v8::Value"*, %"class.v8::Value"** %156, align 8
  br label %158

158:                                              ; preds = %149, %155
  %159 = phi %"class.v8::Value"* [ %154, %149 ], [ %157, %155 ]
  %160 = call %"class.blink::DOMArrayBuffer"* @_ZN5blink17NativeValueTraitsINS_14DOMArrayBufferEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %13, i32 0, %"class.v8::Value"* %159, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %161 = load i32, i32* %26, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %304

163:                                              ; preds = %158
  %164 = icmp slt i32 %125, 2
  br i1 %164, label %165, label %194

165:                                              ; preds = %163
  %166 = bitcast %"class.blink::ScriptPromise"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %166) #6
  call void @_ZN5blink16BaseAudioContext15decodeAudioDataEPNS_11ScriptStateEPNS_14DOMArrayBufferERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* nonnull sret %6, %"class.blink::BaseAudioContext"* %144, %"class.blink::ScriptState"* %146, %"class.blink::DOMArrayBuffer"* %160, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %167 = bitcast %"class.blink::ScriptPromise"* %6 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"class.blink::ScriptPromise"* %5 to i64*
  store atomic i64 %168, i64* %169 monotonic, align 8
  %170 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %175, label %172

172:                                              ; preds = %165
  %173 = inttoptr i64 %168 to i8*
  %174 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %173) #6
  br label %175

175:                                              ; preds = %165, %172
  %176 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %5, i64 0, i32 1
  %177 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %6, i64 0, i32 1
  %178 = bitcast %"class.blink::ScriptValue"* %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast %"class.blink::ScriptValue"* %176 to i64*
  store i64 %179, i64* %180, align 8
  %181 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %5, i64 0, i32 1, i32 1
  %182 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %6, i64 0, i32 1, i32 1
  %183 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %181, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %182) #6
  %184 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %6, i64 0, i32 1, i32 1, i32 1, i32 0
  %185 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %184, align 8
  %186 = icmp eq %"class.blink::DOMWrapperWorld"* %185, null
  br i1 %186, label %290, label %187

187:                                              ; preds = %175
  %188 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %185, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %188) #6
  %189 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %185, i64 0, i32 0, i32 0, i32 0, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %290

192:                                              ; preds = %187
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %185) #6
  %193 = bitcast %"class.blink::DOMWrapperWorld"* %185 to i8*
  call void @free(i8* %193) #6
  br label %290

194:                                              ; preds = %163
  %195 = load i32, i32* %52, align 8
  %196 = icmp sgt i32 %195, 1
  br i1 %196, label %203, label %197

197:                                              ; preds = %194
  %198 = load i64*, i64** %9, align 8
  %199 = getelementptr inbounds i64, i64* %198, i64 1
  %200 = load i64, i64* %199, align 8
  %201 = add i64 %200, 160
  %202 = inttoptr i64 %201 to %"class.v8::Value"*
  br label %207

203:                                              ; preds = %194
  %204 = load i64*, i64** %14, align 8
  %205 = getelementptr inbounds i64, i64* %204, i64 1
  %206 = bitcast i64* %205 to %"class.v8::Value"*
  br label %207

207:                                              ; preds = %197, %203
  %208 = phi %"class.v8::Value"* [ %202, %197 ], [ %206, %203 ]
  %209 = call %"class.blink::V8DecodeSuccessCallback"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_23V8DecodeSuccessCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %13, i32 1, %"class.v8::Value"* %208, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %210 = load i32, i32* %26, align 8
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %304

212:                                              ; preds = %207
  %213 = icmp slt i32 %125, 3
  br i1 %213, label %214, label %243

214:                                              ; preds = %212
  %215 = bitcast %"class.blink::ScriptPromise"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %215) #6
  call void @_ZN5blink16BaseAudioContext15decodeAudioDataEPNS_11ScriptStateEPNS_14DOMArrayBufferEPNS_23V8DecodeSuccessCallbackERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* nonnull sret %7, %"class.blink::BaseAudioContext"* %144, %"class.blink::ScriptState"* %146, %"class.blink::DOMArrayBuffer"* %160, %"class.blink::V8DecodeSuccessCallback"* %209, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %216 = bitcast %"class.blink::ScriptPromise"* %7 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.blink::ScriptPromise"* %5 to i64*
  store atomic i64 %217, i64* %218 monotonic, align 8
  %219 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %224, label %221

221:                                              ; preds = %214
  %222 = inttoptr i64 %217 to i8*
  %223 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %222) #6
  br label %224

224:                                              ; preds = %214, %221
  %225 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %5, i64 0, i32 1
  %226 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %7, i64 0, i32 1
  %227 = bitcast %"class.blink::ScriptValue"* %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast %"class.blink::ScriptValue"* %225 to i64*
  store i64 %228, i64* %229, align 8
  %230 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %5, i64 0, i32 1, i32 1
  %231 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %7, i64 0, i32 1, i32 1
  %232 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %230, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %231) #6
  %233 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %7, i64 0, i32 1, i32 1, i32 1, i32 0
  %234 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %233, align 8
  %235 = icmp eq %"class.blink::DOMWrapperWorld"* %234, null
  br i1 %235, label %290, label %236

236:                                              ; preds = %224
  %237 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %234, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %237) #6
  %238 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %234, i64 0, i32 0, i32 0, i32 0, i32 0
  %239 = load i32, i32* %238, align 4
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %290

241:                                              ; preds = %236
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %234) #6
  %242 = bitcast %"class.blink::DOMWrapperWorld"* %234 to i8*
  call void @free(i8* %242) #6
  br label %290

243:                                              ; preds = %212
  %244 = load i32, i32* %52, align 8
  %245 = icmp sgt i32 %244, 2
  br i1 %245, label %252, label %246

246:                                              ; preds = %243
  %247 = load i64*, i64** %9, align 8
  %248 = getelementptr inbounds i64, i64* %247, i64 1
  %249 = load i64, i64* %248, align 8
  %250 = add i64 %249, 160
  %251 = inttoptr i64 %250 to %"class.v8::Value"*
  br label %256

252:                                              ; preds = %243
  %253 = load i64*, i64** %14, align 8
  %254 = getelementptr inbounds i64, i64* %253, i64 2
  %255 = bitcast i64* %254 to %"class.v8::Value"*
  br label %256

256:                                              ; preds = %246, %252
  %257 = phi %"class.v8::Value"* [ %251, %246 ], [ %255, %252 ]
  %258 = call %"class.blink::V8DecodeErrorCallback"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_21V8DecodeErrorCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %13, i32 2, %"class.v8::Value"* %257, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %259 = load i32, i32* %26, align 8
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %304

261:                                              ; preds = %256
  %262 = bitcast %"class.blink::ScriptPromise"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %262) #6
  call void @_ZN5blink16BaseAudioContext15decodeAudioDataEPNS_11ScriptStateEPNS_14DOMArrayBufferEPNS_23V8DecodeSuccessCallbackEPNS_21V8DecodeErrorCallbackERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* nonnull sret %8, %"class.blink::BaseAudioContext"* %144, %"class.blink::ScriptState"* %146, %"class.blink::DOMArrayBuffer"* %160, %"class.blink::V8DecodeSuccessCallback"* %209, %"class.blink::V8DecodeErrorCallback"* %258, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %263 = bitcast %"class.blink::ScriptPromise"* %8 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = bitcast %"class.blink::ScriptPromise"* %5 to i64*
  store atomic i64 %264, i64* %265 monotonic, align 8
  %266 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %271, label %268

268:                                              ; preds = %261
  %269 = inttoptr i64 %264 to i8*
  %270 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %269) #6
  br label %271

271:                                              ; preds = %261, %268
  %272 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %5, i64 0, i32 1
  %273 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %8, i64 0, i32 1
  %274 = bitcast %"class.blink::ScriptValue"* %273 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = bitcast %"class.blink::ScriptValue"* %272 to i64*
  store i64 %275, i64* %276, align 8
  %277 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %5, i64 0, i32 1, i32 1
  %278 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %8, i64 0, i32 1, i32 1
  %279 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %277, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %278) #6
  %280 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %8, i64 0, i32 1, i32 1, i32 1, i32 0
  %281 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %280, align 8
  %282 = icmp eq %"class.blink::DOMWrapperWorld"* %281, null
  br i1 %282, label %290, label %283

283:                                              ; preds = %271
  %284 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %281, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %284) #6
  %285 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %281, i64 0, i32 0, i32 0, i32 0, i32 0
  %286 = load i32, i32* %285, align 4
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %290

288:                                              ; preds = %283
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %281) #6
  %289 = bitcast %"class.blink::DOMWrapperWorld"* %281 to i8*
  call void @free(i8* %289) #6
  br label %290

290:                                              ; preds = %288, %283, %271, %241, %236, %224, %192, %187, %175
  %291 = phi i8* [ %166, %175 ], [ %166, %187 ], [ %166, %192 ], [ %215, %224 ], [ %215, %236 ], [ %215, %241 ], [ %262, %271 ], [ %262, %283 ], [ %262, %288 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %291) #6
  %292 = load i32, i32* %26, align 8
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %304

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %5, i64 0, i32 1
  %296 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %295) #6
  %297 = load i64*, i64** %9, align 8
  %298 = getelementptr inbounds i64, i64* %297, i64 3
  %299 = icmp eq %"class.v8::Value"* %296, null
  %300 = bitcast %"class.v8::Value"* %296 to i64*
  %301 = getelementptr inbounds i64, i64* %297, i64 2
  %302 = select i1 %299, i64* %301, i64* %300, !prof !2
  %303 = load i64, i64* %302, align 8
  store i64 %303, i64* %298, align 8
  br label %304

304:                                              ; preds = %290, %256, %207, %158, %294
  %305 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %77, align 8
  %306 = icmp eq %"class.blink::DOMWrapperWorld"* %305, null
  br i1 %306, label %314, label %307

307:                                              ; preds = %304
  %308 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %305, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %308) #6
  %309 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %305, i64 0, i32 0, i32 0, i32 0, i32 0
  %310 = load i32, i32* %309, align 4
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %314

312:                                              ; preds = %307
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %305) #6
  %313 = bitcast %"class.blink::DOMWrapperWorld"* %305 to i8*
  call void @free(i8* %313) #6
  br label %314

314:                                              ; preds = %304, %307, %312
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #6
  br label %315

315:                                              ; preds = %74, %314, %38
  call void @_ZN5blink29ExceptionToRejectPromiseScopeD2Ev(%"class.blink::ExceptionToRejectPromiseScope"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %316 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, null
  br i1 %318, label %328, label %319

319:                                              ; preds = %315
  %320 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %25, align 8
  %321 = bitcast %"class.v8::Isolate"* %320 to %"class.v8::internal::Isolate"*
  %322 = load i64, i64* %317, align 8
  %323 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %321, i64 %322) #6
  %324 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %320) #6
  br i1 %324, label %328, label %325

325:                                              ; preds = %319
  %326 = bitcast i64* %323 to %"class.v8::Value"*
  %327 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %320, %"class.v8::Value"* %326) #6
  br label %328

328:                                              ; preds = %325, %319, %315
  %329 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #6
  br label %344

344:                                              ; preds = %328, %340, %343
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %18) #6
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.181"* byval(%"class.base::span.181") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.39, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i64 0, i64 0)) #6
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.39, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.41, i64 0, i64 0)) #6
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_base_audio_context32AudioWorkletAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::BaseAudioContext"*
  %25 = tail call %"class.blink::AudioWorklet"* @_ZNK5blink16BaseAudioContext12audioWorkletEv(%"class.blink::BaseAudioContext"* %24) #6
  %26 = getelementptr inbounds %"class.blink::AudioWorklet", %"class.blink::AudioWorklet"* %25, i64 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::AudioWorklet"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !2

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #6
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #6
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #6
  %49 = bitcast %"class.blink::AudioWorklet"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #6
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_6ObjectEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

declare %"class.blink::AudioDestinationNode"* @_ZNK5blink16BaseAudioContext11destinationEv(%"class.blink::BaseAudioContext"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64*, %"class.blink::ScriptWrappable"*, %"class.v8::Object"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %5 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %12 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  %19 = icmp eq %"class.v8::Object"* %2, null
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.v8::Object"* %2 to i64*
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %22, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %28, label %37

26:                                               ; preds = %15
  %27 = and i1 %19, %18
  br i1 %27, label %28, label %37

28:                                               ; preds = %21, %26, %4
  %29 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  %32 = getelementptr inbounds i64, i64* %0, i64 -1
  %33 = select i1 %31, i64* %32, i64* %30, !prof !2
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %0, align 8
  %35 = load i64*, i64** %29, align 8
  %36 = icmp ne i64* %35, null
  br label %80

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds i64, i64* %0, i64 -2
  %39 = bitcast i64* %38 to %"class.v8::Isolate"**
  %40 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %40) #6
  %42 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %41) #6
  %43 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %42, i64 0, i32 2, i32 0
  %44 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !4
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %52, null
  %54 = getelementptr inbounds i64, i64* %0, i64 -1
  %55 = select i1 %53, i64* %54, i64* %52, !prof !2
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %0, align 8
  %57 = load i64*, i64** %51, align 8
  %58 = icmp ne i64* %57, null
  br label %80

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0
  %62 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %61, %"class.blink::ScriptWrappable"* %1) #6
  %63 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %62, 0
  %64 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %63, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %78, !prof !2

75:                                               ; preds = %71
  %76 = getelementptr inbounds i64, i64* %0, i64 -1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %0, align 8
  br label %80

78:                                               ; preds = %71
  %79 = load i64, i64* %73, align 8
  store i64 %79, i64* %0, align 8
  br label %80

80:                                               ; preds = %78, %75, %59, %50, %28
  %81 = phi i1 [ %36, %28 ], [ %58, %50 ], [ false, %59 ], [ true, %75 ], [ true, %78 ]
  ret i1 %81
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN5blink13Dactyloscoper19RecordDirectSurfaceEPNS_16ExecutionContextENS_5mojom10WebFeatureERKNS_17IdentifiableTokenE(%"class.blink::ExecutionContext"*, i32, %"class.blink::IdentifiableToken"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink16BaseAudioContext5stateEv(%"class.blink::BaseAudioContext"*) local_unnamed_addr #2

declare void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"*, i64*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.blink::EventListener"* @_ZN5blink11EventTarget25GetAttributeEventListenerERKN3WTF12AtomicStringE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::JSEventHandler"* @_ZN5blink14JSEventHandler12CreateOrNullEN2v85LocalINS1_5ValueEEENS0_11HandlerTypeE(%"class.v8::Value"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.blink::AnalyserNode"* @_ZN5blink16BaseAudioContext14createAnalyserERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare %"class.blink::BiquadFilterNode"* @_ZN5blink16BaseAudioContext18createBiquadFilterERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

declare %"class.blink::AudioBuffer"* @_ZN5blink16BaseAudioContext12createBufferEjjfRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, i32, i32, float, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::AudioBufferSourceNode"* @_ZN5blink16BaseAudioContext18createBufferSourceERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::ChannelMergerNode"* @_ZN5blink16BaseAudioContext19createChannelMergerERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::ChannelMergerNode"* @_ZN5blink16BaseAudioContext19createChannelMergerEjRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::ChannelSplitterNode"* @_ZN5blink16BaseAudioContext21createChannelSplitterERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::ChannelSplitterNode"* @_ZN5blink16BaseAudioContext21createChannelSplitterEjRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::ConstantSourceNode"* @_ZN5blink16BaseAudioContext20createConstantSourceERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::ConvolverNode"* @_ZN5blink16BaseAudioContext15createConvolverERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::DelayNode"* @_ZN5blink16BaseAudioContext11createDelayERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::DelayNode"* @_ZN5blink16BaseAudioContext11createDelayEdRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::DynamicsCompressorNode"* @_ZN5blink16BaseAudioContext24createDynamicsCompressorERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::GainNode"* @_ZN5blink16BaseAudioContext10createGainERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::IIRFilterNode"* @_ZN5blink16BaseAudioContext15createIIRFilterEN3WTF6VectorIdLj0ENS1_18PartitionAllocatorEEES4_RNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.WTF::Vector.825"*, %"class.WTF::Vector.825"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.825"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #6
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_30IDLFloatingPointNumberTypeBaseIdLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.825"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #6
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.27, i64 0, i64 0)) #6
  %12 = bitcast %"class.WTF::Vector.825"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #6
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #6
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector.825"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #6
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.28, i64 0, i64 0)) #6
  %26 = bitcast %"class.WTF::Vector.825"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #6
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_30IDLFloatingPointNumberTypeBaseIdLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.825"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #6
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_30IDLFloatingPointNumberTypeBaseIdLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.825"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.825", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca double, align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #6
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 268173312
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29, i64 0, i64 0)) #6
  %12 = bitcast %"class.WTF::Vector.825"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #6
  br label %95

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector.825"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #6
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %9) #6
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #6
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.825"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #6
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #6
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector.825"* %5 to i64*
  br label %76

35:                                               ; preds = %26
  %36 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %37 = bitcast double* %7 to i8*
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %39

39:                                               ; preds = %35, %67
  %40 = phi i32 [ 0, %35 ], [ %68, %67 ]
  %41 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %36, %"class.v8::Context"* %29, i32 %40) #6
  %42 = icmp eq %"class.v8::Value"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #6
  %45 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %46, i64 5
  %48 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %47, align 8
  call void %48(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %44) #6
  %49 = bitcast %"class.WTF::Vector.825"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #6
  br label %85

50:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #6
  %51 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %41, %"class.blink::ExceptionState"* dereferenceable(72) %3) #6
  store double %51, double* %7, align 8
  %52 = load i32, i32* %38, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %65

54:                                               ; preds = %50
  %55 = load i32, i32* %17, align 4
  %56 = load i32, i32* %16, align 8
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %64, label %58, !prof !2

58:                                               ; preds = %54
  %59 = load double*, double** %15, align 8
  %60 = zext i32 %55 to i64
  %61 = getelementptr inbounds double, double* %59, i64 %60
  store double %51, double* %61, align 8
  %62 = load i32, i32* %17, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %17, align 4
  br label %67

64:                                               ; preds = %54
  call void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_(%"class.WTF::Vector.825"* nonnull %5, double* nonnull dereferenceable(8) %7) #6
  br label %67

65:                                               ; preds = %50
  %66 = bitcast %"class.WTF::Vector.825"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #6
  br label %85

67:                                               ; preds = %58, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #6
  %68 = add nuw i32 %40, 1
  %69 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #6
  %70 = icmp ult i32 %68, %69
  br i1 %70, label %39, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.WTF::Vector.825"* %5 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = load i32, i32* %16, align 8
  %75 = load i32, i32* %17, align 4
  br label %76

76:                                               ; preds = %33, %71
  %77 = phi i64* [ %34, %33 ], [ %72, %71 ]
  %78 = phi i32 [ 0, %33 ], [ %75, %71 ]
  %79 = phi i32 [ %27, %33 ], [ %74, %71 ]
  %80 = phi i64 [ %28, %33 ], [ %73, %71 ]
  %81 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %0, i64 0, i32 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %0, i64 0, i32 0, i32 0, i32 2
  %83 = bitcast %"class.WTF::Vector.825"* %0 to i64*
  store i64 0, i64* %83, align 8
  %84 = bitcast %"class.WTF::Vector.825"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store atomic i64 %80, i64* %84 monotonic, align 8
  store i32 %79, i32* %81, align 8
  store i32 0, i32* %16, align 8
  store i32 %78, i32* %82, align 4
  store i32 0, i32* %17, align 4
  br label %85

85:                                               ; preds = %43, %65, %76
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #6
  %86 = load double*, double** %15, align 8
  %87 = icmp eq double* %86, null
  %88 = bitcast double* %86 to i8*
  br i1 %87, label %94, label %89, !prof !3

89:                                               ; preds = %85
  %90 = load i32, i32* %17, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92, !prof !2

92:                                               ; preds = %89
  store i32 0, i32* %17, align 4
  br label %93

93:                                               ; preds = %92, %89
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %88) #6
  store double* null, double** %15, align 8
  br label %94

94:                                               ; preds = %85, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #6
  br label %95

95:                                               ; preds = %94, %11
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_30IDLFloatingPointNumberTypeBaseIdLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.825"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.825", align 8
  %6 = alloca double, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = bitcast %"class.WTF::Vector.825"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #6
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #6
  br i1 %13, label %14, label %41

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast double* %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %18

18:                                               ; preds = %14, %39
  %19 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %20 = icmp eq %"class.v8::Value"* %19, null
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %18
  call void @_ZN2v82V812ToLocalEmptyEv() #6
  br label %22

22:                                               ; preds = %18, %21
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %23 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %19, %"class.blink::ExceptionState"* dereferenceable(72) %3) #6
  store double %23, double* %6, align 8
  %24 = load i32, i32* %17, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.WTF::Vector.825"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  br label %56

28:                                               ; preds = %22
  %29 = load i32, i32* %12, align 4
  %30 = load i32, i32* %11, align 8
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %38, label %32, !prof !2

32:                                               ; preds = %28
  %33 = load double*, double** %10, align 8
  %34 = zext i32 %29 to i64
  %35 = getelementptr inbounds double, double* %33, i64 %34
  store double %23, double* %35, align 8
  %36 = load i32, i32* %12, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %12, align 4
  br label %39

38:                                               ; preds = %28
  call void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_(%"class.WTF::Vector.825"* nonnull %5, double* nonnull dereferenceable(8) %6) #6
  br label %39

39:                                               ; preds = %32, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  %40 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #6
  br i1 %40, label %18, label %41

41:                                               ; preds = %39, %4
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.WTF::Vector.825"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #6
  br label %56

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %0, i64 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %0, i64 0, i32 0, i32 0, i32 2
  %50 = bitcast %"class.WTF::Vector.825"* %5 to i64*
  %51 = bitcast %"class.WTF::Vector.825"* %0 to i64*
  store i64 0, i64* %51, align 8
  %52 = load i64, i64* %50, align 8
  %53 = bitcast %"class.WTF::Vector.825"* %0 to i64*
  store atomic i64 0, i64* %50 monotonic, align 8
  store atomic i64 %52, i64* %53 monotonic, align 8
  %54 = load i32, i32* %11, align 8
  store i32 %54, i32* %48, align 8
  store i32 0, i32* %11, align 8
  %55 = load i32, i32* %12, align 4
  store i32 %55, i32* %49, align 4
  store i32 0, i32* %12, align 4
  br label %56

56:                                               ; preds = %26, %47, %45
  %57 = load double*, double** %10, align 8
  %58 = icmp eq double* %57, null
  %59 = bitcast double* %57 to i8*
  br i1 %58, label %65, label %60, !prof !3

60:                                               ; preds = %56
  %61 = load i32, i32* %12, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63, !prof !2

63:                                               ; preds = %60
  store i32 0, i32* %12, align 4
  br label %64

64:                                               ; preds = %63, %60
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %59) #6
  store double* null, double** %10, align 8
  br label %65

65:                                               ; preds = %56, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #6
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.31, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_(%"class.WTF::Vector.825"*, double* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load double*, double** %6, align 8
  %8 = icmp ugt double* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds double, double* %7, i64 %10
  %12 = icmp ugt double* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq double* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %26) #6
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #6
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.825"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to double*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load double*, double** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne double* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast double* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #6
  %47 = bitcast %"class.WTF::Vector.825"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #6
  %51 = bitcast %"class.WTF::Vector.825"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to double*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint double* %1 to i64
  %56 = ptrtoint double* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.825", %"class.WTF::Vector.825"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq double* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %71) #6
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #6
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.825"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load double*, double** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne double* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast double* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #6
  %87 = bitcast %"class.WTF::Vector.825"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #6
  %91 = bitcast %"class.WTF::Vector.825"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to double*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi double* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds double, double* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi double* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi double* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds double, double* %100, i64 %103
  %105 = bitcast double* %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast double* %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare %"class.blink::OscillatorNode"* @_ZN5blink16BaseAudioContext16createOscillatorERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::PannerNode"* @_ZN5blink16BaseAudioContext12createPannerERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::PeriodicWave"* @_ZN5blink16BaseAudioContext18createPeriodicWaveERKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEES6_PKNS_23PeriodicWaveConstraintsERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.WTF::Vector.549"* dereferenceable(16), %"class.WTF::Vector.549"* dereferenceable(16), %"class.blink::PeriodicWaveConstraints"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.549"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #6
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.549"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #6
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.27, i64 0, i64 0)) #6
  %12 = bitcast %"class.WTF::Vector.549"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #6
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #6
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector.549"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #6
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.28, i64 0, i64 0)) #6
  %26 = bitcast %"class.WTF::Vector.549"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #6
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.549"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #6
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.549"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.549", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca float, align 4
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #6
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 536346624
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29, i64 0, i64 0)) #6
  %12 = bitcast %"class.WTF::Vector.549"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #6
  br label %95

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector.549"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #6
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %9) #6
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #6
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.549"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 2
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #6
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #6
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector.549"* %5 to i64*
  br label %76

35:                                               ; preds = %26
  %36 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %37 = bitcast float* %7 to i8*
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %39

39:                                               ; preds = %35, %67
  %40 = phi i32 [ 0, %35 ], [ %68, %67 ]
  %41 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %36, %"class.v8::Context"* %29, i32 %40) #6
  %42 = icmp eq %"class.v8::Value"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #6
  %45 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %46, i64 5
  %48 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %47, align 8
  call void %48(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %44) #6
  %49 = bitcast %"class.WTF::Vector.549"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #6
  br label %85

50:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #6
  %51 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %41, %"class.blink::ExceptionState"* dereferenceable(72) %3) #6
  store float %51, float* %7, align 4
  %52 = load i32, i32* %38, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %65

54:                                               ; preds = %50
  %55 = load i32, i32* %17, align 4
  %56 = load i32, i32* %16, align 8
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %64, label %58, !prof !2

58:                                               ; preds = %54
  %59 = load float*, float** %15, align 8
  %60 = zext i32 %55 to i64
  %61 = getelementptr inbounds float, float* %59, i64 %60
  store float %51, float* %61, align 4
  %62 = load i32, i32* %17, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %17, align 4
  br label %67

64:                                               ; preds = %54
  call void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.549"* nonnull %5, float* nonnull dereferenceable(4) %7) #6
  br label %67

65:                                               ; preds = %50
  %66 = bitcast %"class.WTF::Vector.549"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #6
  br label %85

67:                                               ; preds = %58, %64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #6
  %68 = add nuw i32 %40, 1
  %69 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #6
  %70 = icmp ult i32 %68, %69
  br i1 %70, label %39, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.WTF::Vector.549"* %5 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = load i32, i32* %16, align 8
  %75 = load i32, i32* %17, align 4
  br label %76

76:                                               ; preds = %33, %71
  %77 = phi i64* [ %34, %33 ], [ %72, %71 ]
  %78 = phi i32 [ 0, %33 ], [ %75, %71 ]
  %79 = phi i32 [ %27, %33 ], [ %74, %71 ]
  %80 = phi i64 [ %28, %33 ], [ %73, %71 ]
  %81 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %0, i64 0, i32 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %0, i64 0, i32 0, i32 0, i32 2
  %83 = bitcast %"class.WTF::Vector.549"* %0 to i64*
  store i64 0, i64* %83, align 8
  %84 = bitcast %"class.WTF::Vector.549"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store atomic i64 %80, i64* %84 monotonic, align 8
  store i32 %79, i32* %81, align 8
  store i32 0, i32* %16, align 8
  store i32 %78, i32* %82, align 4
  store i32 0, i32* %17, align 4
  br label %85

85:                                               ; preds = %43, %65, %76
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #6
  %86 = load float*, float** %15, align 8
  %87 = icmp eq float* %86, null
  %88 = bitcast float* %86 to i8*
  br i1 %87, label %94, label %89, !prof !3

89:                                               ; preds = %85
  %90 = load i32, i32* %17, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92, !prof !2

92:                                               ; preds = %89
  store i32 0, i32* %17, align 4
  br label %93

93:                                               ; preds = %92, %89
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %88) #6
  store float* null, float** %15, align 8
  br label %94

94:                                               ; preds = %85, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #6
  br label %95

95:                                               ; preds = %94, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.549"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.549", align 8
  %6 = alloca float, align 4
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = bitcast %"class.WTF::Vector.549"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #6
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #6
  br i1 %13, label %14, label %41

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast float* %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %18

18:                                               ; preds = %14, %39
  %19 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %20 = icmp eq %"class.v8::Value"* %19, null
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %18
  call void @_ZN2v82V812ToLocalEmptyEv() #6
  br label %22

22:                                               ; preds = %18, %21
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #6
  %23 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %19, %"class.blink::ExceptionState"* dereferenceable(72) %3) #6
  store float %23, float* %6, align 4
  %24 = load i32, i32* %17, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.WTF::Vector.549"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #6
  br label %56

28:                                               ; preds = %22
  %29 = load i32, i32* %12, align 4
  %30 = load i32, i32* %11, align 8
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %38, label %32, !prof !2

32:                                               ; preds = %28
  %33 = load float*, float** %10, align 8
  %34 = zext i32 %29 to i64
  %35 = getelementptr inbounds float, float* %33, i64 %34
  store float %23, float* %35, align 4
  %36 = load i32, i32* %12, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %12, align 4
  br label %39

38:                                               ; preds = %28
  call void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.549"* nonnull %5, float* nonnull dereferenceable(4) %6) #6
  br label %39

39:                                               ; preds = %32, %38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #6
  %40 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #6
  br i1 %40, label %18, label %41

41:                                               ; preds = %39, %4
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.WTF::Vector.549"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #6
  br label %56

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %0, i64 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %0, i64 0, i32 0, i32 0, i32 2
  %50 = bitcast %"class.WTF::Vector.549"* %5 to i64*
  %51 = bitcast %"class.WTF::Vector.549"* %0 to i64*
  store i64 0, i64* %51, align 8
  %52 = load i64, i64* %50, align 8
  %53 = bitcast %"class.WTF::Vector.549"* %0 to i64*
  store atomic i64 0, i64* %50 monotonic, align 8
  store atomic i64 %52, i64* %53 monotonic, align 8
  %54 = load i32, i32* %11, align 8
  store i32 %54, i32* %48, align 8
  store i32 0, i32* %11, align 8
  %55 = load i32, i32* %12, align 4
  store i32 %55, i32* %49, align 4
  store i32 0, i32* %12, align 4
  br label %56

56:                                               ; preds = %26, %47, %45
  %57 = load float*, float** %10, align 8
  %58 = icmp eq float* %57, null
  %59 = bitcast float* %57 to i8*
  br i1 %58, label %65, label %60, !prof !3

60:                                               ; preds = %56
  %61 = load i32, i32* %12, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63, !prof !2

63:                                               ; preds = %60
  store i32 0, i32* %12, align 4
  br label %64

64:                                               ; preds = %63, %60
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %59) #6
  store float* null, float** %10, align 8
  br label %65

65:                                               ; preds = %56, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.31, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.549"*, float* dereferenceable(4)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load float*, float** %6, align 8
  %8 = icmp ugt float* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds float, float* %7, i64 %10
  %12 = icmp ugt float* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq float* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %26) #6
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #6
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.549"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to float*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load float*, float** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne float* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast float* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #6
  %47 = bitcast %"class.WTF::Vector.549"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #6
  %51 = bitcast %"class.WTF::Vector.549"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to float*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint float* %1 to i64
  %56 = ptrtoint float* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.549", %"class.WTF::Vector.549"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq float* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %71) #6
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #6
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.549"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load float*, float** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne float* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast float* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #6
  %87 = bitcast %"class.WTF::Vector.549"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #6
  %91 = bitcast %"class.WTF::Vector.549"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to float*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi float* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds float, float* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi float* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi float* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds float, float* %100, i64 %103
  %105 = bitcast float* %101 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = bitcast float* %104 to i32*
  store i32 %106, i32* %107, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

declare void @_ZN5blink23PeriodicWaveConstraintsC1Ev(%"class.blink::PeriodicWaveConstraints"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.253"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.253"*)) #6
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #6
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0), i8* %21, i8* %22) #6
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.35, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #6
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #6
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.253"*) local_unnamed_addr #2

declare %"class.blink::PeriodicWaveConstraints"* @_ZN5blink17NativeValueTraitsINS_23PeriodicWaveConstraintsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::ScriptProcessorNode"* @_ZN5blink16BaseAudioContext21createScriptProcessorERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::ScriptProcessorNode"* @_ZN5blink16BaseAudioContext21createScriptProcessorEjRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::ScriptProcessorNode"* @_ZN5blink16BaseAudioContext21createScriptProcessorEjjRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, i32, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::ScriptProcessorNode"* @_ZN5blink16BaseAudioContext21createScriptProcessorEjjjRNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, i32, i32, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::StereoPannerNode"* @_ZN5blink16BaseAudioContext18createStereoPannerERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::WaveShaperNode"* @_ZN5blink16BaseAudioContext16createWaveShaperERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::DOMArrayBuffer"* @_ZN5blink17NativeValueTraitsINS_14DOMArrayBufferEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink16BaseAudioContext15decodeAudioDataEPNS_11ScriptStateEPNS_14DOMArrayBufferERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::BaseAudioContext"*, %"class.blink::ScriptState"*, %"class.blink::DOMArrayBuffer"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::V8DecodeSuccessCallback"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_23V8DecodeSuccessCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %2) #6
  br i1 %6, label %7, label %17

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #6
  %10 = bitcast i8* %9 to %"class.blink::V8DecodeSuccessCallback"*
  %11 = bitcast i8* %9 to %"class.blink::CallbackFunctionBase"*
  tail call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %11, %"class.v8::Object"* %8) #6
  %12 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink23V8DecodeSuccessCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  br label %62

17:                                               ; preds = %4
  %18 = bitcast %"class.v8::Value"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 1
  br i1 %21, label %22, label %38

22:                                               ; preds = %17
  %23 = add i64 %19, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %19, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %31, 67
  br i1 %32, label %33, label %38

33:                                               ; preds = %22
  %34 = add i64 %19, 23
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = ashr i32 %36, 1
  switch i32 %37, label %38 [
    i32 5, label %62
    i32 3, label %62
  ]

38:                                               ; preds = %33, %22, %17
  %39 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #6
  %40 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0)) #6
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %41, align 8
  %42 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %43 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %43, i64 3
  %45 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %44, align 8
  call void %45(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #6
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #6
  br label %61

61:                                               ; preds = %38, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #6
  br label %62

62:                                               ; preds = %33, %33, %61, %7
  %63 = phi %"class.blink::V8DecodeSuccessCallback"* [ %10, %7 ], [ null, %61 ], [ null, %33 ], [ null, %33 ]
  ret %"class.blink::V8DecodeSuccessCallback"* %63
}

declare void @_ZN5blink16BaseAudioContext15decodeAudioDataEPNS_11ScriptStateEPNS_14DOMArrayBufferEPNS_23V8DecodeSuccessCallbackERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::BaseAudioContext"*, %"class.blink::ScriptState"*, %"class.blink::DOMArrayBuffer"*, %"class.blink::V8DecodeSuccessCallback"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::V8DecodeErrorCallback"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_21V8DecodeErrorCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %2) #6
  br i1 %6, label %7, label %17

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #6
  %10 = bitcast i8* %9 to %"class.blink::V8DecodeErrorCallback"*
  %11 = bitcast i8* %9 to %"class.blink::CallbackFunctionBase"*
  tail call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %11, %"class.v8::Object"* %8) #6
  %12 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink21V8DecodeErrorCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  br label %62

17:                                               ; preds = %4
  %18 = bitcast %"class.v8::Value"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 1
  br i1 %21, label %22, label %38

22:                                               ; preds = %17
  %23 = add i64 %19, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %19, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %31, 67
  br i1 %32, label %33, label %38

33:                                               ; preds = %22
  %34 = add i64 %19, 23
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = ashr i32 %36, 1
  switch i32 %37, label %38 [
    i32 5, label %62
    i32 3, label %62
  ]

38:                                               ; preds = %33, %22, %17
  %39 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #6
  %40 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0)) #6
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %41, align 8
  %42 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %43 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %43, i64 3
  %45 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %44, align 8
  call void %45(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #6
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #6
  br label %61

61:                                               ; preds = %38, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #6
  br label %62

62:                                               ; preds = %33, %33, %61, %7
  %63 = phi %"class.blink::V8DecodeErrorCallback"* [ %10, %7 ], [ null, %61 ], [ null, %33 ], [ null, %33 ]
  ret %"class.blink::V8DecodeErrorCallback"* %63
}

declare void @_ZN5blink16BaseAudioContext15decodeAudioDataEPNS_11ScriptStateEPNS_14DOMArrayBufferEPNS_23V8DecodeSuccessCallbackEPNS_21V8DecodeErrorCallbackERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::BaseAudioContext"*, %"class.blink::ScriptState"*, %"class.blink::DOMArrayBuffer"*, %"class.blink::V8DecodeSuccessCallback"*, %"class.blink::V8DecodeErrorCallback"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29ExceptionToRejectPromiseScopeD2Ev(%"class.blink::ExceptionToRejectPromiseScope"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::ScriptPromise", align 8
  %3 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %0, i64 0, i32 1
  %4 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %42, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %0, i64 0, i32 0
  %10 = load %"class.v8::FunctionCallbackInfo"*, %"class.v8::FunctionCallbackInfo"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %10, i64 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds i64, i64* %12, i64 1
  %14 = bitcast i64* %13 to %"class.v8::Isolate"**
  %15 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %14, align 8
  %16 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %15) #6
  %17 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %16) #6
  %18 = load %"class.v8::FunctionCallbackInfo"*, %"class.v8::FunctionCallbackInfo"** %9, align 8
  %19 = bitcast %"class.blink::ScriptPromise"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #6
  %20 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %3, align 8
  call void @_ZN5blink13ScriptPromise6RejectEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* nonnull sret %2, %"class.blink::ScriptState"* %17, %"class.blink::ExceptionState"* dereferenceable(72) %20) #6
  %21 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %2, i64 0, i32 1
  %22 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %21) #6
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %18, i64 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds i64, i64* %24, i64 3
  %26 = icmp eq %"class.v8::Value"* %22, null
  %27 = bitcast %"class.v8::Value"* %22 to i64*
  %28 = getelementptr inbounds i64, i64* %24, i64 2
  %29 = select i1 %26, i64* %28, i64* %27, !prof !2
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %25, align 8
  %31 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %2, i64 0, i32 1, i32 1, i32 1, i32 0
  %32 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %31, align 8
  %33 = icmp eq %"class.blink::DOMWrapperWorld"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %8
  %35 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %32, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #6
  %36 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %32) #6
  %40 = bitcast %"class.blink::DOMWrapperWorld"* %32 to i8*
  call void @free(i8* %40) #6
  br label %41

41:                                               ; preds = %8, %34, %39
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #6
  br label %42

42:                                               ; preds = %1, %41
  ret void
}

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"*, %"class.blink::WorldSafeV8Reference"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::WorldSafeV8Reference"* %0, %1
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %7) #6
  %10 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %12, i64** %6) #6
  br label %16

16:                                               ; preds = %2, %11, %15
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.422"* dereferenceable(8) %3) #6
  %17 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 1, i32 0
  %19 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %18, align 8
  %20 = icmp eq %"class.blink::DOMWrapperWorld"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #6
  br label %23

23:                                               ; preds = %16, %21
  %24 = ptrtoint %"class.blink::DOMWrapperWorld"* %19 to i64
  %25 = bitcast %class.scoped_refptr.425* %17 to i64*
  %26 = getelementptr inbounds %class.scoped_refptr.425, %class.scoped_refptr.425* %17, i64 0, i32 0
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #6
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #6
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #6
  br label %36

36:                                               ; preds = %23, %29, %34
  ret %"class.blink::WorldSafeV8Reference"* %0
}

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #2

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.422"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.253"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.253"*)) #6
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20CallbackFunctionBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackFunctionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CallbackFunctionBase"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CallbackFunctionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::CallbackFunctionBase"*)***
  %4 = load void (%"class.blink::CallbackFunctionBase"*)**, void (%"class.blink::CallbackFunctionBase"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::CallbackFunctionBase"*)*, void (%"class.blink::CallbackFunctionBase"*)** %4, i64 1
  %6 = load void (%"class.blink::CallbackFunctionBase"*)*, void (%"class.blink::CallbackFunctionBase"*)** %5, align 8
  tail call void %6(%"class.blink::CallbackFunctionBase"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #6
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"*, %"class.v8::Object"*) unnamed_addr #2

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

declare void @_ZN5blink13ScriptPromise6RejectEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::AudioWorklet"* @_ZNK5blink16BaseAudioContext12audioWorkletEv(%"class.blink::BaseAudioContext"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
