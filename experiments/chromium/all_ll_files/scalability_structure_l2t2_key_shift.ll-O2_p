; ModuleID = '../../third_party/webrtc/modules/video_coding/svc/scalability_structure_l2t2_key_shift.cc'
source_filename = "../../third_party/webrtc/modules/video_coding/svc/scalability_structure_l2t2_key_shift.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::ScalabilityStructureL2T2KeyShift" = type { %"class.webrtc::ScalableVideoController", i32, %"class.std::__1::bitset" }
%"class.webrtc::ScalableVideoController" = type { i32 (...)** }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.webrtc::ScalableVideoController::StreamLayersConfig" = type { i32, i32, [4 x i32], [4 x i32] }
%"struct.webrtc::FrameDependencyStructure" = type { i32, i32, i32, %"class.absl::InlinedVector", %"class.absl::InlinedVector.1", %"class.std::__1::vector" }
%"class.absl::InlinedVector" = type { %"class.absl::inlined_vector_internal::Storage" }
%"class.absl::inlined_vector_internal::Storage" = type { %"class.absl::container_internal::CompressedTuple", %"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.0" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.0" = type { i64 }
%"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Allocated", [24 x i8] }
%"struct.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.1" = type { %"class.absl::inlined_vector_internal::Storage.2" }
%"class.absl::inlined_vector_internal::Storage.2" = type { %"class.absl::container_internal::CompressedTuple.3", %"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data" }
%"class.absl::container_internal::CompressedTuple.3" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.4" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.4" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.0" }
%"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Allocated", [16 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Allocated" = type { %"class.webrtc::RenderResolution"*, i64 }
%"class.webrtc::RenderResolution" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"*, %"class.std::__1::__compressed_pair" }
%"struct.webrtc::FrameDependencyTemplate" = type { i32, i32, %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.15", %"class.absl::InlinedVector.15" }
%"class.absl::InlinedVector.8" = type { %"class.absl::inlined_vector_internal::Storage.9" }
%"class.absl::inlined_vector_internal::Storage.9" = type { %"class.absl::container_internal::CompressedTuple.10", %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data" }
%"class.absl::container_internal::CompressedTuple.10" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.11" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.11" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.0" }
%"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Allocated", [24 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.15" = type { %"class.absl::inlined_vector_internal::Storage.16" }
%"class.absl::inlined_vector_internal::Storage.16" = type { %"class.absl::container_internal::CompressedTuple", %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data" }
%"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Allocated" }
%"struct.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Allocated" = type { i32*, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.webrtc::FrameDependencyTemplate"* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.std::__1::__compressed_pair.29" }
%"class.webrtc::ScalableVideoController::LayerFrameConfig" = type { i32, i8, i32, i32, %"class.absl::InlinedVector.22" }
%"class.absl::InlinedVector.22" = type { %"class.absl::inlined_vector_internal::Storage.23" }
%"class.absl::inlined_vector_internal::Storage.23" = type { %"class.absl::container_internal::CompressedTuple.24", %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data" }
%"class.absl::container_internal::CompressedTuple.24" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.25" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.25" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.0" }
%"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Allocated", [48 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Allocated" = type { %"struct.webrtc::CodecBufferUsage"*, i64 }
%"struct.webrtc::CodecBufferUsage" = type <{ i32, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.webrtc::ScalableVideoController::LayerFrameConfig"* }
%"struct.webrtc::GenericFrameInfo" = type { %"struct.webrtc::FrameDependencyTemplate", %"class.absl::InlinedVector.22", %"class.std::__1::vector.34", %"class.std::__1::bitset" }
%"class.std::__1::vector.34" = type { i64*, i64, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { i64 }
%"class.webrtc::VideoBitrateAllocation" = type <{ i32, [5 x [4 x %"class.absl::optional"]], i8, [3 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN6webrtc23ScalableVideoController16LayerFrameConfigENS_9allocatorIS3_EEE7reserveEm = comdat any

$_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m = comdat any

$_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJRibbEEERS3_DpOT_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIiLm10ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m = comdat any

$_ZNSt3__16vectorIN6webrtc23FrameDependencyTemplateENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN6webrtc23ScalableVideoController16LayerFrameConfigENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE6AssignINS0_20IteratorValueAdapterIS6_PKS3_EEEEvT_m = comdat any

$_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJS3_EEERS3_DpOT_ = comdat any

@_ZN6webrtc32ScalabilityStructureL2T2KeyShift17kNumSpatialLayersE = hidden local_unnamed_addr constant i32 2, align 4
@_ZN6webrtc32ScalabilityStructureL2T2KeyShift18kNumTemporalLayersE = hidden local_unnamed_addr constant i32 2, align 4
@.ref.tmp = private constant [4 x i32] [i32 0, i32 0, i32 1, i32 1], align 4
@.str = private unnamed_addr constant [5 x i8] c"SSSS\00", align 1
@.ref.tmp.1 = private constant [2 x i32] zeroinitializer, align 4
@.str.2 = private unnamed_addr constant [5 x i8] c"SS--\00", align 1
@.ref.tmp.3 = private constant [2 x i32] [i32 2, i32 1], align 4
@.ref.tmp.4 = private constant [1 x i32] [i32 2], align 4
@.ref.tmp.5 = private constant [2 x i32] [i32 4, i32 1], align 4
@.ref.tmp.6 = private constant [1 x i32] [i32 4], align 4
@.str.7 = private unnamed_addr constant [5 x i8] c"-D--\00", align 1
@.ref.tmp.8 = private constant [2 x i32] [i32 2, i32 3], align 4
@.ref.tmp.9 = private constant [1 x i32] [i32 2], align 4
@.str.10 = private unnamed_addr constant [5 x i8] c"--SS\00", align 1
@.ref.tmp.11 = private constant [2 x i32] [i32 1, i32 1], align 4
@.ref.tmp.12 = private constant [1 x i32] [i32 1], align 4
@.ref.tmp.13 = private constant [2 x i32] [i32 3, i32 4], align 4
@.ref.tmp.14 = private constant [1 x i32] [i32 4], align 4
@.str.15 = private unnamed_addr constant [5 x i8] c"---D\00", align 1
@.ref.tmp.16 = private constant [2 x i32] [i32 1, i32 2], align 4
@.ref.tmp.17 = private constant [1 x i32] [i32 2], align 4
@_ZTVN6webrtc32ScalabilityStructureL2T2KeyShiftE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::ScalabilityStructureL2T2KeyShift"*)* @_ZN6webrtc32ScalabilityStructureL2T2KeyShiftD2Ev to i8*), i8* bitcast (void (%"class.webrtc::ScalabilityStructureL2T2KeyShift"*)* @_ZN6webrtc32ScalabilityStructureL2T2KeyShiftD0Ev to i8*), i8* bitcast (void (%"struct.webrtc::ScalableVideoController::StreamLayersConfig"*, %"class.webrtc::ScalabilityStructureL2T2KeyShift"*)* @_ZNK6webrtc32ScalabilityStructureL2T2KeyShift12StreamConfigEv to i8*), i8* bitcast (void (%"struct.webrtc::FrameDependencyStructure"*, %"class.webrtc::ScalabilityStructureL2T2KeyShift"*)* @_ZNK6webrtc32ScalabilityStructureL2T2KeyShift19DependencyStructureEv to i8*), i8* bitcast (void (%"class.webrtc::ScalabilityStructureL2T2KeyShift"*, %"class.webrtc::VideoBitrateAllocation"*)* @_ZN6webrtc32ScalabilityStructureL2T2KeyShift14OnRatesUpdatedERKNS_22VideoBitrateAllocationE to i8*), i8* bitcast (void (%"class.std::__1::vector.20"*, %"class.webrtc::ScalabilityStructureL2T2KeyShift"*, i1)* @_ZN6webrtc32ScalabilityStructureL2T2KeyShift15NextFrameConfigEb to i8*), i8* bitcast (void (%"struct.webrtc::GenericFrameInfo"*, %"class.webrtc::ScalabilityStructureL2T2KeyShift"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"*)* @_ZN6webrtc32ScalabilityStructureL2T2KeyShift12OnEncodeDoneERKNS_23ScalableVideoController16LayerFrameConfigE to i8*)] }, align 8

@_ZN6webrtc32ScalabilityStructureL2T2KeyShiftD1Ev = hidden unnamed_addr alias void (%"class.webrtc::ScalabilityStructureL2T2KeyShift"*), void (%"class.webrtc::ScalabilityStructureL2T2KeyShift"*)* @_ZN6webrtc32ScalabilityStructureL2T2KeyShiftD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc32ScalabilityStructureL2T2KeyShiftD2Ev(%"class.webrtc::ScalabilityStructureL2T2KeyShift"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc32ScalabilityStructureL2T2KeyShiftD0Ev(%"class.webrtc::ScalabilityStructureL2T2KeyShift"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.webrtc::ScalabilityStructureL2T2KeyShift"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc32ScalabilityStructureL2T2KeyShift12StreamConfigEv(%"struct.webrtc::ScalableVideoController::StreamLayersConfig"* noalias nocapture sret, %"class.webrtc::ScalabilityStructureL2T2KeyShift"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::ScalableVideoController::StreamLayersConfig", %"struct.webrtc::ScalableVideoController::StreamLayersConfig"* %0, i64 0, i32 2, i64 2
  %4 = getelementptr inbounds %"struct.webrtc::ScalableVideoController::StreamLayersConfig", %"struct.webrtc::ScalableVideoController::StreamLayersConfig"* %0, i64 0, i32 3, i64 2
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %"struct.webrtc::ScalableVideoController::StreamLayersConfig", %"struct.webrtc::ScalableVideoController::StreamLayersConfig"* %0, i64 0, i32 3, i64 3
  store i32 1, i32* %5, align 4
  %6 = bitcast %"struct.webrtc::ScalableVideoController::StreamLayersConfig"* %0 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 1, i32 1>, <4 x i32>* %6, align 4
  %7 = bitcast i32* %3 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 2, i32 1>, <4 x i32>* %7, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc32ScalabilityStructureL2T2KeyShift19DependencyStructureEv(%"struct.webrtc::FrameDependencyStructure"* noalias sret, %"class.webrtc::ScalabilityStructureL2T2KeyShift"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = alloca %"class.absl::InlinedVector.8", align 8
  %4 = alloca %"class.absl::InlinedVector.8", align 8
  %5 = alloca %"class.absl::InlinedVector.8", align 8
  %6 = alloca %"class.absl::InlinedVector.8", align 8
  %7 = alloca %"class.absl::InlinedVector.8", align 8
  %8 = alloca %"class.absl::InlinedVector.8", align 8
  %9 = alloca %"class.absl::InlinedVector.8", align 8
  %10 = bitcast %"struct.webrtc::FrameDependencyStructure"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 104, i1 false)
  %11 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 0
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 5
  %17 = bitcast %"class.std::__1::vector"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #12
  store i32 4, i32* %12, align 4
  store i32 2, i32* %13, align 8
  %18 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4absl23inlined_vector_internal7StorageIiLm10ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage"* %18, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.ref.tmp, i64 0, i64 0), i64 4) #12
  %19 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 5, i32 0, i32 1
  %20 = bitcast %"struct.webrtc::FrameDependencyTemplate"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector"* %16 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = sdiv exact i64 %24, 104
  %26 = icmp ult i64 %25, 7
  %27 = inttoptr i64 %23 to %"struct.webrtc::FrameDependencyTemplate"*
  %28 = inttoptr i64 %21 to %"struct.webrtc::FrameDependencyTemplate"*
  br i1 %26, label %29, label %31

29:                                               ; preds = %2
  %30 = sub nuw nsw i64 7, %25
  tail call void @_ZNSt3__16vectorIN6webrtc23FrameDependencyTemplateENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector"* %16, i64 %30) #12
  br label %68

31:                                               ; preds = %2
  %32 = icmp eq i64 %24, 728
  br i1 %32, label %68, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %27, i64 7
  %35 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %34, %28
  br i1 %35, label %67, label %36

36:                                               ; preds = %33, %65
  %37 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %38, %65 ], [ %28, %33 ]
  %38 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %37, i64 -1
  %39 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %37, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %37, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %45 = bitcast i32** %44 to i8**
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #11
  br label %47

47:                                               ; preds = %43, %36
  %48 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %37, i64 -1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %37, i64 -1, i32 3, i32 0, i32 1, i32 0, i32 0
  %54 = bitcast i32** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #11
  br label %56

56:                                               ; preds = %52, %47
  %57 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %37, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %37, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0
  %63 = bitcast i32** %62 to i8**
  %64 = load i8*, i8** %63, align 8
  tail call void @_ZdlPv(i8* %64) #11
  br label %65

65:                                               ; preds = %61, %56
  %66 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %38, %34
  br i1 %66, label %67, label %36

67:                                               ; preds = %65, %33
  store %"struct.webrtc::FrameDependencyTemplate"* %34, %"struct.webrtc::FrameDependencyTemplate"** %19, align 8
  br label %68

68:                                               ; preds = %31, %29, %67
  %69 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 0
  %70 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %69, align 8
  %71 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %70, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %70, i64 0, i32 1
  store i32 0, i32* %72, align 4
  %73 = bitcast %"class.absl::InlinedVector.8"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %73) #12
  call void @_ZN6webrtc11webrtc_impl31StringToDecodeTargetIndicationsEN4absl11string_viewE(%"class.absl::InlinedVector.8"* nonnull sret %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #12
  %74 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %70, i64 0, i32 2
  %75 = icmp eq %"class.absl::InlinedVector.8"* %9, %74
  br i1 %75, label %92, label %76, !prof !2

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %70, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %83 = bitcast i32** %82 to i8**
  %84 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %84) #11
  br label %85

85:                                               ; preds = %81, %76
  %86 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %77, align 8
  %88 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %9, i64 0, i32 0, i32 1
  %89 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %70, i64 0, i32 2, i32 0, i32 1
  %90 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %89 to i8*
  %91 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 40, i1 false) #12
  store i64 0, i64* %86, align 8
  br label %101

92:                                               ; preds = %68
  %93 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = and i64 %94, 1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast i32** %98 to i8**
  %100 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %100) #11
  br label %101

101:                                              ; preds = %85, %92, %97
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %73) #12
  %102 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %70, i64 0, i32 4, i32 0
  call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.16"* %102, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp.1, i64 0, i64 0), i64 2) #12
  %103 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %69, align 8
  %104 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %103, i64 1, i32 0
  store i32 0, i32* %104, align 8
  %105 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %103, i64 1, i32 1
  store i32 0, i32* %105, align 4
  %106 = bitcast %"class.absl::InlinedVector.8"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %106) #12
  call void @_ZN6webrtc11webrtc_impl31StringToDecodeTargetIndicationsEN4absl11string_viewE(%"class.absl::InlinedVector.8"* nonnull sret %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #12
  %107 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %103, i64 1, i32 2
  %108 = icmp eq %"class.absl::InlinedVector.8"* %8, %107
  br i1 %108, label %125, label %109, !prof !2

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = and i64 %111, 1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %103, i64 1, i32 2, i32 0, i32 1, i32 0, i32 0
  %116 = bitcast i32** %115 to i8**
  %117 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %117) #11
  br label %118

118:                                              ; preds = %114, %109
  %119 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %110, align 8
  %121 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %8, i64 0, i32 0, i32 1
  %122 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %103, i64 1, i32 2, i32 0, i32 1
  %123 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %122 to i8*
  %124 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 40, i1 false) #12
  store i64 0, i64* %119, align 8
  br label %134

125:                                              ; preds = %101
  %126 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = and i64 %127, 1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %134, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %132 = bitcast i32** %131 to i8**
  %133 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %133) #11
  br label %134

134:                                              ; preds = %118, %125, %130
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %106) #12
  %135 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %103, i64 1, i32 4, i32 0
  call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.16"* %135, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp.3, i64 0, i64 0), i64 2) #12
  %136 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %103, i64 1, i32 3, i32 0
  call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.16"* %136, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.ref.tmp.4, i64 0, i64 0), i64 1) #12
  %137 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %69, align 8
  %138 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %137, i64 2, i32 0
  store i32 0, i32* %138, align 8
  %139 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %137, i64 2, i32 1
  store i32 0, i32* %139, align 4
  %140 = bitcast %"class.absl::InlinedVector.8"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %140) #12
  call void @_ZN6webrtc11webrtc_impl31StringToDecodeTargetIndicationsEN4absl11string_viewE(%"class.absl::InlinedVector.8"* nonnull sret %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #12
  %141 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %137, i64 2, i32 2
  %142 = icmp eq %"class.absl::InlinedVector.8"* %6, %141
  br i1 %142, label %159, label %143, !prof !2

143:                                              ; preds = %134
  %144 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %141, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i64, i64* %144, align 8
  %146 = and i64 %145, 1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %152, label %148

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %137, i64 2, i32 2, i32 0, i32 1, i32 0, i32 0
  %150 = bitcast i32** %149 to i8**
  %151 = load i8*, i8** %150, align 8
  call void @_ZdlPv(i8* %151) #11
  br label %152

152:                                              ; preds = %148, %143
  %153 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i64, i64* %153, align 8
  store i64 %154, i64* %144, align 8
  %155 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %6, i64 0, i32 0, i32 1
  %156 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %137, i64 2, i32 2, i32 0, i32 1
  %157 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %156 to i8*
  %158 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %158, i64 40, i1 false) #12
  store i64 0, i64* %153, align 8
  br label %168

159:                                              ; preds = %134
  %160 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = and i64 %161, 1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %168, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %166 = bitcast i32** %165 to i8**
  %167 = load i8*, i8** %166, align 8
  call void @_ZdlPv(i8* %167) #11
  br label %168

168:                                              ; preds = %152, %159, %164
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %140) #12
  %169 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %137, i64 2, i32 4, i32 0
  call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.16"* %169, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp.5, i64 0, i64 0), i64 2) #12
  %170 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %137, i64 2, i32 3, i32 0
  call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.16"* %170, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.ref.tmp.6, i64 0, i64 0), i64 1) #12
  %171 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %69, align 8
  %172 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %171, i64 3, i32 0
  store i32 0, i32* %172, align 8
  %173 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %171, i64 3, i32 1
  store i32 1, i32* %173, align 4
  %174 = bitcast %"class.absl::InlinedVector.8"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %174) #12
  call void @_ZN6webrtc11webrtc_impl31StringToDecodeTargetIndicationsEN4absl11string_viewE(%"class.absl::InlinedVector.8"* nonnull sret %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i64 4) #12
  %175 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %171, i64 3, i32 2
  %176 = icmp eq %"class.absl::InlinedVector.8"* %5, %175
  br i1 %176, label %193, label %177, !prof !2

177:                                              ; preds = %168
  %178 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i64, i64* %178, align 8
  %180 = and i64 %179, 1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %186, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %171, i64 3, i32 2, i32 0, i32 1, i32 0, i32 0
  %184 = bitcast i32** %183 to i8**
  %185 = load i8*, i8** %184, align 8
  call void @_ZdlPv(i8* %185) #11
  br label %186

186:                                              ; preds = %182, %177
  %187 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i64, i64* %187, align 8
  store i64 %188, i64* %178, align 8
  %189 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %5, i64 0, i32 0, i32 1
  %190 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %171, i64 3, i32 2, i32 0, i32 1
  %191 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %190 to i8*
  %192 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %189 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %191, i8* align 8 %192, i64 40, i1 false) #12
  store i64 0, i64* %187, align 8
  br label %202

193:                                              ; preds = %168
  %194 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load i64, i64* %194, align 8
  %196 = and i64 %195, 1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %202, label %198

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %200 = bitcast i32** %199 to i8**
  %201 = load i8*, i8** %200, align 8
  call void @_ZdlPv(i8* %201) #11
  br label %202

202:                                              ; preds = %186, %193, %198
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %174) #12
  %203 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %171, i64 3, i32 4, i32 0
  call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.16"* %203, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp.8, i64 0, i64 0), i64 2) #12
  %204 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %171, i64 3, i32 3, i32 0
  call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.16"* %204, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.ref.tmp.9, i64 0, i64 0), i64 1) #12
  %205 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %69, align 8
  %206 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %205, i64 4, i32 0
  store i32 1, i32* %206, align 8
  %207 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %205, i64 4, i32 1
  store i32 0, i32* %207, align 4
  %208 = bitcast %"class.absl::InlinedVector.8"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %208) #12
  call void @_ZN6webrtc11webrtc_impl31StringToDecodeTargetIndicationsEN4absl11string_viewE(%"class.absl::InlinedVector.8"* nonnull sret %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i64 4) #12
  %209 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %205, i64 4, i32 2
  %210 = icmp eq %"class.absl::InlinedVector.8"* %4, %209
  br i1 %210, label %227, label %211, !prof !2

211:                                              ; preds = %202
  %212 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load i64, i64* %212, align 8
  %214 = and i64 %213, 1
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %220, label %216

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %205, i64 4, i32 2, i32 0, i32 1, i32 0, i32 0
  %218 = bitcast i32** %217 to i8**
  %219 = load i8*, i8** %218, align 8
  call void @_ZdlPv(i8* %219) #11
  br label %220

220:                                              ; preds = %216, %211
  %221 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load i64, i64* %221, align 8
  store i64 %222, i64* %212, align 8
  %223 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %4, i64 0, i32 0, i32 1
  %224 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %205, i64 4, i32 2, i32 0, i32 1
  %225 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %224 to i8*
  %226 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %225, i8* align 8 %226, i64 40, i1 false) #12
  store i64 0, i64* %221, align 8
  br label %236

227:                                              ; preds = %202
  %228 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load i64, i64* %228, align 8
  %230 = and i64 %229, 1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %236, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %234 = bitcast i32** %233 to i8**
  %235 = load i8*, i8** %234, align 8
  call void @_ZdlPv(i8* %235) #11
  br label %236

236:                                              ; preds = %220, %227, %232
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %208) #12
  %237 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %205, i64 4, i32 4, i32 0
  call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.16"* %237, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp.11, i64 0, i64 0), i64 2) #12
  %238 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %205, i64 4, i32 3, i32 0
  call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.16"* %238, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.ref.tmp.12, i64 0, i64 0), i64 1) #12
  %239 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %69, align 8
  %240 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %239, i64 5, i32 0
  store i32 1, i32* %240, align 8
  %241 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %239, i64 5, i32 1
  store i32 0, i32* %241, align 4
  %242 = bitcast %"class.absl::InlinedVector.8"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %242) #12
  call void @_ZN6webrtc11webrtc_impl31StringToDecodeTargetIndicationsEN4absl11string_viewE(%"class.absl::InlinedVector.8"* nonnull sret %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i64 4) #12
  %243 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %239, i64 5, i32 2
  %244 = icmp eq %"class.absl::InlinedVector.8"* %3, %243
  br i1 %244, label %261, label %245, !prof !2

245:                                              ; preds = %236
  %246 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %243, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load i64, i64* %246, align 8
  %248 = and i64 %247, 1
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %254, label %250

250:                                              ; preds = %245
  %251 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %239, i64 5, i32 2, i32 0, i32 1, i32 0, i32 0
  %252 = bitcast i32** %251 to i8**
  %253 = load i8*, i8** %252, align 8
  call void @_ZdlPv(i8* %253) #11
  br label %254

254:                                              ; preds = %250, %245
  %255 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load i64, i64* %255, align 8
  store i64 %256, i64* %246, align 8
  %257 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %3, i64 0, i32 0, i32 1
  %258 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %239, i64 5, i32 2, i32 0, i32 1
  %259 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %258 to i8*
  %260 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %259, i8* align 8 %260, i64 40, i1 false) #12
  store i64 0, i64* %255, align 8
  br label %270

261:                                              ; preds = %236
  %262 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load i64, i64* %262, align 8
  %264 = and i64 %263, 1
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %270, label %266

266:                                              ; preds = %261
  %267 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %268 = bitcast i32** %267 to i8**
  %269 = load i8*, i8** %268, align 8
  call void @_ZdlPv(i8* %269) #11
  br label %270

270:                                              ; preds = %254, %261, %266
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %242) #12
  %271 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %239, i64 5, i32 4, i32 0
  call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.16"* %271, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp.13, i64 0, i64 0), i64 2) #12
  %272 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %239, i64 5, i32 3, i32 0
  call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.16"* %272, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.ref.tmp.14, i64 0, i64 0), i64 1) #12
  %273 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %69, align 8
  %274 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %273, i64 6, i32 0
  store i32 1, i32* %274, align 8
  %275 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %273, i64 6, i32 1
  store i32 1, i32* %275, align 4
  %276 = bitcast %"class.absl::InlinedVector.8"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %276) #12
  call void @_ZN6webrtc11webrtc_impl31StringToDecodeTargetIndicationsEN4absl11string_viewE(%"class.absl::InlinedVector.8"* nonnull sret %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i64 4) #12
  %277 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %273, i64 6, i32 2
  %278 = icmp eq %"class.absl::InlinedVector.8"* %7, %277
  br i1 %278, label %295, label %279, !prof !2

279:                                              ; preds = %270
  %280 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %277, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load i64, i64* %280, align 8
  %282 = and i64 %281, 1
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %288, label %284

284:                                              ; preds = %279
  %285 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %273, i64 6, i32 2, i32 0, i32 1, i32 0, i32 0
  %286 = bitcast i32** %285 to i8**
  %287 = load i8*, i8** %286, align 8
  call void @_ZdlPv(i8* %287) #11
  br label %288

288:                                              ; preds = %284, %279
  %289 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load i64, i64* %289, align 8
  store i64 %290, i64* %280, align 8
  %291 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %7, i64 0, i32 0, i32 1
  %292 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %273, i64 6, i32 2, i32 0, i32 1
  %293 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %292 to i8*
  %294 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %291 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %293, i8* align 8 %294, i64 40, i1 false) #12
  store i64 0, i64* %289, align 8
  br label %304

295:                                              ; preds = %270
  %296 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load i64, i64* %296, align 8
  %298 = and i64 %297, 1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %304, label %300

300:                                              ; preds = %295
  %301 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %302 = bitcast i32** %301 to i8**
  %303 = load i8*, i8** %302, align 8
  call void @_ZdlPv(i8* %303) #11
  br label %304

304:                                              ; preds = %288, %295, %300
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %276) #12
  %305 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %273, i64 6, i32 4, i32 0
  call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.16"* %305, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp.16, i64 0, i64 0), i64 2) #12
  %306 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %273, i64 6, i32 3, i32 0
  call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.16"* %306, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.ref.tmp.17, i64 0, i64 0), i64 1) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc32ScalabilityStructureL2T2KeyShift15NextFrameConfigEb(%"class.std::__1::vector.20"* noalias sret, %"class.webrtc::ScalabilityStructureL2T2KeyShift"* nocapture, i1 zeroext) unnamed_addr #1 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i32, align 4
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i32, align 4
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i32, align 4
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"class.std::__1::vector.20"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #12
  tail call void @_ZNSt3__16vectorIN6webrtc23ScalableVideoController16LayerFrameConfigENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector.20"* %0, i64 2)
  %35 = getelementptr inbounds %"class.webrtc::ScalabilityStructureL2T2KeyShift", %"class.webrtc::ScalabilityStructureL2T2KeyShift"* %1, i64 0, i32 1
  br i1 %2, label %36, label %38

36:                                               ; preds = %3
  store i32 0, i32* %35, align 8
  %37 = getelementptr inbounds %"class.webrtc::ScalabilityStructureL2T2KeyShift", %"class.webrtc::ScalabilityStructureL2T2KeyShift"* %1, i64 0, i32 1
  br label %41

38:                                               ; preds = %3
  %39 = load i32, i32* %35, align 8
  %40 = getelementptr inbounds %"class.webrtc::ScalabilityStructureL2T2KeyShift", %"class.webrtc::ScalabilityStructureL2T2KeyShift"* %1, i64 0, i32 1
  switch i32 %39, label %496 [
    i32 0, label %41
    i32 1, label %184
    i32 2, label %340
  ]

41:                                               ; preds = %36, %38
  %42 = phi i32* [ %37, %36 ], [ %40, %38 ]
  %43 = getelementptr inbounds %"class.webrtc::ScalabilityStructureL2T2KeyShift", %"class.webrtc::ScalabilityStructureL2T2KeyShift"* %1, i64 0, i32 2, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %95, label %47

47:                                               ; preds = %41
  %48 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  %49 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %33, align 8
  %50 = icmp ult %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %48, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %47
  %52 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 88, i1 false) #12
  %53 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %48, i64 1
  %54 = ptrtoint %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %53 to i64
  %55 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32 to i64*
  store i64 %54, i64* %55, align 8
  br label %58

56:                                               ; preds = %47
  tail call void @_ZNSt3__16vectorIN6webrtc23ScalableVideoController16LayerFrameConfigENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.20"* %0) #12
  %57 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  br label %58

58:                                               ; preds = %51, %56
  %59 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %53, %51 ], [ %57, %56 ]
  %60 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %59, i64 -1, i32 2
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %59, i64 -1, i32 3
  store i32 0, i32* %61, align 4
  %62 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62)
  store i32 0, i32* %19, align 4
  %63 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %59, i64 -1, i32 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #12
  store i8 0, i8* %20, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %21) #12
  store i8 1, i8* %21, align 1
  %64 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %63, i64 0, i32 0
  %65 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i64, i64* %65, align 8, !noalias !3
  %67 = and i64 %66, 1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %58
  %70 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %59, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %71 = bitcast %"struct.webrtc::CodecBufferUsage"** %70 to i64*
  %72 = load i64, i64* %71, align 8, !noalias !3
  %73 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %59, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 1
  %74 = load i64, i64* %73, align 8, !noalias !3
  br label %78

75:                                               ; preds = %58
  %76 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %59, i64 -1, i32 4, i32 0, i32 1
  %77 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %76 to i64
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i64 [ %77, %75 ], [ %72, %69 ]
  %80 = phi i64 [ 8, %75 ], [ %74, %69 ]
  %81 = lshr i64 %66, 1
  %82 = icmp eq i64 %81, %80
  br i1 %82, label %90, label %83, !prof !2

83:                                               ; preds = %78
  %84 = inttoptr i64 %79 to %"struct.webrtc::CodecBufferUsage"*
  %85 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %84, i64 %81, i32 0
  store i32 0, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %84, i64 %81, i32 1
  store i8 0, i8* %86, align 4
  %87 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %84, i64 %81, i32 2
  store i8 1, i8* %87, align 1
  %88 = load i64, i64* %65, align 8
  %89 = add i64 %88, 2
  store i64 %89, i64* %65, align 8
  br label %92

90:                                               ; preds = %78
  %91 = call dereferenceable(8) %"struct.webrtc::CodecBufferUsage"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJRibbEEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.23"* %64, i32* nonnull dereferenceable(4) %19, i8* nonnull dereferenceable(1) %20, i8* nonnull dereferenceable(1) %21) #12
  br label %92

92:                                               ; preds = %83, %90
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62)
  %93 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %59, i64 -1, i32 1
  store i8 1, i8* %93, align 4
  %94 = load i64, i64* %43, align 8
  br label %95

95:                                               ; preds = %41, %92
  %96 = phi i64 [ %44, %41 ], [ %94, %92 ]
  %97 = and i64 %96, 4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %183, label %99

99:                                               ; preds = %95
  %100 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  %101 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %33, align 8
  %102 = icmp ult %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %100, %101
  br i1 %102, label %103, label %108

103:                                              ; preds = %99
  %104 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %100 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 88, i1 false) #12
  %105 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %100, i64 1
  %106 = ptrtoint %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %105 to i64
  %107 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32 to i64*
  store i64 %106, i64* %107, align 8
  br label %110

108:                                              ; preds = %99
  call void @_ZNSt3__16vectorIN6webrtc23ScalableVideoController16LayerFrameConfigENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.20"* %0) #12
  %109 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  br label %110

110:                                              ; preds = %103, %108
  %111 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %105, %103 ], [ %109, %108 ]
  %112 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %111, i64 -1, i32 2
  store i32 1, i32* %112, align 8
  %113 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %111, i64 -1, i32 3
  store i32 0, i32* %113, align 4
  %114 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114)
  store i32 1, i32* %10, align 4
  %115 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %111, i64 -1, i32 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #12
  store i8 0, i8* %11, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #12
  store i8 1, i8* %12, align 1
  %116 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %115, i64 0, i32 0
  %117 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i64, i64* %117, align 8, !noalias !6
  %119 = and i64 %118, 1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %127, label %121

121:                                              ; preds = %110
  %122 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %111, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %123 = bitcast %"struct.webrtc::CodecBufferUsage"** %122 to i64*
  %124 = load i64, i64* %123, align 8, !noalias !6
  %125 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %111, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 1
  %126 = load i64, i64* %125, align 8, !noalias !6
  br label %130

127:                                              ; preds = %110
  %128 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %111, i64 -1, i32 4, i32 0, i32 1
  %129 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %128 to i64
  br label %130

130:                                              ; preds = %127, %121
  %131 = phi i64 [ %129, %127 ], [ %124, %121 ]
  %132 = phi i64 [ 8, %127 ], [ %126, %121 ]
  %133 = lshr i64 %118, 1
  %134 = icmp eq i64 %133, %132
  br i1 %134, label %142, label %135, !prof !2

135:                                              ; preds = %130
  %136 = inttoptr i64 %131 to %"struct.webrtc::CodecBufferUsage"*
  %137 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %136, i64 %133, i32 0
  store i32 1, i32* %137, align 4
  %138 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %136, i64 %133, i32 1
  store i8 0, i8* %138, align 4
  %139 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %136, i64 %133, i32 2
  store i8 1, i8* %139, align 1
  %140 = load i64, i64* %117, align 8
  %141 = add i64 %140, 2
  store i64 %141, i64* %117, align 8
  br label %144

142:                                              ; preds = %130
  %143 = call dereferenceable(8) %"struct.webrtc::CodecBufferUsage"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJRibbEEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.23"* %116, i32* nonnull dereferenceable(4) %10, i8* nonnull dereferenceable(1) %11, i8* nonnull dereferenceable(1) %12) #12
  br label %144

144:                                              ; preds = %135, %142
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114)
  %145 = load i64, i64* %43, align 8
  %146 = and i64 %145, 1
  %147 = icmp eq i64 %146, 0
  %148 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  br i1 %147, label %181, label %149

149:                                              ; preds = %144
  %150 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %150)
  store i32 0, i32* %4, align 4
  %151 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %148, i64 -1, i32 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  store i8 1, i8* %5, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #12
  store i8 0, i8* %6, align 1
  %152 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %151, i64 0, i32 0
  %153 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %151, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i64, i64* %153, align 8, !noalias !9
  %155 = and i64 %154, 1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %163, label %157

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %148, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %159 = bitcast %"struct.webrtc::CodecBufferUsage"** %158 to i64*
  %160 = load i64, i64* %159, align 8, !noalias !9
  %161 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %148, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 1
  %162 = load i64, i64* %161, align 8, !noalias !9
  br label %166

163:                                              ; preds = %149
  %164 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %148, i64 -1, i32 4, i32 0, i32 1
  %165 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %164 to i64
  br label %166

166:                                              ; preds = %163, %157
  %167 = phi i64 [ %165, %163 ], [ %160, %157 ]
  %168 = phi i64 [ 8, %163 ], [ %162, %157 ]
  %169 = lshr i64 %154, 1
  %170 = icmp eq i64 %169, %168
  br i1 %170, label %178, label %171, !prof !2

171:                                              ; preds = %166
  %172 = inttoptr i64 %167 to %"struct.webrtc::CodecBufferUsage"*
  %173 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %172, i64 %169, i32 0
  store i32 0, i32* %173, align 4
  %174 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %172, i64 %169, i32 1
  store i8 1, i8* %174, align 4
  %175 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %172, i64 %169, i32 2
  store i8 0, i8* %175, align 1
  %176 = load i64, i64* %153, align 8
  %177 = add i64 %176, 2
  store i64 %177, i64* %153, align 8
  br label %180

178:                                              ; preds = %166
  %179 = call dereferenceable(8) %"struct.webrtc::CodecBufferUsage"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJRibbEEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.23"* %152, i32* nonnull dereferenceable(4) %4, i8* nonnull dereferenceable(1) %5, i8* nonnull dereferenceable(1) %6) #12
  br label %180

180:                                              ; preds = %171, %178
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %150)
  br label %183

181:                                              ; preds = %144
  %182 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %148, i64 -1, i32 1
  store i8 1, i8* %182, align 4
  br label %183

183:                                              ; preds = %95, %180, %181
  store i32 1, i32* %42, align 8
  br label %496

184:                                              ; preds = %38
  %185 = getelementptr inbounds %"class.webrtc::ScalabilityStructureL2T2KeyShift", %"class.webrtc::ScalabilityStructureL2T2KeyShift"* %1, i64 0, i32 2, i32 0, i32 0
  %186 = load i64, i64* %185, align 8
  %187 = and i64 %186, 1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %236, label %189

189:                                              ; preds = %184
  %190 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  %191 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %33, align 8
  %192 = icmp ult %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %190, %191
  br i1 %192, label %193, label %198

193:                                              ; preds = %189
  %194 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %190 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %194, i8 0, i64 88, i1 false) #12
  %195 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %190, i64 1
  %196 = ptrtoint %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %195 to i64
  %197 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32 to i64*
  store i64 %196, i64* %197, align 8
  br label %200

198:                                              ; preds = %189
  tail call void @_ZNSt3__16vectorIN6webrtc23ScalableVideoController16LayerFrameConfigENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.20"* %0) #12
  %199 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  br label %200

200:                                              ; preds = %193, %198
  %201 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %195, %193 ], [ %199, %198 ]
  %202 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %201, i64 -1, i32 2
  store i32 0, i32* %202, align 8
  %203 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %201, i64 -1, i32 3
  store i32 0, i32* %203, align 4
  %204 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %204)
  store i32 0, i32* %7, align 4
  %205 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %201, i64 -1, i32 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #12
  store i8 1, i8* %8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #12
  store i8 1, i8* %9, align 1
  %206 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %205, i64 0, i32 0
  %207 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %205, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load i64, i64* %207, align 8, !noalias !12
  %209 = and i64 %208, 1
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %217, label %211

211:                                              ; preds = %200
  %212 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %201, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %213 = bitcast %"struct.webrtc::CodecBufferUsage"** %212 to i64*
  %214 = load i64, i64* %213, align 8, !noalias !12
  %215 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %201, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 1
  %216 = load i64, i64* %215, align 8, !noalias !12
  br label %220

217:                                              ; preds = %200
  %218 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %201, i64 -1, i32 4, i32 0, i32 1
  %219 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %218 to i64
  br label %220

220:                                              ; preds = %217, %211
  %221 = phi i64 [ %219, %217 ], [ %214, %211 ]
  %222 = phi i64 [ 8, %217 ], [ %216, %211 ]
  %223 = lshr i64 %208, 1
  %224 = icmp eq i64 %223, %222
  br i1 %224, label %232, label %225, !prof !2

225:                                              ; preds = %220
  %226 = inttoptr i64 %221 to %"struct.webrtc::CodecBufferUsage"*
  %227 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %226, i64 %223, i32 0
  store i32 0, i32* %227, align 4
  %228 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %226, i64 %223, i32 1
  store i8 1, i8* %228, align 4
  %229 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %226, i64 %223, i32 2
  store i8 1, i8* %229, align 1
  %230 = load i64, i64* %207, align 8
  %231 = add i64 %230, 2
  store i64 %231, i64* %207, align 8
  br label %234

232:                                              ; preds = %220
  %233 = call dereferenceable(8) %"struct.webrtc::CodecBufferUsage"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJRibbEEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.23"* %206, i32* nonnull dereferenceable(4) %7, i8* nonnull dereferenceable(1) %8, i8* nonnull dereferenceable(1) %9) #12
  br label %234

234:                                              ; preds = %225, %232
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %204)
  %235 = load i64, i64* %185, align 8
  br label %236

236:                                              ; preds = %184, %234
  %237 = phi i64 [ %186, %184 ], [ %235, %234 ]
  %238 = and i64 %237, 8
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %286, label %240

240:                                              ; preds = %236
  %241 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  %242 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %33, align 8
  %243 = icmp ult %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %241, %242
  br i1 %243, label %244, label %249

244:                                              ; preds = %240
  %245 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %241 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %245, i8 0, i64 88, i1 false) #12
  %246 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %241, i64 1
  %247 = ptrtoint %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %246 to i64
  %248 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32 to i64*
  store i64 %247, i64* %248, align 8
  br label %251

249:                                              ; preds = %240
  call void @_ZNSt3__16vectorIN6webrtc23ScalableVideoController16LayerFrameConfigENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.20"* %0) #12
  %250 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  br label %251

251:                                              ; preds = %244, %249
  %252 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %246, %244 ], [ %250, %249 ]
  %253 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %252, i64 -1, i32 2
  store i32 1, i32* %253, align 8
  %254 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %252, i64 -1, i32 3
  store i32 1, i32* %254, align 4
  %255 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %255)
  store i32 1, i32* %13, align 4
  %256 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %252, i64 -1, i32 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #12
  store i8 1, i8* %14, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #12
  store i8 0, i8* %15, align 1
  %257 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %256, i64 0, i32 0
  %258 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %256, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load i64, i64* %258, align 8, !noalias !15
  %260 = and i64 %259, 1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %268, label %262

262:                                              ; preds = %251
  %263 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %252, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %264 = bitcast %"struct.webrtc::CodecBufferUsage"** %263 to i64*
  %265 = load i64, i64* %264, align 8, !noalias !15
  %266 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %252, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 1
  %267 = load i64, i64* %266, align 8, !noalias !15
  br label %271

268:                                              ; preds = %251
  %269 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %252, i64 -1, i32 4, i32 0, i32 1
  %270 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %269 to i64
  br label %271

271:                                              ; preds = %268, %262
  %272 = phi i64 [ %270, %268 ], [ %265, %262 ]
  %273 = phi i64 [ 8, %268 ], [ %267, %262 ]
  %274 = lshr i64 %259, 1
  %275 = icmp eq i64 %274, %273
  br i1 %275, label %283, label %276, !prof !2

276:                                              ; preds = %271
  %277 = inttoptr i64 %272 to %"struct.webrtc::CodecBufferUsage"*
  %278 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %277, i64 %274, i32 0
  store i32 1, i32* %278, align 4
  %279 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %277, i64 %274, i32 1
  store i8 1, i8* %279, align 4
  %280 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %277, i64 %274, i32 2
  store i8 0, i8* %280, align 1
  %281 = load i64, i64* %258, align 8
  %282 = add i64 %281, 2
  store i64 %282, i64* %258, align 8
  br label %285

283:                                              ; preds = %271
  %284 = call dereferenceable(8) %"struct.webrtc::CodecBufferUsage"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJRibbEEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.23"* %257, i32* nonnull dereferenceable(4) %13, i8* nonnull dereferenceable(1) %14, i8* nonnull dereferenceable(1) %15) #12
  br label %285

285:                                              ; preds = %276, %283
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %255)
  br label %286

286:                                              ; preds = %236, %285
  %287 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %31, align 8
  %288 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  %289 = icmp eq %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %287, %288
  br i1 %289, label %290, label %339

290:                                              ; preds = %286
  %291 = load i64, i64* %185, align 8
  %292 = and i64 %291, 4
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %339, label %294

294:                                              ; preds = %290
  %295 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %33, align 8
  %296 = icmp ult %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %287, %295
  br i1 %296, label %297, label %302

297:                                              ; preds = %294
  %298 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %287 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %298, i8 0, i64 88, i1 false) #12
  %299 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %287, i64 1
  %300 = ptrtoint %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %299 to i64
  %301 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32 to i64*
  store i64 %300, i64* %301, align 8
  br label %304

302:                                              ; preds = %294
  call void @_ZNSt3__16vectorIN6webrtc23ScalableVideoController16LayerFrameConfigENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.20"* %0) #12
  %303 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  br label %304

304:                                              ; preds = %297, %302
  %305 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %299, %297 ], [ %303, %302 ]
  %306 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %305, i64 -1, i32 2
  store i32 1, i32* %306, align 8
  %307 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %305, i64 -1, i32 3
  store i32 0, i32* %307, align 4
  %308 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %308)
  store i32 1, i32* %16, align 4
  %309 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %305, i64 -1, i32 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #12
  store i8 1, i8* %17, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #12
  store i8 1, i8* %18, align 1
  %310 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %309, i64 0, i32 0
  %311 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %309, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i64, i64* %311, align 8, !noalias !18
  %313 = and i64 %312, 1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %321, label %315

315:                                              ; preds = %304
  %316 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %305, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %317 = bitcast %"struct.webrtc::CodecBufferUsage"** %316 to i64*
  %318 = load i64, i64* %317, align 8, !noalias !18
  %319 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %305, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 1
  %320 = load i64, i64* %319, align 8, !noalias !18
  br label %324

321:                                              ; preds = %304
  %322 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %305, i64 -1, i32 4, i32 0, i32 1
  %323 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %322 to i64
  br label %324

324:                                              ; preds = %321, %315
  %325 = phi i64 [ %323, %321 ], [ %318, %315 ]
  %326 = phi i64 [ 8, %321 ], [ %320, %315 ]
  %327 = lshr i64 %312, 1
  %328 = icmp eq i64 %327, %326
  br i1 %328, label %336, label %329, !prof !2

329:                                              ; preds = %324
  %330 = inttoptr i64 %325 to %"struct.webrtc::CodecBufferUsage"*
  %331 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %330, i64 %327, i32 0
  store i32 1, i32* %331, align 4
  %332 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %330, i64 %327, i32 1
  store i8 1, i8* %332, align 4
  %333 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %330, i64 %327, i32 2
  store i8 1, i8* %333, align 1
  %334 = load i64, i64* %311, align 8
  %335 = add i64 %334, 2
  store i64 %335, i64* %311, align 8
  br label %338

336:                                              ; preds = %324
  %337 = call dereferenceable(8) %"struct.webrtc::CodecBufferUsage"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJRibbEEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.23"* %310, i32* nonnull dereferenceable(4) %16, i8* nonnull dereferenceable(1) %17, i8* nonnull dereferenceable(1) %18) #12
  br label %338

338:                                              ; preds = %329, %336
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %308)
  br label %339

339:                                              ; preds = %290, %338, %286
  store i32 2, i32* %40, align 8
  br label %496

340:                                              ; preds = %38
  %341 = getelementptr inbounds %"class.webrtc::ScalabilityStructureL2T2KeyShift", %"class.webrtc::ScalabilityStructureL2T2KeyShift"* %1, i64 0, i32 2, i32 0, i32 0
  %342 = load i64, i64* %341, align 8
  %343 = and i64 %342, 2
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %392, label %345

345:                                              ; preds = %340
  %346 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  %347 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %33, align 8
  %348 = icmp ult %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %346, %347
  br i1 %348, label %349, label %354

349:                                              ; preds = %345
  %350 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %346 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %350, i8 0, i64 88, i1 false) #12
  %351 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %346, i64 1
  %352 = ptrtoint %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %351 to i64
  %353 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32 to i64*
  store i64 %352, i64* %353, align 8
  br label %356

354:                                              ; preds = %345
  tail call void @_ZNSt3__16vectorIN6webrtc23ScalableVideoController16LayerFrameConfigENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.20"* %0) #12
  %355 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  br label %356

356:                                              ; preds = %349, %354
  %357 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %351, %349 ], [ %355, %354 ]
  %358 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %357, i64 -1, i32 2
  store i32 0, i32* %358, align 8
  %359 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %357, i64 -1, i32 3
  store i32 1, i32* %359, align 4
  %360 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %360)
  store i32 0, i32* %22, align 4
  %361 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %357, i64 -1, i32 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #12
  store i8 1, i8* %23, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24) #12
  store i8 0, i8* %24, align 1
  %362 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %361, i64 0, i32 0
  %363 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %361, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = load i64, i64* %363, align 8, !noalias !21
  %365 = and i64 %364, 1
  %366 = icmp eq i64 %365, 0
  br i1 %366, label %373, label %367

367:                                              ; preds = %356
  %368 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %357, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %369 = bitcast %"struct.webrtc::CodecBufferUsage"** %368 to i64*
  %370 = load i64, i64* %369, align 8, !noalias !21
  %371 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %357, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 1
  %372 = load i64, i64* %371, align 8, !noalias !21
  br label %376

373:                                              ; preds = %356
  %374 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %357, i64 -1, i32 4, i32 0, i32 1
  %375 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %374 to i64
  br label %376

376:                                              ; preds = %373, %367
  %377 = phi i64 [ %375, %373 ], [ %370, %367 ]
  %378 = phi i64 [ 8, %373 ], [ %372, %367 ]
  %379 = lshr i64 %364, 1
  %380 = icmp eq i64 %379, %378
  br i1 %380, label %388, label %381, !prof !2

381:                                              ; preds = %376
  %382 = inttoptr i64 %377 to %"struct.webrtc::CodecBufferUsage"*
  %383 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %382, i64 %379, i32 0
  store i32 0, i32* %383, align 4
  %384 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %382, i64 %379, i32 1
  store i8 1, i8* %384, align 4
  %385 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %382, i64 %379, i32 2
  store i8 0, i8* %385, align 1
  %386 = load i64, i64* %363, align 8
  %387 = add i64 %386, 2
  store i64 %387, i64* %363, align 8
  br label %390

388:                                              ; preds = %376
  %389 = call dereferenceable(8) %"struct.webrtc::CodecBufferUsage"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJRibbEEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.23"* %362, i32* nonnull dereferenceable(4) %22, i8* nonnull dereferenceable(1) %23, i8* nonnull dereferenceable(1) %24) #12
  br label %390

390:                                              ; preds = %381, %388
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %360)
  %391 = load i64, i64* %341, align 8
  br label %392

392:                                              ; preds = %340, %390
  %393 = phi i64 [ %342, %340 ], [ %391, %390 ]
  %394 = and i64 %393, 4
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %442, label %396

396:                                              ; preds = %392
  %397 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  %398 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %33, align 8
  %399 = icmp ult %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %397, %398
  br i1 %399, label %400, label %405

400:                                              ; preds = %396
  %401 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %397 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %401, i8 0, i64 88, i1 false) #12
  %402 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %397, i64 1
  %403 = ptrtoint %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %402 to i64
  %404 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32 to i64*
  store i64 %403, i64* %404, align 8
  br label %407

405:                                              ; preds = %396
  call void @_ZNSt3__16vectorIN6webrtc23ScalableVideoController16LayerFrameConfigENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.20"* %0) #12
  %406 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  br label %407

407:                                              ; preds = %400, %405
  %408 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %402, %400 ], [ %406, %405 ]
  %409 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %408, i64 -1, i32 2
  store i32 1, i32* %409, align 8
  %410 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %408, i64 -1, i32 3
  store i32 0, i32* %410, align 4
  %411 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %411)
  store i32 1, i32* %25, align 4
  %412 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %408, i64 -1, i32 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %26) #12
  store i8 1, i8* %26, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %27) #12
  store i8 1, i8* %27, align 1
  %413 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %412, i64 0, i32 0
  %414 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %412, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = load i64, i64* %414, align 8, !noalias !24
  %416 = and i64 %415, 1
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %424, label %418

418:                                              ; preds = %407
  %419 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %408, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %420 = bitcast %"struct.webrtc::CodecBufferUsage"** %419 to i64*
  %421 = load i64, i64* %420, align 8, !noalias !24
  %422 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %408, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 1
  %423 = load i64, i64* %422, align 8, !noalias !24
  br label %427

424:                                              ; preds = %407
  %425 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %408, i64 -1, i32 4, i32 0, i32 1
  %426 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %425 to i64
  br label %427

427:                                              ; preds = %424, %418
  %428 = phi i64 [ %426, %424 ], [ %421, %418 ]
  %429 = phi i64 [ 8, %424 ], [ %423, %418 ]
  %430 = lshr i64 %415, 1
  %431 = icmp eq i64 %430, %429
  br i1 %431, label %439, label %432, !prof !2

432:                                              ; preds = %427
  %433 = inttoptr i64 %428 to %"struct.webrtc::CodecBufferUsage"*
  %434 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %433, i64 %430, i32 0
  store i32 1, i32* %434, align 4
  %435 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %433, i64 %430, i32 1
  store i8 1, i8* %435, align 4
  %436 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %433, i64 %430, i32 2
  store i8 1, i8* %436, align 1
  %437 = load i64, i64* %414, align 8
  %438 = add i64 %437, 2
  store i64 %438, i64* %414, align 8
  br label %441

439:                                              ; preds = %427
  %440 = call dereferenceable(8) %"struct.webrtc::CodecBufferUsage"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJRibbEEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.23"* %413, i32* nonnull dereferenceable(4) %25, i8* nonnull dereferenceable(1) %26, i8* nonnull dereferenceable(1) %27) #12
  br label %441

441:                                              ; preds = %432, %439
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %411)
  br label %442

442:                                              ; preds = %392, %441
  %443 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %31, align 8
  %444 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  %445 = icmp eq %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %443, %444
  br i1 %445, label %446, label %495

446:                                              ; preds = %442
  %447 = load i64, i64* %341, align 8
  %448 = and i64 %447, 1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %495, label %450

450:                                              ; preds = %446
  %451 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %33, align 8
  %452 = icmp ult %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %443, %451
  br i1 %452, label %453, label %458

453:                                              ; preds = %450
  %454 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %443 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %454, i8 0, i64 88, i1 false) #12
  %455 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %443, i64 1
  %456 = ptrtoint %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %455 to i64
  %457 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32 to i64*
  store i64 %456, i64* %457, align 8
  br label %460

458:                                              ; preds = %450
  call void @_ZNSt3__16vectorIN6webrtc23ScalableVideoController16LayerFrameConfigENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.20"* %0) #12
  %459 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %32, align 8
  br label %460

460:                                              ; preds = %453, %458
  %461 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %455, %453 ], [ %459, %458 ]
  %462 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %461, i64 -1, i32 2
  store i32 0, i32* %462, align 8
  %463 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %461, i64 -1, i32 3
  store i32 0, i32* %463, align 4
  %464 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %464)
  store i32 0, i32* %28, align 4
  %465 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %461, i64 -1, i32 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %29) #12
  store i8 1, i8* %29, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #12
  store i8 1, i8* %30, align 1
  %466 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %465, i64 0, i32 0
  %467 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %465, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %468 = load i64, i64* %467, align 8, !noalias !27
  %469 = and i64 %468, 1
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %477, label %471

471:                                              ; preds = %460
  %472 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %461, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %473 = bitcast %"struct.webrtc::CodecBufferUsage"** %472 to i64*
  %474 = load i64, i64* %473, align 8, !noalias !27
  %475 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %461, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 1
  %476 = load i64, i64* %475, align 8, !noalias !27
  br label %480

477:                                              ; preds = %460
  %478 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %461, i64 -1, i32 4, i32 0, i32 1
  %479 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %478 to i64
  br label %480

480:                                              ; preds = %477, %471
  %481 = phi i64 [ %479, %477 ], [ %474, %471 ]
  %482 = phi i64 [ 8, %477 ], [ %476, %471 ]
  %483 = lshr i64 %468, 1
  %484 = icmp eq i64 %483, %482
  br i1 %484, label %492, label %485, !prof !2

485:                                              ; preds = %480
  %486 = inttoptr i64 %481 to %"struct.webrtc::CodecBufferUsage"*
  %487 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %486, i64 %483, i32 0
  store i32 0, i32* %487, align 4
  %488 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %486, i64 %483, i32 1
  store i8 1, i8* %488, align 4
  %489 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %486, i64 %483, i32 2
  store i8 1, i8* %489, align 1
  %490 = load i64, i64* %467, align 8
  %491 = add i64 %490, 2
  store i64 %491, i64* %467, align 8
  br label %494

492:                                              ; preds = %480
  %493 = call dereferenceable(8) %"struct.webrtc::CodecBufferUsage"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJRibbEEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.23"* %466, i32* nonnull dereferenceable(4) %28, i8* nonnull dereferenceable(1) %29, i8* nonnull dereferenceable(1) %30) #12
  br label %494

494:                                              ; preds = %485, %492
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %464)
  br label %495

495:                                              ; preds = %446, %494, %442
  store i32 1, i32* %40, align 8
  br label %496

496:                                              ; preds = %183, %339, %495, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6webrtc23ScalableVideoController16LayerFrameConfigENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector.20"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.20"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 88
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.webrtc::ScalableVideoController::LayerFrameConfig"*
  br i1 %10, label %12, label %73

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %13 to i64*
  %15 = icmp ugt i64 %1, 209622091746699450
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #13
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 88
  %21 = mul i64 %1, 88
  %22 = tail call i8* @_Znwm(i64 %21) #11
  %23 = bitcast i8* %22 to %"class.webrtc::ScalableVideoController::LayerFrameConfig"*
  %24 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %23, i64 %20
  %25 = ptrtoint %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %24 to i64
  %26 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %23, i64 %1
  %27 = ptrtoint %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.webrtc::ScalableVideoController::LayerFrameConfig"*
  %29 = icmp eq %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %28, %11
  br i1 %29, label %50, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %31, i64 -1
  %34 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %32, i64 -1
  %35 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %33 to i8*
  %36 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false) #12
  %37 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %31, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %32, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %37, align 8
  %40 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %32, i64 -1, i32 4, i32 0, i32 1
  %41 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %31, i64 -1, i32 4, i32 0, i32 1
  %42 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %41 to i8*
  %43 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 64, i1 false) #12
  store i64 0, i64* %38, align 8
  %44 = icmp eq %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %34, %11
  br i1 %44, label %45, label %30

45:                                               ; preds = %30
  %46 = ptrtoint %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %33 to i64
  %47 = load i64, i64* %6, align 8
  %48 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %13, align 8
  %49 = inttoptr i64 %47 to %"class.webrtc::ScalableVideoController::LayerFrameConfig"*
  br label %50

50:                                               ; preds = %17, %45
  %51 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %49, %45 ], [ %28, %17 ]
  %52 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %48, %45 ], [ %11, %17 ]
  %53 = phi i64 [ %46, %45 ], [ %25, %17 ]
  %54 = phi i64 [ %47, %45 ], [ %18, %17 ]
  store i64 %53, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %55 = icmp eq %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %52, %51
  br i1 %55, label %69, label %56

56:                                               ; preds = %50, %67
  %57 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %58, %67 ], [ %52, %50 ]
  %58 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %57, i64 -1
  %59 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %57, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %57, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %65 = bitcast %"struct.webrtc::CodecBufferUsage"** %64 to i8**
  %66 = load i8*, i8** %65, align 8
  tail call void @_ZdlPv(i8* %66) #11
  br label %67

67:                                               ; preds = %63, %56
  %68 = icmp eq %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %58, %51
  br i1 %68, label %69, label %56

69:                                               ; preds = %67, %50
  %70 = icmp eq i64 %54, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %69
  %72 = inttoptr i64 %54 to i8*
  tail call void @_ZdlPv(i8* %72) #11
  br label %73

73:                                               ; preds = %71, %69, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc32ScalabilityStructureL2T2KeyShift12OnEncodeDoneERKNS_23ScalableVideoController16LayerFrameConfigE(%"struct.webrtc::GenericFrameInfo"* noalias sret, %"class.webrtc::ScalabilityStructureL2T2KeyShift"* nocapture readnone, %"class.webrtc::ScalableVideoController::LayerFrameConfig"* dereferenceable(88)) unnamed_addr #1 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast %"struct.webrtc::GenericFrameInfo"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 208, i1 false)
  tail call void @_ZN6webrtc16GenericFrameInfoC1Ev(%"struct.webrtc::GenericFrameInfo"* %0) #12
  %6 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %2, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 0
  store i32 %7, i32* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %2, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %2, i64 0, i32 4
  %13 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 1
  %14 = icmp eq %"class.absl::InlinedVector.22"* %12, %13
  br i1 %14, label %30, label %15, !prof !2

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  %20 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %2, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %21 = load %"struct.webrtc::CodecBufferUsage"*, %"struct.webrtc::CodecBufferUsage"** %20, align 8
  %22 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %2, i64 0, i32 4, i32 0, i32 1
  %23 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %22 to %"struct.webrtc::CodecBufferUsage"*
  %24 = select i1 %19, %"struct.webrtc::CodecBufferUsage"* %23, %"struct.webrtc::CodecBufferUsage"* %21
  %25 = lshr i64 %17, 1
  %26 = getelementptr inbounds %"class.absl::InlinedVector.22", %"class.absl::InlinedVector.22"* %13, i64 0, i32 0
  %27 = shl nuw i64 %25, 3
  %28 = ashr exact i64 %27, 3
  tail call void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE6AssignINS0_20IteratorValueAdapterIS6_PKS3_EEEEvT_m(%"class.absl::inlined_vector_internal::Storage.23"* %26, %"struct.webrtc::CodecBufferUsage"* %24, i64 %28) #12
  %29 = load i32, i32* %6, align 8
  br label %30

30:                                               ; preds = %3, %15
  %31 = phi i32 [ %7, %3 ], [ %29, %15 ]
  %32 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 2
  %33 = bitcast i32* %4 to i8*
  %34 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %2, i64 0, i32 1
  %35 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %37 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %38 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %37 to i64
  %39 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %40 = bitcast i32** %39 to i64*
  %41 = getelementptr inbounds %"class.absl::InlinedVector.8", %"class.absl::InlinedVector.8"* %32, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #12
  %42 = load i8, i8* %34, align 4, !range !30
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %30
  %45 = icmp sgt i32 %31, 0
  br label %51

46:                                               ; preds = %30
  %47 = icmp ne i32 %31, 0
  %48 = load i32, i32* %9, align 4
  %49 = icmp sgt i32 %48, 0
  %50 = or i1 %47, %49
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i1 [ %50, %46 ], [ %45, %44 ]
  %53 = select i1 %52, i32 0, i32 2
  store i32 %53, i32* %4, align 4
  %54 = load i64, i64* %35, align 8, !noalias !31
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  %57 = load i64, i64* %36, align 8
  %58 = select i1 %56, i64 10, i64 %57
  %59 = lshr i64 %54, 1
  %60 = icmp eq i64 %59, %58
  br i1 %60, label %68, label %61, !prof !2

61:                                               ; preds = %51
  %62 = load i64, i64* %40, align 8
  %63 = select i1 %56, i64 %38, i64 %62
  %64 = inttoptr i64 %63 to i32*
  %65 = getelementptr inbounds i32, i32* %64, i64 %59
  store i32 %53, i32* %65, align 4
  %66 = load i64, i64* %35, align 8
  %67 = add i64 %66, 2
  store i64 %67, i64* %35, align 8
  br label %70

68:                                               ; preds = %51
  %69 = call dereferenceable(4) i32* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJS3_EEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.9"* %41, i32* nonnull dereferenceable(4) %4) #12
  br label %70

70:                                               ; preds = %61, %68
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #12
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #12
  %71 = load i8, i8* %34, align 4, !range !30
  %72 = icmp eq i8 %71, 0
  %73 = load i32, i32* %6, align 8
  br i1 %72, label %161, label %158

74:                                               ; preds = %250
  %75 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 2
  %76 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 2, i32 1
  store i64 0, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %78, 288230376151711743
  %80 = icmp eq i64 %79, 0
  %81 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %75, i64 0, i32 0
  %82 = load i64*, i64** %81, align 8
  br i1 %80, label %83, label %152

83:                                               ; preds = %74
  %84 = icmp eq i64* %82, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %83
  %86 = bitcast i64* %82 to i8*
  call void @_ZdlPv(i8* %86) #11
  %87 = bitcast %"class.std::__1::vector.34"* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #12
  br label %88

88:                                               ; preds = %85, %83
  %89 = call i8* @_Znwm(i64 8) #11
  %90 = bitcast %"class.std::__1::vector.34"* %75 to i8**
  store i8* %89, i8** %90, align 8
  store i64 1, i64* %77, align 8
  %91 = bitcast i8* %89 to i64*
  br label %152

92:                                               ; preds = %250
  %93 = load i32, i32* %9, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %127

95:                                               ; preds = %92
  %96 = load i32, i32* %6, align 8
  %97 = icmp eq i32 %96, 0
  %98 = icmp eq i32 %96, 1
  %99 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 2
  %100 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 2, i32 1
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = and i64 %102, 288230376151711743
  %104 = icmp eq i64 %103, 0
  %105 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %99, i64 0, i32 0
  %106 = load i64*, i64** %105, align 8
  br i1 %104, label %107, label %116

107:                                              ; preds = %95
  %108 = icmp eq i64* %106, null
  br i1 %108, label %112, label %109

109:                                              ; preds = %107
  %110 = bitcast i64* %106 to i8*
  call void @_ZdlPv(i8* %110) #11
  %111 = bitcast %"class.std::__1::vector.34"* %99 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 24, i1 false) #12
  br label %112

112:                                              ; preds = %109, %107
  %113 = call i8* @_Znwm(i64 8) #11
  %114 = bitcast %"class.std::__1::vector.34"* %99 to i8**
  store i8* %113, i8** %114, align 8
  store i64 1, i64* %101, align 8
  %115 = bitcast i8* %113 to i64*
  br label %116

116:                                              ; preds = %95, %112
  %117 = phi i64* [ %115, %112 ], [ %106, %95 ]
  store i64 2, i64* %100, align 8
  store i64 0, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %99, i64 0, i32 0
  %119 = load i64*, i64** %118, align 8, !noalias !34
  %120 = load i64, i64* %119, align 8
  %121 = and i64 %120, -2
  %122 = or i64 %120, 1
  %123 = select i1 %97, i64 %122, i64 %121
  %124 = and i64 %123, -3
  %125 = or i64 %123, 2
  %126 = select i1 %98, i64 %125, i64 %124
  store i64 %126, i64* %119, align 8, !noalias !37
  br label %145

127:                                              ; preds = %92
  %128 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 2
  %129 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 2, i32 1
  store i64 0, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.webrtc::GenericFrameInfo", %"struct.webrtc::GenericFrameInfo"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = and i64 %131, 288230376151711743
  %133 = icmp eq i64 %132, 0
  %134 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %128, i64 0, i32 0
  %135 = load i64*, i64** %134, align 8
  br i1 %133, label %136, label %146

136:                                              ; preds = %127
  %137 = icmp eq i64* %135, null
  br i1 %137, label %141, label %138

138:                                              ; preds = %136
  %139 = bitcast i64* %135 to i8*
  call void @_ZdlPv(i8* %139) #11
  %140 = bitcast %"class.std::__1::vector.34"* %128 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 24, i1 false) #12
  br label %141

141:                                              ; preds = %138, %136
  %142 = call i8* @_Znwm(i64 8) #11
  %143 = bitcast %"class.std::__1::vector.34"* %128 to i8**
  store i8* %142, i8** %143, align 8
  store i64 1, i64* %130, align 8
  %144 = bitcast i8* %142 to i64*
  br label %146

145:                                              ; preds = %152, %146, %116
  ret void

146:                                              ; preds = %127, %141
  %147 = phi i64* [ %144, %141 ], [ %135, %127 ]
  store i64 2, i64* %129, align 8
  store i64 0, i64* %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %128, i64 0, i32 0
  %149 = load i64*, i64** %148, align 8, !noalias !44
  %150 = load i64, i64* %149, align 8, !noalias !47
  %151 = and i64 %150, -4
  store i64 %151, i64* %149, align 8, !noalias !47
  br label %145

152:                                              ; preds = %74, %88
  %153 = phi i64* [ %91, %88 ], [ %82, %74 ]
  store i64 2, i64* %76, align 8
  store i64 0, i64* %153, align 8
  %154 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %75, i64 0, i32 0
  %155 = load i64*, i64** %154, align 8, !noalias !54
  %156 = load i64, i64* %155, align 8, !noalias !57
  %157 = or i64 %156, 3
  store i64 %157, i64* %155, align 8, !noalias !57
  br label %145

158:                                              ; preds = %70
  %159 = icmp sgt i32 %73, 0
  %160 = select i1 %159, i32 0, i32 2
  br label %169

161:                                              ; preds = %70
  %162 = icmp eq i32 %73, 0
  br i1 %162, label %163, label %169

163:                                              ; preds = %161
  %164 = load i32, i32* %9, align 4
  %165 = icmp sgt i32 %164, 1
  br i1 %165, label %169, label %166

166:                                              ; preds = %163
  %167 = icmp eq i32 %164, 1
  %168 = select i1 %167, i32 1, i32 2
  br label %169

169:                                              ; preds = %166, %163, %161, %158
  %170 = phi i32 [ %160, %158 ], [ 0, %161 ], [ 0, %163 ], [ %168, %166 ]
  store i32 %170, i32* %4, align 4
  %171 = load i64, i64* %35, align 8, !noalias !31
  %172 = and i64 %171, 1
  %173 = icmp eq i64 %172, 0
  %174 = load i64, i64* %36, align 8
  %175 = select i1 %173, i64 10, i64 %174
  %176 = lshr i64 %171, 1
  %177 = icmp eq i64 %176, %175
  br i1 %177, label %185, label %178, !prof !2

178:                                              ; preds = %169
  %179 = load i64, i64* %40, align 8
  %180 = select i1 %173, i64 %38, i64 %179
  %181 = inttoptr i64 %180 to i32*
  %182 = getelementptr inbounds i32, i32* %181, i64 %176
  store i32 %170, i32* %182, align 4
  %183 = load i64, i64* %35, align 8
  %184 = add i64 %183, 2
  store i64 %184, i64* %35, align 8
  br label %187

185:                                              ; preds = %169
  %186 = call dereferenceable(4) i32* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJS3_EEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.9"* %41, i32* nonnull dereferenceable(4) %4) #12
  br label %187

187:                                              ; preds = %185, %178
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #12
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #12
  %188 = load i8, i8* %34, align 4, !range !30
  %189 = icmp eq i8 %188, 0
  %190 = load i32, i32* %6, align 8
  br i1 %189, label %193, label %191

191:                                              ; preds = %187
  %192 = icmp sgt i32 %190, 1
  br label %198

193:                                              ; preds = %187
  %194 = icmp ne i32 %190, 1
  %195 = load i32, i32* %9, align 4
  %196 = icmp sgt i32 %195, 0
  %197 = or i1 %194, %196
  br label %198

198:                                              ; preds = %193, %191
  %199 = phi i1 [ %197, %193 ], [ %192, %191 ]
  %200 = select i1 %199, i32 0, i32 2
  store i32 %200, i32* %4, align 4
  %201 = load i64, i64* %35, align 8, !noalias !31
  %202 = and i64 %201, 1
  %203 = icmp eq i64 %202, 0
  %204 = load i64, i64* %36, align 8
  %205 = select i1 %203, i64 10, i64 %204
  %206 = lshr i64 %201, 1
  %207 = icmp eq i64 %206, %205
  br i1 %207, label %215, label %208, !prof !2

208:                                              ; preds = %198
  %209 = load i64, i64* %40, align 8
  %210 = select i1 %203, i64 %38, i64 %209
  %211 = inttoptr i64 %210 to i32*
  %212 = getelementptr inbounds i32, i32* %211, i64 %206
  store i32 %200, i32* %212, align 4
  %213 = load i64, i64* %35, align 8
  %214 = add i64 %213, 2
  store i64 %214, i64* %35, align 8
  br label %217

215:                                              ; preds = %198
  %216 = call dereferenceable(4) i32* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJS3_EEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.9"* %41, i32* nonnull dereferenceable(4) %4) #12
  br label %217

217:                                              ; preds = %215, %208
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #12
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #12
  %218 = load i8, i8* %34, align 4, !range !30
  %219 = icmp eq i8 %218, 0
  %220 = load i32, i32* %6, align 8
  br i1 %219, label %224, label %221

221:                                              ; preds = %217
  %222 = icmp sgt i32 %220, 1
  %223 = select i1 %222, i32 0, i32 2
  br label %232

224:                                              ; preds = %217
  %225 = icmp eq i32 %220, 1
  br i1 %225, label %226, label %232

226:                                              ; preds = %224
  %227 = load i32, i32* %9, align 4
  %228 = icmp sgt i32 %227, 1
  br i1 %228, label %232, label %229

229:                                              ; preds = %226
  %230 = icmp eq i32 %227, 1
  %231 = select i1 %230, i32 1, i32 2
  br label %232

232:                                              ; preds = %229, %226, %224, %221
  %233 = phi i32 [ %223, %221 ], [ 0, %224 ], [ 0, %226 ], [ %231, %229 ]
  store i32 %233, i32* %4, align 4
  %234 = load i64, i64* %35, align 8, !noalias !31
  %235 = and i64 %234, 1
  %236 = icmp eq i64 %235, 0
  %237 = load i64, i64* %36, align 8
  %238 = select i1 %236, i64 10, i64 %237
  %239 = lshr i64 %234, 1
  %240 = icmp eq i64 %239, %238
  br i1 %240, label %248, label %241, !prof !2

241:                                              ; preds = %232
  %242 = load i64, i64* %40, align 8
  %243 = select i1 %236, i64 %38, i64 %242
  %244 = inttoptr i64 %243 to i32*
  %245 = getelementptr inbounds i32, i32* %244, i64 %239
  store i32 %233, i32* %245, align 4
  %246 = load i64, i64* %35, align 8
  %247 = add i64 %246, 2
  store i64 %247, i64* %35, align 8
  br label %250

248:                                              ; preds = %232
  %249 = call dereferenceable(4) i32* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJS3_EEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.9"* %41, i32* nonnull dereferenceable(4) %4) #12
  br label %250

250:                                              ; preds = %248, %241
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #12
  %251 = load i8, i8* %34, align 4, !range !30
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %92, label %74
}

declare void @_ZN6webrtc16GenericFrameInfoC1Ev(%"struct.webrtc::GenericFrameInfo"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc32ScalabilityStructureL2T2KeyShift14OnRatesUpdatedERKNS_22VideoBitrateAllocationE(%"class.webrtc::ScalabilityStructureL2T2KeyShift"* nocapture, %"class.webrtc::VideoBitrateAllocation"* dereferenceable(168)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::ScalabilityStructureL2T2KeyShift", %"class.webrtc::ScalabilityStructureL2T2KeyShift"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = getelementptr inbounds %"class.webrtc::ScalabilityStructureL2T2KeyShift", %"class.webrtc::ScalabilityStructureL2T2KeyShift"* %0, i64 0, i32 1
  %5 = tail call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %1, i64 0, i64 0) #12
  %6 = icmp ne i32 %5, 0
  %7 = load i64, i64* %3, align 8
  %8 = and i64 %7, 1
  %9 = icmp ne i64 %8, 0
  %10 = xor i1 %6, true
  %11 = or i1 %9, %10
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  store i32 0, i32* %4, align 8
  br label %13

13:                                               ; preds = %12, %2
  br i1 %6, label %16, label %14

14:                                               ; preds = %13
  %15 = and i64 %7, -2
  store i64 %15, i64* %3, align 8
  br label %23

16:                                               ; preds = %13
  %17 = or i64 %7, 1
  store i64 %17, i64* %3, align 8
  %18 = tail call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %1, i64 0, i64 1) #12
  %19 = icmp eq i32 %18, 0
  %20 = load i64, i64* %3, align 8
  br i1 %19, label %23, label %21

21:                                               ; preds = %16
  %22 = or i64 %20, 2
  br label %26

23:                                               ; preds = %16, %14
  %24 = phi i64 [ %15, %14 ], [ %20, %16 ]
  %25 = and i64 %24, -3
  br label %26

26:                                               ; preds = %21, %23
  %27 = phi i64 [ %25, %23 ], [ %22, %21 ]
  store i64 %27, i64* %3, align 8
  %28 = tail call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %1, i64 1, i64 0) #12
  %29 = icmp ne i32 %28, 0
  %30 = load i64, i64* %3, align 8
  %31 = and i64 %30, 4
  %32 = icmp ne i64 %31, 0
  %33 = xor i1 %29, true
  %34 = or i1 %32, %33
  br i1 %34, label %36, label %35

35:                                               ; preds = %26
  store i32 0, i32* %4, align 8
  br label %36

36:                                               ; preds = %35, %26
  br i1 %29, label %39, label %37

37:                                               ; preds = %36
  %38 = and i64 %30, -5
  store i64 %38, i64* %3, align 8
  br label %46

39:                                               ; preds = %36
  %40 = or i64 %30, 4
  store i64 %40, i64* %3, align 8
  %41 = tail call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %1, i64 1, i64 1) #12
  %42 = icmp eq i32 %41, 0
  %43 = load i64, i64* %3, align 8
  br i1 %42, label %46, label %44

44:                                               ; preds = %39
  %45 = or i64 %43, 8
  br label %49

46:                                               ; preds = %39, %37
  %47 = phi i64 [ %38, %37 ], [ %43, %39 ]
  %48 = and i64 %47, -9
  br label %49

49:                                               ; preds = %46, %44
  %50 = phi i64 [ %48, %46 ], [ %45, %44 ]
  store i64 %50, i64* %3, align 8
  ret void
}

declare i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"*, i64, i64) local_unnamed_addr #4

declare void @_ZN6webrtc11webrtc_impl31StringToDecodeTargetIndicationsEN4absl11string_viewE(%"class.absl::InlinedVector.8"* sret, i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.16"*, i32*, i64) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.16", %"class.absl::inlined_vector_internal::Storage.16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !64
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.16", %"class.absl::inlined_vector_internal::Storage.16"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !64
  %12 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.16", %"class.absl::inlined_vector_internal::Storage.16"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !noalias !64
  br label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.16", %"class.absl::inlined_vector_internal::Storage.16"* %0, i64 0, i32 1
  %16 = ptrtoint %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %15 to i64
  br label %17

17:                                               ; preds = %8, %14
  %18 = phi i64 [ %16, %14 ], [ %11, %8 ]
  %19 = phi i64 [ 4, %14 ], [ %13, %8 ]
  %20 = lshr i64 %5, 1
  %21 = icmp ult i64 %19, %2
  br i1 %21, label %22, label %33

22:                                               ; preds = %17
  %23 = shl i64 %19, 1
  %24 = icmp ult i64 %23, %2
  %25 = select i1 %24, i64 %2, i64 %23
  %26 = icmp ugt i64 %25, 4611686018427387903
  br i1 %26, label %27, label %28

27:                                               ; preds = %22
  tail call void @abort() #13
  unreachable

28:                                               ; preds = %22
  %29 = shl i64 %25, 2
  %30 = tail call i8* @_Znwm(i64 %29) #11
  %31 = bitcast i8* %30 to i32*
  %32 = ptrtoint i8* %30 to i64
  br label %176

33:                                               ; preds = %17
  %34 = icmp ult i64 %20, %2
  %35 = inttoptr i64 %18 to i32*
  %36 = inttoptr i64 %18 to i8*
  %37 = getelementptr inbounds i32, i32* %35, i64 %20
  %38 = call i64 @llvm.usub.sat.i64(i64 %2, i64 %20)
  %39 = select i1 %34, i32* %37, i32* null
  %40 = select i1 %34, i64 %20, i64 %2
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %173, label %42

42:                                               ; preds = %33
  %43 = icmp ult i64 %40, 8
  br i1 %43, label %131, label %44

44:                                               ; preds = %42
  %45 = getelementptr i32, i32* %35, i64 %40
  %46 = getelementptr i32, i32* %1, i64 %40
  %47 = bitcast i32* %46 to i8*
  %48 = icmp ult i8* %36, %47
  %49 = icmp ugt i32* %45, %1
  %50 = and i1 %48, %49
  br i1 %50, label %131, label %51

51:                                               ; preds = %44
  %52 = and i64 %40, 9223372036854775800
  %53 = getelementptr i32, i32* %1, i64 %52
  %54 = add nsw i64 %52, -8
  %55 = lshr exact i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp ult i64 %54, 24
  br i1 %58, label %110, label %59

59:                                               ; preds = %51
  %60 = sub nsw i64 %56, %57
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi i64 [ 0, %59 ], [ %107, %61 ]
  %63 = phi i64 [ %60, %59 ], [ %108, %61 ]
  %64 = getelementptr i32, i32* %1, i64 %62
  %65 = getelementptr inbounds i32, i32* %35, i64 %62
  %66 = bitcast i32* %64 to <4 x i32>*
  %67 = load <4 x i32>, <4 x i32>* %66, align 4, !alias.scope !67
  %68 = getelementptr i32, i32* %64, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  %70 = load <4 x i32>, <4 x i32>* %69, align 4, !alias.scope !67
  %71 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %67, <4 x i32>* %71, align 4, !alias.scope !70, !noalias !67
  %72 = getelementptr inbounds i32, i32* %65, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %70, <4 x i32>* %73, align 4, !alias.scope !70, !noalias !67
  %74 = or i64 %62, 8
  %75 = getelementptr i32, i32* %1, i64 %74
  %76 = getelementptr inbounds i32, i32* %35, i64 %74
  %77 = bitcast i32* %75 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !67
  %79 = getelementptr i32, i32* %75, i64 4
  %80 = bitcast i32* %79 to <4 x i32>*
  %81 = load <4 x i32>, <4 x i32>* %80, align 4, !alias.scope !67
  %82 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %82, align 4, !alias.scope !70, !noalias !67
  %83 = getelementptr inbounds i32, i32* %76, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %84, align 4, !alias.scope !70, !noalias !67
  %85 = or i64 %62, 16
  %86 = getelementptr i32, i32* %1, i64 %85
  %87 = getelementptr inbounds i32, i32* %35, i64 %85
  %88 = bitcast i32* %86 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !67
  %90 = getelementptr i32, i32* %86, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  %92 = load <4 x i32>, <4 x i32>* %91, align 4, !alias.scope !67
  %93 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %93, align 4, !alias.scope !70, !noalias !67
  %94 = getelementptr inbounds i32, i32* %87, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %92, <4 x i32>* %95, align 4, !alias.scope !70, !noalias !67
  %96 = or i64 %62, 24
  %97 = getelementptr i32, i32* %1, i64 %96
  %98 = getelementptr inbounds i32, i32* %35, i64 %96
  %99 = bitcast i32* %97 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !67
  %101 = getelementptr i32, i32* %97, i64 4
  %102 = bitcast i32* %101 to <4 x i32>*
  %103 = load <4 x i32>, <4 x i32>* %102, align 4, !alias.scope !67
  %104 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %104, align 4, !alias.scope !70, !noalias !67
  %105 = getelementptr inbounds i32, i32* %98, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %103, <4 x i32>* %106, align 4, !alias.scope !70, !noalias !67
  %107 = add i64 %62, 32
  %108 = add i64 %63, -4
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %61, !llvm.loop !72

110:                                              ; preds = %61, %51
  %111 = phi i64 [ 0, %51 ], [ %107, %61 ]
  %112 = icmp eq i64 %57, 0
  br i1 %112, label %129, label %113

113:                                              ; preds = %110, %113
  %114 = phi i64 [ %126, %113 ], [ %111, %110 ]
  %115 = phi i64 [ %127, %113 ], [ %57, %110 ]
  %116 = getelementptr i32, i32* %1, i64 %114
  %117 = getelementptr inbounds i32, i32* %35, i64 %114
  %118 = bitcast i32* %116 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !67
  %120 = getelementptr i32, i32* %116, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !67
  %123 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !70, !noalias !67
  %124 = getelementptr inbounds i32, i32* %117, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !70, !noalias !67
  %126 = add i64 %114, 8
  %127 = add i64 %115, -1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %113, !llvm.loop !74

129:                                              ; preds = %113, %110
  %130 = icmp eq i64 %40, %52
  br i1 %130, label %173, label %131

131:                                              ; preds = %129, %44, %42
  %132 = phi i32* [ %1, %44 ], [ %1, %42 ], [ %53, %129 ]
  %133 = phi i64 [ 0, %44 ], [ 0, %42 ], [ %52, %129 ]
  %134 = xor i64 %133, -1
  %135 = add nsw i64 %40, %134
  %136 = and i64 %40, 3
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %148, label %138

138:                                              ; preds = %131, %138
  %139 = phi i32* [ %144, %138 ], [ %132, %131 ]
  %140 = phi i64 [ %145, %138 ], [ %133, %131 ]
  %141 = phi i64 [ %146, %138 ], [ %136, %131 ]
  %142 = getelementptr inbounds i32, i32* %35, i64 %140
  %143 = load i32, i32* %139, align 4
  store i32 %143, i32* %142, align 4
  %144 = getelementptr inbounds i32, i32* %139, i64 1
  %145 = add nuw i64 %140, 1
  %146 = add i64 %141, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %138, !llvm.loop !76

148:                                              ; preds = %138, %131
  %149 = phi i32* [ undef, %131 ], [ %144, %138 ]
  %150 = phi i32* [ %132, %131 ], [ %144, %138 ]
  %151 = phi i64 [ %133, %131 ], [ %145, %138 ]
  %152 = icmp ult i64 %135, 3
  br i1 %152, label %173, label %153

153:                                              ; preds = %148, %153
  %154 = phi i32* [ %170, %153 ], [ %150, %148 ]
  %155 = phi i64 [ %171, %153 ], [ %151, %148 ]
  %156 = getelementptr inbounds i32, i32* %35, i64 %155
  %157 = load i32, i32* %154, align 4
  store i32 %157, i32* %156, align 4
  %158 = getelementptr inbounds i32, i32* %154, i64 1
  %159 = add nuw i64 %155, 1
  %160 = getelementptr inbounds i32, i32* %35, i64 %159
  %161 = load i32, i32* %158, align 4
  store i32 %161, i32* %160, align 4
  %162 = getelementptr inbounds i32, i32* %154, i64 2
  %163 = add nuw i64 %155, 2
  %164 = getelementptr inbounds i32, i32* %35, i64 %163
  %165 = load i32, i32* %162, align 4
  store i32 %165, i32* %164, align 4
  %166 = getelementptr inbounds i32, i32* %154, i64 3
  %167 = add nuw i64 %155, 3
  %168 = getelementptr inbounds i32, i32* %35, i64 %167
  %169 = load i32, i32* %166, align 4
  store i32 %169, i32* %168, align 4
  %170 = getelementptr inbounds i32, i32* %154, i64 4
  %171 = add nuw i64 %155, 4
  %172 = icmp eq i64 %171, %40
  br i1 %172, label %173, label %153, !llvm.loop !77

173:                                              ; preds = %148, %153, %129, %33
  %174 = phi i32* [ %1, %33 ], [ %53, %129 ], [ %149, %148 ], [ %170, %153 ]
  %175 = icmp eq i64 %38, 0
  br i1 %175, label %312, label %176

176:                                              ; preds = %28, %173
  %177 = phi i32* [ %1, %28 ], [ %174, %173 ]
  %178 = phi i64 [ %2, %28 ], [ %38, %173 ]
  %179 = phi i32* [ %31, %28 ], [ %39, %173 ]
  %180 = phi i64 [ %25, %28 ], [ 0, %173 ]
  %181 = phi i64 [ %32, %28 ], [ 0, %173 ]
  %182 = icmp ult i64 %178, 8
  br i1 %182, label %269, label %183

183:                                              ; preds = %176
  %184 = getelementptr i32, i32* %179, i64 %178
  %185 = getelementptr i32, i32* %177, i64 %178
  %186 = icmp ult i32* %179, %185
  %187 = icmp ult i32* %177, %184
  %188 = and i1 %186, %187
  br i1 %188, label %269, label %189

189:                                              ; preds = %183
  %190 = and i64 %178, -8
  %191 = getelementptr i32, i32* %177, i64 %190
  %192 = add i64 %190, -8
  %193 = lshr exact i64 %192, 3
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 3
  %196 = icmp ult i64 %192, 24
  br i1 %196, label %248, label %197

197:                                              ; preds = %189
  %198 = sub nsw i64 %194, %195
  br label %199

199:                                              ; preds = %199, %197
  %200 = phi i64 [ 0, %197 ], [ %245, %199 ]
  %201 = phi i64 [ %198, %197 ], [ %246, %199 ]
  %202 = getelementptr i32, i32* %177, i64 %200
  %203 = getelementptr inbounds i32, i32* %179, i64 %200
  %204 = bitcast i32* %202 to <4 x i32>*
  %205 = load <4 x i32>, <4 x i32>* %204, align 4, !alias.scope !78
  %206 = getelementptr i32, i32* %202, i64 4
  %207 = bitcast i32* %206 to <4 x i32>*
  %208 = load <4 x i32>, <4 x i32>* %207, align 4, !alias.scope !78
  %209 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %205, <4 x i32>* %209, align 4, !alias.scope !81, !noalias !78
  %210 = getelementptr inbounds i32, i32* %203, i64 4
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> %208, <4 x i32>* %211, align 4, !alias.scope !81, !noalias !78
  %212 = or i64 %200, 8
  %213 = getelementptr i32, i32* %177, i64 %212
  %214 = getelementptr inbounds i32, i32* %179, i64 %212
  %215 = bitcast i32* %213 to <4 x i32>*
  %216 = load <4 x i32>, <4 x i32>* %215, align 4, !alias.scope !78
  %217 = getelementptr i32, i32* %213, i64 4
  %218 = bitcast i32* %217 to <4 x i32>*
  %219 = load <4 x i32>, <4 x i32>* %218, align 4, !alias.scope !78
  %220 = bitcast i32* %214 to <4 x i32>*
  store <4 x i32> %216, <4 x i32>* %220, align 4, !alias.scope !81, !noalias !78
  %221 = getelementptr inbounds i32, i32* %214, i64 4
  %222 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %219, <4 x i32>* %222, align 4, !alias.scope !81, !noalias !78
  %223 = or i64 %200, 16
  %224 = getelementptr i32, i32* %177, i64 %223
  %225 = getelementptr inbounds i32, i32* %179, i64 %223
  %226 = bitcast i32* %224 to <4 x i32>*
  %227 = load <4 x i32>, <4 x i32>* %226, align 4, !alias.scope !78
  %228 = getelementptr i32, i32* %224, i64 4
  %229 = bitcast i32* %228 to <4 x i32>*
  %230 = load <4 x i32>, <4 x i32>* %229, align 4, !alias.scope !78
  %231 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %231, align 4, !alias.scope !81, !noalias !78
  %232 = getelementptr inbounds i32, i32* %225, i64 4
  %233 = bitcast i32* %232 to <4 x i32>*
  store <4 x i32> %230, <4 x i32>* %233, align 4, !alias.scope !81, !noalias !78
  %234 = or i64 %200, 24
  %235 = getelementptr i32, i32* %177, i64 %234
  %236 = getelementptr inbounds i32, i32* %179, i64 %234
  %237 = bitcast i32* %235 to <4 x i32>*
  %238 = load <4 x i32>, <4 x i32>* %237, align 4, !alias.scope !78
  %239 = getelementptr i32, i32* %235, i64 4
  %240 = bitcast i32* %239 to <4 x i32>*
  %241 = load <4 x i32>, <4 x i32>* %240, align 4, !alias.scope !78
  %242 = bitcast i32* %236 to <4 x i32>*
  store <4 x i32> %238, <4 x i32>* %242, align 4, !alias.scope !81, !noalias !78
  %243 = getelementptr inbounds i32, i32* %236, i64 4
  %244 = bitcast i32* %243 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %244, align 4, !alias.scope !81, !noalias !78
  %245 = add i64 %200, 32
  %246 = add i64 %201, -4
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %199, !llvm.loop !83

248:                                              ; preds = %199, %189
  %249 = phi i64 [ 0, %189 ], [ %245, %199 ]
  %250 = icmp eq i64 %195, 0
  br i1 %250, label %267, label %251

251:                                              ; preds = %248, %251
  %252 = phi i64 [ %264, %251 ], [ %249, %248 ]
  %253 = phi i64 [ %265, %251 ], [ %195, %248 ]
  %254 = getelementptr i32, i32* %177, i64 %252
  %255 = getelementptr inbounds i32, i32* %179, i64 %252
  %256 = bitcast i32* %254 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4, !alias.scope !78
  %258 = getelementptr i32, i32* %254, i64 4
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4, !alias.scope !78
  %261 = bitcast i32* %255 to <4 x i32>*
  store <4 x i32> %257, <4 x i32>* %261, align 4, !alias.scope !81, !noalias !78
  %262 = getelementptr inbounds i32, i32* %255, i64 4
  %263 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %260, <4 x i32>* %263, align 4, !alias.scope !81, !noalias !78
  %264 = add i64 %252, 8
  %265 = add i64 %253, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %251, !llvm.loop !84

267:                                              ; preds = %251, %248
  %268 = icmp eq i64 %178, %190
  br i1 %268, label %310, label %269

269:                                              ; preds = %267, %183, %176
  %270 = phi i32* [ %177, %183 ], [ %177, %176 ], [ %191, %267 ]
  %271 = phi i64 [ 0, %183 ], [ 0, %176 ], [ %190, %267 ]
  %272 = xor i64 %271, -1
  %273 = add i64 %178, %272
  %274 = and i64 %178, 3
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %286, label %276

276:                                              ; preds = %269, %276
  %277 = phi i32* [ %282, %276 ], [ %270, %269 ]
  %278 = phi i64 [ %283, %276 ], [ %271, %269 ]
  %279 = phi i64 [ %284, %276 ], [ %274, %269 ]
  %280 = getelementptr inbounds i32, i32* %179, i64 %278
  %281 = load i32, i32* %277, align 4
  store i32 %281, i32* %280, align 4
  %282 = getelementptr inbounds i32, i32* %277, i64 1
  %283 = add nuw i64 %278, 1
  %284 = add i64 %279, -1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %276, !llvm.loop !85

286:                                              ; preds = %276, %269
  %287 = phi i32* [ %270, %269 ], [ %282, %276 ]
  %288 = phi i64 [ %271, %269 ], [ %283, %276 ]
  %289 = icmp ult i64 %273, 3
  br i1 %289, label %310, label %290

290:                                              ; preds = %286, %290
  %291 = phi i32* [ %307, %290 ], [ %287, %286 ]
  %292 = phi i64 [ %308, %290 ], [ %288, %286 ]
  %293 = getelementptr inbounds i32, i32* %179, i64 %292
  %294 = load i32, i32* %291, align 4
  store i32 %294, i32* %293, align 4
  %295 = getelementptr inbounds i32, i32* %291, i64 1
  %296 = add nuw i64 %292, 1
  %297 = getelementptr inbounds i32, i32* %179, i64 %296
  %298 = load i32, i32* %295, align 4
  store i32 %298, i32* %297, align 4
  %299 = getelementptr inbounds i32, i32* %291, i64 2
  %300 = add nuw i64 %292, 2
  %301 = getelementptr inbounds i32, i32* %179, i64 %300
  %302 = load i32, i32* %299, align 4
  store i32 %302, i32* %301, align 4
  %303 = getelementptr inbounds i32, i32* %291, i64 3
  %304 = add nuw i64 %292, 3
  %305 = getelementptr inbounds i32, i32* %179, i64 %304
  %306 = load i32, i32* %303, align 4
  store i32 %306, i32* %305, align 4
  %307 = getelementptr inbounds i32, i32* %291, i64 4
  %308 = add nuw i64 %292, 4
  %309 = icmp eq i64 %308, %178
  br i1 %309, label %310, label %290, !llvm.loop !86

310:                                              ; preds = %286, %290, %267
  %311 = icmp eq i64 %181, 0
  br i1 %311, label %312, label %314

312:                                              ; preds = %173, %310
  %313 = load i64, i64* %4, align 8
  br label %329

314:                                              ; preds = %310
  %315 = load i64, i64* %4, align 8
  %316 = and i64 %315, 1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %323, label %318

318:                                              ; preds = %314
  %319 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.16", %"class.absl::inlined_vector_internal::Storage.16"* %0, i64 0, i32 1, i32 0, i32 0
  %320 = bitcast i32** %319 to i8**
  %321 = load i8*, i8** %320, align 8
  tail call void @_ZdlPv(i8* %321) #11
  %322 = load i64, i64* %4, align 8
  br label %323

323:                                              ; preds = %314, %318
  %324 = phi i64 [ %315, %314 ], [ %322, %318 ]
  %325 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.16", %"class.absl::inlined_vector_internal::Storage.16"* %0, i64 0, i32 1, i32 0, i32 0
  %326 = bitcast i32** %325 to i64*
  store i64 %181, i64* %326, align 8
  %327 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.16", %"class.absl::inlined_vector_internal::Storage.16"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %180, i64* %327, align 8
  %328 = or i64 %324, 1
  store i64 %328, i64* %4, align 8
  br label %329

329:                                              ; preds = %323, %312
  %330 = phi i64 [ %313, %312 ], [ %328, %323 ]
  %331 = shl i64 %2, 1
  %332 = and i64 %330, 1
  %333 = or i64 %332, %331
  store i64 %333, i64* %4, align 8
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"struct.webrtc::CodecBufferUsage"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJRibbEEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.23"*, i32* dereferenceable(4), i8* dereferenceable(1), i8* dereferenceable(1)) local_unnamed_addr #7 comdat align 2 {
  %5 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.23", %"class.absl::inlined_vector_internal::Storage.23"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8, !noalias !87
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.23", %"class.absl::inlined_vector_internal::Storage.23"* %0, i64 0, i32 1
  %11 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %10 to i64
  br label %21

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.23", %"class.absl::inlined_vector_internal::Storage.23"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = bitcast %"struct.webrtc::CodecBufferUsage"** %13 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !87
  %16 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.23", %"class.absl::inlined_vector_internal::Storage.23"* %0, i64 0, i32 1, i32 0, i32 1
  %17 = load i64, i64* %16, align 8, !noalias !87
  %18 = shl i64 %17, 1
  %19 = icmp ugt i64 %18, 2305843009213693951
  br i1 %19, label %20, label %21

20:                                               ; preds = %12
  tail call void @abort() #13
  unreachable

21:                                               ; preds = %9, %12
  %22 = phi i64 [ 16, %9 ], [ %18, %12 ]
  %23 = phi i64 [ %11, %9 ], [ %15, %12 ]
  %24 = lshr i64 %6, 1
  %25 = shl i64 %22, 3
  %26 = tail call i8* @_Znwm(i64 %25) #11
  %27 = bitcast i8* %26 to %"struct.webrtc::CodecBufferUsage"*
  %28 = ptrtoint i8* %26 to i64
  %29 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %27, i64 %24
  %30 = load i32, i32* %1, align 4
  %31 = load i8, i8* %2, align 1, !range !30
  %32 = load i8, i8* %3, align 1, !range !30
  %33 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %29, i64 0, i32 0
  store i32 %30, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %27, i64 %24, i32 1
  store i8 %31, i8* %34, align 4
  %35 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %27, i64 %24, i32 2
  store i8 %32, i8* %35, align 1
  %36 = icmp eq i64 %24, 0
  br i1 %36, label %120, label %37

37:                                               ; preds = %21
  %38 = inttoptr i64 %23 to %"struct.webrtc::CodecBufferUsage"*
  %39 = inttoptr i64 %23 to i64*
  %40 = add nsw i64 %24, -1
  %41 = and i64 %24, 7
  %42 = icmp ult i64 %40, 7
  br i1 %42, label %102, label %43

43:                                               ; preds = %37
  %44 = sub nsw i64 %24, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi %"struct.webrtc::CodecBufferUsage"* [ %38, %43 ], [ %95, %45 ]
  %47 = phi i64* [ %39, %43 ], [ %97, %45 ]
  %48 = phi i64 [ 0, %43 ], [ %96, %45 ]
  %49 = phi i64 [ %44, %43 ], [ %98, %45 ]
  %50 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %27, i64 %48
  %51 = bitcast %"struct.webrtc::CodecBufferUsage"* %50 to i64*
  %52 = load i64, i64* %47, align 4
  store i64 %52, i64* %51, align 4
  %53 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %46, i64 1
  %54 = or i64 %48, 1
  %55 = bitcast %"struct.webrtc::CodecBufferUsage"* %53 to i64*
  %56 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %27, i64 %54
  %57 = bitcast %"struct.webrtc::CodecBufferUsage"* %56 to i64*
  %58 = load i64, i64* %55, align 4
  store i64 %58, i64* %57, align 4
  %59 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %46, i64 2
  %60 = or i64 %48, 2
  %61 = bitcast %"struct.webrtc::CodecBufferUsage"* %59 to i64*
  %62 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %27, i64 %60
  %63 = bitcast %"struct.webrtc::CodecBufferUsage"* %62 to i64*
  %64 = load i64, i64* %61, align 4
  store i64 %64, i64* %63, align 4
  %65 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %46, i64 3
  %66 = or i64 %48, 3
  %67 = bitcast %"struct.webrtc::CodecBufferUsage"* %65 to i64*
  %68 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %27, i64 %66
  %69 = bitcast %"struct.webrtc::CodecBufferUsage"* %68 to i64*
  %70 = load i64, i64* %67, align 4
  store i64 %70, i64* %69, align 4
  %71 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %46, i64 4
  %72 = or i64 %48, 4
  %73 = bitcast %"struct.webrtc::CodecBufferUsage"* %71 to i64*
  %74 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %27, i64 %72
  %75 = bitcast %"struct.webrtc::CodecBufferUsage"* %74 to i64*
  %76 = load i64, i64* %73, align 4
  store i64 %76, i64* %75, align 4
  %77 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %46, i64 5
  %78 = or i64 %48, 5
  %79 = bitcast %"struct.webrtc::CodecBufferUsage"* %77 to i64*
  %80 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %27, i64 %78
  %81 = bitcast %"struct.webrtc::CodecBufferUsage"* %80 to i64*
  %82 = load i64, i64* %79, align 4
  store i64 %82, i64* %81, align 4
  %83 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %46, i64 6
  %84 = or i64 %48, 6
  %85 = bitcast %"struct.webrtc::CodecBufferUsage"* %83 to i64*
  %86 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %27, i64 %84
  %87 = bitcast %"struct.webrtc::CodecBufferUsage"* %86 to i64*
  %88 = load i64, i64* %85, align 4
  store i64 %88, i64* %87, align 4
  %89 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %46, i64 7
  %90 = or i64 %48, 7
  %91 = bitcast %"struct.webrtc::CodecBufferUsage"* %89 to i64*
  %92 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %27, i64 %90
  %93 = bitcast %"struct.webrtc::CodecBufferUsage"* %92 to i64*
  %94 = load i64, i64* %91, align 4
  store i64 %94, i64* %93, align 4
  %95 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %46, i64 8
  %96 = add nuw nsw i64 %48, 8
  %97 = bitcast %"struct.webrtc::CodecBufferUsage"* %95 to i64*
  %98 = add i64 %49, -8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %45

100:                                              ; preds = %45
  %101 = bitcast %"struct.webrtc::CodecBufferUsage"* %95 to i64*
  br label %102

102:                                              ; preds = %100, %37
  %103 = phi %"struct.webrtc::CodecBufferUsage"* [ %38, %37 ], [ %95, %100 ]
  %104 = phi i64* [ %39, %37 ], [ %101, %100 ]
  %105 = phi i64 [ 0, %37 ], [ %96, %100 ]
  %106 = icmp eq i64 %41, 0
  br i1 %106, label %120, label %107

107:                                              ; preds = %102, %107
  %108 = phi %"struct.webrtc::CodecBufferUsage"* [ %115, %107 ], [ %103, %102 ]
  %109 = phi i64* [ %117, %107 ], [ %104, %102 ]
  %110 = phi i64 [ %116, %107 ], [ %105, %102 ]
  %111 = phi i64 [ %118, %107 ], [ %41, %102 ]
  %112 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %27, i64 %110
  %113 = bitcast %"struct.webrtc::CodecBufferUsage"* %112 to i64*
  %114 = load i64, i64* %109, align 4
  store i64 %114, i64* %113, align 4
  %115 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %108, i64 1
  %116 = add nuw nsw i64 %110, 1
  %117 = bitcast %"struct.webrtc::CodecBufferUsage"* %115 to i64*
  %118 = add i64 %111, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %107, !llvm.loop !90

120:                                              ; preds = %102, %107, %21
  br i1 %8, label %126, label %121

121:                                              ; preds = %120
  %122 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.23", %"class.absl::inlined_vector_internal::Storage.23"* %0, i64 0, i32 1, i32 0, i32 0
  %123 = bitcast %"struct.webrtc::CodecBufferUsage"** %122 to i8**
  %124 = load i8*, i8** %123, align 8
  tail call void @_ZdlPv(i8* %124) #11
  %125 = load i64, i64* %5, align 8
  br label %126

126:                                              ; preds = %121, %120
  %127 = phi i64 [ %125, %121 ], [ %6, %120 ]
  %128 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.23", %"class.absl::inlined_vector_internal::Storage.23"* %0, i64 0, i32 1, i32 0, i32 0
  %129 = bitcast %"struct.webrtc::CodecBufferUsage"** %128 to i64*
  store i64 %28, i64* %129, align 8
  %130 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.23", %"class.absl::inlined_vector_internal::Storage.23"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %22, i64* %130, align 8
  %131 = or i64 %127, 1
  %132 = add i64 %131, 2
  store i64 %132, i64* %5, align 8
  ret %"struct.webrtc::CodecBufferUsage"* %29
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIiLm10ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage"*, i32*, i64) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !91
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !91
  %12 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !noalias !91
  br label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1
  %16 = ptrtoint %"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data"* %15 to i64
  br label %17

17:                                               ; preds = %8, %14
  %18 = phi i64 [ %16, %14 ], [ %11, %8 ]
  %19 = phi i64 [ 10, %14 ], [ %13, %8 ]
  %20 = lshr i64 %5, 1
  %21 = icmp ult i64 %19, %2
  br i1 %21, label %22, label %33

22:                                               ; preds = %17
  %23 = shl i64 %19, 1
  %24 = icmp ult i64 %23, %2
  %25 = select i1 %24, i64 %2, i64 %23
  %26 = icmp ugt i64 %25, 4611686018427387903
  br i1 %26, label %27, label %28

27:                                               ; preds = %22
  tail call void @abort() #13
  unreachable

28:                                               ; preds = %22
  %29 = shl i64 %25, 2
  %30 = tail call i8* @_Znwm(i64 %29) #11
  %31 = bitcast i8* %30 to i32*
  %32 = ptrtoint i8* %30 to i64
  br label %176

33:                                               ; preds = %17
  %34 = icmp ult i64 %20, %2
  %35 = inttoptr i64 %18 to i32*
  %36 = inttoptr i64 %18 to i8*
  %37 = getelementptr inbounds i32, i32* %35, i64 %20
  %38 = call i64 @llvm.usub.sat.i64(i64 %2, i64 %20)
  %39 = select i1 %34, i32* %37, i32* null
  %40 = select i1 %34, i64 %20, i64 %2
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %173, label %42

42:                                               ; preds = %33
  %43 = icmp ult i64 %40, 8
  br i1 %43, label %131, label %44

44:                                               ; preds = %42
  %45 = getelementptr i32, i32* %35, i64 %40
  %46 = getelementptr i32, i32* %1, i64 %40
  %47 = bitcast i32* %46 to i8*
  %48 = icmp ult i8* %36, %47
  %49 = icmp ugt i32* %45, %1
  %50 = and i1 %48, %49
  br i1 %50, label %131, label %51

51:                                               ; preds = %44
  %52 = and i64 %40, 9223372036854775800
  %53 = getelementptr i32, i32* %1, i64 %52
  %54 = add nsw i64 %52, -8
  %55 = lshr exact i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp ult i64 %54, 24
  br i1 %58, label %110, label %59

59:                                               ; preds = %51
  %60 = sub nsw i64 %56, %57
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi i64 [ 0, %59 ], [ %107, %61 ]
  %63 = phi i64 [ %60, %59 ], [ %108, %61 ]
  %64 = getelementptr i32, i32* %1, i64 %62
  %65 = getelementptr inbounds i32, i32* %35, i64 %62
  %66 = bitcast i32* %64 to <4 x i32>*
  %67 = load <4 x i32>, <4 x i32>* %66, align 4, !alias.scope !94
  %68 = getelementptr i32, i32* %64, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  %70 = load <4 x i32>, <4 x i32>* %69, align 4, !alias.scope !94
  %71 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %67, <4 x i32>* %71, align 4, !alias.scope !97, !noalias !94
  %72 = getelementptr inbounds i32, i32* %65, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %70, <4 x i32>* %73, align 4, !alias.scope !97, !noalias !94
  %74 = or i64 %62, 8
  %75 = getelementptr i32, i32* %1, i64 %74
  %76 = getelementptr inbounds i32, i32* %35, i64 %74
  %77 = bitcast i32* %75 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !94
  %79 = getelementptr i32, i32* %75, i64 4
  %80 = bitcast i32* %79 to <4 x i32>*
  %81 = load <4 x i32>, <4 x i32>* %80, align 4, !alias.scope !94
  %82 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %82, align 4, !alias.scope !97, !noalias !94
  %83 = getelementptr inbounds i32, i32* %76, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %84, align 4, !alias.scope !97, !noalias !94
  %85 = or i64 %62, 16
  %86 = getelementptr i32, i32* %1, i64 %85
  %87 = getelementptr inbounds i32, i32* %35, i64 %85
  %88 = bitcast i32* %86 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !94
  %90 = getelementptr i32, i32* %86, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  %92 = load <4 x i32>, <4 x i32>* %91, align 4, !alias.scope !94
  %93 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %93, align 4, !alias.scope !97, !noalias !94
  %94 = getelementptr inbounds i32, i32* %87, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %92, <4 x i32>* %95, align 4, !alias.scope !97, !noalias !94
  %96 = or i64 %62, 24
  %97 = getelementptr i32, i32* %1, i64 %96
  %98 = getelementptr inbounds i32, i32* %35, i64 %96
  %99 = bitcast i32* %97 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !94
  %101 = getelementptr i32, i32* %97, i64 4
  %102 = bitcast i32* %101 to <4 x i32>*
  %103 = load <4 x i32>, <4 x i32>* %102, align 4, !alias.scope !94
  %104 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %104, align 4, !alias.scope !97, !noalias !94
  %105 = getelementptr inbounds i32, i32* %98, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %103, <4 x i32>* %106, align 4, !alias.scope !97, !noalias !94
  %107 = add i64 %62, 32
  %108 = add i64 %63, -4
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %61, !llvm.loop !99

110:                                              ; preds = %61, %51
  %111 = phi i64 [ 0, %51 ], [ %107, %61 ]
  %112 = icmp eq i64 %57, 0
  br i1 %112, label %129, label %113

113:                                              ; preds = %110, %113
  %114 = phi i64 [ %126, %113 ], [ %111, %110 ]
  %115 = phi i64 [ %127, %113 ], [ %57, %110 ]
  %116 = getelementptr i32, i32* %1, i64 %114
  %117 = getelementptr inbounds i32, i32* %35, i64 %114
  %118 = bitcast i32* %116 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !94
  %120 = getelementptr i32, i32* %116, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !94
  %123 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !97, !noalias !94
  %124 = getelementptr inbounds i32, i32* %117, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !97, !noalias !94
  %126 = add i64 %114, 8
  %127 = add i64 %115, -1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %113, !llvm.loop !100

129:                                              ; preds = %113, %110
  %130 = icmp eq i64 %40, %52
  br i1 %130, label %173, label %131

131:                                              ; preds = %129, %44, %42
  %132 = phi i32* [ %1, %44 ], [ %1, %42 ], [ %53, %129 ]
  %133 = phi i64 [ 0, %44 ], [ 0, %42 ], [ %52, %129 ]
  %134 = xor i64 %133, -1
  %135 = add nsw i64 %40, %134
  %136 = and i64 %40, 3
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %148, label %138

138:                                              ; preds = %131, %138
  %139 = phi i32* [ %144, %138 ], [ %132, %131 ]
  %140 = phi i64 [ %145, %138 ], [ %133, %131 ]
  %141 = phi i64 [ %146, %138 ], [ %136, %131 ]
  %142 = getelementptr inbounds i32, i32* %35, i64 %140
  %143 = load i32, i32* %139, align 4
  store i32 %143, i32* %142, align 4
  %144 = getelementptr inbounds i32, i32* %139, i64 1
  %145 = add nuw i64 %140, 1
  %146 = add i64 %141, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %138, !llvm.loop !101

148:                                              ; preds = %138, %131
  %149 = phi i32* [ undef, %131 ], [ %144, %138 ]
  %150 = phi i32* [ %132, %131 ], [ %144, %138 ]
  %151 = phi i64 [ %133, %131 ], [ %145, %138 ]
  %152 = icmp ult i64 %135, 3
  br i1 %152, label %173, label %153

153:                                              ; preds = %148, %153
  %154 = phi i32* [ %170, %153 ], [ %150, %148 ]
  %155 = phi i64 [ %171, %153 ], [ %151, %148 ]
  %156 = getelementptr inbounds i32, i32* %35, i64 %155
  %157 = load i32, i32* %154, align 4
  store i32 %157, i32* %156, align 4
  %158 = getelementptr inbounds i32, i32* %154, i64 1
  %159 = add nuw i64 %155, 1
  %160 = getelementptr inbounds i32, i32* %35, i64 %159
  %161 = load i32, i32* %158, align 4
  store i32 %161, i32* %160, align 4
  %162 = getelementptr inbounds i32, i32* %154, i64 2
  %163 = add nuw i64 %155, 2
  %164 = getelementptr inbounds i32, i32* %35, i64 %163
  %165 = load i32, i32* %162, align 4
  store i32 %165, i32* %164, align 4
  %166 = getelementptr inbounds i32, i32* %154, i64 3
  %167 = add nuw i64 %155, 3
  %168 = getelementptr inbounds i32, i32* %35, i64 %167
  %169 = load i32, i32* %166, align 4
  store i32 %169, i32* %168, align 4
  %170 = getelementptr inbounds i32, i32* %154, i64 4
  %171 = add nuw i64 %155, 4
  %172 = icmp eq i64 %171, %40
  br i1 %172, label %173, label %153, !llvm.loop !102

173:                                              ; preds = %148, %153, %129, %33
  %174 = phi i32* [ %1, %33 ], [ %53, %129 ], [ %149, %148 ], [ %170, %153 ]
  %175 = icmp eq i64 %38, 0
  br i1 %175, label %312, label %176

176:                                              ; preds = %28, %173
  %177 = phi i32* [ %1, %28 ], [ %174, %173 ]
  %178 = phi i64 [ %2, %28 ], [ %38, %173 ]
  %179 = phi i32* [ %31, %28 ], [ %39, %173 ]
  %180 = phi i64 [ %25, %28 ], [ 0, %173 ]
  %181 = phi i64 [ %32, %28 ], [ 0, %173 ]
  %182 = icmp ult i64 %178, 8
  br i1 %182, label %269, label %183

183:                                              ; preds = %176
  %184 = getelementptr i32, i32* %179, i64 %178
  %185 = getelementptr i32, i32* %177, i64 %178
  %186 = icmp ult i32* %179, %185
  %187 = icmp ult i32* %177, %184
  %188 = and i1 %186, %187
  br i1 %188, label %269, label %189

189:                                              ; preds = %183
  %190 = and i64 %178, -8
  %191 = getelementptr i32, i32* %177, i64 %190
  %192 = add i64 %190, -8
  %193 = lshr exact i64 %192, 3
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 3
  %196 = icmp ult i64 %192, 24
  br i1 %196, label %248, label %197

197:                                              ; preds = %189
  %198 = sub nsw i64 %194, %195
  br label %199

199:                                              ; preds = %199, %197
  %200 = phi i64 [ 0, %197 ], [ %245, %199 ]
  %201 = phi i64 [ %198, %197 ], [ %246, %199 ]
  %202 = getelementptr i32, i32* %177, i64 %200
  %203 = getelementptr inbounds i32, i32* %179, i64 %200
  %204 = bitcast i32* %202 to <4 x i32>*
  %205 = load <4 x i32>, <4 x i32>* %204, align 4, !alias.scope !103
  %206 = getelementptr i32, i32* %202, i64 4
  %207 = bitcast i32* %206 to <4 x i32>*
  %208 = load <4 x i32>, <4 x i32>* %207, align 4, !alias.scope !103
  %209 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %205, <4 x i32>* %209, align 4, !alias.scope !106, !noalias !103
  %210 = getelementptr inbounds i32, i32* %203, i64 4
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> %208, <4 x i32>* %211, align 4, !alias.scope !106, !noalias !103
  %212 = or i64 %200, 8
  %213 = getelementptr i32, i32* %177, i64 %212
  %214 = getelementptr inbounds i32, i32* %179, i64 %212
  %215 = bitcast i32* %213 to <4 x i32>*
  %216 = load <4 x i32>, <4 x i32>* %215, align 4, !alias.scope !103
  %217 = getelementptr i32, i32* %213, i64 4
  %218 = bitcast i32* %217 to <4 x i32>*
  %219 = load <4 x i32>, <4 x i32>* %218, align 4, !alias.scope !103
  %220 = bitcast i32* %214 to <4 x i32>*
  store <4 x i32> %216, <4 x i32>* %220, align 4, !alias.scope !106, !noalias !103
  %221 = getelementptr inbounds i32, i32* %214, i64 4
  %222 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %219, <4 x i32>* %222, align 4, !alias.scope !106, !noalias !103
  %223 = or i64 %200, 16
  %224 = getelementptr i32, i32* %177, i64 %223
  %225 = getelementptr inbounds i32, i32* %179, i64 %223
  %226 = bitcast i32* %224 to <4 x i32>*
  %227 = load <4 x i32>, <4 x i32>* %226, align 4, !alias.scope !103
  %228 = getelementptr i32, i32* %224, i64 4
  %229 = bitcast i32* %228 to <4 x i32>*
  %230 = load <4 x i32>, <4 x i32>* %229, align 4, !alias.scope !103
  %231 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %231, align 4, !alias.scope !106, !noalias !103
  %232 = getelementptr inbounds i32, i32* %225, i64 4
  %233 = bitcast i32* %232 to <4 x i32>*
  store <4 x i32> %230, <4 x i32>* %233, align 4, !alias.scope !106, !noalias !103
  %234 = or i64 %200, 24
  %235 = getelementptr i32, i32* %177, i64 %234
  %236 = getelementptr inbounds i32, i32* %179, i64 %234
  %237 = bitcast i32* %235 to <4 x i32>*
  %238 = load <4 x i32>, <4 x i32>* %237, align 4, !alias.scope !103
  %239 = getelementptr i32, i32* %235, i64 4
  %240 = bitcast i32* %239 to <4 x i32>*
  %241 = load <4 x i32>, <4 x i32>* %240, align 4, !alias.scope !103
  %242 = bitcast i32* %236 to <4 x i32>*
  store <4 x i32> %238, <4 x i32>* %242, align 4, !alias.scope !106, !noalias !103
  %243 = getelementptr inbounds i32, i32* %236, i64 4
  %244 = bitcast i32* %243 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %244, align 4, !alias.scope !106, !noalias !103
  %245 = add i64 %200, 32
  %246 = add i64 %201, -4
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %199, !llvm.loop !108

248:                                              ; preds = %199, %189
  %249 = phi i64 [ 0, %189 ], [ %245, %199 ]
  %250 = icmp eq i64 %195, 0
  br i1 %250, label %267, label %251

251:                                              ; preds = %248, %251
  %252 = phi i64 [ %264, %251 ], [ %249, %248 ]
  %253 = phi i64 [ %265, %251 ], [ %195, %248 ]
  %254 = getelementptr i32, i32* %177, i64 %252
  %255 = getelementptr inbounds i32, i32* %179, i64 %252
  %256 = bitcast i32* %254 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4, !alias.scope !103
  %258 = getelementptr i32, i32* %254, i64 4
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4, !alias.scope !103
  %261 = bitcast i32* %255 to <4 x i32>*
  store <4 x i32> %257, <4 x i32>* %261, align 4, !alias.scope !106, !noalias !103
  %262 = getelementptr inbounds i32, i32* %255, i64 4
  %263 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %260, <4 x i32>* %263, align 4, !alias.scope !106, !noalias !103
  %264 = add i64 %252, 8
  %265 = add i64 %253, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %251, !llvm.loop !109

267:                                              ; preds = %251, %248
  %268 = icmp eq i64 %178, %190
  br i1 %268, label %310, label %269

269:                                              ; preds = %267, %183, %176
  %270 = phi i32* [ %177, %183 ], [ %177, %176 ], [ %191, %267 ]
  %271 = phi i64 [ 0, %183 ], [ 0, %176 ], [ %190, %267 ]
  %272 = xor i64 %271, -1
  %273 = add i64 %178, %272
  %274 = and i64 %178, 3
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %286, label %276

276:                                              ; preds = %269, %276
  %277 = phi i32* [ %282, %276 ], [ %270, %269 ]
  %278 = phi i64 [ %283, %276 ], [ %271, %269 ]
  %279 = phi i64 [ %284, %276 ], [ %274, %269 ]
  %280 = getelementptr inbounds i32, i32* %179, i64 %278
  %281 = load i32, i32* %277, align 4
  store i32 %281, i32* %280, align 4
  %282 = getelementptr inbounds i32, i32* %277, i64 1
  %283 = add nuw i64 %278, 1
  %284 = add i64 %279, -1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %276, !llvm.loop !110

286:                                              ; preds = %276, %269
  %287 = phi i32* [ %270, %269 ], [ %282, %276 ]
  %288 = phi i64 [ %271, %269 ], [ %283, %276 ]
  %289 = icmp ult i64 %273, 3
  br i1 %289, label %310, label %290

290:                                              ; preds = %286, %290
  %291 = phi i32* [ %307, %290 ], [ %287, %286 ]
  %292 = phi i64 [ %308, %290 ], [ %288, %286 ]
  %293 = getelementptr inbounds i32, i32* %179, i64 %292
  %294 = load i32, i32* %291, align 4
  store i32 %294, i32* %293, align 4
  %295 = getelementptr inbounds i32, i32* %291, i64 1
  %296 = add nuw i64 %292, 1
  %297 = getelementptr inbounds i32, i32* %179, i64 %296
  %298 = load i32, i32* %295, align 4
  store i32 %298, i32* %297, align 4
  %299 = getelementptr inbounds i32, i32* %291, i64 2
  %300 = add nuw i64 %292, 2
  %301 = getelementptr inbounds i32, i32* %179, i64 %300
  %302 = load i32, i32* %299, align 4
  store i32 %302, i32* %301, align 4
  %303 = getelementptr inbounds i32, i32* %291, i64 3
  %304 = add nuw i64 %292, 3
  %305 = getelementptr inbounds i32, i32* %179, i64 %304
  %306 = load i32, i32* %303, align 4
  store i32 %306, i32* %305, align 4
  %307 = getelementptr inbounds i32, i32* %291, i64 4
  %308 = add nuw i64 %292, 4
  %309 = icmp eq i64 %308, %178
  br i1 %309, label %310, label %290, !llvm.loop !111

310:                                              ; preds = %286, %290, %267
  %311 = icmp eq i64 %181, 0
  br i1 %311, label %312, label %314

312:                                              ; preds = %173, %310
  %313 = load i64, i64* %4, align 8
  br label %329

314:                                              ; preds = %310
  %315 = load i64, i64* %4, align 8
  %316 = and i64 %315, 1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %323, label %318

318:                                              ; preds = %314
  %319 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %320 = bitcast i32** %319 to i8**
  %321 = load i8*, i8** %320, align 8
  tail call void @_ZdlPv(i8* %321) #11
  %322 = load i64, i64* %4, align 8
  br label %323

323:                                              ; preds = %314, %318
  %324 = phi i64 [ %315, %314 ], [ %322, %318 ]
  %325 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %326 = bitcast i32** %325 to i64*
  store i64 %181, i64* %326, align 8
  %327 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %180, i64* %327, align 8
  %328 = or i64 %324, 1
  store i64 %328, i64* %4, align 8
  br label %329

329:                                              ; preds = %323, %312
  %330 = phi i64 [ %313, %312 ], [ %328, %323 ]
  %331 = shl i64 %2, 1
  %332 = and i64 %330, 1
  %333 = or i64 %332, %331
  store i64 %333, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6webrtc23FrameDependencyTemplateENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.webrtc::FrameDependencyTemplate"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.webrtc::FrameDependencyTemplate"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 104
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.webrtc::FrameDependencyTemplate"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 104
  %25 = add i64 %23, 104
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #12
  %27 = ptrtoint %"struct.webrtc::FrameDependencyTemplate"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %151

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 104
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 177372539170284150
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #13
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 104
  %42 = icmp ult i64 %41, 88686269585142075
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 177372539170284150, %39 ]
  %50 = mul i64 %49, 104
  %51 = tail call i8* @_Znwm(i64 %50) #11
  %52 = bitcast i8* %51 to %"struct.webrtc::FrameDependencyTemplate"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %55, i64 %34
  %57 = ptrtoint %"struct.webrtc::FrameDependencyTemplate"* %56 to i64
  %58 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %56, i64 %1
  br label %60

60:                                               ; preds = %53, %60
  %61 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %64, %60 ], [ %56, %53 ]
  %62 = phi i64 [ %65, %60 ], [ %57, %53 ]
  %63 = inttoptr i64 %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 104, i1 false) #12
  %64 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %61, i64 1
  %65 = ptrtoint %"struct.webrtc::FrameDependencyTemplate"* %64 to i64
  %66 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %59, %64
  br i1 %66, label %67, label %60

67:                                               ; preds = %60
  %68 = ptrtoint %"struct.webrtc::FrameDependencyTemplate"* %58 to i64
  %69 = ptrtoint %"struct.webrtc::FrameDependencyTemplate"* %59 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %71 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %70, align 8
  %72 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %6, align 8
  %73 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = ptrtoint %"struct.webrtc::FrameDependencyTemplate"* %71 to i64
  br label %110

76:                                               ; preds = %67, %76
  %77 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %79, %76 ], [ %56, %67 ]
  %78 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %80, %76 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %77, i64 -1
  %80 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %78, i64 -1
  %81 = bitcast %"struct.webrtc::FrameDependencyTemplate"* %80 to i64*
  %82 = bitcast %"struct.webrtc::FrameDependencyTemplate"* %79 to i64*
  %83 = load i64, i64* %81, align 8
  store i64 %83, i64* %82, align 8
  %84 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %77, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %78, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i64, i64* %85, align 8
  store i64 %86, i64* %84, align 8
  %87 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %78, i64 -1, i32 2, i32 0, i32 1
  %88 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %77, i64 -1, i32 2, i32 0, i32 1
  %89 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %88 to i8*
  %90 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 40, i1 false) #12
  store i64 0, i64* %85, align 8
  %91 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %77, i64 -1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %78, i64 -1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  store i64 %93, i64* %91, align 8
  %94 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %78, i64 -1, i32 3, i32 0, i32 1
  %95 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %77, i64 -1, i32 3, i32 0, i32 1
  %96 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %95 to i8*
  %97 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 16, i1 false) #12
  store i64 0, i64* %92, align 8
  %98 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %77, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %78, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %98, align 8
  %101 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %78, i64 -1, i32 4, i32 0, i32 1
  %102 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %77, i64 -1, i32 4, i32 0, i32 1
  %103 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %102 to i8*
  %104 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 16, i1 false) #12
  store i64 0, i64* %99, align 8
  %105 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %80, %71
  br i1 %105, label %106, label %76

106:                                              ; preds = %76
  %107 = ptrtoint %"struct.webrtc::FrameDependencyTemplate"* %79 to i64
  %108 = load i64, i64* %31, align 8
  %109 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %6, align 8
  br label %110

110:                                              ; preds = %74, %106
  %111 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %71, %74 ], [ %109, %106 ]
  %112 = phi i64 [ %57, %74 ], [ %107, %106 ]
  %113 = phi i64 [ %75, %74 ], [ %108, %106 ]
  store i64 %112, i64* %31, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %114 = inttoptr i64 %113 to %"struct.webrtc::FrameDependencyTemplate"*
  %115 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %111, %114
  br i1 %115, label %147, label %116

116:                                              ; preds = %110, %145
  %117 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %118, %145 ], [ %111, %110 ]
  %118 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %117, i64 -1
  %119 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %117, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = and i64 %120, 1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %127, label %123

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %117, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %125 = bitcast i32** %124 to i8**
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #11
  br label %127

127:                                              ; preds = %123, %116
  %128 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %117, i64 -1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = and i64 %129, 1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %136, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %117, i64 -1, i32 3, i32 0, i32 1, i32 0, i32 0
  %134 = bitcast i32** %133 to i8**
  %135 = load i8*, i8** %134, align 8
  tail call void @_ZdlPv(i8* %135) #11
  br label %136

136:                                              ; preds = %132, %127
  %137 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %117, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = and i64 %138, 1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %145, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %117, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0
  %143 = bitcast i32** %142 to i8**
  %144 = load i8*, i8** %143, align 8
  tail call void @_ZdlPv(i8* %144) #11
  br label %145

145:                                              ; preds = %141, %136
  %146 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %118, %114
  br i1 %146, label %147, label %116

147:                                              ; preds = %145, %110
  %148 = icmp eq i64 %113, 0
  br i1 %148, label %151, label %149

149:                                              ; preds = %147
  %150 = inttoptr i64 %113 to i8*
  tail call void @_ZdlPv(i8* %150) #11
  br label %151

151:                                              ; preds = %149, %147, %28
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6webrtc23ScalableVideoController16LayerFrameConfigENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.20"*) local_unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.std::__1::vector.20"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = sdiv exact i64 %7, 88
  %9 = add nsw i64 %8, 1
  %10 = icmp ugt i64 %9, 209622091746699450
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::vector.20"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %12) #13
  unreachable

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %6
  %18 = sdiv exact i64 %17, 88
  %19 = icmp ult i64 %18, 104811045873349725
  br i1 %19, label %20, label %25

20:                                               ; preds = %13
  %21 = shl nsw i64 %18, 1
  %22 = icmp ult i64 %21, %9
  %23 = select i1 %22, i64 %9, i64 %21
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %13, %20
  %26 = phi i64 [ %23, %20 ], [ 209622091746699450, %13 ]
  %27 = mul i64 %26, 88
  %28 = tail call i8* @_Znwm(i64 %27) #11
  %29 = bitcast i8* %28 to %"class.webrtc::ScalableVideoController::LayerFrameConfig"*
  br label %30

30:                                               ; preds = %20, %25
  %31 = phi i64 [ %26, %25 ], [ 0, %20 ]
  %32 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %29, %25 ], [ null, %20 ]
  %33 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %32, i64 %8
  %34 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %32, i64 %31
  %35 = ptrtoint %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %34 to i64
  %36 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 88, i1 false) #12
  %37 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %33, i64 1
  %38 = ptrtoint %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %39, align 8
  %41 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %2, align 8
  %42 = icmp eq %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %30
  %44 = ptrtoint %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %40 to i64
  br label %63

45:                                               ; preds = %30, %45
  %46 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %48, %45 ], [ %33, %30 ]
  %47 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %49, %45 ], [ %41, %30 ]
  %48 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %46, i64 -1
  %49 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %47, i64 -1
  %50 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %48 to i8*
  %51 = bitcast %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false) #12
  %52 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %46, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %47, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %52, align 8
  %55 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %47, i64 -1, i32 4, i32 0, i32 1
  %56 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %46, i64 -1, i32 4, i32 0, i32 1
  %57 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %56 to i8*
  %58 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 64, i1 false) #12
  store i64 0, i64* %53, align 8
  %59 = icmp eq %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %49, %40
  br i1 %59, label %60, label %45

60:                                               ; preds = %45
  %61 = load i64, i64* %5, align 8
  %62 = load %"class.webrtc::ScalableVideoController::LayerFrameConfig"*, %"class.webrtc::ScalableVideoController::LayerFrameConfig"** %2, align 8
  br label %63

63:                                               ; preds = %43, %60
  %64 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %40, %43 ], [ %62, %60 ]
  %65 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %33, %43 ], [ %48, %60 ]
  %66 = phi i64 [ %44, %43 ], [ %61, %60 ]
  %67 = ptrtoint %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %65 to i64
  store i64 %67, i64* %5, align 8
  store i64 %38, i64* %3, align 8
  store i64 %35, i64* %15, align 8
  %68 = inttoptr i64 %66 to %"class.webrtc::ScalableVideoController::LayerFrameConfig"*
  %69 = icmp eq %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %64, %68
  br i1 %69, label %83, label %70

70:                                               ; preds = %63, %81
  %71 = phi %"class.webrtc::ScalableVideoController::LayerFrameConfig"* [ %72, %81 ], [ %64, %63 ]
  %72 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %71, i64 -1
  %73 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %71, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = and i64 %74, 1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.webrtc::ScalableVideoController::LayerFrameConfig", %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %71, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %79 = bitcast %"struct.webrtc::CodecBufferUsage"** %78 to i8**
  %80 = load i8*, i8** %79, align 8
  tail call void @_ZdlPv(i8* %80) #11
  br label %81

81:                                               ; preds = %77, %70
  %82 = icmp eq %"class.webrtc::ScalableVideoController::LayerFrameConfig"* %72, %68
  br i1 %82, label %83, label %70

83:                                               ; preds = %81, %63
  %84 = icmp eq i64 %66, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  %86 = inttoptr i64 %66 to i8*
  tail call void @_ZdlPv(i8* %86) #11
  br label %87

87:                                               ; preds = %83, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE6AssignINS0_20IteratorValueAdapterIS6_PKS3_EEEEvT_m(%"class.absl::inlined_vector_internal::Storage.23"*, %"struct.webrtc::CodecBufferUsage"*, i64) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.23", %"class.absl::inlined_vector_internal::Storage.23"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !112
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.23", %"class.absl::inlined_vector_internal::Storage.23"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"struct.webrtc::CodecBufferUsage"** %9 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !112
  %12 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.23", %"class.absl::inlined_vector_internal::Storage.23"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !noalias !112
  br label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.23", %"class.absl::inlined_vector_internal::Storage.23"* %0, i64 0, i32 1
  %16 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data"* %15 to i64
  br label %17

17:                                               ; preds = %8, %14
  %18 = phi i64 [ %16, %14 ], [ %11, %8 ]
  %19 = phi i64 [ 8, %14 ], [ %13, %8 ]
  %20 = lshr i64 %5, 1
  %21 = icmp ult i64 %19, %2
  br i1 %21, label %22, label %33

22:                                               ; preds = %17
  %23 = shl i64 %19, 1
  %24 = icmp ult i64 %23, %2
  %25 = select i1 %24, i64 %2, i64 %23
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %28

27:                                               ; preds = %22
  tail call void @abort() #13
  unreachable

28:                                               ; preds = %22
  %29 = shl i64 %25, 3
  %30 = tail call i8* @_Znwm(i64 %29) #11
  %31 = bitcast i8* %30 to %"struct.webrtc::CodecBufferUsage"*
  %32 = ptrtoint i8* %30 to i64
  br label %92

33:                                               ; preds = %17
  %34 = icmp ult i64 %20, %2
  %35 = inttoptr i64 %18 to %"struct.webrtc::CodecBufferUsage"*
  %36 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %35, i64 %20
  %37 = call i64 @llvm.usub.sat.i64(i64 %2, i64 %20)
  %38 = select i1 %34, %"struct.webrtc::CodecBufferUsage"* %36, %"struct.webrtc::CodecBufferUsage"* null
  %39 = select i1 %34, i64 %20, i64 %2
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %89, label %41

41:                                               ; preds = %33
  %42 = add nsw i64 %39, -1
  %43 = and i64 %39, 3
  %44 = icmp ult i64 %42, 3
  br i1 %44, label %73, label %45

45:                                               ; preds = %41
  %46 = sub nsw i64 %39, %43
  br label %47

47:                                               ; preds = %47, %45
  %48 = phi %"struct.webrtc::CodecBufferUsage"* [ %1, %45 ], [ %69, %47 ]
  %49 = phi i64 [ 0, %45 ], [ %70, %47 ]
  %50 = phi i64 [ %46, %45 ], [ %71, %47 ]
  %51 = bitcast %"struct.webrtc::CodecBufferUsage"* %48 to i8*
  %52 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %35, i64 %49
  %53 = bitcast %"struct.webrtc::CodecBufferUsage"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %51, i64 6, i1 false) #12
  %54 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %48, i64 1
  %55 = or i64 %49, 1
  %56 = bitcast %"struct.webrtc::CodecBufferUsage"* %54 to i8*
  %57 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %35, i64 %55
  %58 = bitcast %"struct.webrtc::CodecBufferUsage"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %56, i64 6, i1 false) #12
  %59 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %48, i64 2
  %60 = or i64 %49, 2
  %61 = bitcast %"struct.webrtc::CodecBufferUsage"* %59 to i8*
  %62 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %35, i64 %60
  %63 = bitcast %"struct.webrtc::CodecBufferUsage"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %61, i64 6, i1 false) #12
  %64 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %48, i64 3
  %65 = or i64 %49, 3
  %66 = bitcast %"struct.webrtc::CodecBufferUsage"* %64 to i8*
  %67 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %35, i64 %65
  %68 = bitcast %"struct.webrtc::CodecBufferUsage"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %66, i64 6, i1 false) #12
  %69 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %48, i64 4
  %70 = add nuw i64 %49, 4
  %71 = add i64 %50, -4
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %47

73:                                               ; preds = %47, %41
  %74 = phi %"struct.webrtc::CodecBufferUsage"* [ undef, %41 ], [ %69, %47 ]
  %75 = phi %"struct.webrtc::CodecBufferUsage"* [ %1, %41 ], [ %69, %47 ]
  %76 = phi i64 [ 0, %41 ], [ %70, %47 ]
  %77 = icmp eq i64 %43, 0
  br i1 %77, label %89, label %78

78:                                               ; preds = %73, %78
  %79 = phi %"struct.webrtc::CodecBufferUsage"* [ %85, %78 ], [ %75, %73 ]
  %80 = phi i64 [ %86, %78 ], [ %76, %73 ]
  %81 = phi i64 [ %87, %78 ], [ %43, %73 ]
  %82 = bitcast %"struct.webrtc::CodecBufferUsage"* %79 to i8*
  %83 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %35, i64 %80
  %84 = bitcast %"struct.webrtc::CodecBufferUsage"* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %82, i64 6, i1 false) #12
  %85 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %79, i64 1
  %86 = add nuw i64 %80, 1
  %87 = add i64 %81, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %78, !llvm.loop !115

89:                                               ; preds = %73, %78, %33
  %90 = phi %"struct.webrtc::CodecBufferUsage"* [ %1, %33 ], [ %74, %73 ], [ %85, %78 ]
  %91 = icmp eq i64 %37, 0
  br i1 %91, label %263, label %92

92:                                               ; preds = %28, %89
  %93 = phi %"struct.webrtc::CodecBufferUsage"* [ %1, %28 ], [ %90, %89 ]
  %94 = phi i64 [ %2, %28 ], [ %37, %89 ]
  %95 = phi %"struct.webrtc::CodecBufferUsage"* [ %31, %28 ], [ %38, %89 ]
  %96 = phi i64 [ %25, %28 ], [ 0, %89 ]
  %97 = phi i64 [ %32, %28 ], [ 0, %89 ]
  %98 = icmp ult i64 %94, 4
  br i1 %98, label %185, label %99

99:                                               ; preds = %92
  %100 = getelementptr %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %95, i64 %94
  %101 = getelementptr %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %93, i64 %94
  %102 = icmp ult %"struct.webrtc::CodecBufferUsage"* %95, %101
  %103 = icmp ult %"struct.webrtc::CodecBufferUsage"* %93, %100
  %104 = and i1 %102, %103
  br i1 %104, label %185, label %105

105:                                              ; preds = %99
  %106 = and i64 %94, -4
  %107 = getelementptr %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %93, i64 %106
  %108 = add i64 %106, -4
  %109 = lshr exact i64 %108, 2
  %110 = add nuw nsw i64 %109, 1
  %111 = and i64 %110, 3
  %112 = icmp ult i64 %108, 12
  br i1 %112, label %164, label %113

113:                                              ; preds = %105
  %114 = sub nsw i64 %110, %111
  br label %115

115:                                              ; preds = %115, %113
  %116 = phi i64 [ 0, %113 ], [ %161, %115 ]
  %117 = phi i64 [ %114, %113 ], [ %162, %115 ]
  %118 = getelementptr %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %93, i64 %116
  %119 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %95, i64 %116
  %120 = bitcast %"struct.webrtc::CodecBufferUsage"* %118 to <2 x i64>*
  %121 = load <2 x i64>, <2 x i64>* %120, align 4, !alias.scope !116
  %122 = getelementptr %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %118, i64 2
  %123 = bitcast %"struct.webrtc::CodecBufferUsage"* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 4, !alias.scope !116
  %125 = bitcast %"struct.webrtc::CodecBufferUsage"* %119 to <2 x i64>*
  store <2 x i64> %121, <2 x i64>* %125, align 4, !alias.scope !119, !noalias !116
  %126 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %119, i64 2
  %127 = bitcast %"struct.webrtc::CodecBufferUsage"* %126 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %127, align 4, !alias.scope !119, !noalias !116
  %128 = or i64 %116, 4
  %129 = getelementptr %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %93, i64 %128
  %130 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %95, i64 %128
  %131 = bitcast %"struct.webrtc::CodecBufferUsage"* %129 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 4, !alias.scope !116
  %133 = getelementptr %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %129, i64 2
  %134 = bitcast %"struct.webrtc::CodecBufferUsage"* %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 4, !alias.scope !116
  %136 = bitcast %"struct.webrtc::CodecBufferUsage"* %130 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %136, align 4, !alias.scope !119, !noalias !116
  %137 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %130, i64 2
  %138 = bitcast %"struct.webrtc::CodecBufferUsage"* %137 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %138, align 4, !alias.scope !119, !noalias !116
  %139 = or i64 %116, 8
  %140 = getelementptr %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %93, i64 %139
  %141 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %95, i64 %139
  %142 = bitcast %"struct.webrtc::CodecBufferUsage"* %140 to <2 x i64>*
  %143 = load <2 x i64>, <2 x i64>* %142, align 4, !alias.scope !116
  %144 = getelementptr %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %140, i64 2
  %145 = bitcast %"struct.webrtc::CodecBufferUsage"* %144 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 4, !alias.scope !116
  %147 = bitcast %"struct.webrtc::CodecBufferUsage"* %141 to <2 x i64>*
  store <2 x i64> %143, <2 x i64>* %147, align 4, !alias.scope !119, !noalias !116
  %148 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %141, i64 2
  %149 = bitcast %"struct.webrtc::CodecBufferUsage"* %148 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %149, align 4, !alias.scope !119, !noalias !116
  %150 = or i64 %116, 12
  %151 = getelementptr %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %93, i64 %150
  %152 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %95, i64 %150
  %153 = bitcast %"struct.webrtc::CodecBufferUsage"* %151 to <2 x i64>*
  %154 = load <2 x i64>, <2 x i64>* %153, align 4, !alias.scope !116
  %155 = getelementptr %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %151, i64 2
  %156 = bitcast %"struct.webrtc::CodecBufferUsage"* %155 to <2 x i64>*
  %157 = load <2 x i64>, <2 x i64>* %156, align 4, !alias.scope !116
  %158 = bitcast %"struct.webrtc::CodecBufferUsage"* %152 to <2 x i64>*
  store <2 x i64> %154, <2 x i64>* %158, align 4, !alias.scope !119, !noalias !116
  %159 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %152, i64 2
  %160 = bitcast %"struct.webrtc::CodecBufferUsage"* %159 to <2 x i64>*
  store <2 x i64> %157, <2 x i64>* %160, align 4, !alias.scope !119, !noalias !116
  %161 = add i64 %116, 16
  %162 = add i64 %117, -4
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %115, !llvm.loop !121

164:                                              ; preds = %115, %105
  %165 = phi i64 [ 0, %105 ], [ %161, %115 ]
  %166 = icmp eq i64 %111, 0
  br i1 %166, label %183, label %167

167:                                              ; preds = %164, %167
  %168 = phi i64 [ %180, %167 ], [ %165, %164 ]
  %169 = phi i64 [ %181, %167 ], [ %111, %164 ]
  %170 = getelementptr %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %93, i64 %168
  %171 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %95, i64 %168
  %172 = bitcast %"struct.webrtc::CodecBufferUsage"* %170 to <2 x i64>*
  %173 = load <2 x i64>, <2 x i64>* %172, align 4, !alias.scope !116
  %174 = getelementptr %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %170, i64 2
  %175 = bitcast %"struct.webrtc::CodecBufferUsage"* %174 to <2 x i64>*
  %176 = load <2 x i64>, <2 x i64>* %175, align 4, !alias.scope !116
  %177 = bitcast %"struct.webrtc::CodecBufferUsage"* %171 to <2 x i64>*
  store <2 x i64> %173, <2 x i64>* %177, align 4, !alias.scope !119, !noalias !116
  %178 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %171, i64 2
  %179 = bitcast %"struct.webrtc::CodecBufferUsage"* %178 to <2 x i64>*
  store <2 x i64> %176, <2 x i64>* %179, align 4, !alias.scope !119, !noalias !116
  %180 = add i64 %168, 4
  %181 = add i64 %169, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %167, !llvm.loop !122

183:                                              ; preds = %167, %164
  %184 = icmp eq i64 %94, %106
  br i1 %184, label %261, label %185

185:                                              ; preds = %183, %99, %92
  %186 = phi %"struct.webrtc::CodecBufferUsage"* [ %93, %99 ], [ %93, %92 ], [ %107, %183 ]
  %187 = phi i64 [ 0, %99 ], [ 0, %92 ], [ %106, %183 ]
  %188 = sub i64 %94, %187
  %189 = xor i64 %187, -1
  %190 = add i64 %94, %189
  %191 = and i64 %188, 7
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %205, label %193

193:                                              ; preds = %185, %193
  %194 = phi %"struct.webrtc::CodecBufferUsage"* [ %201, %193 ], [ %186, %185 ]
  %195 = phi i64 [ %202, %193 ], [ %187, %185 ]
  %196 = phi i64 [ %203, %193 ], [ %191, %185 ]
  %197 = bitcast %"struct.webrtc::CodecBufferUsage"* %194 to i64*
  %198 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %95, i64 %195
  %199 = bitcast %"struct.webrtc::CodecBufferUsage"* %198 to i64*
  %200 = load i64, i64* %197, align 4
  store i64 %200, i64* %199, align 4
  %201 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %194, i64 1
  %202 = add nuw i64 %195, 1
  %203 = add i64 %196, -1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %193, !llvm.loop !123

205:                                              ; preds = %193, %185
  %206 = phi %"struct.webrtc::CodecBufferUsage"* [ %186, %185 ], [ %201, %193 ]
  %207 = phi i64 [ %187, %185 ], [ %202, %193 ]
  %208 = icmp ult i64 %190, 7
  br i1 %208, label %261, label %209

209:                                              ; preds = %205, %209
  %210 = phi %"struct.webrtc::CodecBufferUsage"* [ %258, %209 ], [ %206, %205 ]
  %211 = phi i64 [ %259, %209 ], [ %207, %205 ]
  %212 = bitcast %"struct.webrtc::CodecBufferUsage"* %210 to i64*
  %213 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %95, i64 %211
  %214 = bitcast %"struct.webrtc::CodecBufferUsage"* %213 to i64*
  %215 = load i64, i64* %212, align 4
  store i64 %215, i64* %214, align 4
  %216 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %210, i64 1
  %217 = add nuw i64 %211, 1
  %218 = bitcast %"struct.webrtc::CodecBufferUsage"* %216 to i64*
  %219 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %95, i64 %217
  %220 = bitcast %"struct.webrtc::CodecBufferUsage"* %219 to i64*
  %221 = load i64, i64* %218, align 4
  store i64 %221, i64* %220, align 4
  %222 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %210, i64 2
  %223 = add nuw i64 %211, 2
  %224 = bitcast %"struct.webrtc::CodecBufferUsage"* %222 to i64*
  %225 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %95, i64 %223
  %226 = bitcast %"struct.webrtc::CodecBufferUsage"* %225 to i64*
  %227 = load i64, i64* %224, align 4
  store i64 %227, i64* %226, align 4
  %228 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %210, i64 3
  %229 = add nuw i64 %211, 3
  %230 = bitcast %"struct.webrtc::CodecBufferUsage"* %228 to i64*
  %231 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %95, i64 %229
  %232 = bitcast %"struct.webrtc::CodecBufferUsage"* %231 to i64*
  %233 = load i64, i64* %230, align 4
  store i64 %233, i64* %232, align 4
  %234 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %210, i64 4
  %235 = add nuw i64 %211, 4
  %236 = bitcast %"struct.webrtc::CodecBufferUsage"* %234 to i64*
  %237 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %95, i64 %235
  %238 = bitcast %"struct.webrtc::CodecBufferUsage"* %237 to i64*
  %239 = load i64, i64* %236, align 4
  store i64 %239, i64* %238, align 4
  %240 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %210, i64 5
  %241 = add nuw i64 %211, 5
  %242 = bitcast %"struct.webrtc::CodecBufferUsage"* %240 to i64*
  %243 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %95, i64 %241
  %244 = bitcast %"struct.webrtc::CodecBufferUsage"* %243 to i64*
  %245 = load i64, i64* %242, align 4
  store i64 %245, i64* %244, align 4
  %246 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %210, i64 6
  %247 = add nuw i64 %211, 6
  %248 = bitcast %"struct.webrtc::CodecBufferUsage"* %246 to i64*
  %249 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %95, i64 %247
  %250 = bitcast %"struct.webrtc::CodecBufferUsage"* %249 to i64*
  %251 = load i64, i64* %248, align 4
  store i64 %251, i64* %250, align 4
  %252 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %210, i64 7
  %253 = add nuw i64 %211, 7
  %254 = bitcast %"struct.webrtc::CodecBufferUsage"* %252 to i64*
  %255 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %95, i64 %253
  %256 = bitcast %"struct.webrtc::CodecBufferUsage"* %255 to i64*
  %257 = load i64, i64* %254, align 4
  store i64 %257, i64* %256, align 4
  %258 = getelementptr inbounds %"struct.webrtc::CodecBufferUsage", %"struct.webrtc::CodecBufferUsage"* %210, i64 8
  %259 = add nuw i64 %211, 8
  %260 = icmp eq i64 %259, %94
  br i1 %260, label %261, label %209, !llvm.loop !124

261:                                              ; preds = %205, %209, %183
  %262 = icmp eq i64 %97, 0
  br i1 %262, label %263, label %265

263:                                              ; preds = %89, %261
  %264 = load i64, i64* %4, align 8
  br label %280

265:                                              ; preds = %261
  %266 = load i64, i64* %4, align 8
  %267 = and i64 %266, 1
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %274, label %269

269:                                              ; preds = %265
  %270 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.23", %"class.absl::inlined_vector_internal::Storage.23"* %0, i64 0, i32 1, i32 0, i32 0
  %271 = bitcast %"struct.webrtc::CodecBufferUsage"** %270 to i8**
  %272 = load i8*, i8** %271, align 8
  tail call void @_ZdlPv(i8* %272) #11
  %273 = load i64, i64* %4, align 8
  br label %274

274:                                              ; preds = %265, %269
  %275 = phi i64 [ %266, %265 ], [ %273, %269 ]
  %276 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.23", %"class.absl::inlined_vector_internal::Storage.23"* %0, i64 0, i32 1, i32 0, i32 0
  %277 = bitcast %"struct.webrtc::CodecBufferUsage"** %276 to i64*
  store i64 %97, i64* %277, align 8
  %278 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.23", %"class.absl::inlined_vector_internal::Storage.23"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %96, i64* %278, align 8
  %279 = or i64 %275, 1
  store i64 %279, i64* %4, align 8
  br label %280

280:                                              ; preds = %274, %263
  %281 = phi i64 [ %264, %263 ], [ %279, %274 ]
  %282 = shl i64 %2, 1
  %283 = and i64 %281, 1
  %284 = or i64 %283, %282
  store i64 %284, i64* %4, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJS3_EEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.9"*, i32* dereferenceable(4)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.9", %"class.absl::inlined_vector_internal::Storage.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !noalias !125
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.9", %"class.absl::inlined_vector_internal::Storage.9"* %0, i64 0, i32 1
  %9 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %8 to i64
  br label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.9", %"class.absl::inlined_vector_internal::Storage.9"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !125
  %14 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.9", %"class.absl::inlined_vector_internal::Storage.9"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !125
  %16 = shl i64 %15, 1
  %17 = icmp ugt i64 %16, 4611686018427387903
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void @abort() #13
  unreachable

19:                                               ; preds = %7, %10
  %20 = phi i64 [ 20, %7 ], [ %16, %10 ]
  %21 = phi i64 [ %9, %7 ], [ %13, %10 ]
  %22 = inttoptr i64 %21 to i32*
  %23 = inttoptr i64 %21 to i8*
  %24 = lshr i64 %4, 1
  %25 = shl i64 %20, 2
  %26 = tail call i8* @_Znwm(i64 %25) #11
  %27 = bitcast i8* %26 to i32*
  %28 = ptrtoint i8* %26 to i64
  %29 = getelementptr inbounds i32, i32* %27, i64 %24
  %30 = load i32, i32* %1, align 4
  store i32 %30, i32* %29, align 4
  %31 = icmp eq i64 %24, 0
  br i1 %31, label %163, label %32

32:                                               ; preds = %19
  %33 = icmp ult i64 %4, 16
  br i1 %33, label %122, label %34

34:                                               ; preds = %32
  %35 = shl i64 %24, 2
  %36 = getelementptr i8, i8* %26, i64 %35
  %37 = getelementptr i32, i32* %22, i64 %24
  %38 = bitcast i32* %37 to i8*
  %39 = icmp ult i8* %26, %38
  %40 = icmp ugt i8* %36, %23
  %41 = and i1 %39, %40
  br i1 %41, label %122, label %42

42:                                               ; preds = %34
  %43 = and i64 %24, 9223372036854775800
  %44 = getelementptr i32, i32* %22, i64 %43
  %45 = add nsw i64 %43, -8
  %46 = lshr exact i64 %45, 3
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 24
  br i1 %49, label %101, label %50

50:                                               ; preds = %42
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr i32, i32* %22, i64 %53
  %56 = getelementptr inbounds i32, i32* %27, i64 %53
  %57 = bitcast i32* %55 to <4 x i32>*
  %58 = load <4 x i32>, <4 x i32>* %57, align 4, !alias.scope !128
  %59 = getelementptr i32, i32* %55, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  %61 = load <4 x i32>, <4 x i32>* %60, align 4, !alias.scope !128
  %62 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> %58, <4 x i32>* %62, align 4, !alias.scope !131, !noalias !128
  %63 = getelementptr inbounds i32, i32* %56, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %61, <4 x i32>* %64, align 4, !alias.scope !131, !noalias !128
  %65 = or i64 %53, 8
  %66 = getelementptr i32, i32* %22, i64 %65
  %67 = getelementptr inbounds i32, i32* %27, i64 %65
  %68 = bitcast i32* %66 to <4 x i32>*
  %69 = load <4 x i32>, <4 x i32>* %68, align 4, !alias.scope !128
  %70 = getelementptr i32, i32* %66, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  %72 = load <4 x i32>, <4 x i32>* %71, align 4, !alias.scope !128
  %73 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> %69, <4 x i32>* %73, align 4, !alias.scope !131, !noalias !128
  %74 = getelementptr inbounds i32, i32* %67, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %75, align 4, !alias.scope !131, !noalias !128
  %76 = or i64 %53, 16
  %77 = getelementptr i32, i32* %22, i64 %76
  %78 = getelementptr inbounds i32, i32* %27, i64 %76
  %79 = bitcast i32* %77 to <4 x i32>*
  %80 = load <4 x i32>, <4 x i32>* %79, align 4, !alias.scope !128
  %81 = getelementptr i32, i32* %77, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  %83 = load <4 x i32>, <4 x i32>* %82, align 4, !alias.scope !128
  %84 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %80, <4 x i32>* %84, align 4, !alias.scope !131, !noalias !128
  %85 = getelementptr inbounds i32, i32* %78, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %86, align 4, !alias.scope !131, !noalias !128
  %87 = or i64 %53, 24
  %88 = getelementptr i32, i32* %22, i64 %87
  %89 = getelementptr inbounds i32, i32* %27, i64 %87
  %90 = bitcast i32* %88 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4, !alias.scope !128
  %92 = getelementptr i32, i32* %88, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4, !alias.scope !128
  %95 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %95, align 4, !alias.scope !131, !noalias !128
  %96 = getelementptr inbounds i32, i32* %89, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %94, <4 x i32>* %97, align 4, !alias.scope !131, !noalias !128
  %98 = add i64 %53, 32
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !133

101:                                              ; preds = %52, %42
  %102 = phi i64 [ 0, %42 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr i32, i32* %22, i64 %105
  %108 = getelementptr inbounds i32, i32* %27, i64 %105
  %109 = bitcast i32* %107 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4, !alias.scope !128
  %111 = getelementptr i32, i32* %107, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4, !alias.scope !128
  %114 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> %110, <4 x i32>* %114, align 4, !alias.scope !131, !noalias !128
  %115 = getelementptr inbounds i32, i32* %108, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %113, <4 x i32>* %116, align 4, !alias.scope !131, !noalias !128
  %117 = add i64 %105, 8
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !134

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %24, %43
  br i1 %121, label %163, label %122

122:                                              ; preds = %120, %34, %32
  %123 = phi i32* [ %22, %34 ], [ %22, %32 ], [ %44, %120 ]
  %124 = phi i64 [ 0, %34 ], [ 0, %32 ], [ %43, %120 ]
  %125 = xor i64 %124, -1
  %126 = add nsw i64 %24, %125
  %127 = and i64 %24, 3
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %139, label %129

129:                                              ; preds = %122, %129
  %130 = phi i32* [ %135, %129 ], [ %123, %122 ]
  %131 = phi i64 [ %136, %129 ], [ %124, %122 ]
  %132 = phi i64 [ %137, %129 ], [ %127, %122 ]
  %133 = getelementptr inbounds i32, i32* %27, i64 %131
  %134 = load i32, i32* %130, align 4
  store i32 %134, i32* %133, align 4
  %135 = getelementptr inbounds i32, i32* %130, i64 1
  %136 = add nuw nsw i64 %131, 1
  %137 = add i64 %132, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %129, !llvm.loop !135

139:                                              ; preds = %129, %122
  %140 = phi i32* [ %123, %122 ], [ %135, %129 ]
  %141 = phi i64 [ %124, %122 ], [ %136, %129 ]
  %142 = icmp ult i64 %126, 3
  br i1 %142, label %163, label %143

143:                                              ; preds = %139, %143
  %144 = phi i32* [ %160, %143 ], [ %140, %139 ]
  %145 = phi i64 [ %161, %143 ], [ %141, %139 ]
  %146 = getelementptr inbounds i32, i32* %27, i64 %145
  %147 = load i32, i32* %144, align 4
  store i32 %147, i32* %146, align 4
  %148 = getelementptr inbounds i32, i32* %144, i64 1
  %149 = add nuw nsw i64 %145, 1
  %150 = getelementptr inbounds i32, i32* %27, i64 %149
  %151 = load i32, i32* %148, align 4
  store i32 %151, i32* %150, align 4
  %152 = getelementptr inbounds i32, i32* %144, i64 2
  %153 = add nuw nsw i64 %145, 2
  %154 = getelementptr inbounds i32, i32* %27, i64 %153
  %155 = load i32, i32* %152, align 4
  store i32 %155, i32* %154, align 4
  %156 = getelementptr inbounds i32, i32* %144, i64 3
  %157 = add nuw nsw i64 %145, 3
  %158 = getelementptr inbounds i32, i32* %27, i64 %157
  %159 = load i32, i32* %156, align 4
  store i32 %159, i32* %158, align 4
  %160 = getelementptr inbounds i32, i32* %144, i64 4
  %161 = add nuw nsw i64 %145, 4
  %162 = icmp eq i64 %161, %24
  br i1 %162, label %163, label %143, !llvm.loop !136

163:                                              ; preds = %139, %143, %120, %19
  br i1 %6, label %169, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.9", %"class.absl::inlined_vector_internal::Storage.9"* %0, i64 0, i32 1, i32 0, i32 0
  %166 = bitcast i32** %165 to i8**
  %167 = load i8*, i8** %166, align 8
  tail call void @_ZdlPv(i8* %167) #11
  %168 = load i64, i64* %3, align 8
  br label %169

169:                                              ; preds = %164, %163
  %170 = phi i64 [ %168, %164 ], [ %4, %163 ]
  %171 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.9", %"class.absl::inlined_vector_internal::Storage.9"* %0, i64 0, i32 1, i32 0, i32 0
  %172 = bitcast i32** %171 to i64*
  store i64 %28, i64* %172, align 8
  %173 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.9", %"class.absl::inlined_vector_internal::Storage.9"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %20, i64* %173, align 8
  %174 = or i64 %170, 1
  %175 = add i64 %174, 2
  store i64 %175, i64* %3, align 8
  ret i32* %29
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #10

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!5 = distinct !{!5, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!8 = distinct !{!8, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!11 = distinct !{!11, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!14 = distinct !{!14, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!17 = distinct !{!17, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!20 = distinct !{!20, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!23 = distinct !{!23, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!26 = distinct !{!26, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!29 = distinct !{!29, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!30 = !{i8 0, i8 2}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!33 = distinct !{!33, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!37 = !{!38, !40, !42}
!38 = distinct !{!38, !39, !"_ZNSt3__116__copy_constexprIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_: argument 0"}
!39 = distinct !{!39, !"_ZNSt3__116__copy_constexprIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_"}
!40 = distinct !{!40, !41, !"_ZNSt3__16__copyIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__16__copyIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_"}
!42 = distinct !{!42, !43, !"_ZNSt3__14copyIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__14copyIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!47 = !{!48, !50, !52}
!48 = distinct !{!48, !49, !"_ZNSt3__116__copy_constexprIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__116__copy_constexprIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_"}
!50 = distinct !{!50, !51, !"_ZNSt3__16__copyIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__16__copyIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_"}
!52 = distinct !{!52, !53, !"_ZNSt3__14copyIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__14copyIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!57 = !{!58, !60, !62}
!58 = distinct !{!58, !59, !"_ZNSt3__116__copy_constexprIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_: argument 0"}
!59 = distinct !{!59, !"_ZNSt3__116__copy_constexprIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_"}
!60 = distinct !{!60, !61, !"_ZNSt3__16__copyIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_: argument 0"}
!61 = distinct !{!61, !"_ZNSt3__16__copyIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_"}
!62 = distinct !{!62, !63, !"_ZNSt3__14copyIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_: argument 0"}
!63 = distinct !{!63, !"_ZNSt3__14copyIPKbNS_14__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEEEET0_T_SA_S9_"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15MakeStorageViewEv: argument 0"}
!66 = distinct !{!66, !"_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15MakeStorageViewEv"}
!67 = !{!68}
!68 = distinct !{!68, !69}
!69 = distinct !{!69, !"LVerDomain"}
!70 = !{!71}
!71 = distinct !{!71, !69}
!72 = distinct !{!72, !73}
!73 = !{!"llvm.loop.isvectorized", i32 1}
!74 = distinct !{!74, !75}
!75 = !{!"llvm.loop.unroll.disable"}
!76 = distinct !{!76, !75}
!77 = distinct !{!77, !73}
!78 = !{!79}
!79 = distinct !{!79, !80}
!80 = distinct !{!80, !"LVerDomain"}
!81 = !{!82}
!82 = distinct !{!82, !80}
!83 = distinct !{!83, !73}
!84 = distinct !{!84, !75}
!85 = distinct !{!85, !75}
!86 = distinct !{!86, !73}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!89 = distinct !{!89, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!90 = distinct !{!90, !75}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZN4absl23inlined_vector_internal7StorageIiLm10ENSt3__19allocatorIiEEE15MakeStorageViewEv: argument 0"}
!93 = distinct !{!93, !"_ZN4absl23inlined_vector_internal7StorageIiLm10ENSt3__19allocatorIiEEE15MakeStorageViewEv"}
!94 = !{!95}
!95 = distinct !{!95, !96}
!96 = distinct !{!96, !"LVerDomain"}
!97 = !{!98}
!98 = distinct !{!98, !96}
!99 = distinct !{!99, !73}
!100 = distinct !{!100, !75}
!101 = distinct !{!101, !75}
!102 = distinct !{!102, !73}
!103 = !{!104}
!104 = distinct !{!104, !105}
!105 = distinct !{!105, !"LVerDomain"}
!106 = !{!107}
!107 = distinct !{!107, !105}
!108 = distinct !{!108, !73}
!109 = distinct !{!109, !75}
!110 = distinct !{!110, !75}
!111 = distinct !{!111, !73}
!112 = !{!113}
!113 = distinct !{!113, !114, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!114 = distinct !{!114, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16CodecBufferUsageELm8ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!115 = distinct !{!115, !75}
!116 = !{!117}
!117 = distinct !{!117, !118}
!118 = distinct !{!118, !"LVerDomain"}
!119 = !{!120}
!120 = distinct !{!120, !118}
!121 = distinct !{!121, !73}
!122 = distinct !{!122, !75}
!123 = distinct !{!123, !75}
!124 = distinct !{!124, !73}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!127 = distinct !{!127, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!128 = !{!129}
!129 = distinct !{!129, !130}
!130 = distinct !{!130, !"LVerDomain"}
!131 = !{!132}
!132 = distinct !{!132, !130}
!133 = distinct !{!133, !73}
!134 = distinct !{!134, !75}
!135 = distinct !{!135, !75}
!136 = distinct !{!136, !73}
