; ModuleID = 'gen/third_party/blink/public/mojom/quota/quota_types.mojom-blink.cc'
source_filename = "gen/third_party/blink/public/mojom/quota/quota_types.mojom-blink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::UsageBreakdown" = type { i64, i64, i64, i64, i64, i64, i64 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.12", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.6"*, %"class.mojo::ScopedHandleBase.6"*, %"class.std::__1::__compressed_pair.7" }
%"class.mojo::ScopedHandleBase.6" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.mojo::ScopedHandleBase.6"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.14" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.23, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.25", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.22", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.23 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.24" }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i32 }
%"class.blink::mojom::internal::UsageBreakdown_Data" = type { %"struct.mojo::internal::StructHeader", i64, i64, i64, i64, i64, i64, i64 }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::mojom::blink::UsageBreakdown"* }

@.str = private unnamed_addr constant [11 x i8] c"fileSystem\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"webSql\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"appcache\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"indexedDatabase\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"serviceWorkerCache\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"serviceWorker\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"backgroundFetch\00", align 1

@_ZN5blink5mojom5blink14UsageBreakdownC1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::UsageBreakdown"*), void (%"class.blink::mojom::blink::UsageBreakdown"*)* @_ZN5blink5mojom5blink14UsageBreakdownC2Ev
@_ZN5blink5mojom5blink14UsageBreakdownC1Elllllll = hidden unnamed_addr alias void (%"class.blink::mojom::blink::UsageBreakdown"*, i64, i64, i64, i64, i64, i64, i64), void (%"class.blink::mojom::blink::UsageBreakdown"*, i64, i64, i64, i64, i64, i64, i64)* @_ZN5blink5mojom5blink14UsageBreakdownC2Elllllll
@_ZN5blink5mojom5blink14UsageBreakdownD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::UsageBreakdown"*), void (%"class.blink::mojom::blink::UsageBreakdown"*)* @_ZN5blink5mojom5blink14UsageBreakdownD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink14UsageBreakdownC2Ev(%"class.blink::mojom::blink::UsageBreakdown"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::UsageBreakdown"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink14UsageBreakdownC2Elllllll(%"class.blink::mojom::blink::UsageBreakdown"* nocapture, i64, i64, i64, i64, i64, i64, i64) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 0
  store i64 %1, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 1
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 2
  store i64 %3, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 3
  store i64 %4, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 4
  store i64 %5, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 5
  store i64 %6, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 6
  store i64 %7, i64* %15, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink14UsageBreakdownD2Ev(%"class.blink::mojom::blink::UsageBreakdown"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink5mojom5blink14UsageBreakdown4HashEm(%"class.blink::mojom::blink::UsageBreakdown"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %1, 6
  %6 = lshr i64 %1, 2
  %7 = add i64 %6, %5
  %8 = add i64 %7, %4
  %9 = xor i64 %8, %1
  %10 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = shl i64 %9, 6
  %13 = lshr i64 %9, 2
  %14 = add i64 %12, %11
  %15 = add i64 %14, %13
  %16 = xor i64 %15, %9
  %17 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = shl i64 %16, 6
  %20 = lshr i64 %16, 2
  %21 = add i64 %19, %18
  %22 = add i64 %21, %20
  %23 = xor i64 %22, %16
  %24 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = shl i64 %23, 6
  %27 = lshr i64 %23, 2
  %28 = add i64 %26, %25
  %29 = add i64 %28, %27
  %30 = xor i64 %29, %23
  %31 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 4
  %32 = load i64, i64* %31, align 8
  %33 = shl i64 %30, 6
  %34 = lshr i64 %30, 2
  %35 = add i64 %33, %32
  %36 = add i64 %35, %34
  %37 = xor i64 %36, %30
  %38 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 5
  %39 = load i64, i64* %38, align 8
  %40 = shl i64 %37, 6
  %41 = lshr i64 %37, 2
  %42 = add i64 %40, %39
  %43 = add i64 %42, %41
  %44 = xor i64 %43, %37
  %45 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 6
  %46 = load i64, i64* %45, align 8
  %47 = shl i64 %44, 6
  %48 = lshr i64 %44, 2
  %49 = add i64 %47, %46
  %50 = add i64 %49, %48
  %51 = xor i64 %50, %44
  ret i64 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5mojom5blink14UsageBreakdown14WriteIntoTraceEN8perfetto11TracedValueE(%"class.blink::mojom::blink::UsageBreakdown"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.perfetto::TracedDictionary", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.perfetto::TracedValue", align 8
  %15 = alloca %"class.perfetto::TracedValue", align 8
  %16 = alloca %"class.perfetto::TracedValue", align 8
  %17 = alloca %"class.perfetto::TracedValue", align 8
  %18 = bitcast %"class.perfetto::TracedDictionary"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8
  %19 = bitcast %"class.perfetto::TracedDictionary"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %10, %"class.perfetto::TracedValue"* %1) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %11, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0)) #8
  %20 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 0
  %21 = bitcast %"class.perfetto::TracedValue"* %11 to i8*
  %22 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %21, i64 16, i1 false) #8
  %23 = load i64, i64* %20, align 8
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %8, i64 %23) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %12, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #8
  %24 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 1
  %25 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  %26 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %25, i64 16, i1 false) #8
  %27 = load i64, i64* %24, align 8
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %7, i64 %27) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)) #8
  %28 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 2
  %29 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  %30 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %29, i64 16, i1 false) #8
  %31 = load i64, i64* %28, align 8
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %6, i64 %31) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %14, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #8
  %32 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 3
  %33 = bitcast %"class.perfetto::TracedValue"* %14 to i8*
  %34 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %33, i64 16, i1 false) #8
  %35 = load i64, i64* %32, align 8
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %5, i64 %35) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %15, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #8
  %36 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 4
  %37 = bitcast %"class.perfetto::TracedValue"* %15 to i8*
  %38 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %37, i64 16, i1 false) #8
  %39 = load i64, i64* %36, align 8
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %4, i64 %39) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %16, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #8
  %40 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 5
  %41 = bitcast %"class.perfetto::TracedValue"* %16 to i8*
  %42 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* nonnull align 8 %41, i64 16, i1 false) #8
  %43 = load i64, i64* %40, align 8
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %3, i64 %43) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %17, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0)) #8
  %44 = getelementptr inbounds %"class.blink::mojom::blink::UsageBreakdown", %"class.blink::mojom::blink::UsageBreakdown"* %0, i64 0, i32 6
  %45 = bitcast %"class.perfetto::TracedValue"* %17 to i8*
  %46 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* nonnull align 8 %45, i64 16, i1 false) #8
  %47 = load i64, i64* %44, align 8
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %9, i64 %47) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #5

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink5mojom5blink14UsageBreakdown8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #3 align 2 {
  %3 = tail call zeroext i1 @_ZN5blink5mojom8internal19UsageBreakdown_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #8
  ret i1 %3
}

declare zeroext i1 @_ZN5blink5mojom8internal19UsageBreakdown_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom22UsageBreakdownDataViewENS_9StructPtrINS2_5blink14UsageBreakdownEEEE4ReadES3_PS7_(%"class.blink::mojom::internal::UsageBreakdown_Data"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #3 align 2 {
  %3 = tail call i8* @_Znwm(i64 56) #9, !noalias !2
  %4 = ptrtoint i8* %3 to i64
  %5 = getelementptr inbounds %"class.blink::mojom::internal::UsageBreakdown_Data", %"class.blink::mojom::internal::UsageBreakdown_Data"* %0, i64 0, i32 1
  %6 = bitcast i64* %5 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 1
  %8 = bitcast i8* %3 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %8, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::internal::UsageBreakdown_Data", %"class.blink::mojom::internal::UsageBreakdown_Data"* %0, i64 0, i32 3
  %10 = getelementptr inbounds i8, i8* %3, i64 16
  %11 = bitcast i64* %9 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 1
  %13 = bitcast i8* %10 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %13, align 8
  %14 = getelementptr inbounds %"class.blink::mojom::internal::UsageBreakdown_Data", %"class.blink::mojom::internal::UsageBreakdown_Data"* %0, i64 0, i32 5
  %15 = getelementptr inbounds i8, i8* %3, i64 32
  %16 = bitcast i64* %14 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 1
  %18 = bitcast i8* %15 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %18, align 8
  %19 = getelementptr inbounds %"class.blink::mojom::internal::UsageBreakdown_Data", %"class.blink::mojom::internal::UsageBreakdown_Data"* %0, i64 0, i32 7
  %20 = load i64, i64* %19, align 1
  %21 = getelementptr inbounds i8, i8* %3, i64 48
  %22 = bitcast i8* %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::mojom::blink::UsageBreakdown"*, %"class.blink::mojom::blink::UsageBreakdown"** %23, align 8
  store %"class.blink::mojom::blink::UsageBreakdown"* null, %"class.blink::mojom::blink::UsageBreakdown"** %23, align 8
  %25 = icmp eq %"class.blink::mojom::blink::UsageBreakdown"* %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %2
  %27 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  store i64 %4, i64* %27, align 8
  br label %35

28:                                               ; preds = %2
  %29 = bitcast %"class.blink::mojom::blink::UsageBreakdown"* %24 to i8*
  tail call void @_ZdlPv(i8* %29) #9
  %30 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %31 = load %"class.blink::mojom::blink::UsageBreakdown"*, %"class.blink::mojom::blink::UsageBreakdown"** %23, align 8
  store i64 %4, i64* %30, align 8
  %32 = icmp eq %"class.blink::mojom::blink::UsageBreakdown"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.blink::mojom::blink::UsageBreakdown"* %31 to i8*
  tail call void @_ZdlPv(i8* %34) #9
  br label %35

35:                                               ; preds = %26, %28, %33
  ret i1 true
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink5mojom5blink14UsageBreakdown3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink5mojom5blink14UsageBreakdown3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
