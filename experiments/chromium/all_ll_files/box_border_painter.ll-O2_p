; ModuleID = '../../third_party/blink/renderer/core/paint/box_border_painter.cc'
source_filename = "../../third_party/blink/renderer/core/paint/box_border_painter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::PaintFlags" = type <{ %class.sk_sp.1712, %class.sk_sp.1713, %class.sk_sp.1751, %class.sk_sp.1752, %class.sk_sp.1753, %class.sk_sp.817, i32, float, float, i32, %union.anon.1754, [4 x i8] }>
%class.sk_sp.1712 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.sk_sp.1713 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.1714", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.1722, i32, %"class.absl::optional.1738", %"class.std::__1::vector.842", %"class.std::__1::vector.1743", %class.sk_sp.1750, %class.sk_sp.1719, i32, [4 x i8] }>
%"class.absl::optional.1714" = type { %"class.absl::optional_internal::optional_data.1715" }
%"class.absl::optional_internal::optional_data.1715" = type { %"class.absl::optional_internal::optional_data_base.1716" }
%"class.absl::optional_internal::optional_data_base.1716" = type { %"class.absl::optional_internal::optional_data_dtor_base.1717" }
%"class.absl::optional_internal::optional_data_dtor_base.1717" = type { i8, %union.anon.1718 }
%union.anon.1718 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.1719, %class.sk_sp.1722, %"class.gfx::Rect", i32, %class.sk_sp.1727, %class.sk_sp.1735, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.1719, %class.scoped_refptr.1736 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.1727 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.1728" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1720, i32, i32 }
%class.sk_sp.1720 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.1721, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.1721 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.1728" = type { %"class.std::__1::__vector_base.1729" }
%"class.std::__1::__vector_base.1729" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.1730" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.1730" = type { %"struct.std::__1::__compressed_pair_elem.1731" }
%"struct.std::__1::__compressed_pair_elem.1731" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.1735 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.1736 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1737", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1737" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%class.sk_sp.1722 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.1723", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1723" = type { %"class.std::__1::__compressed_pair.1724" }
%"class.std::__1::__compressed_pair.1724" = type { %"struct.std::__1::__compressed_pair_elem.1725" }
%"struct.std::__1::__compressed_pair_elem.1725" = type { i8* }
%"class.absl::optional.1738" = type { %"class.absl::optional_internal::optional_data.1739" }
%"class.absl::optional_internal::optional_data.1739" = type { %"class.absl::optional_internal::optional_data_base.1740" }
%"class.absl::optional_internal::optional_data_base.1740" = type { %"class.absl::optional_internal::optional_data_dtor_base.1741" }
%"class.absl::optional_internal::optional_data_dtor_base.1741" = type { i8, %union.anon.1742 }
%union.anon.1742 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%"class.std::__1::vector.1743" = type { %"class.std::__1::__vector_base.1744" }
%"class.std::__1::__vector_base.1744" = type { float*, float*, %"class.std::__1::__compressed_pair.1745" }
%"class.std::__1::__compressed_pair.1745" = type { %"struct.std::__1::__compressed_pair_elem.1746" }
%"struct.std::__1::__compressed_pair_elem.1746" = type { float* }
%class.sk_sp.1750 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.238", [7 x i8] }>
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%class.sk_sp.1719 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.1751 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1752 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1753 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%union.anon.1754 = type { i32 }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.blink::BoxBorderPainter" = type <{ %"class.blink::ComputedStyle"*, i32, %"struct.blink::PhysicalBoxSides", %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect", [4 x %"struct.blink::BorderEdge"], i32, i32, i32, i8, i8, i8, i8, i8, [7 x i8] }>
%"struct.blink::PhysicalBoxSides" = type { i8, i8, i8, i8 }
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"struct.blink::BorderEdge" = type { %"class.blink::Color", i8, i8, float }
%"class.blink::Color" = type { i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1863 }
%class.scoped_refptr.1863 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1864", %"class.WTF::Vector.630", %"class.WTF::Vector.1866", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1864" = type { %"class.base::RefCounted.1865" }
%"class.base::RefCounted.1865" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1866" = type { %"class.WTF::VectorBuffer.1867" }
%"class.WTF::VectorBuffer.1867" = type { %"class.WTF::VectorBufferBase.1868" }
%"class.WTF::VectorBufferBase.1868" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1869 }
%union.anon.1869 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1849" }
%"class.blink::Member.1849" = type { %"class.blink::MemberBase.1850" }
%"class.blink::MemberBase.1850" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1851" }
%"class.blink::Member.1851" = type { %"class.blink::MemberBase.1852" }
%"class.blink::MemberBase.1852" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1877 }
%class.scoped_refptr.1877 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1887" }
%"class.blink::Member.1887" = type { %"class.blink::MemberBase.1888" }
%"class.blink::MemberBase.1888" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1883" }
%"class.blink::MemberBase.1883" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1884" }
%"class.blink::MemberBase.1884" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1885" }
%"class.blink::MemberBase.1885" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1886" }
%"class.blink::MemberBase.1886" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1878", %"class.WTF::Vector.1878" }
%"class.WTF::Vector.1878" = type { %"class.WTF::VectorBuffer.1879" }
%"class.WTF::VectorBuffer.1879" = type { %"class.WTF::VectorBufferBase.1880" }
%"class.WTF::VectorBufferBase.1880" = type { %class.scoped_refptr.1877*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1853" }
%"class.WTF::Vector.1853" = type { %"class.WTF::VectorBuffer.1854" }
%"class.WTF::VectorBuffer.1854" = type { %"class.WTF::VectorBufferBase.1855" }
%"class.WTF::VectorBufferBase.1855" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1858", %"class.absl::optional.1858", %"class.absl::optional.1858" }
%"class.absl::optional.1858" = type { %"class.absl::optional_internal::optional_data.1859" }
%"class.absl::optional_internal::optional_data.1859" = type { %"class.absl::optional_internal::optional_data_base.1860" }
%"class.absl::optional_internal::optional_data_base.1860" = type { %"class.absl::optional_internal::optional_data_dtor_base.1861" }
%"class.absl::optional_internal::optional_data_dtor_base.1861" = type { i8, %union.anon.1862 }
%union.anon.1862 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1873" }
%"class.WTF::VectorBuffer.1873" = type { %"class.WTF::VectorBufferBase.1874", [32 x i8] }
%"class.WTF::VectorBufferBase.1874" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.1706", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.1786", i8, i8, i8, i32 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1631, %class.scoped_refptr.1631, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1686", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1691", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1631 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1632", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1639" }
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1634", i32, [4 x i8] }>
%"class.WTF::Vector.1634" = type { %"class.WTF::VectorBuffer.1635" }
%"class.WTF::VectorBuffer.1635" = type { %"class.WTF::VectorBufferBase.1636" }
%"class.WTF::VectorBufferBase.1636" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1639" = type { %"class.WTF::VectorBuffer.1640" }
%"class.WTF::VectorBuffer.1640" = type { %"class.WTF::VectorBufferBase.1641" }
%"class.WTF::VectorBufferBase.1641" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1642", %"class.std::__1::unique_ptr.1658", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1642" = type { %"class.std::__1::__compressed_pair.1643" }
%"class.std::__1::__compressed_pair.1643" = type { %"struct.std::__1::__compressed_pair_elem.1644" }
%"struct.std::__1::__compressed_pair_elem.1644" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1645", %"class.WTF::Vector.1650", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1645" = type { %"class.WTF::VectorBuffer.1646" }
%"class.WTF::VectorBuffer.1646" = type { %"class.WTF::VectorBufferBase.1647" }
%"class.WTF::VectorBufferBase.1647" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1650" = type { %"class.WTF::VectorBuffer.1651" }
%"class.WTF::VectorBuffer.1651" = type { %"class.WTF::VectorBufferBase.1652" }
%"class.WTF::VectorBufferBase.1652" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1658" = type { %"class.std::__1::__compressed_pair.1659" }
%"class.std::__1::__compressed_pair.1659" = type { %"struct.std::__1::__compressed_pair_elem.1660" }
%"struct.std::__1::__compressed_pair_elem.1660" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1661", %"class.absl::optional.1661" }
%"class.absl::optional.1661" = type { %"class.absl::optional_internal::optional_data.1662" }
%"class.absl::optional_internal::optional_data.1662" = type { %"class.absl::optional_internal::optional_data_base.1663" }
%"class.absl::optional_internal::optional_data_base.1663" = type { %"class.absl::optional_internal::optional_data_dtor_base.1664" }
%"class.absl::optional_internal::optional_data_dtor_base.1664" = type { i8, [3 x i8], %union.anon.1665 }
%union.anon.1665 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1639"*, %"class.absl::optional.1671", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1671" = type { %"class.absl::optional_internal::optional_data.1672" }
%"class.absl::optional_internal::optional_data.1672" = type { %"class.absl::optional_internal::optional_data_base.1673" }
%"class.absl::optional_internal::optional_data_base.1673" = type { %"class.absl::optional_internal::optional_data_dtor_base.1674" }
%"class.absl::optional_internal::optional_data_dtor_base.1674" = type { i8, %union.anon.1675 }
%union.anon.1675 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1676", %"class.WTF::Vector.1681" }
%"class.WTF::Vector.1676" = type { %"class.WTF::VectorBuffer.1677" }
%"class.WTF::VectorBuffer.1677" = type { %"class.WTF::VectorBufferBase.1678", [128 x i8] }
%"class.WTF::VectorBufferBase.1678" = type { i32*, i32, i32 }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683", [128 x i8] }
%"class.WTF::VectorBufferBase.1683" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1686" = type { %"class.WTF::VectorBuffer.1687" }
%"class.WTF::VectorBuffer.1687" = type { %"class.WTF::VectorBufferBase.1688" }
%"class.WTF::VectorBufferBase.1688" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1691" = type { %"class.WTF::HashTable.1692" }
%"class.WTF::HashTable.1692" = type <{ %"struct.WTF::KeyValuePair.1695"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1695" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1696", %"class.WTF::Vector.1701" }
%"class.WTF::HashMap.1696" = type { %"class.WTF::HashTable.1697" }
%"class.WTF::HashTable.1697" = type <{ %"struct.WTF::KeyValuePair.1700"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1700" = type opaque
%"class.WTF::Vector.1701" = type { %"class.WTF::VectorBuffer.1702" }
%"class.WTF::VectorBuffer.1702" = type { %"class.WTF::VectorBufferBase.1703" }
%"class.WTF::VectorBufferBase.1703" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.WTF::Vector.1706" = type { %"class.WTF::VectorBuffer.1707" }
%"class.WTF::VectorBuffer.1707" = type { %"class.WTF::VectorBufferBase.1708" }
%"class.WTF::VectorBufferBase.1708" = type { %"class.std::__1::unique_ptr.1709"*, i32, i32 }
%"class.std::__1::unique_ptr.1709" = type { %"class.std::__1::__compressed_pair.1710" }
%"class.std::__1::__compressed_pair.1710" = type { %"struct.std::__1::__compressed_pair_elem.1711" }
%"struct.std::__1::__compressed_pair_elem.1711" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.1712 }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.1760, %"class.std::__1::unique_ptr.1761" }
%class.scoped_refptr.1760 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.1761" = type { %"class.std::__1::__compressed_pair.1762" }
%"class.std::__1::__compressed_pair.1762" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__compressed_pair_elem.1763" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.1764", %struct.SkRect }
%"class.absl::optional.1764" = type { %"class.absl::optional_internal::optional_data.1765" }
%"class.absl::optional_internal::optional_data.1765" = type { %"class.absl::optional_internal::optional_data_base.1766" }
%"class.absl::optional_internal::optional_data_base.1766" = type { %"class.absl::optional_internal::optional_data_dtor_base.1767" }
%"class.absl::optional_internal::optional_data_dtor_base.1767" = type { i8, %union.anon.1768 }
%union.anon.1768 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.1769, [384 x i64], %class.sk_sp.1770, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.1771", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.1777" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.1769 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.1770 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.1771" = type { %"class.std::__1::__compressed_pair.1772" }
%"class.std::__1::__compressed_pair.1772" = type { %"struct.std::__1::__compressed_pair_elem.1773" }
%"struct.std::__1::__compressed_pair_elem.1773" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.1777" = type { %"class.std::__1::__compressed_pair.1778" }
%"class.std::__1::__compressed_pair.1778" = type { %"struct.std::__1::__compressed_pair_elem.1779" }
%"struct.std::__1::__compressed_pair_elem.1779" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.1786" = type { %"class.std::__1::__compressed_pair.1787" }
%"class.std::__1::__compressed_pair.1787" = type { %"struct.std::__1::__compressed_pair_elem.1788" }
%"struct.std::__1::__compressed_pair_elem.1788" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.1807", %"class.std::__1::unique_ptr.1812" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.1789", %"class.std::__1::unique_ptr.1789", %"class.std::__1::unique_ptr.1795", %"class.std::__1::unique_ptr.1801", %class.sk_sp.1752 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1789" = type { %"class.std::__1::__compressed_pair.1790" }
%"class.std::__1::__compressed_pair.1790" = type { %"struct.std::__1::__compressed_pair_elem.1791" }
%"struct.std::__1::__compressed_pair_elem.1791" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.1795" = type { %"class.std::__1::__compressed_pair.1796" }
%"class.std::__1::__compressed_pair.1796" = type { %"struct.std::__1::__compressed_pair_elem.1797" }
%"struct.std::__1::__compressed_pair_elem.1797" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.1801" = type { %"class.std::__1::__compressed_pair.1802" }
%"class.std::__1::__compressed_pair.1802" = type { %"struct.std::__1::__compressed_pair_elem.1803" }
%"struct.std::__1::__compressed_pair_elem.1803" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.1807" = type { %"class.absl::optional_internal::optional_data.1808" }
%"class.absl::optional_internal::optional_data.1808" = type { %"class.absl::optional_internal::optional_data_base.1809" }
%"class.absl::optional_internal::optional_data_base.1809" = type { %"class.absl::optional_internal::optional_data_dtor_base.1810" }
%"class.absl::optional_internal::optional_data_dtor_base.1810" = type { i8, %union.anon.1811 }
%union.anon.1811 = type { i32 }
%"class.std::__1::unique_ptr.1812" = type { %"class.std::__1::__compressed_pair.1813" }
%"class.std::__1::__compressed_pair.1813" = type { %"struct.std::__1::__compressed_pair_elem.1814" }
%"struct.std::__1::__compressed_pair_elem.1814" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"struct.blink::PaintInfo" = type <{ %"class.blink::GraphicsContext"*, i32, %"class.blink::CullRect", [4 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"struct.blink::BoxBorderPainter::ComplexBorderInfo" = type <{ %"class.WTF::Vector.1821", %"class.blink::Path", i8, [7 x i8] }>
%"class.WTF::Vector.1821" = type { %"class.WTF::VectorBuffer.1822" }
%"class.WTF::VectorBuffer.1822" = type { %"class.WTF::VectorBufferBase.1823", [160 x i8] }
%"class.WTF::VectorBufferBase.1823" = type { %"struct.blink::(anonymous namespace)::OpacityGroup"*, i32, i32 }
%"struct.blink::(anonymous namespace)::OpacityGroup" = type { %"class.WTF::Vector.1824", i32, i32 }
%"class.WTF::Vector.1824" = type { %"class.WTF::VectorBuffer.1825" }
%"class.WTF::VectorBuffer.1825" = type { %"class.WTF::VectorBufferBase.1826", [16 x i8] }
%"class.WTF::VectorBufferBase.1826" = type { i32*, i32, i32 }
%class.anon = type { %"class.blink::BoxBorderPainter"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.41", [4 x i8] }>
%class.SkPathBuilder = type { %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, i8, i32, %struct.SkPoint, i8, i32, i32, i8, i32 }

$_ZN5blink16BoxBorderPainter17ComplexBorderInfoC2ERKS0_b = comdat any

$_ZNK5blink16FloatRoundedRectcv7SkRRectEv = comdat any

$_ZN5blink15GraphicsContext16RealizePaintSaveEv = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink20GraphicsContextStateENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink16BoxBorderPainter17ComplexBorderInfo18BuildOpacityGroupsERKS0_RKN3WTF6VectorINS_7BoxSideELj4ENS4_18PartitionAllocatorEEE = comdat any

$_ZN3WTF6VectorIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7BoxSideEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZNSt3__16__sortIRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEvT0_SA_T_ = comdat any

$_ZNSt3__17__sort3IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_T_ = comdat any

$_ZNSt3__17__sort4IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_SA_T_ = comdat any

$_ZNSt3__17__sort5IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_SA_SA_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEvT0_SA_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEbT0_SA_T_ = comdat any

$_ZN3WTF12VectorBufferIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_ = comdat any

@__const._ZN5blink12_GLOBAL__N_123DrawBleedAdjustedDRRectERNS_15GraphicsContextENS_24BackgroundBleedAvoidanceERKNS_16FloatRoundedRectES6_NS_5ColorE.flags = private unnamed_addr constant %"class.cc::PaintFlags" <{ %class.sk_sp.1712 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.1713 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.1751 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.1752 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.1753 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp.817 { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.1754 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [153 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::GraphicsContextState, std::__1::default_delete<blink::GraphicsContextState> >]\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7BoxSideEEEPKcv = private unnamed_addr constant [62 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::BoxSide]\00", align 1
@_ZN5blink12_GLOBAL__N_114kStylePriorityE = internal unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 2, i32 2, i32 2, i32 2, i32 1, i32 1, i32 3, i32 1], align 16
@_ZN5blink12_GLOBAL__N_113kSidePriorityE = internal unnamed_addr constant [4 x i32] [i32 0, i32 2, i32 1, i32 3], align 16
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_112OpacityGroupEEEPKcv = private unnamed_addr constant [90 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::(anonymous namespace)::OpacityGroup]\00", align 1
@__const._ZN5blink12_GLOBAL__N_18ClipQuadERNS_15GraphicsContextEPKNS_10FloatPointEb.path = private unnamed_addr constant { %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, i8, [3 x i8], i32, %struct.SkPoint, i8, [3 x i8], i32, i32, i8, [3 x i8], i32 } { %class.SkTDArray { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), i32 -1431655766, i32 -1431655766 }, %class.SkTDArray.670 { i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %class.SkTDArray.671 { float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, align 8

@_ZN5blink16BoxBorderPainterC1ERKNS_12PhysicalRectERKNS_13ComputedStyleENS_24BackgroundBleedAvoidanceENS_16PhysicalBoxSidesE = hidden unnamed_addr alias void (%"class.blink::BoxBorderPainter"*, %"struct.blink::PhysicalRect"*, %"class.blink::ComputedStyle"*, i32, i32), void (%"class.blink::BoxBorderPainter"*, %"struct.blink::PhysicalRect"*, %"class.blink::ComputedStyle"*, i32, i32)* @_ZN5blink16BoxBorderPainterC2ERKNS_12PhysicalRectERKNS_13ComputedStyleENS_24BackgroundBleedAvoidanceENS_16PhysicalBoxSidesE
@_ZN5blink16BoxBorderPainterC1ERKNS_13ComputedStyleERKNS_12PhysicalRectES6_RKNS_10BorderEdgeE = hidden unnamed_addr alias void (%"class.blink::BoxBorderPainter"*, %"class.blink::ComputedStyle"*, %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"*, %"struct.blink::BorderEdge"*), void (%"class.blink::BoxBorderPainter"*, %"class.blink::ComputedStyle"*, %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"*, %"struct.blink::BorderEdge"*)* @_ZN5blink16BoxBorderPainterC2ERKNS_13ComputedStyleERKNS_12PhysicalRectES6_RKNS_10BorderEdgeE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16BoxBorderPainter16DrawDoubleBorderERNS_15GraphicsContextERKNS_12PhysicalRectE(%"class.blink::BoxBorderPainter"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Color", align 4
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.blink::LayoutRectOutsets"*
  %7 = alloca %"class.blink::FloatRoundedRect", align 4
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"class.blink::LayoutRectOutsets"*
  %10 = alloca %"class.blink::FloatRoundedRect", align 4
  %11 = bitcast %"class.blink::Color"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %4, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 7
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %12, align 4
  %18 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3
  %19 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %20 = load float, float* %19, align 4
  %21 = fcmp ogt float %20, 0xBE80000000000000
  %22 = fcmp olt float %20, 0x3E80000000000000
  %23 = and i1 %21, %22
  br i1 %23, label %24, label %114

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fcmp ogt float %26, 0xBE80000000000000
  %28 = fcmp olt float %26, 0x3E80000000000000
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %114

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 1, i32 0
  %32 = load float, float* %31, align 4
  %33 = fcmp ogt float %32, 0xBE80000000000000
  %34 = fcmp olt float %32, 0x3E80000000000000
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %114

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 1, i32 1
  %38 = load float, float* %37, align 4
  %39 = fcmp ogt float %38, 0xBE80000000000000
  %40 = fcmp olt float %38, 0x3E80000000000000
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %114

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 2, i32 0
  %44 = load float, float* %43, align 4
  %45 = fcmp ogt float %44, 0xBE80000000000000
  %46 = fcmp olt float %44, 0x3E80000000000000
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %114

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 2, i32 1
  %50 = load float, float* %49, align 4
  %51 = fcmp ogt float %50, 0xBE80000000000000
  %52 = fcmp olt float %50, 0x3E80000000000000
  %53 = and i1 %51, %52
  br i1 %53, label %54, label %114

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 3, i32 0
  %56 = load float, float* %55, align 4
  %57 = fcmp ogt float %56, 0xBE80000000000000
  %58 = fcmp olt float %56, 0x3E80000000000000
  %59 = and i1 %57, %58
  br i1 %59, label %60, label %114

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 3, i32 1
  %62 = load float, float* %61, align 4
  %63 = fcmp ule float %62, 0xBE80000000000000
  %64 = fcmp uge float %62, 0x3E80000000000000
  %65 = or i1 %63, %64
  br i1 %65, label %114, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fcmp ogt float %68, 0xBE80000000000000
  %70 = fcmp olt float %68, 0x3E80000000000000
  %71 = and i1 %69, %70
  br i1 %71, label %72, label %114

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %74 = load float, float* %73, align 4
  %75 = fcmp ogt float %74, 0xBE80000000000000
  %76 = fcmp olt float %74, 0x3E80000000000000
  %77 = and i1 %75, %76
  br i1 %77, label %78, label %114

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 1, i32 0
  %80 = load float, float* %79, align 4
  %81 = fcmp ogt float %80, 0xBE80000000000000
  %82 = fcmp olt float %80, 0x3E80000000000000
  %83 = and i1 %81, %82
  br i1 %83, label %84, label %114

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 1, i32 1
  %86 = load float, float* %85, align 4
  %87 = fcmp ogt float %86, 0xBE80000000000000
  %88 = fcmp olt float %86, 0x3E80000000000000
  %89 = and i1 %87, %88
  br i1 %89, label %90, label %114

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 2, i32 0
  %92 = load float, float* %91, align 4
  %93 = fcmp ogt float %92, 0xBE80000000000000
  %94 = fcmp olt float %92, 0x3E80000000000000
  %95 = and i1 %93, %94
  br i1 %95, label %96, label %114

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 2, i32 1
  %98 = load float, float* %97, align 4
  %99 = fcmp ogt float %98, 0xBE80000000000000
  %100 = fcmp olt float %98, 0x3E80000000000000
  %101 = and i1 %99, %100
  br i1 %101, label %102, label %114

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 3, i32 0
  %104 = load float, float* %103, align 4
  %105 = fcmp ogt float %104, 0xBE80000000000000
  %106 = fcmp olt float %104, 0x3E80000000000000
  %107 = and i1 %105, %106
  br i1 %107, label %108, label %114

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 3, i32 1
  %110 = load float, float* %109, align 4
  %111 = fcmp ogt float %110, 0xBE80000000000000
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  %113 = fcmp olt float %110, 0x3E80000000000000
  br label %114

114:                                              ; preds = %112, %108, %102, %96, %90, %84, %78, %72, %66, %60, %42, %48, %30, %36, %3, %24, %54
  %115 = phi i1 [ false, %60 ], [ false, %54 ], [ false, %24 ], [ false, %3 ], [ false, %36 ], [ false, %30 ], [ false, %48 ], [ false, %42 ], [ false, %108 ], [ false, %102 ], [ %113, %112 ], [ false, %72 ], [ false, %66 ], [ false, %84 ], [ false, %78 ], [ false, %96 ], [ false, %90 ]
  %116 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #10
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %118 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 0
  %119 = tail call fastcc { i64, i64 } @_ZN5blink12_GLOBAL__N_118DoubleStripeInsetsEPKNS_10BorderEdgeENS1_18DoubleBorderStripeE(%"struct.blink::BorderEdge"* %118, i32 0)
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %121 = extractvalue { i64, i64 } %119, 0
  store i64 %121, i64* %120, align 8
  %122 = extractvalue { i64, i64 } %119, 1
  store i64 %122, i64* %117, align 8
  %123 = bitcast %"class.blink::FloatRoundedRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %123) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %123, i8 -1, i64 48, i1 false)
  %124 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 0
  %125 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 2
  %127 = bitcast %"struct.blink::PhysicalBoxSides"* %126 to i32*
  %128 = load i32, i32* %127, align 4
  call void @_ZN5blink21RoundedBorderGeometry30PixelSnappedRoundedInnerBorderERKNS_13ComputedStyleERKNS_12PhysicalRectERKNS_17LayoutRectOutsetsENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* nonnull sret %7, %"class.blink::ComputedStyle"* dereferenceable(104) %125, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %6, i32 %128) #10
  br i1 %115, label %129, label %132

129:                                              ; preds = %114
  %130 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %7, i64 0, i32 1
  %131 = bitcast %"class.blink::FloatRoundedRect::Radii"* %130 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %131, i8 0, i64 32, i1 false)
  br label %132

132:                                              ; preds = %129, %114
  %133 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 1
  %134 = load i32, i32* %133, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_123DrawBleedAdjustedDRRectERNS_15GraphicsContextENS_24BackgroundBleedAvoidanceERKNS_16FloatRoundedRectES6_NS_5ColorE(%"class.blink::GraphicsContext"* dereferenceable(112) %1, i32 %134, %"class.blink::FloatRoundedRect"* dereferenceable(48) %18, %"class.blink::FloatRoundedRect"* nonnull dereferenceable(48) %7, i32 %17)
  %135 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %135) #10
  %136 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %137 = call fastcc { i64, i64 } @_ZN5blink12_GLOBAL__N_118DoubleStripeInsetsEPKNS_10BorderEdgeENS1_18DoubleBorderStripeE(%"struct.blink::BorderEdge"* %118, i32 1)
  %138 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %139 = extractvalue { i64, i64 } %137, 0
  store i64 %139, i64* %138, align 8
  %140 = extractvalue { i64, i64 } %137, 1
  store i64 %140, i64* %136, align 8
  %141 = bitcast %"class.blink::FloatRoundedRect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %141) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %141, i8 -1, i64 48, i1 false)
  %142 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %124, align 8
  %143 = load i32, i32* %127, align 4
  call void @_ZN5blink21RoundedBorderGeometry30PixelSnappedRoundedInnerBorderERKNS_13ComputedStyleERKNS_12PhysicalRectERKNS_17LayoutRectOutsetsENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* nonnull sret %10, %"class.blink::ComputedStyle"* dereferenceable(104) %142, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %9, i32 %143) #10
  br i1 %115, label %144, label %147

144:                                              ; preds = %132
  %145 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %10, i64 0, i32 1
  %146 = bitcast %"class.blink::FloatRoundedRect::Radii"* %145 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %146, i8 0, i64 32, i1 false)
  br label %147

147:                                              ; preds = %144, %132
  %148 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4
  call void @_ZN5blink15GraphicsContext10FillDRRectERKNS_16FloatRoundedRectES3_RKNS_5ColorE(%"class.blink::GraphicsContext"* %1, %"class.blink::FloatRoundedRect"* nonnull dereferenceable(48) %10, %"class.blink::FloatRoundedRect"* dereferenceable(48) %148, %"class.blink::Color"* nonnull dereferenceable(4) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %141) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %135) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %123) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64, i64 } @_ZN5blink12_GLOBAL__N_118DoubleStripeInsetsEPKNS_10BorderEdgeENS1_18DoubleBorderStripeE(%"struct.blink::BorderEdge"*, i32) unnamed_addr #0 {
  %3 = tail call float @_ZNK5blink10BorderEdge26GetDoubleBorderStripeWidthENS0_18DoubleBorderStripeE(%"struct.blink::BorderEdge"* %0, i32 %1) #10
  %4 = fsub float -0.000000e+00, %3
  %5 = fptosi float %4 to i32
  %6 = getelementptr inbounds %"struct.blink::BorderEdge", %"struct.blink::BorderEdge"* %0, i64 1
  %7 = tail call float @_ZNK5blink10BorderEdge26GetDoubleBorderStripeWidthENS0_18DoubleBorderStripeE(%"struct.blink::BorderEdge"* %6, i32 %1) #10
  %8 = fsub float -0.000000e+00, %7
  %9 = fptosi float %8 to i32
  %10 = getelementptr inbounds %"struct.blink::BorderEdge", %"struct.blink::BorderEdge"* %0, i64 2
  %11 = tail call float @_ZNK5blink10BorderEdge26GetDoubleBorderStripeWidthENS0_18DoubleBorderStripeE(%"struct.blink::BorderEdge"* %10, i32 %1) #10
  %12 = fsub float -0.000000e+00, %11
  %13 = fptosi float %12 to i32
  %14 = getelementptr inbounds %"struct.blink::BorderEdge", %"struct.blink::BorderEdge"* %0, i64 3
  %15 = tail call float @_ZNK5blink10BorderEdge26GetDoubleBorderStripeWidthENS0_18DoubleBorderStripeE(%"struct.blink::BorderEdge"* %14, i32 %1) #10
  %16 = fsub float -0.000000e+00, %15
  %17 = fptosi float %16 to i32
  %18 = icmp sgt i32 %5, 33554431
  br i1 %18, label %24, label %19

19:                                               ; preds = %2
  %20 = icmp slt i32 %5, -33554432
  %21 = shl i32 %5, 6
  %22 = select i1 %20, i32 -2147483648, i32 %21
  %23 = zext i32 %22 to i64
  br label %24

24:                                               ; preds = %19, %2
  %25 = phi i64 [ 2147483647, %2 ], [ %23, %19 ]
  %26 = icmp sgt i32 %9, 33554431
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = icmp slt i32 %9, -33554432
  %29 = shl i32 %9, 6
  %30 = select i1 %28, i32 -2147483648, i32 %29
  %31 = zext i32 %30 to i64
  %32 = shl nuw i64 %31, 32
  br label %33

33:                                               ; preds = %27, %24
  %34 = phi i64 [ 9223372032559808512, %24 ], [ %32, %27 ]
  %35 = icmp sgt i32 %13, 33554431
  br i1 %35, label %41, label %36

36:                                               ; preds = %33
  %37 = icmp slt i32 %13, -33554432
  %38 = shl i32 %13, 6
  %39 = select i1 %37, i32 -2147483648, i32 %38
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %36, %33
  %42 = phi i64 [ 2147483647, %33 ], [ %40, %36 ]
  %43 = icmp sgt i32 %17, 33554431
  br i1 %43, label %50, label %44

44:                                               ; preds = %41
  %45 = icmp slt i32 %17, -33554432
  %46 = shl i32 %17, 6
  %47 = select i1 %45, i32 -2147483648, i32 %46
  %48 = zext i32 %47 to i64
  %49 = shl nuw i64 %48, 32
  br label %50

50:                                               ; preds = %44, %41
  %51 = phi i64 [ 9223372032559808512, %41 ], [ %49, %44 ]
  %52 = or i64 %34, %25
  %53 = insertvalue { i64, i64 } undef, i64 %52, 0
  %54 = or i64 %51, %42
  %55 = insertvalue { i64, i64 } %53, i64 %54, 1
  ret { i64, i64 } %55
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink21RoundedBorderGeometry30PixelSnappedRoundedInnerBorderERKNS_13ComputedStyleERKNS_12PhysicalRectERKNS_17LayoutRectOutsetsENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* sret, %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::LayoutRectOutsets"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_123DrawBleedAdjustedDRRectERNS_15GraphicsContextENS_24BackgroundBleedAvoidanceERKNS_16FloatRoundedRectES6_NS_5ColorE(%"class.blink::GraphicsContext"* dereferenceable(112), i32, %"class.blink::FloatRoundedRect"* dereferenceable(48), %"class.blink::FloatRoundedRect"* dereferenceable(48), i32) unnamed_addr #0 {
  %6 = alloca %"class.blink::Color", align 4
  %7 = alloca %class.SkPath, align 8
  %8 = alloca %class.SkRRect, align 4
  %9 = alloca %"class.cc::PaintFlags", align 8
  %10 = alloca %"class.blink::FloatRoundedRect", align 4
  %11 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %6, i64 0, i32 0
  store i32 %4, i32* %11, align 4
  switch i32 %1, label %82 [
    i32 3, label %12
    i32 2, label %29
  ]

12:                                               ; preds = %5
  %13 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #10
  %14 = getelementptr inbounds %class.SkPath, %class.SkPath* %7, i64 0, i32 4
  %15 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %7) #10
  %16 = bitcast %class.SkRRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %16) #10
  call void @_ZNK5blink16FloatRoundedRectcv7SkRRectEv(%class.SkRRect* nonnull sret %8, %"class.blink::FloatRoundedRect"* %3)
  %17 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirection(%class.SkPath* nonnull %7, %class.SkRRect* nonnull dereferenceable(52) %8, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %16) #10
  %18 = load i8, i8* %14, align 2
  %19 = and i8 %18, -4
  %20 = or i8 %19, 2
  store i8 %20, i8* %14, align 2
  %21 = bitcast %"class.cc::PaintFlags"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN5blink12_GLOBAL__N_123DrawBleedAdjustedDRRectERNS_15GraphicsContextENS_24BackgroundBleedAvoidanceERKNS_16FloatRoundedRectES6_NS_5ColorE.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %9) #10
  %22 = load i32, i32* %11, align 4
  %23 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %9, i64 0, i32 6
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %9, i64 0, i32 10
  %25 = bitcast %union.anon.1754* %24 to i16*
  %26 = load i16, i16* %25, align 8
  %27 = and i16 %26, -194
  %28 = or i16 %27, 1
  store i16 %28, i16* %25, align 8
  call void @_ZN5blink15GraphicsContext8DrawPathERK6SkPathRKN2cc10PaintFlagsENS_14DarkModeFilter11ElementRoleE(%"class.blink::GraphicsContext"* %0, %class.SkPath* nonnull dereferenceable(16) %7, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %9, i32 2) #10
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #10
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #10
  br label %83

29:                                               ; preds = %5
  %30 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %2, i64 0, i32 1, i32 0, i32 0
  %31 = load float, float* %30, align 4
  %32 = fcmp ogt float %31, 0xBE80000000000000
  %33 = fcmp olt float %31, 0x3E80000000000000
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %77

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %2, i64 0, i32 1, i32 0, i32 1
  %37 = load float, float* %36, align 4
  %38 = fcmp ogt float %37, 0xBE80000000000000
  %39 = fcmp olt float %37, 0x3E80000000000000
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %77

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %2, i64 0, i32 1, i32 1, i32 0
  %43 = load float, float* %42, align 4
  %44 = fcmp ogt float %43, 0xBE80000000000000
  %45 = fcmp olt float %43, 0x3E80000000000000
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %77

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %2, i64 0, i32 1, i32 1, i32 1
  %49 = load float, float* %48, align 4
  %50 = fcmp ogt float %49, 0xBE80000000000000
  %51 = fcmp olt float %49, 0x3E80000000000000
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %77

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %2, i64 0, i32 1, i32 2, i32 0
  %55 = load float, float* %54, align 4
  %56 = fcmp ogt float %55, 0xBE80000000000000
  %57 = fcmp olt float %55, 0x3E80000000000000
  %58 = and i1 %56, %57
  br i1 %58, label %59, label %77

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %2, i64 0, i32 1, i32 2, i32 1
  %61 = load float, float* %60, align 4
  %62 = fcmp ogt float %61, 0xBE80000000000000
  %63 = fcmp olt float %61, 0x3E80000000000000
  %64 = and i1 %62, %63
  br i1 %64, label %65, label %77

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %2, i64 0, i32 1, i32 3, i32 0
  %67 = load float, float* %66, align 4
  %68 = fcmp ogt float %67, 0xBE80000000000000
  %69 = fcmp olt float %67, 0x3E80000000000000
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %77

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %2, i64 0, i32 1, i32 3, i32 1
  %73 = load float, float* %72, align 4
  %74 = fcmp ule float %73, 0xBE80000000000000
  %75 = fcmp uge float %73, 0x3E80000000000000
  %76 = or i1 %74, %75
  br i1 %76, label %77, label %82

77:                                               ; preds = %71, %53, %59, %41, %47, %29, %35, %65
  %78 = bitcast %"class.blink::FloatRoundedRect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %78) #10
  %79 = bitcast %"class.blink::FloatRoundedRect"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %78, i8* align 4 %79, i64 16, i1 false) #10
  %80 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %10, i64 0, i32 1
  %81 = bitcast %"class.blink::FloatRoundedRect::Radii"* %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %81, i8 0, i64 32, i1 false)
  call void @_ZN5blink15GraphicsContext10FillDRRectERKNS_16FloatRoundedRectES3_RKNS_5ColorE(%"class.blink::GraphicsContext"* %0, %"class.blink::FloatRoundedRect"* nonnull dereferenceable(48) %10, %"class.blink::FloatRoundedRect"* dereferenceable(48) %3, %"class.blink::Color"* nonnull dereferenceable(4) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %78) #10
  br label %83

82:                                               ; preds = %71, %5
  call void @_ZN5blink15GraphicsContext10FillDRRectERKNS_16FloatRoundedRectES3_RKNS_5ColorE(%"class.blink::GraphicsContext"* %0, %"class.blink::FloatRoundedRect"* dereferenceable(48) %2, %"class.blink::FloatRoundedRect"* dereferenceable(48) %3, %"class.blink::Color"* nonnull dereferenceable(4) %6) #10
  br label %83

83:                                               ; preds = %82, %77, %12
  ret void
}

declare void @_ZN5blink15GraphicsContext10FillDRRectERKNS_16FloatRoundedRectES3_RKNS_5ColorE(%"class.blink::GraphicsContext"*, %"class.blink::FloatRoundedRect"* dereferenceable(48), %"class.blink::FloatRoundedRect"* dereferenceable(48), %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16BoxBorderPainter19PaintBorderFastPathERNS_15GraphicsContextERKNS_12PhysicalRectE(%"class.blink::BoxBorderPainter"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca <4 x float>, align 16
  %5 = bitcast <4 x float>* %4 to %"class.blink::FloatRect"*
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to { <2 x float>, <2 x float> }*
  %8 = alloca %"class.blink::Path", align 8
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"class.blink::FloatRect"*
  %11 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 11
  %12 = load i8, i8* %11, align 2, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %234, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 9
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %234, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4
  %20 = tail call zeroext i1 @_ZNK5blink16FloatRoundedRect12IsRenderableEv(%"class.blink::FloatRoundedRect"* %19) #10
  br i1 %20, label %21, label %234

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 7
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %24
  %26 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %24, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = and i8 %27, 15
  %29 = icmp eq i8 %28, 8
  %30 = and i8 %27, 14
  %31 = icmp eq i8 %30, 8
  br i1 %31, label %32, label %234

32:                                               ; preds = %21
  %33 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 8
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 15
  br i1 %35, label %36, label %138

36:                                               ; preds = %32
  br i1 %29, label %37, label %137

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 10
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %131, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %43 = load float, float* %42, align 4
  %44 = fcmp ogt float %43, 0xBE80000000000000
  %45 = fcmp olt float %43, 0x3E80000000000000
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %131

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %49 = load float, float* %48, align 4
  %50 = fcmp ogt float %49, 0xBE80000000000000
  %51 = fcmp olt float %49, 0x3E80000000000000
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %131

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 1, i32 0
  %55 = load float, float* %54, align 4
  %56 = fcmp ogt float %55, 0xBE80000000000000
  %57 = fcmp olt float %55, 0x3E80000000000000
  %58 = and i1 %56, %57
  br i1 %58, label %59, label %131

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 1, i32 1
  %61 = load float, float* %60, align 4
  %62 = fcmp ogt float %61, 0xBE80000000000000
  %63 = fcmp olt float %61, 0x3E80000000000000
  %64 = and i1 %62, %63
  br i1 %64, label %65, label %131

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 2, i32 0
  %67 = load float, float* %66, align 4
  %68 = fcmp ogt float %67, 0xBE80000000000000
  %69 = fcmp olt float %67, 0x3E80000000000000
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %131

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 2, i32 1
  %73 = load float, float* %72, align 4
  %74 = fcmp ogt float %73, 0xBE80000000000000
  %75 = fcmp olt float %73, 0x3E80000000000000
  %76 = and i1 %74, %75
  br i1 %76, label %77, label %131

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 3, i32 0
  %79 = load float, float* %78, align 4
  %80 = fcmp ogt float %79, 0xBE80000000000000
  %81 = fcmp olt float %79, 0x3E80000000000000
  %82 = and i1 %80, %81
  br i1 %82, label %83, label %131

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 3, i32 1
  %85 = load float, float* %84, align 4
  %86 = fcmp ule float %85, 0xBE80000000000000
  %87 = fcmp uge float %85, 0x3E80000000000000
  %88 = or i1 %86, %87
  br i1 %88, label %131, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 0
  %91 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %24, i32 3
  %92 = load float, float* %91, align 4
  %93 = getelementptr inbounds %"struct.blink::BorderEdge", %"struct.blink::BorderEdge"* %25, i64 0, i32 0
  %94 = bitcast <4 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #10
  %95 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 1, i32 1
  %97 = bitcast %"class.blink::FloatRect"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %94, i8* align 4 %97, i64 16, i1 false) #10
  %98 = tail call float @llvm.floor.f32(float %92) #10
  %99 = fmul float %98, -5.000000e-01
  %100 = load float, float* %95, align 8
  %101 = fadd float %99, %100
  %102 = bitcast <4 x float>* %4 to <2 x float>*
  %103 = load <2 x float>, <2 x float>* %102, align 16
  %104 = load float, float* %96, align 4
  %105 = fadd float %99, %104
  %106 = extractelement <2 x float> %103, i32 0
  %107 = insertelement <4 x float> undef, float %106, i32 0
  %108 = extractelement <2 x float> %103, i32 1
  %109 = insertelement <4 x float> %107, float %108, i32 1
  %110 = insertelement <4 x float> %109, float %101, i32 2
  %111 = insertelement <4 x float> %110, float %105, i32 3
  %112 = insertelement <4 x float> undef, float %99, i32 0
  %113 = shufflevector <4 x float> %112, <4 x float> undef, <4 x i32> zeroinitializer
  %114 = fsub <4 x float> %111, %113
  %115 = fadd <4 x float> %111, %113
  %116 = shufflevector <4 x float> %114, <4 x float> %115, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %116, <4 x float>* %4, align 16
  %117 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %1, i64 0, i32 4
  %118 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %118, i64 0, i32 6
  %120 = load i8, i8* %119, align 2
  %121 = and i8 %120, 1
  %122 = icmp eq i8 %121, 0
  tail call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %123 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %117, align 8
  br i1 %122, label %124, label %128

124:                                              ; preds = %89
  tail call void @_ZN5blink20GraphicsContextState18SetShouldAntialiasEb(%"class.blink::GraphicsContextState"* %123, i1 zeroext true) #10
  tail call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %125 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %117, align 8
  tail call void @_ZN5blink20GraphicsContextState14SetStrokeStyleENS_11StrokeStyleE(%"class.blink::GraphicsContextState"* %125, i32 1) #10
  tail call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %126 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %117, align 8
  tail call void @_ZN5blink20GraphicsContextState14SetStrokeColorERKNS_5ColorE(%"class.blink::GraphicsContextState"* %126, %"class.blink::Color"* dereferenceable(4) %93) #10
  call void @_ZN5blink15GraphicsContext10StrokeRectERKNS_9FloatRectEf(%"class.blink::GraphicsContext"* %1, %"class.blink::FloatRect"* nonnull dereferenceable(16) %5, float %98) #10
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %127 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %117, align 8
  call void @_ZN5blink20GraphicsContextState18SetShouldAntialiasEb(%"class.blink::GraphicsContextState"* %127, i1 zeroext false) #10
  br label %130

128:                                              ; preds = %89
  tail call void @_ZN5blink20GraphicsContextState14SetStrokeStyleENS_11StrokeStyleE(%"class.blink::GraphicsContextState"* %123, i32 1) #10
  tail call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %129 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %117, align 8
  tail call void @_ZN5blink20GraphicsContextState14SetStrokeColorERKNS_5ColorE(%"class.blink::GraphicsContextState"* %129, %"class.blink::Color"* dereferenceable(4) %93) #10
  call void @_ZN5blink15GraphicsContext10StrokeRectERKNS_9FloatRectEf(%"class.blink::GraphicsContext"* %1, %"class.blink::FloatRect"* nonnull dereferenceable(16) %5, float %98) #10
  br label %130

130:                                              ; preds = %124, %128
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #10
  br label %234

131:                                              ; preds = %83, %65, %71, %53, %59, %41, %47, %77, %37
  %132 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3
  %135 = getelementptr inbounds %"struct.blink::BorderEdge", %"struct.blink::BorderEdge"* %25, i64 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  tail call fastcc void @_ZN5blink12_GLOBAL__N_123DrawBleedAdjustedDRRectERNS_15GraphicsContextENS_24BackgroundBleedAvoidanceERKNS_16FloatRoundedRectES6_NS_5ColorE(%"class.blink::GraphicsContext"* dereferenceable(112) %1, i32 %133, %"class.blink::FloatRoundedRect"* dereferenceable(48) %134, %"class.blink::FloatRoundedRect"* dereferenceable(48) %19, i32 %136)
  br label %234

137:                                              ; preds = %36
  tail call void @_ZNK5blink16BoxBorderPainter16DrawDoubleBorderERNS_15GraphicsContextERKNS_12PhysicalRectE(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %2)
  br label %234

138:                                              ; preds = %32
  br i1 %29, label %139, label %234

139:                                              ; preds = %138
  %140 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3
  %141 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %142 = load float, float* %141, align 4
  %143 = fcmp ogt float %142, 0xBE80000000000000
  %144 = fcmp olt float %142, 0x3E80000000000000
  %145 = and i1 %143, %144
  br i1 %145, label %146, label %234

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %148 = load float, float* %147, align 4
  %149 = fcmp ogt float %148, 0xBE80000000000000
  %150 = fcmp olt float %148, 0x3E80000000000000
  %151 = and i1 %149, %150
  br i1 %151, label %152, label %234

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 1, i32 0
  %154 = load float, float* %153, align 4
  %155 = fcmp ogt float %154, 0xBE80000000000000
  %156 = fcmp olt float %154, 0x3E80000000000000
  %157 = and i1 %155, %156
  br i1 %157, label %158, label %234

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 1, i32 1
  %160 = load float, float* %159, align 4
  %161 = fcmp ogt float %160, 0xBE80000000000000
  %162 = fcmp olt float %160, 0x3E80000000000000
  %163 = and i1 %161, %162
  br i1 %163, label %164, label %234

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 2, i32 0
  %166 = load float, float* %165, align 4
  %167 = fcmp ogt float %166, 0xBE80000000000000
  %168 = fcmp olt float %166, 0x3E80000000000000
  %169 = and i1 %167, %168
  br i1 %169, label %170, label %234

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 2, i32 1
  %172 = load float, float* %171, align 4
  %173 = fcmp ogt float %172, 0xBE80000000000000
  %174 = fcmp olt float %172, 0x3E80000000000000
  %175 = and i1 %173, %174
  br i1 %175, label %176, label %234

176:                                              ; preds = %170
  %177 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 3, i32 0
  %178 = load float, float* %177, align 4
  %179 = fcmp ogt float %178, 0xBE80000000000000
  %180 = fcmp olt float %178, 0x3E80000000000000
  %181 = and i1 %179, %180
  br i1 %181, label %182, label %234

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 3, i32 1
  %184 = load float, float* %183, align 4
  %185 = fcmp ule float %184, 0xBE80000000000000
  %186 = fcmp uge float %184, 0x3E80000000000000
  %187 = or i1 %185, %186
  br i1 %187, label %234, label %188

188:                                              ; preds = %182
  %189 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 13
  %190 = load i8, i8* %189, align 8, !range !2
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %234, label %192

192:                                              ; preds = %188
  %193 = bitcast %"class.blink::Path"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %193) #10
  %194 = bitcast %"class.blink::Path"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %194, i8 -86, i64 16, i1 false)
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %8) #10
  call void @_ZN5blink4Path11SetWindRuleENS_8WindRuleE(%"class.blink::Path"* nonnull %8, i32 0) #10
  %195 = bitcast <2 x i64>* %9 to i8*
  %196 = bitcast <2 x i64>* %6 to i8*
  %197 = bitcast <2 x i64>* %6 to %"class.blink::FloatRect"*
  %198 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1, i64 0
  %199 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %197, i64 0, i32 1, i32 1
  %200 = bitcast %"class.blink::FloatRoundedRect"* %140 to i8*
  %201 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %197, i64 0, i32 0, i32 1
  %202 = bitcast <2 x i64>* %6 to float*
  br label %209

203:                                              ; preds = %231
  %204 = load i32, i32* %22, align 4
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %205, i32 0
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %207 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %1, i64 0, i32 4
  %208 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %207, align 8
  call void @_ZN5blink20GraphicsContextState12SetFillColorERKNS_5ColorE(%"class.blink::GraphicsContextState"* %208, %"class.blink::Color"* dereferenceable(4) %206) #10
  call void @_ZN5blink15GraphicsContext8FillPathERKNS_4PathE(%"class.blink::GraphicsContext"* %1, %"class.blink::Path"* nonnull dereferenceable(16) %8) #10
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193) #10
  br label %234

209:                                              ; preds = %231, %192
  %210 = phi i64 [ 0, %192 ], [ %232, %231 ]
  %211 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %210
  %212 = call zeroext i1 @_ZNK5blink10BorderEdge12ShouldRenderEv(%"struct.blink::BorderEdge"* %211) #10
  br i1 %212, label %213, label %231

213:                                              ; preds = %209
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %195) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %196)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %196, i8* align 4 %200, i64 16, i1 false) #10
  %214 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %210, i32 3
  %215 = load float, float* %214, align 4
  %216 = trunc i64 %210 to i32
  switch i32 %216, label %224 [
    i32 0, label %217
    i32 2, label %218
    i32 3, label %223
  ]

217:                                              ; preds = %213
  store float %215, float* %199, align 4
  br label %229

218:                                              ; preds = %213
  %219 = load float, float* %201, align 4
  %220 = load float, float* %199, align 4
  %221 = fadd float %219, %220
  %222 = fsub float %221, %215
  call void @_ZN5blink9FloatRect12ShiftYEdgeToEf(%"class.blink::FloatRect"* nonnull %197, float %222) #10
  br label %229

223:                                              ; preds = %213
  store float %215, float* %198, align 8
  br label %229

224:                                              ; preds = %213
  %225 = load float, float* %202, align 16
  %226 = load float, float* %198, align 8
  %227 = fadd float %225, %226
  %228 = fsub float %227, %215
  call void @_ZN5blink9FloatRect12ShiftXEdgeToEf(%"class.blink::FloatRect"* nonnull %197, float %228) #10
  br label %229

229:                                              ; preds = %217, %218, %223, %224
  %230 = load <2 x i64>, <2 x i64>* %6, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %196)
  store <2 x i64> %230, <2 x i64>* %9, align 16
  call void @_ZN5blink4Path7AddRectERKNS_9FloatRectE(%"class.blink::Path"* nonnull %8, %"class.blink::FloatRect"* nonnull dereferenceable(16) %10) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %195) #10
  br label %231

231:                                              ; preds = %229, %209
  %232 = add nuw nsw i64 %210, 1
  %233 = icmp eq i64 %232, 4
  br i1 %233, label %203, label %209

234:                                              ; preds = %21, %182, %164, %170, %152, %158, %139, %146, %176, %138, %188, %137, %131, %130, %18, %3, %14, %203
  %235 = phi i1 [ true, %203 ], [ false, %14 ], [ false, %3 ], [ false, %18 ], [ true, %130 ], [ true, %131 ], [ true, %137 ], [ false, %188 ], [ false, %138 ], [ false, %182 ], [ false, %176 ], [ false, %146 ], [ false, %139 ], [ false, %158 ], [ false, %152 ], [ false, %170 ], [ false, %164 ], [ false, %21 ]
  ret i1 %235
}

declare zeroext i1 @_ZNK5blink16FloatRoundedRect12IsRenderableEv(%"class.blink::FloatRoundedRect"*) local_unnamed_addr #2

declare void @_ZN5blink4PathC1Ev(%"class.blink::Path"*) unnamed_addr #2

declare void @_ZN5blink4Path11SetWindRuleENS_8WindRuleE(%"class.blink::Path"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink10BorderEdge12ShouldRenderEv(%"struct.blink::BorderEdge"*) local_unnamed_addr #2

declare void @_ZN5blink4Path7AddRectERKNS_9FloatRectE(%"class.blink::Path"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext8FillPathERKNS_4PathE(%"class.blink::GraphicsContext"*, %"class.blink::Path"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4PathD1Ev(%"class.blink::Path"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16BoxBorderPainterC2ERKNS_12PhysicalRectERKNS_13ComputedStyleENS_24BackgroundBleedAvoidanceENS_16PhysicalBoxSidesE(%"class.blink::BoxBorderPainter"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::ComputedStyle"* dereferenceable(104), i32, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::FloatRoundedRect", align 4
  %7 = alloca %"class.blink::FloatRoundedRect", align 4
  %8 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 0
  store %"class.blink::ComputedStyle"* %2, %"class.blink::ComputedStyle"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 1
  store i32 %3, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 2
  %11 = bitcast %"struct.blink::PhysicalBoxSides"* %10 to i32*
  store i32 %4, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 0
  %14 = bitcast %"class.blink::FloatRoundedRect"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 96, i1 false)
  tail call void @_ZN5blink10BorderEdgeC1Ev(%"struct.blink::BorderEdge"* %13) #10
  %15 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 1
  tail call void @_ZN5blink10BorderEdgeC1Ev(%"struct.blink::BorderEdge"* %15) #10
  %16 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 2
  tail call void @_ZN5blink10BorderEdgeC1Ev(%"struct.blink::BorderEdge"* %16) #10
  %17 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 3
  tail call void @_ZN5blink10BorderEdgeC1Ev(%"struct.blink::BorderEdge"* %17) #10
  %18 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 6
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 7
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 8
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 9
  store i8 1, i8* %21, align 4
  %22 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 10
  store i8 1, i8* %22, align 1
  %23 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 11
  store i8 1, i8* %23, align 2
  %24 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 12
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 13
  store i8 0, i8* %25, align 8
  tail call void @_ZNK5blink13ComputedStyle17GetBorderEdgeInfoEPNS_10BorderEdgeENS_16PhysicalBoxSidesE(%"class.blink::ComputedStyle"* %2, %"struct.blink::BorderEdge"* %13, i32 %4) #10
  tail call void @_ZN5blink16BoxBorderPainter23ComputeBorderPropertiesEv(%"class.blink::BoxBorderPainter"* %0)
  %26 = load i32, i32* %20, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %110, label %28

28:                                               ; preds = %5
  %29 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4
  %30 = bitcast %"class.blink::FloatRoundedRect"* %29 to i8*
  %31 = bitcast %"class.blink::FloatRoundedRect"* %12 to i8*
  %32 = bitcast %"class.blink::FloatRoundedRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #10
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  call void @_ZN5blink21RoundedBorderGeometry25PixelSnappedRoundedBorderERKNS_13ComputedStyleERKNS_12PhysicalRectENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* nonnull sret %6, %"class.blink::ComputedStyle"* dereferenceable(104) %33, %"struct.blink::PhysicalRect"* dereferenceable(16) %1, i32 %4) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* nonnull align 4 %32, i64 48, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #10
  %34 = bitcast %"class.blink::FloatRoundedRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %34) #10
  %35 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  call void @_ZN5blink21RoundedBorderGeometry30PixelSnappedRoundedInnerBorderERKNS_13ComputedStyleERKNS_12PhysicalRectENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* nonnull sret %7, %"class.blink::ComputedStyle"* dereferenceable(104) %35, %"struct.blink::PhysicalRect"* dereferenceable(16) %1, i32 %4) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 4 %34, i64 48, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %34) #10
  %36 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 0, i32 1, i32 1
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 0, i32 3
  %41 = load float, float* %40, align 4
  %42 = fcmp ogt float %41, %39
  br i1 %42, label %43, label %44

43:                                               ; preds = %28
  store float %39, float* %40, align 4
  br label %44

44:                                               ; preds = %28, %43
  %45 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 1, i32 3
  %46 = load float, float* %45, align 4
  %47 = fcmp ogt float %46, %37
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  store float %37, float* %45, align 4
  br label %49

49:                                               ; preds = %44, %48
  %50 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 2, i32 3
  %51 = load float, float* %50, align 4
  %52 = fcmp ogt float %51, %39
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  store float %39, float* %50, align 4
  br label %54

54:                                               ; preds = %49, %53
  %55 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 3, i32 3
  %56 = load float, float* %55, align 4
  %57 = fcmp ogt float %56, %37
  br i1 %57, label %58, label %59

58:                                               ; preds = %54
  store float %37, float* %55, align 4
  br label %59

59:                                               ; preds = %54, %58
  %60 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %61 = load float, float* %60, align 4
  %62 = fcmp ogt float %61, 0xBE80000000000000
  %63 = fcmp olt float %61, 0x3E80000000000000
  %64 = and i1 %62, %63
  br i1 %64, label %65, label %108

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %67 = load float, float* %66, align 4
  %68 = fcmp ogt float %67, 0xBE80000000000000
  %69 = fcmp olt float %67, 0x3E80000000000000
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %108

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 1, i32 0
  %73 = load float, float* %72, align 4
  %74 = fcmp ogt float %73, 0xBE80000000000000
  %75 = fcmp olt float %73, 0x3E80000000000000
  %76 = and i1 %74, %75
  br i1 %76, label %77, label %108

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 1, i32 1
  %79 = load float, float* %78, align 4
  %80 = fcmp ogt float %79, 0xBE80000000000000
  %81 = fcmp olt float %79, 0x3E80000000000000
  %82 = and i1 %80, %81
  br i1 %82, label %83, label %108

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 2, i32 0
  %85 = load float, float* %84, align 4
  %86 = fcmp ogt float %85, 0xBE80000000000000
  %87 = fcmp olt float %85, 0x3E80000000000000
  %88 = and i1 %86, %87
  br i1 %88, label %89, label %108

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 2, i32 1
  %91 = load float, float* %90, align 4
  %92 = fcmp ogt float %91, 0xBE80000000000000
  %93 = fcmp olt float %91, 0x3E80000000000000
  %94 = and i1 %92, %93
  br i1 %94, label %95, label %108

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 3, i32 0
  %97 = load float, float* %96, align 4
  %98 = fcmp ogt float %97, 0xBE80000000000000
  %99 = fcmp olt float %97, 0x3E80000000000000
  %100 = and i1 %98, %99
  br i1 %100, label %101, label %108

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 3, i32 1
  %103 = load float, float* %102, align 4
  %104 = fcmp ogt float %103, 0xBE80000000000000
  br i1 %104, label %105, label %108

105:                                              ; preds = %101
  %106 = fcmp uge float %103, 0x3E80000000000000
  %107 = zext i1 %106 to i8
  br label %108

108:                                              ; preds = %59, %65, %71, %77, %83, %89, %95, %101, %105
  %109 = phi i8 [ 1, %101 ], [ 1, %95 ], [ %107, %105 ], [ 1, %65 ], [ 1, %59 ], [ 1, %77 ], [ 1, %71 ], [ 1, %89 ], [ 1, %83 ]
  store i8 %109, i8* %24, align 1
  br label %110

110:                                              ; preds = %5, %108
  ret void
}

declare void @_ZN5blink10BorderEdgeC1Ev(%"struct.blink::BorderEdge"*) unnamed_addr #2

declare void @_ZNK5blink13ComputedStyle17GetBorderEdgeInfoEPNS_10BorderEdgeENS_16PhysicalBoxSidesE(%"class.blink::ComputedStyle"*, %"struct.blink::BorderEdge"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16BoxBorderPainter23ComputeBorderPropertiesEv(%"class.blink::BoxBorderPainter"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 10
  %3 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 11
  %4 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 8
  %6 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 13
  %7 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 9
  br label %10

9:                                                ; preds = %60
  ret void

10:                                               ; preds = %60, %1
  %11 = phi i64 [ 0, %1 ], [ %61, %60 ]
  %12 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %11
  %13 = tail call zeroext i1 @_ZNK5blink10BorderEdge12ShouldRenderEv(%"struct.blink::BorderEdge"* %12) #10
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = tail call zeroext i1 @_ZNK5blink10BorderEdge19PresentButInvisibleEv(%"struct.blink::BorderEdge"* %12) #10
  br i1 %15, label %16, label %60

16:                                               ; preds = %14
  store i8 0, i8* %2, align 1
  store i8 0, i8* %3, align 2
  br label %60

17:                                               ; preds = %10
  %18 = load i32, i32* %4, align 8
  %19 = add i32 %18, 1
  store i32 %19, i32* %4, align 8
  %20 = trunc i64 %11 to i32
  %21 = shl i32 1, %20
  %22 = load i32, i32* %5, align 8
  %23 = or i32 %22, %21
  store i32 %23, i32* %5, align 8
  %24 = getelementptr inbounds %"struct.blink::BorderEdge", %"struct.blink::BorderEdge"* %12, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp ult i32 %25, -16777216
  %27 = zext i1 %26 to i8
  %28 = load i8, i8* %6, align 8, !range !2
  %29 = or i8 %28, %27
  store i8 %29, i8* %6, align 8
  %30 = icmp eq i32 %18, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %17
  store i32 %20, i32* %7, align 4
  br label %60

32:                                               ; preds = %17
  %33 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %11, i32 2
  %34 = load i8, i8* %33, align 1
  %35 = load i32, i32* %7, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %36, i32 2
  %38 = load i8, i8* %37, align 1
  %39 = xor i8 %38, %34
  %40 = and i8 %39, 15
  %41 = icmp eq i8 %40, 0
  %42 = zext i1 %41 to i8
  %43 = load i8, i8* %8, align 4, !range !2
  %44 = and i8 %43, %42
  store i8 %44, i8* %8, align 4
  %45 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %11, i32 3
  %46 = load float, float* %45, align 4
  %47 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %36, i32 3
  %48 = load float, float* %47, align 4
  %49 = fcmp oeq float %46, %48
  %50 = zext i1 %49 to i8
  %51 = load i8, i8* %2, align 1, !range !2
  %52 = and i8 %51, %50
  store i8 %52, i8* %2, align 1
  %53 = load i32, i32* %24, align 4
  %54 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %36, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %53, %55
  %57 = zext i1 %56 to i8
  %58 = load i8, i8* %3, align 2, !range !2
  %59 = and i8 %58, %57
  store i8 %59, i8* %3, align 2
  br label %60

60:                                               ; preds = %14, %16, %32, %31
  %61 = add nuw nsw i64 %11, 1
  %62 = icmp eq i64 %61, 4
  br i1 %62, label %9, label %10
}

declare void @_ZN5blink21RoundedBorderGeometry25PixelSnappedRoundedBorderERKNS_13ComputedStyleERKNS_12PhysicalRectENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* sret, %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::PhysicalRect"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN5blink21RoundedBorderGeometry30PixelSnappedRoundedInnerBorderERKNS_13ComputedStyleERKNS_12PhysicalRectENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* sret, %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::PhysicalRect"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16BoxBorderPainterC2ERKNS_13ComputedStyleERKNS_12PhysicalRectES6_RKNS_10BorderEdgeE(%"class.blink::BoxBorderPainter"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), %"struct.blink::BorderEdge"* nocapture readonly dereferenceable(12)) unnamed_addr #0 align 2 {
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %"class.blink::FloatRect"*
  %8 = alloca %"class.blink::FloatRoundedRect::Radii", align 4
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %"class.blink::FloatRect"*
  %11 = alloca %"class.blink::FloatRoundedRect::Radii", align 4
  %12 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 0
  store %"class.blink::ComputedStyle"* %1, %"class.blink::ComputedStyle"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 2
  %15 = bitcast %"struct.blink::PhysicalBoxSides"* %14 to i32*
  store i32 16843009, i32* %15, align 1
  %16 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3
  %17 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = sitofp i32 %19 to float
  %21 = fmul float %20, 1.562500e-02
  %22 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = sitofp i32 %23 to float
  %25 = fmul float %24, 1.562500e-02
  %26 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  %29 = fmul float %28, 1.562500e-02
  %30 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 1, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = sitofp i32 %31 to float
  %33 = fmul float %32, 1.562500e-02
  %34 = insertelement <2 x float> undef, float %21, i32 0
  %35 = insertelement <2 x float> %34, float %25, i32 1
  %36 = insertelement <2 x float> undef, float %29, i32 0
  %37 = insertelement <2 x float> %36, float %33, i32 1
  %38 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %35, <2 x float>* %38, align 8
  %39 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %37, <2 x float>* %39, align 8
  %40 = bitcast %"class.blink::FloatRoundedRect::Radii"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #10
  %41 = bitcast %"class.blink::FloatRoundedRect::Radii"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %41, i8 0, i64 32, i1 false)
  call void @_ZN5blink16FloatRoundedRectC1ERKNS_9FloatRectERKNS0_5RadiiE(%"class.blink::FloatRoundedRect"* %16, %"class.blink::FloatRect"* nonnull dereferenceable(16) %7, %"class.blink::FloatRoundedRect::Radii"* nonnull dereferenceable(32) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  %42 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4
  %43 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #10
  %44 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = sitofp i32 %45 to float
  %47 = fmul float %46, 1.562500e-02
  %48 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 1, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = sitofp i32 %49 to float
  %51 = fmul float %50, 1.562500e-02
  %52 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = sitofp i32 %53 to float
  %55 = fmul float %54, 1.562500e-02
  %56 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 1, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = sitofp i32 %57 to float
  %59 = fmul float %58, 1.562500e-02
  %60 = insertelement <2 x float> undef, float %47, i32 0
  %61 = insertelement <2 x float> %60, float %51, i32 1
  %62 = insertelement <2 x float> undef, float %55, i32 0
  %63 = insertelement <2 x float> %62, float %59, i32 1
  %64 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> %61, <2 x float>* %64, align 8
  %65 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %63, <2 x float>* %65, align 8
  %66 = bitcast %"class.blink::FloatRoundedRect::Radii"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #10
  %67 = bitcast %"class.blink::FloatRoundedRect::Radii"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %67, i8 0, i64 32, i1 false)
  call void @_ZN5blink16FloatRoundedRectC1ERKNS_9FloatRectERKNS0_5RadiiE(%"class.blink::FloatRoundedRect"* %42, %"class.blink::FloatRect"* nonnull dereferenceable(16) %10, %"class.blink::FloatRoundedRect::Radii"* nonnull dereferenceable(32) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %66) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #10
  %68 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 0
  call void @_ZN5blink10BorderEdgeC1Ev(%"struct.blink::BorderEdge"* %68) #10
  %69 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 1
  call void @_ZN5blink10BorderEdgeC1Ev(%"struct.blink::BorderEdge"* %69) #10
  %70 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 2
  call void @_ZN5blink10BorderEdgeC1Ev(%"struct.blink::BorderEdge"* %70) #10
  %71 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 3
  call void @_ZN5blink10BorderEdgeC1Ev(%"struct.blink::BorderEdge"* %71) #10
  %72 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 6
  store i32 0, i32* %72, align 8
  %73 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 7
  store i32 0, i32* %73, align 4
  %74 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 8
  store i32 0, i32* %74, align 8
  %75 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 9
  store i8 1, i8* %75, align 4
  %76 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 10
  store i8 1, i8* %76, align 1
  %77 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 11
  store i8 1, i8* %77, align 2
  %78 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 12
  store i8 0, i8* %78, align 1
  %79 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 13
  store i8 0, i8* %79, align 8
  %80 = bitcast %"struct.blink::BorderEdge"* %4 to i8*
  %81 = bitcast %"struct.blink::BorderEdge"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %80, i64 12, i1 false)
  %82 = bitcast %"struct.blink::BorderEdge"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %80, i64 12, i1 false)
  %83 = bitcast %"struct.blink::BorderEdge"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %80, i64 12, i1 false)
  %84 = bitcast %"struct.blink::BorderEdge"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %80, i64 12, i1 false)
  call void @_ZN5blink16BoxBorderPainter23ComputeBorderPropertiesEv(%"class.blink::BoxBorderPainter"* %0)
  ret void
}

declare void @_ZN5blink16FloatRoundedRectC1ERKNS_9FloatRectERKNS0_5RadiiE(%"class.blink::FloatRoundedRect"*, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatRoundedRect::Radii"* dereferenceable(32)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink10BorderEdge19PresentButInvisibleEv(%"struct.blink::BorderEdge"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16BoxBorderPainter11PaintBorderERKNS_9PaintInfoERKNS_12PhysicalRectE(%"class.blink::BoxBorderPainter"*, %"struct.blink::PaintInfo"* nocapture readonly dereferenceable(56), %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::BoxBorderPainter::ComplexBorderInfo", align 8
  %5 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %127, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %11 = load float, float* %10, align 4
  %12 = fcmp ugt float %11, 0.000000e+00
  br i1 %12, label %13, label %127

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 0, i32 1, i32 1
  %15 = load float, float* %14, align 4
  %16 = fcmp ugt float %15, 0.000000e+00
  br i1 %16, label %17, label %127

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 0
  %19 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %18, align 8
  %20 = tail call zeroext i1 @_ZNK5blink16BoxBorderPainter19PaintBorderFastPathERNS_15GraphicsContextERKNS_12PhysicalRectE(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %19, %"struct.blink::PhysicalRect"* dereferenceable(16) %2)
  br i1 %20, label %127, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %23 = load float, float* %22, align 4
  %24 = fcmp ogt float %23, 0xBE80000000000000
  %25 = fcmp olt float %23, 0x3E80000000000000
  %26 = and i1 %24, %25
  br i1 %26, label %27, label %69

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = fcmp ogt float %29, 0xBE80000000000000
  %31 = fcmp olt float %29, 0x3E80000000000000
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %69

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 1, i32 0
  %35 = load float, float* %34, align 4
  %36 = fcmp ogt float %35, 0xBE80000000000000
  %37 = fcmp olt float %35, 0x3E80000000000000
  %38 = and i1 %36, %37
  br i1 %38, label %39, label %69

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 1, i32 1
  %41 = load float, float* %40, align 4
  %42 = fcmp ogt float %41, 0xBE80000000000000
  %43 = fcmp olt float %41, 0x3E80000000000000
  %44 = and i1 %42, %43
  br i1 %44, label %45, label %69

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 2, i32 0
  %47 = load float, float* %46, align 4
  %48 = fcmp ogt float %47, 0xBE80000000000000
  %49 = fcmp olt float %47, 0x3E80000000000000
  %50 = and i1 %48, %49
  br i1 %50, label %51, label %69

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 2, i32 1
  %53 = load float, float* %52, align 4
  %54 = fcmp ogt float %53, 0xBE80000000000000
  %55 = fcmp olt float %53, 0x3E80000000000000
  %56 = and i1 %54, %55
  br i1 %56, label %57, label %69

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 3, i32 0
  %59 = load float, float* %58, align 4
  %60 = fcmp ogt float %59, 0xBE80000000000000
  %61 = fcmp olt float %59, 0x3E80000000000000
  %62 = and i1 %60, %61
  br i1 %62, label %63, label %69

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 1, i32 3, i32 1
  %65 = load float, float* %64, align 4
  %66 = fcmp ule float %65, 0xBE80000000000000
  %67 = fcmp uge float %65, 0x3E80000000000000
  %68 = or i1 %66, %67
  br i1 %68, label %69, label %87

69:                                               ; preds = %63, %45, %51, %33, %39, %21, %27, %57
  tail call void @_ZN5blink15GraphicsContext4SaveEv(%"class.blink::GraphicsContext"* %19) #10
  %70 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = or i32 %71, 1
  %73 = icmp eq i32 %72, 3
  br i1 %73, label %75, label %74

74:                                               ; preds = %69
  tail call void @_ZN5blink15GraphicsContext15ClipRoundedRectERKNS_16FloatRoundedRectE8SkClipOpNS_16AntiAliasingModeE(%"class.blink::GraphicsContext"* %19, %"class.blink::FloatRoundedRect"* dereferenceable(48) %9, i32 1, i32 1) #10
  br label %75

75:                                               ; preds = %74, %69
  %76 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4
  %77 = tail call zeroext i1 @_ZNK5blink16FloatRoundedRect12IsRenderableEv(%"class.blink::FloatRoundedRect"* %76) #10
  br i1 %77, label %78, label %87

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 0, i32 1, i32 0
  %80 = load float, float* %79, align 4
  %81 = fcmp ugt float %80, 0.000000e+00
  br i1 %81, label %82, label %87

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 0, i32 1, i32 1
  %84 = load float, float* %83, align 4
  %85 = fcmp ugt float %84, 0.000000e+00
  br i1 %85, label %86, label %87

86:                                               ; preds = %82
  tail call void @_ZN5blink15GraphicsContext18ClipOutRoundedRectERKNS_16FloatRoundedRectE(%"class.blink::GraphicsContext"* %19, %"class.blink::FloatRoundedRect"* dereferenceable(48) %76) #10
  br label %87

87:                                               ; preds = %63, %82, %78, %75, %86
  %88 = phi i8 [ 1, %75 ], [ 1, %82 ], [ 1, %86 ], [ 1, %78 ], [ 0, %63 ]
  %89 = bitcast %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %89) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 200, i1 false)
  call void @_ZN5blink16BoxBorderPainter17ComplexBorderInfoC2ERKS0_b(%"struct.blink::BoxBorderPainter::ComplexBorderInfo"* nonnull %4, %"class.blink::BoxBorderPainter"* dereferenceable(184) %0, i1 zeroext true)
  %90 = call i32 @_ZNK5blink16BoxBorderPainter17PaintOpacityGroupERNS_15GraphicsContextERKNS0_17ComplexBorderInfoEjf(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %19, %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* nonnull dereferenceable(200) %4, i32 0, float 1.000000e+00)
  %91 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %4, i64 0, i32 1
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* %91) #10
  %92 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %94, label %118, label %96, !prof !3

96:                                               ; preds = %87
  %97 = load %"struct.blink::(anonymous namespace)::OpacityGroup"*, %"struct.blink::(anonymous namespace)::OpacityGroup"** %95, align 8
  %98 = zext i32 %93 to i64
  %99 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %97, i64 %98
  br label %100

100:                                              ; preds = %114, %96
  %101 = phi %"struct.blink::(anonymous namespace)::OpacityGroup"* [ %115, %114 ], [ %97, %96 ]
  %102 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %101, i64 0, i32 0, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105, !prof !3

105:                                              ; preds = %100
  store i32 0, i32* %102, align 4
  br label %106

106:                                              ; preds = %105, %100
  %107 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %101, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i32*, i32** %107, align 8
  %109 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %101, i64 0, i32 0, i32 0, i32 1, i64 0
  %110 = bitcast i8* %109 to i32*
  %111 = icmp eq i32* %108, %110
  br i1 %111, label %114, label %112, !prof !4

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %101, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1825"* %113, i32* %108) #10
  br label %114

114:                                              ; preds = %112, %106
  store i32* null, i32** %107, align 8
  %115 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %101, i64 1
  %116 = icmp eq %"struct.blink::(anonymous namespace)::OpacityGroup"* %115, %99
  br i1 %116, label %117, label %100

117:                                              ; preds = %114
  store i32 0, i32* %92, align 4
  br label %118

118:                                              ; preds = %117, %87
  %119 = load %"struct.blink::(anonymous namespace)::OpacityGroup"*, %"struct.blink::(anonymous namespace)::OpacityGroup"** %95, align 8
  %120 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %4, i64 0, i32 0, i32 0, i32 1, i64 0
  %121 = bitcast i8* %120 to %"struct.blink::(anonymous namespace)::OpacityGroup"*
  %122 = icmp eq %"struct.blink::(anonymous namespace)::OpacityGroup"* %119, %121
  br i1 %122, label %124, label %123, !prof !4

123:                                              ; preds = %118
  call fastcc void @_ZN3WTF12VectorBufferIN5blink12_GLOBAL__N_112OpacityGroupELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"struct.blink::(anonymous namespace)::OpacityGroup"* %119) #10
  br label %124

124:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %89) #10
  %125 = icmp eq i8 %88, 0
  br i1 %125, label %127, label %126

126:                                              ; preds = %124
  call void @_ZN5blink15GraphicsContext7RestoreEv(%"class.blink::GraphicsContext"* %19) #10
  br label %127

127:                                              ; preds = %13, %8, %126, %124, %17, %3
  ret void
}

declare void @_ZN5blink15GraphicsContext15ClipRoundedRectERKNS_16FloatRoundedRectE8SkClipOpNS_16AntiAliasingModeE(%"class.blink::GraphicsContext"*, %"class.blink::FloatRoundedRect"* dereferenceable(48), i32, i32) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext18ClipOutRoundedRectERKNS_16FloatRoundedRectE(%"class.blink::GraphicsContext"*, %"class.blink::FloatRoundedRect"* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16BoxBorderPainter17ComplexBorderInfoC2ERKS0_b(%"struct.blink::BoxBorderPainter::ComplexBorderInfo"*, %"class.blink::BoxBorderPainter"* dereferenceable(184), i1 zeroext) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.anon, align 8
  %5 = alloca %"class.WTF::Vector.1824", align 8
  %6 = alloca i32, align 4
  %7 = zext i1 %2 to i8
  %8 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %0, i64 0, i32 0, i32 0, i32 1, i64 0
  %9 = bitcast %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %0 to i8**
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 4, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %0, i64 0, i32 1
  tail call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* %12) #10
  %13 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %0, i64 0, i32 2
  store i8 %7, i8* %13, align 8
  %14 = bitcast %"class.WTF::Vector.1824"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %5, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %5, i64 0, i32 0, i32 1, i64 0
  %19 = bitcast %"class.WTF::Vector.1824"* %5 to i8**
  %20 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %5, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  store i8* %18, i8** %19, align 8
  store i32 4, i32* %16, align 8
  store i32 0, i32* %17, align 4
  %21 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %1, i64 0, i32 7
  %22 = load i32, i32* %21, align 4
  %23 = icmp ult i32 %22, 4
  %24 = bitcast i8* %18 to i32*
  br i1 %23, label %25, label %32

25:                                               ; preds = %3
  %26 = bitcast i32* %6 to i8*
  %27 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %1, i64 0, i32 8
  br label %41

28:                                               ; preds = %58
  %29 = load i32*, i32** %15, align 8
  %30 = load i32, i32* %17, align 4
  %31 = zext i32 %30 to i64
  br label %32

32:                                               ; preds = %28, %3
  %33 = phi i64 [ %31, %28 ], [ 0, %3 ]
  %34 = phi i32* [ %29, %28 ], [ %24, %3 ]
  %35 = getelementptr inbounds i32, i32* %34, i64 %33
  %36 = bitcast %class.anon* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = getelementptr inbounds %class.anon, %class.anon* %4, i64 0, i32 0
  store %"class.blink::BoxBorderPainter"* %1, %"class.blink::BoxBorderPainter"** %37, align 8
  call void @_ZNSt3__16__sortIRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEvT0_SA_T_(i32* %34, i32* %35, %class.anon* nonnull dereferenceable(8) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  call void @_ZN5blink16BoxBorderPainter17ComplexBorderInfo18BuildOpacityGroupsERKS0_RKN3WTF6VectorINS_7BoxSideELj4ENS4_18PartitionAllocatorEEE(%"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %0, %"class.blink::BoxBorderPainter"* dereferenceable(184) %1, %"class.WTF::Vector.1824"* nonnull dereferenceable(32) %5)
  %38 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %1, i64 0, i32 12
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %63, label %61

41:                                               ; preds = %58, %25
  %42 = phi i32 [ %22, %25 ], [ %59, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #10
  store i32 %42, i32* %6, align 4
  %43 = load i32, i32* %27, align 8
  %44 = shl i32 1, %42
  %45 = and i32 %43, %44
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %58, label %47

47:                                               ; preds = %41
  %48 = load i32, i32* %17, align 4
  %49 = load i32, i32* %16, align 8
  %50 = icmp eq i32 %48, %49
  br i1 %50, label %57, label %51, !prof !3

51:                                               ; preds = %47
  %52 = load i32*, i32** %15, align 8
  %53 = zext i32 %48 to i64
  %54 = getelementptr inbounds i32, i32* %52, i64 %53
  store i32 %42, i32* %54, align 4
  %55 = load i32, i32* %17, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %17, align 4
  br label %58

57:                                               ; preds = %47
  call void @_ZN3WTF6VectorIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1824"* nonnull %5, i32* nonnull dereferenceable(4) %6) #10
  br label %58

58:                                               ; preds = %41, %57, %51
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #10
  %59 = add i32 %42, 1
  %60 = icmp eq i32 %59, 4
  br i1 %60, label %28, label %41

61:                                               ; preds = %32
  %62 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %1, i64 0, i32 3
  call void @_ZN5blink4Path14AddRoundedRectERKNS_16FloatRoundedRectE(%"class.blink::Path"* %12, %"class.blink::FloatRoundedRect"* dereferenceable(48) %62) #10
  br label %63

63:                                               ; preds = %32, %61
  %64 = load i32, i32* %17, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %67, label %66, !prof !3

66:                                               ; preds = %63
  store i32 0, i32* %17, align 4
  br label %67

67:                                               ; preds = %66, %63
  %68 = load i32*, i32** %15, align 8
  %69 = icmp eq i32* %68, %24
  br i1 %69, label %72, label %70, !prof !4

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %5, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1825"* nonnull %71, i32* %68) #10
  br label %72

72:                                               ; preds = %67, %70
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16BoxBorderPainter17PaintOpacityGroupERNS_15GraphicsContextERKNS0_17ComplexBorderInfoEjf(%"class.blink::BoxBorderPainter"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* dereferenceable(200), i32, float) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %class.sk_sp.817, align 8
  %10 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp ugt i32 %11, %3
  br i1 %12, label %17, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 8
  %15 = load i32, i32* %14, align 8
  %16 = xor i32 %15, -1
  br label %96

17:                                               ; preds = %5
  %18 = xor i32 %3, -1
  %19 = add i32 %11, %18
  %20 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = icmp ugt i32 %11, %19
  br i1 %23, label %24, label %25

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  store i8* null, i8** %21, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %19) #10
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %11) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %26, i8* %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  store i8* %29, i8** %21, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %7) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %35 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.blink::(anonymous namespace)::OpacityGroup"*, %"struct.blink::(anonymous namespace)::OpacityGroup"** %35, align 8
  %37 = zext i32 %19 to i64
  %38 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %36, i64 %37, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = uitofp i32 %39 to float
  %41 = fdiv float %40, %4
  %42 = fptoui float %41 to i32
  %43 = icmp eq i32 %39, 255
  br i1 %43, label %72, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %36, i64 %37, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 5
  %48 = icmp ne i32 %47, 0
  %49 = and i32 %46, 10
  %50 = icmp ne i32 %49, 0
  %51 = and i1 %50, %48
  br i1 %51, label %56, label %52

52:                                               ; preds = %44
  %53 = add nuw i32 %3, 1
  %54 = load i32, i32* %10, align 4
  %55 = icmp ult i32 %53, %54
  br i1 %55, label %56, label %72

56:                                               ; preds = %44, %52
  %57 = fdiv float %40, 2.550000e+02
  %58 = fdiv float %57, %4
  %59 = getelementptr inbounds %class.sk_sp.817, %class.sk_sp.817* %9, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %59, align 8
  call void @_ZN5blink15GraphicsContext10BeginLayerEf11SkBlendModePKNS_9FloatRectENS_11ColorFilterE5sk_spIN2cc11PaintFilterEE(%"class.blink::GraphicsContext"* %1, float %58, i32 3, %"class.blink::FloatRect"* null, i32 0, %class.sk_sp.817* nonnull %9) #10
  %60 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %59, align 8
  %61 = icmp eq %"class.cc::PaintFilter"* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %60, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %"class.cc::PaintFilter"* %60 to %class.SkRefCntBase*
  %68 = bitcast %"class.cc::PaintFilter"* %60 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  call void %71(%class.SkRefCntBase* nonnull %67) #10
  br label %72

72:                                               ; preds = %34, %66, %62, %56, %52
  %73 = phi i1 [ false, %52 ], [ true, %56 ], [ true, %62 ], [ true, %66 ], [ false, %34 ]
  %74 = phi i32 [ %42, %52 ], [ 255, %56 ], [ 255, %62 ], [ 255, %66 ], [ %42, %34 ]
  %75 = phi float [ %4, %52 ], [ %57, %56 ], [ %57, %62 ], [ %57, %66 ], [ %4, %34 ]
  %76 = add nuw i32 %3, 1
  %77 = call i32 @_ZNK5blink16BoxBorderPainter17PaintOpacityGroupERNS_15GraphicsContextERKNS0_17ComplexBorderInfoEjf(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* dereferenceable(200) %2, i32 %76, float %75)
  %78 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %36, i64 %37, i32 0, i32 0, i32 0, i32 0
  %79 = load i32*, i32** %78, align 8
  %80 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %36, i64 %37, i32 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds i32, i32* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %87, %72
  %86 = phi i32 [ %77, %72 ], [ %92, %87 ]
  br i1 %73, label %95, label %96

87:                                               ; preds = %72, %87
  %88 = phi i32* [ %93, %87 ], [ %79, %72 ]
  %89 = phi i32 [ %92, %87 ], [ %77, %72 ]
  %90 = load i32, i32* %88, align 4
  call void @_ZNK5blink16BoxBorderPainter9PaintSideERNS_15GraphicsContextERKNS0_17ComplexBorderInfoENS_7BoxSideEjj(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* dereferenceable(200) %2, i32 %90, i32 %74, i32 %89)
  %91 = shl i32 1, %90
  %92 = or i32 %91, %89
  %93 = getelementptr inbounds i32, i32* %88, i64 1
  %94 = icmp eq i32* %93, %83
  br i1 %94, label %85, label %87

95:                                               ; preds = %85
  call void @_ZN5blink15GraphicsContext8EndLayerEv(%"class.blink::GraphicsContext"* %1) #10
  br label %96

96:                                               ; preds = %85, %95, %13
  %97 = phi i32 [ %16, %13 ], [ %86, %95 ], [ %86, %85 ]
  ret i32 %97
}

declare void @_ZN5blink15GraphicsContext10BeginLayerEf11SkBlendModePKNS_9FloatRectENS_11ColorFilterE5sk_spIN2cc11PaintFilterEE(%"class.blink::GraphicsContext"*, float, i32, %"class.blink::FloatRect"*, i32, %class.sk_sp.817*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16BoxBorderPainter9PaintSideERNS_15GraphicsContextERKNS0_17ComplexBorderInfoENS_7BoxSideEjj(%"class.blink::BoxBorderPainter"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* readonly dereferenceable(200), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::FloatRect", align 4
  %8 = zext i32 %3 to i64
  %9 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = lshr i32 %10, 16
  %12 = and i32 %11, 255
  %13 = lshr i32 %10, 8
  %14 = and i32 %13, 255
  %15 = and i32 %10, 255
  %16 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 %12, i32 %14, i32 %15, i32 %4) #10
  %17 = bitcast %"class.blink::FloatRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %7, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %7, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %7, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %7, i64 0, i32 1, i32 1
  %22 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 0
  %23 = bitcast %"class.blink::FloatRect"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 %23, i64 16, i1 false)
  switch i32 %3, label %208 [
    i32 0, label %24
    i32 2, label %68
    i32 3, label %116
    i32 1, label %160
  ]

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 12
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %59, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %8, i32 2
  %30 = load i8, i8* %29, align 1
  %31 = and i8 %30, 15
  %32 = zext i8 %31 to i32
  switch i32 %32, label %33 [
    i32 5, label %57
    i32 3, label %57
    i32 9, label %57
  ]

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %35 = load float, float* %34, align 4
  %36 = fcmp ogt float %35, 0xBE80000000000000
  %37 = fcmp olt float %35, 0x3E80000000000000
  %38 = and i1 %36, %37
  br i1 %38, label %39, label %57

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %41 = load float, float* %40, align 4
  %42 = fcmp ogt float %41, 0xBE80000000000000
  %43 = fcmp olt float %41, 0x3E80000000000000
  %44 = and i1 %42, %43
  br i1 %44, label %45, label %57

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 1, i32 0
  %47 = load float, float* %46, align 4
  %48 = fcmp ogt float %47, 0xBE80000000000000
  %49 = fcmp olt float %47, 0x3E80000000000000
  %50 = and i1 %48, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 1, i32 1
  %53 = load float, float* %52, align 4
  %54 = fcmp ule float %53, 0xBE80000000000000
  %55 = fcmp uge float %53, 0x3E80000000000000
  %56 = or i1 %54, %55
  br i1 %56, label %57, label %59

57:                                               ; preds = %51, %45, %33, %39, %28, %28, %28
  %58 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %2, i64 0, i32 1
  br label %63

59:                                               ; preds = %51, %24
  %60 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %8, i32 3
  %61 = load float, float* %60, align 4
  %62 = tail call float @llvm.floor.f32(float %61)
  store float %62, float* %21, align 4
  br label %63

63:                                               ; preds = %59, %57
  %64 = phi %"class.blink::Path"* [ %58, %57 ], [ null, %59 ]
  %65 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %2, i64 0, i32 2
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp ne i8 %66, 0
  call void @_ZNK5blink16BoxBorderPainter18PaintOneBorderSideERNS_15GraphicsContextERKNS_9FloatRectENS_7BoxSideES6_S6_PKNS_4PathEbNS_5ColorEj(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"class.blink::FloatRect"* nonnull dereferenceable(16) %7, i32 0, i32 3, i32 1, %"class.blink::Path"* %64, i1 zeroext %67, i32 %16, i32 %5)
  br label %208

68:                                               ; preds = %6
  %69 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 12
  %70 = load i8, i8* %69, align 1, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %103, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %8, i32 2
  %74 = load i8, i8* %73, align 1
  %75 = and i8 %74, 15
  %76 = zext i8 %75 to i32
  switch i32 %76, label %77 [
    i32 5, label %101
    i32 3, label %101
    i32 9, label %101
  ]

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 2, i32 0
  %79 = load float, float* %78, align 4
  %80 = fcmp ogt float %79, 0xBE80000000000000
  %81 = fcmp olt float %79, 0x3E80000000000000
  %82 = and i1 %80, %81
  br i1 %82, label %83, label %101

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 2, i32 1
  %85 = load float, float* %84, align 4
  %86 = fcmp ogt float %85, 0xBE80000000000000
  %87 = fcmp olt float %85, 0x3E80000000000000
  %88 = and i1 %86, %87
  br i1 %88, label %89, label %101

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 3, i32 0
  %91 = load float, float* %90, align 4
  %92 = fcmp ogt float %91, 0xBE80000000000000
  %93 = fcmp olt float %91, 0x3E80000000000000
  %94 = and i1 %92, %93
  br i1 %94, label %95, label %101

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 3, i32 1
  %97 = load float, float* %96, align 4
  %98 = fcmp ule float %97, 0xBE80000000000000
  %99 = fcmp uge float %97, 0x3E80000000000000
  %100 = or i1 %98, %99
  br i1 %100, label %101, label %103

101:                                              ; preds = %95, %89, %77, %83, %72, %72, %72
  %102 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %2, i64 0, i32 1
  br label %111

103:                                              ; preds = %95, %68
  %104 = load float, float* %19, align 4
  %105 = load float, float* %21, align 4
  %106 = fadd float %104, %105
  %107 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %8, i32 3
  %108 = load float, float* %107, align 4
  %109 = tail call float @llvm.floor.f32(float %108)
  %110 = fsub float %106, %109
  call void @_ZN5blink9FloatRect12ShiftYEdgeToEf(%"class.blink::FloatRect"* nonnull %7, float %110) #10
  br label %111

111:                                              ; preds = %103, %101
  %112 = phi %"class.blink::Path"* [ %102, %101 ], [ null, %103 ]
  %113 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %2, i64 0, i32 2
  %114 = load i8, i8* %113, align 8, !range !2
  %115 = icmp ne i8 %114, 0
  call void @_ZNK5blink16BoxBorderPainter18PaintOneBorderSideERNS_15GraphicsContextERKNS_9FloatRectENS_7BoxSideES6_S6_PKNS_4PathEbNS_5ColorEj(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"class.blink::FloatRect"* nonnull dereferenceable(16) %7, i32 2, i32 3, i32 1, %"class.blink::Path"* %112, i1 zeroext %115, i32 %16, i32 %5)
  br label %208

116:                                              ; preds = %6
  %117 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 12
  %118 = load i8, i8* %117, align 1, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %151, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %8, i32 2
  %122 = load i8, i8* %121, align 1
  %123 = and i8 %122, 15
  %124 = zext i8 %123 to i32
  switch i32 %124, label %125 [
    i32 5, label %149
    i32 3, label %149
    i32 9, label %149
  ]

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 2, i32 0
  %127 = load float, float* %126, align 4
  %128 = fcmp ogt float %127, 0xBE80000000000000
  %129 = fcmp olt float %127, 0x3E80000000000000
  %130 = and i1 %128, %129
  br i1 %130, label %131, label %149

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 2, i32 1
  %133 = load float, float* %132, align 4
  %134 = fcmp ogt float %133, 0xBE80000000000000
  %135 = fcmp olt float %133, 0x3E80000000000000
  %136 = and i1 %134, %135
  br i1 %136, label %137, label %149

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %139 = load float, float* %138, align 4
  %140 = fcmp ogt float %139, 0xBE80000000000000
  %141 = fcmp olt float %139, 0x3E80000000000000
  %142 = and i1 %140, %141
  br i1 %142, label %143, label %149

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %145 = load float, float* %144, align 4
  %146 = fcmp ule float %145, 0xBE80000000000000
  %147 = fcmp uge float %145, 0x3E80000000000000
  %148 = or i1 %146, %147
  br i1 %148, label %149, label %151

149:                                              ; preds = %143, %137, %125, %131, %120, %120, %120
  %150 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %2, i64 0, i32 1
  br label %155

151:                                              ; preds = %143, %116
  %152 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %8, i32 3
  %153 = load float, float* %152, align 4
  %154 = tail call float @llvm.floor.f32(float %153)
  store float %154, float* %20, align 4
  br label %155

155:                                              ; preds = %151, %149
  %156 = phi %"class.blink::Path"* [ %150, %149 ], [ null, %151 ]
  %157 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %2, i64 0, i32 2
  %158 = load i8, i8* %157, align 8, !range !2
  %159 = icmp ne i8 %158, 0
  call void @_ZNK5blink16BoxBorderPainter18PaintOneBorderSideERNS_15GraphicsContextERKNS_9FloatRectENS_7BoxSideES6_S6_PKNS_4PathEbNS_5ColorEj(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"class.blink::FloatRect"* nonnull dereferenceable(16) %7, i32 3, i32 0, i32 2, %"class.blink::Path"* %156, i1 zeroext %159, i32 %16, i32 %5)
  br label %208

160:                                              ; preds = %6
  %161 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 12
  %162 = load i8, i8* %161, align 1, !range !2
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %195, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %8, i32 2
  %166 = load i8, i8* %165, align 1
  %167 = and i8 %166, 15
  %168 = zext i8 %167 to i32
  switch i32 %168, label %169 [
    i32 5, label %193
    i32 3, label %193
    i32 9, label %193
  ]

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 3, i32 0
  %171 = load float, float* %170, align 4
  %172 = fcmp ogt float %171, 0xBE80000000000000
  %173 = fcmp olt float %171, 0x3E80000000000000
  %174 = and i1 %172, %173
  br i1 %174, label %175, label %193

175:                                              ; preds = %169
  %176 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 3, i32 1
  %177 = load float, float* %176, align 4
  %178 = fcmp ogt float %177, 0xBE80000000000000
  %179 = fcmp olt float %177, 0x3E80000000000000
  %180 = and i1 %178, %179
  br i1 %180, label %181, label %193

181:                                              ; preds = %175
  %182 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 1, i32 0
  %183 = load float, float* %182, align 4
  %184 = fcmp ogt float %183, 0xBE80000000000000
  %185 = fcmp olt float %183, 0x3E80000000000000
  %186 = and i1 %184, %185
  br i1 %186, label %187, label %193

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 1, i32 1
  %189 = load float, float* %188, align 4
  %190 = fcmp ule float %189, 0xBE80000000000000
  %191 = fcmp uge float %189, 0x3E80000000000000
  %192 = or i1 %190, %191
  br i1 %192, label %193, label %195

193:                                              ; preds = %187, %181, %169, %175, %164, %164, %164
  %194 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %2, i64 0, i32 1
  br label %203

195:                                              ; preds = %187, %160
  %196 = load float, float* %18, align 4
  %197 = load float, float* %20, align 4
  %198 = fadd float %196, %197
  %199 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %8, i32 3
  %200 = load float, float* %199, align 4
  %201 = tail call float @llvm.floor.f32(float %200)
  %202 = fsub float %198, %201
  call void @_ZN5blink9FloatRect12ShiftXEdgeToEf(%"class.blink::FloatRect"* nonnull %7, float %202) #10
  br label %203

203:                                              ; preds = %195, %193
  %204 = phi %"class.blink::Path"* [ %194, %193 ], [ null, %195 ]
  %205 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %2, i64 0, i32 2
  %206 = load i8, i8* %205, align 8, !range !2
  %207 = icmp ne i8 %206, 0
  call void @_ZNK5blink16BoxBorderPainter18PaintOneBorderSideERNS_15GraphicsContextERKNS_9FloatRectENS_7BoxSideES6_S6_PKNS_4PathEbNS_5ColorEj(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"class.blink::FloatRect"* nonnull dereferenceable(16) %7, i32 1, i32 0, i32 2, %"class.blink::Path"* %204, i1 zeroext %207, i32 %16, i32 %5)
  br label %208

208:                                              ; preds = %6, %203, %155, %111, %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  ret void
}

declare void @_ZN5blink15GraphicsContext8EndLayerEv(%"class.blink::GraphicsContext"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16BoxBorderPainter18PaintOneBorderSideERNS_15GraphicsContextERKNS_9FloatRectENS_7BoxSideES6_S6_PKNS_4PathEbNS_5ColorEj(%"class.blink::BoxBorderPainter"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"class.blink::FloatRect"* nocapture readonly dereferenceable(16), i32, i32, i32, %"class.blink::Path"* readnone, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %11 = alloca { i64, i64 }, align 8
  %12 = bitcast { i64, i64 }* %11 to %"struct.blink::PhysicalRect"*
  %13 = zext i32 %3 to i64
  %14 = zext i32 %4 to i64
  %15 = zext i32 %5 to i64
  %16 = icmp eq %"class.blink::Path"* %6, null
  br i1 %16, label %150, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %14
  %19 = tail call zeroext i1 @_ZNK5blink10BorderEdge12ShouldRenderEv(%"struct.blink::BorderEdge"* %18) #10
  br i1 %19, label %20, label %38

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %13
  %22 = tail call zeroext i1 @_ZNK5blink10BorderEdge15SharesColorWithERKS0_(%"struct.blink::BorderEdge"* %21, %"struct.blink::BorderEdge"* dereferenceable(12) %18) #10
  br i1 %22, label %23, label %38

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %13, i32 2
  %25 = load i8, i8* %24, align 1
  %26 = and i8 %25, 15
  %27 = zext i8 %26 to i32
  %28 = add nsw i32 %27, -2
  %29 = icmp ult i32 %28, 4
  br i1 %29, label %30, label %38

30:                                               ; preds = %23
  %31 = shl i32 1, %3
  %32 = shl i32 1, %4
  %33 = or i32 %32, %31
  %34 = icmp ne i32 %33, 3
  %35 = icmp ne i32 %33, 12
  %36 = and i1 %34, %35
  %37 = select i1 %36, i32 2, i32 1
  br label %38

38:                                               ; preds = %17, %20, %23, %30
  %39 = phi i32 [ 1, %17 ], [ 1, %20 ], [ %37, %30 ], [ 2, %23 ]
  %40 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %15
  %41 = tail call zeroext i1 @_ZNK5blink10BorderEdge12ShouldRenderEv(%"struct.blink::BorderEdge"* %40) #10
  br i1 %41, label %42, label %60

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %13
  %44 = tail call zeroext i1 @_ZNK5blink10BorderEdge15SharesColorWithERKS0_(%"struct.blink::BorderEdge"* %43, %"struct.blink::BorderEdge"* dereferenceable(12) %40) #10
  br i1 %44, label %45, label %60

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %13, i32 2
  %47 = load i8, i8* %46, align 1
  %48 = and i8 %47, 15
  %49 = zext i8 %48 to i32
  %50 = add nsw i32 %49, -2
  %51 = icmp ult i32 %50, 4
  br i1 %51, label %52, label %60

52:                                               ; preds = %45
  %53 = shl i32 1, %3
  %54 = shl i32 1, %5
  %55 = or i32 %54, %53
  %56 = icmp ne i32 %55, 3
  %57 = icmp ne i32 %55, 12
  %58 = and i1 %56, %57
  %59 = select i1 %58, i32 2, i32 1
  br label %60

60:                                               ; preds = %38, %42, %45, %52
  %61 = phi i32 [ 1, %38 ], [ 1, %42 ], [ %59, %52 ], [ 2, %45 ]
  tail call void @_ZN5blink15GraphicsContext4SaveEv(%"class.blink::GraphicsContext"* %1) #10
  %62 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4
  %63 = tail call zeroext i1 @_ZNK5blink16FloatRoundedRect12IsRenderableEv(%"class.blink::FloatRoundedRect"* %62) #10
  br i1 %63, label %64, label %65

64:                                               ; preds = %60
  tail call void @_ZNK5blink16BoxBorderPainter21ClipBorderSidePolygonERNS_15GraphicsContextENS_7BoxSideENS0_9MiterTypeES4_(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, i32 %3, i32 %39, i32 %61)
  br label %66

65:                                               ; preds = %60
  tail call void @_ZNK5blink16BoxBorderPainter33ClipBorderSideForComplexInnerPathERNS_15GraphicsContextENS_7BoxSideE(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, i32 %3)
  br label %66

66:                                               ; preds = %65, %64
  %67 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %13, i32 3
  %68 = load float, float* %67, align 4
  %69 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %14, i32 3
  %70 = load float, float* %69, align 4
  %71 = fcmp olt float %68, %70
  %72 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %15, i32 3
  %73 = load float, float* %72, align 4
  %74 = select i1 %71, float %70, float %68
  %75 = fcmp olt float %74, %73
  %76 = select i1 %75, float %73, float %74
  %77 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #10
  %78 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %79 = load float, float* %78, align 4
  %80 = fmul float %79, 6.400000e+01
  %81 = tail call float @llvm.floor.f32(float %80) #10
  %82 = fcmp ult float %81, 0xC1E0000000000000
  %83 = fcmp ugt float %81, 0x41DFFFFFE0000000
  %84 = fcmp ogt float %81, 0xC1E0000000000000
  %85 = select i1 %84, float %81, float 0xC1E0000000000000
  %86 = fptosi float %85 to i32
  %87 = select i1 %82, i32 0, i32 2147483647
  %88 = select i1 %83, i32 %87, i32 %86
  %89 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %90 = load float, float* %89, align 4
  %91 = fmul float %90, 6.400000e+01
  %92 = tail call float @llvm.floor.f32(float %91) #10
  %93 = fcmp ult float %92, 0xC1E0000000000000
  %94 = fcmp ugt float %92, 0x41DFFFFFE0000000
  %95 = fcmp ogt float %92, 0xC1E0000000000000
  %96 = select i1 %95, float %92, float 0xC1E0000000000000
  %97 = fptosi float %96 to i32
  %98 = select i1 %93, i32 0, i32 2147483647
  %99 = select i1 %94, i32 %98, i32 %97
  %100 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %101 = load float, float* %100, align 4
  %102 = fadd float %79, %101
  %103 = fmul float %102, 6.400000e+01
  %104 = tail call float @llvm.ceil.f32(float %103) #10
  %105 = fcmp ult float %104, 0xC1E0000000000000
  %106 = fcmp ugt float %104, 0x41DFFFFFE0000000
  %107 = fcmp ogt float %104, 0xC1E0000000000000
  %108 = select i1 %107, float %104, float 0xC1E0000000000000
  %109 = fptosi float %108 to i32
  %110 = select i1 %105, i32 0, i32 2147483647
  %111 = select i1 %106, i32 %110, i32 %109
  %112 = icmp sgt i32 %88, -1
  %113 = select i1 %112, i32 -2147483648, i32 2147483647
  %114 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %111, i32 %88) #10
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 %113, i32 %116, !prof !3
  %118 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 0, i32 1, i32 1
  %119 = load float, float* %118, align 4
  %120 = fadd float %90, %119
  %121 = fmul float %120, 6.400000e+01
  %122 = tail call float @llvm.ceil.f32(float %121) #10
  %123 = fcmp ult float %122, 0xC1E0000000000000
  %124 = fcmp ugt float %122, 0x41DFFFFFE0000000
  %125 = fcmp ogt float %122, 0xC1E0000000000000
  %126 = select i1 %125, float %122, float 0xC1E0000000000000
  %127 = fptosi float %126 to i32
  %128 = select i1 %123, i32 0, i32 2147483647
  %129 = select i1 %124, i32 %128, i32 %127
  %130 = icmp sgt i32 %99, -1
  %131 = select i1 %130, i32 -2147483648, i32 2147483647
  %132 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %129, i32 %99) #10
  %133 = extractvalue { i32, i1 } %132, 1
  %134 = extractvalue { i32, i1 } %132, 0
  %135 = select i1 %133, i32 %131, i32 %134, !prof !3
  %136 = zext i32 %99 to i64
  %137 = shl nuw i64 %136, 32
  %138 = zext i32 %88 to i64
  %139 = or i64 %137, %138
  %140 = zext i32 %135 to i64
  %141 = shl nuw i64 %140, 32
  %142 = zext i32 %117 to i64
  %143 = or i64 %141, %142
  %144 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  store i64 %139, i64* %144, align 8
  %145 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  store i64 %143, i64* %145, align 8
  %146 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %13, i32 2
  %147 = load i8, i8* %146, align 1
  %148 = and i8 %147, 15
  %149 = zext i8 %148 to i32
  call void @_ZNK5blink16BoxBorderPainter19DrawBoxSideFromPathERNS_15GraphicsContextERKNS_12PhysicalRectERKNS_4PathEffNS_7BoxSideENS_5ColorENS_12EBorderStyleE(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %12, %"class.blink::Path"* nonnull dereferenceable(16) %6, float %68, float %76, i32 %3, i32 %8, i32 %149)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #10
  call void @_ZN5blink15GraphicsContext7RestoreEv(%"class.blink::GraphicsContext"* %1) #10
  br label %207

150:                                              ; preds = %10
  %151 = tail call i32 @_ZNK5blink16BoxBorderPainter12ComputeMiterENS_7BoxSideES1_jb(%"class.blink::BoxBorderPainter"* %0, i32 %3, i32 %4, i32 %9, i1 zeroext %7)
  %152 = tail call i32 @_ZNK5blink16BoxBorderPainter12ComputeMiterENS_7BoxSideES1_jb(%"class.blink::BoxBorderPainter"* %0, i32 %3, i32 %5, i32 %9, i1 zeroext %7)
  %153 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %13, i32 2
  %154 = load i8, i8* %153, align 1
  %155 = and i8 %154, 14
  br i1 %7, label %156, label %160

156:                                              ; preds = %150
  %157 = icmp eq i32 %151, 2
  %158 = icmp eq i32 %152, 2
  %159 = or i1 %157, %158
  br i1 %159, label %170, label %164

160:                                              ; preds = %150
  %161 = icmp eq i32 %151, 1
  %162 = icmp eq i32 %152, 1
  %163 = or i1 %161, %162
  br i1 %163, label %170, label %164

164:                                              ; preds = %160, %156
  %165 = or i32 %152, %151
  %166 = icmp ne i32 %165, 0
  %167 = or i8 %155, 1
  %168 = icmp eq i8 %167, 7
  %169 = and i1 %166, %168
  br i1 %169, label %170, label %172

170:                                              ; preds = %164, %156, %160
  tail call void @_ZN5blink15GraphicsContext4SaveEv(%"class.blink::GraphicsContext"* %1) #10
  tail call void @_ZNK5blink16BoxBorderPainter21ClipBorderSidePolygonERNS_15GraphicsContextENS_7BoxSideENS0_9MiterTypeES4_(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, i32 %3, i32 %151, i32 %152)
  %171 = load i8, i8* %153, align 1
  br label %172

172:                                              ; preds = %164, %170
  %173 = phi i8 [ %171, %170 ], [ %154, %164 ]
  %174 = phi i8 [ 1, %170 ], [ 0, %164 ]
  %175 = phi i32 [ 0, %170 ], [ %151, %164 ]
  %176 = phi i32 [ 0, %170 ], [ %152, %164 ]
  %177 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 0
  %178 = load float, float* %177, align 4
  %179 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 1
  %180 = load float, float* %179, align 4
  %181 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1, i32 0
  %182 = load float, float* %181, align 4
  %183 = fadd float %178, %182
  %184 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1, i32 1
  %185 = load float, float* %184, align 4
  %186 = fadd float %180, %185
  %187 = and i8 %173, 15
  %188 = zext i8 %187 to i32
  %189 = icmp eq i32 %175, 0
  br i1 %189, label %195, label %190

190:                                              ; preds = %172
  %191 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %14, i32 3
  %192 = load float, float* %191, align 4
  %193 = tail call float @llvm.floor.f32(float %192)
  %194 = fptosi float %193 to i32
  br label %195

195:                                              ; preds = %172, %190
  %196 = phi i32 [ %194, %190 ], [ 0, %172 ]
  %197 = icmp eq i32 %176, 0
  br i1 %197, label %203, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %15, i32 3
  %200 = load float, float* %199, align 4
  %201 = tail call float @llvm.floor.f32(float %200)
  %202 = fptosi float %201 to i32
  br label %203

203:                                              ; preds = %195, %198
  %204 = phi i32 [ %202, %198 ], [ 0, %195 ]
  tail call void @_ZN5blink17ObjectPainterBase18DrawLineForBoxSideERNS_15GraphicsContextEffffNS_7BoxSideENS_5ColorENS_12EBorderStyleEiib(%"class.blink::GraphicsContext"* dereferenceable(112) %1, float %178, float %180, float %183, float %186, i32 %3, i32 %8, i32 %188, i32 %196, i32 %204, i1 zeroext %7) #10
  %205 = icmp eq i8 %174, 0
  br i1 %205, label %207, label %206

206:                                              ; preds = %203
  tail call void @_ZN5blink15GraphicsContext7RestoreEv(%"class.blink::GraphicsContext"* %1) #10
  br label %207

207:                                              ; preds = %206, %203, %66
  ret void
}

declare void @_ZN5blink9FloatRect12ShiftYEdgeToEf(%"class.blink::FloatRect"*, float) local_unnamed_addr #2

declare void @_ZN5blink9FloatRect12ShiftXEdgeToEf(%"class.blink::FloatRect"*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16BoxBorderPainter12ComputeMiterENS_7BoxSideES1_jb(%"class.blink::BoxBorderPainter"*, i32, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = zext i32 %2 to i64
  %7 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %6, i32 1
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %57, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %6, i32 2
  %12 = shl i32 1, %2
  %13 = and i32 %12, %3
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %10
  %16 = load i8, i8* %11, align 1
  %17 = and i8 %16, 15
  %18 = zext i8 %17 to i32
  switch i32 %18, label %57 [
    i32 9, label %19
    i32 7, label %19
    i32 6, label %19
  ]

19:                                               ; preds = %15, %15, %15, %10
  %20 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %6
  %21 = tail call zeroext i1 @_ZNK5blink10BorderEdge12ShouldRenderEv(%"struct.blink::BorderEdge"* %20) #10
  br i1 %21, label %22, label %36

22:                                               ; preds = %19
  %23 = zext i32 %1 to i64
  %24 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %23
  %25 = tail call zeroext i1 @_ZNK5blink10BorderEdge15SharesColorWithERKS0_(%"struct.blink::BorderEdge"* %24, %"struct.blink::BorderEdge"* dereferenceable(12) %20) #10
  br i1 %25, label %26, label %36

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 %23, i32 2
  %28 = load i8, i8* %27, align 1
  %29 = and i8 %28, 15
  %30 = zext i8 %29 to i32
  %31 = add nsw i32 %30, -2
  %32 = icmp ult i32 %31, 4
  br i1 %32, label %33, label %38

33:                                               ; preds = %26
  %34 = shl i32 1, %1
  %35 = or i32 %12, %34
  switch i32 %35, label %38 [
    i32 12, label %36
    i32 3, label %36
  ]

36:                                               ; preds = %33, %33, %22, %19
  %37 = select i1 %4, i32 1, i32 2
  br label %57

38:                                               ; preds = %33, %26
  %39 = load i8, i8* %11, align 1
  %40 = and i8 %39, 15
  %41 = zext i8 %40 to i32
  %42 = icmp eq i8 %29, 9
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  switch i32 %41, label %44 [
    i32 9, label %56
    i32 5, label %56
    i32 3, label %56
  ]

44:                                               ; preds = %43
  %45 = or i32 %30, 1
  %46 = icmp ne i32 %45, 7
  %47 = or i32 %41, 1
  %48 = icmp eq i32 %47, 7
  %49 = xor i1 %46, %48
  %50 = icmp eq i8 %29, %40
  %51 = and i1 %50, %49
  br i1 %51, label %52, label %56

52:                                               ; preds = %44
  br i1 %32, label %53, label %57

53:                                               ; preds = %52
  %54 = shl i32 1, %1
  %55 = or i32 %12, %54
  switch i32 %55, label %57 [
    i32 12, label %56
    i32 3, label %56
  ]

56:                                               ; preds = %53, %53, %38, %44, %43, %43, %43
  br label %57

57:                                               ; preds = %53, %15, %52, %56, %5, %36
  %58 = phi i32 [ %37, %36 ], [ 0, %5 ], [ 0, %15 ], [ 2, %56 ], [ 0, %53 ], [ 0, %52 ]
  ret i32 %58
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink16BoxBorderPainter21MitersRequireClippingENS0_9MiterTypeES1_NS_12EBorderStyleEb(i32, i32, i32, i1 zeroext) local_unnamed_addr #5 align 2 {
  br i1 %3, label %5, label %9

5:                                                ; preds = %4
  %6 = icmp eq i32 %0, 2
  %7 = icmp eq i32 %1, 2
  %8 = or i1 %6, %7
  br i1 %8, label %19, label %13

9:                                                ; preds = %4
  %10 = icmp eq i32 %0, 1
  %11 = icmp eq i32 %1, 1
  %12 = or i1 %10, %11
  br i1 %12, label %19, label %13

13:                                               ; preds = %5, %9
  %14 = or i32 %1, %0
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = or i32 %2, 1
  %18 = icmp eq i32 %17, 7
  br label %19

19:                                               ; preds = %5, %13, %16, %9
  %20 = phi i1 [ true, %9 ], [ %18, %16 ], [ false, %13 ], [ true, %5 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16BoxBorderPainter21ClipBorderSidePolygonERNS_15GraphicsContextENS_7BoxSideENS0_9MiterTypeES4_(%"class.blink::BoxBorderPainter"* readonly, %"class.blink::GraphicsContext"* dereferenceable(112), i32, i32, i32) local_unnamed_addr #6 align 2 {
  %6 = alloca %class.SkPathBuilder, align 8
  %7 = alloca %class.SkPath, align 8
  %8 = alloca %class.SkPathBuilder, align 8
  %9 = alloca %class.SkPath, align 8
  %10 = alloca %class.SkPathBuilder, align 8
  %11 = alloca %class.SkPath, align 8
  %12 = alloca [4 x %"class.blink::FloatPoint"], align 16
  %13 = bitcast [4 x %"class.blink::FloatPoint"]* %12 to i8*
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca %"class.blink::FloatPoint", align 4
  %17 = alloca %"class.blink::FloatPoint", align 4
  %18 = alloca %"class.blink::FloatPoint", align 4
  %19 = alloca %"class.blink::FloatPoint", align 4
  %20 = alloca %"class.blink::FloatPoint", align 4
  %21 = alloca %"class.blink::FloatPoint", align 4
  %22 = alloca %"class.blink::FloatPoint", align 4
  %23 = alloca %"class.blink::FloatPoint", align 4
  %24 = alloca %"class.blink::FloatPoint", align 4
  %25 = alloca %"class.blink::FloatPoint", align 4
  %26 = alloca %"class.blink::FloatPoint", align 4
  %27 = alloca %"class.blink::FloatPoint", align 4
  %28 = alloca %"class.blink::FloatPoint", align 4
  %29 = alloca %"class.blink::FloatPoint", align 4
  %30 = alloca %"class.blink::FloatPoint", align 4
  %31 = alloca %"class.blink::FloatPoint", align 4
  %32 = alloca [4 x %"class.blink::FloatPoint"], align 16
  %33 = alloca [4 x %"class.blink::FloatPoint"], align 16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #10
  %34 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %12, i64 0, i64 0
  %35 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %12, i64 0, i64 1
  %36 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %35, i64 0, i32 0
  %37 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %12, i64 0, i64 1, i32 1
  %38 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %12, i64 0, i64 2
  %39 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %38, i64 0, i32 0
  %40 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %12, i64 0, i64 2, i32 1
  %41 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %12, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 0, i64 32, i1 false)
  %42 = bitcast i64* %14 to %"class.blink::FloatPoint"*
  %43 = bitcast i64* %15 to %"class.blink::FloatPoint"*
  %44 = bitcast [4 x %"class.blink::FloatPoint"]* %32 to i8*
  %45 = bitcast [4 x %"class.blink::FloatPoint"]* %33 to i8*
  %46 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  %47 = bitcast i64* %14 to float*
  %48 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %42, i64 0, i32 1
  store float 0.000000e+00, float* %47, align 8
  store float 0.000000e+00, float* %48, align 4
  %49 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #10
  %50 = bitcast i64* %15 to float*
  %51 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %43, i64 0, i32 1
  store float 0.000000e+00, float* %50, align 8
  store float 0.000000e+00, float* %51, align 4
  %52 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load float, float* %52, align 4
  %54 = fmul float %53, 6.400000e+01
  %55 = call float @llvm.floor.f32(float %54) #10
  %56 = fcmp ult float %55, 0xC1E0000000000000
  %57 = fcmp ugt float %55, 0x41DFFFFFE0000000
  %58 = fcmp ogt float %55, 0xC1E0000000000000
  %59 = select i1 %58, float %55, float 0xC1E0000000000000
  %60 = fptosi float %59 to i32
  %61 = select i1 %56, i32 0, i32 2147483647
  %62 = select i1 %57, i32 %61, i32 %60
  %63 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %64 = load float, float* %63, align 4
  %65 = fmul float %64, 6.400000e+01
  %66 = call float @llvm.floor.f32(float %65) #10
  %67 = fcmp ult float %66, 0xC1E0000000000000
  %68 = fcmp ugt float %66, 0x41DFFFFFE0000000
  %69 = fcmp ogt float %66, 0xC1E0000000000000
  %70 = select i1 %69, float %66, float 0xC1E0000000000000
  %71 = fptosi float %70 to i32
  %72 = select i1 %67, i32 0, i32 2147483647
  %73 = select i1 %68, i32 %72, i32 %71
  %74 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %75 = load float, float* %74, align 4
  %76 = fadd float %53, %75
  %77 = fmul float %76, 6.400000e+01
  %78 = call float @llvm.ceil.f32(float %77) #10
  %79 = fcmp ult float %78, 0xC1E0000000000000
  %80 = fcmp ugt float %78, 0x41DFFFFFE0000000
  %81 = fcmp ogt float %78, 0xC1E0000000000000
  %82 = select i1 %81, float %78, float 0xC1E0000000000000
  %83 = fptosi float %82 to i32
  %84 = select i1 %79, i32 0, i32 2147483647
  %85 = select i1 %80, i32 %84, i32 %83
  %86 = icmp sgt i32 %62, -1
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %85, i32 %62) #10
  %89 = extractvalue { i32, i1 } %88, 1
  %90 = extractvalue { i32, i1 } %88, 0
  %91 = select i1 %89, i32 %87, i32 %90, !prof !3
  %92 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3, i32 0, i32 1, i32 1
  %93 = load float, float* %92, align 4
  %94 = fadd float %64, %93
  %95 = fmul float %94, 6.400000e+01
  %96 = call float @llvm.ceil.f32(float %95) #10
  %97 = fcmp ult float %96, 0xC1E0000000000000
  %98 = fcmp ugt float %96, 0x41DFFFFFE0000000
  %99 = fcmp ogt float %96, 0xC1E0000000000000
  %100 = select i1 %99, float %96, float 0xC1E0000000000000
  %101 = fptosi float %100 to i32
  %102 = select i1 %97, i32 0, i32 2147483647
  %103 = select i1 %98, i32 %102, i32 %101
  %104 = icmp sgt i32 %73, -1
  %105 = select i1 %104, i32 -2147483648, i32 2147483647
  %106 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %103, i32 %73) #10
  %107 = extractvalue { i32, i1 } %106, 1
  %108 = extractvalue { i32, i1 } %106, 0
  %109 = select i1 %107, i32 %105, i32 %108, !prof !3
  %110 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %111 = load float, float* %110, align 4
  %112 = fmul float %111, 6.400000e+01
  %113 = call float @llvm.floor.f32(float %112) #10
  %114 = fcmp ult float %113, 0xC1E0000000000000
  %115 = fcmp ugt float %113, 0x41DFFFFFE0000000
  %116 = fcmp ogt float %113, 0xC1E0000000000000
  %117 = select i1 %116, float %113, float 0xC1E0000000000000
  %118 = fptosi float %117 to i32
  %119 = select i1 %114, i32 0, i32 2147483647
  %120 = select i1 %115, i32 %119, i32 %118
  %121 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %122 = load float, float* %121, align 4
  %123 = fmul float %122, 6.400000e+01
  %124 = call float @llvm.floor.f32(float %123) #10
  %125 = fcmp ult float %124, 0xC1E0000000000000
  %126 = fcmp ugt float %124, 0x41DFFFFFE0000000
  %127 = fcmp ogt float %124, 0xC1E0000000000000
  %128 = select i1 %127, float %124, float 0xC1E0000000000000
  %129 = fptosi float %128 to i32
  %130 = select i1 %125, i32 0, i32 2147483647
  %131 = select i1 %126, i32 %130, i32 %129
  %132 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 0, i32 1, i32 0
  %133 = load float, float* %132, align 4
  %134 = fadd float %111, %133
  %135 = fmul float %134, 6.400000e+01
  %136 = call float @llvm.ceil.f32(float %135) #10
  %137 = fcmp ult float %136, 0xC1E0000000000000
  %138 = fcmp ugt float %136, 0x41DFFFFFE0000000
  %139 = fcmp ogt float %136, 0xC1E0000000000000
  %140 = select i1 %139, float %136, float 0xC1E0000000000000
  %141 = fptosi float %140 to i32
  %142 = select i1 %137, i32 0, i32 2147483647
  %143 = select i1 %138, i32 %142, i32 %141
  %144 = icmp sgt i32 %120, -1
  %145 = select i1 %144, i32 -2147483648, i32 2147483647
  %146 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %143, i32 %120) #10
  %147 = extractvalue { i32, i1 } %146, 1
  %148 = extractvalue { i32, i1 } %146, 0
  %149 = select i1 %147, i32 %145, i32 %148, !prof !3
  %150 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 0, i32 1, i32 1
  %151 = load float, float* %150, align 4
  %152 = fadd float %122, %151
  %153 = fmul float %152, 6.400000e+01
  %154 = call float @llvm.ceil.f32(float %153) #10
  %155 = fcmp ult float %154, 0xC1E0000000000000
  %156 = fcmp ugt float %154, 0x41DFFFFFE0000000
  %157 = fcmp ogt float %154, 0xC1E0000000000000
  %158 = select i1 %157, float %154, float 0xC1E0000000000000
  %159 = fptosi float %158 to i32
  %160 = select i1 %155, i32 0, i32 2147483647
  %161 = select i1 %156, i32 %160, i32 %159
  %162 = icmp sgt i32 %131, -1
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %161, i32 %131) #10
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !3
  switch i32 %2, label %572 [
    i32 0, label %168
    i32 3, label %264
    i32 2, label %358
    i32 1, label %466
  ]

168:                                              ; preds = %5
  %169 = sitofp i32 %62 to float
  %170 = fmul float %169, 1.562500e-02
  %171 = sitofp i32 %73 to float
  %172 = fmul float %171, 1.562500e-02
  %173 = insertelement <2 x float> undef, float %170, i32 0
  %174 = insertelement <2 x float> %173, float %172, i32 1
  %175 = bitcast [4 x %"class.blink::FloatPoint"]* %12 to <2 x float>*
  store <2 x float> %174, <2 x float>* %175, align 16
  %176 = sitofp i32 %120 to float
  %177 = fmul float %176, 1.562500e-02
  %178 = sitofp i32 %131 to float
  %179 = fmul float %178, 1.562500e-02
  %180 = insertelement <2 x float> undef, float %177, i32 0
  %181 = insertelement <2 x float> %180, float %179, i32 1
  %182 = bitcast %"class.blink::FloatPoint"* %35 to <2 x float>*
  store <2 x float> %181, <2 x float>* %182, align 8
  %183 = icmp slt i32 %149, 0
  %184 = select i1 %183, i32 -2147483648, i32 2147483647
  %185 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %120, i32 %149) #10
  %186 = extractvalue { i32, i1 } %185, 1
  %187 = extractvalue { i32, i1 } %185, 0
  %188 = select i1 %186, i32 %184, i32 %187, !prof !3
  %189 = sitofp i32 %188 to float
  %190 = fmul float %189, 1.562500e-02
  %191 = insertelement <2 x float> undef, float %190, i32 0
  %192 = insertelement <2 x float> %191, float %179, i32 1
  %193 = bitcast %"class.blink::FloatPoint"* %38 to <2 x float>*
  store <2 x float> %192, <2 x float>* %193, align 16
  %194 = icmp slt i32 %91, 0
  %195 = select i1 %194, i32 -2147483648, i32 2147483647
  %196 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %62, i32 %91) #10
  %197 = extractvalue { i32, i1 } %196, 1
  %198 = extractvalue { i32, i1 } %196, 0
  %199 = select i1 %197, i32 %195, i32 %198, !prof !3
  %200 = sitofp i32 %199 to float
  %201 = fmul float %200, 1.562500e-02
  %202 = insertelement <2 x float> undef, float %201, i32 0
  %203 = insertelement <2 x float> %202, float %172, i32 1
  %204 = bitcast %"class.blink::FloatPoint"* %41 to <2 x float>*
  store <2 x float> %203, <2 x float>* %204, align 8
  %205 = bitcast i64* %14 to float*
  store float %170, float* %205, align 8
  %206 = getelementptr inbounds i8, i8* %46, i64 4
  %207 = bitcast i8* %206 to float*
  store float %179, float* %207, align 4
  %208 = bitcast i64* %15 to float*
  store float %201, float* %208, align 8
  %209 = getelementptr inbounds i8, i8* %49, i64 4
  %210 = bitcast i8* %209 to float*
  store float %179, float* %210, align 4
  %211 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %212 = load float, float* %211, align 4
  %213 = fcmp ogt float %212, 0xBE80000000000000
  %214 = fcmp olt float %212, 0x3E80000000000000
  %215 = and i1 %213, %214
  %216 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %217 = load float, float* %216, align 4
  br i1 %215, label %218, label %222

218:                                              ; preds = %168
  %219 = fcmp ogt float %217, 0xBE80000000000000
  %220 = fcmp olt float %217, 0x3E80000000000000
  %221 = and i1 %219, %220
  br i1 %221, label %236, label %222

222:                                              ; preds = %168, %218
  %223 = bitcast %"class.blink::FloatPoint"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %223) #10
  %224 = fadd float %212, %177
  %225 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %16, i64 0, i32 0
  store float %224, float* %225, align 4
  %226 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %16, i64 0, i32 1
  store float %179, float* %226, align 4
  %227 = bitcast %"class.blink::FloatPoint"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %227) #10
  %228 = fadd float %179, %217
  %229 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %17, i64 0, i32 0
  store float %177, float* %229, align 4
  %230 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %17, i64 0, i32 1
  store float %228, float* %230, align 4
  %231 = call zeroext i1 @_ZN5blink16FindIntersectionERKNS_10FloatPointES2_S2_S2_RS0_(%"class.blink::FloatPoint"* nonnull dereferenceable(8) %34, %"class.blink::FloatPoint"* dereferenceable(8) %35, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %16, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %17, %"class.blink::FloatPoint"* dereferenceable(8) %35) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %223) #10
  %232 = bitcast float* %37 to i32*
  %233 = load i32, i32* %232, align 4
  %234 = bitcast float* %48 to i32*
  store i32 %233, i32* %234, align 4
  %235 = bitcast float* %51 to i32*
  store i32 %233, i32* %235, align 4
  br label %236

236:                                              ; preds = %218, %222
  %237 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 1, i32 0
  %238 = load float, float* %237, align 4
  %239 = fcmp ogt float %238, 0xBE80000000000000
  %240 = fcmp olt float %238, 0x3E80000000000000
  %241 = and i1 %239, %240
  %242 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 1, i32 1
  %243 = load float, float* %242, align 4
  br i1 %241, label %244, label %248

244:                                              ; preds = %236
  %245 = fcmp ogt float %243, 0xBE80000000000000
  %246 = fcmp olt float %243, 0x3E80000000000000
  %247 = and i1 %245, %246
  br i1 %247, label %572, label %248

248:                                              ; preds = %236, %244
  %249 = bitcast %"class.blink::FloatPoint"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %249) #10
  %250 = load float, float* %39, align 16
  %251 = fsub float %250, %238
  %252 = load float, float* %40, align 4
  %253 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %18, i64 0, i32 0
  store float %251, float* %253, align 4
  %254 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %18, i64 0, i32 1
  store float %252, float* %254, align 4
  %255 = bitcast %"class.blink::FloatPoint"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %255) #10
  %256 = fadd float %252, %243
  %257 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %19, i64 0, i32 0
  store float %250, float* %257, align 4
  %258 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %19, i64 0, i32 1
  store float %256, float* %258, align 4
  %259 = call zeroext i1 @_ZN5blink16FindIntersectionERKNS_10FloatPointES2_S2_S2_RS0_(%"class.blink::FloatPoint"* dereferenceable(8) %41, %"class.blink::FloatPoint"* dereferenceable(8) %38, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %18, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %19, %"class.blink::FloatPoint"* dereferenceable(8) %38) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %249) #10
  %260 = load float, float* %48, align 4
  %261 = load float, float* %40, align 4
  %262 = fcmp olt float %260, %261
  br i1 %262, label %263, label %572

263:                                              ; preds = %248
  store float %261, float* %48, align 4
  store float %261, float* %51, align 4
  br label %572

264:                                              ; preds = %5
  %265 = icmp slt i32 %109, 0
  %266 = select i1 %265, i32 -2147483648, i32 2147483647
  %267 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %73, i32 %109) #10
  %268 = extractvalue { i32, i1 } %267, 1
  %269 = extractvalue { i32, i1 } %267, 0
  %270 = select i1 %268, i32 %266, i32 %269, !prof !3
  %271 = sitofp i32 %62 to float
  %272 = fmul float %271, 1.562500e-02
  %273 = sitofp i32 %270 to float
  %274 = fmul float %273, 1.562500e-02
  %275 = insertelement <2 x float> undef, float %272, i32 0
  %276 = insertelement <2 x float> %275, float %274, i32 1
  %277 = bitcast [4 x %"class.blink::FloatPoint"]* %12 to <2 x float>*
  store <2 x float> %276, <2 x float>* %277, align 16
  %278 = icmp slt i32 %167, 0
  %279 = select i1 %278, i32 -2147483648, i32 2147483647
  %280 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %131, i32 %167) #10
  %281 = extractvalue { i32, i1 } %280, 1
  %282 = extractvalue { i32, i1 } %280, 0
  %283 = select i1 %281, i32 %279, i32 %282, !prof !3
  %284 = sitofp i32 %120 to float
  %285 = fmul float %284, 1.562500e-02
  %286 = sitofp i32 %283 to float
  %287 = fmul float %286, 1.562500e-02
  %288 = insertelement <2 x float> undef, float %285, i32 0
  %289 = insertelement <2 x float> %288, float %287, i32 1
  %290 = bitcast %"class.blink::FloatPoint"* %35 to <2 x float>*
  store <2 x float> %289, <2 x float>* %290, align 8
  %291 = sitofp i32 %131 to float
  %292 = fmul float %291, 1.562500e-02
  %293 = insertelement <2 x float> %288, float %292, i32 1
  %294 = bitcast %"class.blink::FloatPoint"* %38 to <2 x float>*
  store <2 x float> %293, <2 x float>* %294, align 16
  %295 = sitofp i32 %73 to float
  %296 = fmul float %295, 1.562500e-02
  %297 = insertelement <2 x float> %275, float %296, i32 1
  %298 = bitcast %"class.blink::FloatPoint"* %41 to <2 x float>*
  store <2 x float> %297, <2 x float>* %298, align 8
  %299 = bitcast i64* %14 to i32*
  %300 = bitcast i64* %14 to float*
  store float %285, float* %300, align 8
  %301 = getelementptr inbounds i8, i8* %46, i64 4
  %302 = bitcast i8* %301 to float*
  store float %274, float* %302, align 4
  %303 = bitcast i64* %15 to float*
  store float %285, float* %303, align 8
  %304 = getelementptr inbounds i8, i8* %49, i64 4
  %305 = bitcast i8* %304 to float*
  store float %296, float* %305, align 4
  %306 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %307 = load float, float* %306, align 4
  %308 = fcmp ogt float %307, 0xBE80000000000000
  %309 = fcmp olt float %307, 0x3E80000000000000
  %310 = and i1 %308, %309
  %311 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %312 = load float, float* %311, align 4
  br i1 %310, label %313, label %317

313:                                              ; preds = %264
  %314 = fcmp ogt float %312, 0xBE80000000000000
  %315 = fcmp olt float %312, 0x3E80000000000000
  %316 = and i1 %314, %315
  br i1 %316, label %330, label %317

317:                                              ; preds = %264, %313
  %318 = bitcast %"class.blink::FloatPoint"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %318) #10
  %319 = fadd float %307, %285
  %320 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %20, i64 0, i32 0
  store float %319, float* %320, align 4
  %321 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %20, i64 0, i32 1
  store float %292, float* %321, align 4
  %322 = bitcast %"class.blink::FloatPoint"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %322) #10
  %323 = fadd float %292, %312
  %324 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %21, i64 0, i32 0
  store float %285, float* %324, align 4
  %325 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %21, i64 0, i32 1
  store float %323, float* %325, align 4
  %326 = call zeroext i1 @_ZN5blink16FindIntersectionERKNS_10FloatPointES2_S2_S2_RS0_(%"class.blink::FloatPoint"* dereferenceable(8) %41, %"class.blink::FloatPoint"* dereferenceable(8) %38, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %20, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %21, %"class.blink::FloatPoint"* dereferenceable(8) %38) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %322) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %318) #10
  %327 = bitcast %"class.blink::FloatPoint"* %38 to i32*
  %328 = load i32, i32* %327, align 16
  store i32 %328, i32* %299, align 8
  %329 = bitcast i64* %15 to i32*
  store i32 %328, i32* %329, align 8
  br label %330

330:                                              ; preds = %313, %317
  %331 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 2, i32 0
  %332 = load float, float* %331, align 4
  %333 = fcmp ogt float %332, 0xBE80000000000000
  %334 = fcmp olt float %332, 0x3E80000000000000
  %335 = and i1 %333, %334
  %336 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 2, i32 1
  %337 = load float, float* %336, align 4
  br i1 %335, label %338, label %342

338:                                              ; preds = %330
  %339 = fcmp ogt float %337, 0xBE80000000000000
  %340 = fcmp olt float %337, 0x3E80000000000000
  %341 = and i1 %339, %340
  br i1 %341, label %572, label %342

342:                                              ; preds = %330, %338
  %343 = bitcast %"class.blink::FloatPoint"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %343) #10
  %344 = load float, float* %36, align 8
  %345 = fadd float %332, %344
  %346 = load float, float* %37, align 4
  %347 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %22, i64 0, i32 0
  store float %345, float* %347, align 4
  %348 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %22, i64 0, i32 1
  store float %346, float* %348, align 4
  %349 = bitcast %"class.blink::FloatPoint"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %349) #10
  %350 = fsub float %346, %337
  %351 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %23, i64 0, i32 0
  store float %344, float* %351, align 4
  %352 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %23, i64 0, i32 1
  store float %350, float* %352, align 4
  %353 = call zeroext i1 @_ZN5blink16FindIntersectionERKNS_10FloatPointES2_S2_S2_RS0_(%"class.blink::FloatPoint"* nonnull dereferenceable(8) %34, %"class.blink::FloatPoint"* dereferenceable(8) %35, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %22, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %23, %"class.blink::FloatPoint"* dereferenceable(8) %35) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %349) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %343) #10
  %354 = load float, float* %47, align 8
  %355 = load float, float* %36, align 8
  %356 = fcmp olt float %354, %355
  br i1 %356, label %357, label %572

357:                                              ; preds = %342
  store float %355, float* %47, align 8
  store float %355, float* %50, align 8
  br label %572

358:                                              ; preds = %5
  %359 = icmp slt i32 %91, 0
  %360 = select i1 %359, i32 -2147483648, i32 2147483647
  %361 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %62, i32 %91) #10
  %362 = extractvalue { i32, i1 } %361, 1
  %363 = extractvalue { i32, i1 } %361, 0
  %364 = select i1 %362, i32 %360, i32 %363, !prof !3
  %365 = icmp slt i32 %109, 0
  %366 = select i1 %365, i32 -2147483648, i32 2147483647
  %367 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %73, i32 %109) #10
  %368 = extractvalue { i32, i1 } %367, 1
  %369 = extractvalue { i32, i1 } %367, 0
  %370 = select i1 %368, i32 %366, i32 %369, !prof !3
  %371 = sitofp i32 %364 to float
  %372 = fmul float %371, 1.562500e-02
  %373 = sitofp i32 %370 to float
  %374 = fmul float %373, 1.562500e-02
  %375 = insertelement <2 x float> undef, float %372, i32 0
  %376 = insertelement <2 x float> %375, float %374, i32 1
  %377 = bitcast [4 x %"class.blink::FloatPoint"]* %12 to <2 x float>*
  store <2 x float> %376, <2 x float>* %377, align 16
  %378 = icmp slt i32 %149, 0
  %379 = select i1 %378, i32 -2147483648, i32 2147483647
  %380 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %120, i32 %149) #10
  %381 = extractvalue { i32, i1 } %380, 1
  %382 = extractvalue { i32, i1 } %380, 0
  %383 = select i1 %381, i32 %379, i32 %382, !prof !3
  %384 = icmp slt i32 %167, 0
  %385 = select i1 %384, i32 -2147483648, i32 2147483647
  %386 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %131, i32 %167) #10
  %387 = extractvalue { i32, i1 } %386, 1
  %388 = extractvalue { i32, i1 } %386, 0
  %389 = select i1 %387, i32 %385, i32 %388, !prof !3
  %390 = sitofp i32 %383 to float
  %391 = fmul float %390, 1.562500e-02
  %392 = sitofp i32 %389 to float
  %393 = fmul float %392, 1.562500e-02
  %394 = insertelement <2 x float> undef, float %391, i32 0
  %395 = insertelement <2 x float> %394, float %393, i32 1
  %396 = bitcast %"class.blink::FloatPoint"* %35 to <2 x float>*
  store <2 x float> %395, <2 x float>* %396, align 8
  %397 = sitofp i32 %120 to float
  %398 = fmul float %397, 1.562500e-02
  %399 = insertelement <2 x float> undef, float %398, i32 0
  %400 = insertelement <2 x float> %399, float %393, i32 1
  %401 = bitcast %"class.blink::FloatPoint"* %38 to <2 x float>*
  store <2 x float> %400, <2 x float>* %401, align 16
  %402 = sitofp i32 %62 to float
  %403 = fmul float %402, 1.562500e-02
  %404 = insertelement <2 x float> undef, float %403, i32 0
  %405 = insertelement <2 x float> %404, float %374, i32 1
  %406 = bitcast %"class.blink::FloatPoint"* %41 to <2 x float>*
  store <2 x float> %405, <2 x float>* %406, align 8
  %407 = bitcast i64* %14 to float*
  store float %372, float* %407, align 8
  %408 = getelementptr inbounds i8, i8* %46, i64 4
  %409 = bitcast i8* %408 to float*
  store float %393, float* %409, align 4
  %410 = bitcast i64* %15 to float*
  store float %403, float* %410, align 8
  %411 = getelementptr inbounds i8, i8* %49, i64 4
  %412 = bitcast i8* %411 to float*
  store float %393, float* %412, align 4
  %413 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 2, i32 0
  %414 = load float, float* %413, align 4
  %415 = fcmp ogt float %414, 0xBE80000000000000
  %416 = fcmp olt float %414, 0x3E80000000000000
  %417 = and i1 %415, %416
  %418 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 2, i32 1
  %419 = load float, float* %418, align 4
  br i1 %417, label %420, label %424

420:                                              ; preds = %358
  %421 = fcmp ogt float %419, 0xBE80000000000000
  %422 = fcmp olt float %419, 0x3E80000000000000
  %423 = and i1 %421, %422
  br i1 %423, label %438, label %424

424:                                              ; preds = %358, %420
  %425 = bitcast %"class.blink::FloatPoint"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %425) #10
  %426 = fadd float %414, %398
  %427 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %24, i64 0, i32 0
  store float %426, float* %427, align 4
  %428 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %24, i64 0, i32 1
  store float %393, float* %428, align 4
  %429 = bitcast %"class.blink::FloatPoint"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %429) #10
  %430 = fsub float %393, %419
  %431 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %25, i64 0, i32 0
  store float %398, float* %431, align 4
  %432 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %25, i64 0, i32 1
  store float %430, float* %432, align 4
  %433 = call zeroext i1 @_ZN5blink16FindIntersectionERKNS_10FloatPointES2_S2_S2_RS0_(%"class.blink::FloatPoint"* dereferenceable(8) %41, %"class.blink::FloatPoint"* dereferenceable(8) %38, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %24, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %25, %"class.blink::FloatPoint"* dereferenceable(8) %38) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %429) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %425) #10
  %434 = bitcast float* %40 to i32*
  %435 = load i32, i32* %434, align 4
  %436 = bitcast float* %48 to i32*
  store i32 %435, i32* %436, align 4
  %437 = bitcast float* %51 to i32*
  store i32 %435, i32* %437, align 4
  br label %438

438:                                              ; preds = %420, %424
  %439 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 3, i32 0
  %440 = load float, float* %439, align 4
  %441 = fcmp ogt float %440, 0xBE80000000000000
  %442 = fcmp olt float %440, 0x3E80000000000000
  %443 = and i1 %441, %442
  %444 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 3, i32 1
  %445 = load float, float* %444, align 4
  br i1 %443, label %446, label %450

446:                                              ; preds = %438
  %447 = fcmp ogt float %445, 0xBE80000000000000
  %448 = fcmp olt float %445, 0x3E80000000000000
  %449 = and i1 %447, %448
  br i1 %449, label %572, label %450

450:                                              ; preds = %438, %446
  %451 = bitcast %"class.blink::FloatPoint"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %451) #10
  %452 = load float, float* %36, align 8
  %453 = fsub float %452, %440
  %454 = load float, float* %37, align 4
  %455 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %26, i64 0, i32 0
  store float %453, float* %455, align 4
  %456 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %26, i64 0, i32 1
  store float %454, float* %456, align 4
  %457 = bitcast %"class.blink::FloatPoint"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %457) #10
  %458 = fsub float %454, %445
  %459 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %27, i64 0, i32 0
  store float %452, float* %459, align 4
  %460 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %27, i64 0, i32 1
  store float %458, float* %460, align 4
  %461 = call zeroext i1 @_ZN5blink16FindIntersectionERKNS_10FloatPointES2_S2_S2_RS0_(%"class.blink::FloatPoint"* nonnull dereferenceable(8) %34, %"class.blink::FloatPoint"* dereferenceable(8) %35, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %26, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %27, %"class.blink::FloatPoint"* dereferenceable(8) %35) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %457) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %451) #10
  %462 = load float, float* %48, align 4
  %463 = load float, float* %37, align 4
  %464 = fcmp ogt float %462, %463
  br i1 %464, label %465, label %572

465:                                              ; preds = %450
  store float %463, float* %48, align 4
  store float %463, float* %51, align 4
  br label %572

466:                                              ; preds = %5
  %467 = icmp slt i32 %91, 0
  %468 = select i1 %467, i32 -2147483648, i32 2147483647
  %469 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %62, i32 %91) #10
  %470 = extractvalue { i32, i1 } %469, 1
  %471 = extractvalue { i32, i1 } %469, 0
  %472 = select i1 %470, i32 %468, i32 %471, !prof !3
  %473 = sitofp i32 %472 to float
  %474 = fmul float %473, 1.562500e-02
  %475 = sitofp i32 %73 to float
  %476 = fmul float %475, 1.562500e-02
  %477 = insertelement <2 x float> undef, float %474, i32 0
  %478 = insertelement <2 x float> %477, float %476, i32 1
  %479 = bitcast [4 x %"class.blink::FloatPoint"]* %12 to <2 x float>*
  store <2 x float> %478, <2 x float>* %479, align 16
  %480 = icmp slt i32 %149, 0
  %481 = select i1 %480, i32 -2147483648, i32 2147483647
  %482 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %120, i32 %149) #10
  %483 = extractvalue { i32, i1 } %482, 1
  %484 = extractvalue { i32, i1 } %482, 0
  %485 = select i1 %483, i32 %481, i32 %484, !prof !3
  %486 = sitofp i32 %485 to float
  %487 = fmul float %486, 1.562500e-02
  %488 = sitofp i32 %131 to float
  %489 = fmul float %488, 1.562500e-02
  %490 = insertelement <2 x float> undef, float %487, i32 0
  %491 = insertelement <2 x float> %490, float %489, i32 1
  %492 = bitcast %"class.blink::FloatPoint"* %35 to <2 x float>*
  store <2 x float> %491, <2 x float>* %492, align 8
  %493 = icmp slt i32 %167, 0
  %494 = select i1 %493, i32 -2147483648, i32 2147483647
  %495 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %131, i32 %167) #10
  %496 = extractvalue { i32, i1 } %495, 1
  %497 = extractvalue { i32, i1 } %495, 0
  %498 = select i1 %496, i32 %494, i32 %497, !prof !3
  %499 = sitofp i32 %498 to float
  %500 = fmul float %499, 1.562500e-02
  %501 = insertelement <2 x float> %490, float %500, i32 1
  %502 = bitcast %"class.blink::FloatPoint"* %38 to <2 x float>*
  store <2 x float> %501, <2 x float>* %502, align 16
  %503 = icmp slt i32 %109, 0
  %504 = select i1 %503, i32 -2147483648, i32 2147483647
  %505 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %73, i32 %109) #10
  %506 = extractvalue { i32, i1 } %505, 1
  %507 = extractvalue { i32, i1 } %505, 0
  %508 = select i1 %506, i32 %504, i32 %507, !prof !3
  %509 = sitofp i32 %508 to float
  %510 = fmul float %509, 1.562500e-02
  %511 = insertelement <2 x float> %477, float %510, i32 1
  %512 = bitcast %"class.blink::FloatPoint"* %41 to <2 x float>*
  store <2 x float> %511, <2 x float>* %512, align 8
  %513 = bitcast i64* %14 to float*
  store float %487, float* %513, align 8
  %514 = getelementptr inbounds i8, i8* %46, i64 4
  %515 = bitcast i8* %514 to float*
  store float %476, float* %515, align 4
  %516 = bitcast i64* %15 to i32*
  %517 = bitcast i64* %15 to float*
  store float %487, float* %517, align 8
  %518 = getelementptr inbounds i8, i8* %49, i64 4
  %519 = bitcast i8* %518 to float*
  store float %510, float* %519, align 4
  %520 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 1, i32 0
  %521 = load float, float* %520, align 4
  %522 = fcmp ogt float %521, 0xBE80000000000000
  %523 = fcmp olt float %521, 0x3E80000000000000
  %524 = and i1 %522, %523
  %525 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 1, i32 1
  %526 = load float, float* %525, align 4
  br i1 %524, label %527, label %531

527:                                              ; preds = %466
  %528 = fcmp ogt float %526, 0xBE80000000000000
  %529 = fcmp olt float %526, 0x3E80000000000000
  %530 = and i1 %528, %529
  br i1 %530, label %544, label %531

531:                                              ; preds = %466, %527
  %532 = bitcast %"class.blink::FloatPoint"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %532) #10
  %533 = fsub float %487, %521
  %534 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %28, i64 0, i32 0
  store float %533, float* %534, align 4
  %535 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %28, i64 0, i32 1
  store float %489, float* %535, align 4
  %536 = bitcast %"class.blink::FloatPoint"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %536) #10
  %537 = fadd float %489, %526
  %538 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %29, i64 0, i32 0
  store float %487, float* %538, align 4
  %539 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %29, i64 0, i32 1
  store float %537, float* %539, align 4
  %540 = call zeroext i1 @_ZN5blink16FindIntersectionERKNS_10FloatPointES2_S2_S2_RS0_(%"class.blink::FloatPoint"* nonnull dereferenceable(8) %34, %"class.blink::FloatPoint"* dereferenceable(8) %35, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %28, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %29, %"class.blink::FloatPoint"* dereferenceable(8) %35) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %536) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %532) #10
  %541 = bitcast %"class.blink::FloatPoint"* %35 to i32*
  %542 = load i32, i32* %541, align 8
  %543 = bitcast i64* %14 to i32*
  store i32 %542, i32* %543, align 8
  store i32 %542, i32* %516, align 8
  br label %544

544:                                              ; preds = %527, %531
  %545 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 3, i32 0
  %546 = load float, float* %545, align 4
  %547 = fcmp ogt float %546, 0xBE80000000000000
  %548 = fcmp olt float %546, 0x3E80000000000000
  %549 = and i1 %547, %548
  %550 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 3, i32 1
  %551 = load float, float* %550, align 4
  br i1 %549, label %552, label %556

552:                                              ; preds = %544
  %553 = fcmp ogt float %551, 0xBE80000000000000
  %554 = fcmp olt float %551, 0x3E80000000000000
  %555 = and i1 %553, %554
  br i1 %555, label %572, label %556

556:                                              ; preds = %544, %552
  %557 = bitcast %"class.blink::FloatPoint"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %557) #10
  %558 = load float, float* %39, align 16
  %559 = fsub float %558, %546
  %560 = load float, float* %40, align 4
  %561 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %30, i64 0, i32 0
  store float %559, float* %561, align 4
  %562 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %30, i64 0, i32 1
  store float %560, float* %562, align 4
  %563 = bitcast %"class.blink::FloatPoint"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %563) #10
  %564 = fsub float %560, %551
  %565 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %31, i64 0, i32 0
  store float %558, float* %565, align 4
  %566 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %31, i64 0, i32 1
  store float %564, float* %566, align 4
  %567 = call zeroext i1 @_ZN5blink16FindIntersectionERKNS_10FloatPointES2_S2_S2_RS0_(%"class.blink::FloatPoint"* dereferenceable(8) %41, %"class.blink::FloatPoint"* dereferenceable(8) %38, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %30, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %31, %"class.blink::FloatPoint"* dereferenceable(8) %38) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %563) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %557) #10
  %568 = load float, float* %47, align 8
  %569 = load float, float* %39, align 16
  %570 = fcmp ogt float %568, %569
  br i1 %570, label %571, label %572

571:                                              ; preds = %556
  store float %569, float* %47, align 8
  store float %569, float* %50, align 8
  br label %572

572:                                              ; preds = %552, %446, %338, %244, %571, %556, %465, %450, %357, %342, %263, %248, %5
  %573 = phi i32 [ %4, %5 ], [ %4, %571 ], [ %4, %556 ], [ %3, %465 ], [ %3, %450 ], [ %3, %357 ], [ %3, %342 ], [ %4, %263 ], [ %4, %248 ], [ %4, %244 ], [ %3, %338 ], [ %3, %446 ], [ %4, %552 ]
  %574 = phi i32 [ %3, %5 ], [ %3, %571 ], [ %3, %556 ], [ %4, %465 ], [ %4, %450 ], [ %4, %357 ], [ %4, %342 ], [ %3, %263 ], [ %3, %248 ], [ %3, %244 ], [ %4, %338 ], [ %4, %446 ], [ %3, %552 ]
  %575 = phi <2 x float> [ zeroinitializer, %5 ], [ <float 0.000000e+00, float 0xBFB99999A0000000>, %571 ], [ <float 0.000000e+00, float 0xBFB99999A0000000>, %556 ], [ <float 0x3FB99999A0000000, float 0.000000e+00>, %465 ], [ <float 0x3FB99999A0000000, float 0.000000e+00>, %450 ], [ <float 0.000000e+00, float 0x3FB99999A0000000>, %357 ], [ <float 0.000000e+00, float 0x3FB99999A0000000>, %342 ], [ <float 0xBFB99999A0000000, float 0.000000e+00>, %263 ], [ <float 0xBFB99999A0000000, float 0.000000e+00>, %248 ], [ <float 0xBFB99999A0000000, float 0.000000e+00>, %244 ], [ <float 0.000000e+00, float 0x3FB99999A0000000>, %338 ], [ <float 0x3FB99999A0000000, float 0.000000e+00>, %446 ], [ <float 0.000000e+00, float 0xBFB99999A0000000>, %552 ]
  %576 = icmp eq i32 %574, %573
  br i1 %576, label %577, label %609

577:                                              ; preds = %572
  %578 = icmp eq i32 %573, 1
  %579 = bitcast %class.SkPathBuilder* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %579) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %579, i8* align 8 bitcast ({ %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, i8, [3 x i8], i32, %struct.SkPoint, i8, [3 x i8], i32, i32, i8, [3 x i8], i32 }* @__const._ZN5blink12_GLOBAL__N_18ClipQuadERNS_15GraphicsContextEPKNS_10FloatPointEb.path to i8*), i64 88, i1 false) #10
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %6) #10
  %580 = bitcast [4 x %"class.blink::FloatPoint"]* %12 to <2 x float>*
  %581 = load <2 x float>, <2 x float>* %580, align 16
  %582 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %581)
  %583 = fcmp one <2 x float> %582, <float 0x7FF0000000000000, float 0x7FF0000000000000>
  %584 = select <2 x i1> %583, <2 x float> %581, <2 x float> zeroinitializer
  %585 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* nonnull %6, <2 x float> %584) #10
  %586 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %12, i64 0, i64 1, i32 0
  %587 = bitcast float* %586 to <2 x float>*
  %588 = load <2 x float>, <2 x float>* %587, align 8
  %589 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %588)
  %590 = fcmp one <2 x float> %589, <float 0x7FF0000000000000, float 0x7FF0000000000000>
  %591 = select <2 x i1> %590, <2 x float> %588, <2 x float> zeroinitializer
  %592 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* nonnull %6, <2 x float> %591) #10
  %593 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %12, i64 0, i64 2, i32 0
  %594 = bitcast float* %593 to <2 x float>*
  %595 = load <2 x float>, <2 x float>* %594, align 16
  %596 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %595)
  %597 = fcmp one <2 x float> %596, <float 0x7FF0000000000000, float 0x7FF0000000000000>
  %598 = select <2 x i1> %597, <2 x float> %595, <2 x float> zeroinitializer
  %599 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* nonnull %6, <2 x float> %598) #10
  %600 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %12, i64 0, i64 3, i32 0
  %601 = bitcast float* %600 to <2 x float>*
  %602 = load <2 x float>, <2 x float>* %601, align 8
  %603 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %602)
  %604 = fcmp one <2 x float> %603, <float 0x7FF0000000000000, float 0x7FF0000000000000>
  %605 = select <2 x i1> %604, <2 x float> %602, <2 x float> zeroinitializer
  %606 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* nonnull %6, <2 x float> %605) #10
  %607 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %607) #10
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* nonnull sret %7, %class.SkPathBuilder* nonnull %6) #10
  %608 = zext i1 %578 to i32
  call void @_ZN5blink15GraphicsContext8ClipPathERK6SkPathNS_16AntiAliasingModeE8SkClipOp(%"class.blink::GraphicsContext"* %1, %class.SkPath* nonnull dereferenceable(16) %7, i32 %608, i32 1) #10
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %607) #10
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %579) #10
  br label %721

609:                                              ; preds = %572
  %610 = icmp eq i32 %574, 0
  br i1 %610, label %664, label %611

611:                                              ; preds = %609
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #10
  %612 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %32, i64 0, i64 1
  %613 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %612, i64 0, i32 0
  %614 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %32, i64 0, i64 1, i32 1
  %615 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %32, i64 0, i64 2
  %616 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %32, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 0, i64 32, i1 false)
  %617 = bitcast [4 x %"class.blink::FloatPoint"]* %12 to <2 x float>*
  %618 = load <2 x float>, <2 x float>* %617, align 16
  %619 = fadd <2 x float> %575, %618
  %620 = bitcast [4 x %"class.blink::FloatPoint"]* %32 to <2 x float>*
  store <2 x float> %619, <2 x float>* %620, align 16
  %621 = call zeroext i1 @_ZN5blink16FindIntersectionERKNS_10FloatPointES2_S2_S2_RS0_(%"class.blink::FloatPoint"* nonnull dereferenceable(8) %34, %"class.blink::FloatPoint"* dereferenceable(8) %35, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %42, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %43, %"class.blink::FloatPoint"* dereferenceable(8) %612) #10
  %622 = load float, float* %613, align 8
  %623 = extractelement <2 x float> %575, i32 0
  %624 = fadd float %623, %622
  store float %624, float* %613, align 8
  %625 = load float, float* %614, align 4
  %626 = extractelement <2 x float> %575, i32 1
  %627 = fadd float %626, %625
  store float %627, float* %614, align 4
  %628 = bitcast %"class.blink::FloatPoint"* %615 to i64*
  %629 = load i64, i64* %15, align 8
  store i64 %629, i64* %628, align 16
  %630 = bitcast %"class.blink::FloatPoint"* %41 to i64*
  %631 = bitcast %"class.blink::FloatPoint"* %616 to i64*
  %632 = load i64, i64* %630, align 8
  store i64 %632, i64* %631, align 8
  %633 = icmp eq i32 %574, 1
  %634 = bitcast %class.SkPathBuilder* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %634) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %634, i8* align 8 bitcast ({ %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, i8, [3 x i8], i32, %struct.SkPoint, i8, [3 x i8], i32, i32, i8, [3 x i8], i32 }* @__const._ZN5blink12_GLOBAL__N_18ClipQuadERNS_15GraphicsContextEPKNS_10FloatPointEb.path to i8*), i64 88, i1 false) #10
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %8) #10
  %635 = bitcast [4 x %"class.blink::FloatPoint"]* %32 to <2 x float>*
  %636 = load <2 x float>, <2 x float>* %635, align 16
  %637 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %636)
  %638 = fcmp one <2 x float> %637, <float 0x7FF0000000000000, float 0x7FF0000000000000>
  %639 = select <2 x i1> %638, <2 x float> %636, <2 x float> zeroinitializer
  %640 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* nonnull %8, <2 x float> %639) #10
  %641 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %32, i64 0, i64 1, i32 0
  %642 = bitcast float* %641 to <2 x float>*
  %643 = load <2 x float>, <2 x float>* %642, align 8
  %644 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %643)
  %645 = fcmp one <2 x float> %644, <float 0x7FF0000000000000, float 0x7FF0000000000000>
  %646 = select <2 x i1> %645, <2 x float> %643, <2 x float> zeroinitializer
  %647 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* nonnull %8, <2 x float> %646) #10
  %648 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %32, i64 0, i64 2, i32 0
  %649 = bitcast float* %648 to <2 x float>*
  %650 = load <2 x float>, <2 x float>* %649, align 16
  %651 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %650)
  %652 = fcmp one <2 x float> %651, <float 0x7FF0000000000000, float 0x7FF0000000000000>
  %653 = select <2 x i1> %652, <2 x float> %650, <2 x float> zeroinitializer
  %654 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* nonnull %8, <2 x float> %653) #10
  %655 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %32, i64 0, i64 3, i32 0
  %656 = bitcast float* %655 to <2 x float>*
  %657 = load <2 x float>, <2 x float>* %656, align 8
  %658 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %657)
  %659 = fcmp one <2 x float> %658, <float 0x7FF0000000000000, float 0x7FF0000000000000>
  %660 = select <2 x i1> %659, <2 x float> %657, <2 x float> zeroinitializer
  %661 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* nonnull %8, <2 x float> %660) #10
  %662 = bitcast %class.SkPath* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %662) #10
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* nonnull sret %9, %class.SkPathBuilder* nonnull %8) #10
  %663 = zext i1 %633 to i32
  call void @_ZN5blink15GraphicsContext8ClipPathERK6SkPathNS_16AntiAliasingModeE8SkClipOp(%"class.blink::GraphicsContext"* %1, %class.SkPath* nonnull dereferenceable(16) %9, i32 %663, i32 1) #10
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %662) #10
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %634) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #10
  br label %664

664:                                              ; preds = %609, %611
  %665 = icmp eq i32 %573, 0
  br i1 %665, label %721, label %666

666:                                              ; preds = %664
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #10
  %667 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %33, i64 0, i64 1
  %668 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %33, i64 0, i64 2
  %669 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %668, i64 0, i32 0
  %670 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %33, i64 0, i64 2, i32 1
  %671 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %33, i64 0, i64 3
  %672 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %33, i64 0, i64 2
  %673 = bitcast %"class.blink::FloatPoint"* %672 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %673, i8 0, i64 16, i1 false)
  %674 = bitcast [4 x %"class.blink::FloatPoint"]* %12 to i64*
  %675 = bitcast [4 x %"class.blink::FloatPoint"]* %33 to i64*
  %676 = load i64, i64* %674, align 16
  store i64 %676, i64* %675, align 16
  %677 = bitcast %"class.blink::FloatPoint"* %667 to i64*
  %678 = load i64, i64* %14, align 8
  store i64 %678, i64* %677, align 8
  %679 = call zeroext i1 @_ZN5blink16FindIntersectionERKNS_10FloatPointES2_S2_S2_RS0_(%"class.blink::FloatPoint"* dereferenceable(8) %38, %"class.blink::FloatPoint"* dereferenceable(8) %41, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %42, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %43, %"class.blink::FloatPoint"* dereferenceable(8) %668) #10
  %680 = load float, float* %669, align 16
  %681 = extractelement <2 x float> %575, i32 0
  %682 = fsub float %680, %681
  store float %682, float* %669, align 16
  %683 = load float, float* %670, align 4
  %684 = extractelement <2 x float> %575, i32 1
  %685 = fsub float %683, %684
  store float %685, float* %670, align 4
  %686 = bitcast %"class.blink::FloatPoint"* %41 to <2 x float>*
  %687 = load <2 x float>, <2 x float>* %686, align 8
  %688 = fsub <2 x float> %687, %575
  %689 = bitcast %"class.blink::FloatPoint"* %671 to <2 x float>*
  store <2 x float> %688, <2 x float>* %689, align 8
  %690 = icmp eq i32 %573, 1
  %691 = bitcast %class.SkPathBuilder* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %691) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %691, i8* align 8 bitcast ({ %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, i8, [3 x i8], i32, %struct.SkPoint, i8, [3 x i8], i32, i32, i8, [3 x i8], i32 }* @__const._ZN5blink12_GLOBAL__N_18ClipQuadERNS_15GraphicsContextEPKNS_10FloatPointEb.path to i8*), i64 88, i1 false) #10
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %10) #10
  %692 = bitcast [4 x %"class.blink::FloatPoint"]* %33 to <2 x float>*
  %693 = load <2 x float>, <2 x float>* %692, align 16
  %694 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %693)
  %695 = fcmp one <2 x float> %694, <float 0x7FF0000000000000, float 0x7FF0000000000000>
  %696 = select <2 x i1> %695, <2 x float> %693, <2 x float> zeroinitializer
  %697 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* nonnull %10, <2 x float> %696) #10
  %698 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %33, i64 0, i64 1, i32 0
  %699 = bitcast float* %698 to <2 x float>*
  %700 = load <2 x float>, <2 x float>* %699, align 8
  %701 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %700)
  %702 = fcmp one <2 x float> %701, <float 0x7FF0000000000000, float 0x7FF0000000000000>
  %703 = select <2 x i1> %702, <2 x float> %700, <2 x float> zeroinitializer
  %704 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* nonnull %10, <2 x float> %703) #10
  %705 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %33, i64 0, i64 2, i32 0
  %706 = bitcast float* %705 to <2 x float>*
  %707 = load <2 x float>, <2 x float>* %706, align 16
  %708 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %707)
  %709 = fcmp one <2 x float> %708, <float 0x7FF0000000000000, float 0x7FF0000000000000>
  %710 = select <2 x i1> %709, <2 x float> %707, <2 x float> zeroinitializer
  %711 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* nonnull %10, <2 x float> %710) #10
  %712 = getelementptr inbounds [4 x %"class.blink::FloatPoint"], [4 x %"class.blink::FloatPoint"]* %33, i64 0, i64 3, i32 0
  %713 = bitcast float* %712 to <2 x float>*
  %714 = load <2 x float>, <2 x float>* %713, align 8
  %715 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %714)
  %716 = fcmp one <2 x float> %715, <float 0x7FF0000000000000, float 0x7FF0000000000000>
  %717 = select <2 x i1> %716, <2 x float> %714, <2 x float> zeroinitializer
  %718 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* nonnull %10, <2 x float> %717) #10
  %719 = bitcast %class.SkPath* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %719) #10
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* nonnull sret %11, %class.SkPathBuilder* nonnull %10) #10
  %720 = zext i1 %690 to i32
  call void @_ZN5blink15GraphicsContext8ClipPathERK6SkPathNS_16AntiAliasingModeE8SkClipOp(%"class.blink::GraphicsContext"* %1, %class.SkPath* nonnull dereferenceable(16) %11, i32 %720, i32 1) #10
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %719) #10
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %691) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #10
  br label %721

721:                                              ; preds = %666, %664, %577
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16BoxBorderPainter33ClipBorderSideForComplexInnerPathERNS_15GraphicsContextENS_7BoxSideE(%"class.blink::BoxBorderPainter"* nocapture readonly, %"class.blink::GraphicsContext"* dereferenceable(112), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FloatRoundedRect::Radii", align 8
  %5 = alloca %"class.blink::FloatRect", align 4
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca %"class.blink::FloatRoundedRect", align 4
  %9 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 3
  %10 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = bitcast { <2 x float>, <2 x float> }* %7 to %"class.blink::FloatRect"*
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1, i64 0
  %13 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %11, i64 0, i32 1, i32 1
  %14 = bitcast %"class.blink::FloatRoundedRect"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 4 %14, i64 16, i1 false) #10
  switch i32 %2, label %43 [
    i32 0, label %15
    i32 2, label %20
    i32 3, label %29
    i32 1, label %34
  ]

15:                                               ; preds = %3
  %16 = load float, float* %13, align 4
  %17 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 2, i32 3
  %18 = load float, float* %17, align 4
  %19 = fsub float %16, %18
  store float %19, float* %13, align 4
  br label %43

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %11, i64 0, i32 0, i32 1
  %22 = load float, float* %13, align 4
  %23 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 0, i32 3
  %24 = load float, float* %23, align 4
  %25 = fsub float %22, %24
  %26 = load float, float* %21, align 4
  %27 = fadd float %22, %26
  %28 = fsub float %27, %25
  call void @_ZN5blink9FloatRect12ShiftYEdgeToEf(%"class.blink::FloatRect"* nonnull %11, float %28) #10
  br label %43

29:                                               ; preds = %3
  %30 = load float, float* %12, align 8
  %31 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 1, i32 3
  %32 = load float, float* %31, align 4
  %33 = fsub float %30, %32
  store float %33, float* %12, align 8
  br label %43

34:                                               ; preds = %3
  %35 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0, i64 0
  %36 = load float, float* %12, align 8
  %37 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 3, i32 3
  %38 = load float, float* %37, align 4
  %39 = fsub float %36, %38
  %40 = load float, float* %35, align 8
  %41 = fadd float %36, %40
  %42 = fsub float %41, %39
  call void @_ZN5blink9FloatRect12ShiftXEdgeToEf(%"class.blink::FloatRect"* nonnull %11, float %42) #10
  br label %43

43:                                               ; preds = %3, %15, %20, %29, %34
  %44 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %45 = load <2 x float>, <2 x float>* %44, align 8
  %46 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %47 = load <2 x float>, <2 x float>* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  %48 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %49 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #10
  %50 = fadd <2 x float> %45, %47
  %51 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %45, <2 x float>* %51, align 8
  %52 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %50, <2 x float>* %52, align 8
  call void @_ZN5blink15GraphicsContext8ClipRectERK6SkRectNS_16AntiAliasingModeE8SkClipOp(%"class.blink::GraphicsContext"* %1, %struct.SkRect* nonnull dereferenceable(16) %48, i32 0, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #10
  %53 = bitcast %"class.blink::FloatRoundedRect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %53) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %53, i8 -1, i64 48, i1 false)
  %54 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4
  %55 = bitcast %"class.blink::FloatRoundedRect::Radii"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %55) #10, !noalias !5
  %56 = getelementptr inbounds %"class.blink::FloatRoundedRect::Radii", %"class.blink::FloatRoundedRect::Radii"* %4, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.blink::FloatRoundedRect::Radii", %"class.blink::FloatRoundedRect::Radii"* %4, i64 0, i32 1, i32 1
  %58 = getelementptr inbounds %"class.blink::FloatRoundedRect::Radii", %"class.blink::FloatRoundedRect::Radii"* %4, i64 0, i32 2, i32 1
  %59 = getelementptr inbounds %"class.blink::FloatRoundedRect::Radii", %"class.blink::FloatRoundedRect::Radii"* %4, i64 0, i32 3, i32 1
  %60 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1
  %61 = bitcast %"class.blink::FloatRoundedRect::Radii"* %60 to i64*
  %62 = bitcast %"class.blink::FloatRoundedRect::Radii"* %4 to i64*
  %63 = load i64, i64* %61, align 4, !noalias !5
  store i64 %63, i64* %62, align 8, !noalias !5
  %64 = getelementptr inbounds %"class.blink::FloatRoundedRect::Radii", %"class.blink::FloatRoundedRect::Radii"* %4, i64 0, i32 1
  %65 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 1
  %66 = bitcast %"class.blink::FloatSize"* %65 to i64*
  %67 = bitcast %"class.blink::FloatSize"* %64 to i64*
  %68 = load i64, i64* %66, align 4, !noalias !5
  store i64 %68, i64* %67, align 8, !noalias !5
  %69 = getelementptr inbounds %"class.blink::FloatRoundedRect::Radii", %"class.blink::FloatRoundedRect::Radii"* %4, i64 0, i32 2
  %70 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 2
  %71 = bitcast %"class.blink::FloatSize"* %70 to i64*
  %72 = bitcast %"class.blink::FloatSize"* %69 to i64*
  %73 = load i64, i64* %71, align 4, !noalias !5
  store i64 %73, i64* %72, align 8, !noalias !5
  %74 = getelementptr inbounds %"class.blink::FloatRoundedRect::Radii", %"class.blink::FloatRoundedRect::Radii"* %4, i64 0, i32 3
  %75 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 4, i32 1, i32 3
  %76 = bitcast %"class.blink::FloatSize"* %75 to i64*
  %77 = bitcast %"class.blink::FloatSize"* %74 to i64*
  %78 = load i64, i64* %76, align 4, !noalias !5
  store i64 %78, i64* %77, align 8, !noalias !5
  %79 = bitcast %"class.blink::FloatRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #10, !noalias !5
  %80 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 1, i32 0
  %83 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 1, i32 1
  %84 = bitcast %"class.blink::FloatRoundedRect"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %79, i8* align 4 %84, i64 16, i1 false) #10, !noalias !5
  %85 = lshr i64 %68, 32
  %86 = trunc i64 %85 to i32
  %87 = bitcast i32 %86 to float
  %88 = lshr i64 %78, 32
  %89 = trunc i64 %88 to i32
  %90 = bitcast i32 %89 to float
  %91 = trunc i64 %68 to i32
  %92 = bitcast i32 %91 to float
  %93 = trunc i64 %78 to i32
  %94 = bitcast i32 %93 to float
  %95 = lshr i64 %63, 32
  %96 = trunc i64 %95 to i32
  %97 = bitcast i32 %96 to float
  %98 = lshr i64 %73, 32
  %99 = trunc i64 %98 to i32
  %100 = bitcast i32 %99 to float
  %101 = trunc i64 %63 to i32
  %102 = bitcast i32 %101 to float
  %103 = trunc i64 %73 to i32
  %104 = bitcast i32 %103 to float
  switch i32 %2, label %204 [
    i32 0, label %105
    i32 2, label %126
    i32 3, label %151
    i32 1, label %175
  ]

105:                                              ; preds = %43
  %106 = fadd float %102, %92
  %107 = load float, float* %82, align 4, !noalias !5
  %108 = fsub float %106, %107
  %109 = fpext float %108 to double
  %110 = fcmp ogt double %109, 1.000000e-01
  br i1 %110, label %111, label %119

111:                                              ; preds = %105
  %112 = fadd float %107, %108
  store float %112, float* %82, align 4, !noalias !5
  %113 = fcmp une float %102, 0.000000e+00
  br i1 %113, label %119, label %114

114:                                              ; preds = %111
  %115 = load float, float* %80, align 4, !noalias !5
  %116 = fsub float %115, %108
  store float %116, float* %80, align 4, !noalias !5
  %117 = load float, float* %81, align 4, !noalias !5
  %118 = fadd float %117, 0.000000e+00
  store float %118, float* %81, align 4, !noalias !5
  br label %119

119:                                              ; preds = %114, %111, %105
  %120 = fcmp olt float %97, %87
  %121 = select i1 %120, float %87, float %97
  %122 = bitcast %"class.blink::FloatSize"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 16, i1 false) #10, !noalias !5
  %123 = load float, float* %83, align 4, !noalias !5
  %124 = fcmp ogt float %121, %123
  br i1 %124, label %125, label %204

125:                                              ; preds = %119
  store float %121, float* %83, align 4, !noalias !5
  br label %204

126:                                              ; preds = %43
  %127 = fadd float %104, %94
  %128 = load float, float* %82, align 4, !noalias !5
  %129 = fsub float %127, %128
  %130 = fpext float %129 to double
  %131 = fcmp ogt double %130, 1.000000e-01
  br i1 %131, label %132, label %140

132:                                              ; preds = %126
  %133 = fadd float %128, %129
  store float %133, float* %82, align 4, !noalias !5
  %134 = fcmp une float %104, 0.000000e+00
  br i1 %134, label %140, label %135

135:                                              ; preds = %132
  %136 = load float, float* %80, align 4, !noalias !5
  %137 = fsub float %136, %129
  store float %137, float* %80, align 4, !noalias !5
  %138 = load float, float* %81, align 4, !noalias !5
  %139 = fadd float %138, 0.000000e+00
  store float %139, float* %81, align 4, !noalias !5
  br label %140

140:                                              ; preds = %135, %132, %126
  %141 = fcmp olt float %100, %90
  %142 = select i1 %141, float %90, float %100
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 16, i1 false) #10, !noalias !5
  %143 = load float, float* %83, align 4, !noalias !5
  %144 = fcmp ogt float %142, %143
  br i1 %144, label %145, label %204

145:                                              ; preds = %140
  %146 = fsub float %143, %142
  %147 = load float, float* %80, align 4, !noalias !5
  %148 = fadd float %147, 0.000000e+00
  store float %148, float* %80, align 4, !noalias !5
  %149 = load float, float* %81, align 4, !noalias !5
  %150 = fadd float %146, %149
  store float %150, float* %81, align 4, !noalias !5
  store float %142, float* %83, align 4, !noalias !5
  br label %204

151:                                              ; preds = %43
  %152 = fadd float %97, %100
  %153 = load float, float* %83, align 4, !noalias !5
  %154 = fsub float %152, %153
  %155 = fpext float %154 to double
  %156 = fcmp ogt double %155, 1.000000e-01
  br i1 %156, label %157, label %165

157:                                              ; preds = %151
  %158 = fadd float %153, %154
  store float %158, float* %83, align 4, !noalias !5
  %159 = fcmp une float %97, 0.000000e+00
  br i1 %159, label %165, label %160

160:                                              ; preds = %157
  %161 = load float, float* %80, align 4, !noalias !5
  %162 = fadd float %161, 0.000000e+00
  store float %162, float* %80, align 4, !noalias !5
  %163 = load float, float* %81, align 4, !noalias !5
  %164 = fsub float %163, %154
  store float %164, float* %81, align 4, !noalias !5
  br label %165

165:                                              ; preds = %160, %157, %151
  %166 = bitcast %"class.blink::FloatSize"* %64 to i32*
  store i32 0, i32* %166, align 8, !noalias !5
  %167 = bitcast float* %57 to i32*
  store i32 0, i32* %167, align 4, !noalias !5
  %168 = bitcast %"class.blink::FloatSize"* %74 to i32*
  store i32 0, i32* %168, align 8, !noalias !5
  %169 = bitcast float* %59 to i32*
  store i32 0, i32* %169, align 4, !noalias !5
  %170 = fcmp olt float %102, %104
  %171 = select i1 %170, float %104, float %102
  %172 = load float, float* %82, align 4, !noalias !5
  %173 = fcmp ogt float %171, %172
  br i1 %173, label %174, label %204

174:                                              ; preds = %165
  store float %171, float* %82, align 4, !noalias !5
  br label %204

175:                                              ; preds = %43
  %176 = fadd float %87, %90
  %177 = load float, float* %83, align 4, !noalias !5
  %178 = fsub float %176, %177
  %179 = fpext float %178 to double
  %180 = fcmp ogt double %179, 1.000000e-01
  br i1 %180, label %181, label %189

181:                                              ; preds = %175
  %182 = fadd float %177, %178
  store float %182, float* %83, align 4, !noalias !5
  %183 = fcmp une float %87, 0.000000e+00
  br i1 %183, label %189, label %184

184:                                              ; preds = %181
  %185 = load float, float* %80, align 4, !noalias !5
  %186 = fadd float %185, 0.000000e+00
  store float %186, float* %80, align 4, !noalias !5
  %187 = load float, float* %81, align 4, !noalias !5
  %188 = fsub float %187, %178
  store float %188, float* %81, align 4, !noalias !5
  br label %189

189:                                              ; preds = %184, %181, %175
  %190 = bitcast %"class.blink::FloatRoundedRect::Radii"* %4 to i32*
  store i32 0, i32* %190, align 8, !noalias !5
  %191 = bitcast float* %56 to i32*
  store i32 0, i32* %191, align 4, !noalias !5
  %192 = bitcast %"class.blink::FloatSize"* %69 to i32*
  store i32 0, i32* %192, align 8, !noalias !5
  %193 = bitcast float* %58 to i32*
  store i32 0, i32* %193, align 4, !noalias !5
  %194 = fcmp olt float %92, %94
  %195 = select i1 %194, float %94, float %92
  %196 = load float, float* %82, align 4, !noalias !5
  %197 = fcmp ogt float %195, %196
  br i1 %197, label %198, label %204

198:                                              ; preds = %189
  %199 = fsub float %196, %195
  %200 = load float, float* %80, align 4, !noalias !5
  %201 = fadd float %199, %200
  store float %201, float* %80, align 4, !noalias !5
  %202 = load float, float* %81, align 4, !noalias !5
  %203 = fadd float %202, 0.000000e+00
  store float %203, float* %81, align 4, !noalias !5
  store float %195, float* %82, align 4, !noalias !5
  br label %204

204:                                              ; preds = %43, %119, %125, %140, %145, %165, %174, %189, %198
  call void @_ZN5blink16FloatRoundedRectC1ERKNS_9FloatRectERKNS0_5RadiiE(%"class.blink::FloatRoundedRect"* nonnull %8, %"class.blink::FloatRect"* nonnull dereferenceable(16) %5, %"class.blink::FloatRoundedRect::Radii"* nonnull dereferenceable(32) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #10, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #10, !noalias !5
  %205 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %8, i64 0, i32 0, i32 1, i32 0
  %206 = load float, float* %205, align 4
  %207 = fcmp ugt float %206, 0.000000e+00
  br i1 %207, label %208, label %213

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %8, i64 0, i32 0, i32 1, i32 1
  %210 = load float, float* %209, align 4
  %211 = fcmp ugt float %210, 0.000000e+00
  br i1 %211, label %212, label %213

212:                                              ; preds = %208
  call void @_ZN5blink15GraphicsContext18ClipOutRoundedRectERKNS_16FloatRoundedRectE(%"class.blink::GraphicsContext"* %1, %"class.blink::FloatRoundedRect"* nonnull dereferenceable(48) %8) #10
  br label %213

213:                                              ; preds = %208, %204, %212
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %53) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16BoxBorderPainter19DrawBoxSideFromPathERNS_15GraphicsContextERKNS_12PhysicalRectERKNS_4PathEffNS_7BoxSideENS_5ColorENS_12EBorderStyleE(%"class.blink::BoxBorderPainter"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::Path"* nocapture readnone dereferenceable(16), float, float, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.blink::Color", align 4
  %11 = alloca { i64, i64 }, align 8
  %12 = bitcast { i64, i64 }* %11 to %"class.blink::IntRect"*
  %13 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %10, i64 0, i32 0
  store i32 %7, i32* %13, align 4
  %14 = fcmp ugt float %4, 0.000000e+00
  br i1 %14, label %15, label %106

15:                                               ; preds = %9
  %16 = icmp eq i32 %8, 9
  %17 = fcmp olt float %4, 3.000000e+00
  %18 = and i1 %17, %16
  %19 = select i1 %18, i32 8, i32 %8
  switch i32 %19, label %31 [
    i32 0, label %106
    i32 1, label %106
    i32 6, label %20
    i32 7, label %20
    i32 9, label %21
    i32 5, label %22
    i32 3, label %22
    i32 2, label %23
    i32 4, label %26
  ]

20:                                               ; preds = %15, %15
  tail call void @_ZNK5blink16BoxBorderPainter31DrawDashedDottedBoxSideFromPathERNS_15GraphicsContextERKNS_12PhysicalRectEffNS_5ColorENS_12EBorderStyleE(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, float %4, float %5, i32 %7, i32 %19)
  br label %106

21:                                               ; preds = %15
  tail call void @_ZNK5blink16BoxBorderPainter25DrawDoubleBoxSideFromPathERNS_15GraphicsContextERKNS_12PhysicalRectERKNS_4PathEffNS_7BoxSideENS_5ColorE(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, %"class.blink::Path"* dereferenceable(16) %3, float %4, float %5, i32 %6, i32 %7)
  br label %106

22:                                               ; preds = %15, %15
  tail call void @_ZNK5blink16BoxBorderPainter30DrawRidgeGrooveBoxSideFromPathERNS_15GraphicsContextERKNS_12PhysicalRectERKNS_4PathEffNS_7BoxSideENS_5ColorENS_12EBorderStyleE(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, %"class.blink::Path"* dereferenceable(16) %3, float %4, float %5, i32 %6, i32 %7, i32 %19)
  br label %106

23:                                               ; preds = %15
  switch i32 %6, label %31 [
    i32 3, label %24
    i32 0, label %24
  ]

24:                                               ; preds = %23, %23
  %25 = call i32 @_ZNK5blink5Color4DarkEv(%"class.blink::Color"* nonnull %10) #10
  store i32 %25, i32* %13, align 4
  br label %31

26:                                               ; preds = %15
  %27 = add i32 %6, -1
  %28 = icmp ult i32 %27, 2
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = call i32 @_ZNK5blink5Color4DarkEv(%"class.blink::Color"* nonnull %10) #10
  store i32 %30, i32* %13, align 4
  br label %31

31:                                               ; preds = %23, %15, %29, %26, %24
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %32 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %1, i64 0, i32 4
  %33 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %32, align 8
  call void @_ZN5blink20GraphicsContextState14SetStrokeStyleENS_11StrokeStyleE(%"class.blink::GraphicsContextState"* %33, i32 0) #10
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %34 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %32, align 8
  call void @_ZN5blink20GraphicsContextState12SetFillColorERKNS_5ColorE(%"class.blink::GraphicsContextState"* %34, %"class.blink::Color"* nonnull dereferenceable(4) %10) #10
  %35 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #10
  %36 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = sdiv i32 %37, 64
  %39 = srem i32 %37, 64
  %40 = add nsw i32 %39, 32
  %41 = ashr i32 %40, 6
  %42 = add nsw i32 %41, %38
  %43 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 1, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = sdiv i32 %44, 64
  %46 = srem i32 %44, 64
  %47 = add nsw i32 %46, 32
  %48 = ashr i32 %47, 6
  %49 = add nsw i32 %48, %45
  %50 = zext i32 %49 to i64
  %51 = shl nuw i64 %50, 32
  %52 = zext i32 %42 to i64
  %53 = or i64 %51, %52
  %54 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %55, 0
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %39, i32 %55) #10
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !3
  %62 = sdiv i32 %61, 64
  %63 = srem i32 %61, 64
  %64 = add nsw i32 %63, 32
  %65 = ashr i32 %64, 6
  %66 = sub nsw i32 %62, %41
  %67 = add nsw i32 %65, %66
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %75

69:                                               ; preds = %31
  %70 = add i32 %55, 4
  %71 = icmp ugt i32 %70, 8
  br i1 %71, label %72, label %75, !prof !8

72:                                               ; preds = %69
  %73 = icmp sgt i32 %55, 0
  %74 = select i1 %73, i32 1, i32 -1
  br label %75

75:                                               ; preds = %72, %69, %31
  %76 = phi i32 [ %74, %72 ], [ %67, %31 ], [ 0, %69 ]
  %77 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 1, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp slt i32 %78, 0
  %80 = select i1 %79, i32 -2147483648, i32 2147483647
  %81 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %46, i32 %78) #10
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 %80, i32 %83, !prof !3
  %85 = sdiv i32 %84, 64
  %86 = srem i32 %84, 64
  %87 = add nsw i32 %86, 32
  %88 = ashr i32 %87, 6
  %89 = sub nsw i32 %85, %48
  %90 = add nsw i32 %88, %89
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %98

92:                                               ; preds = %75
  %93 = add i32 %78, 4
  %94 = icmp ugt i32 %93, 8
  br i1 %94, label %95, label %98, !prof !8

95:                                               ; preds = %92
  %96 = icmp sgt i32 %78, 0
  %97 = select i1 %96, i32 1, i32 -1
  br label %98

98:                                               ; preds = %75, %92, %95
  %99 = phi i32 [ %97, %95 ], [ %90, %75 ], [ 0, %92 ]
  %100 = zext i32 %99 to i64
  %101 = shl nuw i64 %100, 32
  %102 = zext i32 %76 to i64
  %103 = or i64 %101, %102
  %104 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  store i64 %53, i64* %104, align 8
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  store i64 %103, i64* %105, align 8
  call void @_ZN5blink15GraphicsContext8DrawRectERKNS_7IntRectE(%"class.blink::GraphicsContext"* %1, %"class.blink::IntRect"* nonnull dereferenceable(16) %12) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #10
  br label %106

106:                                              ; preds = %9, %15, %15, %98, %22, %21, %20
  ret void
}

declare void @_ZN5blink17ObjectPainterBase18DrawLineForBoxSideERNS_15GraphicsContextEffffNS_7BoxSideENS_5ColorENS_12EBorderStyleEiib(%"class.blink::GraphicsContext"* dereferenceable(112), float, float, float, float, i32, i32, i32, i32, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16BoxBorderPainter31DrawDashedDottedBoxSideFromPathERNS_15GraphicsContextERKNS_12PhysicalRectEffNS_5ColorENS_12EBorderStyleE(%"class.blink::BoxBorderPainter"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::PhysicalRect"* dereferenceable(16), float, float, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.blink::Color", align 4
  %9 = alloca %"class.blink::LayoutRectOutsets", align 4
  %10 = alloca %"class.blink::Path", align 8
  %11 = alloca %"class.blink::FloatRoundedRect", align 4
  %12 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %8, i64 0, i32 0
  store i32 %5, i32* %12, align 4
  %13 = bitcast %"class.blink::LayoutRectOutsets"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %9, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 0
  %16 = bitcast %"class.blink::LayoutRectOutsets"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %16, i8 -86, i64 16, i1 false)
  %17 = tail call float @_ZNK5blink10BorderEdge9UsedWidthEv(%"struct.blink::BorderEdge"* %15) #10
  %18 = fsub float -0.000000e+00, %17
  %19 = fpext float %18 to double
  %20 = fmul double %19, 5.000000e-01
  %21 = fptosi double %20 to i32
  %22 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 1
  %23 = tail call float @_ZNK5blink10BorderEdge9UsedWidthEv(%"struct.blink::BorderEdge"* %22) #10
  %24 = fsub float -0.000000e+00, %23
  %25 = fpext float %24 to double
  %26 = fmul double %25, 5.000000e-01
  %27 = fptosi double %26 to i32
  %28 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 2
  %29 = tail call float @_ZNK5blink10BorderEdge9UsedWidthEv(%"struct.blink::BorderEdge"* %28) #10
  %30 = fsub float -0.000000e+00, %29
  %31 = fpext float %30 to double
  %32 = fmul double %31, 5.000000e-01
  %33 = fptosi double %32 to i32
  %34 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 3
  %35 = tail call float @_ZNK5blink10BorderEdge9UsedWidthEv(%"struct.blink::BorderEdge"* %34) #10
  %36 = fsub float -0.000000e+00, %35
  %37 = fpext float %36 to double
  %38 = fmul double %37, 5.000000e-01
  %39 = fptosi double %38 to i32
  %40 = icmp sgt i32 %21, 33554431
  br i1 %40, label %45, label %41

41:                                               ; preds = %7
  %42 = icmp slt i32 %21, -33554432
  %43 = shl i32 %21, 6
  %44 = select i1 %42, i32 -2147483648, i32 %43
  br label %45

45:                                               ; preds = %41, %7
  %46 = phi i32 [ 2147483647, %7 ], [ %44, %41 ]
  store i32 %46, i32* %14, align 4
  %47 = icmp sgt i32 %27, 33554431
  br i1 %47, label %52, label %48

48:                                               ; preds = %45
  %49 = icmp slt i32 %27, -33554432
  %50 = shl i32 %27, 6
  %51 = select i1 %49, i32 -2147483648, i32 %50
  br label %52

52:                                               ; preds = %48, %45
  %53 = phi i32 [ 2147483647, %45 ], [ %51, %48 ]
  %54 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %9, i64 0, i32 1, i32 0
  store i32 %53, i32* %54, align 4
  %55 = icmp sgt i32 %33, 33554431
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = icmp slt i32 %33, -33554432
  %58 = shl i32 %33, 6
  %59 = select i1 %57, i32 -2147483648, i32 %58
  br label %60

60:                                               ; preds = %56, %52
  %61 = phi i32 [ 2147483647, %52 ], [ %59, %56 ]
  %62 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %9, i64 0, i32 2, i32 0
  store i32 %61, i32* %62, align 4
  %63 = icmp sgt i32 %39, 33554431
  br i1 %63, label %68, label %64

64:                                               ; preds = %60
  %65 = icmp slt i32 %39, -33554432
  %66 = shl i32 %39, 6
  %67 = select i1 %65, i32 -2147483648, i32 %66
  br label %68

68:                                               ; preds = %64, %60
  %69 = phi i32 [ 2147483647, %60 ], [ %67, %64 ]
  %70 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %9, i64 0, i32 3, i32 0
  store i32 %69, i32* %70, align 4
  %71 = bitcast %"class.blink::Path"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #10
  %72 = bitcast %"class.blink::Path"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 16, i1 false)
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %10) #10
  %73 = bitcast %"class.blink::FloatRoundedRect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %73) #10
  %74 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 0
  %75 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 2
  %77 = bitcast %"struct.blink::PhysicalBoxSides"* %76 to i32*
  %78 = load i32, i32* %77, align 4
  call void @_ZN5blink21RoundedBorderGeometry30PixelSnappedRoundedInnerBorderERKNS_13ComputedStyleERKNS_12PhysicalRectERKNS_17LayoutRectOutsetsENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* nonnull sret %11, %"class.blink::ComputedStyle"* dereferenceable(104) %75, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %9, i32 %78) #10
  call void @_ZN5blink4Path14AddRoundedRectERKNS_16FloatRoundedRectE(%"class.blink::Path"* nonnull %10, %"class.blink::FloatRoundedRect"* nonnull dereferenceable(48) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %73) #10
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %79 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %1, i64 0, i32 4
  %80 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %79, align 8
  call void @_ZN5blink20GraphicsContextState14SetStrokeColorERKNS_5ColorE(%"class.blink::GraphicsContextState"* %80, %"class.blink::Color"* nonnull dereferenceable(4) %8) #10
  %81 = icmp eq i32 %6, 7
  %82 = select i1 %81, i32 3, i32 2
  %83 = call zeroext i1 @_ZN5blink10StrokeData14StrokeIsDashedEfNS_11StrokeStyleE(float %3, i32 %82) #10
  br i1 %83, label %88, label %84

84:                                               ; preds = %68
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %85 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %79, align 8
  call void @_ZN5blink20GraphicsContextState18SetStrokeThicknessEf(%"class.blink::GraphicsContextState"* %85, float %3) #10
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %86 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %79, align 8
  call void @_ZN5blink20GraphicsContextState14SetStrokeStyleENS_11StrokeStyleE(%"class.blink::GraphicsContextState"* %86, i32 2) #10
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %87 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %79, align 8
  call void @_ZN5blink20GraphicsContextState10SetLineCapENS_7LineCapE(%"class.blink::GraphicsContextState"* %87, i32 1) #10
  br label %92

88:                                               ; preds = %68
  %89 = fmul float %4, 0x40019999A0000000
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %90 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %79, align 8
  call void @_ZN5blink20GraphicsContextState18SetStrokeThicknessEf(%"class.blink::GraphicsContextState"* %90, float %89) #10
  call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %91 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %79, align 8
  call void @_ZN5blink20GraphicsContextState14SetStrokeStyleENS_11StrokeStyleE(%"class.blink::GraphicsContextState"* %91, i32 %82) #10
  br label %92

92:                                               ; preds = %88, %84
  %93 = call float @_ZNK5blink4Path6lengthEv(%"class.blink::Path"* nonnull %10) #10
  %94 = fptosi float %93 to i32
  %95 = fptosi float %3 to i32
  call void @_ZN5blink15GraphicsContext10StrokePathERKNS_4PathEii(%"class.blink::GraphicsContext"* %1, %"class.blink::Path"* nonnull dereferenceable(16) %10, i32 %94, i32 %95) #10
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16BoxBorderPainter25DrawDoubleBoxSideFromPathERNS_15GraphicsContextERKNS_12PhysicalRectERKNS_4PathEffNS_7BoxSideENS_5ColorE(%"class.blink::BoxBorderPainter"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::Path"* nocapture readnone dereferenceable(16), float, float, i32, i32) local_unnamed_addr #0 align 2 {
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.blink::LayoutRectOutsets"*
  %11 = alloca %"class.blink::FloatRoundedRect", align 4
  %12 = alloca %"struct.blink::PhysicalRect", align 4
  %13 = alloca { i64, i64 }, align 8
  %14 = bitcast { i64, i64 }* %13 to %"class.blink::LayoutRectOutsets"*
  %15 = alloca %"class.blink::FloatRoundedRect", align 4
  tail call void @_ZN5blink15GraphicsContext4SaveEv(%"class.blink::GraphicsContext"* %1) #10
  %16 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #10
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 0
  %19 = tail call fastcc { i64, i64 } @_ZN5blink12_GLOBAL__N_118DoubleStripeInsetsEPKNS_10BorderEdgeENS1_18DoubleBorderStripeE(%"struct.blink::BorderEdge"* %18, i32 1)
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %21 = extractvalue { i64, i64 } %19, 0
  store i64 %21, i64* %20, align 8
  %22 = extractvalue { i64, i64 } %19, 1
  store i64 %22, i64* %17, align 8
  %23 = bitcast %"class.blink::FloatRoundedRect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %23) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %23, i8 -1, i64 48, i1 false)
  %24 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 2
  %27 = bitcast %"struct.blink::PhysicalBoxSides"* %26 to i32*
  %28 = load i32, i32* %27, align 4
  call void @_ZN5blink21RoundedBorderGeometry30PixelSnappedRoundedInnerBorderERKNS_13ComputedStyleERKNS_12PhysicalRectERKNS_17LayoutRectOutsetsENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* nonnull sret %11, %"class.blink::ComputedStyle"* dereferenceable(104) %25, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %10, i32 %28) #10
  call void @_ZN5blink15GraphicsContext15ClipRoundedRectERKNS_16FloatRoundedRectE8SkClipOpNS_16AntiAliasingModeE(%"class.blink::GraphicsContext"* %1, %"class.blink::FloatRoundedRect"* nonnull dereferenceable(48) %11, i32 1, i32 1) #10
  call void @_ZNK5blink16BoxBorderPainter19DrawBoxSideFromPathERNS_15GraphicsContextERKNS_12PhysicalRectERKNS_4PathEffNS_7BoxSideENS_5ColorENS_12EBorderStyleE(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, %"class.blink::Path"* dereferenceable(16) %3, float %4, float %5, i32 %6, i32 %7, i32 8)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  call void @_ZN5blink15GraphicsContext7RestoreEv(%"class.blink::GraphicsContext"* %1) #10
  call void @_ZN5blink15GraphicsContext4SaveEv(%"class.blink::GraphicsContext"* %1) #10
  %29 = bitcast %"struct.blink::PhysicalRect"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %12, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %12, i64 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %12, i64 0, i32 1, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %12, i64 0, i32 1, i32 1, i32 0
  %34 = bitcast %"struct.blink::PhysicalRect"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 4 %34, i64 16, i1 false)
  %35 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #10
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %37 = call fastcc { i64, i64 } @_ZN5blink12_GLOBAL__N_118DoubleStripeInsetsEPKNS_10BorderEdgeENS1_18DoubleBorderStripeE(%"struct.blink::BorderEdge"* %18, i32 0)
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  %39 = extractvalue { i64, i64 } %37, 0
  store i64 %39, i64* %38, align 8
  %40 = extractvalue { i64, i64 } %37, 1
  store i64 %40, i64* %36, align 8
  %41 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = or i32 %42, 1
  %44 = icmp eq i32 %43, 3
  br i1 %44, label %45, label %92

45:                                               ; preds = %8
  %46 = lshr i64 %40, 32
  %47 = trunc i64 %46 to i32
  %48 = trunc i64 %40 to i32
  %49 = lshr i64 %39, 32
  %50 = trunc i64 %49 to i32
  %51 = trunc i64 %39 to i32
  %52 = bitcast { i64, i64 }* %13 to i32*
  %53 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %14, i64 0, i32 3, i32 0
  %54 = bitcast i64* %36 to i32*
  %55 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %14, i64 0, i32 1, i32 0
  %56 = load i32, i32* %31, align 4
  %57 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %56, i32 -64)
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 -2147483648, i32 %59, !prof !3
  store i32 %60, i32* %31, align 4
  %61 = load i32, i32* %30, align 4
  %62 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %61, i32 -64)
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 -2147483648, i32 %64, !prof !3
  store i32 %65, i32* %30, align 4
  %66 = load i32, i32* %32, align 4
  %67 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %66, i32 128) #10
  %68 = extractvalue { i32, i1 } %67, 1
  %69 = extractvalue { i32, i1 } %67, 0
  %70 = select i1 %68, i32 2147483647, i32 %69, !prof !3
  store i32 %70, i32* %32, align 4
  %71 = load i32, i32* %33, align 4
  %72 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %71, i32 128) #10
  %73 = extractvalue { i32, i1 } %72, 1
  %74 = extractvalue { i32, i1 } %72, 0
  %75 = select i1 %73, i32 2147483647, i32 %74, !prof !3
  store i32 %75, i32* %33, align 4
  %76 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %51, i32 -64)
  %77 = extractvalue { i32, i1 } %76, 1
  %78 = extractvalue { i32, i1 } %76, 0
  %79 = select i1 %77, i32 -2147483648, i32 %78, !prof !3
  store i32 %79, i32* %52, align 8
  %80 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %50, i32 -64)
  %81 = extractvalue { i32, i1 } %80, 1
  %82 = extractvalue { i32, i1 } %80, 0
  %83 = select i1 %81, i32 -2147483648, i32 %82, !prof !3
  store i32 %83, i32* %55, align 4
  %84 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %48, i32 -64)
  %85 = extractvalue { i32, i1 } %84, 1
  %86 = extractvalue { i32, i1 } %84, 0
  %87 = select i1 %85, i32 -2147483648, i32 %86, !prof !3
  store i32 %87, i32* %54, align 8
  %88 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %47, i32 -64)
  %89 = extractvalue { i32, i1 } %88, 1
  %90 = extractvalue { i32, i1 } %88, 0
  %91 = select i1 %89, i32 -2147483648, i32 %90, !prof !3
  store i32 %91, i32* %53, align 4
  br label %92

92:                                               ; preds = %45, %8
  %93 = bitcast %"class.blink::FloatRoundedRect"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %93) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %93, i8 -1, i64 48, i1 false)
  %94 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %95 = load i32, i32* %27, align 4
  call void @_ZN5blink21RoundedBorderGeometry30PixelSnappedRoundedInnerBorderERKNS_13ComputedStyleERKNS_12PhysicalRectERKNS_17LayoutRectOutsetsENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* nonnull sret %15, %"class.blink::ComputedStyle"* dereferenceable(104) %94, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %12, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %14, i32 %95) #10
  call void @_ZN5blink15GraphicsContext18ClipOutRoundedRectERKNS_16FloatRoundedRectE(%"class.blink::GraphicsContext"* %1, %"class.blink::FloatRoundedRect"* nonnull dereferenceable(48) %15) #10
  call void @_ZNK5blink16BoxBorderPainter19DrawBoxSideFromPathERNS_15GraphicsContextERKNS_12PhysicalRectERKNS_4PathEffNS_7BoxSideENS_5ColorENS_12EBorderStyleE(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, %"class.blink::Path"* dereferenceable(16) %3, float %4, float %5, i32 %6, i32 %7, i32 8)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %93) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #10
  call void @_ZN5blink15GraphicsContext7RestoreEv(%"class.blink::GraphicsContext"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16BoxBorderPainter30DrawRidgeGrooveBoxSideFromPathERNS_15GraphicsContextERKNS_12PhysicalRectERKNS_4PathEffNS_7BoxSideENS_5ColorENS_12EBorderStyleE(%"class.blink::BoxBorderPainter"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::Path"* nocapture readnone dereferenceable(16), float, float, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.blink::FloatRoundedRect", align 4
  %11 = alloca %"class.blink::LayoutRectOutsets", align 4
  %12 = icmp eq i32 %8, 3
  %13 = select i1 %12, i32 4, i32 2
  %14 = select i1 %12, i32 2, i32 4
  tail call void @_ZNK5blink16BoxBorderPainter19DrawBoxSideFromPathERNS_15GraphicsContextERKNS_12PhysicalRectERKNS_4PathEffNS_7BoxSideENS_5ColorENS_12EBorderStyleE(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, %"class.blink::Path"* dereferenceable(16) %3, float %4, float %5, i32 %6, i32 %7, i32 %14)
  tail call void @_ZN5blink15GraphicsContext4SaveEv(%"class.blink::GraphicsContext"* %1) #10
  %15 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 0
  %16 = tail call float @_ZNK5blink10BorderEdge9UsedWidthEv(%"struct.blink::BorderEdge"* %15) #10
  %17 = fmul float %16, 5.000000e-01
  %18 = fptosi float %17 to i32
  %19 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 2
  %20 = tail call float @_ZNK5blink10BorderEdge9UsedWidthEv(%"struct.blink::BorderEdge"* %19) #10
  %21 = fmul float %20, 5.000000e-01
  %22 = fptosi float %21 to i32
  %23 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 3
  %24 = tail call float @_ZNK5blink10BorderEdge9UsedWidthEv(%"struct.blink::BorderEdge"* %23) #10
  %25 = fmul float %24, 5.000000e-01
  %26 = fptosi float %25 to i32
  %27 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 5, i64 1
  %28 = tail call float @_ZNK5blink10BorderEdge9UsedWidthEv(%"struct.blink::BorderEdge"* %27) #10
  %29 = fmul float %28, 5.000000e-01
  %30 = fptosi float %29 to i32
  %31 = bitcast %"class.blink::FloatRoundedRect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %31, i8 -1, i64 48, i1 false)
  %32 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 0
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %34 = bitcast %"class.blink::LayoutRectOutsets"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #10
  %35 = icmp slt i32 %18, -33554431
  br i1 %35, label %41, label %36

36:                                               ; preds = %9
  %37 = icmp sgt i32 %18, 33554432
  br i1 %37, label %41, label %38

38:                                               ; preds = %36
  %39 = shl i32 %18, 6
  %40 = sub i32 0, %39
  br label %41

41:                                               ; preds = %36, %9, %38
  %42 = phi i32 [ %40, %38 ], [ 2147483647, %9 ], [ -2147483648, %36 ]
  %43 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %11, i64 0, i32 0, i32 0
  store i32 %42, i32* %43, align 4
  %44 = icmp slt i32 %30, -33554431
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = icmp sgt i32 %30, 33554432
  br i1 %46, label %50, label %47

47:                                               ; preds = %45
  %48 = shl i32 %30, 6
  %49 = sub i32 0, %48
  br label %50

50:                                               ; preds = %45, %41, %47
  %51 = phi i32 [ %49, %47 ], [ 2147483647, %41 ], [ -2147483648, %45 ]
  %52 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %11, i64 0, i32 1, i32 0
  store i32 %51, i32* %52, align 4
  %53 = icmp slt i32 %22, -33554431
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = icmp sgt i32 %22, 33554432
  br i1 %55, label %59, label %56

56:                                               ; preds = %54
  %57 = shl i32 %22, 6
  %58 = sub i32 0, %57
  br label %59

59:                                               ; preds = %54, %50, %56
  %60 = phi i32 [ %58, %56 ], [ 2147483647, %50 ], [ -2147483648, %54 ]
  %61 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %11, i64 0, i32 2, i32 0
  store i32 %60, i32* %61, align 4
  %62 = icmp slt i32 %26, -33554431
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = icmp sgt i32 %26, 33554432
  br i1 %64, label %68, label %65

65:                                               ; preds = %63
  %66 = shl i32 %26, 6
  %67 = sub i32 0, %66
  br label %68

68:                                               ; preds = %63, %59, %65
  %69 = phi i32 [ %67, %65 ], [ 2147483647, %59 ], [ -2147483648, %63 ]
  %70 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %11, i64 0, i32 3, i32 0
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %0, i64 0, i32 2
  %72 = bitcast %"struct.blink::PhysicalBoxSides"* %71 to i32*
  %73 = load i32, i32* %72, align 4
  call void @_ZN5blink21RoundedBorderGeometry30PixelSnappedRoundedInnerBorderERKNS_13ComputedStyleERKNS_12PhysicalRectERKNS_17LayoutRectOutsetsENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* nonnull sret %10, %"class.blink::ComputedStyle"* dereferenceable(104) %33, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %11, i32 %73) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #10
  call void @_ZN5blink15GraphicsContext15ClipRoundedRectERKNS_16FloatRoundedRectE8SkClipOpNS_16AntiAliasingModeE(%"class.blink::GraphicsContext"* %1, %"class.blink::FloatRoundedRect"* nonnull dereferenceable(48) %10, i32 1, i32 1) #10
  call void @_ZNK5blink16BoxBorderPainter19DrawBoxSideFromPathERNS_15GraphicsContextERKNS_12PhysicalRectERKNS_4PathEffNS_7BoxSideENS_5ColorENS_12EBorderStyleE(%"class.blink::BoxBorderPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, %"class.blink::Path"* dereferenceable(16) %3, float %4, float %5, i32 %6, i32 %7, i32 %13)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #10
  call void @_ZN5blink15GraphicsContext7RestoreEv(%"class.blink::GraphicsContext"* %1) #10
  ret void
}

declare i32 @_ZNK5blink5Color4DarkEv(%"class.blink::Color"*) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext8DrawRectERKNS_7IntRectE(%"class.blink::GraphicsContext"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

declare float @_ZNK5blink10BorderEdge9UsedWidthEv(%"struct.blink::BorderEdge"*) local_unnamed_addr #2

declare void @_ZN5blink4Path14AddRoundedRectERKNS_16FloatRoundedRectE(%"class.blink::Path"*, %"class.blink::FloatRoundedRect"* dereferenceable(48)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink10StrokeData14StrokeIsDashedEfNS_11StrokeStyleE(float, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16BoxBorderPainter29DrawWideDottedBoxSideFromPathERNS_15GraphicsContextERKNS_4PathEf(%"class.blink::BoxBorderPainter"* nocapture readnone, %"class.blink::GraphicsContext"* dereferenceable(112), %"class.blink::Path"* dereferenceable(16), float) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %5 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %1, i64 0, i32 4
  %6 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %5, align 8
  tail call void @_ZN5blink20GraphicsContextState18SetStrokeThicknessEf(%"class.blink::GraphicsContextState"* %6, float %3) #10
  tail call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %7 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %5, align 8
  tail call void @_ZN5blink20GraphicsContextState14SetStrokeStyleENS_11StrokeStyleE(%"class.blink::GraphicsContextState"* %7, i32 2) #10
  tail call void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"* %1) #10
  %8 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %5, align 8
  tail call void @_ZN5blink20GraphicsContextState10SetLineCapENS_7LineCapE(%"class.blink::GraphicsContextState"* %8, i32 1) #10
  %9 = tail call float @_ZNK5blink4Path6lengthEv(%"class.blink::Path"* %2) #10
  %10 = fptosi float %9 to i32
  %11 = fptosi float %3 to i32
  tail call void @_ZN5blink15GraphicsContext10StrokePathERKNS_4PathEii(%"class.blink::GraphicsContext"* %1, %"class.blink::Path"* dereferenceable(16) %2, i32 %10, i32 %11) #10
  ret void
}

declare void @_ZN5blink15GraphicsContext10StrokePathERKNS_4PathEii(%"class.blink::GraphicsContext"*, %"class.blink::Path"* dereferenceable(16), i32, i32) local_unnamed_addr #2

declare float @_ZNK5blink4Path6lengthEv(%"class.blink::Path"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16FindIntersectionERKNS_10FloatPointES2_S2_S2_RS0_(%"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #2

declare float @_ZNK5blink10BorderEdge26GetDoubleBorderStripeWidthENS0_18DoubleBorderStripeE(%"struct.blink::BorderEdge"*, i32) local_unnamed_addr #2

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirection(%class.SkPath*, %class.SkRRect* dereferenceable(52), i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16FloatRoundedRectcv7SkRRectEv(%class.SkRRect* noalias sret, %"class.blink::FloatRoundedRect"*) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca [4 x %struct.SkPoint], align 16
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %0, i64 0, i32 2
  %7 = bitcast %class.SkRRect* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 52, i1 false) #10
  %8 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp ogt float %9, 0xBE80000000000000
  %11 = fcmp olt float %9, 0x3E80000000000000
  %12 = and i1 %10, %11
  %13 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 0, i32 1
  br i1 %12, label %17, label %14

14:                                               ; preds = %2
  %15 = bitcast float* %13 to i32*
  %16 = load i32, i32* %15, align 4
  br label %59

17:                                               ; preds = %2
  %18 = load float, float* %13, align 4
  %19 = fcmp ogt float %18, 0xBE80000000000000
  %20 = fcmp olt float %18, 0x3E80000000000000
  %21 = and i1 %19, %20
  %22 = bitcast float %18 to i32
  br i1 %21, label %23, label %59

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 0
  %25 = load float, float* %24, align 4
  %26 = fcmp ogt float %25, 0xBE80000000000000
  %27 = fcmp olt float %25, 0x3E80000000000000
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %59

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 1
  %31 = load float, float* %30, align 4
  %32 = fcmp ogt float %31, 0xBE80000000000000
  %33 = fcmp olt float %31, 0x3E80000000000000
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %59

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 2, i32 0
  %37 = load float, float* %36, align 4
  %38 = fcmp ogt float %37, 0xBE80000000000000
  %39 = fcmp olt float %37, 0x3E80000000000000
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %59

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 2, i32 1
  %43 = load float, float* %42, align 4
  %44 = fcmp ogt float %43, 0xBE80000000000000
  %45 = fcmp olt float %43, 0x3E80000000000000
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %59

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 3, i32 0
  %49 = load float, float* %48, align 4
  %50 = fcmp ogt float %49, 0xBE80000000000000
  %51 = fcmp olt float %49, 0x3E80000000000000
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %59

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 3, i32 1
  %55 = load float, float* %54, align 4
  %56 = fcmp ule float %55, 0xBE80000000000000
  %57 = fcmp uge float %55, 0x3E80000000000000
  %58 = or i1 %56, %57
  br i1 %58, label %59, label %100

59:                                               ; preds = %14, %53, %35, %41, %23, %29, %17, %47
  %60 = phi i32 [ %16, %14 ], [ %22, %53 ], [ %22, %35 ], [ %22, %41 ], [ %22, %23 ], [ %22, %29 ], [ %22, %17 ], [ %22, %47 ]
  %61 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %62 = bitcast [4 x %struct.SkPoint]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #10
  %63 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 0
  %64 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 0, i32 0
  %65 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 0, i32 1
  %66 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 1
  %67 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 1, i32 1
  %68 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 2
  store float %9, float* %64, align 16
  %69 = bitcast float* %65 to i32*
  store i32 %60, i32* %69, align 4
  %70 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 0
  %71 = bitcast float* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 1
  %74 = bitcast float* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = bitcast %struct.SkPoint* %66 to i32*
  store i32 %72, i32* %76, align 8
  %77 = bitcast float* %67 to i32*
  store i32 %75, i32* %77, align 4
  %78 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 2, i32 0
  %79 = bitcast float* %78 to <4 x i32>*
  %80 = load <4 x i32>, <4 x i32>* %79, align 4
  %81 = shufflevector <4 x i32> %80, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %82 = bitcast %struct.SkPoint* %68 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %82, align 16
  %83 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #10
  %84 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 0, i32 0
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 0, i32 1
  %87 = load float, float* %86, align 4
  %88 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 1, i32 0
  %89 = load float, float* %88, align 4
  %90 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 1, i32 1
  %91 = load float, float* %90, align 4
  %92 = insertelement <2 x float> undef, float %85, i32 0
  %93 = insertelement <2 x float> %92, float %87, i32 1
  %94 = fadd float %85, %89
  %95 = insertelement <2 x float> undef, float %94, i32 0
  %96 = fadd float %87, %91
  %97 = insertelement <2 x float> %95, float %96, i32 1
  %98 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %93, <2 x float>* %98, align 8
  %99 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %97, <2 x float>* %99, align 8
  call void @_ZN7SkRRect12setRectRadiiERK6SkRectPK7SkPoint(%class.SkRRect* %0, %struct.SkRect* nonnull dereferenceable(16) %61, %struct.SkPoint* nonnull %63) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #10
  br label %116

100:                                              ; preds = %53
  %101 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %102 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #10
  %103 = bitcast %"class.blink::FloatRoundedRect"* %1 to <2 x float>*
  %104 = load <2 x float>, <2 x float>* %103, align 4
  %105 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 1, i32 0
  %106 = bitcast float* %105 to <2 x float>*
  %107 = load <2 x float>, <2 x float>* %106, align 4
  %108 = fadd <2 x float> %104, %107
  %109 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %104, <2 x float>* %109, align 8
  %110 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %108, <2 x float>* %110, align 8
  %111 = call zeroext i1 @_ZN7SkRRect14initializeRectERK6SkRect(%class.SkRRect* %0, %struct.SkRect* nonnull dereferenceable(16) %101) #10
  br i1 %111, label %112, label %115

112:                                              ; preds = %100
  %113 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %0, i64 0, i32 1, i64 0
  %114 = bitcast %struct.SkPoint* %113 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %114, i8 0, i64 32, i1 false) #10
  store i32 1, i32* %6, align 4
  br label %115

115:                                              ; preds = %100, %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #10
  br label %116

116:                                              ; preds = %115, %59
  ret void
}

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #2

declare void @_ZN5blink15GraphicsContext8DrawPathERK6SkPathRKN2cc10PaintFlagsENS_14DarkModeFilter11ElementRoleE(%"class.blink::GraphicsContext"*, %class.SkPath* dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72), i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

declare void @_ZN7SkRRect12setRectRadiiERK6SkRectPK7SkPoint(%class.SkRRect*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*) local_unnamed_addr #2

declare zeroext i1 @_ZN7SkRRect14initializeRectERK6SkRect(%class.SkRRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext10StrokeRectERKNS_9FloatRectEf(%"class.blink::GraphicsContext"*, %"class.blink::FloatRect"* dereferenceable(16), float) local_unnamed_addr #2

declare void @_ZN5blink20GraphicsContextState18SetShouldAntialiasEb(%"class.blink::GraphicsContextState"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15GraphicsContext16RealizePaintSaveEv(%"class.blink::GraphicsContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.1709", align 8
  %3 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 4
  %4 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %4, i64 0, i32 5
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %70, label %8

8:                                                ; preds = %1
  %9 = add i16 %6, -1
  store i16 %9, i16* %5, align 8
  %10 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, %12
  br i1 %16, label %17, label %65

17:                                               ; preds = %8
  %18 = bitcast %"class.std::__1::unique_ptr.1709"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %3, align 8
  %20 = tail call noalias i8* @malloc(i64 192) #10
  %21 = bitcast i8* %20 to %"class.blink::GraphicsContextState"*
  tail call void @_ZN5blink20GraphicsContextStateC1ERKS0_(%"class.blink::GraphicsContextState"* %21, %"class.blink::GraphicsContextState"* dereferenceable(192) %19) #10
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.1709", %"class.std::__1::unique_ptr.1709"* %2, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr.1709"* %2 to i8**
  store i8* %20, i8** %23, align 8
  %24 = load i32, i32* %14, align 4
  %25 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %37, label %28, !prof !3

28:                                               ; preds = %17
  %29 = ptrtoint i8* %20 to i64
  %30 = getelementptr inbounds %"class.WTF::Vector.1706", %"class.WTF::Vector.1706"* %13, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.std::__1::unique_ptr.1709"*, %"class.std::__1::unique_ptr.1709"** %30, align 8
  %32 = zext i32 %24 to i64
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.1709", %"class.std::__1::unique_ptr.1709"* %31, i64 %32
  store %"class.blink::GraphicsContextState"* null, %"class.blink::GraphicsContextState"** %22, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.1709"* %33 to i64*
  store i64 %29, i64* %34, align 8
  %35 = load i32, i32* %14, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %14, align 4
  br label %38

37:                                               ; preds = %17
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1706"* %13, %"class.std::__1::unique_ptr.1709"* nonnull dereferenceable(8) %2) #10
  br label %38

38:                                               ; preds = %28, %37
  %39 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %22, align 8
  store %"class.blink::GraphicsContextState"* null, %"class.blink::GraphicsContextState"** %22, align 8
  %40 = icmp eq %"class.blink::GraphicsContextState"* %39, null
  br i1 %40, label %59, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %39, i64 0, i32 2, i32 5, i32 0
  %43 = load %class.SkPathEffect*, %class.SkPathEffect** %42, align 8
  %44 = icmp eq %class.SkPathEffect* %43, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %43, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %class.SkPathEffect* %43 to %class.SkRefCntBase*
  %51 = bitcast %class.SkPathEffect* %43 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8
  call void %54(%class.SkRefCntBase* nonnull %50) #10
  br label %55

55:                                               ; preds = %49, %45, %41
  %56 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %39, i64 0, i32 1
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* %56) #10
  %57 = getelementptr inbounds %"class.blink::GraphicsContextState", %"class.blink::GraphicsContextState"* %39, i64 0, i32 0
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* %57) #10
  %58 = bitcast %"class.blink::GraphicsContextState"* %39 to i8*
  call void @free(i8* %58) #10
  br label %59

59:                                               ; preds = %38, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %60 = load i32, i32* %10, align 8
  %61 = call dereferenceable(8) %"class.std::__1::unique_ptr.1709"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1706"* %13, i32 %60) #10
  %62 = bitcast %"class.std::__1::unique_ptr.1709"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.blink::GraphicsContextState"** %3 to i64*
  store i64 %63, i64* %64, align 8
  br label %70

65:                                               ; preds = %8
  %66 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %3, align 8
  %67 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.1709"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1706"* %13, i32 %12) #10
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.1709", %"class.std::__1::unique_ptr.1709"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"** %68, align 8
  store %"class.blink::GraphicsContextState"* %69, %"class.blink::GraphicsContextState"** %3, align 8
  tail call void @_ZN5blink20GraphicsContextState4CopyERKS0_(%"class.blink::GraphicsContextState"* %69, %"class.blink::GraphicsContextState"* dereferenceable(192) %66) #10
  br label %70

70:                                               ; preds = %1, %59, %65
  ret void
}

declare void @_ZN5blink20GraphicsContextState4CopyERKS0_(%"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"* dereferenceable(192)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1706"*, %"class.std::__1::unique_ptr.1709"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1706", %"class.WTF::Vector.1706"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1706", %"class.WTF::Vector.1706"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.1709"*, %"class.std::__1::unique_ptr.1709"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.1709"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.1709", %"class.std::__1::unique_ptr.1709"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.1709"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1706", %"class.WTF::Vector.1706"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.1709"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink20GraphicsContextStateENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1706"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.1709"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.1709"*, %"class.std::__1::unique_ptr.1709"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.1709"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.1709"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.1706"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.1706"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.1709"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.1709"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.1709"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1706", %"class.WTF::Vector.1706"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.1709"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink20GraphicsContextStateENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1706"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.1709"*, %"class.std::__1::unique_ptr.1709"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.1709"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.1709"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.1706"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.1706"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.1709"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.1709"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1709", %"class.std::__1::unique_ptr.1709"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.1709"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.1709"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.1709", %"class.std::__1::unique_ptr.1709"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.1709", %"class.std::__1::unique_ptr.1709"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.1709"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::GraphicsContextState"* null, %"class.blink::GraphicsContextState"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.1709"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink20GraphicsContextStateENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink20GraphicsContextStateC1ERKS0_(%"class.blink::GraphicsContextState"*, %"class.blink::GraphicsContextState"* dereferenceable(192)) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.1709"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20GraphicsContextStateENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1706"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1706", %"class.WTF::Vector.1706"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.1706", %"class.WTF::Vector.1706"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.1709"*, %"class.std::__1::unique_ptr.1709"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.1709", %"class.std::__1::unique_ptr.1709"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.1709"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN5blink20GraphicsContextState12SetFillColorERKNS_5ColorE(%"class.blink::GraphicsContextState"*, %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext4SaveEv(%"class.blink::GraphicsContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16BoxBorderPainter17ComplexBorderInfo18BuildOpacityGroupsERKS0_RKN3WTF6VectorINS_7BoxSideELj4ENS4_18PartitionAllocatorEEE(%"struct.blink::BoxBorderPainter::ComplexBorderInfo"*, %"class.blink::BoxBorderPainter"* dereferenceable(184), %"class.WTF::Vector.1824"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"struct.blink::(anonymous namespace)::OpacityGroup", align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %2, i64 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %2, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i32, i32* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %38, label %16

16:                                               ; preds = %3
  %17 = bitcast i32* %7 to i8*
  %18 = bitcast %"struct.blink::(anonymous namespace)::OpacityGroup"* %8 to i8*
  %19 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %8, i64 0, i32 0, i32 0, i32 1, i64 0
  %20 = bitcast %"struct.blink::(anonymous namespace)::OpacityGroup"* %8 to i8**
  %21 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  %23 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %8, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %8, i64 0, i32 2
  %25 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %26 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %8, i64 0, i32 0, i32 0
  %29 = bitcast i32* %23 to i64*
  %30 = getelementptr inbounds %"struct.blink::BoxBorderPainter::ComplexBorderInfo", %"struct.blink::BoxBorderPainter::ComplexBorderInfo"* %0, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast i8* %19 to i32*
  %33 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %35 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %37 = bitcast %"class.logging::CheckError"* %6 to i8*
  br label %39

38:                                               ; preds = %108, %3
  ret void

39:                                               ; preds = %16, %108
  %40 = phi i32 [ 0, %16 ], [ %77, %108 ]
  %41 = phi i32* [ %10, %16 ], [ %114, %108 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #10
  store i32 -1431655766, i32* %7, align 4
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %7, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %1, i64 0, i32 5, i64 %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = lshr i32 %45, 24
  %47 = icmp eq i32 %46, %40
  br i1 %47, label %76, label %48

48:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #10
  store i8* %19, i8** %20, align 8
  store i32 4, i32* %21, align 8
  store i32 0, i32* %22, align 4
  store i32 0, i32* %23, align 8
  store i32 %46, i32* %24, align 4
  %49 = load i32, i32* %25, align 4
  %50 = load i32, i32* %26, align 8
  %51 = icmp eq i32 %49, %50
  br i1 %51, label %66, label %52, !prof !3

52:                                               ; preds = %48
  %53 = load %"struct.blink::(anonymous namespace)::OpacityGroup"*, %"struct.blink::(anonymous namespace)::OpacityGroup"** %27, align 8
  %54 = zext i32 %49 to i64
  %55 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %53, i64 %54
  %56 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %55, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %53, i64 %54, i32 0, i32 0, i32 1, i64 0
  %58 = bitcast %"struct.blink::(anonymous namespace)::OpacityGroup"* %55 to i8**
  store i8* %57, i8** %58, align 8
  %59 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %53, i64 %54, i32 0, i32 0, i32 0, i32 1
  store i32 4, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %53, i64 %54, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %60, align 4
  call void @_ZN3WTF12VectorBufferIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer.1825"* %56, %"class.WTF::VectorBuffer.1825"* nonnull dereferenceable(32) %28, i64 0, i64 0) #10
  %61 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %53, i64 %54, i32 1
  %62 = bitcast i32* %61 to i64*
  %63 = load i64, i64* %29, align 8
  store i64 %63, i64* %62, align 8
  %64 = load i32, i32* %25, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %25, align 4
  br label %67

66:                                               ; preds = %48
  call fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_112OpacityGroupELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1821"* %30, %"struct.blink::(anonymous namespace)::OpacityGroup"* nonnull dereferenceable(40) %8) #10
  br label %67

67:                                               ; preds = %52, %66
  %68 = load i32, i32* %22, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %71, label %70, !prof !3

70:                                               ; preds = %67
  store i32 0, i32* %22, align 4
  br label %71

71:                                               ; preds = %70, %67
  %72 = load i32*, i32** %31, align 8
  %73 = icmp eq i32* %72, %32
  br i1 %73, label %75, label %74, !prof !4

74:                                               ; preds = %71
  call void @_ZN3WTF12VectorBufferIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1825"* nonnull %28, i32* %72) #10
  br label %75

75:                                               ; preds = %71, %74
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #10
  br label %76

76:                                               ; preds = %39, %75
  %77 = phi i32 [ %46, %75 ], [ %40, %39 ]
  %78 = load i32, i32* %25, align 4
  %79 = add i32 %78, -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %80 = icmp eq i32 %78, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* null, i8** %34, align 8
  br label %89

82:                                               ; preds = %76
  %83 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %79) #10
  %84 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %83, i8* %84) #10
  %85 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* %85, i8** %34, align 8
  %86 = icmp eq i8* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %82
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %5) #10
  %88 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  br label %89

89:                                               ; preds = %81, %82, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %90 = load %"struct.blink::(anonymous namespace)::OpacityGroup"*, %"struct.blink::(anonymous namespace)::OpacityGroup"** %27, align 8
  %91 = zext i32 %79 to i64
  %92 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %90, i64 %91
  %93 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %90, i64 %91, i32 0, i32 0, i32 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %90, i64 %91, i32 0, i32 0, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %94, %96
  br i1 %97, label %106, label %98, !prof !3

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %92, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = zext i32 %94 to i64
  %102 = getelementptr inbounds i32, i32* %100, i64 %101
  %103 = load i32, i32* %7, align 4
  store i32 %103, i32* %102, align 4
  %104 = load i32, i32* %93, align 4
  %105 = add i32 %104, 1
  store i32 %105, i32* %93, align 4
  br label %108

106:                                              ; preds = %89
  %107 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %92, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1824"* %107, i32* nonnull dereferenceable(4) %7) #10
  br label %108

108:                                              ; preds = %98, %106
  %109 = load i32, i32* %7, align 4
  %110 = shl i32 1, %109
  %111 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %90, i64 %91, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = or i32 %112, %110
  store i32 %113, i32* %111, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #10
  %114 = getelementptr inbounds i32, i32* %41, i64 1
  %115 = icmp eq i32* %114, %14
  br i1 %115, label %38, label %39
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1824"*, i32* dereferenceable(4)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1824"* %0, i32 %5) #10
  %14 = load i32*, i32** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i32* %1 to i64
  %17 = ptrtoint i32* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 2
  tail call void @_ZN3WTF6VectorIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1824"* %0, i32 %5) #10
  %20 = load i32*, i32** %6, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i32* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i32* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %23, i64 %26
  %28 = load i32, i32* %24, align 4
  store i32 %28, i32* %27, align 4
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1824"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 4
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7BoxSideEEEmm(i64 %37) #10
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7BoxSideEEEPKcv, i64 0, i64 0)) #10
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1824"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 2
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1824"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 4, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1824"* %0, i32 %27) #10
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1824"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i32*
  %10 = icmp eq i32* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1824"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1824"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i32* %6 to i8*
  %27 = shl nuw nsw i64 %25, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #10
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1825"* %19, i32* nonnull %6) #10
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7BoxSideEEEmm(i64 %30) #10
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7BoxSideEEEPKcv, i64 0, i64 0)) #10
  %33 = lshr i64 %31, 2
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i32* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i32* %36 to i8*
  %45 = shl nuw nsw i64 %43, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #10
  %46 = load i32*, i32** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i32* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1825"* %53, i32* %48) #10
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1824"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1824", %"class.WTF::Vector.1824"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7BoxSideEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1825"*, i32*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEvT0_SA_T_(i32*, i32*, %class.anon* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %class.anon, %class.anon* %2, i64 0, i32 0
  br label %5

5:                                                ; preds = %463, %3
  %6 = phi i32* [ %1, %3 ], [ %414, %463 ]
  %7 = phi i32* [ %0, %3 ], [ %15, %463 ]
  %8 = ptrtoint i32* %6 to i64
  %9 = getelementptr inbounds i32, i32* %6, i64 -1
  %10 = getelementptr inbounds i32, i32* %6, i64 -2
  %11 = ptrtoint i32* %6 to i64
  br label %12

12:                                               ; preds = %472, %5
  %13 = phi i32* [ %7, %5 ], [ %473, %472 ]
  br label %14

14:                                               ; preds = %281, %12
  %15 = phi i32* [ %13, %12 ], [ %217, %281 ]
  %16 = ptrtoint i32* %15 to i64
  %17 = sub i64 %8, %16
  %18 = ashr exact i64 %17, 2
  switch i64 %18, label %73 [
    i64 0, label %476
    i64 1, label %476
    i64 2, label %19
    i64 3, label %58
    i64 4, label %62
    i64 5, label %67
  ]

19:                                               ; preds = %14
  %20 = getelementptr inbounds i32, i32* %6, i64 -1
  %21 = load i32, i32* %20, align 4
  %22 = load i32, i32* %15, align 4
  %23 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %4, align 8
  %24 = zext i32 %21 to i64
  %25 = zext i32 %22 to i64
  %26 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %23, i64 0, i32 5, i64 %24, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = lshr i32 %27, 24
  %29 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %23, i64 0, i32 5, i64 %25, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = lshr i32 %30, 24
  %32 = icmp eq i32 %28, %31
  br i1 %32, label %35, label %33

33:                                               ; preds = %19
  %34 = icmp ult i32 %28, %31
  br i1 %34, label %57, label %476

35:                                               ; preds = %19
  %36 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %23, i64 0, i32 5, i64 %24, i32 2
  %37 = load i8, i8* %36, align 1
  %38 = and i8 %37, 15
  %39 = zext i8 %38 to i64
  %40 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %23, i64 0, i32 5, i64 %25, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = and i8 %43, 15
  %45 = zext i8 %44 to i64
  %46 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %41, %47
  br i1 %48, label %51, label %49

49:                                               ; preds = %35
  %50 = icmp ult i32 %41, %47
  br i1 %50, label %57, label %476

51:                                               ; preds = %35
  %52 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %24
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %25
  %55 = load i32, i32* %54, align 4
  %56 = icmp ult i32 %53, %55
  br i1 %56, label %57, label %476

57:                                               ; preds = %49, %33, %51
  store i32 %21, i32* %15, align 4
  store i32 %22, i32* %20, align 4
  br label %476

58:                                               ; preds = %14
  %59 = getelementptr inbounds i32, i32* %15, i64 1
  %60 = getelementptr inbounds i32, i32* %6, i64 -1
  %61 = tail call i32 @_ZNSt3__17__sort3IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_T_(i32* %15, i32* %59, i32* %60, %class.anon* dereferenceable(8) %2)
  br label %476

62:                                               ; preds = %14
  %63 = getelementptr inbounds i32, i32* %15, i64 1
  %64 = getelementptr inbounds i32, i32* %15, i64 2
  %65 = getelementptr inbounds i32, i32* %6, i64 -1
  %66 = tail call i32 @_ZNSt3__17__sort4IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_SA_T_(i32* %15, i32* %63, i32* %64, i32* %65, %class.anon* dereferenceable(8) %2)
  br label %476

67:                                               ; preds = %14
  %68 = getelementptr inbounds i32, i32* %15, i64 1
  %69 = getelementptr inbounds i32, i32* %15, i64 2
  %70 = getelementptr inbounds i32, i32* %15, i64 3
  %71 = getelementptr inbounds i32, i32* %6, i64 -1
  %72 = tail call i32 @_ZNSt3__17__sort5IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_SA_SA_T_(i32* %15, i32* %68, i32* %69, i32* %70, i32* %71, %class.anon* dereferenceable(8) %2)
  br label %476

73:                                               ; preds = %14
  %74 = icmp slt i64 %17, 124
  br i1 %74, label %75, label %76

75:                                               ; preds = %73
  tail call void @_ZNSt3__118__insertion_sort_3IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEvT0_SA_T_(i32* %15, i32* %6, %class.anon* dereferenceable(8) %2)
  br label %476

76:                                               ; preds = %73
  %77 = icmp sgt i64 %17, 3996
  %78 = sdiv i64 %18, 2
  %79 = getelementptr inbounds i32, i32* %15, i64 %78
  br i1 %77, label %80, label %85

80:                                               ; preds = %76
  %81 = sdiv i64 %18, 4
  %82 = getelementptr inbounds i32, i32* %15, i64 %81
  %83 = getelementptr inbounds i32, i32* %79, i64 %81
  %84 = tail call i32 @_ZNSt3__17__sort5IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_SA_SA_T_(i32* %15, i32* %82, i32* %79, i32* %83, i32* %9, %class.anon* dereferenceable(8) %2)
  br label %87

85:                                               ; preds = %76
  %86 = tail call i32 @_ZNSt3__17__sort3IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_T_(i32* %15, i32* %79, i32* %9, %class.anon* dereferenceable(8) %2)
  br label %87

87:                                               ; preds = %85, %80
  %88 = phi i32 [ %84, %80 ], [ %86, %85 ]
  %89 = load i32, i32* %15, align 4
  %90 = load i32, i32* %79, align 4
  %91 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %4, align 8
  %92 = zext i32 %89 to i64
  %93 = zext i32 %90 to i64
  %94 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %91, i64 0, i32 5, i64 %92, i32 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = lshr i32 %95, 24
  %97 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %91, i64 0, i32 5, i64 %93, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = lshr i32 %98, 24
  %100 = icmp eq i32 %96, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = icmp ult i32 %96, %99
  br i1 %102, label %320, label %125

103:                                              ; preds = %87
  %104 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %91, i64 0, i32 5, i64 %92, i32 2
  %105 = load i8, i8* %104, align 1
  %106 = and i8 %105, 15
  %107 = zext i8 %106 to i64
  %108 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %91, i64 0, i32 5, i64 %93, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = and i8 %111, 15
  %113 = zext i8 %112 to i64
  %114 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %109, %115
  br i1 %116, label %119, label %117

117:                                              ; preds = %103
  %118 = icmp ult i32 %109, %115
  br i1 %118, label %320, label %125

119:                                              ; preds = %103
  %120 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %92
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %93
  %123 = load i32, i32* %122, align 4
  %124 = icmp ult i32 %121, %123
  br i1 %124, label %320, label %125

125:                                              ; preds = %119, %101, %117
  %126 = icmp eq i32* %15, %10
  br i1 %126, label %130, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %91, i64 0, i32 5, i64 %93, i32 2
  %129 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %93
  br label %285

130:                                              ; preds = %315, %125
  %131 = getelementptr inbounds i32, i32* %15, i64 1
  %132 = load i32, i32* %9, align 4
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %91, i64 0, i32 5, i64 %133, i32 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = lshr i32 %135, 24
  %137 = icmp eq i32 %96, %136
  br i1 %137, label %140, label %138

138:                                              ; preds = %130
  %139 = icmp ult i32 %96, %136
  br i1 %139, label %202, label %162

140:                                              ; preds = %130
  %141 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %91, i64 0, i32 5, i64 %92, i32 2
  %142 = load i8, i8* %141, align 1
  %143 = and i8 %142, 15
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %91, i64 0, i32 5, i64 %133, i32 2
  %148 = load i8, i8* %147, align 1
  %149 = and i8 %148, 15
  %150 = zext i8 %149 to i64
  %151 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %146, %152
  br i1 %153, label %156, label %154

154:                                              ; preds = %140
  %155 = icmp ult i32 %146, %152
  br i1 %155, label %202, label %162

156:                                              ; preds = %140
  %157 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %92
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %133
  %160 = load i32, i32* %159, align 4
  %161 = icmp ult i32 %158, %160
  br i1 %161, label %202, label %162

162:                                              ; preds = %156, %138, %154
  %163 = icmp eq i32* %131, %9
  br i1 %163, label %476, label %164

164:                                              ; preds = %162
  %165 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %91, i64 0, i32 5, i64 %92, i32 2
  %166 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %92
  br label %167

167:                                              ; preds = %164, %199
  %168 = phi i32* [ %131, %164 ], [ %200, %199 ]
  %169 = load i32, i32* %168, align 4
  %170 = zext i32 %169 to i64
  %171 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %91, i64 0, i32 5, i64 %170, i32 0, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = lshr i32 %172, 24
  %174 = icmp eq i32 %96, %173
  br i1 %174, label %177, label %175

175:                                              ; preds = %167
  %176 = icmp ult i32 %96, %173
  br i1 %176, label %197, label %199

177:                                              ; preds = %167
  %178 = load i8, i8* %165, align 1
  %179 = and i8 %178, 15
  %180 = zext i8 %179 to i64
  %181 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %91, i64 0, i32 5, i64 %170, i32 2
  %184 = load i8, i8* %183, align 1
  %185 = and i8 %184, 15
  %186 = zext i8 %185 to i64
  %187 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %186
  %188 = load i32, i32* %187, align 4
  %189 = icmp eq i32 %182, %188
  br i1 %189, label %192, label %190

190:                                              ; preds = %177
  %191 = icmp ult i32 %182, %188
  br i1 %191, label %197, label %199

192:                                              ; preds = %177
  %193 = load i32, i32* %166, align 4
  %194 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %170
  %195 = load i32, i32* %194, align 4
  %196 = icmp ult i32 %193, %195
  br i1 %196, label %197, label %199

197:                                              ; preds = %190, %175, %192
  store i32 %132, i32* %168, align 4
  store i32 %169, i32* %9, align 4
  %198 = getelementptr inbounds i32, i32* %168, i64 1
  br label %202

199:                                              ; preds = %190, %175, %192
  %200 = getelementptr inbounds i32, i32* %168, i64 1
  %201 = icmp eq i32* %200, %9
  br i1 %201, label %476, label %167

202:                                              ; preds = %154, %138, %197, %156
  %203 = phi i32* [ %131, %156 ], [ %198, %197 ], [ %131, %138 ], [ %131, %154 ]
  %204 = icmp eq i32* %203, %9
  br i1 %204, label %476, label %205

205:                                              ; preds = %202, %283
  %206 = phi i32* [ %284, %283 ], [ %203, %202 ]
  %207 = phi i32* [ %251, %283 ], [ %9, %202 ]
  %208 = load i32, i32* %15, align 4
  %209 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %4, align 8
  %210 = zext i32 %208 to i64
  %211 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %209, i64 0, i32 5, i64 %210, i32 0, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = lshr i32 %212, 24
  %214 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %209, i64 0, i32 5, i64 %210, i32 2
  %215 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %210
  br label %216

216:                                              ; preds = %247, %205
  %217 = phi i32* [ %206, %205 ], [ %248, %247 ]
  %218 = load i32, i32* %217, align 4
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %209, i64 0, i32 5, i64 %219, i32 0, i32 0
  %221 = load i32, i32* %220, align 4
  %222 = lshr i32 %221, 24
  %223 = icmp eq i32 %213, %222
  br i1 %223, label %226, label %224

224:                                              ; preds = %216
  %225 = icmp ult i32 %213, %222
  br i1 %225, label %241, label %247

226:                                              ; preds = %216
  %227 = load i8, i8* %214, align 1
  %228 = and i8 %227, 15
  %229 = zext i8 %228 to i64
  %230 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %229
  %231 = load i32, i32* %230, align 4
  %232 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %209, i64 0, i32 5, i64 %219, i32 2
  %233 = load i8, i8* %232, align 1
  %234 = and i8 %233, 15
  %235 = zext i8 %234 to i64
  %236 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %235
  %237 = load i32, i32* %236, align 4
  %238 = icmp eq i32 %231, %237
  br i1 %238, label %242, label %239

239:                                              ; preds = %226
  %240 = icmp ult i32 %231, %237
  br i1 %240, label %241, label %247

241:                                              ; preds = %242, %224, %239
  br label %249

242:                                              ; preds = %226
  %243 = load i32, i32* %215, align 4
  %244 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %219
  %245 = load i32, i32* %244, align 4
  %246 = icmp ult i32 %243, %245
  br i1 %246, label %241, label %247

247:                                              ; preds = %239, %224, %242
  %248 = getelementptr inbounds i32, i32* %217, i64 1
  br label %216

249:                                              ; preds = %280, %241
  %250 = phi i32* [ %207, %241 ], [ %251, %280 ]
  %251 = getelementptr inbounds i32, i32* %250, i64 -1
  %252 = load i32, i32* %251, align 4
  %253 = zext i32 %252 to i64
  %254 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %209, i64 0, i32 5, i64 %253, i32 0, i32 0
  %255 = load i32, i32* %254, align 4
  %256 = lshr i32 %255, 24
  %257 = icmp eq i32 %213, %256
  br i1 %257, label %260, label %258

258:                                              ; preds = %249
  %259 = icmp ult i32 %213, %256
  br i1 %259, label %280, label %281

260:                                              ; preds = %249
  %261 = load i8, i8* %214, align 1
  %262 = and i8 %261, 15
  %263 = zext i8 %262 to i64
  %264 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %263
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %209, i64 0, i32 5, i64 %253, i32 2
  %267 = load i8, i8* %266, align 1
  %268 = and i8 %267, 15
  %269 = zext i8 %268 to i64
  %270 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %269
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %265, %271
  br i1 %272, label %275, label %273

273:                                              ; preds = %260
  %274 = icmp ult i32 %265, %271
  br i1 %274, label %280, label %281

275:                                              ; preds = %260
  %276 = load i32, i32* %215, align 4
  %277 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %253
  %278 = load i32, i32* %277, align 4
  %279 = icmp ult i32 %276, %278
  br i1 %279, label %280, label %281

280:                                              ; preds = %275, %258, %273
  br label %249

281:                                              ; preds = %273, %258, %275
  %282 = icmp ult i32* %217, %251
  br i1 %282, label %283, label %14

283:                                              ; preds = %281
  store i32 %252, i32* %217, align 4
  store i32 %218, i32* %251, align 4
  %284 = getelementptr inbounds i32, i32* %217, i64 1
  br label %205

285:                                              ; preds = %127, %315
  %286 = phi i32* [ %10, %127 ], [ %316, %315 ]
  %287 = load i32, i32* %286, align 4
  %288 = zext i32 %287 to i64
  %289 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %91, i64 0, i32 5, i64 %288, i32 0, i32 0
  %290 = load i32, i32* %289, align 4
  %291 = lshr i32 %290, 24
  %292 = icmp eq i32 %291, %99
  br i1 %292, label %295, label %293

293:                                              ; preds = %285
  %294 = icmp ult i32 %291, %99
  br i1 %294, label %318, label %315

295:                                              ; preds = %285
  %296 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %91, i64 0, i32 5, i64 %288, i32 2
  %297 = load i8, i8* %296, align 1
  %298 = and i8 %297, 15
  %299 = zext i8 %298 to i64
  %300 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %299
  %301 = load i32, i32* %300, align 4
  %302 = load i8, i8* %128, align 1
  %303 = and i8 %302, 15
  %304 = zext i8 %303 to i64
  %305 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %304
  %306 = load i32, i32* %305, align 4
  %307 = icmp eq i32 %301, %306
  br i1 %307, label %310, label %308

308:                                              ; preds = %295
  %309 = icmp ult i32 %301, %306
  br i1 %309, label %318, label %315

310:                                              ; preds = %295
  %311 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %288
  %312 = load i32, i32* %311, align 4
  %313 = load i32, i32* %129, align 4
  %314 = icmp ult i32 %312, %313
  br i1 %314, label %318, label %315

315:                                              ; preds = %310, %293, %308
  %316 = getelementptr inbounds i32, i32* %286, i64 -1
  %317 = icmp eq i32* %15, %316
  br i1 %317, label %130, label %285

318:                                              ; preds = %308, %293, %310
  store i32 %287, i32* %15, align 4
  store i32 %89, i32* %286, align 4
  %319 = add i32 %88, 1
  br label %320

320:                                              ; preds = %117, %101, %119, %318
  %321 = phi i32 [ %319, %318 ], [ %88, %119 ], [ %88, %101 ], [ %88, %117 ]
  %322 = phi i32* [ %286, %318 ], [ %9, %119 ], [ %9, %101 ], [ %9, %117 ]
  %323 = ptrtoint i32* %15 to i64
  %324 = getelementptr inbounds i32, i32* %15, i64 1
  %325 = icmp ult i32* %324, %322
  br i1 %325, label %326, label %411

326:                                              ; preds = %320, %406
  %327 = phi i32* [ %409, %406 ], [ %79, %320 ]
  %328 = phi i32 [ %407, %406 ], [ %321, %320 ]
  %329 = phi i32* [ %410, %406 ], [ %324, %320 ]
  %330 = phi i32* [ %374, %406 ], [ %322, %320 ]
  %331 = load i32, i32* %327, align 4
  %332 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %4, align 8
  %333 = zext i32 %331 to i64
  %334 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %332, i64 0, i32 5, i64 %333, i32 0, i32 0
  %335 = load i32, i32* %334, align 4
  %336 = lshr i32 %335, 24
  %337 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %332, i64 0, i32 5, i64 %333, i32 2
  %338 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %333
  br label %339

339:                                              ; preds = %370, %326
  %340 = phi i32* [ %329, %326 ], [ %371, %370 ]
  %341 = load i32, i32* %340, align 4
  %342 = zext i32 %341 to i64
  %343 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %332, i64 0, i32 5, i64 %342, i32 0, i32 0
  %344 = load i32, i32* %343, align 4
  %345 = lshr i32 %344, 24
  %346 = icmp eq i32 %345, %336
  br i1 %346, label %349, label %347

347:                                              ; preds = %339
  %348 = icmp ult i32 %345, %336
  br i1 %348, label %370, label %364

349:                                              ; preds = %339
  %350 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %332, i64 0, i32 5, i64 %342, i32 2
  %351 = load i8, i8* %350, align 1
  %352 = and i8 %351, 15
  %353 = zext i8 %352 to i64
  %354 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %353
  %355 = load i32, i32* %354, align 4
  %356 = load i8, i8* %337, align 1
  %357 = and i8 %356, 15
  %358 = zext i8 %357 to i64
  %359 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %358
  %360 = load i32, i32* %359, align 4
  %361 = icmp eq i32 %355, %360
  br i1 %361, label %365, label %362

362:                                              ; preds = %349
  %363 = icmp ult i32 %355, %360
  br i1 %363, label %370, label %364

364:                                              ; preds = %365, %347, %362
  br label %372

365:                                              ; preds = %349
  %366 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %342
  %367 = load i32, i32* %366, align 4
  %368 = load i32, i32* %338, align 4
  %369 = icmp ult i32 %367, %368
  br i1 %369, label %370, label %364

370:                                              ; preds = %362, %347, %365
  %371 = getelementptr inbounds i32, i32* %340, i64 1
  br label %339

372:                                              ; preds = %403, %364
  %373 = phi i32* [ %330, %364 ], [ %374, %403 ]
  %374 = getelementptr inbounds i32, i32* %373, i64 -1
  %375 = load i32, i32* %374, align 4
  %376 = zext i32 %375 to i64
  %377 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %332, i64 0, i32 5, i64 %376, i32 0, i32 0
  %378 = load i32, i32* %377, align 4
  %379 = lshr i32 %378, 24
  %380 = icmp eq i32 %379, %336
  br i1 %380, label %383, label %381

381:                                              ; preds = %372
  %382 = icmp ult i32 %379, %336
  br i1 %382, label %404, label %403

383:                                              ; preds = %372
  %384 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %332, i64 0, i32 5, i64 %376, i32 2
  %385 = load i8, i8* %384, align 1
  %386 = and i8 %385, 15
  %387 = zext i8 %386 to i64
  %388 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %387
  %389 = load i32, i32* %388, align 4
  %390 = load i8, i8* %337, align 1
  %391 = and i8 %390, 15
  %392 = zext i8 %391 to i64
  %393 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %392
  %394 = load i32, i32* %393, align 4
  %395 = icmp eq i32 %389, %394
  br i1 %395, label %398, label %396

396:                                              ; preds = %383
  %397 = icmp ult i32 %389, %394
  br i1 %397, label %404, label %403

398:                                              ; preds = %383
  %399 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %376
  %400 = load i32, i32* %399, align 4
  %401 = load i32, i32* %338, align 4
  %402 = icmp ult i32 %400, %401
  br i1 %402, label %404, label %403

403:                                              ; preds = %398, %381, %396
  br label %372

404:                                              ; preds = %396, %381, %398
  %405 = icmp ugt i32* %340, %374
  br i1 %405, label %411, label %406

406:                                              ; preds = %404
  store i32 %375, i32* %340, align 4
  store i32 %341, i32* %374, align 4
  %407 = add i32 %328, 1
  %408 = icmp eq i32* %327, %340
  %409 = select i1 %408, i32* %374, i32* %327
  %410 = getelementptr inbounds i32, i32* %340, i64 1
  br label %326

411:                                              ; preds = %404, %320
  %412 = phi i32* [ %79, %320 ], [ %327, %404 ]
  %413 = phi i32 [ %321, %320 ], [ %328, %404 ]
  %414 = phi i32* [ %324, %320 ], [ %340, %404 ]
  %415 = icmp eq i32* %414, %412
  br i1 %415, label %455, label %416

416:                                              ; preds = %411
  %417 = load i32, i32* %412, align 4
  %418 = load i32, i32* %414, align 4
  %419 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %4, align 8
  %420 = zext i32 %417 to i64
  %421 = zext i32 %418 to i64
  %422 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %419, i64 0, i32 5, i64 %420, i32 0, i32 0
  %423 = load i32, i32* %422, align 4
  %424 = lshr i32 %423, 24
  %425 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %419, i64 0, i32 5, i64 %421, i32 0, i32 0
  %426 = load i32, i32* %425, align 4
  %427 = lshr i32 %426, 24
  %428 = icmp eq i32 %424, %427
  br i1 %428, label %431, label %429

429:                                              ; preds = %416
  %430 = icmp ult i32 %424, %427
  br i1 %430, label %453, label %455

431:                                              ; preds = %416
  %432 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %419, i64 0, i32 5, i64 %420, i32 2
  %433 = load i8, i8* %432, align 1
  %434 = and i8 %433, 15
  %435 = zext i8 %434 to i64
  %436 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %435
  %437 = load i32, i32* %436, align 4
  %438 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %419, i64 0, i32 5, i64 %421, i32 2
  %439 = load i8, i8* %438, align 1
  %440 = and i8 %439, 15
  %441 = zext i8 %440 to i64
  %442 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %441
  %443 = load i32, i32* %442, align 4
  %444 = icmp eq i32 %437, %443
  br i1 %444, label %447, label %445

445:                                              ; preds = %431
  %446 = icmp ult i32 %437, %443
  br i1 %446, label %453, label %455

447:                                              ; preds = %431
  %448 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %420
  %449 = load i32, i32* %448, align 4
  %450 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %421
  %451 = load i32, i32* %450, align 4
  %452 = icmp ult i32 %449, %451
  br i1 %452, label %453, label %455

453:                                              ; preds = %445, %429, %447
  store i32 %417, i32* %414, align 4
  store i32 %418, i32* %412, align 4
  %454 = add i32 %413, 1
  br label %455

455:                                              ; preds = %445, %429, %411, %453, %447
  %456 = phi i32 [ %454, %453 ], [ %413, %447 ], [ %413, %411 ], [ %413, %429 ], [ %413, %445 ]
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %465

458:                                              ; preds = %455
  %459 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEbT0_SA_T_(i32* %15, i32* %414, %class.anon* dereferenceable(8) %2)
  %460 = getelementptr inbounds i32, i32* %414, i64 1
  %461 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEbT0_SA_T_(i32* %460, i32* %6, %class.anon* dereferenceable(8) %2)
  br i1 %461, label %462, label %464

462:                                              ; preds = %458
  br i1 %459, label %476, label %463

463:                                              ; preds = %462, %474
  br label %5

464:                                              ; preds = %458
  br i1 %459, label %472, label %465

465:                                              ; preds = %464, %455
  %466 = ptrtoint i32* %414 to i64
  %467 = sub i64 %466, %323
  %468 = sub i64 %11, %466
  %469 = icmp slt i64 %467, %468
  br i1 %469, label %470, label %474

470:                                              ; preds = %465
  tail call void @_ZNSt3__16__sortIRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEvT0_SA_T_(i32* %15, i32* %414, %class.anon* dereferenceable(8) %2)
  %471 = getelementptr inbounds i32, i32* %414, i64 1
  br label %472

472:                                              ; preds = %470, %464
  %473 = phi i32* [ %460, %464 ], [ %471, %470 ]
  br label %12

474:                                              ; preds = %465
  %475 = getelementptr inbounds i32, i32* %414, i64 1
  tail call void @_ZNSt3__16__sortIRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEvT0_SA_T_(i32* %475, i32* %6, %class.anon* dereferenceable(8) %2)
  br label %463

476:                                              ; preds = %462, %202, %14, %14, %162, %199, %49, %33, %51, %57, %58, %62, %67, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_T_(i32*, i32*, i32*, %class.anon* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = load i32, i32* %1, align 4
  %6 = load i32, i32* %0, align 4
  %7 = getelementptr inbounds %class.anon, %class.anon* %3, i64 0, i32 0
  %8 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %7, align 8
  %9 = zext i32 %5 to i64
  %10 = zext i32 %6 to i64
  %11 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %8, i64 0, i32 5, i64 %9, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = lshr i32 %12, 24
  %14 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %8, i64 0, i32 5, i64 %10, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = lshr i32 %15, 24
  %17 = icmp eq i32 %13, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %4
  %19 = icmp ult i32 %13, %16
  br label %42

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %8, i64 0, i32 5, i64 %9, i32 2
  %22 = load i8, i8* %21, align 1
  %23 = and i8 %22, 15
  %24 = zext i8 %23 to i64
  %25 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %8, i64 0, i32 5, i64 %10, i32 2
  %28 = load i8, i8* %27, align 1
  %29 = and i8 %28, 15
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %26, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %20
  %35 = icmp ult i32 %26, %32
  br label %42

36:                                               ; preds = %20
  %37 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %9
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %10
  %40 = load i32, i32* %39, align 4
  %41 = icmp ult i32 %38, %40
  br label %42

42:                                               ; preds = %18, %34, %36
  %43 = phi i1 [ %19, %18 ], [ %35, %34 ], [ %41, %36 ]
  %44 = load i32, i32* %2, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %8, i64 0, i32 5, i64 %45, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = lshr i32 %47, 24
  %49 = icmp eq i32 %48, %13
  br i1 %49, label %52, label %50

50:                                               ; preds = %42
  %51 = icmp ult i32 %48, %13
  br label %74

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %8, i64 0, i32 5, i64 %45, i32 2
  %54 = load i8, i8* %53, align 1
  %55 = and i8 %54, 15
  %56 = zext i8 %55 to i64
  %57 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %8, i64 0, i32 5, i64 %9, i32 2
  %60 = load i8, i8* %59, align 1
  %61 = and i8 %60, 15
  %62 = zext i8 %61 to i64
  %63 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %58, %64
  br i1 %65, label %68, label %66

66:                                               ; preds = %52
  %67 = icmp ult i32 %58, %64
  br label %74

68:                                               ; preds = %52
  %69 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %45
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %9
  %72 = load i32, i32* %71, align 4
  %73 = icmp ult i32 %70, %72
  br label %74

74:                                               ; preds = %50, %66, %68
  %75 = phi i1 [ %51, %50 ], [ %67, %66 ], [ %73, %68 ]
  br i1 %43, label %115, label %76

76:                                               ; preds = %74
  br i1 %75, label %77, label %153

77:                                               ; preds = %76
  store i32 %44, i32* %1, align 4
  store i32 %5, i32* %2, align 4
  %78 = load i32, i32* %1, align 4
  %79 = load i32, i32* %0, align 4
  %80 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %7, align 8
  %81 = zext i32 %78 to i64
  %82 = zext i32 %79 to i64
  %83 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %80, i64 0, i32 5, i64 %81, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = lshr i32 %84, 24
  %86 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %80, i64 0, i32 5, i64 %82, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = lshr i32 %87, 24
  %89 = icmp eq i32 %85, %88
  br i1 %89, label %92, label %90

90:                                               ; preds = %77
  %91 = icmp ult i32 %85, %88
  br i1 %91, label %114, label %153

92:                                               ; preds = %77
  %93 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %80, i64 0, i32 5, i64 %81, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = and i8 %94, 15
  %96 = zext i8 %95 to i64
  %97 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %80, i64 0, i32 5, i64 %82, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = and i8 %100, 15
  %102 = zext i8 %101 to i64
  %103 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %98, %104
  br i1 %105, label %108, label %106

106:                                              ; preds = %92
  %107 = icmp ult i32 %98, %104
  br i1 %107, label %114, label %153

108:                                              ; preds = %92
  %109 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %81
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %82
  %112 = load i32, i32* %111, align 4
  %113 = icmp ult i32 %110, %112
  br i1 %113, label %114, label %153

114:                                              ; preds = %106, %90, %108
  store i32 %78, i32* %0, align 4
  store i32 %79, i32* %1, align 4
  br label %153

115:                                              ; preds = %74
  br i1 %75, label %116, label %117

116:                                              ; preds = %115
  store i32 %44, i32* %0, align 4
  store i32 %6, i32* %2, align 4
  br label %153

117:                                              ; preds = %115
  store i32 %5, i32* %0, align 4
  store i32 %6, i32* %1, align 4
  %118 = load i32, i32* %2, align 4
  %119 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %7, align 8
  %120 = zext i32 %118 to i64
  %121 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %119, i64 0, i32 5, i64 %120, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = lshr i32 %122, 24
  %124 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %119, i64 0, i32 5, i64 %10, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = lshr i32 %125, 24
  %127 = icmp eq i32 %123, %126
  br i1 %127, label %130, label %128

128:                                              ; preds = %117
  %129 = icmp ult i32 %123, %126
  br i1 %129, label %152, label %153

130:                                              ; preds = %117
  %131 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %119, i64 0, i32 5, i64 %120, i32 2
  %132 = load i8, i8* %131, align 1
  %133 = and i8 %132, 15
  %134 = zext i8 %133 to i64
  %135 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %119, i64 0, i32 5, i64 %10, i32 2
  %138 = load i8, i8* %137, align 1
  %139 = and i8 %138, 15
  %140 = zext i8 %139 to i64
  %141 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %136, %142
  br i1 %143, label %146, label %144

144:                                              ; preds = %130
  %145 = icmp ult i32 %136, %142
  br i1 %145, label %152, label %153

146:                                              ; preds = %130
  %147 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %120
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %10
  %150 = load i32, i32* %149, align 4
  %151 = icmp ult i32 %148, %150
  br i1 %151, label %152, label %153

152:                                              ; preds = %144, %128, %146
  store i32 %118, i32* %1, align 4
  store i32 %6, i32* %2, align 4
  br label %153

153:                                              ; preds = %144, %128, %106, %90, %146, %152, %108, %114, %76, %116
  %154 = phi i32 [ 1, %116 ], [ 0, %76 ], [ 2, %114 ], [ 1, %108 ], [ 2, %152 ], [ 1, %146 ], [ 1, %90 ], [ 1, %106 ], [ 1, %128 ], [ 1, %144 ]
  ret i32 %154
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_SA_T_(i32*, i32*, i32*, i32*, %class.anon* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_T_(i32* %0, i32* %1, i32* %2, %class.anon* dereferenceable(8) %4)
  %7 = load i32, i32* %3, align 4
  %8 = load i32, i32* %2, align 4
  %9 = getelementptr inbounds %class.anon, %class.anon* %4, i64 0, i32 0
  %10 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %9, align 8
  %11 = zext i32 %7 to i64
  %12 = zext i32 %8 to i64
  %13 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %10, i64 0, i32 5, i64 %11, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = lshr i32 %14, 24
  %16 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %10, i64 0, i32 5, i64 %12, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = lshr i32 %17, 24
  %19 = icmp eq i32 %15, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %5
  %21 = icmp ult i32 %15, %18
  br i1 %21, label %44, label %122

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %10, i64 0, i32 5, i64 %11, i32 2
  %24 = load i8, i8* %23, align 1
  %25 = and i8 %24, 15
  %26 = zext i8 %25 to i64
  %27 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %10, i64 0, i32 5, i64 %12, i32 2
  %30 = load i8, i8* %29, align 1
  %31 = and i8 %30, 15
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %28, %34
  br i1 %35, label %38, label %36

36:                                               ; preds = %22
  %37 = icmp ult i32 %28, %34
  br i1 %37, label %44, label %122

38:                                               ; preds = %22
  %39 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %11
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %12
  %42 = load i32, i32* %41, align 4
  %43 = icmp ult i32 %40, %42
  br i1 %43, label %44, label %122

44:                                               ; preds = %36, %20, %38
  store i32 %7, i32* %2, align 4
  store i32 %8, i32* %3, align 4
  %45 = add i32 %6, 1
  %46 = load i32, i32* %2, align 4
  %47 = load i32, i32* %1, align 4
  %48 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %9, align 8
  %49 = zext i32 %46 to i64
  %50 = zext i32 %47 to i64
  %51 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %48, i64 0, i32 5, i64 %49, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = lshr i32 %52, 24
  %54 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %48, i64 0, i32 5, i64 %50, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = lshr i32 %55, 24
  %57 = icmp eq i32 %53, %56
  br i1 %57, label %60, label %58

58:                                               ; preds = %44
  %59 = icmp ult i32 %53, %56
  br i1 %59, label %82, label %122

60:                                               ; preds = %44
  %61 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %48, i64 0, i32 5, i64 %49, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = and i8 %62, 15
  %64 = zext i8 %63 to i64
  %65 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %48, i64 0, i32 5, i64 %50, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = and i8 %68, 15
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %66, %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %60
  %75 = icmp ult i32 %66, %72
  br i1 %75, label %82, label %122

76:                                               ; preds = %60
  %77 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %49
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %50
  %80 = load i32, i32* %79, align 4
  %81 = icmp ult i32 %78, %80
  br i1 %81, label %82, label %122

82:                                               ; preds = %74, %58, %76
  store i32 %46, i32* %1, align 4
  store i32 %47, i32* %2, align 4
  %83 = add i32 %6, 2
  %84 = load i32, i32* %1, align 4
  %85 = load i32, i32* %0, align 4
  %86 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %9, align 8
  %87 = zext i32 %84 to i64
  %88 = zext i32 %85 to i64
  %89 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %86, i64 0, i32 5, i64 %87, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = lshr i32 %90, 24
  %92 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %86, i64 0, i32 5, i64 %88, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = lshr i32 %93, 24
  %95 = icmp eq i32 %91, %94
  br i1 %95, label %98, label %96

96:                                               ; preds = %82
  %97 = icmp ult i32 %91, %94
  br i1 %97, label %120, label %122

98:                                               ; preds = %82
  %99 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %86, i64 0, i32 5, i64 %87, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = and i8 %100, 15
  %102 = zext i8 %101 to i64
  %103 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %86, i64 0, i32 5, i64 %88, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = and i8 %106, 15
  %108 = zext i8 %107 to i64
  %109 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %104, %110
  br i1 %111, label %114, label %112

112:                                              ; preds = %98
  %113 = icmp ult i32 %104, %110
  br i1 %113, label %120, label %122

114:                                              ; preds = %98
  %115 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %87
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %88
  %118 = load i32, i32* %117, align 4
  %119 = icmp ult i32 %116, %118
  br i1 %119, label %120, label %122

120:                                              ; preds = %112, %96, %114
  store i32 %84, i32* %0, align 4
  store i32 %85, i32* %1, align 4
  %121 = add i32 %6, 3
  br label %122

122:                                              ; preds = %112, %96, %74, %58, %36, %20, %76, %120, %114, %38
  %123 = phi i32 [ %121, %120 ], [ %83, %114 ], [ %45, %76 ], [ %6, %38 ], [ %6, %20 ], [ %6, %36 ], [ %45, %58 ], [ %45, %74 ], [ %83, %96 ], [ %83, %112 ]
  ret i32 %123
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_SA_SA_T_(i32*, i32*, i32*, i32*, i32*, %class.anon* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_SA_T_(i32* %0, i32* %1, i32* %2, i32* %3, %class.anon* dereferenceable(8) %5)
  %8 = load i32, i32* %4, align 4
  %9 = load i32, i32* %3, align 4
  %10 = getelementptr inbounds %class.anon, %class.anon* %5, i64 0, i32 0
  %11 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %10, align 8
  %12 = zext i32 %8 to i64
  %13 = zext i32 %9 to i64
  %14 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %11, i64 0, i32 5, i64 %12, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = lshr i32 %15, 24
  %17 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %11, i64 0, i32 5, i64 %13, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = lshr i32 %18, 24
  %20 = icmp eq i32 %16, %19
  br i1 %20, label %23, label %21

21:                                               ; preds = %6
  %22 = icmp ult i32 %16, %19
  br i1 %22, label %45, label %161

23:                                               ; preds = %6
  %24 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %11, i64 0, i32 5, i64 %12, i32 2
  %25 = load i8, i8* %24, align 1
  %26 = and i8 %25, 15
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %11, i64 0, i32 5, i64 %13, i32 2
  %31 = load i8, i8* %30, align 1
  %32 = and i8 %31, 15
  %33 = zext i8 %32 to i64
  %34 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %29, %35
  br i1 %36, label %39, label %37

37:                                               ; preds = %23
  %38 = icmp ult i32 %29, %35
  br i1 %38, label %45, label %161

39:                                               ; preds = %23
  %40 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %12
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %13
  %43 = load i32, i32* %42, align 4
  %44 = icmp ult i32 %41, %43
  br i1 %44, label %45, label %161

45:                                               ; preds = %37, %21, %39
  store i32 %8, i32* %3, align 4
  store i32 %9, i32* %4, align 4
  %46 = add i32 %7, 1
  %47 = load i32, i32* %3, align 4
  %48 = load i32, i32* %2, align 4
  %49 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %10, align 8
  %50 = zext i32 %47 to i64
  %51 = zext i32 %48 to i64
  %52 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %49, i64 0, i32 5, i64 %50, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = lshr i32 %53, 24
  %55 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %49, i64 0, i32 5, i64 %51, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = lshr i32 %56, 24
  %58 = icmp eq i32 %54, %57
  br i1 %58, label %61, label %59

59:                                               ; preds = %45
  %60 = icmp ult i32 %54, %57
  br i1 %60, label %83, label %161

61:                                               ; preds = %45
  %62 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %49, i64 0, i32 5, i64 %50, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = and i8 %63, 15
  %65 = zext i8 %64 to i64
  %66 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %49, i64 0, i32 5, i64 %51, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = and i8 %69, 15
  %71 = zext i8 %70 to i64
  %72 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %61
  %76 = icmp ult i32 %67, %73
  br i1 %76, label %83, label %161

77:                                               ; preds = %61
  %78 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %50
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %51
  %81 = load i32, i32* %80, align 4
  %82 = icmp ult i32 %79, %81
  br i1 %82, label %83, label %161

83:                                               ; preds = %75, %59, %77
  store i32 %47, i32* %2, align 4
  store i32 %48, i32* %3, align 4
  %84 = add i32 %7, 2
  %85 = load i32, i32* %2, align 4
  %86 = load i32, i32* %1, align 4
  %87 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %10, align 8
  %88 = zext i32 %85 to i64
  %89 = zext i32 %86 to i64
  %90 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %87, i64 0, i32 5, i64 %88, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = lshr i32 %91, 24
  %93 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %87, i64 0, i32 5, i64 %89, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = lshr i32 %94, 24
  %96 = icmp eq i32 %92, %95
  br i1 %96, label %99, label %97

97:                                               ; preds = %83
  %98 = icmp ult i32 %92, %95
  br i1 %98, label %121, label %161

99:                                               ; preds = %83
  %100 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %87, i64 0, i32 5, i64 %88, i32 2
  %101 = load i8, i8* %100, align 1
  %102 = and i8 %101, 15
  %103 = zext i8 %102 to i64
  %104 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %87, i64 0, i32 5, i64 %89, i32 2
  %107 = load i8, i8* %106, align 1
  %108 = and i8 %107, 15
  %109 = zext i8 %108 to i64
  %110 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %105, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %99
  %114 = icmp ult i32 %105, %111
  br i1 %114, label %121, label %161

115:                                              ; preds = %99
  %116 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %88
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %89
  %119 = load i32, i32* %118, align 4
  %120 = icmp ult i32 %117, %119
  br i1 %120, label %121, label %161

121:                                              ; preds = %113, %97, %115
  store i32 %85, i32* %1, align 4
  store i32 %86, i32* %2, align 4
  %122 = add i32 %7, 3
  %123 = load i32, i32* %1, align 4
  %124 = load i32, i32* %0, align 4
  %125 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %10, align 8
  %126 = zext i32 %123 to i64
  %127 = zext i32 %124 to i64
  %128 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %125, i64 0, i32 5, i64 %126, i32 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = lshr i32 %129, 24
  %131 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %125, i64 0, i32 5, i64 %127, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = lshr i32 %132, 24
  %134 = icmp eq i32 %130, %133
  br i1 %134, label %137, label %135

135:                                              ; preds = %121
  %136 = icmp ult i32 %130, %133
  br i1 %136, label %159, label %161

137:                                              ; preds = %121
  %138 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %125, i64 0, i32 5, i64 %126, i32 2
  %139 = load i8, i8* %138, align 1
  %140 = and i8 %139, 15
  %141 = zext i8 %140 to i64
  %142 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %125, i64 0, i32 5, i64 %127, i32 2
  %145 = load i8, i8* %144, align 1
  %146 = and i8 %145, 15
  %147 = zext i8 %146 to i64
  %148 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %143, %149
  br i1 %150, label %153, label %151

151:                                              ; preds = %137
  %152 = icmp ult i32 %143, %149
  br i1 %152, label %159, label %161

153:                                              ; preds = %137
  %154 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %126
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %127
  %157 = load i32, i32* %156, align 4
  %158 = icmp ult i32 %155, %157
  br i1 %158, label %159, label %161

159:                                              ; preds = %151, %135, %153
  store i32 %123, i32* %0, align 4
  store i32 %124, i32* %1, align 4
  %160 = add i32 %7, 4
  br label %161

161:                                              ; preds = %151, %135, %113, %97, %75, %59, %37, %21, %77, %153, %159, %115, %39
  %162 = phi i32 [ %160, %159 ], [ %122, %153 ], [ %84, %115 ], [ %46, %77 ], [ %7, %39 ], [ %7, %21 ], [ %7, %37 ], [ %46, %59 ], [ %46, %75 ], [ %84, %97 ], [ %84, %113 ], [ %122, %135 ], [ %122, %151 ]
  ret i32 %162
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEvT0_SA_T_(i32*, i32*, %class.anon* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds i32, i32* %0, i64 2
  %5 = getelementptr inbounds i32, i32* %0, i64 1
  %6 = tail call i32 @_ZNSt3__17__sort3IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_T_(i32* %0, i32* %5, i32* %4, %class.anon* dereferenceable(8) %2)
  %7 = getelementptr inbounds i32, i32* %0, i64 3
  %8 = icmp eq i32* %7, %1
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.anon, %class.anon* %2, i64 0, i32 0
  br label %12

11:                                               ; preds = %94, %3
  ret void

12:                                               ; preds = %9, %94
  %13 = phi i32* [ %7, %9 ], [ %95, %94 ]
  %14 = phi i32* [ %4, %9 ], [ %13, %94 ]
  %15 = load i32, i32* %13, align 4
  %16 = load i32, i32* %14, align 4
  %17 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %10, align 8
  %18 = zext i32 %15 to i64
  %19 = zext i32 %16 to i64
  %20 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %17, i64 0, i32 5, i64 %18, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = lshr i32 %21, 24
  %23 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %17, i64 0, i32 5, i64 %19, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = lshr i32 %24, 24
  %26 = icmp eq i32 %22, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %12
  %28 = icmp ult i32 %22, %25
  br i1 %28, label %51, label %94

29:                                               ; preds = %12
  %30 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %17, i64 0, i32 5, i64 %18, i32 2
  %31 = load i8, i8* %30, align 1
  %32 = and i8 %31, 15
  %33 = zext i8 %32 to i64
  %34 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %17, i64 0, i32 5, i64 %19, i32 2
  %37 = load i8, i8* %36, align 1
  %38 = and i8 %37, 15
  %39 = zext i8 %38 to i64
  %40 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %35, %41
  br i1 %42, label %45, label %43

43:                                               ; preds = %29
  %44 = icmp ult i32 %35, %41
  br i1 %44, label %51, label %94

45:                                               ; preds = %29
  %46 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %18
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %19
  %49 = load i32, i32* %48, align 4
  %50 = icmp ult i32 %47, %49
  br i1 %50, label %51, label %94

51:                                               ; preds = %43, %27, %45
  %52 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %18
  store i32 %16, i32* %13, align 4
  %53 = icmp eq i32* %14, %0
  br i1 %53, label %92, label %54

54:                                               ; preds = %51, %90
  %55 = phi i32* [ %56, %90 ], [ %14, %51 ]
  %56 = getelementptr inbounds i32, i32* %55, i64 -1
  %57 = load i32, i32* %56, align 4
  %58 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %10, align 8
  %59 = zext i32 %57 to i64
  %60 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %58, i64 0, i32 5, i64 %18, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = lshr i32 %61, 24
  %63 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %58, i64 0, i32 5, i64 %59, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = lshr i32 %64, 24
  %66 = icmp eq i32 %62, %65
  br i1 %66, label %69, label %67

67:                                               ; preds = %54
  %68 = icmp ult i32 %62, %65
  br i1 %68, label %90, label %92

69:                                               ; preds = %54
  %70 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %58, i64 0, i32 5, i64 %18, i32 2
  %71 = load i8, i8* %70, align 1
  %72 = and i8 %71, 15
  %73 = zext i8 %72 to i64
  %74 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %58, i64 0, i32 5, i64 %59, i32 2
  %77 = load i8, i8* %76, align 1
  %78 = and i8 %77, 15
  %79 = zext i8 %78 to i64
  %80 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %75, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %69
  %84 = icmp ult i32 %75, %81
  br i1 %84, label %90, label %92

85:                                               ; preds = %69
  %86 = load i32, i32* %52, align 4
  %87 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %59
  %88 = load i32, i32* %87, align 4
  %89 = icmp ult i32 %86, %88
  br i1 %89, label %90, label %92

90:                                               ; preds = %85, %67, %83
  store i32 %57, i32* %55, align 4
  %91 = icmp eq i32* %56, %0
  br i1 %91, label %92, label %54

92:                                               ; preds = %85, %90, %67, %83, %51
  %93 = phi i32* [ %0, %51 ], [ %55, %83 ], [ %55, %67 ], [ %0, %90 ], [ %55, %85 ]
  store i32 %15, i32* %93, align 4
  br label %94

94:                                               ; preds = %43, %27, %92, %45
  %95 = getelementptr inbounds i32, i32* %13, i64 1
  %96 = icmp eq i32* %95, %1
  br i1 %96, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEbT0_SA_T_(i32*, i32*, %class.anon* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint i32* %1 to i64
  %5 = ptrtoint i32* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  switch i64 %7, label %63 [
    i64 0, label %163
    i64 1, label %163
    i64 2, label %8
    i64 3, label %48
    i64 4, label %52
    i64 5, label %57
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = getelementptr inbounds %class.anon, %class.anon* %2, i64 0, i32 0
  %13 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %12, align 8
  %14 = zext i32 %10 to i64
  %15 = zext i32 %11 to i64
  %16 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %13, i64 0, i32 5, i64 %14, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = lshr i32 %17, 24
  %19 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %13, i64 0, i32 5, i64 %15, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = lshr i32 %20, 24
  %22 = icmp eq i32 %18, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %8
  %24 = icmp ult i32 %18, %21
  br i1 %24, label %47, label %163

25:                                               ; preds = %8
  %26 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %13, i64 0, i32 5, i64 %14, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = and i8 %27, 15
  %29 = zext i8 %28 to i64
  %30 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %13, i64 0, i32 5, i64 %15, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = and i8 %33, 15
  %35 = zext i8 %34 to i64
  %36 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %31, %37
  br i1 %38, label %41, label %39

39:                                               ; preds = %25
  %40 = icmp ult i32 %31, %37
  br i1 %40, label %47, label %163

41:                                               ; preds = %25
  %42 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %14
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %15
  %45 = load i32, i32* %44, align 4
  %46 = icmp ult i32 %43, %45
  br i1 %46, label %47, label %163

47:                                               ; preds = %39, %23, %41
  store i32 %10, i32* %0, align 4
  store i32 %11, i32* %9, align 4
  br label %163

48:                                               ; preds = %3
  %49 = getelementptr inbounds i32, i32* %0, i64 1
  %50 = getelementptr inbounds i32, i32* %1, i64 -1
  %51 = tail call i32 @_ZNSt3__17__sort3IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_T_(i32* %0, i32* %49, i32* %50, %class.anon* dereferenceable(8) %2)
  br label %163

52:                                               ; preds = %3
  %53 = getelementptr inbounds i32, i32* %0, i64 1
  %54 = getelementptr inbounds i32, i32* %0, i64 2
  %55 = getelementptr inbounds i32, i32* %1, i64 -1
  %56 = tail call i32 @_ZNSt3__17__sort4IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_SA_T_(i32* %0, i32* %53, i32* %54, i32* %55, %class.anon* dereferenceable(8) %2)
  br label %163

57:                                               ; preds = %3
  %58 = getelementptr inbounds i32, i32* %0, i64 1
  %59 = getelementptr inbounds i32, i32* %0, i64 2
  %60 = getelementptr inbounds i32, i32* %0, i64 3
  %61 = getelementptr inbounds i32, i32* %1, i64 -1
  %62 = tail call i32 @_ZNSt3__17__sort5IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_SA_SA_T_(i32* %0, i32* %58, i32* %59, i32* %60, i32* %61, %class.anon* dereferenceable(8) %2)
  br label %163

63:                                               ; preds = %3
  %64 = getelementptr inbounds i32, i32* %0, i64 2
  %65 = getelementptr inbounds i32, i32* %0, i64 1
  %66 = tail call i32 @_ZNSt3__17__sort3IRZN5blink16BoxBorderPainter17ComplexBorderInfoC1ERKS2_bEUlNS1_7BoxSideES6_E_PS6_EEjT0_SA_SA_T_(i32* %0, i32* %65, i32* %64, %class.anon* dereferenceable(8) %2)
  %67 = getelementptr inbounds i32, i32* %0, i64 3
  %68 = icmp eq i32* %67, %1
  br i1 %68, label %163, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %class.anon, %class.anon* %2, i64 0, i32 0
  br label %71

71:                                               ; preds = %69, %156
  %72 = phi i32* [ %67, %69 ], [ %158, %156 ]
  %73 = phi i32 [ 0, %69 ], [ %157, %156 ]
  %74 = phi i32* [ %64, %69 ], [ %72, %156 ]
  %75 = load i32, i32* %72, align 4
  %76 = load i32, i32* %74, align 4
  %77 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %70, align 8
  %78 = zext i32 %75 to i64
  %79 = zext i32 %76 to i64
  %80 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %77, i64 0, i32 5, i64 %78, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = lshr i32 %81, 24
  %83 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %77, i64 0, i32 5, i64 %79, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = lshr i32 %84, 24
  %86 = icmp eq i32 %82, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %71
  %88 = icmp ult i32 %82, %85
  br i1 %88, label %111, label %156

89:                                               ; preds = %71
  %90 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %77, i64 0, i32 5, i64 %78, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = and i8 %91, 15
  %93 = zext i8 %92 to i64
  %94 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %77, i64 0, i32 5, i64 %79, i32 2
  %97 = load i8, i8* %96, align 1
  %98 = and i8 %97, 15
  %99 = zext i8 %98 to i64
  %100 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %95, %101
  br i1 %102, label %105, label %103

103:                                              ; preds = %89
  %104 = icmp ult i32 %95, %101
  br i1 %104, label %111, label %156

105:                                              ; preds = %89
  %106 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %78
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %79
  %109 = load i32, i32* %108, align 4
  %110 = icmp ult i32 %107, %109
  br i1 %110, label %111, label %156

111:                                              ; preds = %103, %87, %105
  %112 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %78
  store i32 %76, i32* %72, align 4
  %113 = icmp eq i32* %74, %0
  br i1 %113, label %152, label %114

114:                                              ; preds = %111, %150
  %115 = phi i32* [ %116, %150 ], [ %74, %111 ]
  %116 = getelementptr inbounds i32, i32* %115, i64 -1
  %117 = load i32, i32* %116, align 4
  %118 = load %"class.blink::BoxBorderPainter"*, %"class.blink::BoxBorderPainter"** %70, align 8
  %119 = zext i32 %117 to i64
  %120 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %118, i64 0, i32 5, i64 %78, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = lshr i32 %121, 24
  %123 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %118, i64 0, i32 5, i64 %119, i32 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = lshr i32 %124, 24
  %126 = icmp eq i32 %122, %125
  br i1 %126, label %129, label %127

127:                                              ; preds = %114
  %128 = icmp ult i32 %122, %125
  br i1 %128, label %150, label %152

129:                                              ; preds = %114
  %130 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %118, i64 0, i32 5, i64 %78, i32 2
  %131 = load i8, i8* %130, align 1
  %132 = and i8 %131, 15
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"class.blink::BoxBorderPainter", %"class.blink::BoxBorderPainter"* %118, i64 0, i32 5, i64 %119, i32 2
  %137 = load i8, i8* %136, align 1
  %138 = and i8 %137, 15
  %139 = zext i8 %138 to i64
  %140 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZN5blink12_GLOBAL__N_114kStylePriorityE, i64 0, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %135, %141
  br i1 %142, label %145, label %143

143:                                              ; preds = %129
  %144 = icmp ult i32 %135, %141
  br i1 %144, label %150, label %152

145:                                              ; preds = %129
  %146 = load i32, i32* %112, align 4
  %147 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZN5blink12_GLOBAL__N_113kSidePriorityE, i64 0, i64 %119
  %148 = load i32, i32* %147, align 4
  %149 = icmp ult i32 %146, %148
  br i1 %149, label %150, label %152

150:                                              ; preds = %145, %127, %143
  store i32 %117, i32* %115, align 4
  %151 = icmp eq i32* %116, %0
  br i1 %151, label %152, label %114

152:                                              ; preds = %145, %150, %127, %143, %111
  %153 = phi i32* [ %0, %111 ], [ %115, %143 ], [ %115, %127 ], [ %0, %150 ], [ %115, %145 ]
  store i32 %75, i32* %153, align 4
  %154 = add i32 %73, 1
  %155 = icmp eq i32 %154, 8
  br i1 %155, label %160, label %156

156:                                              ; preds = %152, %103, %87, %105
  %157 = phi i32 [ %154, %152 ], [ %73, %105 ], [ %73, %87 ], [ %73, %103 ]
  %158 = getelementptr inbounds i32, i32* %72, i64 1
  %159 = icmp eq i32* %158, %1
  br i1 %159, label %163, label %71

160:                                              ; preds = %152
  %161 = getelementptr inbounds i32, i32* %72, i64 1
  %162 = icmp eq i32* %161, %1
  br label %163

163:                                              ; preds = %156, %160, %63, %39, %23, %41, %47, %3, %3, %57, %52, %48
  %164 = phi i1 [ true, %57 ], [ true, %52 ], [ true, %48 ], [ true, %3 ], [ true, %3 ], [ true, %47 ], [ true, %41 ], [ true, %23 ], [ true, %39 ], [ true, %63 ], [ %162, %160 ], [ true, %156 ]
  ret i1 %164
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_112OpacityGroupELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1821"*, %"struct.blink::(anonymous namespace)::OpacityGroup"* dereferenceable(40)) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1821", %"class.WTF::Vector.1821"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1821", %"class.WTF::Vector.1821"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::(anonymous namespace)::OpacityGroup"*, %"struct.blink::(anonymous namespace)::OpacityGroup"** %6, align 8
  %8 = icmp ugt %"struct.blink::(anonymous namespace)::OpacityGroup"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::(anonymous namespace)::OpacityGroup"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_112OpacityGroupELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1821"* %0, i32 %5) #10
  %14 = load %"struct.blink::(anonymous namespace)::OpacityGroup"*, %"struct.blink::(anonymous namespace)::OpacityGroup"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"struct.blink::(anonymous namespace)::OpacityGroup"* %1 to i64
  %17 = ptrtoint %"struct.blink::(anonymous namespace)::OpacityGroup"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 40
  tail call fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_112OpacityGroupELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1821"* %0, i32 %5) #10
  %20 = load %"struct.blink::(anonymous namespace)::OpacityGroup"*, %"struct.blink::(anonymous namespace)::OpacityGroup"** %6, align 8
  %21 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"struct.blink::(anonymous namespace)::OpacityGroup"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"struct.blink::(anonymous namespace)::OpacityGroup"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %23, i64 %26
  %28 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %27, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %23, i64 %26, i32 0, i32 0, i32 1, i64 0
  %30 = bitcast %"struct.blink::(anonymous namespace)::OpacityGroup"* %27 to i8**
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %23, i64 %26, i32 0, i32 0, i32 0, i32 1
  store i32 4, i32* %31, align 8
  %32 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %23, i64 %26, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %24, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer.1825"* %28, %"class.WTF::VectorBuffer.1825"* dereferenceable(32) %33, i64 0, i64 0) #10
  %34 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %23, i64 %26, i32 1
  %35 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %24, i64 0, i32 1
  %36 = bitcast i32* %35 to i64*
  %37 = bitcast i32* %34 to i64*
  %38 = load i64, i64* %36, align 8
  store i64 %38, i64* %37, align 8
  %39 = load i32, i32* %3, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer.1825"*, %"class.WTF::VectorBuffer.1825"* dereferenceable(32), i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %0, i64 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %0, i64 0, i32 1, i64 0
  %11 = bitcast i8* %10 to i32*
  %12 = icmp eq i32* %9, %11
  %13 = ptrtoint i32* %9 to i64
  br i1 %12, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %1, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %1, i64 0, i32 1, i64 0
  %18 = bitcast i8* %17 to i32*
  %19 = icmp eq i32* %16, %18
  br i1 %19, label %42, label %20

20:                                               ; preds = %14
  %21 = ptrtoint i32* %16 to i64
  %22 = bitcast %"class.WTF::VectorBuffer.1825"* %1 to i64*
  %23 = bitcast %"class.WTF::VectorBuffer.1825"* %0 to i64*
  store atomic i64 %13, i64* %22 monotonic, align 8
  store atomic i64 %21, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  br label %274

32:                                               ; preds = %4
  %33 = lshr i64 %2, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %1, i64 0, i32 1, i64 0
  %39 = bitcast i8* %38 to i32*
  %40 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %1, i64 0, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  br label %42

42:                                               ; preds = %14, %32
  %43 = phi i32* [ %18, %14 ], [ %39, %32 ]
  %44 = phi i32* [ %16, %14 ], [ %41, %32 ]
  %45 = phi i32 [ 0, %14 ], [ %34, %32 ]
  %46 = phi i32 [ 0, %14 ], [ %35, %32 ]
  %47 = phi i32 [ 0, %14 ], [ %37, %32 ]
  %48 = phi i32* [ null, %14 ], [ %9, %32 ]
  %49 = phi i32* [ null, %14 ], [ %39, %32 ]
  %50 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %1, i64 0, i32 1, i64 0
  %51 = icmp eq i32* %44, %43
  br i1 %51, label %52, label %55

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %1, i64 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %42, %52
  %56 = phi i32 [ %7, %52 ], [ 0, %42 ]
  %57 = phi i32 [ %5, %52 ], [ 0, %42 ]
  %58 = phi i32 [ %54, %52 ], [ 0, %42 ]
  %59 = phi i32* [ %43, %52 ], [ null, %42 ]
  %60 = phi i32* [ %11, %52 ], [ null, %42 ]
  %61 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %0, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %1, i64 0, i32 0, i32 1
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %62, align 4
  store i32 %64, i32* %61, align 4
  store i32 %63, i32* %62, align 4
  %65 = icmp eq i32* %48, null
  %66 = icmp ne i32* %59, null
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = and i1 %65, %66
  br i1 %69, label %70, label %78

70:                                               ; preds = %68, %55
  %71 = phi %"class.WTF::VectorBuffer.1825"* [ %1, %55 ], [ %0, %68 ]
  %72 = phi %"class.WTF::VectorBuffer.1825"* [ %0, %55 ], [ %1, %68 ]
  %73 = phi i8* [ %50, %55 ], [ %10, %68 ]
  %74 = bitcast %"class.WTF::VectorBuffer.1825"* %71 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.WTF::VectorBuffer.1825"* %72 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = ptrtoint i8* %73 to i64
  store atomic i64 %77, i64* %74 monotonic, align 8
  br label %78

78:                                               ; preds = %70, %68
  %79 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %0, i64 0, i32 0, i32 2
  %80 = getelementptr inbounds %"class.WTF::VectorBuffer.1825", %"class.WTF::VectorBuffer.1825"* %1, i64 0, i32 0, i32 2
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %79, align 4
  store i32 %81, i32* %80, align 4
  %83 = icmp ne i32* %48, null
  %84 = icmp ult i32 %47, 4
  %85 = icmp eq i32 %46, %45
  %86 = icmp eq i32 %57, %56
  br label %87

87:                                               ; preds = %78, %272
  %88 = phi i32 [ 0, %78 ], [ %119, %272 ]
  %89 = icmp ult i32 %88, %47
  %90 = and i1 %83, %89
  %91 = and i1 %84, %90
  %92 = select i1 %91, i32 %47, i32 4
  br i1 %85, label %102, label %93

93:                                               ; preds = %87
  %94 = icmp ult i32 %88, %46
  %95 = icmp ult i32 %46, %92
  %96 = and i1 %94, %95
  %97 = select i1 %96, i32 %46, i32 %92
  %98 = icmp ult i32 %88, %45
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = icmp ult i32 %45, %97
  %101 = select i1 %100, i32 %45, i32 %97
  br label %102

102:                                              ; preds = %87, %99, %93
  %103 = phi i32 [ %101, %99 ], [ %97, %93 ], [ %92, %87 ]
  %104 = icmp ult i32 %88, %58
  %105 = and i1 %66, %104
  %106 = icmp ult i32 %58, %103
  %107 = and i1 %105, %106
  %108 = select i1 %107, i32 %58, i32 %103
  br i1 %86, label %118, label %109

109:                                              ; preds = %102
  %110 = icmp ult i32 %88, %57
  %111 = icmp ult i32 %57, %108
  %112 = and i1 %110, %111
  %113 = select i1 %112, i32 %57, i32 %108
  %114 = icmp ult i32 %88, %56
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = icmp ult i32 %56, %113
  %117 = select i1 %116, i32 %56, i32 %113
  br label %118

118:                                              ; preds = %102, %115, %109
  %119 = phi i32 [ %117, %115 ], [ %113, %109 ], [ %108, %102 ]
  br i1 %90, label %120, label %125

120:                                              ; preds = %118
  %121 = icmp ult i32 %88, %46
  %122 = or i1 %85, %121
  %123 = icmp uge i32 %88, %45
  %124 = or i1 %123, %122
  br label %125

125:                                              ; preds = %120, %118
  %126 = phi i1 [ false, %118 ], [ %124, %120 ]
  br i1 %105, label %127, label %239

127:                                              ; preds = %125
  %128 = icmp ult i32 %88, %57
  %129 = or i1 %86, %128
  %130 = xor i1 %129, true
  %131 = icmp ult i32 %88, %56
  %132 = and i1 %131, %130
  %133 = xor i1 %126, true
  %134 = or i1 %132, %133
  %135 = xor i1 %131, true
  %136 = or i1 %129, %135
  br i1 %134, label %239, label %137

137:                                              ; preds = %127
  %138 = zext i32 %88 to i64
  %139 = zext i32 %119 to i64
  %140 = getelementptr inbounds i32, i32* %48, i64 %139
  %141 = bitcast i32* %140 to i8*
  %142 = icmp eq i32 %88, %119
  br i1 %142, label %272, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds i32, i32* %48, i64 %138
  %145 = bitcast i32* %144 to i8*
  %146 = getelementptr inbounds i32, i32* %59, i64 %138
  %147 = bitcast i32* %146 to i8*
  %148 = sub nsw i64 %139, %138
  %149 = shl nsw i64 %148, 2
  %150 = icmp ult i64 %149, 32
  br i1 %150, label %228, label %151

151:                                              ; preds = %143
  %152 = getelementptr i32, i32* %59, i64 %139
  %153 = icmp ult i32* %144, %152
  %154 = icmp ult i32* %146, %140
  %155 = and i1 %153, %154
  br i1 %155, label %228, label %156

156:                                              ; preds = %151
  %157 = and i64 %149, -32
  %158 = getelementptr i8, i8* %147, i64 %157
  %159 = getelementptr i8, i8* %145, i64 %157
  %160 = add nsw i64 %157, -32
  %161 = lshr exact i64 %160, 5
  %162 = add nuw nsw i64 %161, 1
  %163 = and i64 %162, 1
  %164 = icmp eq i64 %160, 0
  br i1 %164, label %206, label %165

165:                                              ; preds = %156
  %166 = sub nuw nsw i64 %162, %163
  br label %167

167:                                              ; preds = %167, %165
  %168 = phi i64 [ 0, %165 ], [ %203, %167 ]
  %169 = phi i64 [ %166, %165 ], [ %204, %167 ]
  %170 = getelementptr i8, i8* %147, i64 %168
  %171 = getelementptr i8, i8* %145, i64 %168
  %172 = bitcast i8* %171 to <16 x i8>*
  %173 = load <16 x i8>, <16 x i8>* %172, align 1, !alias.scope !9, !noalias !12
  %174 = getelementptr i8, i8* %171, i64 16
  %175 = bitcast i8* %174 to <16 x i8>*
  %176 = load <16 x i8>, <16 x i8>* %175, align 1, !alias.scope !9, !noalias !12
  %177 = bitcast i8* %170 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !12
  %179 = getelementptr i8, i8* %170, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !12
  %182 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %178, <16 x i8>* %182, align 1, !alias.scope !9, !noalias !12
  %183 = bitcast i8* %174 to <16 x i8>*
  store <16 x i8> %181, <16 x i8>* %183, align 1, !alias.scope !9, !noalias !12
  %184 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %173, <16 x i8>* %184, align 1, !alias.scope !12
  %185 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %176, <16 x i8>* %185, align 1, !alias.scope !12
  %186 = or i64 %168, 32
  %187 = getelementptr i8, i8* %147, i64 %186
  %188 = getelementptr i8, i8* %145, i64 %186
  %189 = bitcast i8* %188 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !9, !noalias !12
  %191 = getelementptr i8, i8* %188, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !alias.scope !9, !noalias !12
  %194 = bitcast i8* %187 to <16 x i8>*
  %195 = load <16 x i8>, <16 x i8>* %194, align 1, !alias.scope !12
  %196 = getelementptr i8, i8* %187, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !12
  %199 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %195, <16 x i8>* %199, align 1, !alias.scope !9, !noalias !12
  %200 = bitcast i8* %191 to <16 x i8>*
  store <16 x i8> %198, <16 x i8>* %200, align 1, !alias.scope !9, !noalias !12
  %201 = bitcast i8* %187 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %201, align 1, !alias.scope !12
  %202 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %202, align 1, !alias.scope !12
  %203 = add i64 %168, 64
  %204 = add i64 %169, -2
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %167, !llvm.loop !14

206:                                              ; preds = %167, %156
  %207 = phi i64 [ 0, %156 ], [ %203, %167 ]
  %208 = icmp eq i64 %163, 0
  br i1 %208, label %226, label %209

209:                                              ; preds = %206
  %210 = getelementptr i8, i8* %147, i64 %207
  %211 = getelementptr i8, i8* %145, i64 %207
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !9, !noalias !12
  %214 = getelementptr i8, i8* %211, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !9, !noalias !12
  %217 = bitcast i8* %210 to <16 x i8>*
  %218 = load <16 x i8>, <16 x i8>* %217, align 1, !alias.scope !12
  %219 = getelementptr i8, i8* %210, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  %221 = load <16 x i8>, <16 x i8>* %220, align 1, !alias.scope !12
  %222 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %218, <16 x i8>* %222, align 1, !alias.scope !9, !noalias !12
  %223 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %221, <16 x i8>* %223, align 1, !alias.scope !9, !noalias !12
  %224 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %224, align 1, !alias.scope !12
  %225 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %225, align 1, !alias.scope !12
  br label %226

226:                                              ; preds = %206, %209
  %227 = icmp eq i64 %149, %157
  br i1 %227, label %272, label %228

228:                                              ; preds = %226, %151, %143
  %229 = phi i8* [ %147, %151 ], [ %147, %143 ], [ %158, %226 ]
  %230 = phi i8* [ %145, %151 ], [ %145, %143 ], [ %159, %226 ]
  br label %231

231:                                              ; preds = %228, %231
  %232 = phi i8* [ %237, %231 ], [ %229, %228 ]
  %233 = phi i8* [ %236, %231 ], [ %230, %228 ]
  %234 = load i8, i8* %233, align 1
  %235 = load i8, i8* %232, align 1
  store i8 %235, i8* %233, align 1
  store i8 %234, i8* %232, align 1
  %236 = getelementptr inbounds i8, i8* %233, i64 1
  %237 = getelementptr inbounds i8, i8* %232, i64 1
  %238 = icmp eq i8* %236, %141
  br i1 %238, label %272, label %231, !llvm.loop !16

239:                                              ; preds = %127, %125
  %240 = phi i1 [ false, %125 ], [ %136, %127 ]
  br i1 %126, label %241, label %256

241:                                              ; preds = %239
  %242 = zext i32 %88 to i64
  %243 = getelementptr inbounds i32, i32* %48, i64 %242
  %244 = getelementptr inbounds i32, i32* %49, i64 %242
  %245 = icmp ne i32* %244, null
  %246 = icmp ne i32* %243, null
  %247 = and i1 %246, %245
  br i1 %247, label %248, label %272, !prof !4

248:                                              ; preds = %241
  %249 = zext i32 %119 to i64
  %250 = getelementptr inbounds i32, i32* %48, i64 %249
  %251 = bitcast i32* %243 to i8*
  %252 = ptrtoint i32* %250 to i64
  %253 = ptrtoint i32* %243 to i64
  %254 = sub i64 %252, %253
  %255 = bitcast i32* %244 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %255, i8* nonnull align 4 %251, i64 %254, i1 false) #10
  br label %272

256:                                              ; preds = %239
  br i1 %240, label %257, label %272

257:                                              ; preds = %256
  %258 = zext i32 %88 to i64
  %259 = getelementptr inbounds i32, i32* %59, i64 %258
  %260 = getelementptr inbounds i32, i32* %60, i64 %258
  %261 = icmp ne i32* %260, null
  %262 = icmp ne i32* %259, null
  %263 = and i1 %262, %261
  br i1 %263, label %264, label %272, !prof !4

264:                                              ; preds = %257
  %265 = zext i32 %119 to i64
  %266 = getelementptr inbounds i32, i32* %59, i64 %265
  %267 = bitcast i32* %259 to i8*
  %268 = ptrtoint i32* %266 to i64
  %269 = ptrtoint i32* %259 to i64
  %270 = sub i64 %268, %269
  %271 = bitcast i32* %260 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %271, i8* nonnull align 4 %267, i64 %270, i1 false) #10
  br label %272

272:                                              ; preds = %231, %226, %264, %257, %248, %241, %137, %256
  %273 = icmp ult i32 %119, 4
  br i1 %273, label %87, label %274

274:                                              ; preds = %272, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_112OpacityGroupELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1821"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::VectorBufferBase.1823", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1821", %"class.WTF::Vector.1821"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = shl i32 %8, 1
  %10 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %11, align 8
  %12 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = icmp ugt i32 %9, %8
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  store i8* null, i8** %11, align 8
  br label %24

15:                                               ; preds = %2
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %17 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0), i8* %16, i8* %17) #10
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  store i8* %19, i8** %11, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %5) #10
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  br label %24

24:                                               ; preds = %14, %15, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  %25 = icmp ugt i32 %9, 4
  %26 = select i1 %25, i32 %9, i32 4
  %27 = icmp ugt i32 %26, %1
  %28 = select i1 %27, i32 %26, i32 %1
  %29 = load i32, i32* %7, align 8
  %30 = icmp ult i32 %29, %28
  br i1 %30, label %31, label %144, !prof !4

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.WTF::Vector.1821", %"class.WTF::Vector.1821"* %0, i64 0, i32 0, i32 0, i32 0
  %33 = load %"struct.blink::(anonymous namespace)::OpacityGroup"*, %"struct.blink::(anonymous namespace)::OpacityGroup"** %32, align 8
  %34 = icmp eq %"struct.blink::(anonymous namespace)::OpacityGroup"* %33, null
  br i1 %34, label %35, label %43

35:                                               ; preds = %31
  %36 = icmp ugt i32 %28, 4
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.WTF::Vector.1821", %"class.WTF::Vector.1821"* %0, i64 0, i32 0, i32 0
  call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_112OpacityGroupENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.1823"* %38, i32 %28) #10
  br label %144

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::Vector.1821", %"class.WTF::Vector.1821"* %0, i64 0, i32 0, i32 1, i64 0
  %41 = bitcast %"class.WTF::Vector.1821"* %0 to i64*
  %42 = ptrtoint i8* %40 to i64
  store atomic i64 %42, i64* %41 monotonic, align 8
  store i32 4, i32* %7, align 8
  br label %144

43:                                               ; preds = %31
  %44 = icmp ult i32 %28, 5
  br i1 %44, label %45, label %90

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.WTF::Vector.1821", %"class.WTF::Vector.1821"* %0, i64 0, i32 0, i32 1, i64 0
  %47 = bitcast i8* %46 to %"struct.blink::(anonymous namespace)::OpacityGroup"*
  %48 = icmp eq %"struct.blink::(anonymous namespace)::OpacityGroup"* %33, %47
  br i1 %48, label %49, label %52

49:                                               ; preds = %45
  %50 = bitcast %"class.WTF::Vector.1821"* %0 to i64*
  %51 = ptrtoint i8* %46 to i64
  store atomic i64 %51, i64* %50 monotonic, align 8
  store i32 4, i32* %7, align 8
  br label %144

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.WTF::Vector.1821", %"class.WTF::Vector.1821"* %0, i64 0, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %33, i64 %55
  %57 = bitcast %"class.WTF::Vector.1821"* %0 to i64*
  %58 = ptrtoint i8* %46 to i64
  store atomic i64 %58, i64* %57 monotonic, align 8
  store i32 4, i32* %7, align 8
  %59 = icmp eq i32 %54, 0
  br i1 %59, label %89, label %60

60:                                               ; preds = %52, %85
  %61 = phi %"struct.blink::(anonymous namespace)::OpacityGroup"* [ %87, %85 ], [ %33, %52 ]
  %62 = phi %"struct.blink::(anonymous namespace)::OpacityGroup"* [ %86, %85 ], [ %47, %52 ]
  %63 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %62, i64 0, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %62, i64 0, i32 0, i32 0, i32 1, i64 0
  %65 = bitcast %"struct.blink::(anonymous namespace)::OpacityGroup"* %62 to i8**
  store i8* %64, i8** %65, align 8
  %66 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %62, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 4, i32* %66, align 8
  %67 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %62, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %67, align 4
  %68 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %61, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer.1825"* %63, %"class.WTF::VectorBuffer.1825"* dereferenceable(32) %68, i64 0, i64 0) #10
  %69 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %62, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %61, i64 0, i32 1
  %71 = bitcast i32* %70 to i64*
  %72 = bitcast i32* %69 to i64*
  %73 = load i64, i64* %71, align 8
  store i64 %73, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %61, i64 0, i32 0, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %78, label %77, !prof !3

77:                                               ; preds = %60
  store i32 0, i32* %74, align 4
  br label %78

78:                                               ; preds = %77, %60
  %79 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8
  %81 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %61, i64 0, i32 0, i32 0, i32 1, i64 0
  %82 = bitcast i8* %81 to i32*
  %83 = icmp eq i32* %80, %82
  br i1 %83, label %85, label %84, !prof !4

84:                                               ; preds = %78
  call void @_ZN3WTF12VectorBufferIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1825"* %68, i32* %80) #10
  br label %85

85:                                               ; preds = %84, %78
  store i32* null, i32** %79, align 8
  %86 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %62, i64 1
  %87 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %61, i64 1
  %88 = icmp eq %"struct.blink::(anonymous namespace)::OpacityGroup"* %87, %56
  br i1 %88, label %89, label %60

89:                                               ; preds = %85, %52
  call fastcc void @_ZN3WTF12VectorBufferIN5blink12_GLOBAL__N_112OpacityGroupELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"struct.blink::(anonymous namespace)::OpacityGroup"* nonnull %33) #10
  br label %144

90:                                               ; preds = %43
  %91 = bitcast %"class.WTF::VectorBufferBase.1823"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #10
  %92 = getelementptr inbounds %"class.WTF::VectorBufferBase.1823", %"class.WTF::VectorBufferBase.1823"* %4, i64 0, i32 0
  %93 = getelementptr inbounds %"class.WTF::VectorBufferBase.1823", %"class.WTF::VectorBufferBase.1823"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 16, i1 false) #10
  store %"struct.blink::(anonymous namespace)::OpacityGroup"* null, %"struct.blink::(anonymous namespace)::OpacityGroup"** %92, align 8
  store i32 0, i32* %93, align 8
  call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_112OpacityGroupENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.1823"* nonnull %4, i32 %28) #10
  %94 = load %"struct.blink::(anonymous namespace)::OpacityGroup"*, %"struct.blink::(anonymous namespace)::OpacityGroup"** %92, align 8
  %95 = bitcast i32* %93 to i64*
  %96 = load i64, i64* %95, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #10
  %97 = ptrtoint %"struct.blink::(anonymous namespace)::OpacityGroup"* %94 to i64
  %98 = load %"struct.blink::(anonymous namespace)::OpacityGroup"*, %"struct.blink::(anonymous namespace)::OpacityGroup"** %32, align 8
  %99 = getelementptr inbounds %"class.WTF::Vector.1821", %"class.WTF::Vector.1821"* %0, i64 0, i32 0, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %98, i64 %101
  %103 = icmp eq i32 %100, 0
  br i1 %103, label %135, label %104

104:                                              ; preds = %90, %129
  %105 = phi %"struct.blink::(anonymous namespace)::OpacityGroup"* [ %131, %129 ], [ %98, %90 ]
  %106 = phi %"struct.blink::(anonymous namespace)::OpacityGroup"* [ %130, %129 ], [ %94, %90 ]
  %107 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %106, i64 0, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %106, i64 0, i32 0, i32 0, i32 1, i64 0
  %109 = bitcast %"struct.blink::(anonymous namespace)::OpacityGroup"* %106 to i8**
  store i8* %108, i8** %109, align 8
  %110 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %106, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 4, i32* %110, align 8
  %111 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %106, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %111, align 4
  %112 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %105, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer.1825"* %107, %"class.WTF::VectorBuffer.1825"* dereferenceable(32) %112, i64 0, i64 0) #10
  %113 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %106, i64 0, i32 1
  %114 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %105, i64 0, i32 1
  %115 = bitcast i32* %114 to i64*
  %116 = bitcast i32* %113 to i64*
  %117 = load i64, i64* %115, align 8
  store i64 %117, i64* %116, align 8
  %118 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %105, i64 0, i32 0, i32 0, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %122, label %121, !prof !3

121:                                              ; preds = %104
  store i32 0, i32* %118, align 4
  br label %122

122:                                              ; preds = %121, %104
  %123 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %105, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %105, i64 0, i32 0, i32 0, i32 1, i64 0
  %126 = bitcast i8* %125 to i32*
  %127 = icmp eq i32* %124, %126
  br i1 %127, label %129, label %128, !prof !4

128:                                              ; preds = %122
  call void @_ZN3WTF12VectorBufferIN5blink7BoxSideELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1825"* %112, i32* %124) #10
  br label %129

129:                                              ; preds = %128, %122
  store i32* null, i32** %123, align 8
  %130 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %106, i64 1
  %131 = getelementptr inbounds %"struct.blink::(anonymous namespace)::OpacityGroup", %"struct.blink::(anonymous namespace)::OpacityGroup"* %105, i64 1
  %132 = icmp eq %"struct.blink::(anonymous namespace)::OpacityGroup"* %131, %102
  br i1 %132, label %133, label %104

133:                                              ; preds = %129
  %134 = load %"struct.blink::(anonymous namespace)::OpacityGroup"*, %"struct.blink::(anonymous namespace)::OpacityGroup"** %32, align 8
  br label %135

135:                                              ; preds = %133, %90
  %136 = phi %"struct.blink::(anonymous namespace)::OpacityGroup"* [ %134, %133 ], [ %98, %90 ]
  %137 = getelementptr inbounds %"class.WTF::Vector.1821", %"class.WTF::Vector.1821"* %0, i64 0, i32 0, i32 1, i64 0
  %138 = bitcast i8* %137 to %"struct.blink::(anonymous namespace)::OpacityGroup"*
  %139 = icmp eq %"struct.blink::(anonymous namespace)::OpacityGroup"* %136, %138
  br i1 %139, label %141, label %140, !prof !4

140:                                              ; preds = %135
  call fastcc void @_ZN3WTF12VectorBufferIN5blink12_GLOBAL__N_112OpacityGroupELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"struct.blink::(anonymous namespace)::OpacityGroup"* %136) #10
  br label %141

141:                                              ; preds = %140, %135
  %142 = bitcast %"class.WTF::Vector.1821"* %0 to i64*
  store atomic i64 %97, i64* %142 monotonic, align 8
  %143 = trunc i64 %96 to i32
  store i32 %143, i32* %7, align 8
  br label %144

144:                                              ; preds = %24, %37, %39, %49, %89, %141
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_112OpacityGroupENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.1823"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = zext i32 %1 to i64
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = icmp ugt i32 %1, 53634662
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %6) #10
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %13, i8* %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %4) #10
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %22 = mul nuw nsw i64 %6, 40
  %23 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %22) #10
  %24 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_112OpacityGroupEEEPKcv, i64 0, i64 0)) #10
  %25 = bitcast %"class.WTF::VectorBufferBase.1823"* %0 to i64*
  %26 = ptrtoint i8* %24 to i64
  store atomic i64 %26, i64* %25 monotonic, align 8
  %27 = udiv i64 %23, 40
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.WTF::VectorBufferBase.1823", %"class.WTF::VectorBufferBase.1823"* %0, i64 0, i32 1
  store i32 %28, i32* %29, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @_ZN3WTF12VectorBufferIN5blink12_GLOBAL__N_112OpacityGroupELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"struct.blink::(anonymous namespace)::OpacityGroup"*) unnamed_addr #8 align 2 {
  %2 = bitcast %"struct.blink::(anonymous namespace)::OpacityGroup"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %2) #10
  ret void
}

declare void @_ZN5blink15GraphicsContext7RestoreEv(%"class.blink::GraphicsContext"*) local_unnamed_addr #2

declare i32 @_ZN5blink8MakeRGBAEiiii(i32, i32, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink10BorderEdge15SharesColorWithERKS0_(%"struct.blink::BorderEdge"*, %"struct.blink::BorderEdge"* dereferenceable(12)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #4

declare void @_ZN5blink20GraphicsContextState14SetStrokeStyleENS_11StrokeStyleE(%"class.blink::GraphicsContextState"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #4

declare void @_ZN5blink20GraphicsContextState14SetStrokeColorERKNS_5ColorE(%"class.blink::GraphicsContextState"*, %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN5blink20GraphicsContextState18SetStrokeThicknessEf(%"class.blink::GraphicsContextState"*, float) local_unnamed_addr #2

declare void @_ZN5blink20GraphicsContextState10SetLineCapENS_7LineCapE(%"class.blink::GraphicsContextState"*, i32) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext8ClipRectERK6SkRectNS_16AntiAliasingModeE8SkClipOp(%"class.blink::GraphicsContext"*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #2

declare void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder*) unnamed_addr #2

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder*, <2 x float>) local_unnamed_addr #2

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder*, <2 x float>) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext8ClipPathERK6SkPathNS_16AntiAliasingModeE8SkClipOp(%"class.blink::GraphicsContext"*, %class.SkPath* dereferenceable(16), i32, i32) local_unnamed_addr #2

declare void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret, %class.SkPathBuilder*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink12_GLOBAL__N_128CalculateAdjustedInnerBorderERKNS_16FloatRoundedRectENS_7BoxSideE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink12_GLOBAL__N_128CalculateAdjustedInnerBorderERKNS_16FloatRoundedRectENS_7BoxSideE"}
!8 = !{!"branch_weights", i32 4001, i32 4000000}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !15}
