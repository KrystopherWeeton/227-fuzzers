; ModuleID = '../../net/dns/dns_udp_tracker.cc'
source_filename = "../../net/dns/dns_udp_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.net::DnsUdpTracker" = type { i8, %"class.base::circular_deque", %"class.base::circular_deque.0", %"class.base::circular_deque.0", %"class.base::TickClock"* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.net::DnsUdpTracker::QueryData"*, i64 }
%"struct.net::DnsUdpTracker::QueryData" = type { i16, i16, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::circular_deque.0" = type { %"class.base::internal::VectorBuffer.1", i64, i64 }
%"class.base::internal::VectorBuffer.1" = type { %"class.base::TimeTicks"*, i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.4", [4 x i8] }>
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN4base14circular_dequeINS_9TimeTicksEED2Ev = comdat any

$_ZN4base14circular_dequeIN3net13DnsUdpTracker9QueryDataEED2Ev = comdat any

$_ZN4base14circular_dequeINS_9TimeTicksEEaSEOS2_ = comdat any

$_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm = comdat any

$_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm = comdat any

$_ZNK4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm = comdat any

$_ZN4base14circular_dequeIN3net13DnsUdpTracker9QueryDataEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZN4base14circular_dequeIN3net13DnsUdpTracker9QueryDataEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_ = comdat any

$_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base14circular_dequeINS_9TimeTicksEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZN4base14circular_dequeINS_9TimeTicksEE10MoveBufferERNS_8internal12VectorBufferIS1_EEmmPS5_PmS8_ = comdat any

$_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_ = comdat any

$_ZN4base14circular_dequeIN3net13DnsUdpTracker9QueryDataEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeINS_9TimeTicksEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZNK4base8internal12VectorBufferINS_9TimeTicksEEixEm = comdat any

@_ZN3net13DnsUdpTracker7kMaxAgeE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 600000000 }, align 8
@_ZN3net13DnsUdpTracker19kMaxRecordedQueriesE = hidden local_unnamed_addr constant i64 256, align 8
@_ZN3net13DnsUdpTracker19kMaxRecognizedIdAgeE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 15000000 }, align 8
@_ZN3net13DnsUdpTracker32kUnrecognizedIdMismatchThresholdE = hidden local_unnamed_addr constant i64 8, align 8
@_ZN3net13DnsUdpTracker30kRecognizedIdMismatchThresholdE = hidden local_unnamed_addr constant i64 128, align 8
@_ZN3net13DnsUdpTracker19kPortReuseThresholdE = hidden local_unnamed_addr constant i32 2, align 4
@.str = private unnamed_addr constant [44 x i8] c"Net.DNS.DnsTransaction.UDP.LowEntropyReason\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"from_begin: 0x\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c", from_end: 0x\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c", to: 0x\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZZN3net12_GLOBAL__N_119RecordLowEntropyUmaENS0_16LowEntropyReasonEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3net13DnsUdpTrackerC1Ev = hidden unnamed_addr alias void (%"class.net::DnsUdpTracker"*), void (%"class.net::DnsUdpTracker"*)* @_ZN3net13DnsUdpTrackerC2Ev
@_ZN3net13DnsUdpTrackerD1Ev = hidden unnamed_addr alias void (%"class.net::DnsUdpTracker"*), void (%"class.net::DnsUdpTracker"*)* @_ZN3net13DnsUdpTrackerD2Ev
@_ZN3net13DnsUdpTrackerC1EOS0_ = hidden unnamed_addr alias void (%"class.net::DnsUdpTracker"*, %"class.net::DnsUdpTracker"*), void (%"class.net::DnsUdpTracker"*, %"class.net::DnsUdpTracker"*)* @_ZN3net13DnsUdpTrackerC2EOS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13DnsUdpTrackerC2Ev(%"class.net::DnsUdpTracker"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 4
  %5 = bitcast %"class.base::circular_deque"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 96, i1 false)
  %6 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #9
  %7 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %6, i64 0, i32 0
  store %"class.base::TickClock"* %7, %"class.base::TickClock"** %4, align 8
  ret void
}

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13DnsUdpTrackerD2Ev(%"class.net::DnsUdpTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 3
  tail call void @_ZN4base14circular_dequeINS_9TimeTicksEED2Ev(%"class.base::circular_deque.0"* %2) #9
  %3 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 2
  tail call void @_ZN4base14circular_dequeINS_9TimeTicksEED2Ev(%"class.base::circular_deque.0"* %3) #9
  %4 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1
  tail call void @_ZN4base14circular_dequeIN3net13DnsUdpTracker9QueryDataEED2Ev(%"class.base::circular_deque"* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEED2Ev(%"class.base::circular_deque.0"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %9, i64 %3) #9
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %9, i64 %13) #9
  %15 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %9, i64 0) #9
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %9, i64 %5) #9
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque.0"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3net13DnsUdpTracker9QueryDataEED2Ev(%"class.base::circular_deque"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %3) #9
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13) #9
  %15 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0) #9
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %5) #9
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13DnsUdpTrackerC2EOS0_(%"class.net::DnsUdpTracker"* nocapture, %"class.net::DnsUdpTracker"* nocapture dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  store i8 %5, i8* %3, align 8
  %6 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 1
  %8 = bitcast %"class.base::circular_deque"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::circular_deque"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %11, align 8
  %14 = bitcast %"class.base::circular_deque"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #9
  %15 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 1
  %16 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 1, i32 1
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 2
  %19 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 1, i32 2
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %18, align 8
  %21 = bitcast i64* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 2
  %24 = bitcast %"class.base::circular_deque.0"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::circular_deque.0"* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 2, i32 0, i32 1
  %28 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 2, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %27, align 8
  %30 = bitcast %"class.base::circular_deque.0"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #9
  %31 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 2, i32 1
  %32 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 2, i32 1
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %31, align 8
  %34 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 2, i32 2
  %35 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 2, i32 2
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %34, align 8
  %37 = bitcast i64* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #9
  %38 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 3
  %39 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 3
  %40 = bitcast %"class.base::circular_deque.0"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.base::circular_deque.0"* %38 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 3, i32 0, i32 1
  %44 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 3, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %43, align 8
  %46 = bitcast %"class.base::circular_deque.0"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #9
  %47 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 3, i32 1
  %48 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 3, i32 1
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %47, align 8
  %50 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 3, i32 2
  %51 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 3, i32 2
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %50, align 8
  %53 = bitcast i64* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #9
  %54 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 4
  %55 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 4
  %56 = bitcast %"class.base::TickClock"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.base::TickClock"** %54 to i64*
  store i64 %57, i64* %58, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(112) %"class.net::DnsUdpTracker"* @_ZN3net13DnsUdpTrackeraSEOS0_(%"class.net::DnsUdpTracker"* returned, %"class.net::DnsUdpTracker"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 0
  store i8 %4, i8* %5, align 8
  %6 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 1
  %8 = icmp eq %"class.net::DnsUdpTracker"* %1, %0
  br i1 %8, label %42, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, %11
  br i1 %14, label %26, label %15

15:                                               ; preds = %9
  %16 = icmp ugt i64 %13, %11
  %17 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %6, i64 0, i32 0
  %18 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %17, i64 %11) #9
  br i1 %16, label %24, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %17, i64 %21) #9
  %23 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %17, i64 0) #9
  br label %24

24:                                               ; preds = %15, %19
  %25 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %17, i64 %13) #9
  br label %26

26:                                               ; preds = %24, %9
  %27 = bitcast i64* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #9
  %28 = bitcast %"class.base::circular_deque"* %6 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @free(i8* %29) #9
  %30 = bitcast %"class.base::circular_deque"* %7 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.base::circular_deque"* %6 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 1, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %34, i64* %35, align 8
  %36 = bitcast %"class.base::circular_deque"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #9
  %37 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 1, i32 1
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %10, align 8
  %39 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 1, i32 2
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %12, align 8
  %41 = bitcast i64* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #9
  br label %42

42:                                               ; preds = %2, %26
  %43 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 2
  %44 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 2
  %45 = tail call dereferenceable(32) %"class.base::circular_deque.0"* @_ZN4base14circular_dequeINS_9TimeTicksEEaSEOS2_(%"class.base::circular_deque.0"* %43, %"class.base::circular_deque.0"* dereferenceable(32) %44) #9
  %46 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 3
  %47 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 3
  %48 = tail call dereferenceable(32) %"class.base::circular_deque.0"* @_ZN4base14circular_dequeINS_9TimeTicksEEaSEOS2_(%"class.base::circular_deque.0"* %46, %"class.base::circular_deque.0"* dereferenceable(32) %47) #9
  %49 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %1, i64 0, i32 4
  %50 = bitcast %"class.base::TickClock"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 4
  %53 = bitcast %"class.base::TickClock"** %52 to i64*
  store i64 %51, i64* %53, align 8
  ret %"class.net::DnsUdpTracker"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.base::circular_deque.0"* @_ZN4base14circular_dequeINS_9TimeTicksEEaSEOS2_(%"class.base::circular_deque.0"*, %"class.base::circular_deque.0"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.base::circular_deque.0"* %1, %0
  br i1 %3, label %37, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, %6
  br i1 %9, label %21, label %10

10:                                               ; preds = %4
  %11 = icmp ugt i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 0
  %13 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %12, i64 %6) #9
  br i1 %11, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %12, i64 %16) #9
  %18 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %12, i64 0) #9
  br label %19

19:                                               ; preds = %10, %14
  %20 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %12, i64 %8) #9
  br label %21

21:                                               ; preds = %19, %4
  %22 = bitcast i64* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #9
  %23 = bitcast %"class.base::circular_deque.0"* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @free(i8* %24) #9
  %25 = bitcast %"class.base::circular_deque.0"* %1 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::circular_deque.0"* %0 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %1, i64 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 0, i32 1
  store i64 %29, i64* %30, align 8
  %31 = bitcast %"class.base::circular_deque.0"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #9
  %32 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %1, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %5, align 8
  %34 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %1, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %7, align 8
  %36 = bitcast i64* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false)
  br label %37

37:                                               ; preds = %2, %21
  ret %"class.base::circular_deque.0"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13DnsUdpTracker11RecordQueryEtt(%"class.net::DnsUdpTracker"*, i16 zeroext, i16 zeroext) local_unnamed_addr #0 align 2 {
  tail call void @_ZN3net13DnsUdpTracker15PurgeOldRecordsEv(%"class.net::DnsUdpTracker"* %0)
  %4 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %49, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 0, i32 1
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i64 [ 0, %9 ], [ %20, %12 ]
  %14 = phi i64 [ %5, %9 ], [ %24, %12 ]
  %15 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZNK4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %14) #9
  %16 = getelementptr inbounds %"struct.net::DnsUdpTracker::QueryData", %"struct.net::DnsUdpTracker::QueryData"* %15, i64 0, i32 0
  %17 = load i16, i16* %16, align 8
  %18 = icmp eq i16 %17, %1
  %19 = zext i1 %18 to i64
  %20 = add nuw nsw i64 %13, %19
  %21 = add i64 %14, 1
  %22 = load i64, i64* %11, align 8
  %23 = icmp eq i64 %21, %22
  %24 = select i1 %23, i64 0, i64 %21
  %25 = icmp eq i64 %24, %7
  br i1 %25, label %26, label %12

26:                                               ; preds = %12
  %27 = icmp ult i64 %20, 2147483648
  br i1 %27, label %29, label %28, !prof !3

28:                                               ; preds = %26
  tail call void @llvm.trap() #9
  unreachable

29:                                               ; preds = %26
  %30 = trunc i64 %20 to i32
  %31 = icmp sgt i32 %30, 1
  br i1 %31, label %32, label %49

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 0
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %49

36:                                               ; preds = %32
  store i8 1, i8* %33, align 8
  %37 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_119RecordLowEntropyUmaENS0_16LowEntropyReasonEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %38 = inttoptr i64 %37 to %"class.base::HistogramBase"*
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %36
  %41 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #9
  %42 = ptrtoint %"class.base::HistogramBase"* %41 to i64
  store atomic i64 %42, i64* @_ZZN3net12_GLOBAL__N_119RecordLowEntropyUmaENS0_16LowEntropyReasonEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %43

43:                                               ; preds = %36, %40
  %44 = phi %"class.base::HistogramBase"* [ %38, %36 ], [ %41, %40 ]
  %45 = bitcast %"class.base::HistogramBase"* %44 to void (%"class.base::HistogramBase"*, i32)***
  %46 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %46, i64 6
  %48 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %47, align 8
  tail call void %48(%"class.base::HistogramBase"* %44, i32 0) #9
  br label %49

49:                                               ; preds = %3, %32, %43, %29
  %50 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 4
  %51 = load %"class.base::TickClock"*, %"class.base::TickClock"** %50, align 8
  %52 = bitcast %"class.base::TickClock"* %51 to i64 (%"class.base::TickClock"*)***
  %53 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %52, align 8
  %54 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %53, i64 2
  %55 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %54, align 8
  %56 = tail call i64 %55(%"class.base::TickClock"* %51) #9
  %57 = zext i16 %2 to i64
  %58 = shl nuw nsw i64 %57, 16
  %59 = zext i16 %1 to i64
  %60 = or i64 %58, %59
  tail call void @_ZN3net13DnsUdpTracker9SaveQueryENS0_9QueryDataE(%"class.net::DnsUdpTracker"* %0, i64 %60, i64 %56)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13DnsUdpTracker15PurgeOldRecordsEv(%"class.net::DnsUdpTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 4
  %3 = load %"class.base::TickClock"*, %"class.base::TickClock"** %2, align 8
  %4 = bitcast %"class.base::TickClock"* %3 to i64 (%"class.base::TickClock"*)***
  %5 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %5, i64 2
  %7 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %6, align 8
  %8 = tail call i64 %7(%"class.base::TickClock"* %3) #9
  %9 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %12, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 0, i32 1
  br label %18

18:                                               ; preds = %16, %25
  %19 = phi i64 [ %12, %16 ], [ %36, %25 ]
  %20 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %19) #9
  %21 = getelementptr inbounds %"struct.net::DnsUdpTracker::QueryData", %"struct.net::DnsUdpTracker::QueryData"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = sub nsw i64 %8, %22
  %24 = icmp sgt i64 %23, 600000000
  br i1 %24, label %25, label %39

25:                                               ; preds = %18
  %26 = load i64, i64* %11, align 8
  %27 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %26) #9
  %28 = load i64, i64* %11, align 8
  %29 = add i64 %28, 1
  %30 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %29) #9
  %31 = load i64, i64* %11, align 8
  %32 = add i64 %31, 1
  %33 = load i64, i64* %17, align 8
  %34 = icmp eq i64 %32, %33
  %35 = select i1 %34, i64 0, i64 %32
  store i64 %35, i64* %11, align 8
  tail call void @_ZN4base14circular_dequeIN3net13DnsUdpTracker9QueryDataEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %9) #9
  %36 = load i64, i64* %11, align 8
  %37 = load i64, i64* %13, align 8
  %38 = icmp eq i64 %36, %37
  br i1 %38, label %39, label %18

39:                                               ; preds = %18, %25, %1
  %40 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 2
  %41 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %40, i64 0, i32 0
  %42 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 2, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 2, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %43, %45
  br i1 %46, label %70, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 2, i32 0, i32 1
  br label %49

49:                                               ; preds = %47, %56
  %50 = phi i64 [ %43, %47 ], [ %67, %56 ]
  %51 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %41, i64 %50) #9
  %52 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %51, i64 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = sub nsw i64 %8, %53
  %55 = icmp sgt i64 %54, 600000000
  br i1 %55, label %56, label %70

56:                                               ; preds = %49
  %57 = load i64, i64* %42, align 8
  %58 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %41, i64 %57) #9
  %59 = load i64, i64* %42, align 8
  %60 = add i64 %59, 1
  %61 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %41, i64 %60) #9
  %62 = load i64, i64* %42, align 8
  %63 = add i64 %62, 1
  %64 = load i64, i64* %48, align 8
  %65 = icmp eq i64 %63, %64
  %66 = select i1 %65, i64 0, i64 %63
  store i64 %66, i64* %42, align 8
  tail call void @_ZN4base14circular_dequeINS_9TimeTicksEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque.0"* %40) #9
  %67 = load i64, i64* %42, align 8
  %68 = load i64, i64* %44, align 8
  %69 = icmp eq i64 %67, %68
  br i1 %69, label %70, label %49

70:                                               ; preds = %49, %56, %39
  %71 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 3
  %72 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %71, i64 0, i32 0
  %73 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 3, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 3, i32 2
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %74, %76
  br i1 %77, label %101, label %78

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 3, i32 0, i32 1
  br label %80

80:                                               ; preds = %78, %87
  %81 = phi i64 [ %74, %78 ], [ %98, %87 ]
  %82 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %72, i64 %81) #9
  %83 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %82, i64 0, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = sub nsw i64 %8, %84
  %86 = icmp sgt i64 %85, 600000000
  br i1 %86, label %87, label %101

87:                                               ; preds = %80
  %88 = load i64, i64* %73, align 8
  %89 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %72, i64 %88) #9
  %90 = load i64, i64* %73, align 8
  %91 = add i64 %90, 1
  %92 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %72, i64 %91) #9
  %93 = load i64, i64* %73, align 8
  %94 = add i64 %93, 1
  %95 = load i64, i64* %79, align 8
  %96 = icmp eq i64 %94, %95
  %97 = select i1 %96, i64 0, i64 %94
  store i64 %97, i64* %73, align 8
  tail call void @_ZN4base14circular_dequeINS_9TimeTicksEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque.0"* %71) #9
  %98 = load i64, i64* %73, align 8
  %99 = load i64, i64* %75, align 8
  %100 = icmp eq i64 %98, %99
  br i1 %100, label %101, label %80

101:                                              ; preds = %80, %87, %70
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13DnsUdpTracker9SaveQueryENS0_9QueryDataE(%"class.net::DnsUdpTracker"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = sub i64 %8, %6
  br label %17

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %8, %6
  %16 = add i64 %15, %14
  br label %17

17:                                               ; preds = %10, %12
  %18 = phi i64 [ %11, %10 ], [ %16, %12 ]
  %19 = icmp eq i64 %18, 256
  br i1 %19, label %20, label %32

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %4, i64 0, i32 0
  %22 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %21, i64 %6) #9
  %23 = load i64, i64* %5, align 8
  %24 = add i64 %23, 1
  %25 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %21, i64 %24) #9
  %26 = load i64, i64* %5, align 8
  %27 = add i64 %26, 1
  %28 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %27, %29
  %31 = select i1 %30, i64 0, i64 %27
  store i64 %31, i64* %5, align 8
  tail call void @_ZN4base14circular_dequeIN3net13DnsUdpTracker9QueryDataEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %4) #9
  br label %32

32:                                               ; preds = %20, %17
  tail call void @_ZN4base14circular_dequeIN3net13DnsUdpTracker9QueryDataEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %4, i64 1) #9
  %33 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %4, i64 0, i32 0
  %34 = load i64, i64* %7, align 8
  %35 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %33, i64 %34) #9
  %36 = bitcast %"struct.net::DnsUdpTracker::QueryData"* %35 to i64*
  store i64 %1, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.net::DnsUdpTracker::QueryData", %"struct.net::DnsUdpTracker::QueryData"* %35, i64 0, i32 2, i32 0, i32 0
  store i64 %2, i64* %37, align 8
  %38 = load i64, i64* %7, align 8
  %39 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  %42 = icmp eq i64 %38, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %32
  store i64 0, i64* %7, align 8
  br label %47

44:                                               ; preds = %32
  %45 = add i64 %38, 1
  store i64 %45, i64* %7, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44, %43
  br label %48

48:                                               ; preds = %44, %47
  %49 = phi i64 [ %41, %47 ], [ %38, %44 ]
  %50 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZNK4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %33, i64 %49) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13DnsUdpTracker16RecordResponseIdEtt(%"class.net::DnsUdpTracker"*, i16 zeroext, i16 zeroext) local_unnamed_addr #0 align 2 {
  tail call void @_ZN3net13DnsUdpTracker15PurgeOldRecordsEv(%"class.net::DnsUdpTracker"* %0)
  %4 = icmp eq i16 %1, %2
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call void @_ZN3net13DnsUdpTracker14SaveIdMismatchEt(%"class.net::DnsUdpTracker"* %0, i16 zeroext %2)
  br label %6

6:                                                ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13DnsUdpTracker14SaveIdMismatchEt(%"class.net::DnsUdpTracker"*, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %138

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 4
  %8 = load %"class.base::TickClock"*, %"class.base::TickClock"** %7, align 8
  %9 = bitcast %"class.base::TickClock"* %8 to i64 (%"class.base::TickClock"*)***
  %10 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %10, i64 2
  %12 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %11, align 8
  %13 = tail call i64 %12(%"class.base::TickClock"* %8) #9
  %14 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %13, i64 -15000000)
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -9223372036854775808, i64 %16, !prof !4
  %18 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %19, %21
  br i1 %22, label %90, label %23

23:                                               ; preds = %6
  %24 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 1, i32 0, i32 1
  br label %26

26:                                               ; preds = %36, %23
  %27 = phi i64 [ %19, %23 ], [ %40, %36 ]
  %28 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZNK4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %24, i64 %27) #9
  %29 = getelementptr inbounds %"struct.net::DnsUdpTracker::QueryData", %"struct.net::DnsUdpTracker::QueryData"* %28, i64 0, i32 1
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, %1
  br i1 %31, label %32, label %36

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.net::DnsUdpTracker::QueryData", %"struct.net::DnsUdpTracker::QueryData"* %28, i64 0, i32 2, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp slt i64 %34, %17
  br i1 %35, label %36, label %42

36:                                               ; preds = %32, %26
  %37 = add i64 %27, 1
  %38 = load i64, i64* %25, align 8
  %39 = icmp eq i64 %37, %38
  %40 = select i1 %39, i64 0, i64 %37
  %41 = icmp eq i64 %40, %21
  br i1 %41, label %90, label %26

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 3
  %44 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 3, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 3, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = icmp ult i64 %47, %45
  br i1 %48, label %51, label %49

49:                                               ; preds = %42
  %50 = sub i64 %47, %45
  br label %56

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 3, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %47, %45
  %55 = add i64 %54, %53
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %50, %49 ], [ %55, %51 ]
  %58 = icmp eq i64 %57, 127
  br i1 %58, label %59, label %72

59:                                               ; preds = %56
  store i8 1, i8* %3, align 8
  %60 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_119RecordLowEntropyUmaENS0_16LowEntropyReasonEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %61 = inttoptr i64 %60 to %"class.base::HistogramBase"*
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %59
  %64 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #9
  %65 = ptrtoint %"class.base::HistogramBase"* %64 to i64
  store atomic i64 %65, i64* @_ZZN3net12_GLOBAL__N_119RecordLowEntropyUmaENS0_16LowEntropyReasonEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %66

66:                                               ; preds = %59, %63
  %67 = phi %"class.base::HistogramBase"* [ %61, %59 ], [ %64, %63 ]
  %68 = bitcast %"class.base::HistogramBase"* %67 to void (%"class.base::HistogramBase"*, i32)***
  %69 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %69, i64 6
  %71 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %70, align 8
  tail call void %71(%"class.base::HistogramBase"* %67, i32 1) #9
  br label %138

72:                                               ; preds = %56
  tail call void @_ZN4base14circular_dequeINS_9TimeTicksEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.0"* %43, i64 1) #9
  %73 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %43, i64 0, i32 0
  %74 = load i64, i64* %46, align 8
  %75 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %73, i64 %74) #9
  %76 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %75, i64 0, i32 0, i32 0
  store i64 %13, i64* %76, align 8
  %77 = load i64, i64* %46, align 8
  %78 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 3, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, -1
  %81 = icmp eq i64 %77, %80
  br i1 %81, label %82, label %83

82:                                               ; preds = %72
  store i64 0, i64* %46, align 8
  br label %86

83:                                               ; preds = %72
  %84 = add i64 %77, 1
  store i64 %84, i64* %46, align 8
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83, %82
  br label %87

87:                                               ; preds = %83, %86
  %88 = phi i64 [ %80, %86 ], [ %77, %83 ]
  %89 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZNK4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %73, i64 %88) #9
  br label %138

90:                                               ; preds = %36, %6
  %91 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 2
  %92 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 2, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 2, i32 2
  %95 = load i64, i64* %94, align 8
  %96 = icmp ult i64 %95, %93
  br i1 %96, label %99, label %97

97:                                               ; preds = %90
  %98 = sub i64 %95, %93
  br label %104

99:                                               ; preds = %90
  %100 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 2, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = sub i64 %95, %93
  %103 = add i64 %102, %101
  br label %104

104:                                              ; preds = %97, %99
  %105 = phi i64 [ %98, %97 ], [ %103, %99 ]
  %106 = icmp eq i64 %105, 7
  br i1 %106, label %107, label %120

107:                                              ; preds = %104
  store i8 1, i8* %3, align 8
  %108 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_119RecordLowEntropyUmaENS0_16LowEntropyReasonEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %109 = inttoptr i64 %108 to %"class.base::HistogramBase"*
  %110 = icmp eq i64 %108, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %107
  %112 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #9
  %113 = ptrtoint %"class.base::HistogramBase"* %112 to i64
  store atomic i64 %113, i64* @_ZZN3net12_GLOBAL__N_119RecordLowEntropyUmaENS0_16LowEntropyReasonEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %114

114:                                              ; preds = %107, %111
  %115 = phi %"class.base::HistogramBase"* [ %109, %107 ], [ %112, %111 ]
  %116 = bitcast %"class.base::HistogramBase"* %115 to void (%"class.base::HistogramBase"*, i32)***
  %117 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %117, i64 6
  %119 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %118, align 8
  tail call void %119(%"class.base::HistogramBase"* %115, i32 2) #9
  br label %138

120:                                              ; preds = %104
  tail call void @_ZN4base14circular_dequeINS_9TimeTicksEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.0"* %91, i64 1) #9
  %121 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %91, i64 0, i32 0
  %122 = load i64, i64* %94, align 8
  %123 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %121, i64 %122) #9
  %124 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %123, i64 0, i32 0, i32 0
  store i64 %13, i64* %124, align 8
  %125 = load i64, i64* %94, align 8
  %126 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 2, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, -1
  %129 = icmp eq i64 %125, %128
  br i1 %129, label %130, label %131

130:                                              ; preds = %120
  store i64 0, i64* %94, align 8
  br label %134

131:                                              ; preds = %120
  %132 = add i64 %125, 1
  store i64 %132, i64* %94, align 8
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131, %130
  br label %135

135:                                              ; preds = %131, %134
  %136 = phi i64 [ %128, %134 ], [ %125, %131 ]
  %137 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZNK4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %121, i64 %136) #9
  br label %138

138:                                              ; preds = %66, %114, %135, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13DnsUdpTracker21RecordConnectionErrorEi(%"class.net::DnsUdpTracker"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::DnsUdpTracker", %"class.net::DnsUdpTracker"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = icmp eq i32 %1, -12
  %7 = and i1 %6, %5
  br i1 %7, label %8, label %21

8:                                                ; preds = %2
  store i8 1, i8* %3, align 8
  %9 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_119RecordLowEntropyUmaENS0_16LowEntropyReasonEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %10 = inttoptr i64 %9 to %"class.base::HistogramBase"*
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #9
  %14 = ptrtoint %"class.base::HistogramBase"* %13 to i64
  store atomic i64 %14, i64* @_ZZN3net12_GLOBAL__N_119RecordLowEntropyUmaENS0_16LowEntropyReasonEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %15

15:                                               ; preds = %8, %12
  %16 = phi %"class.base::HistogramBase"* [ %10, %8 ], [ %13, %12 ]
  %17 = bitcast %"class.base::HistogramBase"* %16 to void (%"class.base::HistogramBase"*, i32)***
  %18 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %18, i64 6
  %20 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %19, align 8
  tail call void %20(%"class.base::HistogramBase"* %16, i32 3) #9
  br label %21

21:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.net::DnsUdpTracker::QueryData"*, %"struct.net::DnsUdpTracker::QueryData"** %23, align 8
  %25 = getelementptr inbounds %"struct.net::DnsUdpTracker::QueryData", %"struct.net::DnsUdpTracker::QueryData"* %24, i64 %1
  ret %"struct.net::DnsUdpTracker::QueryData"* %25
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer.1", %"class.base::internal::VectorBuffer.1"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer.1", %"class.base::internal::VectorBuffer.1"* %0, i64 0, i32 0
  %24 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %23, align 8
  %25 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %24, i64 %1
  ret %"class.base::TimeTicks"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZNK4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.net::DnsUdpTracker::QueryData"*, %"struct.net::DnsUdpTracker::QueryData"** %23, align 8
  %25 = getelementptr inbounds %"struct.net::DnsUdpTracker::QueryData", %"struct.net::DnsUdpTracker::QueryData"* %24, i64 %1
  ret %"struct.net::DnsUdpTracker::QueryData"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3net13DnsUdpTracker9QueryDataEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #9
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 16) #9
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #9
  br i1 %31, label %32, label %33, !prof !4

32:                                               ; preds = %27
  tail call void @llvm.trap() #9
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #9
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3net13DnsUdpTracker9QueryDataEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #9
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #9
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #9
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3net13DnsUdpTracker9QueryDataEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load %"struct.net::DnsUdpTracker::QueryData"*, %"struct.net::DnsUdpTracker::QueryData"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.net::DnsUdpTracker::QueryData"* %11, %"struct.net::DnsUdpTracker::QueryData"* %12, %"struct.net::DnsUdpTracker::QueryData"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load %"struct.net::DnsUdpTracker::QueryData"*, %"struct.net::DnsUdpTracker::QueryData"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.net::DnsUdpTracker::QueryData"* %19, %"struct.net::DnsUdpTracker::QueryData"* %20, %"struct.net::DnsUdpTracker::QueryData"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(16) %"struct.net::DnsUdpTracker::QueryData"* @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.net::DnsUdpTracker::QueryData"* %24, %"struct.net::DnsUdpTracker::QueryData"* %25, %"struct.net::DnsUdpTracker::QueryData"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIN3net13DnsUdpTracker9QueryDataEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.net::DnsUdpTracker::QueryData"*, %"struct.net::DnsUdpTracker::QueryData"*, %"struct.net::DnsUdpTracker::QueryData"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"struct.net::DnsUdpTracker::QueryData"* %0 to i64
  %6 = icmp ult %"struct.net::DnsUdpTracker::QueryData"* %2, %1
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = ptrtoint %"struct.net::DnsUdpTracker::QueryData"* %2 to i64
  %9 = ptrtoint %"struct.net::DnsUdpTracker::QueryData"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #9
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #9
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !4

16:                                               ; preds = %7
  tail call void @llvm.trap() #9
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  %23 = bitcast %"class.std::__1::basic_ostream"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_ostream"* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -75
  %34 = or i32 %33, 8
  store i32 %34, i32* %31, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i64 14) #9
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %5) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i64 14) #9
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %9) #9
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i64 8) #9
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %39, i64 %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %46

41:                                               ; preds = %3
  %42 = ptrtoint %"struct.net::DnsUdpTracker::QueryData"* %1 to i64
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %42, i64 %5) #9
  %44 = extractvalue { i64, i1 } %43, 1
  br i1 %44, label %45, label %46, !prof !4

45:                                               ; preds = %41
  call void @llvm.trap() #9
  unreachable

46:                                               ; preds = %20, %17, %41
  %47 = phi { i64, i1 } [ %43, %41 ], [ %10, %17 ], [ %10, %20 ]
  %48 = extractvalue { i64, i1 } %47, 0
  %49 = bitcast %"struct.net::DnsUdpTracker::QueryData"* %0 to i8*
  %50 = bitcast %"struct.net::DnsUdpTracker::QueryData"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %49, i64 %48, i1 false)
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque.0"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer.1"*
  %4 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #9
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #9
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #9
  br i1 %31, label %32, label %33, !prof !4

32:                                               ; preds = %27
  tail call void @llvm.trap() #9
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer.1", %"class.base::internal::VectorBuffer.1"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #9
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_9TimeTicksEE10MoveBufferERNS_8internal12VectorBufferIS1_EEmmPS5_PmS8_(%"class.base::internal::VectorBuffer.1"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer.1"* nonnull %3, i64* %11, i64* %13) #9
  %39 = bitcast %"class.base::circular_deque.0"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #9
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque.0"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #9
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEE10MoveBufferERNS_8internal12VectorBufferIS1_EEmmPS5_PmS8_(%"class.base::internal::VectorBuffer.1"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer.1"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer.1", %"class.base::internal::VectorBuffer.1"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %0, i64 %1)
  %12 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer.1", %"class.base::internal::VectorBuffer.1"* %3, i64 0, i32 0
  %14 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_(%"class.base::TimeTicks"* %11, %"class.base::TimeTicks"* %12, %"class.base::TimeTicks"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %0, i64 %1)
  %20 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer.1", %"class.base::internal::VectorBuffer.1"* %3, i64 0, i32 0
  %22 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_(%"class.base::TimeTicks"* %19, %"class.base::TimeTicks"* %20, %"class.base::TimeTicks"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %0, i64 0)
  %25 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %0, i64 %2)
  %26 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_(%"class.base::TimeTicks"* %24, %"class.base::TimeTicks"* %25, %"class.base::TimeTicks"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_(%"class.base::TimeTicks"*, %"class.base::TimeTicks"*, %"class.base::TimeTicks"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"class.base::TimeTicks"* %0 to i64
  %6 = icmp ult %"class.base::TimeTicks"* %2, %1
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = ptrtoint %"class.base::TimeTicks"* %2 to i64
  %9 = ptrtoint %"class.base::TimeTicks"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #9
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #9
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !4

16:                                               ; preds = %7
  tail call void @llvm.trap() #9
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  %23 = bitcast %"class.std::__1::basic_ostream"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_ostream"* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -75
  %34 = or i32 %33, 8
  store i32 %34, i32* %31, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i64 14) #9
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %5) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i64 14) #9
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %9) #9
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i64 8) #9
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %39, i64 %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %46

41:                                               ; preds = %3
  %42 = ptrtoint %"class.base::TimeTicks"* %1 to i64
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %42, i64 %5) #9
  %44 = extractvalue { i64, i1 } %43, 1
  br i1 %44, label %45, label %46, !prof !4

45:                                               ; preds = %41
  call void @llvm.trap() #9
  unreachable

46:                                               ; preds = %20, %17, %41
  %47 = phi { i64, i1 } [ %43, %41 ], [ %10, %17 ], [ %10, %20 ]
  %48 = extractvalue { i64, i1 } %47, 0
  %49 = bitcast %"class.base::TimeTicks"* %0 to i8*
  %50 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %49, i64 %48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3net13DnsUdpTracker9QueryDataEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #9
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 16) #9
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #9
  br i1 %37, label %38, label %39, !prof !4

38:                                               ; preds = %27
  tail call void @llvm.trap() #9
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #9
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3net13DnsUdpTracker9QueryDataEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #9
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #9
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #9
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.0"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer.1"*
  %5 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #9
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #9
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #9
  br i1 %37, label %38, label %39, !prof !4

38:                                               ; preds = %27
  tail call void @llvm.trap() #9
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer.1", %"class.base::internal::VectorBuffer.1"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #9
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque.0", %"class.base::circular_deque.0"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_9TimeTicksEE10MoveBufferERNS_8internal12VectorBufferIS1_EEmmPS5_PmS8_(%"class.base::internal::VectorBuffer.1"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer.1"* nonnull %4, i64* %5, i64* %7) #9
  %45 = bitcast %"class.base::circular_deque.0"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #9
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque.0"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #9
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.base::TimeTicks"* @_ZNK4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer.1"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer.1", %"class.base::internal::VectorBuffer.1"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer.1", %"class.base::internal::VectorBuffer.1"* %0, i64 0, i32 0
  %24 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %23, align 8
  %25 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %24, i64 %1
  ret %"class.base::TimeTicks"* %25
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
