; ModuleID = '../../third_party/skia/src/gpu/glsl/GrGLSLVertexGeoBuilder.cpp'
source_filename = "../../third_party/skia/src/gpu/glsl/GrGLSLVertexGeoBuilder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGLSLVertexGeoBuilder = type { %class.GrGLSLShaderBuilder.base, [12 x i8] }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.2, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.8], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::vector", i32, %class.SkSTArray.106 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.10, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.10 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrProgramDesc = type <{ %class.SkSTArray.11, i32, [4 x i8] }>
%class.SkSTArray.11 = type { %class.SkAlignedSTStorage.12, %class.SkTArray.13 }
%class.SkAlignedSTStorage.12 = type { [132 x i8] }
%class.SkTArray.13 = type { i32*, i64 }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.14, i32, [4 x i8] }
%union.anon.14 = type { %struct.anon.15 }
%struct.anon.15 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.63, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.17, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.17 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.18, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.57" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.18 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.22 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.19, [4 x i8] }>
%union.anon.19 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.20, i8* }
%class.sk_sp.20 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.21, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.21 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.22 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.23, void (i8*)*, i8* }
%class.SkNVRefCnt.23 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.18, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.54, %class.sk_sp.56, %class.sk_sp.56 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.30, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.30 = type { %class.SkTHashTable.31 }
%class.SkTHashTable.31 = type { i32, i32, %class.SkAutoTArray.32 }
%class.SkAutoTArray.32 = type { %"class.std::__1::unique_ptr.33" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.39, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.39 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.40" }
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.45, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.45 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.46 }
%class.SkTHashTable.46 = type { i32, i32, %class.SkAutoTArray.47 }
%class.SkAutoTArray.47 = type { %"class.std::__1::unique_ptr.48" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.54 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.55, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.55 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.56 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.62 }
%union.anon.62 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.63 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.64, i8, i8, [2 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef.64 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.65"*, [24 x i8] }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.68, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray.68 = type { %class.SkAlignedSTStorage.69, %class.SkTArray.70 }
%class.SkAlignedSTStorage.69 = type { [8 x i8] }
%class.SkTArray.70 = type { %"class.std::__1::unique_ptr.71"*, i64 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrSwizzle = type { i16 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.80, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.80 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.84 }
%class.SkTArray.84 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.94"*, %"class.std::__1::unique_ptr.94"*, %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.97 }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkTArray.97 = type { %"class.std::__1::unique_ptr.94"*, i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::unique_ptr.94"* }
%class.SkSTArray.106 = type { %class.SkAlignedSTStorage.107, %class.SkTArray.108 }
%class.SkAlignedSTStorage.107 = type { [160 x i8] }
%class.SkTArray.108 = type { %class.GrShaderVar*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [120 x i8] }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkSTArray.2 = type { %class.SkAlignedSTStorage.3, %class.SkTArray.4 }
%class.SkAlignedSTStorage.3 = type { [16 x i8] }
%class.SkTArray.4 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.8 = type { %class.SkAlignedSTStorage.9, %class.SkTArray }
%class.SkAlignedSTStorage.9 = type { [8 x i8] }
%class.GrGLSLVaryingHandler = type { i32 (...)**, [8 x i8], %class.GrTBlockList.109, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrGLSLProgramBuilder*, i8* }
%class.GrTBlockList.109 = type { %class.GrSBlockAllocator.110 }
%class.GrSBlockAllocator.110 = type { [80 x i8] }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.2, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.8], i32, i8, [3 x i8], i32, [12 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }

$_ZN19GrGLSLVertexBuilderD0Ev = comdat any

$_ZN19GrGLSLShaderBuilderD2Ev = comdat any

$_ZN21GrGLSLGeometryBuilderD0Ev = comdat any

$_ZN19GrGLSLShaderBuilderD0Ev = comdat any

$_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv = comdat any

$_ZTV19GrGLSLShaderBuilder = comdat any

@.str = private unnamed_addr constant [32 x i8] c"{float2 _posTmp = %s.xy / %s.z;\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"{float2 _posTmp = %s;\00", align 1
@.str.2 = private unnamed_addr constant [68 x i8] c"_posTmp = floor(_posTmp) + float2(0.5);sk_Position = _posTmp.xy01;}\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"sk_Position = %s.xy0z;\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"sk_Position = %s.xy01;\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"sk_PointSize = 1.0;\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"invocations = %i\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"max_vertices = %i\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"EmitVertex();\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"EndPrimitive();\00", align 1
@_ZTV19GrGLSLVertexBuilder = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLShaderBuilder*)* @_ZN19GrGLSLShaderBuilderD2Ev to i8*), i8* bitcast (void (%class.GrGLSLVertexBuilder*)* @_ZN19GrGLSLVertexBuilderD0Ev to i8*), i8* bitcast (void (%class.GrGLSLVertexBuilder*)* @_ZN19GrGLSLVertexBuilder10onFinalizeEv to i8*)] }, align 8
@_ZTV21GrGLSLGeometryBuilder = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLShaderBuilder*)* @_ZN19GrGLSLShaderBuilderD2Ev to i8*), i8* bitcast (void (%class.GrGLSLGeometryBuilder*)* @_ZN21GrGLSLGeometryBuilderD0Ev to i8*), i8* bitcast (void (%class.GrGLSLGeometryBuilder*)* @_ZN21GrGLSLGeometryBuilder10onFinalizeEv to i8*)] }, align 8
@.str.10 = private unnamed_addr constant [7 x i8] c"points\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"lines\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"triangles\00", align 1
@.str.13 = private unnamed_addr constant [63 x i8] c"../../third_party/skia/src/gpu/glsl/GrGLSLVertexGeoBuilder.cpp\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"invalid input type\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"line_strip\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"triangle_strip\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"invalid output type\00", align 1
@_ZTV19GrGLSLShaderBuilder = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLShaderBuilder*)* @_ZN19GrGLSLShaderBuilderD2Ev to i8*), i8* bitcast (void (%class.GrGLSLShaderBuilder*)* @_ZN19GrGLSLShaderBuilderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@switch.table._ZN21GrGLSLGeometryBuilder9configureENS_9InputTypeENS_10OutputTypeEii = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0)], align 8
@switch.table._ZN21GrGLSLGeometryBuilder9configureENS_9InputTypeENS_10OutputTypeEii.18 = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22GrGLSLVertexGeoBuilder24emitNormalizedSkPositionEP8SkStringPKc8GrSLType(%class.GrGLSLVertexGeoBuilder* nocapture readonly, %class.SkString*, i8*, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrGLSLVertexGeoBuilder, %class.GrGLSLVertexGeoBuilder* %0, i64 0, i32 0, i32 1
  %6 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %5, align 8
  %7 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %6, i64 0, i32 7
  %8 = load %class.GrProgramInfo*, %class.GrProgramInfo** %7, align 16
  %9 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %8, i64 0, i32 5
  %10 = load %class.GrPipeline*, %class.GrPipeline** %9, align 8
  %11 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %10, i64 0, i32 5
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, 8
  %14 = icmp eq i8 %13, 0
  %15 = icmp eq i32 %3, 23
  br i1 %14, label %20, label %16

16:                                               ; preds = %4
  br i1 %15, label %17, label %18

17:                                               ; preds = %16
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i8* %2, i8* %2) #8
  br label %19

18:                                               ; preds = %16
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8* %2) #8
  br label %19

19:                                               ; preds = %18, %17
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %1, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.2, i64 0, i64 0)) #8
  br label %23

20:                                               ; preds = %4
  br i1 %15, label %21, label %22

21:                                               ; preds = %20
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %2) #8
  br label %23

22:                                               ; preds = %20
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %2) #8
  br label %23

23:                                               ; preds = %21, %22, %19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN8SkString7appendfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLVertexBuilder10onFinalizeEv(%class.GrGLSLVertexBuilder* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGLSLVertexBuilder, %class.GrGLSLVertexBuilder* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %2, align 8
  %4 = getelementptr inbounds %class.GrGLSLProgramBuilder, %class.GrGLSLProgramBuilder* %3, i64 0, i32 7
  %5 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 16
  %6 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %5, i64 0, i32 9
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 2
  br i1 %8, label %9, label %17

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.GrGLSLVertexBuilder, %class.GrGLSLVertexBuilder* %0, i64 0, i32 0, i32 0, i32 14
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %class.GrGLSLVertexBuilder, %class.GrGLSLVertexBuilder* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %13 = load %class.SkString*, %class.SkString** %12, align 8
  %14 = sext i32 %11 to i64
  %15 = getelementptr inbounds %class.SkString, %class.SkString* %13, i64 %14
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %15, i64 -1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0)) #8
  %16 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %2, align 8
  br label %17

17:                                               ; preds = %9, %1
  %18 = phi %class.GrGLSLProgramBuilder* [ %16, %9 ], [ %3, %1 ]
  %19 = bitcast %class.GrGLSLProgramBuilder* %18 to %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)***
  %20 = load %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*** %19, align 16
  %21 = getelementptr inbounds %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)** %20, i64 6
  %22 = load %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)** %21, align 8
  %23 = tail call %class.GrGLSLVaryingHandler* %22(%class.GrGLSLProgramBuilder* %18) #8
  %24 = getelementptr inbounds %class.GrGLSLVertexBuilder, %class.GrGLSLVertexBuilder* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %25 = load %class.SkString*, %class.SkString** %24, align 8
  %26 = getelementptr inbounds %class.SkString, %class.SkString* %25, i64 5
  %27 = getelementptr inbounds %class.SkString, %class.SkString* %25, i64 6
  tail call void @_ZNK20GrGLSLVaryingHandler14getVertexDeclsEP8SkStringS1_(%class.GrGLSLVaryingHandler* %23, %class.SkString* %26, %class.SkString* %27) #8
  ret void
}

declare void @_ZNK20GrGLSLVaryingHandler14getVertexDeclsEP8SkStringS1_(%class.GrGLSLVaryingHandler*, %class.SkString*, %class.SkString*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrGLSLGeometryBuilder9configureENS_9InputTypeENS_10OutputTypeEii(%class.GrGLSLGeometryBuilder*, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkString, align 8
  %7 = alloca %class.SkString, align 8
  %8 = getelementptr inbounds %class.GrGLSLGeometryBuilder, %class.GrGLSLGeometryBuilder* %0, i64 0, i32 1
  store i32 %4, i32* %8, align 4
  %9 = bitcast %class.GrGLSLGeometryBuilder* %0 to %class.GrGLSLShaderBuilder*
  %10 = icmp ult i32 %1, 3
  br i1 %10, label %12, label %11

11:                                               ; preds = %5
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.13, i64 0, i64 0), i32 50, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0)) #9
  unreachable

12:                                               ; preds = %5
  %13 = sext i32 %1 to i64
  %14 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN21GrGLSLGeometryBuilder9configureENS_9InputTypeENS_10OutputTypeEii, i64 0, i64 %13
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZN19GrGLSLShaderBuilder18addLayoutQualifierEPKcNS_18InterfaceQualifierE(%class.GrGLSLShaderBuilder* %9, i8* nonnull %15, i32 0) #8
  %16 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  call void (%class.SkString*, i8*, ...) @_Z14SkStringPrintfPKcz(%class.SkString* nonnull sret %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i32 %4) #8
  %17 = getelementptr inbounds %class.SkString, %class.SkString* %6, i64 0, i32 0, i32 0
  %18 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %17, align 8
  %19 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %18, i64 0, i32 2
  call void @_ZN19GrGLSLShaderBuilder18addLayoutQualifierEPKcNS_18InterfaceQualifierE(%class.GrGLSLShaderBuilder* %9, i8* %19, i32 0) #8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %20 = icmp ult i32 %2, 3
  br i1 %20, label %22, label %21

21:                                               ; preds = %12
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.13, i64 0, i64 0), i32 60, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0)) #9
  unreachable

22:                                               ; preds = %12
  %23 = sext i32 %2 to i64
  %24 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN21GrGLSLGeometryBuilder9configureENS_9InputTypeENS_10OutputTypeEii.18, i64 0, i64 %23
  %25 = load i8*, i8** %24, align 8
  call void @_ZN19GrGLSLShaderBuilder18addLayoutQualifierEPKcNS_18InterfaceQualifierE(%class.GrGLSLShaderBuilder* %9, i8* nonnull %25, i32 1) #8
  %26 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  call void (%class.SkString*, i8*, ...) @_Z14SkStringPrintfPKcz(%class.SkString* nonnull sret %7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 %3) #8
  %27 = getelementptr inbounds %class.SkString, %class.SkString* %7, i64 0, i32 0, i32 0
  %28 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %27, align 8
  %29 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %28, i64 0, i32 2
  call void @_ZN19GrGLSLShaderBuilder18addLayoutQualifierEPKcNS_18InterfaceQualifierE(%class.GrGLSLShaderBuilder* %9, i8* %29, i32 1) #8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  ret void
}

declare void @_ZN19GrGLSLShaderBuilder18addLayoutQualifierEPKcNS_18InterfaceQualifierE(%class.GrGLSLShaderBuilder*, i8*, i32) local_unnamed_addr #2

declare void @_Z14SkStringPrintfPKcz(%class.SkString* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrGLSLGeometryBuilder10emitVertexEP8SkStringPKc8GrSLType(%class.GrGLSLGeometryBuilder* nocapture readonly, %class.SkString*, i8*, i32) local_unnamed_addr #0 align 2 {
  %5 = bitcast %class.GrGLSLGeometryBuilder* %0 to %class.GrGLSLVertexGeoBuilder*
  tail call void @_ZN22GrGLSLVertexGeoBuilder24emitNormalizedSkPositionEP8SkStringPKc8GrSLType(%class.GrGLSLVertexGeoBuilder* %5, %class.SkString* %1, i8* %2, i32 %3)
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %1, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0)) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrGLSLGeometryBuilder12endPrimitiveEv(%class.GrGLSLGeometryBuilder* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGLSLGeometryBuilder, %class.GrGLSLGeometryBuilder* %0, i64 0, i32 0, i32 0, i32 14
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %class.GrGLSLGeometryBuilder, %class.GrGLSLGeometryBuilder* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %5 = load %class.SkString*, %class.SkString** %4, align 8
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 %6
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %7, i64 -1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0)) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrGLSLGeometryBuilder10onFinalizeEv(%class.GrGLSLGeometryBuilder* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGLSLGeometryBuilder, %class.GrGLSLGeometryBuilder* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %2, align 8
  %4 = bitcast %class.GrGLSLProgramBuilder* %3 to %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)***
  %5 = load %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*** %4, align 16
  %6 = getelementptr inbounds %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)** %5, i64 6
  %7 = load %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLVaryingHandler* (%class.GrGLSLProgramBuilder*)** %6, align 8
  %8 = tail call %class.GrGLSLVaryingHandler* %7(%class.GrGLSLProgramBuilder* %3) #8
  %9 = getelementptr inbounds %class.GrGLSLGeometryBuilder, %class.GrGLSLGeometryBuilder* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %10 = load %class.SkString*, %class.SkString** %9, align 8
  %11 = getelementptr inbounds %class.SkString, %class.SkString* %10, i64 5
  %12 = getelementptr inbounds %class.SkString, %class.SkString* %10, i64 6
  tail call void @_ZNK20GrGLSLVaryingHandler12getGeomDeclsEP8SkStringS1_(%class.GrGLSLVaryingHandler* %8, %class.SkString* %11, %class.SkString* %12) #8
  ret void
}

declare void @_ZNK20GrGLSLVaryingHandler12getGeomDeclsEP8SkStringS1_(%class.GrGLSLVaryingHandler*, %class.SkString*, %class.SkString*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLVertexBuilderD0Ev(%class.GrGLSLVertexBuilder*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %class.GrGLSLVertexBuilder* %0 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilderD2Ev(%class.GrGLSLShaderBuilder* %2) #8
  %3 = bitcast %class.GrGLSLVertexBuilder* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilderD2Ev(%class.GrGLSLShaderBuilder*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV19GrGLSLShaderBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16
  %3 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %class.SkString**
  br label %15

11:                                               ; preds = %15, %1
  %12 = phi i64 [ %6, %1 ], [ %20, %15 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %27, label %24

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %19, %15 ]
  %17 = load %class.SkString*, %class.SkString** %10, align 8
  %18 = getelementptr inbounds %class.SkString, %class.SkString* %17, i64 %16
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %18) #8
  %19 = add nuw nsw i64 %16, 1
  %20 = load i64, i64* %5, align 8
  %21 = lshr i64 %20, 1
  %22 = and i64 %21, 2147483647
  %23 = icmp ult i64 %19, %22
  br i1 %23, label %15, label %11

24:                                               ; preds = %11
  %25 = bitcast i8* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_Z7sk_freePv(i8* %26) #8
  br label %27

27:                                               ; preds = %11, %24
  %28 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 0, i32 0, i32 0, i64 8
  %29 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 0, i32 0, i32 0, i64 16
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 4294967294
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %109, label %98

34:                                               ; preds = %116
  %35 = bitcast i8* %125 to %"class.std::__1::unique_ptr"**
  br label %40

36:                                               ; preds = %51, %116
  %37 = phi i64 [ %128, %116 ], [ %53, %51 ]
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %60, label %57

40:                                               ; preds = %51, %34
  %41 = phi i64 [ 0, %34 ], [ %52, %51 ]
  %42 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %35, align 8
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 %41, i32 0, i32 0, i32 0
  %44 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %43, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %43, align 8
  %45 = icmp eq %"class.SkSL::Statement"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.SkSL::Statement"* %44 to void (%"class.SkSL::Statement"*)***
  %48 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %48, i64 1
  %50 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %49, align 8
  tail call void %50(%"class.SkSL::Statement"* nonnull %44) #8
  br label %51

51:                                               ; preds = %46, %40
  %52 = add nuw nsw i64 %41, 1
  %53 = load i64, i64* %127, align 8
  %54 = lshr i64 %53, 1
  %55 = and i64 %54, 2147483647
  %56 = icmp ult i64 %52, %55
  br i1 %56, label %40, label %36

57:                                               ; preds = %36
  %58 = bitcast i8* %125 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %59) #8
  br label %60

60:                                               ; preds = %36, %57
  %61 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 6
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %61) #8
  %62 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %62) #8
  %63 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %63) #8
  %64 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %65 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 128
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 4294967294
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %60
  %71 = bitcast i8* %64 to %class.SkString**
  br label %76

72:                                               ; preds = %76, %60
  %73 = phi i64 [ %67, %60 ], [ %81, %76 ]
  %74 = and i64 %73, 1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %88, label %85

76:                                               ; preds = %76, %70
  %77 = phi i64 [ 0, %70 ], [ %80, %76 ]
  %78 = load %class.SkString*, %class.SkString** %71, align 8
  %79 = getelementptr inbounds %class.SkString, %class.SkString* %78, i64 %77
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %79) #8
  %80 = add nuw nsw i64 %77, 1
  %81 = load i64, i64* %66, align 8
  %82 = lshr i64 %81, 1
  %83 = and i64 %82, 2147483647
  %84 = icmp ult i64 %80, %83
  br i1 %84, label %76, label %72

85:                                               ; preds = %72
  %86 = bitcast i8* %64 to i8**
  %87 = load i8*, i8** %86, align 8
  tail call void @_Z7sk_freePv(i8* %87) #8
  br label %88

88:                                               ; preds = %72, %85
  %89 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 2, i32 0
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  tail call void @_ZdlPv(i8* %96) #10
  br label %97

97:                                               ; preds = %88, %94
  ret void

98:                                               ; preds = %27
  %99 = bitcast i8* %28 to %class.SkString**
  br label %100

100:                                              ; preds = %100, %98
  %101 = phi i64 [ 0, %98 ], [ %104, %100 ]
  %102 = load %class.SkString*, %class.SkString** %99, align 8
  %103 = getelementptr inbounds %class.SkString, %class.SkString* %102, i64 %101
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %103) #8
  %104 = add nuw nsw i64 %101, 1
  %105 = load i64, i64* %30, align 8
  %106 = lshr i64 %105, 1
  %107 = and i64 %106, 2147483647
  %108 = icmp ult i64 %104, %107
  br i1 %108, label %100, label %109

109:                                              ; preds = %100, %27
  %110 = phi i64 [ %31, %27 ], [ %105, %100 ]
  %111 = and i64 %110, 1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = bitcast i8* %28 to i8**
  %115 = load i8*, i8** %114, align 8
  tail call void @_Z7sk_freePv(i8* %115) #8
  br label %116

116:                                              ; preds = %113, %109
  %117 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 10
  tail call void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList* %117) #8
  %118 = bitcast %class.GrTBlockList* %117 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %118) #8
  %119 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 10, i32 0, i32 0, i64 16
  %120 = bitcast i8* %119 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %120) #8
  %121 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 9
  tail call void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList* %121) #8
  %122 = bitcast %class.GrTBlockList* %121 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %122) #8
  %123 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 9, i32 0, i32 0, i64 16
  %124 = bitcast i8* %123 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %124) #8
  %125 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 7, i32 0, i32 0, i64 16
  %126 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 7, i32 0, i32 0, i64 24
  %127 = bitcast i8* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = and i64 %128, 4294967294
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %36, label %34
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21GrGLSLGeometryBuilderD0Ev(%class.GrGLSLGeometryBuilder*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %class.GrGLSLGeometryBuilder* %0 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilderD2Ev(%class.GrGLSLShaderBuilder* %2) #8
  %3 = bitcast %class.GrGLSLGeometryBuilder* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #5

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilderD0Ev(%class.GrGLSLShaderBuilder*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.GrTBlockList* %0 to %"class.GrBlockAllocator::Block"**
  %3 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %2, align 16, !noalias !2
  %4 = icmp eq %"class.GrBlockAllocator::Block"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 1
  %7 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %6, align 8, !noalias !2
  %8 = icmp eq %"class.GrBlockAllocator::Block"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %7, i64 0, i32 3
  %11 = load i32, i32* %10, align 4, !noalias !2
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %7
  br label %14

14:                                               ; preds = %9, %5
  %15 = phi %"class.GrBlockAllocator::Block"* [ %13, %9 ], [ null, %5 ]
  %16 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8, !noalias !2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %35, %14
  %20 = phi %"class.GrBlockAllocator::Block"* [ %3, %14 ], [ %24, %35 ]
  %21 = phi %"class.GrBlockAllocator::Block"* [ %15, %14 ], [ %36, %35 ]
  %22 = phi i32 [ %17, %14 ], [ %38, %35 ]
  br label %42

23:                                               ; preds = %14, %35
  %24 = phi %"class.GrBlockAllocator::Block"* [ %36, %35 ], [ %15, %14 ]
  %25 = icmp eq %"class.GrBlockAllocator::Block"* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 1
  %28 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %27, align 8, !noalias !2
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %28, i64 0, i32 3
  %32 = load i32, i32* %31, align 4, !noalias !2
  %33 = icmp slt i32 %32, 0
  %34 = select i1 %33, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %28
  br label %35

35:                                               ; preds = %30, %26
  %36 = phi %"class.GrBlockAllocator::Block"* [ null, %26 ], [ %34, %30 ]
  %37 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 4
  %38 = load i32, i32* %37, align 8, !noalias !2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %23, label %19

40:                                               ; preds = %23, %59, %79, %1
  %41 = bitcast %class.GrTBlockList* %0 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %41) #8
  ret void

42:                                               ; preds = %75, %19
  %43 = phi %"class.GrBlockAllocator::Block"* [ %20, %19 ], [ %76, %75 ]
  %44 = phi %"class.GrBlockAllocator::Block"* [ %21, %19 ], [ %77, %75 ]
  %45 = phi i32 [ %22, %19 ], [ %78, %75 ]
  %46 = bitcast %"class.GrBlockAllocator::Block"* %43 to i8*
  br label %47

47:                                               ; preds = %42, %47
  %48 = phi i32 [ %57, %47 ], [ %45, %42 ]
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %46, i64 %49
  %51 = getelementptr inbounds i8, i8* %50, i64 32
  %52 = bitcast i8* %51 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %52) #8
  %53 = getelementptr inbounds i8, i8* %50, i64 24
  %54 = bitcast i8* %53 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %54) #8
  %55 = getelementptr inbounds i8, i8* %50, i64 16
  %56 = bitcast i8* %55 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %56) #8
  %57 = add i32 %48, -40
  %58 = icmp slt i32 %57, 32
  br i1 %58, label %59, label %47

59:                                               ; preds = %47
  %60 = icmp eq %"class.GrBlockAllocator::Block"* %44, null
  br i1 %60, label %40, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 1
  %63 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %62, align 8
  %64 = icmp eq %"class.GrBlockAllocator::Block"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %63, i64 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %67, 0
  %69 = select i1 %68, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %63
  br label %70

70:                                               ; preds = %65, %61
  %71 = phi %"class.GrBlockAllocator::Block"* [ null, %61 ], [ %69, %65 ]
  %72 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %91, %70
  %76 = phi %"class.GrBlockAllocator::Block"* [ %44, %70 ], [ %80, %91 ]
  %77 = phi %"class.GrBlockAllocator::Block"* [ %71, %70 ], [ %92, %91 ]
  %78 = phi i32 [ %73, %70 ], [ %94, %91 ]
  br label %42

79:                                               ; preds = %70, %91
  %80 = phi %"class.GrBlockAllocator::Block"* [ %92, %91 ], [ %71, %70 ]
  %81 = icmp eq %"class.GrBlockAllocator::Block"* %80, null
  br i1 %81, label %40, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %80, i64 0, i32 1
  %84 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %83, align 8
  %85 = icmp eq %"class.GrBlockAllocator::Block"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %84, i64 0, i32 3
  %88 = load i32, i32* %87, align 4
  %89 = icmp slt i32 %88, 0
  %90 = select i1 %89, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %84
  br label %91

91:                                               ; preds = %86, %82
  %92 = phi %"class.GrBlockAllocator::Block"* [ null, %82 ], [ %90, %86 ]
  %93 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %80, i64 0, i32 4
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %79, label %75
}

declare void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK18BlockIndexIteratorIR11GrShaderVarLb0ELb0EXadL_ZN12GrTBlockListIS0_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS3_5FirstES7_EEXadL_ZNS3_9DecrementES7_iEEXadL_ZNS3_7GetItemEPS5_iEEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK18BlockIndexIteratorIR11GrShaderVarLb0ELb0EXadL_ZN12GrTBlockListIS0_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS3_5FirstES7_EEXadL_ZNS3_9DecrementES7_iEEXadL_ZNS3_7GetItemEPS5_iEEE5beginEv"}
