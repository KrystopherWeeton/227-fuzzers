; ModuleID = '../../third_party/brotli/enc/cluster.c'
source_filename = "../../third_party/brotli/enc/cluster.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.HistogramLiteral = type { [256 x i32], i64, double }
%struct.HistogramPair = type { i32, i32, double, double }
%struct.MemoryManager = type { i8* (i8*, i64)*, void (i8*, i8*)*, i8* }
%struct.HistogramCommand = type { [704 x i32], i64, double }
%struct.HistogramDistance = type { [544 x i32], i64, double }

@kBrotliLog2Table = external hidden local_unnamed_addr constant [256 x double], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @BrotliCompareAndPushToQueueLiteral(%struct.HistogramLiteral* nocapture readonly, i32* nocapture readonly, i32, i32, i64, %struct.HistogramPair* nocapture, i64* nocapture) local_unnamed_addr #0 {
  %8 = alloca %struct.HistogramLiteral, align 8
  %9 = icmp eq i32 %2, %3
  br i1 %9, label %166, label %10

10:                                               ; preds = %7
  %11 = icmp ult i32 %3, %2
  %12 = select i1 %11, i32 %2, i32 %3
  %13 = select i1 %11, i32 %3, i32 %2
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %1, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = zext i32 %12 to i64
  %19 = getelementptr inbounds i32, i32* %1, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = add nuw nsw i64 %21, %17
  %23 = uitofp i32 %16 to double
  %24 = icmp ult i32 %16, 256
  br i1 %24, label %25, label %28

25:                                               ; preds = %10
  %26 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %17
  %27 = load double, double* %26, align 8
  br label %30

28:                                               ; preds = %10
  %29 = tail call double @log2(double %23) #4
  br label %30

30:                                               ; preds = %28, %25
  %31 = phi double [ %27, %25 ], [ %29, %28 ]
  %32 = fmul double %31, %23
  %33 = uitofp i32 %20 to double
  %34 = icmp ult i32 %20, 256
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %21
  %37 = load double, double* %36, align 8
  br label %40

38:                                               ; preds = %30
  %39 = tail call double @log2(double %33) #4
  br label %40

40:                                               ; preds = %38, %35
  %41 = phi double [ %37, %35 ], [ %39, %38 ]
  %42 = fmul double %41, %33
  %43 = fadd double %32, %42
  %44 = uitofp i64 %22 to double
  %45 = icmp ult i64 %22, 256
  br i1 %45, label %46, label %49

46:                                               ; preds = %40
  %47 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %22
  %48 = load double, double* %47, align 8
  br label %51

49:                                               ; preds = %40
  %50 = tail call double @log2(double %44) #4
  br label %51

51:                                               ; preds = %46, %49
  %52 = phi double [ %48, %46 ], [ %50, %49 ]
  %53 = fmul double %52, %44
  %54 = fsub double %43, %53
  %55 = fmul double %54, 5.000000e-01
  %56 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %14
  %57 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %14, i32 2
  %58 = load double, double* %57, align 8
  %59 = fsub double %55, %58
  %60 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %18, i32 2
  %61 = load double, double* %60, align 8
  %62 = fsub double %59, %61
  %63 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %14, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %126, label %66

66:                                               ; preds = %51
  %67 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %18, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %126, label %70

70:                                               ; preds = %66
  %71 = load i64, i64* %6, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 3
  %75 = load double, double* %74, align 8
  %76 = fcmp olt double %75, 0.000000e+00
  %77 = select i1 %76, double 0.000000e+00, double %75
  br label %78

78:                                               ; preds = %70, %73
  %79 = phi double [ %77, %73 ], [ 0x547D42AEA2879F2E, %70 ]
  %80 = bitcast %struct.HistogramLiteral* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1040, i8* nonnull %80) #4
  %81 = bitcast %struct.HistogramLiteral* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %80, i8* align 8 %81, i64 1040, i1 false)
  %82 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %8, i64 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, %68
  store i64 %84, i64* %82, align 8
  br label %85

85:                                               ; preds = %85, %78
  %86 = phi i64 [ 0, %78 ], [ %120, %85 ]
  %87 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %18, i32 0, i64 %86
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4
  %90 = getelementptr inbounds i32, i32* %87, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  %92 = load <4 x i32>, <4 x i32>* %91, align 4
  %93 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %8, i64 0, i32 0, i64 %86
  %94 = bitcast i32* %93 to <4 x i32>*
  %95 = load <4 x i32>, <4 x i32>* %94, align 8
  %96 = getelementptr inbounds i32, i32* %93, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  %98 = load <4 x i32>, <4 x i32>* %97, align 8
  %99 = add <4 x i32> %95, %89
  %100 = add <4 x i32> %98, %92
  %101 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %101, align 8
  %102 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %102, align 8
  %103 = or i64 %86, 8
  %104 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %18, i32 0, i64 %103
  %105 = bitcast i32* %104 to <4 x i32>*
  %106 = load <4 x i32>, <4 x i32>* %105, align 4
  %107 = getelementptr inbounds i32, i32* %104, i64 4
  %108 = bitcast i32* %107 to <4 x i32>*
  %109 = load <4 x i32>, <4 x i32>* %108, align 4
  %110 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %8, i64 0, i32 0, i64 %103
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 8
  %113 = getelementptr inbounds i32, i32* %110, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 8
  %116 = add <4 x i32> %112, %106
  %117 = add <4 x i32> %115, %109
  %118 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> %116, <4 x i32>* %118, align 8
  %119 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %117, <4 x i32>* %119, align 8
  %120 = add nuw nsw i64 %86, 16
  %121 = icmp eq i64 %120, 256
  br i1 %121, label %122, label %85, !llvm.loop !2

122:                                              ; preds = %85
  %123 = call double @BrotliPopulationCostLiteral(%struct.HistogramLiteral* nonnull %8) #4
  %124 = fsub double %79, %62
  %125 = fcmp olt double %123, %124
  call void @llvm.lifetime.end.p0i8(i64 1040, i8* nonnull %80) #4
  br i1 %125, label %126, label %166

126:                                              ; preds = %122, %66, %51
  %127 = phi double [ %61, %51 ], [ %58, %66 ], [ %123, %122 ]
  %128 = fadd double %62, %127
  %129 = load i64, i64* %6, align 8
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %157, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 3
  %133 = load double, double* %132, align 8
  %134 = fcmp une double %133, %128
  br i1 %134, label %135, label %137

135:                                              ; preds = %131
  %136 = fcmp ogt double %133, %128
  br i1 %136, label %145, label %157

137:                                              ; preds = %131
  %138 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 0
  %141 = load i32, i32* %140, align 8
  %142 = sub i32 %139, %141
  %143 = sub i32 %12, %13
  %144 = icmp ugt i32 %142, %143
  br i1 %144, label %145, label %157

145:                                              ; preds = %135, %137
  %146 = icmp ult i64 %129, %4
  br i1 %146, label %147, label %153

147:                                              ; preds = %145
  %148 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 %129
  %149 = bitcast %struct.HistogramPair* %148 to i8*
  %150 = bitcast %struct.HistogramPair* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %150, i64 24, i1 false)
  %151 = load i64, i64* %6, align 8
  %152 = add i64 %151, 1
  store i64 %152, i64* %6, align 8
  br label %153

153:                                              ; preds = %147, %145
  %154 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 0
  store i32 %13, i32* %154, align 8
  %155 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 1
  store i32 %12, i32* %155, align 4
  %156 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 2
  store double %127, double* %156, align 8
  store double %128, double* %132, align 8
  br label %166

157:                                              ; preds = %135, %137, %126
  %158 = icmp ult i64 %129, %4
  br i1 %158, label %159, label %166

159:                                              ; preds = %157
  %160 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 %129, i32 0
  store i32 %13, i32* %160, align 8
  %161 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 %129, i32 1
  store i32 %12, i32* %161, align 4
  %162 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 %129, i32 2
  store double %127, double* %162, align 8
  %163 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 %129, i32 3
  store double %128, double* %163, align 8
  %164 = load i64, i64* %6, align 8
  %165 = add i64 %164, 1
  store i64 %165, i64* %6, align 8
  br label %166

166:                                              ; preds = %122, %157, %159, %153, %7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare hidden double @BrotliPopulationCostLiteral(%struct.HistogramLiteral*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @BrotliHistogramCombineLiteral(%struct.HistogramLiteral* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, %struct.HistogramPair*, i64, i64, i64, i64) local_unnamed_addr #0 {
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #4
  store i64 0, i64* %10, align 8
  %12 = icmp eq i64 %5, 0
  br i1 %12, label %284, label %30

13:                                               ; preds = %36, %30
  %14 = icmp eq i64 %32, %5
  br i1 %14, label %15, label %30

15:                                               ; preds = %13
  %16 = icmp ugt i64 %5, 1
  br i1 %16, label %17, label %284

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 0, i32 3
  %19 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 0, i32 0
  %20 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 0, i32 1
  %21 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 0, i32 2
  %22 = bitcast double* %21 to i64*
  %23 = icmp eq i64 %6, 0
  %24 = bitcast %struct.HistogramPair* %4 to i8*
  %25 = getelementptr %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 0, i32 1
  %26 = getelementptr %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 0, i32 1
  %27 = icmp ult i64 %6, 8
  %28 = and i64 %6, -8
  %29 = icmp eq i64 %28, %6
  br label %43

30:                                               ; preds = %9, %13
  %31 = phi i64 [ %32, %13 ], [ 0, %9 ]
  %32 = add nuw i64 %31, 1
  %33 = icmp ult i64 %32, %5
  br i1 %33, label %34, label %13

34:                                               ; preds = %30
  %35 = getelementptr inbounds i32, i32* %3, i64 %31
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ %32, %34 ], [ %41, %36 ]
  %38 = load i32, i32* %35, align 4
  %39 = getelementptr inbounds i32, i32* %3, i64 %37
  %40 = load i32, i32* %39, align 4
  call void @BrotliCompareAndPushToQueueLiteral(%struct.HistogramLiteral* %0, i32* %1, i32 %38, i32 %40, i64 %8, %struct.HistogramPair* %4, i64* nonnull %10)
  %41 = add i64 %37, 1
  %42 = icmp eq i64 %41, %5
  br i1 %42, label %13, label %36

43:                                               ; preds = %17, %279
  %44 = phi i64 [ %5, %17 ], [ %282, %279 ]
  %45 = phi double [ 0.000000e+00, %17 ], [ %281, %279 ]
  %46 = phi i64 [ 1, %17 ], [ %280, %279 ]
  %47 = load double, double* %18, align 8
  %48 = fcmp ult double %47, %45
  br i1 %48, label %49, label %279

49:                                               ; preds = %43
  %50 = load i32, i32* %19, align 8
  %51 = load i32, i32* %20, align 4
  %52 = zext i32 %50 to i64
  %53 = zext i32 %51 to i64
  %54 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %53, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %52, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %57, %55
  store i64 %58, i64* %56, align 8
  %59 = getelementptr %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %52
  %60 = mul nuw nsw i64 %52, 130
  %61 = getelementptr i64, i64* %25, i64 %60
  %62 = getelementptr %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %53
  %63 = mul nuw nsw i64 %53, 130
  %64 = getelementptr i64, i64* %26, i64 %63
  %65 = bitcast i64* %64 to %struct.HistogramLiteral*
  %66 = icmp ult %struct.HistogramLiteral* %59, %65
  %67 = bitcast i64* %61 to %struct.HistogramLiteral*
  %68 = icmp ult %struct.HistogramLiteral* %62, %67
  %69 = and i1 %66, %68
  br i1 %69, label %107, label %70

70:                                               ; preds = %49, %70
  %71 = phi i64 [ %105, %70 ], [ 0, %49 ]
  %72 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %53, i32 0, i64 %71
  %73 = bitcast i32* %72 to <4 x i32>*
  %74 = load <4 x i32>, <4 x i32>* %73, align 4, !alias.scope !4
  %75 = getelementptr inbounds i32, i32* %72, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  %77 = load <4 x i32>, <4 x i32>* %76, align 4, !alias.scope !4
  %78 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %52, i32 0, i64 %71
  %79 = bitcast i32* %78 to <4 x i32>*
  %80 = load <4 x i32>, <4 x i32>* %79, align 4, !alias.scope !7, !noalias !4
  %81 = getelementptr inbounds i32, i32* %78, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  %83 = load <4 x i32>, <4 x i32>* %82, align 4, !alias.scope !7, !noalias !4
  %84 = add <4 x i32> %80, %74
  %85 = add <4 x i32> %83, %77
  %86 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %84, <4 x i32>* %86, align 4, !alias.scope !7, !noalias !4
  %87 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> %85, <4 x i32>* %87, align 4, !alias.scope !7, !noalias !4
  %88 = or i64 %71, 8
  %89 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %53, i32 0, i64 %88
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4, !alias.scope !4
  %92 = getelementptr inbounds i32, i32* %89, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4, !alias.scope !4
  %95 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %52, i32 0, i64 %88
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !7, !noalias !4
  %98 = getelementptr inbounds i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !7, !noalias !4
  %101 = add <4 x i32> %97, %91
  %102 = add <4 x i32> %100, %94
  %103 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %103, align 4, !alias.scope !7, !noalias !4
  %104 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %104, align 4, !alias.scope !7, !noalias !4
  %105 = add nuw nsw i64 %71, 16
  %106 = icmp eq i64 %105, 256
  br i1 %106, label %122, label %70, !llvm.loop !9

107:                                              ; preds = %49, %107
  %108 = phi i64 [ %120, %107 ], [ 0, %49 ]
  %109 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %53, i32 0, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %52, i32 0, i64 %108
  %112 = load i32, i32* %111, align 4
  %113 = add i32 %112, %110
  store i32 %113, i32* %111, align 4
  %114 = or i64 %108, 1
  %115 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %53, i32 0, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %52, i32 0, i64 %114
  %118 = load i32, i32* %117, align 4
  %119 = add i32 %118, %116
  store i32 %119, i32* %117, align 4
  %120 = add nuw nsw i64 %108, 2
  %121 = icmp eq i64 %120, 256
  br i1 %121, label %122, label %107, !llvm.loop !10

122:                                              ; preds = %70, %107
  %123 = load i64, i64* %22, align 8
  %124 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %52, i32 2
  %125 = bitcast double* %124 to i64*
  store i64 %123, i64* %125, align 8
  %126 = getelementptr inbounds i32, i32* %1, i64 %53
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds i32, i32* %1, i64 %52
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, %127
  store i32 %130, i32* %128, align 4
  br i1 %23, label %190, label %131

131:                                              ; preds = %122
  br i1 %27, label %132, label %134

132:                                              ; preds = %189, %131
  %133 = phi i64 [ 0, %131 ], [ %28, %189 ]
  br label %192

134:                                              ; preds = %131
  %135 = insertelement <4 x i32> undef, i32 %51, i32 0
  %136 = shufflevector <4 x i32> %135, <4 x i32> undef, <4 x i32> zeroinitializer
  %137 = insertelement <4 x i32> undef, i32 %51, i32 0
  %138 = shufflevector <4 x i32> %137, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %139

139:                                              ; preds = %186, %134
  %140 = phi i64 [ 0, %134 ], [ %187, %186 ]
  %141 = getelementptr inbounds i32, i32* %2, i64 %140
  %142 = bitcast i32* %141 to <4 x i32>*
  %143 = load <4 x i32>, <4 x i32>* %142, align 4
  %144 = getelementptr inbounds i32, i32* %141, i64 4
  %145 = bitcast i32* %144 to <4 x i32>*
  %146 = load <4 x i32>, <4 x i32>* %145, align 4
  %147 = icmp eq <4 x i32> %143, %136
  %148 = icmp eq <4 x i32> %146, %138
  %149 = extractelement <4 x i1> %147, i32 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %139
  store i32 %50, i32* %141, align 4
  br label %151

151:                                              ; preds = %150, %139
  %152 = extractelement <4 x i1> %147, i32 1
  br i1 %152, label %153, label %156

153:                                              ; preds = %151
  %154 = or i64 %140, 1
  %155 = getelementptr inbounds i32, i32* %2, i64 %154
  store i32 %50, i32* %155, align 4
  br label %156

156:                                              ; preds = %153, %151
  %157 = extractelement <4 x i1> %147, i32 2
  br i1 %157, label %158, label %161

158:                                              ; preds = %156
  %159 = or i64 %140, 2
  %160 = getelementptr inbounds i32, i32* %2, i64 %159
  store i32 %50, i32* %160, align 4
  br label %161

161:                                              ; preds = %158, %156
  %162 = extractelement <4 x i1> %147, i32 3
  br i1 %162, label %163, label %166

163:                                              ; preds = %161
  %164 = or i64 %140, 3
  %165 = getelementptr inbounds i32, i32* %2, i64 %164
  store i32 %50, i32* %165, align 4
  br label %166

166:                                              ; preds = %163, %161
  %167 = extractelement <4 x i1> %148, i32 0
  br i1 %167, label %168, label %171

168:                                              ; preds = %166
  %169 = or i64 %140, 4
  %170 = getelementptr inbounds i32, i32* %2, i64 %169
  store i32 %50, i32* %170, align 4
  br label %171

171:                                              ; preds = %168, %166
  %172 = extractelement <4 x i1> %148, i32 1
  br i1 %172, label %173, label %176

173:                                              ; preds = %171
  %174 = or i64 %140, 5
  %175 = getelementptr inbounds i32, i32* %2, i64 %174
  store i32 %50, i32* %175, align 4
  br label %176

176:                                              ; preds = %173, %171
  %177 = extractelement <4 x i1> %148, i32 2
  br i1 %177, label %178, label %181

178:                                              ; preds = %176
  %179 = or i64 %140, 6
  %180 = getelementptr inbounds i32, i32* %2, i64 %179
  store i32 %50, i32* %180, align 4
  br label %181

181:                                              ; preds = %178, %176
  %182 = extractelement <4 x i1> %148, i32 3
  br i1 %182, label %183, label %186

183:                                              ; preds = %181
  %184 = or i64 %140, 7
  %185 = getelementptr inbounds i32, i32* %2, i64 %184
  store i32 %50, i32* %185, align 4
  br label %186

186:                                              ; preds = %183, %181
  %187 = add i64 %140, 8
  %188 = icmp eq i64 %187, %28
  br i1 %188, label %189, label %139, !llvm.loop !11

189:                                              ; preds = %186
  br i1 %29, label %190, label %132

190:                                              ; preds = %198, %189, %122
  %191 = icmp eq i64 %44, 0
  br i1 %191, label %218, label %201

192:                                              ; preds = %132, %198
  %193 = phi i64 [ %199, %198 ], [ %133, %132 ]
  %194 = getelementptr inbounds i32, i32* %2, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = icmp eq i32 %195, %51
  br i1 %196, label %197, label %198

197:                                              ; preds = %192
  store i32 %50, i32* %194, align 4
  br label %198

198:                                              ; preds = %192, %197
  %199 = add nuw i64 %193, 1
  %200 = icmp eq i64 %199, %6
  br i1 %200, label %190, label %192, !llvm.loop !12

201:                                              ; preds = %190, %215
  %202 = phi i64 [ %216, %215 ], [ 0, %190 ]
  %203 = getelementptr inbounds i32, i32* %3, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, %51
  br i1 %205, label %206, label %215

206:                                              ; preds = %201
  %207 = getelementptr inbounds i32, i32* %3, i64 %202
  %208 = bitcast i32* %207 to i8*
  %209 = add nuw i64 %202, 1
  %210 = getelementptr inbounds i32, i32* %3, i64 %209
  %211 = bitcast i32* %210 to i8*
  %212 = xor i64 %202, 4611686018427387903
  %213 = add i64 %212, %44
  %214 = shl i64 %213, 2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %208, i8* align 4 %211, i64 %214, i1 false)
  br label %218

215:                                              ; preds = %201
  %216 = add nuw i64 %202, 1
  %217 = icmp eq i64 %216, %44
  br i1 %217, label %218, label %201

218:                                              ; preds = %215, %190, %206
  %219 = add i64 %44, -1
  %220 = load i64, i64* %10, align 8
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %270, label %222

222:                                              ; preds = %218, %266
  %223 = phi i64 [ %267, %266 ], [ 0, %218 ]
  %224 = phi i64 [ %268, %266 ], [ 0, %218 ]
  %225 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %224
  %226 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %225, i64 0, i32 0
  %227 = load i32, i32* %226, align 8
  %228 = icmp eq i32 %227, %50
  br i1 %228, label %266, label %229

229:                                              ; preds = %222
  %230 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %224, i32 1
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %231, %50
  %233 = icmp eq i32 %227, %51
  %234 = or i1 %233, %232
  %235 = icmp eq i32 %231, %51
  %236 = or i1 %235, %234
  br i1 %236, label %266, label %237

237:                                              ; preds = %229
  %238 = load double, double* %18, align 8
  %239 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %224, i32 3
  %240 = load double, double* %239, align 8
  %241 = fcmp une double %238, %240
  br i1 %241, label %242, label %244

242:                                              ; preds = %237
  %243 = fcmp ogt double %238, %240
  br i1 %243, label %250, label %260

244:                                              ; preds = %237
  %245 = load i32, i32* %20, align 4
  %246 = load i32, i32* %19, align 8
  %247 = sub i32 %245, %246
  %248 = sub i32 %231, %227
  %249 = icmp ugt i32 %247, %248
  br i1 %249, label %250, label %260

250:                                              ; preds = %242, %244
  %251 = load i32, i32* %19, align 8
  %252 = load i32, i32* %20, align 4
  %253 = load i64, i64* %22, align 8
  %254 = bitcast %struct.HistogramPair* %225 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %254, i64 24, i1 false)
  %255 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %223, i32 0
  store i32 %251, i32* %255, align 8
  %256 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %223, i32 1
  store i32 %252, i32* %256, align 4
  %257 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %223, i32 2
  %258 = bitcast double* %257 to i64*
  store i64 %253, i64* %258, align 8
  %259 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %223, i32 3
  store double %238, double* %259, align 8
  br label %264

260:                                              ; preds = %242, %244
  %261 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %223
  %262 = bitcast %struct.HistogramPair* %261 to i8*
  %263 = bitcast %struct.HistogramPair* %225 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 8 %263, i64 24, i1 false)
  br label %264

264:                                              ; preds = %260, %250
  %265 = add i64 %223, 1
  br label %266

266:                                              ; preds = %222, %229, %264
  %267 = phi i64 [ %265, %264 ], [ %223, %229 ], [ %223, %222 ]
  %268 = add nuw i64 %224, 1
  %269 = icmp ult i64 %268, %220
  br i1 %269, label %222, label %270

270:                                              ; preds = %266, %218
  %271 = phi i64 [ 0, %218 ], [ %267, %266 ]
  store i64 %271, i64* %10, align 8
  %272 = icmp eq i64 %219, 0
  br i1 %272, label %284, label %273

273:                                              ; preds = %270, %273
  %274 = phi i64 [ %277, %273 ], [ 0, %270 ]
  %275 = getelementptr inbounds i32, i32* %3, i64 %274
  %276 = load i32, i32* %275, align 4
  call void @BrotliCompareAndPushToQueueLiteral(%struct.HistogramLiteral* %0, i32* %1, i32 %50, i32 %276, i64 %8, %struct.HistogramPair* %4, i64* nonnull %10)
  %277 = add nuw i64 %274, 1
  %278 = icmp eq i64 %277, %219
  br i1 %278, label %279, label %273

279:                                              ; preds = %273, %43
  %280 = phi i64 [ %7, %43 ], [ %46, %273 ]
  %281 = phi double [ 0x547D42AEA2879F2E, %43 ], [ %45, %273 ]
  %282 = phi i64 [ %44, %43 ], [ %219, %273 ]
  %283 = icmp ugt i64 %282, %280
  br i1 %283, label %43, label %284

284:                                              ; preds = %270, %279, %9, %15
  %285 = phi i64 [ %5, %15 ], [ 0, %9 ], [ 0, %270 ], [ %282, %279 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #4
  ret i64 %285
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden double @BrotliHistogramBitCostDistanceLiteral(%struct.HistogramLiteral* nocapture readonly, %struct.HistogramLiteral* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %struct.HistogramLiteral, align 8
  %4 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %57, label %7

7:                                                ; preds = %2
  %8 = bitcast %struct.HistogramLiteral* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1040, i8* nonnull %8) #4
  %9 = bitcast %struct.HistogramLiteral* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %9, i64 1040, i1 false)
  %10 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %3, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %11
  store i64 %14, i64* %12, align 8
  br label %15

15:                                               ; preds = %15, %7
  %16 = phi i64 [ 0, %7 ], [ %50, %15 ]
  %17 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %1, i64 0, i32 0, i64 %16
  %18 = bitcast i32* %17 to <4 x i32>*
  %19 = load <4 x i32>, <4 x i32>* %18, align 4
  %20 = getelementptr inbounds i32, i32* %17, i64 4
  %21 = bitcast i32* %20 to <4 x i32>*
  %22 = load <4 x i32>, <4 x i32>* %21, align 4
  %23 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %3, i64 0, i32 0, i64 %16
  %24 = bitcast i32* %23 to <4 x i32>*
  %25 = load <4 x i32>, <4 x i32>* %24, align 8
  %26 = getelementptr inbounds i32, i32* %23, i64 4
  %27 = bitcast i32* %26 to <4 x i32>*
  %28 = load <4 x i32>, <4 x i32>* %27, align 8
  %29 = add <4 x i32> %25, %19
  %30 = add <4 x i32> %28, %22
  %31 = bitcast i32* %23 to <4 x i32>*
  store <4 x i32> %29, <4 x i32>* %31, align 8
  %32 = bitcast i32* %26 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %32, align 8
  %33 = or i64 %16, 8
  %34 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %1, i64 0, i32 0, i64 %33
  %35 = bitcast i32* %34 to <4 x i32>*
  %36 = load <4 x i32>, <4 x i32>* %35, align 4
  %37 = getelementptr inbounds i32, i32* %34, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  %39 = load <4 x i32>, <4 x i32>* %38, align 4
  %40 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %3, i64 0, i32 0, i64 %33
  %41 = bitcast i32* %40 to <4 x i32>*
  %42 = load <4 x i32>, <4 x i32>* %41, align 8
  %43 = getelementptr inbounds i32, i32* %40, i64 4
  %44 = bitcast i32* %43 to <4 x i32>*
  %45 = load <4 x i32>, <4 x i32>* %44, align 8
  %46 = add <4 x i32> %42, %36
  %47 = add <4 x i32> %45, %39
  %48 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> %46, <4 x i32>* %48, align 8
  %49 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %47, <4 x i32>* %49, align 8
  %50 = add nuw nsw i64 %16, 16
  %51 = icmp eq i64 %50, 256
  br i1 %51, label %52, label %15, !llvm.loop !14

52:                                               ; preds = %15
  %53 = call double @BrotliPopulationCostLiteral(%struct.HistogramLiteral* nonnull %3) #4
  %54 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %1, i64 0, i32 2
  %55 = load double, double* %54, align 8
  %56 = fsub double %53, %55
  call void @llvm.lifetime.end.p0i8(i64 1040, i8* nonnull %8) #4
  br label %57

57:                                               ; preds = %2, %52
  %58 = phi double [ %56, %52 ], [ 0.000000e+00, %2 ]
  ret double %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @BrotliHistogramRemapLiteral(%struct.HistogramLiteral* nocapture readonly, i64, i32* nocapture readonly, i64, %struct.HistogramLiteral* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %7 = alloca %struct.HistogramLiteral, align 8
  %8 = alloca %struct.HistogramLiteral, align 8
  %9 = icmp eq i64 %1, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = bitcast %struct.HistogramLiteral* %8 to i8*
  %12 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %8, i64 0, i32 1
  %13 = icmp eq i64 %3, 0
  %14 = bitcast %struct.HistogramLiteral* %7 to i8*
  %15 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %7, i64 0, i32 1
  br label %23

16:                                               ; preds = %153, %6
  %17 = icmp eq i64 %3, 0
  br i1 %17, label %168, label %18

18:                                               ; preds = %16
  %19 = and i64 %3, 1
  %20 = icmp eq i64 %3, 1
  br i1 %20, label %158, label %21

21:                                               ; preds = %18
  %22 = sub i64 %3, %19
  br label %171

23:                                               ; preds = %153, %10
  %24 = phi i64 [ 0, %10 ], [ %156, %153 ]
  %25 = icmp eq i64 %24, 0
  %26 = add i64 %24, -1
  %27 = getelementptr inbounds i32, i32* %5, i64 %26
  %28 = select i1 %25, i32* %5, i32* %27
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %24
  %31 = zext i32 %29 to i64
  %32 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %24, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %83, label %35

35:                                               ; preds = %23
  call void @llvm.lifetime.start.p0i8(i64 1040, i8* nonnull %11) #4
  %36 = bitcast %struct.HistogramLiteral* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %36, i64 1040, i1 false) #4
  %37 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %31, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = load i64, i64* %12, align 8
  %40 = add i64 %39, %38
  store i64 %40, i64* %12, align 8
  br label %41

41:                                               ; preds = %41, %35
  %42 = phi i64 [ 0, %35 ], [ %76, %41 ]
  %43 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %31, i32 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  %45 = load <4 x i32>, <4 x i32>* %44, align 4
  %46 = getelementptr inbounds i32, i32* %43, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  %48 = load <4 x i32>, <4 x i32>* %47, align 4
  %49 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %8, i64 0, i32 0, i64 %42
  %50 = bitcast i32* %49 to <4 x i32>*
  %51 = load <4 x i32>, <4 x i32>* %50, align 8
  %52 = getelementptr inbounds i32, i32* %49, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  %54 = load <4 x i32>, <4 x i32>* %53, align 8
  %55 = add <4 x i32> %51, %45
  %56 = add <4 x i32> %54, %48
  %57 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> %55, <4 x i32>* %57, align 8
  %58 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> %56, <4 x i32>* %58, align 8
  %59 = or i64 %42, 8
  %60 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %31, i32 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  %62 = load <4 x i32>, <4 x i32>* %61, align 4
  %63 = getelementptr inbounds i32, i32* %60, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  %65 = load <4 x i32>, <4 x i32>* %64, align 4
  %66 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %8, i64 0, i32 0, i64 %59
  %67 = bitcast i32* %66 to <4 x i32>*
  %68 = load <4 x i32>, <4 x i32>* %67, align 8
  %69 = getelementptr inbounds i32, i32* %66, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  %71 = load <4 x i32>, <4 x i32>* %70, align 8
  %72 = add <4 x i32> %68, %62
  %73 = add <4 x i32> %71, %65
  %74 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %74, align 8
  %75 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> %73, <4 x i32>* %75, align 8
  %76 = add nuw nsw i64 %42, 16
  %77 = icmp eq i64 %76, 256
  br i1 %77, label %78, label %41, !llvm.loop !15

78:                                               ; preds = %41
  %79 = call double @BrotliPopulationCostLiteral(%struct.HistogramLiteral* nonnull %8) #4
  %80 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %31, i32 2
  %81 = load double, double* %80, align 8
  %82 = fsub double %79, %81
  call void @llvm.lifetime.end.p0i8(i64 1040, i8* nonnull %11) #4
  br label %83

83:                                               ; preds = %23, %78
  %84 = phi double [ %82, %78 ], [ 0.000000e+00, %23 ]
  br i1 %13, label %153, label %85

85:                                               ; preds = %83
  %86 = bitcast %struct.HistogramLiteral* %30 to i8*
  br label %87

87:                                               ; preds = %148, %85
  %88 = phi i64 [ 0, %85 ], [ %151, %148 ]
  %89 = phi double [ %84, %85 ], [ %150, %148 ]
  %90 = phi i32 [ %29, %85 ], [ %149, %148 ]
  %91 = getelementptr inbounds i32, i32* %2, i64 %88
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  %94 = load i64, i64* %32, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %143, label %96

96:                                               ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 1040, i8* nonnull %14) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %86, i64 1040, i1 false) #4
  %97 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %93, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = load i64, i64* %15, align 8
  %100 = add i64 %99, %98
  store i64 %100, i64* %15, align 8
  br label %101

101:                                              ; preds = %101, %96
  %102 = phi i64 [ 0, %96 ], [ %136, %101 ]
  %103 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %93, i32 0, i64 %102
  %104 = bitcast i32* %103 to <4 x i32>*
  %105 = load <4 x i32>, <4 x i32>* %104, align 4
  %106 = getelementptr inbounds i32, i32* %103, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4
  %109 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %7, i64 0, i32 0, i64 %102
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 8
  %112 = getelementptr inbounds i32, i32* %109, i64 4
  %113 = bitcast i32* %112 to <4 x i32>*
  %114 = load <4 x i32>, <4 x i32>* %113, align 8
  %115 = add <4 x i32> %111, %105
  %116 = add <4 x i32> %114, %108
  %117 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %115, <4 x i32>* %117, align 8
  %118 = bitcast i32* %112 to <4 x i32>*
  store <4 x i32> %116, <4 x i32>* %118, align 8
  %119 = or i64 %102, 8
  %120 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %93, i32 0, i64 %119
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4
  %123 = getelementptr inbounds i32, i32* %120, i64 4
  %124 = bitcast i32* %123 to <4 x i32>*
  %125 = load <4 x i32>, <4 x i32>* %124, align 4
  %126 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %7, i64 0, i32 0, i64 %119
  %127 = bitcast i32* %126 to <4 x i32>*
  %128 = load <4 x i32>, <4 x i32>* %127, align 8
  %129 = getelementptr inbounds i32, i32* %126, i64 4
  %130 = bitcast i32* %129 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 8
  %132 = add <4 x i32> %128, %122
  %133 = add <4 x i32> %131, %125
  %134 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %132, <4 x i32>* %134, align 8
  %135 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %135, align 8
  %136 = add nuw nsw i64 %102, 16
  %137 = icmp eq i64 %136, 256
  br i1 %137, label %138, label %101, !llvm.loop !16

138:                                              ; preds = %101
  %139 = call double @BrotliPopulationCostLiteral(%struct.HistogramLiteral* nonnull %7) #4
  %140 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %93, i32 2
  %141 = load double, double* %140, align 8
  %142 = fsub double %139, %141
  call void @llvm.lifetime.end.p0i8(i64 1040, i8* nonnull %14) #4
  br label %143

143:                                              ; preds = %87, %138
  %144 = phi double [ %142, %138 ], [ 0.000000e+00, %87 ]
  %145 = fcmp olt double %144, %89
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  %147 = load i32, i32* %91, align 4
  br label %148

148:                                              ; preds = %146, %143
  %149 = phi i32 [ %147, %146 ], [ %90, %143 ]
  %150 = phi double [ %144, %146 ], [ %89, %143 ]
  %151 = add nuw i64 %88, 1
  %152 = icmp eq i64 %151, %3
  br i1 %152, label %153, label %87

153:                                              ; preds = %148, %83
  %154 = phi i32 [ %29, %83 ], [ %149, %148 ]
  %155 = getelementptr inbounds i32, i32* %5, i64 %24
  store i32 %154, i32* %155, align 4
  %156 = add nuw i64 %24, 1
  %157 = icmp eq i64 %156, %1
  br i1 %157, label %16, label %23

158:                                              ; preds = %171, %18
  %159 = phi i64 [ 0, %18 ], [ %187, %171 ]
  %160 = icmp eq i64 %19, 0
  br i1 %160, label %168, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds i32, i32* %2, i64 %159
  %163 = load i32, i32* %162, align 4
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %164
  %166 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %164, i32 2
  %167 = bitcast %struct.HistogramLiteral* %165 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 1032, i1 false) #4
  store double 0x7FF0000000000000, double* %166, align 8
  br label %168

168:                                              ; preds = %161, %158, %16
  br i1 %9, label %265, label %169

169:                                              ; preds = %168
  %170 = getelementptr %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 0, i32 1
  br label %190

171:                                              ; preds = %171, %21
  %172 = phi i64 [ 0, %21 ], [ %187, %171 ]
  %173 = phi i64 [ %22, %21 ], [ %188, %171 ]
  %174 = getelementptr inbounds i32, i32* %2, i64 %172
  %175 = load i32, i32* %174, align 4
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %176
  %178 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %176, i32 2
  %179 = bitcast %struct.HistogramLiteral* %177 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 1032, i1 false) #4
  store double 0x7FF0000000000000, double* %178, align 8
  %180 = or i64 %172, 1
  %181 = getelementptr inbounds i32, i32* %2, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %183
  %185 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %183, i32 2
  %186 = bitcast %struct.HistogramLiteral* %184 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 1032, i1 false) #4
  store double 0x7FF0000000000000, double* %185, align 8
  %187 = add nuw i64 %172, 2
  %188 = add i64 %173, -2
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %158, label %171

190:                                              ; preds = %169, %262
  %191 = phi i64 [ %263, %262 ], [ 0, %169 ]
  %192 = getelementptr inbounds i32, i32* %5, i64 %191
  %193 = load i32, i32* %192, align 4
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %191, i32 1
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %194, i32 1
  %198 = load i64, i64* %197, align 8
  %199 = add i64 %198, %196
  store i64 %199, i64* %197, align 8
  %200 = getelementptr %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %191, i32 1
  %201 = getelementptr %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %191
  %202 = getelementptr %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %194
  %203 = mul nuw nsw i64 %194, 130
  %204 = getelementptr i64, i64* %170, i64 %203
  %205 = bitcast i64* %200 to %struct.HistogramLiteral*
  %206 = icmp ult %struct.HistogramLiteral* %202, %205
  %207 = bitcast i64* %204 to %struct.HistogramLiteral*
  %208 = icmp ult %struct.HistogramLiteral* %201, %207
  %209 = and i1 %206, %208
  br i1 %209, label %247, label %210

210:                                              ; preds = %190, %210
  %211 = phi i64 [ %245, %210 ], [ 0, %190 ]
  %212 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %191, i32 0, i64 %211
  %213 = bitcast i32* %212 to <4 x i32>*
  %214 = load <4 x i32>, <4 x i32>* %213, align 4, !alias.scope !17
  %215 = getelementptr inbounds i32, i32* %212, i64 4
  %216 = bitcast i32* %215 to <4 x i32>*
  %217 = load <4 x i32>, <4 x i32>* %216, align 4, !alias.scope !17
  %218 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %194, i32 0, i64 %211
  %219 = bitcast i32* %218 to <4 x i32>*
  %220 = load <4 x i32>, <4 x i32>* %219, align 4, !alias.scope !20, !noalias !17
  %221 = getelementptr inbounds i32, i32* %218, i64 4
  %222 = bitcast i32* %221 to <4 x i32>*
  %223 = load <4 x i32>, <4 x i32>* %222, align 4, !alias.scope !20, !noalias !17
  %224 = add <4 x i32> %220, %214
  %225 = add <4 x i32> %223, %217
  %226 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> %224, <4 x i32>* %226, align 4, !alias.scope !20, !noalias !17
  %227 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %225, <4 x i32>* %227, align 4, !alias.scope !20, !noalias !17
  %228 = or i64 %211, 8
  %229 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %191, i32 0, i64 %228
  %230 = bitcast i32* %229 to <4 x i32>*
  %231 = load <4 x i32>, <4 x i32>* %230, align 4, !alias.scope !17
  %232 = getelementptr inbounds i32, i32* %229, i64 4
  %233 = bitcast i32* %232 to <4 x i32>*
  %234 = load <4 x i32>, <4 x i32>* %233, align 4, !alias.scope !17
  %235 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %194, i32 0, i64 %228
  %236 = bitcast i32* %235 to <4 x i32>*
  %237 = load <4 x i32>, <4 x i32>* %236, align 4, !alias.scope !20, !noalias !17
  %238 = getelementptr inbounds i32, i32* %235, i64 4
  %239 = bitcast i32* %238 to <4 x i32>*
  %240 = load <4 x i32>, <4 x i32>* %239, align 4, !alias.scope !20, !noalias !17
  %241 = add <4 x i32> %237, %231
  %242 = add <4 x i32> %240, %234
  %243 = bitcast i32* %235 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %243, align 4, !alias.scope !20, !noalias !17
  %244 = bitcast i32* %238 to <4 x i32>*
  store <4 x i32> %242, <4 x i32>* %244, align 4, !alias.scope !20, !noalias !17
  %245 = add nuw nsw i64 %211, 16
  %246 = icmp eq i64 %245, 256
  br i1 %246, label %262, label %210, !llvm.loop !22

247:                                              ; preds = %190, %247
  %248 = phi i64 [ %260, %247 ], [ 0, %190 ]
  %249 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %191, i32 0, i64 %248
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %194, i32 0, i64 %248
  %252 = load i32, i32* %251, align 4
  %253 = add i32 %252, %250
  store i32 %253, i32* %251, align 4
  %254 = or i64 %248, 1
  %255 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %0, i64 %191, i32 0, i64 %254
  %256 = load i32, i32* %255, align 4
  %257 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %194, i32 0, i64 %254
  %258 = load i32, i32* %257, align 4
  %259 = add i32 %258, %256
  store i32 %259, i32* %257, align 4
  %260 = add nuw nsw i64 %248, 2
  %261 = icmp eq i64 %260, 256
  br i1 %261, label %262, label %247, !llvm.loop !23

262:                                              ; preds = %210, %247
  %263 = add nuw i64 %191, 1
  %264 = icmp eq i64 %263, %1
  br i1 %264, label %265, label %190

265:                                              ; preds = %262, %168
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @BrotliHistogramReindexLiteral(%struct.MemoryManager*, %struct.HistogramLiteral* nocapture, i32* nocapture, i64) local_unnamed_addr #0 {
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %86, label %6

6:                                                ; preds = %4
  %7 = shl i64 %3, 2
  %8 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %7) #4
  %9 = bitcast i8* %8 to i32*
  %10 = shl nuw i64 %3, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 -1, i64 %10, i1 false)
  %11 = and i64 %3, 1
  %12 = icmp eq i64 %3, 1
  br i1 %12, label %36, label %13

13:                                               ; preds = %6
  %14 = sub i64 %3, %11
  br label %15

15:                                               ; preds = %125, %13
  %16 = phi i64 [ 0, %13 ], [ %127, %125 ]
  %17 = phi i32 [ 0, %13 ], [ %126, %125 ]
  %18 = phi i64 [ %14, %13 ], [ %128, %125 ]
  %19 = getelementptr inbounds i32, i32* %2, i64 %16
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %9, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %25, label %27

25:                                               ; preds = %15
  store i32 %17, i32* %22, align 4
  %26 = add i32 %17, 1
  br label %27

27:                                               ; preds = %15, %25
  %28 = phi i32 [ %26, %25 ], [ %17, %15 ]
  %29 = or i64 %16, 1
  %30 = getelementptr inbounds i32, i32* %2, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i32, i32* %9, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %123, label %125

36:                                               ; preds = %125, %6
  %37 = phi i32 [ undef, %6 ], [ %126, %125 ]
  %38 = phi i64 [ 0, %6 ], [ %127, %125 ]
  %39 = phi i32 [ 0, %6 ], [ %126, %125 ]
  %40 = icmp eq i64 %11, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds i32, i32* %2, i64 %38
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %9, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  store i32 %39, i32* %45, align 4
  %49 = add i32 %39, 1
  br label %50

50:                                               ; preds = %48, %41, %36
  %51 = phi i32 [ %37, %36 ], [ %49, %48 ], [ %39, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = zext i32 %51 to i64
  %55 = mul nuw nsw i64 %54, 1040
  %56 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %55) #4
  %57 = bitcast i8* %56 to %struct.HistogramLiteral*
  br label %58

58:                                               ; preds = %50, %53
  %59 = phi i8* [ %56, %53 ], [ null, %50 ]
  %60 = phi %struct.HistogramLiteral* [ %57, %53 ], [ null, %50 ]
  br i1 %5, label %86, label %61

61:                                               ; preds = %58, %81
  %62 = phi i64 [ %84, %81 ], [ 0, %58 ]
  %63 = phi i32 [ %83, %81 ], [ 0, %58 ]
  %64 = getelementptr inbounds i32, i32* %2, i64 %62
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i32, i32* %9, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %63
  br i1 %69, label %70, label %81

70:                                               ; preds = %61
  %71 = zext i32 %63 to i64
  %72 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %60, i64 %71
  %73 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %1, i64 %66
  %74 = bitcast %struct.HistogramLiteral* %72 to i8*
  %75 = bitcast %struct.HistogramLiteral* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 1040, i1 false)
  %76 = add i32 %63, 1
  %77 = load i32, i32* %64, align 4
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i32, i32* %9, i64 %78
  %80 = load i32, i32* %79, align 4
  br label %81

81:                                               ; preds = %70, %61
  %82 = phi i32 [ %80, %70 ], [ %68, %61 ]
  %83 = phi i32 [ %76, %70 ], [ %63, %61 ]
  store i32 %82, i32* %64, align 4
  %84 = add nuw i64 %62, 1
  %85 = icmp eq i64 %84, %3
  br i1 %85, label %89, label %61

86:                                               ; preds = %58, %4
  %87 = phi i8* [ %59, %58 ], [ null, %4 ]
  %88 = phi i8* [ %8, %58 ], [ null, %4 ]
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %88) #4
  br label %120

89:                                               ; preds = %81
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %8) #4
  %90 = zext i32 %83 to i64
  %91 = icmp eq i32 %83, 0
  br i1 %91, label %120, label %92

92:                                               ; preds = %89
  %93 = and i64 %90, 1
  %94 = icmp eq i32 %83, 1
  br i1 %94, label %112, label %95

95:                                               ; preds = %92
  %96 = sub nsw i64 %90, %93
  br label %97

97:                                               ; preds = %97, %95
  %98 = phi i64 [ 0, %95 ], [ %109, %97 ]
  %99 = phi i64 [ %96, %95 ], [ %110, %97 ]
  %100 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %1, i64 %98
  %101 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %60, i64 %98
  %102 = bitcast %struct.HistogramLiteral* %100 to i8*
  %103 = bitcast %struct.HistogramLiteral* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 1040, i1 false)
  %104 = or i64 %98, 1
  %105 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %1, i64 %104
  %106 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %60, i64 %104
  %107 = bitcast %struct.HistogramLiteral* %105 to i8*
  %108 = bitcast %struct.HistogramLiteral* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 1040, i1 false)
  %109 = add nuw nsw i64 %98, 2
  %110 = add i64 %99, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %97

112:                                              ; preds = %97, %92
  %113 = phi i64 [ 0, %92 ], [ %109, %97 ]
  %114 = icmp eq i64 %93, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %1, i64 %113
  %117 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %60, i64 %113
  %118 = bitcast %struct.HistogramLiteral* %116 to i8*
  %119 = bitcast %struct.HistogramLiteral* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 1040, i1 false)
  br label %120

120:                                              ; preds = %115, %112, %86, %89
  %121 = phi i64 [ 0, %86 ], [ 0, %89 ], [ %90, %112 ], [ %90, %115 ]
  %122 = phi i8* [ %87, %86 ], [ %59, %89 ], [ %59, %112 ], [ %59, %115 ]
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %122) #4
  ret i64 %121

123:                                              ; preds = %27
  store i32 %28, i32* %33, align 4
  %124 = add i32 %28, 1
  br label %125

125:                                              ; preds = %123, %27
  %126 = phi i32 [ %124, %123 ], [ %28, %27 ]
  %127 = add nuw i64 %16, 2
  %128 = add i64 %18, -2
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %36, label %15
}

declare hidden i8* @BrotliAllocate(%struct.MemoryManager*, i64) local_unnamed_addr #2

declare hidden void @BrotliFree(%struct.MemoryManager*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @BrotliClusterHistogramsLiteral(%struct.MemoryManager*, %struct.HistogramLiteral*, i64, i64, %struct.HistogramLiteral* nocapture, i64* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %8 = icmp eq i64 %2, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %7
  %10 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 49176) #4
  %11 = bitcast i8* %10 to %struct.HistogramPair*
  br label %208

12:                                               ; preds = %7
  %13 = shl i64 %2, 2
  %14 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %13) #4
  %15 = bitcast i8* %14 to i32*
  %16 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %13) #4
  %17 = bitcast i8* %16 to i32*
  %18 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 49176) #4
  %19 = bitcast i8* %18 to %struct.HistogramPair*
  %20 = icmp ult i64 %2, 8
  br i1 %20, label %21, label %23

21:                                               ; preds = %90, %12
  %22 = phi i64 [ 0, %12 ], [ %24, %90 ]
  br label %93

23:                                               ; preds = %12
  %24 = and i64 %2, -8
  %25 = add i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds i32, i32* %15, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 4
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 4
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds i32, i32* %15, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 4
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 4
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds i32, i32* %15, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 4
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 4
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds i32, i32* %15, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 4
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 4
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds i32, i32* %15, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 4
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 4
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds i32, i32* %15, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 4
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 4
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds i32, i32* %15, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 4
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 4
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds i32, i32* %15, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 4
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 4
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !24

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds i32, i32* %15, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 4
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 4
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !25

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %2
  br i1 %91, label %92, label %21

92:                                               ; preds = %93, %90
  br i1 %8, label %208, label %99

93:                                               ; preds = %21, %93
  %94 = phi i64 [ %96, %93 ], [ %22, %21 ]
  %95 = getelementptr inbounds i32, i32* %15, i64 %94
  store i32 1, i32* %95, align 4
  %96 = add nuw i64 %94, 1
  %97 = icmp eq i64 %96, %2
  br i1 %97, label %92, label %93, !llvm.loop !27

98:                                               ; preds = %99
  br i1 %8, label %208, label %111

99:                                               ; preds = %92, %99
  %100 = phi i64 [ %109, %99 ], [ 0, %92 ]
  %101 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %100
  %102 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %1, i64 %100
  %103 = bitcast %struct.HistogramLiteral* %101 to i8*
  %104 = bitcast %struct.HistogramLiteral* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 1040, i1 false)
  %105 = tail call double @BrotliPopulationCostLiteral(%struct.HistogramLiteral* %102) #4
  %106 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %4, i64 %100, i32 2
  store double %105, double* %106, align 8
  %107 = trunc i64 %100 to i32
  %108 = getelementptr inbounds i32, i32* %6, i64 %100
  store i32 %107, i32* %108, align 4
  %109 = add nuw i64 %100, 1
  %110 = icmp eq i64 %109, %2
  br i1 %110, label %98, label %99

111:                                              ; preds = %98, %200
  %112 = phi i64 [ %207, %200 ], [ 0, %98 ]
  %113 = phi i64 [ %205, %200 ], [ 0, %98 ]
  %114 = phi i64 [ %204, %200 ], [ 0, %98 ]
  %115 = mul i64 %112, -64
  %116 = add i64 %115, %2
  %117 = icmp ult i64 %116, 64
  %118 = select i1 %117, i64 %116, i64 64
  %119 = and i64 %118, 120
  %120 = add nsw i64 %119, -8
  %121 = lshr exact i64 %120, 3
  %122 = add nuw nsw i64 %121, 1
  %123 = mul i64 %112, -64
  %124 = add i64 %123, %2
  %125 = icmp ult i64 %124, 64
  %126 = select i1 %125, i64 %124, i64 64
  %127 = sub i64 %2, %113
  %128 = icmp ult i64 %127, 64
  %129 = select i1 %128, i64 %127, i64 64
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %200, label %131

131:                                              ; preds = %111
  %132 = icmp ult i64 %126, 8
  br i1 %132, label %190, label %133

133:                                              ; preds = %131
  %134 = and i64 %126, 120
  %135 = insertelement <4 x i64> undef, i64 %113, i32 0
  %136 = shufflevector <4 x i64> %135, <4 x i64> undef, <4 x i32> zeroinitializer
  %137 = insertelement <4 x i64> undef, i64 %113, i32 0
  %138 = shufflevector <4 x i64> %137, <4 x i64> undef, <4 x i32> zeroinitializer
  %139 = and i64 %122, 1
  %140 = icmp eq i64 %120, 0
  br i1 %140, label %173, label %141

141:                                              ; preds = %133
  %142 = sub nuw nsw i64 %122, %139
  br label %143

143:                                              ; preds = %143, %141
  %144 = phi i64 [ 0, %141 ], [ %169, %143 ]
  %145 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %141 ], [ %170, %143 ]
  %146 = phi i64 [ %142, %141 ], [ %171, %143 ]
  %147 = add <4 x i64> %145, <i64 4, i64 4, i64 4, i64 4>
  %148 = add <4 x i64> %145, %136
  %149 = add <4 x i64> %147, %138
  %150 = trunc <4 x i64> %148 to <4 x i32>
  %151 = trunc <4 x i64> %149 to <4 x i32>
  %152 = add i64 %144, %114
  %153 = getelementptr inbounds i32, i32* %17, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %150, <4 x i32>* %154, align 4
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> %151, <4 x i32>* %156, align 4
  %157 = or i64 %144, 8
  %158 = add <4 x i64> %145, <i64 8, i64 8, i64 8, i64 8>
  %159 = add <4 x i64> %145, <i64 12, i64 12, i64 12, i64 12>
  %160 = add <4 x i64> %158, %136
  %161 = add <4 x i64> %159, %138
  %162 = trunc <4 x i64> %160 to <4 x i32>
  %163 = trunc <4 x i64> %161 to <4 x i32>
  %164 = add i64 %157, %114
  %165 = getelementptr inbounds i32, i32* %17, i64 %164
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> %162, <4 x i32>* %166, align 4
  %167 = getelementptr inbounds i32, i32* %165, i64 4
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> %163, <4 x i32>* %168, align 4
  %169 = add i64 %144, 16
  %170 = add <4 x i64> %145, <i64 16, i64 16, i64 16, i64 16>
  %171 = add i64 %146, -2
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %143, !llvm.loop !28

173:                                              ; preds = %143, %133
  %174 = phi i64 [ 0, %133 ], [ %169, %143 ]
  %175 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %133 ], [ %170, %143 ]
  %176 = icmp eq i64 %139, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %173
  %178 = add <4 x i64> %175, <i64 4, i64 4, i64 4, i64 4>
  %179 = add <4 x i64> %175, %136
  %180 = add <4 x i64> %178, %138
  %181 = trunc <4 x i64> %179 to <4 x i32>
  %182 = trunc <4 x i64> %180 to <4 x i32>
  %183 = add i64 %174, %114
  %184 = getelementptr inbounds i32, i32* %17, i64 %183
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> %181, <4 x i32>* %185, align 4
  %186 = getelementptr inbounds i32, i32* %184, i64 4
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> %182, <4 x i32>* %187, align 4
  br label %188

188:                                              ; preds = %173, %177
  %189 = icmp eq i64 %126, %134
  br i1 %189, label %200, label %190

190:                                              ; preds = %188, %131
  %191 = phi i64 [ 0, %131 ], [ %134, %188 ]
  br label %192

192:                                              ; preds = %190, %192
  %193 = phi i64 [ %198, %192 ], [ %191, %190 ]
  %194 = add i64 %193, %113
  %195 = trunc i64 %194 to i32
  %196 = add i64 %193, %114
  %197 = getelementptr inbounds i32, i32* %17, i64 %196
  store i32 %195, i32* %197, align 4
  %198 = add nuw i64 %193, 1
  %199 = icmp ult i64 %198, %129
  br i1 %199, label %192, label %200, !llvm.loop !29

200:                                              ; preds = %192, %188, %111
  %201 = getelementptr inbounds i32, i32* %6, i64 %113
  %202 = getelementptr inbounds i32, i32* %17, i64 %114
  %203 = tail call i64 @BrotliHistogramCombineLiteral(%struct.HistogramLiteral* %4, i32* %15, i32* %201, i32* %202, %struct.HistogramPair* %19, i64 %129, i64 %129, i64 %3, i64 2048)
  %204 = add i64 %203, %114
  %205 = add i64 %113, 64
  %206 = icmp ult i64 %205, %2
  %207 = add i64 %112, 1
  br i1 %206, label %111, label %208

208:                                              ; preds = %200, %92, %9, %98
  %209 = phi %struct.HistogramPair* [ %19, %98 ], [ %19, %92 ], [ %11, %9 ], [ %19, %200 ]
  %210 = phi i8* [ %18, %98 ], [ %18, %92 ], [ %10, %9 ], [ %18, %200 ]
  %211 = phi i8* [ %16, %98 ], [ %16, %92 ], [ null, %9 ], [ %16, %200 ]
  %212 = phi i8* [ %14, %98 ], [ %14, %92 ], [ null, %9 ], [ %14, %200 ]
  %213 = phi i32* [ %17, %98 ], [ %17, %92 ], [ null, %9 ], [ %17, %200 ]
  %214 = phi i32* [ %15, %98 ], [ %15, %92 ], [ null, %9 ], [ %15, %200 ]
  %215 = phi i64 [ 0, %98 ], [ 0, %92 ], [ 0, %9 ], [ %204, %200 ]
  %216 = shl i64 %215, 6
  %217 = lshr i64 %215, 1
  %218 = mul i64 %217, %215
  %219 = icmp ult i64 %216, %218
  %220 = select i1 %219, i64 %216, i64 %218
  %221 = add i64 %220, 1
  %222 = icmp ugt i64 %221, 2048
  br i1 %222, label %223, label %236

223:                                              ; preds = %208, %223
  %224 = phi i64 [ %226, %223 ], [ 2048, %208 ]
  %225 = icmp ult i64 %224, %221
  %226 = shl i64 %224, 1
  br i1 %225, label %223, label %227

227:                                              ; preds = %223
  %228 = icmp eq i64 %224, 0
  br i1 %228, label %233, label %229

229:                                              ; preds = %227
  %230 = mul i64 %224, 24
  %231 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %230) #4
  %232 = bitcast i8* %231 to %struct.HistogramPair*
  br label %233

233:                                              ; preds = %229, %227
  %234 = phi i8* [ %231, %229 ], [ null, %227 ]
  %235 = phi %struct.HistogramPair* [ %232, %229 ], [ null, %227 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %234, i8* align 8 %210, i64 49152, i1 false)
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %210) #4
  br label %236

236:                                              ; preds = %233, %208
  %237 = phi i8* [ %234, %233 ], [ %210, %208 ]
  %238 = phi %struct.HistogramPair* [ %235, %233 ], [ %209, %208 ]
  %239 = tail call i64 @BrotliHistogramCombineLiteral(%struct.HistogramLiteral* %4, i32* %214, i32* %6, i32* %213, %struct.HistogramPair* %238, i64 %215, i64 %2, i64 %3, i64 %220)
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %237) #4
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %212) #4
  tail call void @BrotliHistogramRemapLiteral(%struct.HistogramLiteral* %1, i64 %2, i32* %213, i64 %239, %struct.HistogramLiteral* %4, i32* %6)
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %211) #4
  %240 = tail call i64 @BrotliHistogramReindexLiteral(%struct.MemoryManager* %0, %struct.HistogramLiteral* %4, i32* %6, i64 %2)
  store i64 %240, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @BrotliCompareAndPushToQueueCommand(%struct.HistogramCommand* nocapture readonly, i32* nocapture readonly, i32, i32, i64, %struct.HistogramPair* nocapture, i64* nocapture) local_unnamed_addr #0 {
  %8 = alloca %struct.HistogramCommand, align 8
  %9 = icmp eq i32 %2, %3
  br i1 %9, label %166, label %10

10:                                               ; preds = %7
  %11 = icmp ult i32 %3, %2
  %12 = select i1 %11, i32 %2, i32 %3
  %13 = select i1 %11, i32 %3, i32 %2
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %1, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = zext i32 %12 to i64
  %19 = getelementptr inbounds i32, i32* %1, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = add nuw nsw i64 %21, %17
  %23 = uitofp i32 %16 to double
  %24 = icmp ult i32 %16, 256
  br i1 %24, label %25, label %28

25:                                               ; preds = %10
  %26 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %17
  %27 = load double, double* %26, align 8
  br label %30

28:                                               ; preds = %10
  %29 = tail call double @log2(double %23) #4
  br label %30

30:                                               ; preds = %28, %25
  %31 = phi double [ %27, %25 ], [ %29, %28 ]
  %32 = fmul double %31, %23
  %33 = uitofp i32 %20 to double
  %34 = icmp ult i32 %20, 256
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %21
  %37 = load double, double* %36, align 8
  br label %40

38:                                               ; preds = %30
  %39 = tail call double @log2(double %33) #4
  br label %40

40:                                               ; preds = %38, %35
  %41 = phi double [ %37, %35 ], [ %39, %38 ]
  %42 = fmul double %41, %33
  %43 = fadd double %32, %42
  %44 = uitofp i64 %22 to double
  %45 = icmp ult i64 %22, 256
  br i1 %45, label %46, label %49

46:                                               ; preds = %40
  %47 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %22
  %48 = load double, double* %47, align 8
  br label %51

49:                                               ; preds = %40
  %50 = tail call double @log2(double %44) #4
  br label %51

51:                                               ; preds = %46, %49
  %52 = phi double [ %48, %46 ], [ %50, %49 ]
  %53 = fmul double %52, %44
  %54 = fsub double %43, %53
  %55 = fmul double %54, 5.000000e-01
  %56 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %14
  %57 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %14, i32 2
  %58 = load double, double* %57, align 8
  %59 = fsub double %55, %58
  %60 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %18, i32 2
  %61 = load double, double* %60, align 8
  %62 = fsub double %59, %61
  %63 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %14, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %126, label %66

66:                                               ; preds = %51
  %67 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %18, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %126, label %70

70:                                               ; preds = %66
  %71 = load i64, i64* %6, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 3
  %75 = load double, double* %74, align 8
  %76 = fcmp olt double %75, 0.000000e+00
  %77 = select i1 %76, double 0.000000e+00, double %75
  br label %78

78:                                               ; preds = %70, %73
  %79 = phi double [ %77, %73 ], [ 0x547D42AEA2879F2E, %70 ]
  %80 = bitcast %struct.HistogramCommand* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2832, i8* nonnull %80) #4
  %81 = bitcast %struct.HistogramCommand* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %80, i8* align 8 %81, i64 2832, i1 false)
  %82 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %8, i64 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, %68
  store i64 %84, i64* %82, align 8
  br label %85

85:                                               ; preds = %85, %78
  %86 = phi i64 [ 0, %78 ], [ %120, %85 ]
  %87 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %18, i32 0, i64 %86
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4
  %90 = getelementptr inbounds i32, i32* %87, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  %92 = load <4 x i32>, <4 x i32>* %91, align 4
  %93 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %8, i64 0, i32 0, i64 %86
  %94 = bitcast i32* %93 to <4 x i32>*
  %95 = load <4 x i32>, <4 x i32>* %94, align 8
  %96 = getelementptr inbounds i32, i32* %93, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  %98 = load <4 x i32>, <4 x i32>* %97, align 8
  %99 = add <4 x i32> %95, %89
  %100 = add <4 x i32> %98, %92
  %101 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %101, align 8
  %102 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %102, align 8
  %103 = or i64 %86, 8
  %104 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %18, i32 0, i64 %103
  %105 = bitcast i32* %104 to <4 x i32>*
  %106 = load <4 x i32>, <4 x i32>* %105, align 4
  %107 = getelementptr inbounds i32, i32* %104, i64 4
  %108 = bitcast i32* %107 to <4 x i32>*
  %109 = load <4 x i32>, <4 x i32>* %108, align 4
  %110 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %8, i64 0, i32 0, i64 %103
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 8
  %113 = getelementptr inbounds i32, i32* %110, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 8
  %116 = add <4 x i32> %112, %106
  %117 = add <4 x i32> %115, %109
  %118 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> %116, <4 x i32>* %118, align 8
  %119 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %117, <4 x i32>* %119, align 8
  %120 = add nuw nsw i64 %86, 16
  %121 = icmp eq i64 %120, 704
  br i1 %121, label %122, label %85, !llvm.loop !30

122:                                              ; preds = %85
  %123 = call double @BrotliPopulationCostCommand(%struct.HistogramCommand* nonnull %8) #4
  %124 = fsub double %79, %62
  %125 = fcmp olt double %123, %124
  call void @llvm.lifetime.end.p0i8(i64 2832, i8* nonnull %80) #4
  br i1 %125, label %126, label %166

126:                                              ; preds = %122, %66, %51
  %127 = phi double [ %61, %51 ], [ %58, %66 ], [ %123, %122 ]
  %128 = fadd double %62, %127
  %129 = load i64, i64* %6, align 8
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %157, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 3
  %133 = load double, double* %132, align 8
  %134 = fcmp une double %133, %128
  br i1 %134, label %135, label %137

135:                                              ; preds = %131
  %136 = fcmp ogt double %133, %128
  br i1 %136, label %145, label %157

137:                                              ; preds = %131
  %138 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 0
  %141 = load i32, i32* %140, align 8
  %142 = sub i32 %139, %141
  %143 = sub i32 %12, %13
  %144 = icmp ugt i32 %142, %143
  br i1 %144, label %145, label %157

145:                                              ; preds = %135, %137
  %146 = icmp ult i64 %129, %4
  br i1 %146, label %147, label %153

147:                                              ; preds = %145
  %148 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 %129
  %149 = bitcast %struct.HistogramPair* %148 to i8*
  %150 = bitcast %struct.HistogramPair* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %150, i64 24, i1 false)
  %151 = load i64, i64* %6, align 8
  %152 = add i64 %151, 1
  store i64 %152, i64* %6, align 8
  br label %153

153:                                              ; preds = %147, %145
  %154 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 0
  store i32 %13, i32* %154, align 8
  %155 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 1
  store i32 %12, i32* %155, align 4
  %156 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 2
  store double %127, double* %156, align 8
  store double %128, double* %132, align 8
  br label %166

157:                                              ; preds = %135, %137, %126
  %158 = icmp ult i64 %129, %4
  br i1 %158, label %159, label %166

159:                                              ; preds = %157
  %160 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 %129, i32 0
  store i32 %13, i32* %160, align 8
  %161 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 %129, i32 1
  store i32 %12, i32* %161, align 4
  %162 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 %129, i32 2
  store double %127, double* %162, align 8
  %163 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 %129, i32 3
  store double %128, double* %163, align 8
  %164 = load i64, i64* %6, align 8
  %165 = add i64 %164, 1
  store i64 %165, i64* %6, align 8
  br label %166

166:                                              ; preds = %122, %157, %159, %153, %7
  ret void
}

declare hidden double @BrotliPopulationCostCommand(%struct.HistogramCommand*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @BrotliHistogramCombineCommand(%struct.HistogramCommand* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, %struct.HistogramPair*, i64, i64, i64, i64) local_unnamed_addr #0 {
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #4
  store i64 0, i64* %10, align 8
  %12 = icmp eq i64 %5, 0
  br i1 %12, label %284, label %30

13:                                               ; preds = %36, %30
  %14 = icmp eq i64 %32, %5
  br i1 %14, label %15, label %30

15:                                               ; preds = %13
  %16 = icmp ugt i64 %5, 1
  br i1 %16, label %17, label %284

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 0, i32 3
  %19 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 0, i32 0
  %20 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 0, i32 1
  %21 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 0, i32 2
  %22 = bitcast double* %21 to i64*
  %23 = icmp eq i64 %6, 0
  %24 = bitcast %struct.HistogramPair* %4 to i8*
  %25 = getelementptr %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 0, i32 1
  %26 = getelementptr %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 0, i32 1
  %27 = icmp ult i64 %6, 8
  %28 = and i64 %6, -8
  %29 = icmp eq i64 %28, %6
  br label %43

30:                                               ; preds = %9, %13
  %31 = phi i64 [ %32, %13 ], [ 0, %9 ]
  %32 = add nuw i64 %31, 1
  %33 = icmp ult i64 %32, %5
  br i1 %33, label %34, label %13

34:                                               ; preds = %30
  %35 = getelementptr inbounds i32, i32* %3, i64 %31
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ %32, %34 ], [ %41, %36 ]
  %38 = load i32, i32* %35, align 4
  %39 = getelementptr inbounds i32, i32* %3, i64 %37
  %40 = load i32, i32* %39, align 4
  call void @BrotliCompareAndPushToQueueCommand(%struct.HistogramCommand* %0, i32* %1, i32 %38, i32 %40, i64 %8, %struct.HistogramPair* %4, i64* nonnull %10)
  %41 = add i64 %37, 1
  %42 = icmp eq i64 %41, %5
  br i1 %42, label %13, label %36

43:                                               ; preds = %17, %279
  %44 = phi i64 [ %5, %17 ], [ %282, %279 ]
  %45 = phi double [ 0.000000e+00, %17 ], [ %281, %279 ]
  %46 = phi i64 [ 1, %17 ], [ %280, %279 ]
  %47 = load double, double* %18, align 8
  %48 = fcmp ult double %47, %45
  br i1 %48, label %49, label %279

49:                                               ; preds = %43
  %50 = load i32, i32* %19, align 8
  %51 = load i32, i32* %20, align 4
  %52 = zext i32 %50 to i64
  %53 = zext i32 %51 to i64
  %54 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %53, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %52, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %57, %55
  store i64 %58, i64* %56, align 8
  %59 = getelementptr %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %52
  %60 = mul nuw nsw i64 %52, 354
  %61 = getelementptr i64, i64* %25, i64 %60
  %62 = getelementptr %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %53
  %63 = mul nuw nsw i64 %53, 354
  %64 = getelementptr i64, i64* %26, i64 %63
  %65 = bitcast i64* %64 to %struct.HistogramCommand*
  %66 = icmp ult %struct.HistogramCommand* %59, %65
  %67 = bitcast i64* %61 to %struct.HistogramCommand*
  %68 = icmp ult %struct.HistogramCommand* %62, %67
  %69 = and i1 %66, %68
  br i1 %69, label %107, label %70

70:                                               ; preds = %49, %70
  %71 = phi i64 [ %105, %70 ], [ 0, %49 ]
  %72 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %53, i32 0, i64 %71
  %73 = bitcast i32* %72 to <4 x i32>*
  %74 = load <4 x i32>, <4 x i32>* %73, align 4, !alias.scope !31
  %75 = getelementptr inbounds i32, i32* %72, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  %77 = load <4 x i32>, <4 x i32>* %76, align 4, !alias.scope !31
  %78 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %52, i32 0, i64 %71
  %79 = bitcast i32* %78 to <4 x i32>*
  %80 = load <4 x i32>, <4 x i32>* %79, align 4, !alias.scope !34, !noalias !31
  %81 = getelementptr inbounds i32, i32* %78, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  %83 = load <4 x i32>, <4 x i32>* %82, align 4, !alias.scope !34, !noalias !31
  %84 = add <4 x i32> %80, %74
  %85 = add <4 x i32> %83, %77
  %86 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %84, <4 x i32>* %86, align 4, !alias.scope !34, !noalias !31
  %87 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> %85, <4 x i32>* %87, align 4, !alias.scope !34, !noalias !31
  %88 = or i64 %71, 8
  %89 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %53, i32 0, i64 %88
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4, !alias.scope !31
  %92 = getelementptr inbounds i32, i32* %89, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4, !alias.scope !31
  %95 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %52, i32 0, i64 %88
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !34, !noalias !31
  %98 = getelementptr inbounds i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !34, !noalias !31
  %101 = add <4 x i32> %97, %91
  %102 = add <4 x i32> %100, %94
  %103 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %103, align 4, !alias.scope !34, !noalias !31
  %104 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %104, align 4, !alias.scope !34, !noalias !31
  %105 = add nuw nsw i64 %71, 16
  %106 = icmp eq i64 %105, 704
  br i1 %106, label %122, label %70, !llvm.loop !36

107:                                              ; preds = %49, %107
  %108 = phi i64 [ %120, %107 ], [ 0, %49 ]
  %109 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %53, i32 0, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %52, i32 0, i64 %108
  %112 = load i32, i32* %111, align 4
  %113 = add i32 %112, %110
  store i32 %113, i32* %111, align 4
  %114 = or i64 %108, 1
  %115 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %53, i32 0, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %52, i32 0, i64 %114
  %118 = load i32, i32* %117, align 4
  %119 = add i32 %118, %116
  store i32 %119, i32* %117, align 4
  %120 = add nuw nsw i64 %108, 2
  %121 = icmp eq i64 %120, 704
  br i1 %121, label %122, label %107, !llvm.loop !37

122:                                              ; preds = %70, %107
  %123 = load i64, i64* %22, align 8
  %124 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %52, i32 2
  %125 = bitcast double* %124 to i64*
  store i64 %123, i64* %125, align 8
  %126 = getelementptr inbounds i32, i32* %1, i64 %53
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds i32, i32* %1, i64 %52
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, %127
  store i32 %130, i32* %128, align 4
  br i1 %23, label %190, label %131

131:                                              ; preds = %122
  br i1 %27, label %132, label %134

132:                                              ; preds = %189, %131
  %133 = phi i64 [ 0, %131 ], [ %28, %189 ]
  br label %192

134:                                              ; preds = %131
  %135 = insertelement <4 x i32> undef, i32 %51, i32 0
  %136 = shufflevector <4 x i32> %135, <4 x i32> undef, <4 x i32> zeroinitializer
  %137 = insertelement <4 x i32> undef, i32 %51, i32 0
  %138 = shufflevector <4 x i32> %137, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %139

139:                                              ; preds = %186, %134
  %140 = phi i64 [ 0, %134 ], [ %187, %186 ]
  %141 = getelementptr inbounds i32, i32* %2, i64 %140
  %142 = bitcast i32* %141 to <4 x i32>*
  %143 = load <4 x i32>, <4 x i32>* %142, align 4
  %144 = getelementptr inbounds i32, i32* %141, i64 4
  %145 = bitcast i32* %144 to <4 x i32>*
  %146 = load <4 x i32>, <4 x i32>* %145, align 4
  %147 = icmp eq <4 x i32> %143, %136
  %148 = icmp eq <4 x i32> %146, %138
  %149 = extractelement <4 x i1> %147, i32 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %139
  store i32 %50, i32* %141, align 4
  br label %151

151:                                              ; preds = %150, %139
  %152 = extractelement <4 x i1> %147, i32 1
  br i1 %152, label %153, label %156

153:                                              ; preds = %151
  %154 = or i64 %140, 1
  %155 = getelementptr inbounds i32, i32* %2, i64 %154
  store i32 %50, i32* %155, align 4
  br label %156

156:                                              ; preds = %153, %151
  %157 = extractelement <4 x i1> %147, i32 2
  br i1 %157, label %158, label %161

158:                                              ; preds = %156
  %159 = or i64 %140, 2
  %160 = getelementptr inbounds i32, i32* %2, i64 %159
  store i32 %50, i32* %160, align 4
  br label %161

161:                                              ; preds = %158, %156
  %162 = extractelement <4 x i1> %147, i32 3
  br i1 %162, label %163, label %166

163:                                              ; preds = %161
  %164 = or i64 %140, 3
  %165 = getelementptr inbounds i32, i32* %2, i64 %164
  store i32 %50, i32* %165, align 4
  br label %166

166:                                              ; preds = %163, %161
  %167 = extractelement <4 x i1> %148, i32 0
  br i1 %167, label %168, label %171

168:                                              ; preds = %166
  %169 = or i64 %140, 4
  %170 = getelementptr inbounds i32, i32* %2, i64 %169
  store i32 %50, i32* %170, align 4
  br label %171

171:                                              ; preds = %168, %166
  %172 = extractelement <4 x i1> %148, i32 1
  br i1 %172, label %173, label %176

173:                                              ; preds = %171
  %174 = or i64 %140, 5
  %175 = getelementptr inbounds i32, i32* %2, i64 %174
  store i32 %50, i32* %175, align 4
  br label %176

176:                                              ; preds = %173, %171
  %177 = extractelement <4 x i1> %148, i32 2
  br i1 %177, label %178, label %181

178:                                              ; preds = %176
  %179 = or i64 %140, 6
  %180 = getelementptr inbounds i32, i32* %2, i64 %179
  store i32 %50, i32* %180, align 4
  br label %181

181:                                              ; preds = %178, %176
  %182 = extractelement <4 x i1> %148, i32 3
  br i1 %182, label %183, label %186

183:                                              ; preds = %181
  %184 = or i64 %140, 7
  %185 = getelementptr inbounds i32, i32* %2, i64 %184
  store i32 %50, i32* %185, align 4
  br label %186

186:                                              ; preds = %183, %181
  %187 = add i64 %140, 8
  %188 = icmp eq i64 %187, %28
  br i1 %188, label %189, label %139, !llvm.loop !38

189:                                              ; preds = %186
  br i1 %29, label %190, label %132

190:                                              ; preds = %198, %189, %122
  %191 = icmp eq i64 %44, 0
  br i1 %191, label %218, label %201

192:                                              ; preds = %132, %198
  %193 = phi i64 [ %199, %198 ], [ %133, %132 ]
  %194 = getelementptr inbounds i32, i32* %2, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = icmp eq i32 %195, %51
  br i1 %196, label %197, label %198

197:                                              ; preds = %192
  store i32 %50, i32* %194, align 4
  br label %198

198:                                              ; preds = %192, %197
  %199 = add nuw i64 %193, 1
  %200 = icmp eq i64 %199, %6
  br i1 %200, label %190, label %192, !llvm.loop !39

201:                                              ; preds = %190, %215
  %202 = phi i64 [ %216, %215 ], [ 0, %190 ]
  %203 = getelementptr inbounds i32, i32* %3, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, %51
  br i1 %205, label %206, label %215

206:                                              ; preds = %201
  %207 = getelementptr inbounds i32, i32* %3, i64 %202
  %208 = bitcast i32* %207 to i8*
  %209 = add nuw i64 %202, 1
  %210 = getelementptr inbounds i32, i32* %3, i64 %209
  %211 = bitcast i32* %210 to i8*
  %212 = xor i64 %202, 4611686018427387903
  %213 = add i64 %212, %44
  %214 = shl i64 %213, 2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %208, i8* align 4 %211, i64 %214, i1 false)
  br label %218

215:                                              ; preds = %201
  %216 = add nuw i64 %202, 1
  %217 = icmp eq i64 %216, %44
  br i1 %217, label %218, label %201

218:                                              ; preds = %215, %190, %206
  %219 = add i64 %44, -1
  %220 = load i64, i64* %10, align 8
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %270, label %222

222:                                              ; preds = %218, %266
  %223 = phi i64 [ %267, %266 ], [ 0, %218 ]
  %224 = phi i64 [ %268, %266 ], [ 0, %218 ]
  %225 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %224
  %226 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %225, i64 0, i32 0
  %227 = load i32, i32* %226, align 8
  %228 = icmp eq i32 %227, %50
  br i1 %228, label %266, label %229

229:                                              ; preds = %222
  %230 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %224, i32 1
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %231, %50
  %233 = icmp eq i32 %227, %51
  %234 = or i1 %233, %232
  %235 = icmp eq i32 %231, %51
  %236 = or i1 %235, %234
  br i1 %236, label %266, label %237

237:                                              ; preds = %229
  %238 = load double, double* %18, align 8
  %239 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %224, i32 3
  %240 = load double, double* %239, align 8
  %241 = fcmp une double %238, %240
  br i1 %241, label %242, label %244

242:                                              ; preds = %237
  %243 = fcmp ogt double %238, %240
  br i1 %243, label %250, label %260

244:                                              ; preds = %237
  %245 = load i32, i32* %20, align 4
  %246 = load i32, i32* %19, align 8
  %247 = sub i32 %245, %246
  %248 = sub i32 %231, %227
  %249 = icmp ugt i32 %247, %248
  br i1 %249, label %250, label %260

250:                                              ; preds = %242, %244
  %251 = load i32, i32* %19, align 8
  %252 = load i32, i32* %20, align 4
  %253 = load i64, i64* %22, align 8
  %254 = bitcast %struct.HistogramPair* %225 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %254, i64 24, i1 false)
  %255 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %223, i32 0
  store i32 %251, i32* %255, align 8
  %256 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %223, i32 1
  store i32 %252, i32* %256, align 4
  %257 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %223, i32 2
  %258 = bitcast double* %257 to i64*
  store i64 %253, i64* %258, align 8
  %259 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %223, i32 3
  store double %238, double* %259, align 8
  br label %264

260:                                              ; preds = %242, %244
  %261 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %223
  %262 = bitcast %struct.HistogramPair* %261 to i8*
  %263 = bitcast %struct.HistogramPair* %225 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 8 %263, i64 24, i1 false)
  br label %264

264:                                              ; preds = %260, %250
  %265 = add i64 %223, 1
  br label %266

266:                                              ; preds = %222, %229, %264
  %267 = phi i64 [ %265, %264 ], [ %223, %229 ], [ %223, %222 ]
  %268 = add nuw i64 %224, 1
  %269 = icmp ult i64 %268, %220
  br i1 %269, label %222, label %270

270:                                              ; preds = %266, %218
  %271 = phi i64 [ 0, %218 ], [ %267, %266 ]
  store i64 %271, i64* %10, align 8
  %272 = icmp eq i64 %219, 0
  br i1 %272, label %284, label %273

273:                                              ; preds = %270, %273
  %274 = phi i64 [ %277, %273 ], [ 0, %270 ]
  %275 = getelementptr inbounds i32, i32* %3, i64 %274
  %276 = load i32, i32* %275, align 4
  call void @BrotliCompareAndPushToQueueCommand(%struct.HistogramCommand* %0, i32* %1, i32 %50, i32 %276, i64 %8, %struct.HistogramPair* %4, i64* nonnull %10)
  %277 = add nuw i64 %274, 1
  %278 = icmp eq i64 %277, %219
  br i1 %278, label %279, label %273

279:                                              ; preds = %273, %43
  %280 = phi i64 [ %7, %43 ], [ %46, %273 ]
  %281 = phi double [ 0x547D42AEA2879F2E, %43 ], [ %45, %273 ]
  %282 = phi i64 [ %44, %43 ], [ %219, %273 ]
  %283 = icmp ugt i64 %282, %280
  br i1 %283, label %43, label %284

284:                                              ; preds = %270, %279, %9, %15
  %285 = phi i64 [ %5, %15 ], [ 0, %9 ], [ 0, %270 ], [ %282, %279 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #4
  ret i64 %285
}

; Function Attrs: nounwind ssp uwtable
define hidden double @BrotliHistogramBitCostDistanceCommand(%struct.HistogramCommand* nocapture readonly, %struct.HistogramCommand* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %struct.HistogramCommand, align 8
  %4 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %57, label %7

7:                                                ; preds = %2
  %8 = bitcast %struct.HistogramCommand* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2832, i8* nonnull %8) #4
  %9 = bitcast %struct.HistogramCommand* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %9, i64 2832, i1 false)
  %10 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %3, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %11
  store i64 %14, i64* %12, align 8
  br label %15

15:                                               ; preds = %15, %7
  %16 = phi i64 [ 0, %7 ], [ %50, %15 ]
  %17 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1, i64 0, i32 0, i64 %16
  %18 = bitcast i32* %17 to <4 x i32>*
  %19 = load <4 x i32>, <4 x i32>* %18, align 4
  %20 = getelementptr inbounds i32, i32* %17, i64 4
  %21 = bitcast i32* %20 to <4 x i32>*
  %22 = load <4 x i32>, <4 x i32>* %21, align 4
  %23 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %3, i64 0, i32 0, i64 %16
  %24 = bitcast i32* %23 to <4 x i32>*
  %25 = load <4 x i32>, <4 x i32>* %24, align 8
  %26 = getelementptr inbounds i32, i32* %23, i64 4
  %27 = bitcast i32* %26 to <4 x i32>*
  %28 = load <4 x i32>, <4 x i32>* %27, align 8
  %29 = add <4 x i32> %25, %19
  %30 = add <4 x i32> %28, %22
  %31 = bitcast i32* %23 to <4 x i32>*
  store <4 x i32> %29, <4 x i32>* %31, align 8
  %32 = bitcast i32* %26 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %32, align 8
  %33 = or i64 %16, 8
  %34 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1, i64 0, i32 0, i64 %33
  %35 = bitcast i32* %34 to <4 x i32>*
  %36 = load <4 x i32>, <4 x i32>* %35, align 4
  %37 = getelementptr inbounds i32, i32* %34, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  %39 = load <4 x i32>, <4 x i32>* %38, align 4
  %40 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %3, i64 0, i32 0, i64 %33
  %41 = bitcast i32* %40 to <4 x i32>*
  %42 = load <4 x i32>, <4 x i32>* %41, align 8
  %43 = getelementptr inbounds i32, i32* %40, i64 4
  %44 = bitcast i32* %43 to <4 x i32>*
  %45 = load <4 x i32>, <4 x i32>* %44, align 8
  %46 = add <4 x i32> %42, %36
  %47 = add <4 x i32> %45, %39
  %48 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> %46, <4 x i32>* %48, align 8
  %49 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %47, <4 x i32>* %49, align 8
  %50 = add nuw nsw i64 %16, 16
  %51 = icmp eq i64 %50, 704
  br i1 %51, label %52, label %15, !llvm.loop !40

52:                                               ; preds = %15
  %53 = call double @BrotliPopulationCostCommand(%struct.HistogramCommand* nonnull %3) #4
  %54 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1, i64 0, i32 2
  %55 = load double, double* %54, align 8
  %56 = fsub double %53, %55
  call void @llvm.lifetime.end.p0i8(i64 2832, i8* nonnull %8) #4
  br label %57

57:                                               ; preds = %2, %52
  %58 = phi double [ %56, %52 ], [ 0.000000e+00, %2 ]
  ret double %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @BrotliHistogramRemapCommand(%struct.HistogramCommand* nocapture readonly, i64, i32* nocapture readonly, i64, %struct.HistogramCommand* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %7 = alloca %struct.HistogramCommand, align 8
  %8 = alloca %struct.HistogramCommand, align 8
  %9 = icmp eq i64 %1, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = bitcast %struct.HistogramCommand* %8 to i8*
  %12 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %8, i64 0, i32 1
  %13 = icmp eq i64 %3, 0
  %14 = bitcast %struct.HistogramCommand* %7 to i8*
  %15 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %7, i64 0, i32 1
  br label %23

16:                                               ; preds = %153, %6
  %17 = icmp eq i64 %3, 0
  br i1 %17, label %168, label %18

18:                                               ; preds = %16
  %19 = and i64 %3, 1
  %20 = icmp eq i64 %3, 1
  br i1 %20, label %158, label %21

21:                                               ; preds = %18
  %22 = sub i64 %3, %19
  br label %171

23:                                               ; preds = %153, %10
  %24 = phi i64 [ 0, %10 ], [ %156, %153 ]
  %25 = icmp eq i64 %24, 0
  %26 = add i64 %24, -1
  %27 = getelementptr inbounds i32, i32* %5, i64 %26
  %28 = select i1 %25, i32* %5, i32* %27
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %24
  %31 = zext i32 %29 to i64
  %32 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %24, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %83, label %35

35:                                               ; preds = %23
  call void @llvm.lifetime.start.p0i8(i64 2832, i8* nonnull %11) #4
  %36 = bitcast %struct.HistogramCommand* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %36, i64 2832, i1 false) #4
  %37 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %31, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = load i64, i64* %12, align 8
  %40 = add i64 %39, %38
  store i64 %40, i64* %12, align 8
  br label %41

41:                                               ; preds = %41, %35
  %42 = phi i64 [ 0, %35 ], [ %76, %41 ]
  %43 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %31, i32 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  %45 = load <4 x i32>, <4 x i32>* %44, align 4
  %46 = getelementptr inbounds i32, i32* %43, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  %48 = load <4 x i32>, <4 x i32>* %47, align 4
  %49 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %8, i64 0, i32 0, i64 %42
  %50 = bitcast i32* %49 to <4 x i32>*
  %51 = load <4 x i32>, <4 x i32>* %50, align 8
  %52 = getelementptr inbounds i32, i32* %49, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  %54 = load <4 x i32>, <4 x i32>* %53, align 8
  %55 = add <4 x i32> %51, %45
  %56 = add <4 x i32> %54, %48
  %57 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> %55, <4 x i32>* %57, align 8
  %58 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> %56, <4 x i32>* %58, align 8
  %59 = or i64 %42, 8
  %60 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %31, i32 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  %62 = load <4 x i32>, <4 x i32>* %61, align 4
  %63 = getelementptr inbounds i32, i32* %60, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  %65 = load <4 x i32>, <4 x i32>* %64, align 4
  %66 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %8, i64 0, i32 0, i64 %59
  %67 = bitcast i32* %66 to <4 x i32>*
  %68 = load <4 x i32>, <4 x i32>* %67, align 8
  %69 = getelementptr inbounds i32, i32* %66, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  %71 = load <4 x i32>, <4 x i32>* %70, align 8
  %72 = add <4 x i32> %68, %62
  %73 = add <4 x i32> %71, %65
  %74 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %74, align 8
  %75 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> %73, <4 x i32>* %75, align 8
  %76 = add nuw nsw i64 %42, 16
  %77 = icmp eq i64 %76, 704
  br i1 %77, label %78, label %41, !llvm.loop !41

78:                                               ; preds = %41
  %79 = call double @BrotliPopulationCostCommand(%struct.HistogramCommand* nonnull %8) #4
  %80 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %31, i32 2
  %81 = load double, double* %80, align 8
  %82 = fsub double %79, %81
  call void @llvm.lifetime.end.p0i8(i64 2832, i8* nonnull %11) #4
  br label %83

83:                                               ; preds = %23, %78
  %84 = phi double [ %82, %78 ], [ 0.000000e+00, %23 ]
  br i1 %13, label %153, label %85

85:                                               ; preds = %83
  %86 = bitcast %struct.HistogramCommand* %30 to i8*
  br label %87

87:                                               ; preds = %148, %85
  %88 = phi i64 [ 0, %85 ], [ %151, %148 ]
  %89 = phi double [ %84, %85 ], [ %150, %148 ]
  %90 = phi i32 [ %29, %85 ], [ %149, %148 ]
  %91 = getelementptr inbounds i32, i32* %2, i64 %88
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  %94 = load i64, i64* %32, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %143, label %96

96:                                               ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 2832, i8* nonnull %14) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %86, i64 2832, i1 false) #4
  %97 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %93, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = load i64, i64* %15, align 8
  %100 = add i64 %99, %98
  store i64 %100, i64* %15, align 8
  br label %101

101:                                              ; preds = %101, %96
  %102 = phi i64 [ 0, %96 ], [ %136, %101 ]
  %103 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %93, i32 0, i64 %102
  %104 = bitcast i32* %103 to <4 x i32>*
  %105 = load <4 x i32>, <4 x i32>* %104, align 4
  %106 = getelementptr inbounds i32, i32* %103, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4
  %109 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %7, i64 0, i32 0, i64 %102
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 8
  %112 = getelementptr inbounds i32, i32* %109, i64 4
  %113 = bitcast i32* %112 to <4 x i32>*
  %114 = load <4 x i32>, <4 x i32>* %113, align 8
  %115 = add <4 x i32> %111, %105
  %116 = add <4 x i32> %114, %108
  %117 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %115, <4 x i32>* %117, align 8
  %118 = bitcast i32* %112 to <4 x i32>*
  store <4 x i32> %116, <4 x i32>* %118, align 8
  %119 = or i64 %102, 8
  %120 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %93, i32 0, i64 %119
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4
  %123 = getelementptr inbounds i32, i32* %120, i64 4
  %124 = bitcast i32* %123 to <4 x i32>*
  %125 = load <4 x i32>, <4 x i32>* %124, align 4
  %126 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %7, i64 0, i32 0, i64 %119
  %127 = bitcast i32* %126 to <4 x i32>*
  %128 = load <4 x i32>, <4 x i32>* %127, align 8
  %129 = getelementptr inbounds i32, i32* %126, i64 4
  %130 = bitcast i32* %129 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 8
  %132 = add <4 x i32> %128, %122
  %133 = add <4 x i32> %131, %125
  %134 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %132, <4 x i32>* %134, align 8
  %135 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %135, align 8
  %136 = add nuw nsw i64 %102, 16
  %137 = icmp eq i64 %136, 704
  br i1 %137, label %138, label %101, !llvm.loop !42

138:                                              ; preds = %101
  %139 = call double @BrotliPopulationCostCommand(%struct.HistogramCommand* nonnull %7) #4
  %140 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %93, i32 2
  %141 = load double, double* %140, align 8
  %142 = fsub double %139, %141
  call void @llvm.lifetime.end.p0i8(i64 2832, i8* nonnull %14) #4
  br label %143

143:                                              ; preds = %87, %138
  %144 = phi double [ %142, %138 ], [ 0.000000e+00, %87 ]
  %145 = fcmp olt double %144, %89
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  %147 = load i32, i32* %91, align 4
  br label %148

148:                                              ; preds = %146, %143
  %149 = phi i32 [ %147, %146 ], [ %90, %143 ]
  %150 = phi double [ %144, %146 ], [ %89, %143 ]
  %151 = add nuw i64 %88, 1
  %152 = icmp eq i64 %151, %3
  br i1 %152, label %153, label %87

153:                                              ; preds = %148, %83
  %154 = phi i32 [ %29, %83 ], [ %149, %148 ]
  %155 = getelementptr inbounds i32, i32* %5, i64 %24
  store i32 %154, i32* %155, align 4
  %156 = add nuw i64 %24, 1
  %157 = icmp eq i64 %156, %1
  br i1 %157, label %16, label %23

158:                                              ; preds = %171, %18
  %159 = phi i64 [ 0, %18 ], [ %187, %171 ]
  %160 = icmp eq i64 %19, 0
  br i1 %160, label %168, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds i32, i32* %2, i64 %159
  %163 = load i32, i32* %162, align 4
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %164
  %166 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %164, i32 2
  %167 = bitcast %struct.HistogramCommand* %165 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 2824, i1 false) #4
  store double 0x7FF0000000000000, double* %166, align 8
  br label %168

168:                                              ; preds = %161, %158, %16
  br i1 %9, label %265, label %169

169:                                              ; preds = %168
  %170 = getelementptr %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 0, i32 1
  br label %190

171:                                              ; preds = %171, %21
  %172 = phi i64 [ 0, %21 ], [ %187, %171 ]
  %173 = phi i64 [ %22, %21 ], [ %188, %171 ]
  %174 = getelementptr inbounds i32, i32* %2, i64 %172
  %175 = load i32, i32* %174, align 4
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %176
  %178 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %176, i32 2
  %179 = bitcast %struct.HistogramCommand* %177 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 2824, i1 false) #4
  store double 0x7FF0000000000000, double* %178, align 8
  %180 = or i64 %172, 1
  %181 = getelementptr inbounds i32, i32* %2, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %183
  %185 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %183, i32 2
  %186 = bitcast %struct.HistogramCommand* %184 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 2824, i1 false) #4
  store double 0x7FF0000000000000, double* %185, align 8
  %187 = add nuw i64 %172, 2
  %188 = add i64 %173, -2
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %158, label %171

190:                                              ; preds = %169, %262
  %191 = phi i64 [ %263, %262 ], [ 0, %169 ]
  %192 = getelementptr inbounds i32, i32* %5, i64 %191
  %193 = load i32, i32* %192, align 4
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %191, i32 1
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %194, i32 1
  %198 = load i64, i64* %197, align 8
  %199 = add i64 %198, %196
  store i64 %199, i64* %197, align 8
  %200 = getelementptr %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %191, i32 1
  %201 = getelementptr %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %191
  %202 = getelementptr %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %194
  %203 = mul nuw nsw i64 %194, 354
  %204 = getelementptr i64, i64* %170, i64 %203
  %205 = bitcast i64* %200 to %struct.HistogramCommand*
  %206 = icmp ult %struct.HistogramCommand* %202, %205
  %207 = bitcast i64* %204 to %struct.HistogramCommand*
  %208 = icmp ult %struct.HistogramCommand* %201, %207
  %209 = and i1 %206, %208
  br i1 %209, label %247, label %210

210:                                              ; preds = %190, %210
  %211 = phi i64 [ %245, %210 ], [ 0, %190 ]
  %212 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %191, i32 0, i64 %211
  %213 = bitcast i32* %212 to <4 x i32>*
  %214 = load <4 x i32>, <4 x i32>* %213, align 4, !alias.scope !43
  %215 = getelementptr inbounds i32, i32* %212, i64 4
  %216 = bitcast i32* %215 to <4 x i32>*
  %217 = load <4 x i32>, <4 x i32>* %216, align 4, !alias.scope !43
  %218 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %194, i32 0, i64 %211
  %219 = bitcast i32* %218 to <4 x i32>*
  %220 = load <4 x i32>, <4 x i32>* %219, align 4, !alias.scope !46, !noalias !43
  %221 = getelementptr inbounds i32, i32* %218, i64 4
  %222 = bitcast i32* %221 to <4 x i32>*
  %223 = load <4 x i32>, <4 x i32>* %222, align 4, !alias.scope !46, !noalias !43
  %224 = add <4 x i32> %220, %214
  %225 = add <4 x i32> %223, %217
  %226 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> %224, <4 x i32>* %226, align 4, !alias.scope !46, !noalias !43
  %227 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %225, <4 x i32>* %227, align 4, !alias.scope !46, !noalias !43
  %228 = or i64 %211, 8
  %229 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %191, i32 0, i64 %228
  %230 = bitcast i32* %229 to <4 x i32>*
  %231 = load <4 x i32>, <4 x i32>* %230, align 4, !alias.scope !43
  %232 = getelementptr inbounds i32, i32* %229, i64 4
  %233 = bitcast i32* %232 to <4 x i32>*
  %234 = load <4 x i32>, <4 x i32>* %233, align 4, !alias.scope !43
  %235 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %194, i32 0, i64 %228
  %236 = bitcast i32* %235 to <4 x i32>*
  %237 = load <4 x i32>, <4 x i32>* %236, align 4, !alias.scope !46, !noalias !43
  %238 = getelementptr inbounds i32, i32* %235, i64 4
  %239 = bitcast i32* %238 to <4 x i32>*
  %240 = load <4 x i32>, <4 x i32>* %239, align 4, !alias.scope !46, !noalias !43
  %241 = add <4 x i32> %237, %231
  %242 = add <4 x i32> %240, %234
  %243 = bitcast i32* %235 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %243, align 4, !alias.scope !46, !noalias !43
  %244 = bitcast i32* %238 to <4 x i32>*
  store <4 x i32> %242, <4 x i32>* %244, align 4, !alias.scope !46, !noalias !43
  %245 = add nuw nsw i64 %211, 16
  %246 = icmp eq i64 %245, 704
  br i1 %246, label %262, label %210, !llvm.loop !48

247:                                              ; preds = %190, %247
  %248 = phi i64 [ %260, %247 ], [ 0, %190 ]
  %249 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %191, i32 0, i64 %248
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %194, i32 0, i64 %248
  %252 = load i32, i32* %251, align 4
  %253 = add i32 %252, %250
  store i32 %253, i32* %251, align 4
  %254 = or i64 %248, 1
  %255 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %0, i64 %191, i32 0, i64 %254
  %256 = load i32, i32* %255, align 4
  %257 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %194, i32 0, i64 %254
  %258 = load i32, i32* %257, align 4
  %259 = add i32 %258, %256
  store i32 %259, i32* %257, align 4
  %260 = add nuw nsw i64 %248, 2
  %261 = icmp eq i64 %260, 704
  br i1 %261, label %262, label %247, !llvm.loop !49

262:                                              ; preds = %210, %247
  %263 = add nuw i64 %191, 1
  %264 = icmp eq i64 %263, %1
  br i1 %264, label %265, label %190

265:                                              ; preds = %262, %168
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @BrotliHistogramReindexCommand(%struct.MemoryManager*, %struct.HistogramCommand* nocapture, i32* nocapture, i64) local_unnamed_addr #0 {
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %86, label %6

6:                                                ; preds = %4
  %7 = shl i64 %3, 2
  %8 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %7) #4
  %9 = bitcast i8* %8 to i32*
  %10 = shl nuw i64 %3, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 -1, i64 %10, i1 false)
  %11 = and i64 %3, 1
  %12 = icmp eq i64 %3, 1
  br i1 %12, label %36, label %13

13:                                               ; preds = %6
  %14 = sub i64 %3, %11
  br label %15

15:                                               ; preds = %125, %13
  %16 = phi i64 [ 0, %13 ], [ %127, %125 ]
  %17 = phi i32 [ 0, %13 ], [ %126, %125 ]
  %18 = phi i64 [ %14, %13 ], [ %128, %125 ]
  %19 = getelementptr inbounds i32, i32* %2, i64 %16
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %9, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %25, label %27

25:                                               ; preds = %15
  store i32 %17, i32* %22, align 4
  %26 = add i32 %17, 1
  br label %27

27:                                               ; preds = %15, %25
  %28 = phi i32 [ %26, %25 ], [ %17, %15 ]
  %29 = or i64 %16, 1
  %30 = getelementptr inbounds i32, i32* %2, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i32, i32* %9, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %123, label %125

36:                                               ; preds = %125, %6
  %37 = phi i32 [ undef, %6 ], [ %126, %125 ]
  %38 = phi i64 [ 0, %6 ], [ %127, %125 ]
  %39 = phi i32 [ 0, %6 ], [ %126, %125 ]
  %40 = icmp eq i64 %11, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds i32, i32* %2, i64 %38
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %9, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  store i32 %39, i32* %45, align 4
  %49 = add i32 %39, 1
  br label %50

50:                                               ; preds = %48, %41, %36
  %51 = phi i32 [ %37, %36 ], [ %49, %48 ], [ %39, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = zext i32 %51 to i64
  %55 = mul nuw nsw i64 %54, 2832
  %56 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %55) #4
  %57 = bitcast i8* %56 to %struct.HistogramCommand*
  br label %58

58:                                               ; preds = %50, %53
  %59 = phi i8* [ %56, %53 ], [ null, %50 ]
  %60 = phi %struct.HistogramCommand* [ %57, %53 ], [ null, %50 ]
  br i1 %5, label %86, label %61

61:                                               ; preds = %58, %81
  %62 = phi i64 [ %84, %81 ], [ 0, %58 ]
  %63 = phi i32 [ %83, %81 ], [ 0, %58 ]
  %64 = getelementptr inbounds i32, i32* %2, i64 %62
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i32, i32* %9, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %63
  br i1 %69, label %70, label %81

70:                                               ; preds = %61
  %71 = zext i32 %63 to i64
  %72 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %60, i64 %71
  %73 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1, i64 %66
  %74 = bitcast %struct.HistogramCommand* %72 to i8*
  %75 = bitcast %struct.HistogramCommand* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 2832, i1 false)
  %76 = add i32 %63, 1
  %77 = load i32, i32* %64, align 4
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i32, i32* %9, i64 %78
  %80 = load i32, i32* %79, align 4
  br label %81

81:                                               ; preds = %70, %61
  %82 = phi i32 [ %80, %70 ], [ %68, %61 ]
  %83 = phi i32 [ %76, %70 ], [ %63, %61 ]
  store i32 %82, i32* %64, align 4
  %84 = add nuw i64 %62, 1
  %85 = icmp eq i64 %84, %3
  br i1 %85, label %89, label %61

86:                                               ; preds = %58, %4
  %87 = phi i8* [ %59, %58 ], [ null, %4 ]
  %88 = phi i8* [ %8, %58 ], [ null, %4 ]
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %88) #4
  br label %120

89:                                               ; preds = %81
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %8) #4
  %90 = zext i32 %83 to i64
  %91 = icmp eq i32 %83, 0
  br i1 %91, label %120, label %92

92:                                               ; preds = %89
  %93 = and i64 %90, 1
  %94 = icmp eq i32 %83, 1
  br i1 %94, label %112, label %95

95:                                               ; preds = %92
  %96 = sub nsw i64 %90, %93
  br label %97

97:                                               ; preds = %97, %95
  %98 = phi i64 [ 0, %95 ], [ %109, %97 ]
  %99 = phi i64 [ %96, %95 ], [ %110, %97 ]
  %100 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1, i64 %98
  %101 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %60, i64 %98
  %102 = bitcast %struct.HistogramCommand* %100 to i8*
  %103 = bitcast %struct.HistogramCommand* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 2832, i1 false)
  %104 = or i64 %98, 1
  %105 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1, i64 %104
  %106 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %60, i64 %104
  %107 = bitcast %struct.HistogramCommand* %105 to i8*
  %108 = bitcast %struct.HistogramCommand* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 2832, i1 false)
  %109 = add nuw nsw i64 %98, 2
  %110 = add i64 %99, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %97

112:                                              ; preds = %97, %92
  %113 = phi i64 [ 0, %92 ], [ %109, %97 ]
  %114 = icmp eq i64 %93, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1, i64 %113
  %117 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %60, i64 %113
  %118 = bitcast %struct.HistogramCommand* %116 to i8*
  %119 = bitcast %struct.HistogramCommand* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 2832, i1 false)
  br label %120

120:                                              ; preds = %115, %112, %86, %89
  %121 = phi i64 [ 0, %86 ], [ 0, %89 ], [ %90, %112 ], [ %90, %115 ]
  %122 = phi i8* [ %87, %86 ], [ %59, %89 ], [ %59, %112 ], [ %59, %115 ]
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %122) #4
  ret i64 %121

123:                                              ; preds = %27
  store i32 %28, i32* %33, align 4
  %124 = add i32 %28, 1
  br label %125

125:                                              ; preds = %123, %27
  %126 = phi i32 [ %124, %123 ], [ %28, %27 ]
  %127 = add nuw i64 %16, 2
  %128 = add i64 %18, -2
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %36, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @BrotliClusterHistogramsCommand(%struct.MemoryManager*, %struct.HistogramCommand*, i64, i64, %struct.HistogramCommand* nocapture, i64* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %8 = icmp eq i64 %2, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %7
  %10 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 49176) #4
  %11 = bitcast i8* %10 to %struct.HistogramPair*
  br label %208

12:                                               ; preds = %7
  %13 = shl i64 %2, 2
  %14 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %13) #4
  %15 = bitcast i8* %14 to i32*
  %16 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %13) #4
  %17 = bitcast i8* %16 to i32*
  %18 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 49176) #4
  %19 = bitcast i8* %18 to %struct.HistogramPair*
  %20 = icmp ult i64 %2, 8
  br i1 %20, label %21, label %23

21:                                               ; preds = %90, %12
  %22 = phi i64 [ 0, %12 ], [ %24, %90 ]
  br label %93

23:                                               ; preds = %12
  %24 = and i64 %2, -8
  %25 = add i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds i32, i32* %15, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 4
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 4
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds i32, i32* %15, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 4
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 4
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds i32, i32* %15, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 4
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 4
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds i32, i32* %15, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 4
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 4
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds i32, i32* %15, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 4
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 4
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds i32, i32* %15, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 4
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 4
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds i32, i32* %15, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 4
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 4
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds i32, i32* %15, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 4
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 4
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !50

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds i32, i32* %15, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 4
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 4
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !51

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %2
  br i1 %91, label %92, label %21

92:                                               ; preds = %93, %90
  br i1 %8, label %208, label %99

93:                                               ; preds = %21, %93
  %94 = phi i64 [ %96, %93 ], [ %22, %21 ]
  %95 = getelementptr inbounds i32, i32* %15, i64 %94
  store i32 1, i32* %95, align 4
  %96 = add nuw i64 %94, 1
  %97 = icmp eq i64 %96, %2
  br i1 %97, label %92, label %93, !llvm.loop !52

98:                                               ; preds = %99
  br i1 %8, label %208, label %111

99:                                               ; preds = %92, %99
  %100 = phi i64 [ %109, %99 ], [ 0, %92 ]
  %101 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %100
  %102 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1, i64 %100
  %103 = bitcast %struct.HistogramCommand* %101 to i8*
  %104 = bitcast %struct.HistogramCommand* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 2832, i1 false)
  %105 = tail call double @BrotliPopulationCostCommand(%struct.HistogramCommand* %102) #4
  %106 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %4, i64 %100, i32 2
  store double %105, double* %106, align 8
  %107 = trunc i64 %100 to i32
  %108 = getelementptr inbounds i32, i32* %6, i64 %100
  store i32 %107, i32* %108, align 4
  %109 = add nuw i64 %100, 1
  %110 = icmp eq i64 %109, %2
  br i1 %110, label %98, label %99

111:                                              ; preds = %98, %200
  %112 = phi i64 [ %207, %200 ], [ 0, %98 ]
  %113 = phi i64 [ %205, %200 ], [ 0, %98 ]
  %114 = phi i64 [ %204, %200 ], [ 0, %98 ]
  %115 = mul i64 %112, -64
  %116 = add i64 %115, %2
  %117 = icmp ult i64 %116, 64
  %118 = select i1 %117, i64 %116, i64 64
  %119 = and i64 %118, 120
  %120 = add nsw i64 %119, -8
  %121 = lshr exact i64 %120, 3
  %122 = add nuw nsw i64 %121, 1
  %123 = mul i64 %112, -64
  %124 = add i64 %123, %2
  %125 = icmp ult i64 %124, 64
  %126 = select i1 %125, i64 %124, i64 64
  %127 = sub i64 %2, %113
  %128 = icmp ult i64 %127, 64
  %129 = select i1 %128, i64 %127, i64 64
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %200, label %131

131:                                              ; preds = %111
  %132 = icmp ult i64 %126, 8
  br i1 %132, label %190, label %133

133:                                              ; preds = %131
  %134 = and i64 %126, 120
  %135 = insertelement <4 x i64> undef, i64 %113, i32 0
  %136 = shufflevector <4 x i64> %135, <4 x i64> undef, <4 x i32> zeroinitializer
  %137 = insertelement <4 x i64> undef, i64 %113, i32 0
  %138 = shufflevector <4 x i64> %137, <4 x i64> undef, <4 x i32> zeroinitializer
  %139 = and i64 %122, 1
  %140 = icmp eq i64 %120, 0
  br i1 %140, label %173, label %141

141:                                              ; preds = %133
  %142 = sub nuw nsw i64 %122, %139
  br label %143

143:                                              ; preds = %143, %141
  %144 = phi i64 [ 0, %141 ], [ %169, %143 ]
  %145 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %141 ], [ %170, %143 ]
  %146 = phi i64 [ %142, %141 ], [ %171, %143 ]
  %147 = add <4 x i64> %145, <i64 4, i64 4, i64 4, i64 4>
  %148 = add <4 x i64> %145, %136
  %149 = add <4 x i64> %147, %138
  %150 = trunc <4 x i64> %148 to <4 x i32>
  %151 = trunc <4 x i64> %149 to <4 x i32>
  %152 = add i64 %144, %114
  %153 = getelementptr inbounds i32, i32* %17, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %150, <4 x i32>* %154, align 4
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> %151, <4 x i32>* %156, align 4
  %157 = or i64 %144, 8
  %158 = add <4 x i64> %145, <i64 8, i64 8, i64 8, i64 8>
  %159 = add <4 x i64> %145, <i64 12, i64 12, i64 12, i64 12>
  %160 = add <4 x i64> %158, %136
  %161 = add <4 x i64> %159, %138
  %162 = trunc <4 x i64> %160 to <4 x i32>
  %163 = trunc <4 x i64> %161 to <4 x i32>
  %164 = add i64 %157, %114
  %165 = getelementptr inbounds i32, i32* %17, i64 %164
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> %162, <4 x i32>* %166, align 4
  %167 = getelementptr inbounds i32, i32* %165, i64 4
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> %163, <4 x i32>* %168, align 4
  %169 = add i64 %144, 16
  %170 = add <4 x i64> %145, <i64 16, i64 16, i64 16, i64 16>
  %171 = add i64 %146, -2
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %143, !llvm.loop !53

173:                                              ; preds = %143, %133
  %174 = phi i64 [ 0, %133 ], [ %169, %143 ]
  %175 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %133 ], [ %170, %143 ]
  %176 = icmp eq i64 %139, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %173
  %178 = add <4 x i64> %175, <i64 4, i64 4, i64 4, i64 4>
  %179 = add <4 x i64> %175, %136
  %180 = add <4 x i64> %178, %138
  %181 = trunc <4 x i64> %179 to <4 x i32>
  %182 = trunc <4 x i64> %180 to <4 x i32>
  %183 = add i64 %174, %114
  %184 = getelementptr inbounds i32, i32* %17, i64 %183
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> %181, <4 x i32>* %185, align 4
  %186 = getelementptr inbounds i32, i32* %184, i64 4
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> %182, <4 x i32>* %187, align 4
  br label %188

188:                                              ; preds = %173, %177
  %189 = icmp eq i64 %126, %134
  br i1 %189, label %200, label %190

190:                                              ; preds = %188, %131
  %191 = phi i64 [ 0, %131 ], [ %134, %188 ]
  br label %192

192:                                              ; preds = %190, %192
  %193 = phi i64 [ %198, %192 ], [ %191, %190 ]
  %194 = add i64 %193, %113
  %195 = trunc i64 %194 to i32
  %196 = add i64 %193, %114
  %197 = getelementptr inbounds i32, i32* %17, i64 %196
  store i32 %195, i32* %197, align 4
  %198 = add nuw i64 %193, 1
  %199 = icmp ult i64 %198, %129
  br i1 %199, label %192, label %200, !llvm.loop !54

200:                                              ; preds = %192, %188, %111
  %201 = getelementptr inbounds i32, i32* %6, i64 %113
  %202 = getelementptr inbounds i32, i32* %17, i64 %114
  %203 = tail call i64 @BrotliHistogramCombineCommand(%struct.HistogramCommand* %4, i32* %15, i32* %201, i32* %202, %struct.HistogramPair* %19, i64 %129, i64 %129, i64 %3, i64 2048)
  %204 = add i64 %203, %114
  %205 = add i64 %113, 64
  %206 = icmp ult i64 %205, %2
  %207 = add i64 %112, 1
  br i1 %206, label %111, label %208

208:                                              ; preds = %200, %92, %9, %98
  %209 = phi %struct.HistogramPair* [ %19, %98 ], [ %19, %92 ], [ %11, %9 ], [ %19, %200 ]
  %210 = phi i8* [ %18, %98 ], [ %18, %92 ], [ %10, %9 ], [ %18, %200 ]
  %211 = phi i8* [ %16, %98 ], [ %16, %92 ], [ null, %9 ], [ %16, %200 ]
  %212 = phi i8* [ %14, %98 ], [ %14, %92 ], [ null, %9 ], [ %14, %200 ]
  %213 = phi i32* [ %17, %98 ], [ %17, %92 ], [ null, %9 ], [ %17, %200 ]
  %214 = phi i32* [ %15, %98 ], [ %15, %92 ], [ null, %9 ], [ %15, %200 ]
  %215 = phi i64 [ 0, %98 ], [ 0, %92 ], [ 0, %9 ], [ %204, %200 ]
  %216 = shl i64 %215, 6
  %217 = lshr i64 %215, 1
  %218 = mul i64 %217, %215
  %219 = icmp ult i64 %216, %218
  %220 = select i1 %219, i64 %216, i64 %218
  %221 = add i64 %220, 1
  %222 = icmp ugt i64 %221, 2048
  br i1 %222, label %223, label %236

223:                                              ; preds = %208, %223
  %224 = phi i64 [ %226, %223 ], [ 2048, %208 ]
  %225 = icmp ult i64 %224, %221
  %226 = shl i64 %224, 1
  br i1 %225, label %223, label %227

227:                                              ; preds = %223
  %228 = icmp eq i64 %224, 0
  br i1 %228, label %233, label %229

229:                                              ; preds = %227
  %230 = mul i64 %224, 24
  %231 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %230) #4
  %232 = bitcast i8* %231 to %struct.HistogramPair*
  br label %233

233:                                              ; preds = %229, %227
  %234 = phi i8* [ %231, %229 ], [ null, %227 ]
  %235 = phi %struct.HistogramPair* [ %232, %229 ], [ null, %227 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %234, i8* align 8 %210, i64 49152, i1 false)
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %210) #4
  br label %236

236:                                              ; preds = %233, %208
  %237 = phi i8* [ %234, %233 ], [ %210, %208 ]
  %238 = phi %struct.HistogramPair* [ %235, %233 ], [ %209, %208 ]
  %239 = tail call i64 @BrotliHistogramCombineCommand(%struct.HistogramCommand* %4, i32* %214, i32* %6, i32* %213, %struct.HistogramPair* %238, i64 %215, i64 %2, i64 %3, i64 %220)
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %237) #4
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %212) #4
  tail call void @BrotliHistogramRemapCommand(%struct.HistogramCommand* %1, i64 %2, i32* %213, i64 %239, %struct.HistogramCommand* %4, i32* %6)
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %211) #4
  %240 = tail call i64 @BrotliHistogramReindexCommand(%struct.MemoryManager* %0, %struct.HistogramCommand* %4, i32* %6, i64 %2)
  store i64 %240, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @BrotliCompareAndPushToQueueDistance(%struct.HistogramDistance* nocapture readonly, i32* nocapture readonly, i32, i32, i64, %struct.HistogramPair* nocapture, i64* nocapture) local_unnamed_addr #0 {
  %8 = alloca %struct.HistogramDistance, align 8
  %9 = icmp eq i32 %2, %3
  br i1 %9, label %166, label %10

10:                                               ; preds = %7
  %11 = icmp ult i32 %3, %2
  %12 = select i1 %11, i32 %2, i32 %3
  %13 = select i1 %11, i32 %3, i32 %2
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %1, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = zext i32 %12 to i64
  %19 = getelementptr inbounds i32, i32* %1, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = add nuw nsw i64 %21, %17
  %23 = uitofp i32 %16 to double
  %24 = icmp ult i32 %16, 256
  br i1 %24, label %25, label %28

25:                                               ; preds = %10
  %26 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %17
  %27 = load double, double* %26, align 8
  br label %30

28:                                               ; preds = %10
  %29 = tail call double @log2(double %23) #4
  br label %30

30:                                               ; preds = %28, %25
  %31 = phi double [ %27, %25 ], [ %29, %28 ]
  %32 = fmul double %31, %23
  %33 = uitofp i32 %20 to double
  %34 = icmp ult i32 %20, 256
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %21
  %37 = load double, double* %36, align 8
  br label %40

38:                                               ; preds = %30
  %39 = tail call double @log2(double %33) #4
  br label %40

40:                                               ; preds = %38, %35
  %41 = phi double [ %37, %35 ], [ %39, %38 ]
  %42 = fmul double %41, %33
  %43 = fadd double %32, %42
  %44 = uitofp i64 %22 to double
  %45 = icmp ult i64 %22, 256
  br i1 %45, label %46, label %49

46:                                               ; preds = %40
  %47 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %22
  %48 = load double, double* %47, align 8
  br label %51

49:                                               ; preds = %40
  %50 = tail call double @log2(double %44) #4
  br label %51

51:                                               ; preds = %46, %49
  %52 = phi double [ %48, %46 ], [ %50, %49 ]
  %53 = fmul double %52, %44
  %54 = fsub double %43, %53
  %55 = fmul double %54, 5.000000e-01
  %56 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %14
  %57 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %14, i32 2
  %58 = load double, double* %57, align 8
  %59 = fsub double %55, %58
  %60 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %18, i32 2
  %61 = load double, double* %60, align 8
  %62 = fsub double %59, %61
  %63 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %14, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %126, label %66

66:                                               ; preds = %51
  %67 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %18, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %126, label %70

70:                                               ; preds = %66
  %71 = load i64, i64* %6, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 3
  %75 = load double, double* %74, align 8
  %76 = fcmp olt double %75, 0.000000e+00
  %77 = select i1 %76, double 0.000000e+00, double %75
  br label %78

78:                                               ; preds = %70, %73
  %79 = phi double [ %77, %73 ], [ 0x547D42AEA2879F2E, %70 ]
  %80 = bitcast %struct.HistogramDistance* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2192, i8* nonnull %80) #4
  %81 = bitcast %struct.HistogramDistance* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %80, i8* align 8 %81, i64 2192, i1 false)
  %82 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %8, i64 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, %68
  store i64 %84, i64* %82, align 8
  br label %85

85:                                               ; preds = %85, %78
  %86 = phi i64 [ 0, %78 ], [ %120, %85 ]
  %87 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %18, i32 0, i64 %86
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4
  %90 = getelementptr inbounds i32, i32* %87, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  %92 = load <4 x i32>, <4 x i32>* %91, align 4
  %93 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %8, i64 0, i32 0, i64 %86
  %94 = bitcast i32* %93 to <4 x i32>*
  %95 = load <4 x i32>, <4 x i32>* %94, align 8
  %96 = getelementptr inbounds i32, i32* %93, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  %98 = load <4 x i32>, <4 x i32>* %97, align 8
  %99 = add <4 x i32> %95, %89
  %100 = add <4 x i32> %98, %92
  %101 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %101, align 8
  %102 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %102, align 8
  %103 = or i64 %86, 8
  %104 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %18, i32 0, i64 %103
  %105 = bitcast i32* %104 to <4 x i32>*
  %106 = load <4 x i32>, <4 x i32>* %105, align 4
  %107 = getelementptr inbounds i32, i32* %104, i64 4
  %108 = bitcast i32* %107 to <4 x i32>*
  %109 = load <4 x i32>, <4 x i32>* %108, align 4
  %110 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %8, i64 0, i32 0, i64 %103
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 8
  %113 = getelementptr inbounds i32, i32* %110, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 8
  %116 = add <4 x i32> %112, %106
  %117 = add <4 x i32> %115, %109
  %118 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> %116, <4 x i32>* %118, align 8
  %119 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %117, <4 x i32>* %119, align 8
  %120 = add nuw nsw i64 %86, 16
  %121 = icmp eq i64 %120, 544
  br i1 %121, label %122, label %85, !llvm.loop !55

122:                                              ; preds = %85
  %123 = call double @BrotliPopulationCostDistance(%struct.HistogramDistance* nonnull %8) #4
  %124 = fsub double %79, %62
  %125 = fcmp olt double %123, %124
  call void @llvm.lifetime.end.p0i8(i64 2192, i8* nonnull %80) #4
  br i1 %125, label %126, label %166

126:                                              ; preds = %122, %66, %51
  %127 = phi double [ %61, %51 ], [ %58, %66 ], [ %123, %122 ]
  %128 = fadd double %62, %127
  %129 = load i64, i64* %6, align 8
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %157, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 3
  %133 = load double, double* %132, align 8
  %134 = fcmp une double %133, %128
  br i1 %134, label %135, label %137

135:                                              ; preds = %131
  %136 = fcmp ogt double %133, %128
  br i1 %136, label %145, label %157

137:                                              ; preds = %131
  %138 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 0
  %141 = load i32, i32* %140, align 8
  %142 = sub i32 %139, %141
  %143 = sub i32 %12, %13
  %144 = icmp ugt i32 %142, %143
  br i1 %144, label %145, label %157

145:                                              ; preds = %135, %137
  %146 = icmp ult i64 %129, %4
  br i1 %146, label %147, label %153

147:                                              ; preds = %145
  %148 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 %129
  %149 = bitcast %struct.HistogramPair* %148 to i8*
  %150 = bitcast %struct.HistogramPair* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %150, i64 24, i1 false)
  %151 = load i64, i64* %6, align 8
  %152 = add i64 %151, 1
  store i64 %152, i64* %6, align 8
  br label %153

153:                                              ; preds = %147, %145
  %154 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 0
  store i32 %13, i32* %154, align 8
  %155 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 1
  store i32 %12, i32* %155, align 4
  %156 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 0, i32 2
  store double %127, double* %156, align 8
  store double %128, double* %132, align 8
  br label %166

157:                                              ; preds = %135, %137, %126
  %158 = icmp ult i64 %129, %4
  br i1 %158, label %159, label %166

159:                                              ; preds = %157
  %160 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 %129, i32 0
  store i32 %13, i32* %160, align 8
  %161 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 %129, i32 1
  store i32 %12, i32* %161, align 4
  %162 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 %129, i32 2
  store double %127, double* %162, align 8
  %163 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %5, i64 %129, i32 3
  store double %128, double* %163, align 8
  %164 = load i64, i64* %6, align 8
  %165 = add i64 %164, 1
  store i64 %165, i64* %6, align 8
  br label %166

166:                                              ; preds = %122, %157, %159, %153, %7
  ret void
}

declare hidden double @BrotliPopulationCostDistance(%struct.HistogramDistance*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @BrotliHistogramCombineDistance(%struct.HistogramDistance* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, %struct.HistogramPair*, i64, i64, i64, i64) local_unnamed_addr #0 {
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #4
  store i64 0, i64* %10, align 8
  %12 = icmp eq i64 %5, 0
  br i1 %12, label %284, label %30

13:                                               ; preds = %36, %30
  %14 = icmp eq i64 %32, %5
  br i1 %14, label %15, label %30

15:                                               ; preds = %13
  %16 = icmp ugt i64 %5, 1
  br i1 %16, label %17, label %284

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 0, i32 3
  %19 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 0, i32 0
  %20 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 0, i32 1
  %21 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 0, i32 2
  %22 = bitcast double* %21 to i64*
  %23 = icmp eq i64 %6, 0
  %24 = bitcast %struct.HistogramPair* %4 to i8*
  %25 = getelementptr %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 0, i32 1
  %26 = getelementptr %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 0, i32 1
  %27 = icmp ult i64 %6, 8
  %28 = and i64 %6, -8
  %29 = icmp eq i64 %28, %6
  br label %43

30:                                               ; preds = %9, %13
  %31 = phi i64 [ %32, %13 ], [ 0, %9 ]
  %32 = add nuw i64 %31, 1
  %33 = icmp ult i64 %32, %5
  br i1 %33, label %34, label %13

34:                                               ; preds = %30
  %35 = getelementptr inbounds i32, i32* %3, i64 %31
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ %32, %34 ], [ %41, %36 ]
  %38 = load i32, i32* %35, align 4
  %39 = getelementptr inbounds i32, i32* %3, i64 %37
  %40 = load i32, i32* %39, align 4
  call void @BrotliCompareAndPushToQueueDistance(%struct.HistogramDistance* %0, i32* %1, i32 %38, i32 %40, i64 %8, %struct.HistogramPair* %4, i64* nonnull %10)
  %41 = add i64 %37, 1
  %42 = icmp eq i64 %41, %5
  br i1 %42, label %13, label %36

43:                                               ; preds = %17, %279
  %44 = phi i64 [ %5, %17 ], [ %282, %279 ]
  %45 = phi double [ 0.000000e+00, %17 ], [ %281, %279 ]
  %46 = phi i64 [ 1, %17 ], [ %280, %279 ]
  %47 = load double, double* %18, align 8
  %48 = fcmp ult double %47, %45
  br i1 %48, label %49, label %279

49:                                               ; preds = %43
  %50 = load i32, i32* %19, align 8
  %51 = load i32, i32* %20, align 4
  %52 = zext i32 %50 to i64
  %53 = zext i32 %51 to i64
  %54 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %53, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %52, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %57, %55
  store i64 %58, i64* %56, align 8
  %59 = getelementptr %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %52
  %60 = mul nuw nsw i64 %52, 274
  %61 = getelementptr i64, i64* %25, i64 %60
  %62 = getelementptr %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %53
  %63 = mul nuw nsw i64 %53, 274
  %64 = getelementptr i64, i64* %26, i64 %63
  %65 = bitcast i64* %64 to %struct.HistogramDistance*
  %66 = icmp ult %struct.HistogramDistance* %59, %65
  %67 = bitcast i64* %61 to %struct.HistogramDistance*
  %68 = icmp ult %struct.HistogramDistance* %62, %67
  %69 = and i1 %66, %68
  br i1 %69, label %107, label %70

70:                                               ; preds = %49, %70
  %71 = phi i64 [ %105, %70 ], [ 0, %49 ]
  %72 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %53, i32 0, i64 %71
  %73 = bitcast i32* %72 to <4 x i32>*
  %74 = load <4 x i32>, <4 x i32>* %73, align 4, !alias.scope !56
  %75 = getelementptr inbounds i32, i32* %72, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  %77 = load <4 x i32>, <4 x i32>* %76, align 4, !alias.scope !56
  %78 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %52, i32 0, i64 %71
  %79 = bitcast i32* %78 to <4 x i32>*
  %80 = load <4 x i32>, <4 x i32>* %79, align 4, !alias.scope !59, !noalias !56
  %81 = getelementptr inbounds i32, i32* %78, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  %83 = load <4 x i32>, <4 x i32>* %82, align 4, !alias.scope !59, !noalias !56
  %84 = add <4 x i32> %80, %74
  %85 = add <4 x i32> %83, %77
  %86 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %84, <4 x i32>* %86, align 4, !alias.scope !59, !noalias !56
  %87 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> %85, <4 x i32>* %87, align 4, !alias.scope !59, !noalias !56
  %88 = or i64 %71, 8
  %89 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %53, i32 0, i64 %88
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4, !alias.scope !56
  %92 = getelementptr inbounds i32, i32* %89, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4, !alias.scope !56
  %95 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %52, i32 0, i64 %88
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !59, !noalias !56
  %98 = getelementptr inbounds i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !59, !noalias !56
  %101 = add <4 x i32> %97, %91
  %102 = add <4 x i32> %100, %94
  %103 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %103, align 4, !alias.scope !59, !noalias !56
  %104 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %104, align 4, !alias.scope !59, !noalias !56
  %105 = add nuw nsw i64 %71, 16
  %106 = icmp eq i64 %105, 544
  br i1 %106, label %122, label %70, !llvm.loop !61

107:                                              ; preds = %49, %107
  %108 = phi i64 [ %120, %107 ], [ 0, %49 ]
  %109 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %53, i32 0, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %52, i32 0, i64 %108
  %112 = load i32, i32* %111, align 4
  %113 = add i32 %112, %110
  store i32 %113, i32* %111, align 4
  %114 = or i64 %108, 1
  %115 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %53, i32 0, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %52, i32 0, i64 %114
  %118 = load i32, i32* %117, align 4
  %119 = add i32 %118, %116
  store i32 %119, i32* %117, align 4
  %120 = add nuw nsw i64 %108, 2
  %121 = icmp eq i64 %120, 544
  br i1 %121, label %122, label %107, !llvm.loop !62

122:                                              ; preds = %70, %107
  %123 = load i64, i64* %22, align 8
  %124 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %52, i32 2
  %125 = bitcast double* %124 to i64*
  store i64 %123, i64* %125, align 8
  %126 = getelementptr inbounds i32, i32* %1, i64 %53
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds i32, i32* %1, i64 %52
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, %127
  store i32 %130, i32* %128, align 4
  br i1 %23, label %190, label %131

131:                                              ; preds = %122
  br i1 %27, label %132, label %134

132:                                              ; preds = %189, %131
  %133 = phi i64 [ 0, %131 ], [ %28, %189 ]
  br label %192

134:                                              ; preds = %131
  %135 = insertelement <4 x i32> undef, i32 %51, i32 0
  %136 = shufflevector <4 x i32> %135, <4 x i32> undef, <4 x i32> zeroinitializer
  %137 = insertelement <4 x i32> undef, i32 %51, i32 0
  %138 = shufflevector <4 x i32> %137, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %139

139:                                              ; preds = %186, %134
  %140 = phi i64 [ 0, %134 ], [ %187, %186 ]
  %141 = getelementptr inbounds i32, i32* %2, i64 %140
  %142 = bitcast i32* %141 to <4 x i32>*
  %143 = load <4 x i32>, <4 x i32>* %142, align 4
  %144 = getelementptr inbounds i32, i32* %141, i64 4
  %145 = bitcast i32* %144 to <4 x i32>*
  %146 = load <4 x i32>, <4 x i32>* %145, align 4
  %147 = icmp eq <4 x i32> %143, %136
  %148 = icmp eq <4 x i32> %146, %138
  %149 = extractelement <4 x i1> %147, i32 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %139
  store i32 %50, i32* %141, align 4
  br label %151

151:                                              ; preds = %150, %139
  %152 = extractelement <4 x i1> %147, i32 1
  br i1 %152, label %153, label %156

153:                                              ; preds = %151
  %154 = or i64 %140, 1
  %155 = getelementptr inbounds i32, i32* %2, i64 %154
  store i32 %50, i32* %155, align 4
  br label %156

156:                                              ; preds = %153, %151
  %157 = extractelement <4 x i1> %147, i32 2
  br i1 %157, label %158, label %161

158:                                              ; preds = %156
  %159 = or i64 %140, 2
  %160 = getelementptr inbounds i32, i32* %2, i64 %159
  store i32 %50, i32* %160, align 4
  br label %161

161:                                              ; preds = %158, %156
  %162 = extractelement <4 x i1> %147, i32 3
  br i1 %162, label %163, label %166

163:                                              ; preds = %161
  %164 = or i64 %140, 3
  %165 = getelementptr inbounds i32, i32* %2, i64 %164
  store i32 %50, i32* %165, align 4
  br label %166

166:                                              ; preds = %163, %161
  %167 = extractelement <4 x i1> %148, i32 0
  br i1 %167, label %168, label %171

168:                                              ; preds = %166
  %169 = or i64 %140, 4
  %170 = getelementptr inbounds i32, i32* %2, i64 %169
  store i32 %50, i32* %170, align 4
  br label %171

171:                                              ; preds = %168, %166
  %172 = extractelement <4 x i1> %148, i32 1
  br i1 %172, label %173, label %176

173:                                              ; preds = %171
  %174 = or i64 %140, 5
  %175 = getelementptr inbounds i32, i32* %2, i64 %174
  store i32 %50, i32* %175, align 4
  br label %176

176:                                              ; preds = %173, %171
  %177 = extractelement <4 x i1> %148, i32 2
  br i1 %177, label %178, label %181

178:                                              ; preds = %176
  %179 = or i64 %140, 6
  %180 = getelementptr inbounds i32, i32* %2, i64 %179
  store i32 %50, i32* %180, align 4
  br label %181

181:                                              ; preds = %178, %176
  %182 = extractelement <4 x i1> %148, i32 3
  br i1 %182, label %183, label %186

183:                                              ; preds = %181
  %184 = or i64 %140, 7
  %185 = getelementptr inbounds i32, i32* %2, i64 %184
  store i32 %50, i32* %185, align 4
  br label %186

186:                                              ; preds = %183, %181
  %187 = add i64 %140, 8
  %188 = icmp eq i64 %187, %28
  br i1 %188, label %189, label %139, !llvm.loop !63

189:                                              ; preds = %186
  br i1 %29, label %190, label %132

190:                                              ; preds = %198, %189, %122
  %191 = icmp eq i64 %44, 0
  br i1 %191, label %218, label %201

192:                                              ; preds = %132, %198
  %193 = phi i64 [ %199, %198 ], [ %133, %132 ]
  %194 = getelementptr inbounds i32, i32* %2, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = icmp eq i32 %195, %51
  br i1 %196, label %197, label %198

197:                                              ; preds = %192
  store i32 %50, i32* %194, align 4
  br label %198

198:                                              ; preds = %192, %197
  %199 = add nuw i64 %193, 1
  %200 = icmp eq i64 %199, %6
  br i1 %200, label %190, label %192, !llvm.loop !64

201:                                              ; preds = %190, %215
  %202 = phi i64 [ %216, %215 ], [ 0, %190 ]
  %203 = getelementptr inbounds i32, i32* %3, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, %51
  br i1 %205, label %206, label %215

206:                                              ; preds = %201
  %207 = getelementptr inbounds i32, i32* %3, i64 %202
  %208 = bitcast i32* %207 to i8*
  %209 = add nuw i64 %202, 1
  %210 = getelementptr inbounds i32, i32* %3, i64 %209
  %211 = bitcast i32* %210 to i8*
  %212 = xor i64 %202, 4611686018427387903
  %213 = add i64 %212, %44
  %214 = shl i64 %213, 2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %208, i8* align 4 %211, i64 %214, i1 false)
  br label %218

215:                                              ; preds = %201
  %216 = add nuw i64 %202, 1
  %217 = icmp eq i64 %216, %44
  br i1 %217, label %218, label %201

218:                                              ; preds = %215, %190, %206
  %219 = add i64 %44, -1
  %220 = load i64, i64* %10, align 8
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %270, label %222

222:                                              ; preds = %218, %266
  %223 = phi i64 [ %267, %266 ], [ 0, %218 ]
  %224 = phi i64 [ %268, %266 ], [ 0, %218 ]
  %225 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %224
  %226 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %225, i64 0, i32 0
  %227 = load i32, i32* %226, align 8
  %228 = icmp eq i32 %227, %50
  br i1 %228, label %266, label %229

229:                                              ; preds = %222
  %230 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %224, i32 1
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %231, %50
  %233 = icmp eq i32 %227, %51
  %234 = or i1 %233, %232
  %235 = icmp eq i32 %231, %51
  %236 = or i1 %235, %234
  br i1 %236, label %266, label %237

237:                                              ; preds = %229
  %238 = load double, double* %18, align 8
  %239 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %224, i32 3
  %240 = load double, double* %239, align 8
  %241 = fcmp une double %238, %240
  br i1 %241, label %242, label %244

242:                                              ; preds = %237
  %243 = fcmp ogt double %238, %240
  br i1 %243, label %250, label %260

244:                                              ; preds = %237
  %245 = load i32, i32* %20, align 4
  %246 = load i32, i32* %19, align 8
  %247 = sub i32 %245, %246
  %248 = sub i32 %231, %227
  %249 = icmp ugt i32 %247, %248
  br i1 %249, label %250, label %260

250:                                              ; preds = %242, %244
  %251 = load i32, i32* %19, align 8
  %252 = load i32, i32* %20, align 4
  %253 = load i64, i64* %22, align 8
  %254 = bitcast %struct.HistogramPair* %225 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %254, i64 24, i1 false)
  %255 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %223, i32 0
  store i32 %251, i32* %255, align 8
  %256 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %223, i32 1
  store i32 %252, i32* %256, align 4
  %257 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %223, i32 2
  %258 = bitcast double* %257 to i64*
  store i64 %253, i64* %258, align 8
  %259 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %223, i32 3
  store double %238, double* %259, align 8
  br label %264

260:                                              ; preds = %242, %244
  %261 = getelementptr inbounds %struct.HistogramPair, %struct.HistogramPair* %4, i64 %223
  %262 = bitcast %struct.HistogramPair* %261 to i8*
  %263 = bitcast %struct.HistogramPair* %225 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 8 %263, i64 24, i1 false)
  br label %264

264:                                              ; preds = %260, %250
  %265 = add i64 %223, 1
  br label %266

266:                                              ; preds = %222, %229, %264
  %267 = phi i64 [ %265, %264 ], [ %223, %229 ], [ %223, %222 ]
  %268 = add nuw i64 %224, 1
  %269 = icmp ult i64 %268, %220
  br i1 %269, label %222, label %270

270:                                              ; preds = %266, %218
  %271 = phi i64 [ 0, %218 ], [ %267, %266 ]
  store i64 %271, i64* %10, align 8
  %272 = icmp eq i64 %219, 0
  br i1 %272, label %284, label %273

273:                                              ; preds = %270, %273
  %274 = phi i64 [ %277, %273 ], [ 0, %270 ]
  %275 = getelementptr inbounds i32, i32* %3, i64 %274
  %276 = load i32, i32* %275, align 4
  call void @BrotliCompareAndPushToQueueDistance(%struct.HistogramDistance* %0, i32* %1, i32 %50, i32 %276, i64 %8, %struct.HistogramPair* %4, i64* nonnull %10)
  %277 = add nuw i64 %274, 1
  %278 = icmp eq i64 %277, %219
  br i1 %278, label %279, label %273

279:                                              ; preds = %273, %43
  %280 = phi i64 [ %7, %43 ], [ %46, %273 ]
  %281 = phi double [ 0x547D42AEA2879F2E, %43 ], [ %45, %273 ]
  %282 = phi i64 [ %44, %43 ], [ %219, %273 ]
  %283 = icmp ugt i64 %282, %280
  br i1 %283, label %43, label %284

284:                                              ; preds = %270, %279, %9, %15
  %285 = phi i64 [ %5, %15 ], [ 0, %9 ], [ 0, %270 ], [ %282, %279 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #4
  ret i64 %285
}

; Function Attrs: nounwind ssp uwtable
define hidden double @BrotliHistogramBitCostDistanceDistance(%struct.HistogramDistance* nocapture readonly, %struct.HistogramDistance* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %struct.HistogramDistance, align 8
  %4 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %57, label %7

7:                                                ; preds = %2
  %8 = bitcast %struct.HistogramDistance* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2192, i8* nonnull %8) #4
  %9 = bitcast %struct.HistogramDistance* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %9, i64 2192, i1 false)
  %10 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %3, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %11
  store i64 %14, i64* %12, align 8
  br label %15

15:                                               ; preds = %15, %7
  %16 = phi i64 [ 0, %7 ], [ %50, %15 ]
  %17 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %1, i64 0, i32 0, i64 %16
  %18 = bitcast i32* %17 to <4 x i32>*
  %19 = load <4 x i32>, <4 x i32>* %18, align 4
  %20 = getelementptr inbounds i32, i32* %17, i64 4
  %21 = bitcast i32* %20 to <4 x i32>*
  %22 = load <4 x i32>, <4 x i32>* %21, align 4
  %23 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %3, i64 0, i32 0, i64 %16
  %24 = bitcast i32* %23 to <4 x i32>*
  %25 = load <4 x i32>, <4 x i32>* %24, align 8
  %26 = getelementptr inbounds i32, i32* %23, i64 4
  %27 = bitcast i32* %26 to <4 x i32>*
  %28 = load <4 x i32>, <4 x i32>* %27, align 8
  %29 = add <4 x i32> %25, %19
  %30 = add <4 x i32> %28, %22
  %31 = bitcast i32* %23 to <4 x i32>*
  store <4 x i32> %29, <4 x i32>* %31, align 8
  %32 = bitcast i32* %26 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %32, align 8
  %33 = or i64 %16, 8
  %34 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %1, i64 0, i32 0, i64 %33
  %35 = bitcast i32* %34 to <4 x i32>*
  %36 = load <4 x i32>, <4 x i32>* %35, align 4
  %37 = getelementptr inbounds i32, i32* %34, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  %39 = load <4 x i32>, <4 x i32>* %38, align 4
  %40 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %3, i64 0, i32 0, i64 %33
  %41 = bitcast i32* %40 to <4 x i32>*
  %42 = load <4 x i32>, <4 x i32>* %41, align 8
  %43 = getelementptr inbounds i32, i32* %40, i64 4
  %44 = bitcast i32* %43 to <4 x i32>*
  %45 = load <4 x i32>, <4 x i32>* %44, align 8
  %46 = add <4 x i32> %42, %36
  %47 = add <4 x i32> %45, %39
  %48 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> %46, <4 x i32>* %48, align 8
  %49 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %47, <4 x i32>* %49, align 8
  %50 = add nuw nsw i64 %16, 16
  %51 = icmp eq i64 %50, 544
  br i1 %51, label %52, label %15, !llvm.loop !65

52:                                               ; preds = %15
  %53 = call double @BrotliPopulationCostDistance(%struct.HistogramDistance* nonnull %3) #4
  %54 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %1, i64 0, i32 2
  %55 = load double, double* %54, align 8
  %56 = fsub double %53, %55
  call void @llvm.lifetime.end.p0i8(i64 2192, i8* nonnull %8) #4
  br label %57

57:                                               ; preds = %2, %52
  %58 = phi double [ %56, %52 ], [ 0.000000e+00, %2 ]
  ret double %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @BrotliHistogramRemapDistance(%struct.HistogramDistance* nocapture readonly, i64, i32* nocapture readonly, i64, %struct.HistogramDistance* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %7 = alloca %struct.HistogramDistance, align 8
  %8 = alloca %struct.HistogramDistance, align 8
  %9 = icmp eq i64 %1, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = bitcast %struct.HistogramDistance* %8 to i8*
  %12 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %8, i64 0, i32 1
  %13 = icmp eq i64 %3, 0
  %14 = bitcast %struct.HistogramDistance* %7 to i8*
  %15 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %7, i64 0, i32 1
  br label %23

16:                                               ; preds = %153, %6
  %17 = icmp eq i64 %3, 0
  br i1 %17, label %168, label %18

18:                                               ; preds = %16
  %19 = and i64 %3, 1
  %20 = icmp eq i64 %3, 1
  br i1 %20, label %158, label %21

21:                                               ; preds = %18
  %22 = sub i64 %3, %19
  br label %171

23:                                               ; preds = %153, %10
  %24 = phi i64 [ 0, %10 ], [ %156, %153 ]
  %25 = icmp eq i64 %24, 0
  %26 = add i64 %24, -1
  %27 = getelementptr inbounds i32, i32* %5, i64 %26
  %28 = select i1 %25, i32* %5, i32* %27
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %24
  %31 = zext i32 %29 to i64
  %32 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %24, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %83, label %35

35:                                               ; preds = %23
  call void @llvm.lifetime.start.p0i8(i64 2192, i8* nonnull %11) #4
  %36 = bitcast %struct.HistogramDistance* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %36, i64 2192, i1 false) #4
  %37 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %31, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = load i64, i64* %12, align 8
  %40 = add i64 %39, %38
  store i64 %40, i64* %12, align 8
  br label %41

41:                                               ; preds = %41, %35
  %42 = phi i64 [ 0, %35 ], [ %76, %41 ]
  %43 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %31, i32 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  %45 = load <4 x i32>, <4 x i32>* %44, align 4
  %46 = getelementptr inbounds i32, i32* %43, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  %48 = load <4 x i32>, <4 x i32>* %47, align 4
  %49 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %8, i64 0, i32 0, i64 %42
  %50 = bitcast i32* %49 to <4 x i32>*
  %51 = load <4 x i32>, <4 x i32>* %50, align 8
  %52 = getelementptr inbounds i32, i32* %49, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  %54 = load <4 x i32>, <4 x i32>* %53, align 8
  %55 = add <4 x i32> %51, %45
  %56 = add <4 x i32> %54, %48
  %57 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> %55, <4 x i32>* %57, align 8
  %58 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> %56, <4 x i32>* %58, align 8
  %59 = or i64 %42, 8
  %60 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %31, i32 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  %62 = load <4 x i32>, <4 x i32>* %61, align 4
  %63 = getelementptr inbounds i32, i32* %60, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  %65 = load <4 x i32>, <4 x i32>* %64, align 4
  %66 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %8, i64 0, i32 0, i64 %59
  %67 = bitcast i32* %66 to <4 x i32>*
  %68 = load <4 x i32>, <4 x i32>* %67, align 8
  %69 = getelementptr inbounds i32, i32* %66, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  %71 = load <4 x i32>, <4 x i32>* %70, align 8
  %72 = add <4 x i32> %68, %62
  %73 = add <4 x i32> %71, %65
  %74 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %74, align 8
  %75 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> %73, <4 x i32>* %75, align 8
  %76 = add nuw nsw i64 %42, 16
  %77 = icmp eq i64 %76, 544
  br i1 %77, label %78, label %41, !llvm.loop !66

78:                                               ; preds = %41
  %79 = call double @BrotliPopulationCostDistance(%struct.HistogramDistance* nonnull %8) #4
  %80 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %31, i32 2
  %81 = load double, double* %80, align 8
  %82 = fsub double %79, %81
  call void @llvm.lifetime.end.p0i8(i64 2192, i8* nonnull %11) #4
  br label %83

83:                                               ; preds = %23, %78
  %84 = phi double [ %82, %78 ], [ 0.000000e+00, %23 ]
  br i1 %13, label %153, label %85

85:                                               ; preds = %83
  %86 = bitcast %struct.HistogramDistance* %30 to i8*
  br label %87

87:                                               ; preds = %148, %85
  %88 = phi i64 [ 0, %85 ], [ %151, %148 ]
  %89 = phi double [ %84, %85 ], [ %150, %148 ]
  %90 = phi i32 [ %29, %85 ], [ %149, %148 ]
  %91 = getelementptr inbounds i32, i32* %2, i64 %88
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  %94 = load i64, i64* %32, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %143, label %96

96:                                               ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 2192, i8* nonnull %14) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %86, i64 2192, i1 false) #4
  %97 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %93, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = load i64, i64* %15, align 8
  %100 = add i64 %99, %98
  store i64 %100, i64* %15, align 8
  br label %101

101:                                              ; preds = %101, %96
  %102 = phi i64 [ 0, %96 ], [ %136, %101 ]
  %103 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %93, i32 0, i64 %102
  %104 = bitcast i32* %103 to <4 x i32>*
  %105 = load <4 x i32>, <4 x i32>* %104, align 4
  %106 = getelementptr inbounds i32, i32* %103, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4
  %109 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %7, i64 0, i32 0, i64 %102
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 8
  %112 = getelementptr inbounds i32, i32* %109, i64 4
  %113 = bitcast i32* %112 to <4 x i32>*
  %114 = load <4 x i32>, <4 x i32>* %113, align 8
  %115 = add <4 x i32> %111, %105
  %116 = add <4 x i32> %114, %108
  %117 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %115, <4 x i32>* %117, align 8
  %118 = bitcast i32* %112 to <4 x i32>*
  store <4 x i32> %116, <4 x i32>* %118, align 8
  %119 = or i64 %102, 8
  %120 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %93, i32 0, i64 %119
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4
  %123 = getelementptr inbounds i32, i32* %120, i64 4
  %124 = bitcast i32* %123 to <4 x i32>*
  %125 = load <4 x i32>, <4 x i32>* %124, align 4
  %126 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %7, i64 0, i32 0, i64 %119
  %127 = bitcast i32* %126 to <4 x i32>*
  %128 = load <4 x i32>, <4 x i32>* %127, align 8
  %129 = getelementptr inbounds i32, i32* %126, i64 4
  %130 = bitcast i32* %129 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 8
  %132 = add <4 x i32> %128, %122
  %133 = add <4 x i32> %131, %125
  %134 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %132, <4 x i32>* %134, align 8
  %135 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %135, align 8
  %136 = add nuw nsw i64 %102, 16
  %137 = icmp eq i64 %136, 544
  br i1 %137, label %138, label %101, !llvm.loop !67

138:                                              ; preds = %101
  %139 = call double @BrotliPopulationCostDistance(%struct.HistogramDistance* nonnull %7) #4
  %140 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %93, i32 2
  %141 = load double, double* %140, align 8
  %142 = fsub double %139, %141
  call void @llvm.lifetime.end.p0i8(i64 2192, i8* nonnull %14) #4
  br label %143

143:                                              ; preds = %87, %138
  %144 = phi double [ %142, %138 ], [ 0.000000e+00, %87 ]
  %145 = fcmp olt double %144, %89
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  %147 = load i32, i32* %91, align 4
  br label %148

148:                                              ; preds = %146, %143
  %149 = phi i32 [ %147, %146 ], [ %90, %143 ]
  %150 = phi double [ %144, %146 ], [ %89, %143 ]
  %151 = add nuw i64 %88, 1
  %152 = icmp eq i64 %151, %3
  br i1 %152, label %153, label %87

153:                                              ; preds = %148, %83
  %154 = phi i32 [ %29, %83 ], [ %149, %148 ]
  %155 = getelementptr inbounds i32, i32* %5, i64 %24
  store i32 %154, i32* %155, align 4
  %156 = add nuw i64 %24, 1
  %157 = icmp eq i64 %156, %1
  br i1 %157, label %16, label %23

158:                                              ; preds = %171, %18
  %159 = phi i64 [ 0, %18 ], [ %187, %171 ]
  %160 = icmp eq i64 %19, 0
  br i1 %160, label %168, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds i32, i32* %2, i64 %159
  %163 = load i32, i32* %162, align 4
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %164
  %166 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %164, i32 2
  %167 = bitcast %struct.HistogramDistance* %165 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 2184, i1 false) #4
  store double 0x7FF0000000000000, double* %166, align 8
  br label %168

168:                                              ; preds = %161, %158, %16
  br i1 %9, label %265, label %169

169:                                              ; preds = %168
  %170 = getelementptr %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 0, i32 1
  br label %190

171:                                              ; preds = %171, %21
  %172 = phi i64 [ 0, %21 ], [ %187, %171 ]
  %173 = phi i64 [ %22, %21 ], [ %188, %171 ]
  %174 = getelementptr inbounds i32, i32* %2, i64 %172
  %175 = load i32, i32* %174, align 4
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %176
  %178 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %176, i32 2
  %179 = bitcast %struct.HistogramDistance* %177 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 2184, i1 false) #4
  store double 0x7FF0000000000000, double* %178, align 8
  %180 = or i64 %172, 1
  %181 = getelementptr inbounds i32, i32* %2, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %183
  %185 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %183, i32 2
  %186 = bitcast %struct.HistogramDistance* %184 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 2184, i1 false) #4
  store double 0x7FF0000000000000, double* %185, align 8
  %187 = add nuw i64 %172, 2
  %188 = add i64 %173, -2
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %158, label %171

190:                                              ; preds = %169, %262
  %191 = phi i64 [ %263, %262 ], [ 0, %169 ]
  %192 = getelementptr inbounds i32, i32* %5, i64 %191
  %193 = load i32, i32* %192, align 4
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %191, i32 1
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %194, i32 1
  %198 = load i64, i64* %197, align 8
  %199 = add i64 %198, %196
  store i64 %199, i64* %197, align 8
  %200 = getelementptr %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %191, i32 1
  %201 = getelementptr %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %191
  %202 = getelementptr %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %194
  %203 = mul nuw nsw i64 %194, 274
  %204 = getelementptr i64, i64* %170, i64 %203
  %205 = bitcast i64* %200 to %struct.HistogramDistance*
  %206 = icmp ult %struct.HistogramDistance* %202, %205
  %207 = bitcast i64* %204 to %struct.HistogramDistance*
  %208 = icmp ult %struct.HistogramDistance* %201, %207
  %209 = and i1 %206, %208
  br i1 %209, label %247, label %210

210:                                              ; preds = %190, %210
  %211 = phi i64 [ %245, %210 ], [ 0, %190 ]
  %212 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %191, i32 0, i64 %211
  %213 = bitcast i32* %212 to <4 x i32>*
  %214 = load <4 x i32>, <4 x i32>* %213, align 4, !alias.scope !68
  %215 = getelementptr inbounds i32, i32* %212, i64 4
  %216 = bitcast i32* %215 to <4 x i32>*
  %217 = load <4 x i32>, <4 x i32>* %216, align 4, !alias.scope !68
  %218 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %194, i32 0, i64 %211
  %219 = bitcast i32* %218 to <4 x i32>*
  %220 = load <4 x i32>, <4 x i32>* %219, align 4, !alias.scope !71, !noalias !68
  %221 = getelementptr inbounds i32, i32* %218, i64 4
  %222 = bitcast i32* %221 to <4 x i32>*
  %223 = load <4 x i32>, <4 x i32>* %222, align 4, !alias.scope !71, !noalias !68
  %224 = add <4 x i32> %220, %214
  %225 = add <4 x i32> %223, %217
  %226 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> %224, <4 x i32>* %226, align 4, !alias.scope !71, !noalias !68
  %227 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %225, <4 x i32>* %227, align 4, !alias.scope !71, !noalias !68
  %228 = or i64 %211, 8
  %229 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %191, i32 0, i64 %228
  %230 = bitcast i32* %229 to <4 x i32>*
  %231 = load <4 x i32>, <4 x i32>* %230, align 4, !alias.scope !68
  %232 = getelementptr inbounds i32, i32* %229, i64 4
  %233 = bitcast i32* %232 to <4 x i32>*
  %234 = load <4 x i32>, <4 x i32>* %233, align 4, !alias.scope !68
  %235 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %194, i32 0, i64 %228
  %236 = bitcast i32* %235 to <4 x i32>*
  %237 = load <4 x i32>, <4 x i32>* %236, align 4, !alias.scope !71, !noalias !68
  %238 = getelementptr inbounds i32, i32* %235, i64 4
  %239 = bitcast i32* %238 to <4 x i32>*
  %240 = load <4 x i32>, <4 x i32>* %239, align 4, !alias.scope !71, !noalias !68
  %241 = add <4 x i32> %237, %231
  %242 = add <4 x i32> %240, %234
  %243 = bitcast i32* %235 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %243, align 4, !alias.scope !71, !noalias !68
  %244 = bitcast i32* %238 to <4 x i32>*
  store <4 x i32> %242, <4 x i32>* %244, align 4, !alias.scope !71, !noalias !68
  %245 = add nuw nsw i64 %211, 16
  %246 = icmp eq i64 %245, 544
  br i1 %246, label %262, label %210, !llvm.loop !73

247:                                              ; preds = %190, %247
  %248 = phi i64 [ %260, %247 ], [ 0, %190 ]
  %249 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %191, i32 0, i64 %248
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %194, i32 0, i64 %248
  %252 = load i32, i32* %251, align 4
  %253 = add i32 %252, %250
  store i32 %253, i32* %251, align 4
  %254 = or i64 %248, 1
  %255 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %0, i64 %191, i32 0, i64 %254
  %256 = load i32, i32* %255, align 4
  %257 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %194, i32 0, i64 %254
  %258 = load i32, i32* %257, align 4
  %259 = add i32 %258, %256
  store i32 %259, i32* %257, align 4
  %260 = add nuw nsw i64 %248, 2
  %261 = icmp eq i64 %260, 544
  br i1 %261, label %262, label %247, !llvm.loop !74

262:                                              ; preds = %210, %247
  %263 = add nuw i64 %191, 1
  %264 = icmp eq i64 %263, %1
  br i1 %264, label %265, label %190

265:                                              ; preds = %262, %168
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @BrotliHistogramReindexDistance(%struct.MemoryManager*, %struct.HistogramDistance* nocapture, i32* nocapture, i64) local_unnamed_addr #0 {
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %86, label %6

6:                                                ; preds = %4
  %7 = shl i64 %3, 2
  %8 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %7) #4
  %9 = bitcast i8* %8 to i32*
  %10 = shl nuw i64 %3, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 -1, i64 %10, i1 false)
  %11 = and i64 %3, 1
  %12 = icmp eq i64 %3, 1
  br i1 %12, label %36, label %13

13:                                               ; preds = %6
  %14 = sub i64 %3, %11
  br label %15

15:                                               ; preds = %125, %13
  %16 = phi i64 [ 0, %13 ], [ %127, %125 ]
  %17 = phi i32 [ 0, %13 ], [ %126, %125 ]
  %18 = phi i64 [ %14, %13 ], [ %128, %125 ]
  %19 = getelementptr inbounds i32, i32* %2, i64 %16
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %9, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %25, label %27

25:                                               ; preds = %15
  store i32 %17, i32* %22, align 4
  %26 = add i32 %17, 1
  br label %27

27:                                               ; preds = %15, %25
  %28 = phi i32 [ %26, %25 ], [ %17, %15 ]
  %29 = or i64 %16, 1
  %30 = getelementptr inbounds i32, i32* %2, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i32, i32* %9, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %123, label %125

36:                                               ; preds = %125, %6
  %37 = phi i32 [ undef, %6 ], [ %126, %125 ]
  %38 = phi i64 [ 0, %6 ], [ %127, %125 ]
  %39 = phi i32 [ 0, %6 ], [ %126, %125 ]
  %40 = icmp eq i64 %11, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds i32, i32* %2, i64 %38
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %9, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  store i32 %39, i32* %45, align 4
  %49 = add i32 %39, 1
  br label %50

50:                                               ; preds = %48, %41, %36
  %51 = phi i32 [ %37, %36 ], [ %49, %48 ], [ %39, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = zext i32 %51 to i64
  %55 = mul nuw nsw i64 %54, 2192
  %56 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %55) #4
  %57 = bitcast i8* %56 to %struct.HistogramDistance*
  br label %58

58:                                               ; preds = %50, %53
  %59 = phi i8* [ %56, %53 ], [ null, %50 ]
  %60 = phi %struct.HistogramDistance* [ %57, %53 ], [ null, %50 ]
  br i1 %5, label %86, label %61

61:                                               ; preds = %58, %81
  %62 = phi i64 [ %84, %81 ], [ 0, %58 ]
  %63 = phi i32 [ %83, %81 ], [ 0, %58 ]
  %64 = getelementptr inbounds i32, i32* %2, i64 %62
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i32, i32* %9, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %63
  br i1 %69, label %70, label %81

70:                                               ; preds = %61
  %71 = zext i32 %63 to i64
  %72 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %60, i64 %71
  %73 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %1, i64 %66
  %74 = bitcast %struct.HistogramDistance* %72 to i8*
  %75 = bitcast %struct.HistogramDistance* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 2192, i1 false)
  %76 = add i32 %63, 1
  %77 = load i32, i32* %64, align 4
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i32, i32* %9, i64 %78
  %80 = load i32, i32* %79, align 4
  br label %81

81:                                               ; preds = %70, %61
  %82 = phi i32 [ %80, %70 ], [ %68, %61 ]
  %83 = phi i32 [ %76, %70 ], [ %63, %61 ]
  store i32 %82, i32* %64, align 4
  %84 = add nuw i64 %62, 1
  %85 = icmp eq i64 %84, %3
  br i1 %85, label %89, label %61

86:                                               ; preds = %58, %4
  %87 = phi i8* [ %59, %58 ], [ null, %4 ]
  %88 = phi i8* [ %8, %58 ], [ null, %4 ]
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %88) #4
  br label %120

89:                                               ; preds = %81
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %8) #4
  %90 = zext i32 %83 to i64
  %91 = icmp eq i32 %83, 0
  br i1 %91, label %120, label %92

92:                                               ; preds = %89
  %93 = and i64 %90, 1
  %94 = icmp eq i32 %83, 1
  br i1 %94, label %112, label %95

95:                                               ; preds = %92
  %96 = sub nsw i64 %90, %93
  br label %97

97:                                               ; preds = %97, %95
  %98 = phi i64 [ 0, %95 ], [ %109, %97 ]
  %99 = phi i64 [ %96, %95 ], [ %110, %97 ]
  %100 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %1, i64 %98
  %101 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %60, i64 %98
  %102 = bitcast %struct.HistogramDistance* %100 to i8*
  %103 = bitcast %struct.HistogramDistance* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 2192, i1 false)
  %104 = or i64 %98, 1
  %105 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %1, i64 %104
  %106 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %60, i64 %104
  %107 = bitcast %struct.HistogramDistance* %105 to i8*
  %108 = bitcast %struct.HistogramDistance* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 2192, i1 false)
  %109 = add nuw nsw i64 %98, 2
  %110 = add i64 %99, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %97

112:                                              ; preds = %97, %92
  %113 = phi i64 [ 0, %92 ], [ %109, %97 ]
  %114 = icmp eq i64 %93, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %1, i64 %113
  %117 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %60, i64 %113
  %118 = bitcast %struct.HistogramDistance* %116 to i8*
  %119 = bitcast %struct.HistogramDistance* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 2192, i1 false)
  br label %120

120:                                              ; preds = %115, %112, %86, %89
  %121 = phi i64 [ 0, %86 ], [ 0, %89 ], [ %90, %112 ], [ %90, %115 ]
  %122 = phi i8* [ %87, %86 ], [ %59, %89 ], [ %59, %112 ], [ %59, %115 ]
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %122) #4
  ret i64 %121

123:                                              ; preds = %27
  store i32 %28, i32* %33, align 4
  %124 = add i32 %28, 1
  br label %125

125:                                              ; preds = %123, %27
  %126 = phi i32 [ %124, %123 ], [ %28, %27 ]
  %127 = add nuw i64 %16, 2
  %128 = add i64 %18, -2
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %36, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @BrotliClusterHistogramsDistance(%struct.MemoryManager*, %struct.HistogramDistance*, i64, i64, %struct.HistogramDistance* nocapture, i64* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %8 = icmp eq i64 %2, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %7
  %10 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 49176) #4
  %11 = bitcast i8* %10 to %struct.HistogramPair*
  br label %208

12:                                               ; preds = %7
  %13 = shl i64 %2, 2
  %14 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %13) #4
  %15 = bitcast i8* %14 to i32*
  %16 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %13) #4
  %17 = bitcast i8* %16 to i32*
  %18 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 49176) #4
  %19 = bitcast i8* %18 to %struct.HistogramPair*
  %20 = icmp ult i64 %2, 8
  br i1 %20, label %21, label %23

21:                                               ; preds = %90, %12
  %22 = phi i64 [ 0, %12 ], [ %24, %90 ]
  br label %93

23:                                               ; preds = %12
  %24 = and i64 %2, -8
  %25 = add i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds i32, i32* %15, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 4
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 4
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds i32, i32* %15, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 4
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 4
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds i32, i32* %15, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 4
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 4
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds i32, i32* %15, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 4
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 4
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds i32, i32* %15, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 4
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 4
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds i32, i32* %15, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 4
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 4
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds i32, i32* %15, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 4
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 4
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds i32, i32* %15, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 4
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 4
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !75

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds i32, i32* %15, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 4
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 4
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !76

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %2
  br i1 %91, label %92, label %21

92:                                               ; preds = %93, %90
  br i1 %8, label %208, label %99

93:                                               ; preds = %21, %93
  %94 = phi i64 [ %96, %93 ], [ %22, %21 ]
  %95 = getelementptr inbounds i32, i32* %15, i64 %94
  store i32 1, i32* %95, align 4
  %96 = add nuw i64 %94, 1
  %97 = icmp eq i64 %96, %2
  br i1 %97, label %92, label %93, !llvm.loop !77

98:                                               ; preds = %99
  br i1 %8, label %208, label %111

99:                                               ; preds = %92, %99
  %100 = phi i64 [ %109, %99 ], [ 0, %92 ]
  %101 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %100
  %102 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %1, i64 %100
  %103 = bitcast %struct.HistogramDistance* %101 to i8*
  %104 = bitcast %struct.HistogramDistance* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 2192, i1 false)
  %105 = tail call double @BrotliPopulationCostDistance(%struct.HistogramDistance* %102) #4
  %106 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %4, i64 %100, i32 2
  store double %105, double* %106, align 8
  %107 = trunc i64 %100 to i32
  %108 = getelementptr inbounds i32, i32* %6, i64 %100
  store i32 %107, i32* %108, align 4
  %109 = add nuw i64 %100, 1
  %110 = icmp eq i64 %109, %2
  br i1 %110, label %98, label %99

111:                                              ; preds = %98, %200
  %112 = phi i64 [ %207, %200 ], [ 0, %98 ]
  %113 = phi i64 [ %205, %200 ], [ 0, %98 ]
  %114 = phi i64 [ %204, %200 ], [ 0, %98 ]
  %115 = mul i64 %112, -64
  %116 = add i64 %115, %2
  %117 = icmp ult i64 %116, 64
  %118 = select i1 %117, i64 %116, i64 64
  %119 = and i64 %118, 120
  %120 = add nsw i64 %119, -8
  %121 = lshr exact i64 %120, 3
  %122 = add nuw nsw i64 %121, 1
  %123 = mul i64 %112, -64
  %124 = add i64 %123, %2
  %125 = icmp ult i64 %124, 64
  %126 = select i1 %125, i64 %124, i64 64
  %127 = sub i64 %2, %113
  %128 = icmp ult i64 %127, 64
  %129 = select i1 %128, i64 %127, i64 64
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %200, label %131

131:                                              ; preds = %111
  %132 = icmp ult i64 %126, 8
  br i1 %132, label %190, label %133

133:                                              ; preds = %131
  %134 = and i64 %126, 120
  %135 = insertelement <4 x i64> undef, i64 %113, i32 0
  %136 = shufflevector <4 x i64> %135, <4 x i64> undef, <4 x i32> zeroinitializer
  %137 = insertelement <4 x i64> undef, i64 %113, i32 0
  %138 = shufflevector <4 x i64> %137, <4 x i64> undef, <4 x i32> zeroinitializer
  %139 = and i64 %122, 1
  %140 = icmp eq i64 %120, 0
  br i1 %140, label %173, label %141

141:                                              ; preds = %133
  %142 = sub nuw nsw i64 %122, %139
  br label %143

143:                                              ; preds = %143, %141
  %144 = phi i64 [ 0, %141 ], [ %169, %143 ]
  %145 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %141 ], [ %170, %143 ]
  %146 = phi i64 [ %142, %141 ], [ %171, %143 ]
  %147 = add <4 x i64> %145, <i64 4, i64 4, i64 4, i64 4>
  %148 = add <4 x i64> %145, %136
  %149 = add <4 x i64> %147, %138
  %150 = trunc <4 x i64> %148 to <4 x i32>
  %151 = trunc <4 x i64> %149 to <4 x i32>
  %152 = add i64 %144, %114
  %153 = getelementptr inbounds i32, i32* %17, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %150, <4 x i32>* %154, align 4
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> %151, <4 x i32>* %156, align 4
  %157 = or i64 %144, 8
  %158 = add <4 x i64> %145, <i64 8, i64 8, i64 8, i64 8>
  %159 = add <4 x i64> %145, <i64 12, i64 12, i64 12, i64 12>
  %160 = add <4 x i64> %158, %136
  %161 = add <4 x i64> %159, %138
  %162 = trunc <4 x i64> %160 to <4 x i32>
  %163 = trunc <4 x i64> %161 to <4 x i32>
  %164 = add i64 %157, %114
  %165 = getelementptr inbounds i32, i32* %17, i64 %164
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> %162, <4 x i32>* %166, align 4
  %167 = getelementptr inbounds i32, i32* %165, i64 4
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> %163, <4 x i32>* %168, align 4
  %169 = add i64 %144, 16
  %170 = add <4 x i64> %145, <i64 16, i64 16, i64 16, i64 16>
  %171 = add i64 %146, -2
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %143, !llvm.loop !78

173:                                              ; preds = %143, %133
  %174 = phi i64 [ 0, %133 ], [ %169, %143 ]
  %175 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %133 ], [ %170, %143 ]
  %176 = icmp eq i64 %139, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %173
  %178 = add <4 x i64> %175, <i64 4, i64 4, i64 4, i64 4>
  %179 = add <4 x i64> %175, %136
  %180 = add <4 x i64> %178, %138
  %181 = trunc <4 x i64> %179 to <4 x i32>
  %182 = trunc <4 x i64> %180 to <4 x i32>
  %183 = add i64 %174, %114
  %184 = getelementptr inbounds i32, i32* %17, i64 %183
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> %181, <4 x i32>* %185, align 4
  %186 = getelementptr inbounds i32, i32* %184, i64 4
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> %182, <4 x i32>* %187, align 4
  br label %188

188:                                              ; preds = %173, %177
  %189 = icmp eq i64 %126, %134
  br i1 %189, label %200, label %190

190:                                              ; preds = %188, %131
  %191 = phi i64 [ 0, %131 ], [ %134, %188 ]
  br label %192

192:                                              ; preds = %190, %192
  %193 = phi i64 [ %198, %192 ], [ %191, %190 ]
  %194 = add i64 %193, %113
  %195 = trunc i64 %194 to i32
  %196 = add i64 %193, %114
  %197 = getelementptr inbounds i32, i32* %17, i64 %196
  store i32 %195, i32* %197, align 4
  %198 = add nuw i64 %193, 1
  %199 = icmp ult i64 %198, %129
  br i1 %199, label %192, label %200, !llvm.loop !79

200:                                              ; preds = %192, %188, %111
  %201 = getelementptr inbounds i32, i32* %6, i64 %113
  %202 = getelementptr inbounds i32, i32* %17, i64 %114
  %203 = tail call i64 @BrotliHistogramCombineDistance(%struct.HistogramDistance* %4, i32* %15, i32* %201, i32* %202, %struct.HistogramPair* %19, i64 %129, i64 %129, i64 %3, i64 2048)
  %204 = add i64 %203, %114
  %205 = add i64 %113, 64
  %206 = icmp ult i64 %205, %2
  %207 = add i64 %112, 1
  br i1 %206, label %111, label %208

208:                                              ; preds = %200, %92, %9, %98
  %209 = phi %struct.HistogramPair* [ %19, %98 ], [ %19, %92 ], [ %11, %9 ], [ %19, %200 ]
  %210 = phi i8* [ %18, %98 ], [ %18, %92 ], [ %10, %9 ], [ %18, %200 ]
  %211 = phi i8* [ %16, %98 ], [ %16, %92 ], [ null, %9 ], [ %16, %200 ]
  %212 = phi i8* [ %14, %98 ], [ %14, %92 ], [ null, %9 ], [ %14, %200 ]
  %213 = phi i32* [ %17, %98 ], [ %17, %92 ], [ null, %9 ], [ %17, %200 ]
  %214 = phi i32* [ %15, %98 ], [ %15, %92 ], [ null, %9 ], [ %15, %200 ]
  %215 = phi i64 [ 0, %98 ], [ 0, %92 ], [ 0, %9 ], [ %204, %200 ]
  %216 = shl i64 %215, 6
  %217 = lshr i64 %215, 1
  %218 = mul i64 %217, %215
  %219 = icmp ult i64 %216, %218
  %220 = select i1 %219, i64 %216, i64 %218
  %221 = add i64 %220, 1
  %222 = icmp ugt i64 %221, 2048
  br i1 %222, label %223, label %236

223:                                              ; preds = %208, %223
  %224 = phi i64 [ %226, %223 ], [ 2048, %208 ]
  %225 = icmp ult i64 %224, %221
  %226 = shl i64 %224, 1
  br i1 %225, label %223, label %227

227:                                              ; preds = %223
  %228 = icmp eq i64 %224, 0
  br i1 %228, label %233, label %229

229:                                              ; preds = %227
  %230 = mul i64 %224, 24
  %231 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %230) #4
  %232 = bitcast i8* %231 to %struct.HistogramPair*
  br label %233

233:                                              ; preds = %229, %227
  %234 = phi i8* [ %231, %229 ], [ null, %227 ]
  %235 = phi %struct.HistogramPair* [ %232, %229 ], [ null, %227 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %234, i8* align 8 %210, i64 49152, i1 false)
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %210) #4
  br label %236

236:                                              ; preds = %233, %208
  %237 = phi i8* [ %234, %233 ], [ %210, %208 ]
  %238 = phi %struct.HistogramPair* [ %235, %233 ], [ %209, %208 ]
  %239 = tail call i64 @BrotliHistogramCombineDistance(%struct.HistogramDistance* %4, i32* %214, i32* %6, i32* %213, %struct.HistogramPair* %238, i64 %215, i64 %2, i64 %3, i64 %220)
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %237) #4
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %212) #4
  tail call void @BrotliHistogramRemapDistance(%struct.HistogramDistance* %1, i64 %2, i32* %213, i64 %239, %struct.HistogramDistance* %4, i32* %6)
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %211) #4
  %240 = tail call i64 @BrotliHistogramReindexDistance(%struct.MemoryManager* %0, %struct.HistogramDistance* %4, i32* %6, i64 %2)
  store i64 %240, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare double @log2(double) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !3}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !3}
!12 = distinct !{!12, !13, !3}
!13 = !{!"llvm.loop.unroll.runtime.disable"}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !3}
!16 = distinct !{!16, !3}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !3}
!23 = distinct !{!23, !3}
!24 = distinct !{!24, !3}
!25 = distinct !{!25, !26}
!26 = !{!"llvm.loop.unroll.disable"}
!27 = distinct !{!27, !13, !3}
!28 = distinct !{!28, !3}
!29 = distinct !{!29, !13, !3}
!30 = distinct !{!30, !3}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !3}
!37 = distinct !{!37, !3}
!38 = distinct !{!38, !3}
!39 = distinct !{!39, !13, !3}
!40 = distinct !{!40, !3}
!41 = distinct !{!41, !3}
!42 = distinct !{!42, !3}
!43 = !{!44}
!44 = distinct !{!44, !45}
!45 = distinct !{!45, !"LVerDomain"}
!46 = !{!47}
!47 = distinct !{!47, !45}
!48 = distinct !{!48, !3}
!49 = distinct !{!49, !3}
!50 = distinct !{!50, !3}
!51 = distinct !{!51, !26}
!52 = distinct !{!52, !13, !3}
!53 = distinct !{!53, !3}
!54 = distinct !{!54, !13, !3}
!55 = distinct !{!55, !3}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !3}
!62 = distinct !{!62, !3}
!63 = distinct !{!63, !3}
!64 = distinct !{!64, !13, !3}
!65 = distinct !{!65, !3}
!66 = distinct !{!66, !3}
!67 = distinct !{!67, !3}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !3}
!74 = distinct !{!74, !3}
!75 = distinct !{!75, !3}
!76 = distinct !{!76, !26}
!77 = distinct !{!77, !13, !3}
!78 = distinct !{!78, !3}
!79 = distinct !{!79, !13, !3}
