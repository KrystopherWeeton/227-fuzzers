; ModuleID = '../../third_party/pdfium/xfa/fxfa/cxfa_ffimage.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/cxfa_ffimage.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CXFA_FFImage = type { %class.CXFA_FFWidget }
%class.CXFA_FFWidget = type { %"class.CFWL_Widget::AdapterIface", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.0", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.2", %class.CFX_RectF }
%"class.CFWL_Widget::AdapterIface" = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.0" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.2" = type { %"class.cppgc::internal::MemberBase" }
%class.CFX_RectF = type { float, float, float, float }
%class.CXFA_Node = type { %class.CXFA_Object, %"class.fxjs::GCedTreeNodeMixin", i32, i8, i8, i8, %"class.pdfium::span.6", %"class.pdfium::span.8", i32, %"class.fxcrt::UnownedPtr.10", i8, i8, i8, i32, %"class.cppgc::internal::BasicMember.2", %"class.std::__1::vector", %"class.cppgc::internal::BasicMember.12", %"class.cppgc::internal::BasicMember.13" }
%class.CXFA_Object = type { i32 (...)**, i32, i16, %"class.fxcrt::StringViewTemplate", i32, %"class.cppgc::internal::BasicMember.4", %"class.cppgc::internal::BasicMember.5" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.cppgc::internal::BasicMember.4" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.5" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxjs::GCedTreeNodeMixin" = type { %"class.cppgc::GarbageCollectedMixin", %"class.fxcrt::TreeNode" }
%"class.fxcrt::TreeNode" = type { i32 (...)**, %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2" }
%"class.pdfium::span.6" = type { %"class.fxcrt::UnownedPtr.7", i64 }
%"class.fxcrt::UnownedPtr.7" = type { %"struct.CXFA_Node::PropertyData"* }
%"struct.CXFA_Node::PropertyData" = type { i16, i8, i8 }
%"class.pdfium::span.8" = type { %"class.fxcrt::UnownedPtr.9", i64 }
%"class.fxcrt::UnownedPtr.9" = type { %"struct.CXFA_Node::AttributeData"* }
%"struct.CXFA_Node::AttributeData" = type { i16, i8, i8* }
%"class.fxcrt::UnownedPtr.10" = type { %class.CFX_XMLNode* }
%class.CFX_XMLNode = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cppgc::internal::BasicMember.2"*, %"class.cppgc::internal::BasicMember.2"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BasicMember.2"* }
%"class.cppgc::internal::BasicMember.12" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.13" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned" }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr", %"class.std::__1::vector.17" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { i32*, i32*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i32* }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.22", %"class.fxcrt::UnownedPtr.26" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i8* }
%"class.fxcrt::UnownedPtr.26" = type { i8* }
%class.CXFA_FFDoc = type <{ %"class.fxcrt::UnownedPtr.28", %"class.fxcrt::UnownedPtr.29", %"class.fxcrt::UnownedPtr.30", %"class.fxcrt::UnownedPtr.31", %"class.cppgc::internal::BasicMember.32", %"class.cppgc::internal::BasicMember.33", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.0", %"class.std::__1::unique_ptr.35", %"class.std::__1::map", i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.28" = type { %class.IXFA_DocEnvironment* }
%class.IXFA_DocEnvironment = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.29" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%"class.fxcrt::UnownedPtr.30" = type { %"class.cppgc::Heap"* }
%"class.cppgc::Heap" = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.31" = type { %class.CFX_XMLDocument* }
%class.CFX_XMLDocument = type opaque
%"class.cppgc::internal::BasicMember.32" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.33" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.34" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.CFGAS_PDFFontMgr* }
%class.CFGAS_PDFFontMgr = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { i64 }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr.47", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.57" }
%"class.fxcrt::UnownedPtr.47" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.48" }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { float*, float*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { float* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.55", %"class.fxcrt::UnownedPtr.56" }
%"class.fxcrt::UnownedPtr.55" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type opaque
%"class.fxcrt::UnownedPtr.56" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type opaque
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"class.std::__1::unique_ptr.59"*, %"class.std::__1::unique_ptr.59"*, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::unique_ptr.59" = type opaque
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.std::__1::unique_ptr.59"* }
%class.CFX_STemplate = type { i32, i32 }
%class.CXFA_Margin = type opaque
%class.CXFA_Para = type { %class.CXFA_Node }
%class.CXFA_Value = type { %class.CXFA_Node }
%class.CXFA_Image = type { %class.CXFA_Node }
%"class.cppgc::Visitor" = type { i32 (...)** }
%class.CXFA_FFField = type opaque
%class.CFX_PTemplate = type { float, float }
%class.CFX_VTemplate = type opaque
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"class.fxcrt::WideString" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.65" }
%"class.fxcrt::RetainPtr.65" = type { %"class.std::__1::unique_ptr.66" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>

@_ZTV12CXFA_FFImage = hidden unnamed_addr constant { [53 x i8*] } { [53 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CXFA_FFWidget*, %"class.cppgc::Visitor"*)* @_ZNK13CXFA_FFWidget5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (void (%class.CXFA_FFImage*)* @_ZN12CXFA_FFImageD2Ev to i8*), i8* bitcast (void (%class.CXFA_FFImage*)* @_ZN12CXFA_FFImageD0Ev to i8*), i8* bitcast (void (%class.CFX_Matrix*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget15GetRotateMatrixEv to i8*), i8* bitcast (void (%class.CXFA_FFWidget*, i1, %class.CFX_RectF*)* @_ZN13CXFA_FFWidget12DisplayCaretEbPK9CFX_RectF to i8*), i8* bitcast (void (%class.CXFA_FFWidget*, i32*, float*)* @_ZN13CXFA_FFWidget26GetBorderColorAndThicknessEPjPf to i8*), i8* bitcast (void (%class.CXFA_FFImage*)* @_ZN12CXFA_FFImage11PreFinalizeEv to i8*), i8* bitcast (%class.CXFA_FFField* (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7AsFieldEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CXFA_FFWidget*, i32)* @_ZN13CXFA_FFWidget7GetBBoxENS_11FocusOptionE to i8*), i8* bitcast (void (%class.CXFA_FFImage*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*, i32)* @_ZN12CXFA_FFImage12RenderWidgetEP16CFGAS_GEGraphicsRK10CFX_MatrixN13CXFA_FFWidget15HighlightOptionE to i8*), i8* bitcast (i1 (%class.CXFA_FFImage*)* @_ZN12CXFA_FFImage8IsLoadedEv to i8*), i8* bitcast (i1 (%class.CXFA_FFImage*)* @_ZN12CXFA_FFImage10LoadWidgetEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget13PerformLayoutEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget13UpdateFWLDataEv to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget20UpdateWidgetPropertyEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*, i8)* @_ZN13CXFA_FFWidget24AcceptsFocusOnButtonDownEjRK13CFX_PTemplateIfE16FWL_MouseCommand to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget12OnMouseEnterEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget11OnMouseExitEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget13OnLButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget11OnLButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget15OnLButtonDblClkEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget11OnMouseMoveEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*, %class.CFX_VTemplate*)* @_ZN13CXFA_FFWidget12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget13OnRButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget11OnRButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget15OnRButtonDblClkEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget10OnSetFocusEPS_ to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget11OnKillFocusEPS_ to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, i32)* @_ZN13CXFA_FFWidget9OnKeyDownEjj to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, i32)* @_ZN13CXFA_FFWidget7OnKeyUpEjj to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, i32)* @_ZN13CXFA_FFWidget6OnCharEjj to i8*), i8* bitcast (i32 (%class.CXFA_FFWidget*, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget7HitTestERK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7CanUndoEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7CanRedoEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7CanCopyEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget6CanCutEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget8CanPasteEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget12CanSelectAllEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget9CanDeleteEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget11CanDeSelectEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget4UndoEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget4RedoEv to i8*), i8* bitcast (void (%"class.pdfium::Optional"*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget4CopyEv to i8*), i8* bitcast (void (%"class.pdfium::Optional"*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget3CutEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, %"class.fxcrt::WideString"*)* @_ZN13CXFA_FFWidget5PasteERKN5fxcrt10WideStringE to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget9SelectAllEv to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget6DeleteEv to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget8DeSelectEv to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7GetTextEv to i8*), i8* bitcast (i8 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget16GetFormFieldTypeEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget14PtInActiveRectERK13CFX_PTemplateIfE to i8*)] }, align 8

@_ZN12CXFA_FFImageC1EP9CXFA_Node = hidden unnamed_addr alias void (%class.CXFA_FFImage*, %class.CXFA_Node*), void (%class.CXFA_FFImage*, %class.CXFA_Node*)* @_ZN12CXFA_FFImageC2EP9CXFA_Node
@_ZN12CXFA_FFImageD1Ev = hidden unnamed_addr alias void (%class.CXFA_FFImage*), void (%class.CXFA_FFImage*)* @_ZN12CXFA_FFImageD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CXFA_FFImageC2EP9CXFA_Node(%class.CXFA_FFImage*, %class.CXFA_Node*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_FFImage, %class.CXFA_FFImage* %0, i64 0, i32 0
  tail call void @_ZN13CXFA_FFWidgetC2EP9CXFA_Node(%class.CXFA_FFWidget* %3, %class.CXFA_Node* %1) #4
  %4 = getelementptr inbounds %class.CXFA_FFImage, %class.CXFA_FFImage* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [53 x i8*] }, { [53 x i8*] }* @_ZTV12CXFA_FFImage, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN13CXFA_FFWidgetC2EP9CXFA_Node(%class.CXFA_FFWidget*, %class.CXFA_Node*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13CXFA_FFWidgetD2Ev(%class.CXFA_FFWidget*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CXFA_FFImageD2Ev(%class.CXFA_FFImage*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FFImage, %class.CXFA_FFImage* %0, i64 0, i32 0
  tail call void @_ZN13CXFA_FFWidgetD2Ev(%class.CXFA_FFWidget* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CXFA_FFImageD0Ev(%class.CXFA_FFImage*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FFImage, %class.CXFA_FFImage* %0, i64 0, i32 0
  tail call void @_ZN13CXFA_FFWidgetD2Ev(%class.CXFA_FFWidget* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CXFA_FFImage11PreFinalizeEv(%class.CXFA_FFImage*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::RetainPtr", align 8
  %3 = getelementptr inbounds %class.CXFA_FFImage, %class.CXFA_FFImage* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.CXFA_FFImage, %class.CXFA_FFImage* %0, i64 0, i32 0, i32 4
  %5 = bitcast %"class.cppgc::internal::BasicMember.2"* %4 to %class.CXFA_Node**
  %6 = load %class.CXFA_Node*, %class.CXFA_Node** %5, align 8
  %7 = bitcast %"class.fxcrt::RetainPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #4
  %8 = bitcast %"class.fxcrt::RetainPtr"* %2 to i64*
  store i64 0, i64* %8, align 8
  call void @_ZN9CXFA_Node13SetImageImageERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CXFA_Node* %6, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %2) #4
  %9 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %9, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %9, align 8
  %11 = icmp eq %class.CFX_DIBitmap* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %10, i64 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, -1
  store i64 %15, i64* %13, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %10, i64 0, i32 0, i32 0
  %19 = bitcast %class.CFX_DIBitmap* %10 to void (%"class.fxcrt::Retainable"*)***
  %20 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %20, i64 1
  %22 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %21, align 8
  call void %22(%"class.fxcrt::Retainable"* nonnull %18) #4
  br label %23

23:                                               ; preds = %1, %12, %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #4
  call void @_ZN13CXFA_FFWidget11PreFinalizeEv(%class.CXFA_FFWidget* %3) #4
  ret void
}

declare void @_ZN9CXFA_Node13SetImageImageERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CXFA_Node*, %"class.fxcrt::RetainPtr"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN13CXFA_FFWidget11PreFinalizeEv(%class.CXFA_FFWidget*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CXFA_FFImage8IsLoadedEv(%class.CXFA_FFImage* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::RetainPtr", align 8
  %3 = bitcast %"class.fxcrt::RetainPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #4
  %4 = getelementptr inbounds %class.CXFA_FFImage, %class.CXFA_FFImage* %0, i64 0, i32 0, i32 4
  %5 = bitcast %"class.cppgc::internal::BasicMember.2"* %4 to %class.CXFA_Node**
  %6 = load %class.CXFA_Node*, %class.CXFA_Node** %5, align 8
  call void @_ZN9CXFA_Node13GetImageImageEv(%"class.fxcrt::RetainPtr"* nonnull sret %2, %class.CXFA_Node* %6) #4
  %7 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %7, align 8
  %9 = icmp ne %class.CFX_DIBitmap* %8, null
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %7, align 8
  %10 = icmp eq %class.CFX_DIBitmap* %8, null
  br i1 %10, label %22, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %8, i64 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, -1
  store i64 %14, i64* %12, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %8, i64 0, i32 0, i32 0
  %18 = bitcast %class.CFX_DIBitmap* %8 to void (%"class.fxcrt::Retainable"*)***
  %19 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %19, i64 1
  %21 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %20, align 8
  call void %21(%"class.fxcrt::Retainable"* nonnull %17) #4
  br label %22

22:                                               ; preds = %1, %11, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #4
  ret i1 %9
}

declare void @_ZN9CXFA_Node13GetImageImageEv(%"class.fxcrt::RetainPtr"* sret, %class.CXFA_Node*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CXFA_FFImage10LoadWidgetEv(%class.CXFA_FFImage*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::RetainPtr", align 8
  %3 = bitcast %"class.fxcrt::RetainPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #4
  %4 = getelementptr inbounds %class.CXFA_FFImage, %class.CXFA_FFImage* %0, i64 0, i32 0
  %5 = getelementptr inbounds %class.CXFA_FFImage, %class.CXFA_FFImage* %0, i64 0, i32 0, i32 4
  %6 = bitcast %"class.cppgc::internal::BasicMember.2"* %5 to %class.CXFA_Node**
  %7 = load %class.CXFA_Node*, %class.CXFA_Node** %6, align 8
  call void @_ZN9CXFA_Node13GetImageImageEv(%"class.fxcrt::RetainPtr"* nonnull sret %2, %class.CXFA_Node* %7) #4
  %8 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %8, align 8
  %10 = icmp eq %class.CFX_DIBitmap* %9, null
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %8, align 8
  br i1 %10, label %23, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %9, i64 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, -1
  store i64 %14, i64* %12, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %9, i64 0, i32 0, i32 0
  %18 = bitcast %class.CFX_DIBitmap* %9 to void (%"class.fxcrt::Retainable"*)***
  %19 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %19, i64 1
  %21 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %20, align 8
  call void %21(%"class.fxcrt::Retainable"* nonnull %17) #4
  br label %22

22:                                               ; preds = %11, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #4
  br label %29

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #4
  %24 = load %class.CXFA_Node*, %class.CXFA_Node** %6, align 8
  %25 = call %class.CXFA_FFDoc* @_ZN13CXFA_FFWidget6GetDocEv(%class.CXFA_FFWidget* %4) #4
  %26 = call zeroext i1 @_ZN9CXFA_Node14LoadImageImageEP10CXFA_FFDoc(%class.CXFA_Node* %24, %class.CXFA_FFDoc* %25) #4
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = call zeroext i1 @_ZN13CXFA_FFWidget10LoadWidgetEv(%class.CXFA_FFWidget* %4) #4
  br label %29

29:                                               ; preds = %22, %23, %27
  %30 = phi i1 [ false, %23 ], [ %28, %27 ], [ true, %22 ]
  ret i1 %30
}

declare zeroext i1 @_ZN9CXFA_Node14LoadImageImageEP10CXFA_FFDoc(%class.CXFA_Node*, %class.CXFA_FFDoc*) local_unnamed_addr #1

declare %class.CXFA_FFDoc* @_ZN13CXFA_FFWidget6GetDocEv(%class.CXFA_FFWidget*) local_unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget10LoadWidgetEv(%class.CXFA_FFWidget*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CXFA_FFImage12RenderWidgetEP16CFGAS_GEGraphicsRK10CFX_MatrixN13CXFA_FFWidget15HighlightOptionE(%class.CXFA_FFImage*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %5 = alloca %class.CFX_Matrix, align 16
  %6 = alloca %"class.fxcrt::RetainPtr", align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %class.CFX_RectF*
  %9 = alloca %class.CFX_STemplate, align 4
  %10 = getelementptr inbounds %class.CXFA_FFImage, %class.CXFA_FFImage* %0, i64 0, i32 0
  %11 = tail call zeroext i1 @_ZNK13CXFA_FFWidget16HasVisibleStatusEv(%class.CXFA_FFWidget* %10) #4
  br i1 %11, label %12, label %119

12:                                               ; preds = %4
  %13 = bitcast %class.CFX_Matrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #4
  %14 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 0
  %15 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 1
  %16 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 2
  %17 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 3
  %18 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 4
  %19 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 5
  %20 = bitcast %class.CFX_Matrix* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -1, i64 24, i1 false)
  call void @_ZN13CXFA_FFWidget15GetRotateMatrixEv(%class.CFX_Matrix* nonnull sret %5, %class.CXFA_FFWidget* %10) #4
  %21 = load float, float* %14, align 16, !noalias !2
  %22 = load float, float* %15, align 4, !noalias !2
  %23 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 2
  %24 = bitcast %class.CFX_Matrix* %2 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 4, !noalias !2
  %26 = shufflevector <2 x float> %25, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %27 = bitcast float* %23 to <2 x float>*
  %28 = load <2 x float>, <2 x float>* %27, align 4, !noalias !2
  %29 = shufflevector <2 x float> %28, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %30 = load float, float* %16, align 8, !noalias !2
  %31 = load float, float* %17, align 4, !noalias !2
  %32 = insertelement <4 x float> undef, float %21, i32 0
  %33 = shufflevector <4 x float> %32, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %34 = extractelement <2 x float> %25, i32 0
  %35 = extractelement <2 x float> %25, i32 1
  %36 = shufflevector <4 x float> %33, <4 x float> %26, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %37 = insertelement <4 x float> undef, float %34, i32 0
  %38 = insertelement <4 x float> %37, float %35, i32 1
  %39 = insertelement <4 x float> %38, float %30, i32 2
  %40 = insertelement <4 x float> %39, float %30, i32 3
  %41 = fmul <4 x float> %36, %40
  %42 = insertelement <4 x float> undef, float %22, i32 0
  %43 = shufflevector <4 x float> %42, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %44 = extractelement <2 x float> %28, i32 0
  %45 = extractelement <2 x float> %28, i32 1
  %46 = shufflevector <4 x float> %43, <4 x float> %29, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %47 = insertelement <4 x float> undef, float %44, i32 0
  %48 = insertelement <4 x float> %47, float %45, i32 1
  %49 = insertelement <4 x float> %48, float %31, i32 2
  %50 = insertelement <4 x float> %49, float %31, i32 3
  %51 = fmul <4 x float> %46, %50
  %52 = fadd <4 x float> %41, %51
  %53 = load float, float* %18, align 16, !noalias !2
  %54 = fmul float %34, %53
  %55 = load float, float* %19, align 4, !noalias !2
  %56 = fmul float %44, %55
  %57 = fadd float %54, %56
  %58 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 4
  %59 = load float, float* %58, align 4, !noalias !2
  %60 = fadd float %59, %57
  %61 = fmul float %35, %53
  %62 = fmul float %45, %55
  %63 = fadd float %61, %62
  %64 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 5
  %65 = load float, float* %64, align 4, !noalias !2
  %66 = fadd float %63, %65
  %67 = bitcast %class.CFX_Matrix* %5 to <4 x float>*
  store <4 x float> %52, <4 x float>* %67, align 16
  store float %60, float* %18, align 16
  store float %66, float* %19, align 4
  call void @_ZN13CXFA_FFWidget12RenderWidgetEP16CFGAS_GEGraphicsRK10CFX_MatrixNS_15HighlightOptionE(%class.CXFA_FFWidget* %10, %class.CFGAS_GEGraphics* %1, %class.CFX_Matrix* nonnull dereferenceable(24) %5, i32 %3) #4
  %68 = bitcast %"class.fxcrt::RetainPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #4
  %69 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*), %class.CFX_DIBitmap** %69, align 8
  %70 = getelementptr inbounds %class.CXFA_FFImage, %class.CXFA_FFImage* %0, i64 0, i32 0, i32 4
  %71 = bitcast %"class.cppgc::internal::BasicMember.2"* %70 to %class.CXFA_Node**
  %72 = load %class.CXFA_Node*, %class.CXFA_Node** %71, align 8
  call void @_ZN9CXFA_Node13GetImageImageEv(%"class.fxcrt::RetainPtr"* nonnull sret %6, %class.CXFA_Node* %72) #4
  %73 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %69, align 8
  %74 = icmp eq %class.CFX_DIBitmap* %73, null
  br i1 %74, label %75, label %76

75:                                               ; preds = %12
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %69, align 8
  br label %118

76:                                               ; preds = %12
  %77 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #4
  %78 = call { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget20GetRectWithoutRotateEv(%class.CXFA_FFWidget* %10) #4
  %79 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %80 = extractvalue { <2 x float>, <2 x float> } %78, 0
  store <2 x float> %80, <2 x float>* %79, align 8
  %81 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %82 = extractvalue { <2 x float>, <2 x float> } %78, 1
  store <2 x float> %82, <2 x float>* %81, align 8
  %83 = load %class.CXFA_Node*, %class.CXFA_Node** %71, align 8
  %84 = call %class.CXFA_Margin* @_ZNK9CXFA_Node17GetMarginIfExistsEv(%class.CXFA_Node* %83) #4
  call void @_Z21XFA_RectWithoutMarginP9CFX_RectFPK11CXFA_Margin(%class.CFX_RectF* nonnull %8, %class.CXFA_Margin* %84) #4
  %85 = load %class.CXFA_Node*, %class.CXFA_Node** %71, align 8
  %86 = call %class.CXFA_Para* @_ZNK9CXFA_Node15GetParaIfExistsEv(%class.CXFA_Node* %85) #4
  %87 = icmp eq %class.CXFA_Para* %86, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %76
  %89 = call zeroext i16 @_ZN9CXFA_Para18GetHorizontalAlignEv(%class.CXFA_Para* nonnull %86) #4
  %90 = call zeroext i16 @_ZN9CXFA_Para16GetVerticalAlignEv(%class.CXFA_Para* nonnull %86) #4
  br label %91

91:                                               ; preds = %76, %88
  %92 = phi i16 [ %89, %88 ], [ 252, %76 ]
  %93 = phi i16 [ %90, %88 ], [ 33, %76 ]
  %94 = load %class.CXFA_Node*, %class.CXFA_Node** %71, align 8
  %95 = call %class.CXFA_Value* @_ZNK9CXFA_Node20GetFormValueIfExistsEv(%class.CXFA_Node* %94) #4
  %96 = icmp eq %class.CXFA_Value* %95, null
  br i1 %96, label %104, label %97

97:                                               ; preds = %91
  %98 = call %class.CXFA_Image* @_ZNK10CXFA_Value16GetImageIfExistsEv(%class.CXFA_Value* nonnull %95) #4
  %99 = icmp eq %class.CXFA_Image* %98, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %97
  %101 = call zeroext i16 @_ZN10CXFA_Image9GetAspectEv(%class.CXFA_Image* nonnull %98) #4
  %102 = bitcast %class.CFX_STemplate* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #4
  %103 = load %class.CXFA_Node*, %class.CXFA_Node** %71, align 8
  call void @_ZNK9CXFA_Node11GetImageDpiEv(%class.CFX_STemplate* nonnull sret %9, %class.CXFA_Node* %103) #4
  call void @_Z13XFA_DrawImageP16CFGAS_GEGraphicsRK9CFX_RectFRK10CFX_MatrixRKN5fxcrt9RetainPtrI12CFX_DIBitmapEE18XFA_AttributeValueRK13CFX_STemplateIiESD_SD_(%class.CFGAS_GEGraphics* %1, %class.CFX_RectF* nonnull dereferenceable(16) %8, %class.CFX_Matrix* nonnull dereferenceable(24) %5, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %6, i16 zeroext %101, %class.CFX_STemplate* nonnull dereferenceable(8) %9, i16 zeroext %92, i16 zeroext %93) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #4
  br label %104

104:                                              ; preds = %91, %100, %97
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #4
  %105 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %69, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %69, align 8
  %106 = icmp eq %class.CFX_DIBitmap* %105, null
  br i1 %106, label %118, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %105, i64 0, i32 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = add nsw i64 %109, -1
  store i64 %110, i64* %108, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %118

112:                                              ; preds = %107
  %113 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %105, i64 0, i32 0, i32 0
  %114 = bitcast %class.CFX_DIBitmap* %105 to void (%"class.fxcrt::Retainable"*)***
  %115 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %115, i64 1
  %117 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %116, align 8
  call void %117(%"class.fxcrt::Retainable"* nonnull %113) #4
  br label %118

118:                                              ; preds = %75, %104, %107, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #4
  br label %119

119:                                              ; preds = %4, %118
  ret void
}

declare zeroext i1 @_ZNK13CXFA_FFWidget16HasVisibleStatusEv(%class.CXFA_FFWidget*) local_unnamed_addr #1

declare void @_ZN13CXFA_FFWidget15GetRotateMatrixEv(%class.CFX_Matrix* sret, %class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget12RenderWidgetEP16CFGAS_GEGraphicsRK10CFX_MatrixNS_15HighlightOptionE(%class.CXFA_FFWidget*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24), i32) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget20GetRectWithoutRotateEv(%class.CXFA_FFWidget*) local_unnamed_addr #1

declare %class.CXFA_Margin* @_ZNK9CXFA_Node17GetMarginIfExistsEv(%class.CXFA_Node*) local_unnamed_addr #1

declare void @_Z21XFA_RectWithoutMarginP9CFX_RectFPK11CXFA_Margin(%class.CFX_RectF*, %class.CXFA_Margin*) local_unnamed_addr #1

declare %class.CXFA_Para* @_ZNK9CXFA_Node15GetParaIfExistsEv(%class.CXFA_Node*) local_unnamed_addr #1

declare zeroext i16 @_ZN9CXFA_Para18GetHorizontalAlignEv(%class.CXFA_Para*) local_unnamed_addr #1

declare zeroext i16 @_ZN9CXFA_Para16GetVerticalAlignEv(%class.CXFA_Para*) local_unnamed_addr #1

declare %class.CXFA_Value* @_ZNK9CXFA_Node20GetFormValueIfExistsEv(%class.CXFA_Node*) local_unnamed_addr #1

declare %class.CXFA_Image* @_ZNK10CXFA_Value16GetImageIfExistsEv(%class.CXFA_Value*) local_unnamed_addr #1

declare void @_Z13XFA_DrawImageP16CFGAS_GEGraphicsRK9CFX_RectFRK10CFX_MatrixRKN5fxcrt9RetainPtrI12CFX_DIBitmapEE18XFA_AttributeValueRK13CFX_STemplateIiESD_SD_(%class.CFGAS_GEGraphics*, %class.CFX_RectF* dereferenceable(16), %class.CFX_Matrix* dereferenceable(24), %"class.fxcrt::RetainPtr"* dereferenceable(8), i16 zeroext, %class.CFX_STemplate* dereferenceable(8), i16 zeroext, i16 zeroext) local_unnamed_addr #1

declare zeroext i16 @_ZN10CXFA_Image9GetAspectEv(%class.CXFA_Image*) local_unnamed_addr #1

declare void @_ZNK9CXFA_Node11GetImageDpiEv(%class.CFX_STemplate* sret, %class.CXFA_Node*) local_unnamed_addr #1

declare void @_ZNK13CXFA_FFWidget5TraceEPN5cppgc7VisitorE(%class.CXFA_FFWidget*, %"class.cppgc::Visitor"*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget12DisplayCaretEbPK9CFX_RectF(%class.CXFA_FFWidget*, i1 zeroext, %class.CFX_RectF*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget26GetBorderColorAndThicknessEPjPf(%class.CXFA_FFWidget*, i32*, float*) unnamed_addr #1

declare %class.CXFA_FFField* @_ZN13CXFA_FFWidget7AsFieldEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget7GetBBoxENS_11FocusOptionE(%class.CXFA_FFWidget*, i32) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget13PerformLayoutEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget13UpdateFWLDataEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget20UpdateWidgetPropertyEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget24AcceptsFocusOnButtonDownEjRK13CFX_PTemplateIfE16FWL_MouseCommand(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8), i8 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget12OnMouseEnterEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11OnMouseExitEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget13OnLButtonDownEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11OnLButtonUpEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget15OnLButtonDblClkEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11OnMouseMoveEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_VTemplate*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget13OnRButtonDownEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11OnRButtonUpEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget15OnRButtonDblClkEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget10OnSetFocusEPS_(%class.CXFA_FFWidget*, %class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11OnKillFocusEPS_(%class.CXFA_FFWidget*, %class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget9OnKeyDownEjj(%class.CXFA_FFWidget*, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget7OnKeyUpEjj(%class.CXFA_FFWidget*, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget6OnCharEjj(%class.CXFA_FFWidget*, i32, i32) unnamed_addr #1

declare i32 @_ZN13CXFA_FFWidget7HitTestERK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget7CanUndoEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget7CanRedoEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget7CanCopyEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget6CanCutEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget8CanPasteEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget12CanSelectAllEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget9CanDeleteEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11CanDeSelectEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget4UndoEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget4RedoEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget4CopyEv(%"class.pdfium::Optional"* sret, %class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget3CutEv(%"class.pdfium::Optional"* sret, %class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget5PasteERKN5fxcrt10WideStringE(%class.CXFA_FFWidget*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget9SelectAllEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget6DeleteEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget8DeSelectEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget7GetTextEv(%"class.fxcrt::WideString"* sret, %class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i8 @_ZN13CXFA_FFWidget16GetFormFieldTypeEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget14PtInActiveRectERK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!4 = distinct !{!4, !"_ZNK10CFX_MatrixmlERKS_"}
