; ModuleID = '../../third_party/blink/renderer/core/html/forms/number_input_type.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/number_input_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const blink::StepRange::StepDescription>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::StepRange::StepDescription>::InstanceStorage" = type { [16 x i8] }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::NumberInputType" = type { %"class.blink::TextFieldInputType" }
%"class.blink::TextFieldInputType" = type { %"class.blink::InputType", %"class.blink::InputTypeView", %"class.blink::SpinButtonElement::SpinButtonOwner" }
%"class.blink::InputType" = type { i32 (...)**, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HTMLInputElement"* }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.31", %"class.blink::Member.33", %"class.blink::Member.35", %"class.blink::Member.37", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.29", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.12" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.6" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.39", %"class.blink::Member.41", %"class.blink::Member.4", %"class.blink::Member.43", %"class.blink::Member.43", %"class.blink::Member.62", %"class.blink::Member.64", %"class.blink::Member.66", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.71", %"class.blink::HeapVector.73" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.41" = type { %"class.blink::MemberBase.42" }
%"class.blink::MemberBase.42" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.89", %"class.WTF::Vector.89", i8, i32, %"class.blink::Member.100", %"class.blink::Member.102", %"class.blink::Member.104", %"class.blink::Member.106", %"class.blink::Member.108", %"class.blink::Member.110", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.113", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.119", %"class.blink::Member.121", %"class.blink::Member.79", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.124", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.54", %"class.blink::Member.333", %"class.blink::Member.54", %"class.blink::Member.54", %"class.blink::Member.54", %"class.blink::UserActionElementSet", %"class.blink::Member.342", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.349", i16, i8, %"class.blink::Member.356", %"class.blink::Member.358", %"class.blink::Member.360", %"class.blink::Member.362", %"class.blink::TextLinkColors", %"class.blink::Member.364", i8, [7 x i8], %"class.blink::HeapHashMap.366", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.54", %"class.WTF::Vector.373", %"class.blink::Member.378", %"class.blink::Member.380", i8, %"class.blink::Member.54", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.382", %"class.blink::HeapVector.384", %"class.std::__1::unique_ptr.392", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.398", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.411", %"class.WTF::Vector.413", i8, i8, %"class.std::__1::unique_ptr.418", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.424", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.432", i8, i32, %"class.blink::Member.434", %"class.blink::Member.436", %"class.blink::Member.438", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.440", %"class.WTF::HashMap.442", %"class.blink::Member.447", %"class.blink::Member.449", %"class.blink::Member.451", %"class.blink::Member.453", %"class.blink::Member.41", %"class.blink::Member.41", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.455", i8, i32, %"class.blink::Member.462", %"class.blink::Member.464", i32, %"class.blink::Member.466", %"class.blink::Member.468", %"class.blink::Member.470", %"class.std::__1::unique_ptr.472", i64, %"class.std::__1::unique_ptr.478", i32, i32, %"class.blink::Member.493", %"class.blink::Member.495", %"class.blink::Member.497", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.499", %"class.WTF::Vector.501", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.506", %"class.blink::Member.513", %"class.std::__1::unique_ptr.515", %"class.blink::Member.521", i8, i8, %"class.WTF::String", %"class.blink::Member.523", i8, [7 x i8], %"class.blink::HeapHashMap.525", %"class.blink::HeapObserverSet", %"class.blink::Member.539", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.541", i32, i8, i8, %"class.blink::WeakMember.543", %"class.blink::Member.544" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.82" }
%"class.blink::HeapHashMap.82" = type { %"class.WTF::HashMap.85" }
%"class.WTF::HashMap.85" = type { %"class.WTF::HashTable.86" }
%"class.WTF::HashTable.86" = type <{ %"struct.WTF::KeyValuePair.88"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.88" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.92 }
%class.scoped_refptr.92 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.93" }
%"struct.std::__1::atomic.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__cxx_atomic_impl.96" }
%"struct.std::__1::__cxx_atomic_impl.96" = type { %"struct.std::__1::__cxx_atomic_base_impl.97" }
%"struct.std::__1::__cxx_atomic_base_impl.97" = type { i32 }
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.562", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.603", i32, i8, [3 x i8], %"class.blink::HeapVector.605", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.613", %"class.blink::Member.615", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.624", %"class.blink::Member.630", %"class.blink::Member.632", i8, [7 x i8] }>
%"class.blink::Supplementable.562" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.563" }
%"class.blink::HeapHashMap.563" = type { %"class.WTF::HashMap.566" }
%"class.WTF::HashMap.566" = type { %"class.WTF::HashTable.567" }
%"class.WTF::HashTable.567" = type <{ %"struct.WTF::KeyValuePair.569"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.569" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.578" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.570" }
%"class.blink::HeapObserverSet.570" = type { i32, [4 x i8], %"class.blink::HeapHashSet.571" }
%"class.blink::HeapHashSet.571" = type { %"class.WTF::HashSet.574" }
%"class.WTF::HashSet.574" = type { %"class.WTF::HashTable.575" }
%"class.WTF::HashTable.575" = type <{ %"class.blink::WeakMember.577"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.577" = type opaque
%"class.blink::Supplementable.578" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.579" }
%"class.blink::HeapHashMap.579" = type { %"class.WTF::HashMap.582" }
%"class.WTF::HashMap.582" = type { %"class.WTF::HashTable.583" }
%"class.WTF::HashTable.583" = type <{ %"struct.WTF::KeyValuePair.585"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.585" = type { i8*, %"class.blink::Member.1524" }
%"class.blink::Member.1524" = type { %"class.blink::MemberBase.1525" }
%"class.blink::MemberBase.1525" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1526" }
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.586, %"class.std::__1::unique_ptr.587", %"class.std::__1::unique_ptr.587", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593", %"class.blink::Member.102", i32, [4 x i8], %"class.WTF::HashSet.599", i32, i32 }
%class.scoped_refptr.586 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.599" = type { %"class.WTF::HashTable.600" }
%"class.WTF::HashTable.600" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.605" = type { %"class.WTF::Vector.608" }
%"class.WTF::Vector.608" = type { %"class.WTF::VectorBuffer.609" }
%"class.WTF::VectorBuffer.609" = type { %"class.WTF::VectorBufferBase.610" }
%"class.WTF::VectorBufferBase.610" = type { %"class.blink::Member.611"*, i32, i32 }
%"class.blink::Member.611" = type opaque
%"class.blink::Member.613" = type { %"class.blink::MemberBase.614" }
%"class.blink::MemberBase.614" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.617", i32, i32 }
%"class.blink::HeapHashMap.617" = type { %"class.WTF::HashMap.620" }
%"class.WTF::HashMap.620" = type { %"class.WTF::HashTable.621" }
%"class.WTF::HashTable.621" = type <{ %"struct.WTF::KeyValuePair.623"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.623" = type opaque
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.630" = type { %"class.blink::MemberBase.631" }
%"class.blink::MemberBase.631" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.106" = type { %"class.blink::MemberBase.107" }
%"class.blink::MemberBase.107" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.110" = type { %"class.blink::MemberBase.111" }
%"class.blink::MemberBase.111" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.123 }
%class.scoped_refptr.123 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.124" = type { %"class.WTF::VectorBuffer.125" }
%"class.WTF::VectorBuffer.125" = type { %"class.WTF::VectorBufferBase.126" }
%"class.WTF::VectorBufferBase.126" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.127 }
%class.scoped_refptr.127 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.128", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.128" = type { %"class.base::RefCounted.129" }
%"class.base::RefCounted.129" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.132" }
%"class.blink::HeapHashMap.132" = type { %"class.WTF::HashMap.135" }
%"class.WTF::HashMap.135" = type { %"class.WTF::HashTable.136" }
%"class.WTF::HashTable.136" = type <{ %"struct.WTF::KeyValuePair.138"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.138" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.140", i32, [4 x i8], %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.276", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.292", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.310", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.317", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.256", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i64 }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::Worklist.187"* }
%"class.blink::Worklist.187" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::Worklist.194"* }
%"class.blink::Worklist.194" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::Worklist.201"* }
%"class.blink::Worklist.201" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist.208"* }
%"class.blink::Worklist.208" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist.215"* }
%"class.blink::Worklist.215" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist.222"* }
%"class.blink::Worklist.222" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::Worklist.229"* }
%"class.blink::Worklist.229" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.236", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238", %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { i64 }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { float }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.259", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.268" }
%"class.WTF::Vector.268" = type { %"class.WTF::VectorBuffer.269" }
%"class.WTF::VectorBuffer.269" = type { %"class.WTF::VectorBufferBase.270" }
%"class.WTF::VectorBufferBase.270" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.284" }
%"class.WTF::VectorBuffer.284" = type { %"class.WTF::VectorBufferBase.285" }
%"class.WTF::VectorBufferBase.285" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.298" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.187"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.194"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.201"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.208"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.215"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.557" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.316 }
%class.scoped_refptr.316 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.317" = type { %"struct.std::__1::__atomic_base.318" }
%"struct.std::__1::__atomic_base.318" = type { %"struct.std::__1::__cxx_atomic_impl.319" }
%"struct.std::__1::__cxx_atomic_impl.319" = type { %"struct.std::__1::__cxx_atomic_base_impl.320" }
%"struct.std::__1::__cxx_atomic_base_impl.320" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.335" }
%"class.blink::HeapHashMap.335" = type { %"class.WTF::HashMap.338" }
%"class.WTF::HashMap.338" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"struct.WTF::KeyValuePair.341"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.341" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.346" }
%"class.WTF::HashTable.346" = type <{ %"class.blink::WeakMember.348"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.348" = type opaque
%"class.blink::HeapHashSet.349" = type { %"class.WTF::HashSet.352" }
%"class.WTF::HashSet.352" = type { %"class.WTF::HashTable.353" }
%"class.WTF::HashTable.353" = type <{ %"class.blink::WeakMember.355"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.355" = type opaque
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.366" = type { %"class.WTF::HashMap.369" }
%"class.WTF::HashMap.369" = type { %"class.WTF::HashTable.370" }
%"class.WTF::HashTable.370" = type <{ %"struct.WTF::KeyValuePair.372"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.372" = type opaque
%"class.WTF::Vector.373" = type { %"class.WTF::VectorBuffer.374" }
%"class.WTF::VectorBuffer.374" = type { %"class.WTF::VectorBufferBase.375" }
%"class.WTF::VectorBufferBase.375" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.384" = type { %"class.WTF::Vector.387" }
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"class.blink::Member.390"*, i32, i32 }
%"class.blink::Member.390" = type opaque
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.398" = type { %"class.WTF::HashSet.401" }
%"class.WTF::HashSet.401" = type { %"class.WTF::HashTable.402" }
%"class.WTF::HashTable.402" = type <{ %"class.blink::WeakMember.404"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.404" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.405", i32, [4 x i8] }>
%"class.WTF::Vector.405" = type { %"class.WTF::VectorBuffer.406" }
%"class.WTF::VectorBuffer.406" = type { %"class.WTF::VectorBufferBase.407" }
%"class.WTF::VectorBufferBase.407" = type { %"struct.std::__1::pair.408"*, i32, i32 }
%"struct.std::__1::pair.408" = type opaque
%"class.blink::Member.411" = type { %"class.blink::MemberBase.412" }
%"class.blink::MemberBase.412" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.413" = type { %"class.WTF::VectorBuffer.414" }
%"class.WTF::VectorBuffer.414" = type { %"class.WTF::VectorBufferBase.415" }
%"class.WTF::VectorBufferBase.415" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.54"*, i32, i32 }
%"class.blink::HeapVector.424" = type { %"class.WTF::Vector.427" }
%"class.WTF::Vector.427" = type { %"class.WTF::VectorBuffer.428" }
%"class.WTF::VectorBuffer.428" = type { %"class.WTF::VectorBufferBase.429" }
%"class.WTF::VectorBufferBase.429" = type { %"class.blink::Member.430"*, i32, i32 }
%"class.blink::Member.430" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.41" }
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.442" = type { %"class.WTF::HashTable.443" }
%"class.WTF::HashTable.443" = type <{ %"struct.WTF::KeyValuePair.446"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.446" = type opaque
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.332", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.323, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.323 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.324" }>
%"class.base::RefCountedThreadSafe.324" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.325 }
%class.scoped_refptr.325 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.326", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.326" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.327" }
%"struct.std::__1::atomic.327" = type { %"struct.std::__1::__atomic_base.328" }
%"struct.std::__1::__atomic_base.328" = type { %"struct.std::__1::__atomic_base.329" }
%"struct.std::__1::__atomic_base.329" = type { %"struct.std::__1::__cxx_atomic_impl.330" }
%"struct.std::__1::__cxx_atomic_impl.330" = type { %"struct.std::__1::__cxx_atomic_base_impl.331" }
%"struct.std::__1::__cxx_atomic_base_impl.331" = type { i8 }
%"class.blink::WeakMember.332" = type { %"class.blink::MemberBase.42" }
%"class.blink::HeapHashSet.455" = type { %"class.WTF::HashSet.458" }
%"class.WTF::HashSet.458" = type { %"class.WTF::HashTable.459" }
%"class.WTF::HashTable.459" = type <{ %"class.blink::Member.461"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.461" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.481", %"class.WTF::HashSet.481", %"class.WTF::HashSet.481", %"class.WTF::HashSet.481", %"class.WTF::HashSet.481", %"class.WTF::HashSet.481", i32, [4 x i8], %"class.WTF::HashMap.485", %"class.WTF::HashMap.485", %"class.WTF::HashMap.485", %"class.WTF::HashMap.485", %"class.WTF::HashMap.485", %"class.WTF::HashMap.485", %"class.WTF::HashMap.485", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.481" = type { %"class.WTF::HashTable.482" }
%"class.WTF::HashTable.482" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.485" = type { %"class.WTF::HashTable.486" }
%"class.WTF::HashTable.486" = type <{ %"struct.WTF::KeyValuePair.489"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.489" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.501" = type { %"class.WTF::VectorBuffer.502" }
%"class.WTF::VectorBuffer.502" = type { %"class.WTF::VectorBufferBase.503" }
%"class.WTF::VectorBufferBase.503" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.506" = type { %"class.WTF::HashMap.509" }
%"class.WTF::HashMap.509" = type { %"class.WTF::HashTable.510" }
%"class.WTF::HashTable.510" = type <{ %"struct.WTF::KeyValuePair.512"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.512" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.525" = type { %"class.WTF::HashMap.528" }
%"class.WTF::HashMap.528" = type { %"class.WTF::HashTable.529" }
%"class.WTF::HashTable.529" = type <{ %"struct.WTF::KeyValuePair.531"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.531" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.532" }
%"class.blink::HeapHashSet.532" = type { %"class.WTF::HashSet.535" }
%"class.WTF::HashSet.535" = type { %"class.WTF::HashTable.536" }
%"class.WTF::HashTable.536" = type <{ %"class.blink::WeakMember.538"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.538" = type opaque
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.41", %"class.blink::HeapHashSet.548", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.555", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.548" = type { %"class.WTF::HashSet.551" }
%"class.WTF::HashSet.551" = type { %"class.WTF::HashTable.552" }
%"class.WTF::HashTable.552" = type <{ %"class.blink::Member.554"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.554" = type opaque
%"class.blink::HeapTaskRunnerTimer.555" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.556", { i64, i64 } }
%"class.blink::WeakMember.556" = type { %"class.blink::MemberBase.542" }
%"class.blink::WeakMember.543" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Node"* }
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.54", i32, %"class.blink::HeapVector" }
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.68" }
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::HeapHashMap.70"* }
%"class.blink::HeapHashMap.70" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.73" = type { %"class.WTF::Vector.76" }
%"class.WTF::Vector.76" = type { %"class.WTF::VectorBuffer.77" }
%"class.WTF::VectorBuffer.77" = type { %"class.WTF::VectorBufferBase.78" }
%"class.WTF::VectorBufferBase.78" = type { %"class.blink::Member.79"*, i32, i32 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.16", %"class.blink::Member.18", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.16" = type { %"class.WTF::SingleThreadedBitField.17" }
%"class.WTF::SingleThreadedBitField.17" = type { i32 }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.21", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.23", %"class.blink::Member.25", %"class.blink::Member.27", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.10 }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::InputType"* }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::InputTypeView"* }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.blink::InputTypeView" = type { %"class.blink::GarbageCollectedMixin", i8, %"class.blink::Member" }
%"class.blink::SpinButtonElement::SpinButtonOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.634" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.634" = type { %"class.v8::TracedReference.635" }
%"class.v8::TracedReference.635" = type { %"class.v8::BasicTracedReference.636" }
%"class.v8::BasicTracedReference.636" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Decimal" = type { %"class.blink::Decimal::EncodedData" }
%"class.blink::Decimal::EncodedData" = type <{ i64, i16, [2 x i8], i32, i32, [4 x i8] }>
%"class.blink::StepRange" = type <{ %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"struct.blink::StepRange::StepDescription", i8, i8, i8, [5 x i8] }>
%"struct.blink::StepRange::StepDescription" = type { i32, i32, i32, i32 }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.18", %"class.WTF::Vector.1552" }
%"class.WTF::Vector.1552" = type { %"class.WTF::VectorBuffer.1553" }
%"class.WTF::VectorBuffer.1553" = type { %"class.WTF::VectorBufferBase.1554", [64 x i8] }
%"class.WTF::VectorBufferBase.1554" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.WTF::IntegerToStringConverter" = type <{ [24 x i8], i8*, i32, [4 x i8] }>
%"class.blink::KeyboardEvent" = type { %"class.blink::UIEventWithKeyState.base", %"class.std::__1::unique_ptr.853", %"class.WTF::String", %"class.WTF::String", i32, i8, i32, i32 }
%"class.blink::UIEventWithKeyState.base" = type <{ %"class.blink::UIEvent", i32 }>
%"class.blink::UIEvent" = type { %"class.blink::Event", %"class.blink::Member.645", i32, %"class.blink::Member.851" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.639", %"class.blink::Member.639", %"class.blink::Member.641", %"class.blink::Member.643", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::Event"* }
%"class.blink::Member.643" = type { %"class.blink::MemberBase.644" }
%"class.blink::MemberBase.644" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.668", %"class.blink::Member.670", %"class.blink::Member.672", %"class.blink::Member.674", i8, %"class.WTF::Vector.676" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.661" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.649" }
%"class.blink::HeapVector.649" = type { %"class.WTF::Vector.652" }
%"class.WTF::Vector.652" = type { %"class.WTF::VectorBuffer.653" }
%"class.WTF::VectorBuffer.653" = type { %"class.WTF::VectorBufferBase.654", [32 x i8] }
%"class.WTF::VectorBufferBase.654" = type { %"struct.std::__1::pair.655"*, i32, i32 }
%"struct.std::__1::pair.655" = type { %"class.WTF::AtomicString", %"class.blink::Member.656" }
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::HeapVector.658"* }
%"class.blink::HeapVector.658" = type opaque
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.WTF::Vector.664"* }
%"class.WTF::Vector.664" = type opaque
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.862", %"class.blink::Member.864", %"class.blink::Member.645", i8, i32, i8, i32, %"class.blink::Member.866", %"class.blink::Member.670", %"class.blink::FrameLifecycle", %"class.blink::Member.668", %"class.blink::Member.668", %"class.blink::Member.668", %"class.blink::Member.668", %"class.blink::Member.668", %"class.blink::Member.668", %"class.blink::Member.868", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.878", i8, %"class.base::UnguessableToken", %"class.absl::optional.880", %"class.absl::optional.885", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.668", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.864" = type { %"class.blink::MemberBase.865" }
%"class.blink::MemberBase.865" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.868" = type { %"class.blink::MemberBase.869" }
%"class.blink::MemberBase.869" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.668", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.870" }
%"class.std::__1::vector.870" = type { %"class.std::__1::__vector_base.871" }
%"class.std::__1::__vector_base.871" = type { %"struct.std::__1::pair.872"*, %"struct.std::__1::pair.872"*, %"class.std::__1::__compressed_pair.873" }
%"struct.std::__1::pair.872" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"struct.std::__1::pair.872"* }
%"class.blink::Member.878" = type { %"class.blink::MemberBase.879" }
%"class.blink::MemberBase.879" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.880" = type { %"class.absl::optional_internal::optional_data.881" }
%"class.absl::optional_internal::optional_data.881" = type { %"class.absl::optional_internal::optional_data_base.882" }
%"class.absl::optional_internal::optional_data_base.882" = type { %"class.absl::optional_internal::optional_data_dtor_base.883" }
%"class.absl::optional_internal::optional_data_dtor_base.883" = type { i8, %union.anon.884 }
%union.anon.884 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.684 }
%union.anon.684 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.885" = type { %"class.absl::optional_internal::optional_data.886" }
%"class.absl::optional_internal::optional_data.886" = type { %"class.absl::optional_internal::optional_data_base.887" }
%"class.absl::optional_internal::optional_data_base.887" = type { %"class.absl::optional_internal::optional_data_dtor_base.888" }
%"class.absl::optional_internal::optional_data_dtor_base.888" = type { i8, %union.anon.889 }
%union.anon.889 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.890" }
%"class.blink::HeapHashSet.890" = type { %"class.WTF::HashSet.893" }
%"class.WTF::HashSet.893" = type { %"class.WTF::HashTable.894" }
%"class.WTF::HashTable.894" = type <{ %"class.blink::WeakMember.896"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.896" = type opaque
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.674" = type { %"class.blink::MemberBase.675" }
%"class.blink::MemberBase.675" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.676" = type { %"class.WTF::VectorBuffer.677" }
%"class.WTF::VectorBuffer.677" = type { %"class.WTF::VectorBufferBase.678" }
%"class.WTF::VectorBufferBase.678" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.843" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.679, %"class.std::__1::unique_ptr.793", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.681, i32 }>
%class.scoped_refptr.679 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.681, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.759", %"class.absl::optional.764", %"class.absl::optional.720", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.784", i8, [7 x i8], %class.scoped_refptr.681, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.680" }>
%"class.base::RefCountedThreadSafe.680" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.688", %"class.std::__1::unique_ptr.694", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.700" }
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.700" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.681, %"class.std::__1::unique_ptr.701", %"class.absl::optional.710", %"struct.std::__1::atomic.317", i8, i8, i8, i8, i32, i32, %"class.absl::optional.720", %"class.std::__1::unique_ptr.725", i8, i64, %class.scoped_refptr.755, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.758" }
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.681, i8, %"class.mojo::ScopedHandleBase.704", %class.scoped_refptr.705, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.706" }
%"class.mojo::ScopedHandleBase.704" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.705 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.706" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.710" = type { %"class.absl::optional_internal::optional_data.711" }
%"class.absl::optional_internal::optional_data.711" = type { %"class.absl::optional_internal::optional_data_base.712" }
%"class.absl::optional_internal::optional_data_base.712" = type { %"class.absl::optional_internal::optional_data_dtor_base.713" }
%"class.absl::optional_internal::optional_data_dtor_base.713" = type { i8, %union.anon.714 }
%union.anon.714 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.715", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.715" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.728", i8, i64, %class.scoped_refptr.729, %class.scoped_refptr.751 }
%"class.base::RepeatingCallback.728" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.729 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.730", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.740", i8, [7 x i8] }>
%"class.base::RefCounted.730" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.731 }
%class.scoped_refptr.731 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.732", %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.std::__1::map.740" = type { %"class.std::__1::__tree.741" }
%"class.std::__1::__tree.741" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.742", %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%class.scoped_refptr.751 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.755 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.756 }
%class.scoped_refptr.756 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.859", [4 x i8], %"class.base::RepeatingCallback.796", %class.scoped_refptr.681, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.859" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.796" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.757 }
%class.scoped_refptr.757 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.758" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.759" = type { %"class.absl::optional_internal::optional_data.760" }
%"class.absl::optional_internal::optional_data.760" = type { %"class.absl::optional_internal::optional_data_base.761" }
%"class.absl::optional_internal::optional_data_base.761" = type { %"class.absl::optional_internal::optional_data_dtor_base.762" }
%"class.absl::optional_internal::optional_data_dtor_base.762" = type { i8, %union.anon.763 }
%union.anon.763 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.764" = type { %"class.absl::optional_internal::optional_data.765" }
%"class.absl::optional_internal::optional_data.765" = type { %"class.absl::optional_internal::optional_data_base.766" }
%"class.absl::optional_internal::optional_data_base.766" = type { %"class.absl::optional_internal::optional_data_dtor_base.767" }
%"class.absl::optional_internal::optional_data_dtor_base.767" = type { i8, [7 x i8], %union.anon.768 }
%union.anon.768 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.720" = type { %"class.absl::optional_internal::optional_data.721" }
%"class.absl::optional_internal::optional_data.721" = type { %"class.absl::optional_internal::optional_data_base.722" }
%"class.absl::optional_internal::optional_data_base.722" = type { %"class.absl::optional_internal::optional_data_dtor_base.723" }
%"class.absl::optional_internal::optional_data_dtor_base.723" = type { i8, %union.anon.724 }
%union.anon.724 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.769 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.769 = type { %"class.std::__1::map.772" }
%"class.std::__1::map.772" = type { %"class.std::__1::__tree.773" }
%"class.std::__1::__tree.773" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.774", %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.783"*, i64 }
%"class.std::__1::unique_ptr.783" = type opaque
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.std::__1::unique_ptr.793" = type { %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.796", %"class.base::OnceCallback.797", %"class.absl::optional.798", %"class.absl::optional.803", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.810", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.818", %"class.std::__1::map.829", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.838", i8, %class.scoped_refptr.681, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.839" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.797" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.base::TimeDelta" }
%"class.absl::optional.803" = type { %"class.absl::optional_internal::optional_data.804" }
%"class.absl::optional_internal::optional_data.804" = type { %"class.absl::optional_internal::optional_data_base.805" }
%"class.absl::optional_internal::optional_data_base.805" = type { %"class.absl::optional_internal::optional_data_dtor_base.806" }
%"class.absl::optional_internal::optional_data_dtor_base.806" = type { i8, %union.anon.807 }
%union.anon.807 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.681, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.808" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.808" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.809 }
%class.scoped_refptr.809 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.810" = type { %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.813", %class.scoped_refptr.814 }
%"class.base::RepeatingCallback.813" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.814 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.680", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.818" = type { %"class.std::__1::__tree.819" }
%"class.std::__1::__tree.819" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.820", %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.std::__1::map.829" = type { %"class.std::__1::__tree.830" }
%"class.std::__1::__tree.830" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.831", %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.base::OnceCallback.838" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.839" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.681 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.843" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::InputDeviceCapabilities"* }
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.std::__1::unique_ptr.853" = type { %"class.std::__1::__compressed_pair.854" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.blink::WebKeyboardEvent"* }
%"class.blink::WebKeyboardEvent" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16], [6 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.blink::ScopedEventQueue" = type <{ %"class.blink::Persistent.1558", i32, [4 x i8] }>
%"class.blink::Persistent.1558" = type { %"class.blink::PersistentBase.1559" }
%"class.blink::PersistentBase.1559" = type { %"class.blink::HeapVector.1560"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.1560" = type opaque
%"class.blink::BeforeTextInsertedEvent" = type { %"class.blink::Event", %"class.WTF::String" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.897, i32, i8, i8, [2 x i8] }>
%union.anon.897 = type { %"class.WTF::Vector.898" }
%"class.WTF::Vector.898" = type { %"class.WTF::VectorBuffer.899" }
%"class.WTF::VectorBuffer.899" = type { %"class.WTF::VectorBufferBase.900", [16 x i8] }
%"class.WTF::VectorBufferBase.900" = type { i8*, i32, i32 }
%"class.WTF::StringAppend" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::StringAppend.908" = type <{ %"class.WTF::String", i16, [6 x i8] }>
%"class.blink::Locale" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.1623" }
%"class.WTF::StringTypeAdapter.1623" = type { %"class.WTF::StringView" }
%"class.WTF::Vector.903" = type { %"class.WTF::VectorBuffer.904" }
%"class.WTF::VectorBuffer.904" = type { %"class.WTF::VectorBufferBase.905", [16 x i8] }
%"class.WTF::VectorBufferBase.905" = type { i16*, i32, i32 }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1569", %"class.blink::Member.1571", %"class.blink::Member.1573", %"class.blink::Member.1592", %"class.blink::Member.1594" }
%"class.blink::Member.1569" = type { %"class.blink::MemberBase.1570" }
%"class.blink::MemberBase.1570" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.909 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.909, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1358" }
%"class.blink::MemberBase.1358" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1359" }
%"class.std::__1::unique_ptr.1359" = type { %"class.std::__1::__compressed_pair.1360" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.1361" }
%"struct.std::__1::__compressed_pair_elem.1361" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1362", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1368", %"class.std::__1::unique_ptr.1492", i8, %"class.absl::optional.1498", %class.scoped_refptr.1474, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1503" }
%"class.std::__1::unique_ptr.1362" = type { %"class.std::__1::__compressed_pair.1363" }
%"class.std::__1::__compressed_pair.1363" = type { %"struct.std::__1::__compressed_pair_elem.1364" }
%"struct.std::__1::__compressed_pair_elem.1364" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1368" = type { %"class.std::__1::__compressed_pair.1369" }
%"class.std::__1::__compressed_pair.1369" = type { %"struct.std::__1::__compressed_pair_elem.1370" }
%"struct.std::__1::__compressed_pair_elem.1370" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1371, %class.scoped_refptr.1371, %class.scoped_refptr.1371, %class.scoped_refptr.1371, %class.scoped_refptr.1371, %class.scoped_refptr.1371, %class.scoped_refptr.1406, %class.scoped_refptr.1422, %class.scoped_refptr.1423, %class.scoped_refptr.1423, %class.scoped_refptr.1423, %class.scoped_refptr.1423, %class.scoped_refptr.1423, %class.scoped_refptr.1423, %class.scoped_refptr.1464, %class.scoped_refptr.1465, %class.scoped_refptr.1465, %class.scoped_refptr.1465, %class.scoped_refptr.1465, %class.scoped_refptr.1465, %class.scoped_refptr.1465, %class.scoped_refptr.1465, %class.scoped_refptr.1465, %class.scoped_refptr.1488 }
%class.scoped_refptr.1371 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1388" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1372", i8, i8, %class.scoped_refptr.1374, i32, i32 }
%"class.WTF::RefCounted.1372" = type { %"class.base::RefCounted.1373" }
%"class.base::RefCounted.1373" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1374 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1381, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1382", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1375" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1375" = type { %"class.std::__1::__compressed_pair.1376" }
%"class.std::__1::__compressed_pair.1376" = type { %"struct.std::__1::__compressed_pair_elem.1377" }
%"struct.std::__1::__compressed_pair_elem.1377" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1381 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1407", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1407" = type { %"class.WTF::RefCounted.1408", i8, i8, %class.scoped_refptr.1381, i32, i32 }
%"class.WTF::RefCounted.1408" = type { %"class.base::RefCounted.1409" }
%"class.base::RefCounted.1409" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1410" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1410" = type { %"class.absl::optional_internal::optional_data.1411" }
%"class.absl::optional_internal::optional_data.1411" = type { %"class.absl::optional_internal::optional_data_base.1412" }
%"class.absl::optional_internal::optional_data_base.1412" = type { %"class.absl::optional_internal::optional_data_dtor_base.1413" }
%"class.absl::optional_internal::optional_data_dtor_base.1413" = type { i8, %union.anon.1414 }
%union.anon.1414 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1415", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1415" = type { %"class.std::__1::__vector_base.1416" }
%"class.std::__1::__vector_base.1416" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1417" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1417" = type { %"struct.std::__1::__compressed_pair_elem.1418" }
%"struct.std::__1::__compressed_pair_elem.1418" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1382" = type { %"class.std::__1::__compressed_pair.1383" }
%"class.std::__1::__compressed_pair.1383" = type { %"struct.std::__1::__compressed_pair_elem.1384" }
%"struct.std::__1::__compressed_pair_elem.1384" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1388" = type { %"class.std::__1::__compressed_pair.1389" }
%"class.std::__1::__compressed_pair.1389" = type { %"struct.std::__1::__compressed_pair_elem.1390" }
%"struct.std::__1::__compressed_pair_elem.1390" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1391", %"class.std::__1::unique_ptr.1397", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1391" = type { %"class.std::__1::__compressed_pair.1392" }
%"class.std::__1::__compressed_pair.1392" = type { %"struct.std::__1::__compressed_pair_elem.1393" }
%"struct.std::__1::__compressed_pair_elem.1393" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1397" = type { %"class.std::__1::__compressed_pair.1398" }
%"class.std::__1::__compressed_pair.1398" = type { %"struct.std::__1::__compressed_pair_elem.1399" }
%"struct.std::__1::__compressed_pair_elem.1399" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1406 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1422 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1423 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1424" }
%"class.blink::PaintPropertyNode.1424" = type { %"class.WTF::RefCounted.1425", i8, i8, %class.scoped_refptr.1427, i32, i32 }
%"class.WTF::RefCounted.1425" = type { %"class.base::RefCounted.1426" }
%"class.base::RefCounted.1426" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1427 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1374, %class.scoped_refptr.1428, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1450", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1428 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1466" }
%"class.blink::PaintPropertyNode.1466" = type { %"class.WTF::RefCounted.1467", i8, i8, %class.scoped_refptr.1428, i32, i32 }
%"class.WTF::RefCounted.1467" = type { %"class.base::RefCounted.1468" }
%"class.base::RefCounted.1468" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1429" }
%"class.std::__1::vector.1429" = type { %"class.std::__1::__vector_base.1430" }
%"class.std::__1::__vector_base.1430" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1445" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1431, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1438", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1431 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1432, i32, %"class.absl::optional.1433", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.93" }>
%class.sk_sp.1432 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1433" = type { %"class.absl::optional_internal::optional_data.1434" }
%"class.absl::optional_internal::optional_data.1434" = type { %"class.absl::optional_internal::optional_data_base.1435" }
%"class.absl::optional_internal::optional_data_base.1435" = type { %"class.absl::optional_internal::optional_data_dtor_base.1436" }
%"class.absl::optional_internal::optional_data_dtor_base.1436" = type { i8, %union.anon.1437 }
%union.anon.1437 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.1438" = type { %"class.std::__1::__vector_base.1439" }
%"class.std::__1::__vector_base.1439" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1440" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1440" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"struct.std::__1::__compressed_pair_elem.1441" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1445" = type { %"struct.std::__1::__compressed_pair_elem.1446" }
%"struct.std::__1::__compressed_pair_elem.1446" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.std::__1::unique_ptr.1450" = type { %"class.std::__1::__compressed_pair.1451" }
%"class.std::__1::__compressed_pair.1451" = type { %"struct.std::__1::__compressed_pair_elem.1452" }
%"struct.std::__1::__compressed_pair_elem.1452" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.1456" }
%"class.base::internal::flat_tree.1456" = type { %"class.std::__1::vector.1457" }
%"class.std::__1::vector.1457" = type { %"class.std::__1::__vector_base.1458" }
%"class.std::__1::__vector_base.1458" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1459" }
%"class.std::__1::__compressed_pair.1459" = type { %"struct.std::__1::__compressed_pair_elem.1460" }
%"struct.std::__1::__compressed_pair_elem.1460" = type { i32* }
%class.scoped_refptr.1464 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1465 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1477" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1374, %"class.absl::optional.1469", %class.scoped_refptr.1474, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1469" = type { %"class.absl::optional_internal::optional_data.1470" }
%"class.absl::optional_internal::optional_data.1470" = type { %"class.absl::optional_internal::optional_data_base.1471" }
%"class.absl::optional_internal::optional_data_base.1471" = type { %"class.absl::optional_internal::optional_data_dtor_base.1472" }
%"class.absl::optional_internal::optional_data_dtor_base.1472" = type { i8, [3 x i8], %union.anon.1473 }
%union.anon.1473 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1477" = type { %"class.std::__1::__compressed_pair.1478" }
%"class.std::__1::__compressed_pair.1478" = type { %"struct.std::__1::__compressed_pair_elem.1479" }
%"struct.std::__1::__compressed_pair_elem.1479" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1480", i32, [4 x i8] }>
%"class.WTF::Vector.1480" = type { %"class.WTF::VectorBuffer.1481" }
%"class.WTF::VectorBuffer.1481" = type { %"class.WTF::VectorBufferBase.1482" }
%"class.WTF::VectorBufferBase.1482" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1488 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1492" = type { %"class.std::__1::__compressed_pair.1493" }
%"class.std::__1::__compressed_pair.1493" = type { %"struct.std::__1::__compressed_pair_elem.1494" }
%"struct.std::__1::__compressed_pair_elem.1494" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1374, %class.scoped_refptr.1428, %class.scoped_refptr.1427 }
%"class.absl::optional.1498" = type { %"class.absl::optional_internal::optional_data.1499" }
%"class.absl::optional_internal::optional_data.1499" = type { %"class.absl::optional_internal::optional_data_base.1500" }
%"class.absl::optional_internal::optional_data_base.1500" = type { %"class.absl::optional_internal::optional_data_dtor_base.1501" }
%"class.absl::optional_internal::optional_data_dtor_base.1501" = type { i8, %union.anon.1502 }
%union.anon.1502 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1474 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1475", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1281, i32, %"struct.std::__1::atomic.327", %"struct.std::__1::atomic.327", i8, i8 }>
%class.sk_sp.1281 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1282, %class.SkTDArray.1283, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.93" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1282 = type { i8*, i32, i32 }
%class.SkTDArray.1283 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1284 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.93", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.327" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1284 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.317", [3 x i8] }
%"class.WTF::RefCounted.1475" = type { %"class.base::RefCounted.1476" }
%"class.base::RefCounted.1476" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1503" = type { %"class.std::__1::__compressed_pair.1504" }
%"class.std::__1::__compressed_pair.1504" = type { %"struct.std::__1::__compressed_pair_elem.1505" }
%"struct.std::__1::__compressed_pair_elem.1505" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.909 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1343", %"class.std::__1::unique_ptr.1345" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.974", %"class.blink::DataRef.1055", %"class.blink::DataRef.1059", %"class.blink::DataRef.1259", %"class.blink::DataRef.1326", %"class.blink::DataRef.1330", %"class.blink::DataRef.1334", %"class.blink::DataRef.1338", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.910 }
%class.scoped_refptr.910 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.911", %"class.blink::DataRef.913", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.911" = type { %"class.base::RefCounted.912" }
%"class.base::RefCounted.912" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.913" = type { %class.scoped_refptr.914 }
%class.scoped_refptr.914 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.915", %"class.blink::Font" }
%"class.WTF::RefCounted.915" = type { %"class.base::RefCounted.916" }
%"class.base::RefCounted.916" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.943 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.918, %class.scoped_refptr.926, %class.scoped_refptr.936, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.942 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.917 }
%class.scoped_refptr.917 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1514", [4 x i8] }>
%"class.WTF::RefCounted.1514" = type { %"class.base::RefCounted.1515" }
%"class.base::RefCounted.1515" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.918 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.924", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.919" }
%"class.WTF::Vector.919" = type { %"class.WTF::VectorBuffer.920" }
%"class.WTF::VectorBuffer.920" = type { %"class.WTF::VectorBufferBase.921" }
%"class.WTF::VectorBufferBase.921" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.924" = type { %"class.base::RefCounted.925" }
%"class.base::RefCounted.925" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.926 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.927", %"class.WTF::RefCounted.934", [4 x i8] }>
%"class.blink::FontSettings.927" = type { %"class.WTF::Vector.928" }
%"class.WTF::Vector.928" = type { %"class.WTF::VectorBuffer.929" }
%"class.WTF::VectorBuffer.929" = type { %"class.WTF::VectorBufferBase.930" }
%"class.WTF::VectorBufferBase.930" = type { %"class.blink::FontTagValuePair.931"*, i32, i32 }
%"class.blink::FontTagValuePair.931" = type { i32, float }
%"class.WTF::RefCounted.934" = type { %"class.base::RefCounted.935" }
%"class.base::RefCounted.935" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.936 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.937", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.939, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.937" = type { %"class.base::RefCounted.938" }
%"class.base::RefCounted.938" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.939 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.940", [4 x i8] }>
%"class.WTF::RefCounted.940" = type { %"class.base::RefCounted.941" }
%"class.base::RefCounted.941" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.942 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.943 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.944", %"class.WTF::Vector.946", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr.972" }
%"class.WTF::RefCounted.944" = type { %"class.base::RefCounted.945" }
%"class.base::RefCounted.945" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.946" = type { %"class.WTF::VectorBuffer.947" }
%"class.WTF::VectorBuffer.947" = type { %"class.WTF::VectorBufferBase.948", [8 x i8] }
%"class.WTF::VectorBufferBase.948" = type { %class.scoped_refptr.949*, i32, i32 }
%class.scoped_refptr.949 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.950", [4 x i8] }>
%"class.WTF::RefCounted.950" = type { %"class.base::RefCounted.951" }
%"class.base::RefCounted.951" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.960", %class.scoped_refptr.967, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.950" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.954", %"class.absl::optional.954", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.954" = type { %"class.absl::optional_internal::optional_data.955" }
%"class.absl::optional_internal::optional_data.955" = type { %"class.absl::optional_internal::optional_data_base.956" }
%"class.absl::optional_internal::optional_data_base.956" = type { %"class.absl::optional_internal::optional_data_dtor_base.957" }
%"class.absl::optional_internal::optional_data_dtor_base.957" = type { i8, %union.anon.958 }
%union.anon.958 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.959, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.93" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.959 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.960" = type { %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.963, %class.scoped_refptr.963 }
%class.scoped_refptr.963 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.967 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.968", [4 x i8] }>
%"class.WTF::RefCounted.968" = type { %"class.base::RefCounted.969" }
%"class.base::RefCounted.969" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.970" }
%"class.blink::PersistentBase.970" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.971" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.971" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr.972" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Length" = type <{ %union.anon.973, i8, i8, i8, i8 }>
%union.anon.973 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.974" = type { %class.scoped_refptr.975 }
%class.scoped_refptr.975 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.976", [4 x i8], %"class.blink::DataRef.978", %"class.blink::DataRef.1020", %"class.WTF::Vector.1024", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.1028, %class.scoped_refptr.1037, %"class.blink::Persistent.1045", %"class.blink::Persistent.1047", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.976" = type { %"class.base::RefCounted.977" }
%"class.base::RefCounted.977" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.978" = type { %class.scoped_refptr.979 }
%class.scoped_refptr.979 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.980", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.982, %class.scoped_refptr.990, %"class.blink::Persistent.1007", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.980" = type { %"class.base::RefCounted.981" }
%"class.base::RefCounted.981" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.982 = type { %"class.base::RefCountedData.983"* }
%"class.base::RefCountedData.983" = type { %"class.base::RefCountedThreadSafe.984", %"class.WTF::Vector.985" }
%"class.base::RefCountedThreadSafe.984" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.985" = type { %"class.WTF::VectorBuffer.986" }
%"class.WTF::VectorBuffer.986" = type { %"class.WTF::VectorBufferBase.987" }
%"class.WTF::VectorBufferBase.987" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.990 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.991", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.991" = type { %"class.base::RefCounted.992" }
%"class.base::RefCounted.992" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.993", %"class.blink::Persistent.998" }
%"class.WTF::HashMap.993" = type { %"class.WTF::HashTable.994" }
%"class.WTF::HashTable.994" = type <{ %"struct.WTF::KeyValuePair.997"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.997" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1538 }
%class.scoped_refptr.1538 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1539", %"class.WTF::Vector.1242", %"class.WTF::Vector.1541", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1539" = type { %"class.base::RefCounted.1540" }
%"class.base::RefCounted.1540" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1242" = type { %"class.WTF::VectorBuffer.1243" }
%"class.WTF::VectorBuffer.1243" = type { %"class.WTF::VectorBufferBase.1244" }
%"class.WTF::VectorBufferBase.1244" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1541" = type { %"class.WTF::VectorBuffer.1542" }
%"class.WTF::VectorBuffer.1542" = type { %"class.WTF::VectorBufferBase.1543" }
%"class.WTF::VectorBufferBase.1543" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1544 }
%union.anon.1544 = type { double }
%"class.blink::Persistent.998" = type { %"class.blink::PersistentBase.999" }
%"class.blink::PersistentBase.999" = type { %"class.blink::HeapHashMap.1000"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.1000" = type { %"class.WTF::HashMap.1003" }
%"class.WTF::HashMap.1003" = type { %"class.WTF::HashTable.1004" }
%"class.WTF::HashTable.1004" = type <{ %"struct.WTF::KeyValuePair.1006"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1006" = type opaque
%"class.blink::Persistent.1007" = type { %"class.blink::PersistentBase.1008" }
%"class.blink::PersistentBase.1008" = type { %"class.blink::HeapVector.1009"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.1009" = type { %"class.WTF::Vector.1012" }
%"class.WTF::Vector.1012" = type { %"class.WTF::VectorBuffer.1013" }
%"class.WTF::VectorBuffer.1013" = type { %"class.WTF::VectorBufferBase.1014" }
%"class.WTF::VectorBufferBase.1014" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.1015", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.1015" = type { %"class.blink::MemberBase.1016" }
%"class.blink::MemberBase.1016" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.1020" = type { %class.scoped_refptr.1021 }
%class.scoped_refptr.1021 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.1022", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.1022" = type { %"class.base::RefCounted.1023" }
%"class.base::RefCounted.1023" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1024" = type { %"class.WTF::VectorBuffer.1025" }
%"class.WTF::VectorBuffer.1025" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.1028 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.1029", %"class.WTF::Vector.1031" }
%"class.WTF::RefCounted.1029" = type { %"class.base::RefCounted.1030" }
%"class.base::RefCounted.1030" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1031" = type { %"class.WTF::VectorBuffer.1032" }
%"class.WTF::VectorBuffer.1032" = type { %"class.WTF::VectorBufferBase.1033" }
%"class.WTF::VectorBufferBase.1033" = type { %"struct.std::__1::pair.1034"*, i32, i32 }
%"struct.std::__1::pair.1034" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1037 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.1038", [4 x i8], %"class.WTF::Vector.1040" }
%"class.WTF::RefCounted.1038" = type { %"class.base::RefCounted.1039" }
%"class.base::RefCounted.1039" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1040" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1042", [28 x i8] }>
%"class.WTF::VectorBufferBase.1042" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.1045" = type { %"class.blink::PersistentBase.1046" }
%"class.blink::PersistentBase.1046" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.1047" = type { %"class.blink::PersistentBase.1048" }
%"class.blink::PersistentBase.1048" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1051", %"class.blink::Member.1053" }
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1053" = type { %"class.blink::MemberBase.1054" }
%"class.blink::MemberBase.1054" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1055" = type { %class.scoped_refptr.1056 }
%class.scoped_refptr.1056 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1057", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1057" = type { %"class.base::RefCounted.1058" }
%"class.base::RefCounted.1058" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1059" = type { %class.scoped_refptr.1060 }
%class.scoped_refptr.1060 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1061", [4 x i8], %"class.blink::DataRef.1063", %"class.blink::DataRef.1129", %"class.blink::TransformOperations", %class.scoped_refptr.1037, %"class.blink::Persistent.1253", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1061" = type { %"class.base::RefCounted.1062" }
%"class.base::RefCounted.1062" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1063" = type { %class.scoped_refptr.1064 }
%class.scoped_refptr.1064 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1065", [4 x i8], %"class.blink::DataRef.1067", %"class.blink::Persistent.1105", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1065" = type { %"class.base::RefCounted.1066" }
%"class.base::RefCounted.1066" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1067" = type { %class.scoped_refptr.1068 }
%class.scoped_refptr.1068 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1069", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1087, %class.scoped_refptr.1090, %class.scoped_refptr.1093, %class.scoped_refptr.1096, %class.scoped_refptr.1097, %class.scoped_refptr.1098, %"class.blink::Persistent.1105", %"class.blink::Persistent.1120", %"class.absl::optional.1124", %"class.absl::optional.1124", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1069" = type { %"class.base::RefCounted.1070" }
%"class.base::RefCounted.1070" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1071", %"class.std::__1::unique_ptr.1076" }
%"class.WTF::Vector.1071" = type { %"class.WTF::VectorBuffer.1072" }
%"class.WTF::VectorBuffer.1072" = type { %"class.WTF::VectorBufferBase.1073" }
%"class.WTF::VectorBufferBase.1073" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1079", %"class.WTF::Vector.1071", i32, i32 }
%"class.WTF::Vector.1079" = type { %"class.WTF::VectorBuffer.1080" }
%"class.WTF::VectorBuffer.1080" = type { %"class.WTF::VectorBufferBase.1081" }
%"class.WTF::VectorBufferBase.1081" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1087 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1088", [4 x i8] }>
%"class.WTF::RefCounted.1088" = type { %"class.base::RefCounted.1089" }
%"class.base::RefCounted.1089" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1090 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1091", [4 x i8] }>
%"class.WTF::RefCounted.1091" = type { %"class.base::RefCounted.1092" }
%"class.base::RefCounted.1092" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1093 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1094" }>
%"class.WTF::RefCounted.1094" = type { %"class.base::RefCounted.1095" }
%"class.base::RefCounted.1095" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.1096 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1097 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1098 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1099", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1099" = type { %"class.base::RefCounted.1100" }
%"class.base::RefCounted.1100" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1101" }
%"class.blink::DataRef.1101" = type { %class.scoped_refptr.1102 }
%class.scoped_refptr.1102 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1045", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1103" }
%"class.WTF::RefCounted.1103" = type { %"class.base::RefCounted.1104" }
%"class.base::RefCounted.1104" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1120" = type { %"class.blink::PersistentBase.1121" }
%"class.blink::PersistentBase.1121" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1090, %"class.blink::Member.1015", i32, [4 x i8] }>
%"class.absl::optional.1124" = type { %"class.absl::optional_internal::optional_data.1125" }
%"class.absl::optional_internal::optional_data.1125" = type { %"class.absl::optional_internal::optional_data_base.1126" }
%"class.absl::optional_internal::optional_data_base.1126" = type { %"class.absl::optional_internal::optional_data_dtor_base.1127" }
%"class.absl::optional_internal::optional_data_dtor_base.1127" = type { i8, [3 x i8], %union.anon.1128 }
%union.anon.1128 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.1105" = type { %"class.blink::PersistentBase.1106" }
%"class.blink::PersistentBase.1106" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1109" }
%"class.blink::HeapVector.1109" = type { %"class.WTF::Vector.1112" }
%"class.WTF::Vector.1112" = type { %"class.WTF::VectorBuffer.1113" }
%"class.WTF::VectorBuffer.1113" = type { %"class.WTF::VectorBufferBase.1114" }
%"class.WTF::VectorBufferBase.1114" = type { %"class.blink::Member.1115"*, i32, i32 }
%"class.blink::Member.1115" = type { %"class.blink::MemberBase.1116" }
%"class.blink::MemberBase.1116" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1129" = type { %class.scoped_refptr.1130 }
%class.scoped_refptr.1130 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1131", %"class.blink::DataRef.1133", %"class.blink::DataRef.1137", %"class.blink::DataRef.1146", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1165", %"class.std::__1::unique_ptr.1176", %"class.std::__1::unique_ptr.1214", %"class.std::__1::unique_ptr.1225", %"class.std::__1::unique_ptr.1236", %"class.WTF::Vector.1242", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1131" = type { %"class.base::RefCounted.1132" }
%"class.base::RefCounted.1132" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1133" = type { %class.scoped_refptr.1134 }
%class.scoped_refptr.1134 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1135", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1135" = type { %"class.base::RefCounted.1136" }
%"class.base::RefCounted.1136" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1137" = type { %class.scoped_refptr.1138 }
%class.scoped_refptr.1138 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1139", [4 x i8], %"class.WTF::Vector.1141", i8, [7 x i8] }>
%"class.WTF::RefCounted.1139" = type { %"class.base::RefCounted.1140" }
%"class.base::RefCounted.1140" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1141" = type { %"class.WTF::VectorBuffer.1142" }
%"class.WTF::VectorBuffer.1142" = type { %"class.WTF::VectorBufferBase.1143" }
%"class.WTF::VectorBufferBase.1143" = type { i32*, i32, i32 }
%"class.blink::DataRef.1146" = type { %class.scoped_refptr.1147 }
%class.scoped_refptr.1147 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1148", [4 x i8], %"class.WTF::HashMap.1150", %"class.WTF::HashMap.1150", %"class.WTF::HashMap.1150", %"class.WTF::HashMap.1150", %"class.WTF::HashMap.1150", %"class.WTF::HashMap.1150", %"class.WTF::HashMap.1155", %"class.WTF::HashMap.1155", %"class.WTF::HashMap.1155", %"class.WTF::HashMap.1155", %"class.WTF::HashMap.1160", %"class.WTF::Vector.1071", %"class.WTF::Vector.1071", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1148" = type { %"class.base::RefCounted.1149" }
%"class.base::RefCounted.1149" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1150" = type { %"class.WTF::HashTable.1151" }
%"class.WTF::HashTable.1151" = type <{ %"struct.WTF::KeyValuePair.1154"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1154" = type { %"class.WTF::String", %"class.WTF::Vector.1528" }
%"class.WTF::Vector.1528" = type { %"class.WTF::VectorBuffer.1529" }
%"class.WTF::VectorBuffer.1529" = type { %"class.WTF::VectorBufferBase.1530" }
%"class.WTF::VectorBufferBase.1530" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1155" = type { %"class.WTF::HashTable.1156" }
%"class.WTF::HashTable.1156" = type <{ %"struct.WTF::KeyValuePair.1159"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1159" = type { i64, %"class.WTF::Vector.1242" }
%"class.WTF::HashMap.1160" = type { %"class.WTF::HashTable.1161" }
%"class.WTF::HashTable.1161" = type <{ %"struct.WTF::KeyValuePair.1164"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1164" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1168" }
%"class.WTF::HashMap.1168" = type { %"class.WTF::HashTable.1169" }
%"class.WTF::HashTable.1169" = type <{ %"struct.WTF::KeyValuePair.1172"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1172" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1533", %"class.absl::optional.1533", %"class.absl::optional.1533" }
%"class.absl::optional.1533" = type { %"class.absl::optional_internal::optional_data.1534" }
%"class.absl::optional_internal::optional_data.1534" = type { %"class.absl::optional_internal::optional_data_base.1535" }
%"class.absl::optional_internal::optional_data_base.1535" = type { %"class.absl::optional_internal::optional_data_dtor_base.1536" }
%"class.absl::optional_internal::optional_data_dtor_base.1536" = type { i8, %union.anon.1537 }
%union.anon.1537 = type { i32 }
%"class.std::__1::unique_ptr.1176" = type { %"class.std::__1::__compressed_pair.1177" }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.1178" }
%"struct.std::__1::__compressed_pair_elem.1178" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1024", %"class.WTF::Vector.1191", %"class.WTF::Vector.1179", %"class.WTF::Vector.1196", %"class.WTF::Vector.1201", %"class.WTF::Vector.1206" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1179", %"class.WTF::Vector.1179", %"class.WTF::Vector.1184" }
%"class.WTF::Vector.1184" = type { %"class.WTF::VectorBuffer.1185" }
%"class.WTF::VectorBuffer.1185" = type { %"class.WTF::VectorBufferBase.1186" }
%"class.WTF::VectorBufferBase.1186" = type { %class.scoped_refptr.1187*, i32, i32 }
%class.scoped_refptr.1187 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1188" }
%"class.base::RefCountedThreadSafe.1188" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1191" = type { %"class.WTF::VectorBuffer.1192" }
%"class.WTF::VectorBuffer.1192" = type { %"class.WTF::VectorBufferBase.1193" }
%"class.WTF::VectorBufferBase.1193" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1179" = type { %"class.WTF::VectorBuffer.1180" }
%"class.WTF::VectorBuffer.1180" = type { %"class.WTF::VectorBufferBase.1181" }
%"class.WTF::VectorBufferBase.1181" = type { double*, i32, i32 }
%"class.WTF::Vector.1196" = type { %"class.WTF::VectorBuffer.1197" }
%"class.WTF::VectorBuffer.1197" = type { %"class.WTF::VectorBufferBase.1198" }
%"class.WTF::VectorBufferBase.1198" = type { i32*, i32, i32 }
%"class.WTF::Vector.1201" = type { %"class.WTF::VectorBuffer.1202" }
%"class.WTF::VectorBuffer.1202" = type { %"class.WTF::VectorBufferBase.1203" }
%"class.WTF::VectorBufferBase.1203" = type { i32*, i32, i32 }
%"class.WTF::Vector.1206" = type { %"class.WTF::VectorBuffer.1207" }
%"class.WTF::VectorBuffer.1207" = type { %"class.WTF::VectorBufferBase.1208" }
%"class.WTF::VectorBufferBase.1208" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1214" = type { %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1217" }
%"class.WTF::Vector.1217" = type { %"class.WTF::VectorBuffer.1218" }
%"class.WTF::VectorBuffer.1218" = type { %"class.WTF::VectorBufferBase.1219" }
%"class.WTF::VectorBufferBase.1219" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1225" = type { %"class.std::__1::__compressed_pair.1226" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.1227" }
%"struct.std::__1::__compressed_pair_elem.1227" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1228" }
%"class.WTF::Vector.1228" = type { %"class.WTF::VectorBuffer.1229" }
%"class.WTF::VectorBuffer.1229" = type { %"class.WTF::VectorBufferBase.1230" }
%"class.WTF::VectorBufferBase.1230" = type { %"class.blink::Persistent.1045"*, i32, i32 }
%"class.std::__1::unique_ptr.1236" = type { %"class.std::__1::__compressed_pair.1237" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.1238" }
%"struct.std::__1::__compressed_pair_elem.1238" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1045", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1247" }
%"class.WTF::Vector.1247" = type { %"class.WTF::VectorBuffer.1248" }
%"class.WTF::VectorBuffer.1248" = type { %"class.WTF::VectorBufferBase.1249" }
%"class.WTF::VectorBufferBase.1249" = type { %class.scoped_refptr.1250*, i32, i32 }
%class.scoped_refptr.1250 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1094", [4 x i8] }>
%"class.blink::Persistent.1253" = type { %"class.blink::PersistentBase.1254" }
%"class.blink::PersistentBase.1254" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1257" }
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1259" = type { %class.scoped_refptr.1260 }
%class.scoped_refptr.1260 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1261", [4 x i8], %"class.blink::DataRef.1263", %"class.blink::DataRef.1267", %"class.blink::DataRef.1288", %"class.blink::DataRef.1306", %"class.blink::DataRef.1318", %"class.blink::DataRef.1322", %class.scoped_refptr.1292, i32, [4 x i8] }>
%"class.WTF::RefCounted.1261" = type { %"class.base::RefCounted.1262" }
%"class.base::RefCounted.1262" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1263" = type { %class.scoped_refptr.1264 }
%class.scoped_refptr.1264 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1265", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1265" = type { %"class.base::RefCounted.1266" }
%"class.base::RefCounted.1266" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1267" = type { %class.scoped_refptr.1268 }
%class.scoped_refptr.1268 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1269", %class.scoped_refptr.1271, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1269" = type { %"class.base::RefCounted.1270" }
%"class.base::RefCounted.1270" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1271 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1272", %"class.std::__1::unique_ptr.1278", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1091" }>
%"class.std::__1::unique_ptr.1272" = type { %"class.std::__1::__compressed_pair.1273" }
%"class.std::__1::__compressed_pair.1273" = type { %"struct.std::__1::__compressed_pair_elem.1274" }
%"struct.std::__1::__compressed_pair_elem.1274" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1278" = type { %"class.std::__1::__compressed_pair.1279" }
%"class.std::__1::__compressed_pair.1279" = type { %"struct.std::__1::__compressed_pair_elem.1280" }
%"struct.std::__1::__compressed_pair_elem.1280" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1288" = type { %class.scoped_refptr.1289 }
%class.scoped_refptr.1289 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1290", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1290" = type { %"class.base::RefCounted.1291" }
%"class.base::RefCounted.1291" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1292, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1306" = type { %class.scoped_refptr.1307 }
%class.scoped_refptr.1307 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1308", [4 x i8], %class.scoped_refptr.1310, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1308" = type { %"class.base::RefCounted.1309" }
%"class.base::RefCounted.1309" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1310 = type { %"class.base::RefCountedData.1311"* }
%"class.base::RefCountedData.1311" = type { %"class.base::RefCountedThreadSafe.1312", %"class.WTF::Vector.1313" }
%"class.base::RefCountedThreadSafe.1312" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1313" = type { %"class.WTF::VectorBuffer.1314" }
%"class.WTF::VectorBuffer.1314" = type { %"class.WTF::VectorBufferBase.1315" }
%"class.WTF::VectorBufferBase.1315" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1318" = type { %class.scoped_refptr.1319 }
%class.scoped_refptr.1319 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1320", %class.scoped_refptr.1292, %class.scoped_refptr.1292, %class.scoped_refptr.1292 }
%"class.WTF::RefCounted.1320" = type { %"class.base::RefCounted.1321" }
%"class.base::RefCounted.1321" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1322" = type { %class.scoped_refptr.1323 }
%class.scoped_refptr.1323 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1324", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1324" = type { %"class.base::RefCounted.1325" }
%"class.base::RefCounted.1325" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1292 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1293", %"class.blink::Persistent.1295", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1293" = type { %"class.base::RefCounted.1294" }
%"class.base::RefCounted.1294" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1295" = type { %"class.blink::PersistentBase.1296" }
%"class.blink::PersistentBase.1296" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.54", %"class.blink::HeapHashMap.1299" }
%"class.blink::HeapHashMap.1299" = type { %"class.WTF::HashMap.1302" }
%"class.WTF::HashMap.1302" = type { %"class.WTF::HashTable.1303" }
%"class.WTF::HashTable.1303" = type <{ %"struct.WTF::KeyValuePair.1305"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1305" = type opaque
%"class.blink::DataRef.1326" = type { %class.scoped_refptr.1327 }
%class.scoped_refptr.1327 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1328", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1328" = type { %"class.base::RefCounted.1329" }
%"class.base::RefCounted.1329" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1330" = type { %class.scoped_refptr.1331 }
%class.scoped_refptr.1331 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1332", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1332" = type { %"class.base::RefCounted.1333" }
%"class.base::RefCounted.1333" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1334" = type { %class.scoped_refptr.1335 }
%class.scoped_refptr.1335 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1336", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1336" = type { %"class.base::RefCounted.1337" }
%"class.base::RefCounted.1337" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1338" = type { %class.scoped_refptr.1339 }
%class.scoped_refptr.1339 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1340", %class.scoped_refptr.1342 }
%"class.WTF::RefCounted.1340" = type { %"class.base::RefCounted.1341" }
%"class.base::RefCounted.1341" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1342 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1512", %"class.blink::StyleVariables", %class.scoped_refptr.1342 }
%"class.WTF::RefCounted.1512" = type { %"class.base::RefCounted.1513" }
%"class.base::RefCounted.1513" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1343" = type { %"class.base::RefCounted.1344" }
%"class.base::RefCounted.1344" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1345" = type { %"class.std::__1::__compressed_pair.1346" }
%"class.std::__1::__compressed_pair.1346" = type { %"struct.std::__1::__compressed_pair_elem.1347" }
%"struct.std::__1::__compressed_pair_elem.1347" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1348" }
%"class.std::__1::unique_ptr.1348" = type { %"class.std::__1::__compressed_pair.1349" }
%"class.std::__1::__compressed_pair.1349" = type { %"struct.std::__1::__compressed_pair_elem.1350" }
%"struct.std::__1::__compressed_pair_elem.1350" = type { %"class.WTF::Vector.1351"* }
%"class.WTF::Vector.1351" = type { %"class.WTF::VectorBuffer.1548" }
%"class.WTF::VectorBuffer.1548" = type { %"class.WTF::VectorBufferBase.1549", [32 x i8] }
%"class.WTF::VectorBufferBase.1549" = type { %class.scoped_refptr.909*, i32, i32 }
%"class.blink::Member.1571" = type { %"class.blink::MemberBase.1572" }
%"class.blink::MemberBase.1572" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1577", %"class.blink::HeapHashSet.1586" }
%"class.blink::HeapVector.1577" = type { %"class.WTF::Vector.1580" }
%"class.WTF::Vector.1580" = type { %"class.WTF::VectorBuffer.1581" }
%"class.WTF::VectorBuffer.1581" = type { %"class.WTF::VectorBufferBase.1582" }
%"class.WTF::VectorBufferBase.1582" = type { %"class.blink::Member.1583"*, i32, i32 }
%"class.blink::Member.1583" = type { %"class.blink::MemberBase.1584" }
%"class.blink::MemberBase.1584" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1586" = type { %"class.WTF::HashSet.1589" }
%"class.WTF::HashSet.1589" = type { %"class.WTF::HashTable.1590" }
%"class.WTF::HashTable.1590" = type <{ %"class.blink::Member.1583"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::HeapHashSet.1596"* }
%"class.blink::HeapHashSet.1596" = type opaque
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.blink::FormData" = type opaque
%"class.absl::optional.1516" = type { %"class.absl::optional_internal::optional_data.1517" }
%"class.absl::optional_internal::optional_data.1517" = type { %"class.absl::optional_internal::optional_data_base.1518" }
%"class.absl::optional_internal::optional_data_base.1518" = type { %"class.absl::optional_internal::optional_data_dtor_base.1519" }
%"class.absl::optional_internal::optional_data_dtor_base.1519" = type { i8, %union.anon.1520 }
%union.anon.1520 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1521" }
%"class.base::time_internal::TimeBase.1521" = type { i64 }
%"class.blink::FileList" = type opaque
%"class.blink::DragData" = type opaque
%"class.blink::ColorChooserClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::MouseEvent" = type opaque
%"class.blink::ClickHandlingState" = type { %"class.blink::EventDispatchHandlingState", i8, i8, %"class.blink::Member" }
%"class.blink::EventDispatchHandlingState" = type { i32 (...)** }
%"class.blink::AXObject" = type opaque
%"class.blink::FormControlState" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.anon.1597 = type { %"class.blink::LayoutObject"*, i8** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1611" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1611" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.1598", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.1598" = type { %"class.std::__1::__vector_base.1599" }
%"class.std::__1::__vector_base.1599" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1606" }
%"class.std::__1::__compressed_pair.1606" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"struct.std::__1::__compressed_pair_elem.1607" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.1600", i64, i64 }
%"class.std::__1::unique_ptr.1600" = type { %"class.std::__1::__compressed_pair.1601" }
%"class.std::__1::__compressed_pair.1601" = type { %"struct.std::__1::__compressed_pair_elem.1602" }
%"struct.std::__1::__compressed_pair_elem.1602" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringEDsEcvS1_Ev = comdat any

$_ZN3WTF13StringBuilder6AppendEDs = comdat any

$_ZN5blink15NumberInputTypeD0Ev = comdat any

$_ZNK5blink18TextFieldInputType14NeedsContainerEv = comdat any

$_ZThn16_N5blink15NumberInputTypeD1Ev = comdat any

$_ZThn16_N5blink15NumberInputTypeD0Ev = comdat any

$_ZN5blink13InputTypeView21EnsureFallbackContentEv = comdat any

$_ZN5blink13InputTypeView20EnsurePrimaryContentEv = comdat any

$_ZNK5blink13InputTypeView18HasFallbackContentEv = comdat any

$_ZNK5blink13InputTypeView17FocusedFieldIndexEv = comdat any

$_ZThn40_N5blink15NumberInputTypeD1Ev = comdat any

$_ZThn40_N5blink15NumberInputTypeD0Ev = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS_6StringEDsE6lengthEv = comdat any

@_ZN5blink16input_type_names7kNumberE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZZNK5blink15NumberInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 16
@_ZGVZNK5blink15NumberInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description = internal global i64 0, align 8
@_ZN5blink10html_names9kStepAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kMinAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kMaxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.1 = private unnamed_addr constant [16 x i8] c"0123456789.Ee-+\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.3 = private unnamed_addr constant [61 x i8] c"The specified value %s cannot be parsed, or is out of range.\00", align 1
@_ZN5blink26layout_invalidation_reason17kAttributeChangedE = external constant [0 x i8], align 1
@_ZTVN5blink15NumberInputTypeE = hidden unnamed_addr constant { [120 x i8*], [60 x i8*], [11 x i8*] } { [120 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*)* @_ZN5blink15NumberInputTypeD0Ev to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*, %"class.blink::Visitor"*)* @_ZNK5blink18TextFieldInputType5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::InputTypeView"* (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType10CreateViewEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::NumberInputType"*)* @_ZNK5blink15NumberInputType15FormControlTypeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20IsInteractiveContentEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType12IsTextButtonEv to i8*), i8* bitcast (i1 (%"class.blink::TextFieldInputType"*)* @_ZNK5blink18TextFieldInputType11IsTextFieldEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20IsFormDataAppendableEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*, %"class.blink::FormData"*)* @_ZNK5blink18TextFieldInputType16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType21ResultForDialogSubmitEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType24ValueInFilenameValueModeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12DefaultLabelEv to i8*), i8* bitcast (i32 (%"class.blink::TextFieldInputType"*)* @_ZNK5blink18TextFieldInputType12GetValueModeEv to i8*), i8* bitcast (double (%"class.blink::InputType"*)* @_ZNK5blink9InputType11ValueAsDateEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.absl::optional.1516"*, %"class.blink::ExceptionState"*)* @_ZNK5blink9InputType14SetValueAsDateERKN4absl8optionalIN4base4TimeEEERNS_14ExceptionStateE to i8*), i8* bitcast (double (%"class.blink::NumberInputType"*)* @_ZNK5blink15NumberInputType13ValueAsDoubleEv to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*, double, i32, %"class.blink::ExceptionState"*)* @_ZNK5blink15NumberInputType16SetValueAsDoubleEdNS_22TextFieldEventBehaviorERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)* @_ZNK5blink15NumberInputType17SetValueAsDecimalERKNS_7DecimalENS_22TextFieldEventBehaviorERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZNK5blink9InputType14ReadingCheckedEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, i1)* @_ZN5blink9InputType21WillUpdateCheckednessEb to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType18SupportsValidationEv to i8*), i8* bitcast (i1 (%"class.blink::NumberInputType"*, %"class.WTF::String"*)* @_ZNK5blink15NumberInputType15TypeMismatchForERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::NumberInputType"*)* @_ZNK5blink15NumberInputType12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType16SupportsRequiredEv to i8*), i8* bitcast (i1 (%"class.blink::TextFieldInputType"*, %"class.WTF::String"*)* @_ZNK5blink18TextFieldInputType12ValueMissingERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType15PatternMismatchERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)* @_ZNK5blink9InputType7TooLongERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)* @_ZNK5blink9InputType8TooShortERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::InputType"*)* @_ZNK5blink9InputType21DefaultValueForStepUpEv to i8*), i8* bitcast (void (%"class.blink::StepRange"*, %"class.blink::NumberInputType"*, i32)* @_ZNK5blink15NumberInputType15CreateStepRangeENS_15AnyStepHandlingE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::NumberInputType"*)* @_ZNK5blink15NumberInputType12BadInputTextEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::NumberInputType"*, %"class.blink::Decimal"*)* @_ZNK5blink15NumberInputType17ValueNotEqualTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::NumberInputType"*, %"class.blink::Decimal"*)* @_ZNK5blink15NumberInputType17RangeOverflowTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::NumberInputType"*, %"class.blink::Decimal"*)* @_ZNK5blink15NumberInputType18RangeUnderflowTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType27ReversedRangeOutOfRangeTextERKNS_7DecimalES3_ to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType16RangeInvalidTextERKNS_7DecimalES3_ to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType16TypeMismatchTextEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType16ValueMissingTextEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType17CanSetStringValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::NumberInputType"*, %"class.WTF::String"*)* @_ZNK5blink15NumberInputType13LocalizeValueERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::NumberInputType"*)* @_ZNK5blink15NumberInputType12VisibleValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::NumberInputType"*, %"class.WTF::String"*)* @_ZNK5blink15NumberInputType13SanitizeValueERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType22SanitizeUserInputValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*, %"class.WTF::String"*)* @_ZNK5blink15NumberInputType20WarnIfValueIsInvalidERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::TextFieldInputType"*)* @_ZNK5blink18TextFieldInputType25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType27CanBeSuccessfulSubmitButtonEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType20LayoutObjectIsNeededEv to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*)* @_ZN5blink15NumberInputType10CountUsageEv to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType48SanitizeValueInResponseToMinOrMaxAttributeChangeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType27ShouldRespectAlignAttributeEv to i8*), i8* bitcast (%"class.blink::FileList"* (%"class.blink::InputType"*)* @_ZN5blink9InputType5FilesEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::FileList"*)* @_ZN5blink9InputType8SetFilesEPNS_8FileListE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::FileList"*)* @_ZN5blink9InputType25SetFilesAndDispatchEventsEPNS_8FileListE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.WTF::Vector.1242"*)* @_ZN5blink9InputType17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::DragData"*)* @_ZN5blink9InputType19ReceiveDroppedFilesEPKNS_8DragDataE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZN5blink9InputType19DroppedFileSystemIdEv to i8*), i8* bitcast (i1 (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType20CanSetSuggestedValueEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType40ShouldSendChangeEventAfterCheckedChangedEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZN5blink9InputType11CanSetValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*, %"class.WTF::String"*, i1, i32, i32)* @_ZN5blink15NumberInputType8SetValueERKN3WTF6StringEbNS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE to i8*), i8* bitcast (i1 (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType26ShouldRespectListAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType14IsEnumeratableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType11IsCheckableEv to i8*), i8* bitcast (i1 (%"class.blink::NumberInputType"*)* @_ZNK5blink15NumberInputType11IsSteppableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType37ShouldRespectHeightAndWidthAttributesEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType9MaxLengthEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType9MinLengthEv to i8*), i8* bitcast (i1 (%"class.blink::NumberInputType"*)* @_ZNK5blink15NumberInputType19SupportsPlaceholderEv to i8*), i8* bitcast (i1 (%"class.blink::TextFieldInputType"*)* @_ZNK5blink18TextFieldInputType16SupportsReadOnlyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::InputTypeView"*)* @_ZNK5blink9InputType14DefaultToolTipERKNS_13InputTypeViewE to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZN5blink9InputType24FindClosestTickMarkValueERKNS_7DecimalE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::QualifiedName"*)* @_ZNK5blink9InputType21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::HTMLInputElement"*)* @_ZN5blink9InputType26CopyNonAttributePropertiesERKNS_16HTMLInputElementE to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType24OnAttachWithLayoutObjectEv to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::NumberInputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)* @_ZNK5blink15NumberInputType13ParseToNumberERKN3WTF6StringERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::NumberInputType"*, %"class.blink::Decimal"*)* @_ZNK5blink15NumberInputType9SerializeERKNS_7DecimalE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType26SupportsInputModeAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::NumberInputType"*)* @_ZNK5blink15NumberInputType20SupportsSelectionAPIEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType6HeightEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType5WidthEv to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType19DispatchSearchEventEv to i8*), i8* bitcast (%"class.blink::ColorChooserClient"* (%"class.blink::InputType"*)* @_ZN5blink9InputType21GetColorChooserClientEv to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*, %"class.blink::KeyboardEvent"*)* @_ZN5blink15NumberInputType18HandleKeydownEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType19CreateShadowSubtreeEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType20DestroyShadowSubtreeEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType21ValueAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType24ReadonlyAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*, %"class.blink::Event"*)* @_ZN5blink18TextFieldInputType12ForwardEventERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType15HandleBlurEventEv to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*, %"class.blink::BeforeTextInsertedEvent"*)* @_ZN5blink15NumberInputType29HandleBeforeTextInsertedEventERNS_23BeforeTextInsertedEventE to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType10UpdateViewEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*, %"class.blink::ComputedStyle"*)* @_ZN5blink18TextFieldInputType26CustomStyleForLayoutObjectERNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::TextFieldInputType"*)* @_ZNK5blink18TextFieldInputType27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::TextFieldInputType"*, %"class.blink::ComputedStyle"*, i32)* @_ZNK5blink18TextFieldInputType18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::TextFieldInputType"*)* @_ZNK5blink18TextFieldInputType14NeedsContainerEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::NumberInputType"*, %"class.WTF::String"*)* @_ZNK5blink15NumberInputType23ConvertFromVisibleValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType21DidSetValueByUserEditEv to i8*), i8* bitcast (i1 (%"class.blink::TextFieldInputType"*, %"class.blink::Event"*)* @_ZN5blink18TextFieldInputType22ShouldSubmitImplicitlyERKNS_5EventE to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType26ListAttributeTargetChangedEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*, i1)* @_ZN5blink18TextFieldInputType21UpdatePlaceholderTextEb to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType17SubtreeHasChangedEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType29FocusAndSelectSpinButtonOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType36ShouldSpinButtonRespondToMouseEventsEv to i8*), i8* bitcast (i1 (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType36ShouldSpinButtonRespondToWheelEventsEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType18SpinButtonStepDownEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZN5blink18TextFieldInputType16SpinButtonStepUpEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*, i32)* @_ZN5blink18TextFieldInputType32SpinButtonDidReleaseMouseCaptureENS_17SpinButtonElement13EventDispatchE to i8*), i8* bitcast (i1 (%"class.blink::NumberInputType"*, i32, i32*)* @_ZNK5blink15NumberInputType27SizeShouldIncludeDecorationEiRi to i8*), i8* bitcast (i1 (%"class.blink::NumberInputType"*)* @_ZNK5blink15NumberInputType11HasBadInputEv to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*)* @_ZN5blink15NumberInputType24MinOrMaxAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*)* @_ZN5blink15NumberInputType20StepAttributeChangedEv to i8*)], [60 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::TextFieldInputType"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink18TextFieldInputType5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*)* @_ZThn16_N5blink15NumberInputTypeD1Ev to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*)* @_ZThn16_N5blink15NumberInputTypeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::NumberInputType"*, i32, i32*)* @_ZThn16_NK5blink15NumberInputType27SizeShouldIncludeDecorationEiRi to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)* @_ZN5blink13InputTypeView16HandleClickEventERNS_10MouseEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)* @_ZN5blink13InputTypeView20HandleMouseDownEventERNS_10MouseEventE to i8*), i8* bitcast (%"class.blink::ClickHandlingState"* (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView17WillDispatchClickEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Event"*, %"class.blink::ClickHandlingState"*)* @_ZN5blink13InputTypeView16DidDispatchClickERNS_5EventERKNS_18ClickHandlingStateE to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*, %"class.blink::KeyboardEvent"*)* @_ZThn16_N5blink15NumberInputType18HandleKeydownEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)* @_ZN5blink13InputTypeView19HandleKeypressEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)* @_ZN5blink13InputTypeView16HandleKeyupEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*, %"class.blink::BeforeTextInsertedEvent"*)* @_ZThn16_N5blink15NumberInputType29HandleBeforeTextInsertedEventERNS_23BeforeTextInsertedEventE to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*, %"class.blink::Event"*)* @_ZThn16_N5blink18TextFieldInputType12ForwardEventERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::TextFieldInputType"*, %"class.blink::Event"*)* @_ZThn16_N5blink18TextFieldInputType22ShouldSubmitImplicitlyERKNS_5EventE to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView17FormForSubmissionEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView19HasCustomFocusLogicEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32)* @_ZN5blink13InputTypeView18HandleFocusInEventEPNS_7ElementENS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZThn16_N5blink18TextFieldInputType15HandleBlurEventEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)* @_ZN5blink13InputTypeView22HandleDOMActivateEventERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, i32)* @_ZN5blink13InputTypeView15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView4BlurEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZThn16_N5blink18TextFieldInputType17SubtreeHasChangedEv to i8*), i8* bitcast (i1 (%"class.blink::TextFieldInputType"*)* @_ZThn16_NK5blink18TextFieldInputType27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::TextFieldInputType"*, %"class.blink::ComputedStyle"*, i32)* @_ZThn16_NK5blink18TextFieldInputType18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*, %"class.blink::ComputedStyle"*)* @_ZThn16_N5blink18TextFieldInputType26CustomStyleForLayoutObjectERNS_13ComputedStyleE to i8*), i8* bitcast (i8 (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView21ComputedTextDirectionEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView14ClosePopupViewEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView14HasOpenedPopupEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView18NeedsShadowSubtreeEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZThn16_N5blink18TextFieldInputType19CreateShadowSubtreeEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZThn16_N5blink18TextFieldInputType20DestroyShadowSubtreeEv to i8*), i8* bitcast (%"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView12UploadButtonEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView14FileStatusTextEv to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*)* @_ZThn16_N5blink15NumberInputType24MinOrMaxAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*)* @_ZThn16_N5blink15NumberInputType20StepAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView19AltAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView19SrcAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZThn16_N5blink18TextFieldInputType10UpdateViewEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24MultipleAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZThn16_N5blink18TextFieldInputType24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZThn16_N5blink18TextFieldInputType24ReadonlyAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24RequiredAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZThn16_N5blink18TextFieldInputType21ValueAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.WTF::String"*, i1)* @_ZN5blink13InputTypeView11DidSetValueERKN3WTF6StringEb to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZThn16_N5blink18TextFieldInputType26ListAttributeTargetChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView27CapsLockStateMayHaveChangedEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView27ShouldDrawCapsLockIndicatorEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView27UpdateClearButtonVisibilityEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*, i1)* @_ZThn16_N5blink18TextFieldInputType21UpdatePlaceholderTextEb to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView17PopupRootAXObjectEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView21EnsureFallbackContentEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView20EnsurePrimaryContentEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView18HasFallbackContentEv to i8*), i8* bitcast (void ()* @_ZNK5blink13InputTypeView20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*)* @_ZN5blink13InputTypeView23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView15IsDraggedSliderEv to i8*), i8* bitcast (i1 (%"class.blink::NumberInputType"*)* @_ZThn16_NK5blink15NumberInputType11HasBadInputEv to i8*), i8* bitcast (i32 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView17FocusedFieldIndexEv to i8*)], [11 x i8*] [i8* inttoptr (i64 -40 to i8*), i8* null, i8* bitcast (void (%"class.blink::TextFieldInputType"*, %"class.blink::Visitor"*)* @_ZThn40_NK5blink18TextFieldInputType5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*)* @_ZThn40_N5blink15NumberInputTypeD1Ev to i8*), i8* bitcast (void (%"class.blink::NumberInputType"*)* @_ZThn40_N5blink15NumberInputTypeD0Ev to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZThn40_N5blink18TextFieldInputType29FocusAndSelectSpinButtonOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::TextFieldInputType"*)* @_ZThn40_N5blink18TextFieldInputType36ShouldSpinButtonRespondToMouseEventsEv to i8*), i8* bitcast (i1 (%"class.blink::TextFieldInputType"*)* @_ZThn40_N5blink18TextFieldInputType36ShouldSpinButtonRespondToWheelEventsEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*, i32)* @_ZThn40_N5blink18TextFieldInputType32SpinButtonDidReleaseMouseCaptureENS_17SpinButtonElement13EventDispatchE to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZThn40_N5blink18TextFieldInputType18SpinButtonStepDownEv to i8*), i8* bitcast (void (%"class.blink::TextFieldInputType"*)* @_ZThn40_N5blink18TextFieldInputType16SpinButtonStepUpEv to i8*)] }, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.4 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.9 = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@.str.12 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.13 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NumberInputType10CountUsageEv(%"class.blink::NumberInputType"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink9InputType19CountUsageIfVisibleENS_5mojom10WebFeatureE(%"class.blink::InputType"* %2, i32 33) #12
  ret void
}

declare void @_ZNK5blink9InputType19CountUsageIfVisibleENS_5mojom10WebFeatureE(%"class.blink::InputType"*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink15NumberInputType15FormControlTypeEv(%"class.blink::NumberInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kNumberE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NumberInputType8SetValueERKN3WTF6StringEbNS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::NumberInputType"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  br i1 %2, label %39, label %6

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %39

14:                                               ; preds = %6, %10
  %15 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %16, i64 0, i32 0
  %18 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"* %17) #12
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %39, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp ne i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %20
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %20
  %33 = phi i32 [ %31, %30 ], [ %29, %20 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #12
  br i1 %23, label %37, label %39

36:                                               ; preds = %32
  br i1 %23, label %37, label %39

37:                                               ; preds = %35, %36
  %38 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %15, align 8
  tail call void @_ZN5blink16HTMLInputElement10UpdateViewEv(%"class.blink::HTMLInputElement"* %38) #12
  br label %39

39:                                               ; preds = %10, %5, %14, %35, %37, %36
  %40 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextFieldInputType8SetValueERKN3WTF6StringEbNS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::TextFieldInputType"* %40, %"class.WTF::String"* dereferenceable(8) %1, i1 zeroext %2, i32 %3, i32 %4) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink16HTMLInputElement10UpdateViewEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType8SetValueERKN3WTF6StringEbNS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::TextFieldInputType"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink15NumberInputType13ValueAsDoubleEv(%"class.blink::NumberInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #12
  %4 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %6 = bitcast %"class.blink::HTMLInputElement"* %5 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %7, i64 195
  %9 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %8, align 8
  %10 = tail call %"class.WTF::StringImpl"* %9(%"class.blink::HTMLInputElement"* %5) #12
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = call double @_ZN5blink26ParseToDoubleForNumberTypeERKN3WTF6StringEd(%"class.WTF::String"* nonnull dereferenceable(8) %2, double 0x7FF8000000000000) #12
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #12
  br label %28

28:                                               ; preds = %1, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #12
  ret double %12
}

declare double @_ZN5blink26ParseToDoubleForNumberTypeERKN3WTF6StringEd(%"class.WTF::String"* dereferenceable(8), double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15NumberInputType16SetValueAsDoubleEdNS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::NumberInputType"* nocapture readonly, double, i32, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %6, align 8
  %8 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = tail call %"class.WTF::StringImpl"* @_ZN5blink22SerializeForNumberTypeEd(double %1) #12
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = bitcast %"class.blink::HTMLInputElement"* %7 to void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)***
  %12 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %12, i64 196
  %14 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %13, align 8
  call void %14(%"class.blink::HTMLInputElement"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 %2, i32 0) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #12
  br label %30

30:                                               ; preds = %4, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink22SerializeForNumberTypeEd(double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15NumberInputType17SetValueAsDecimalERKNS_7DecimalENS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::NumberInputType"* nocapture readonly, %"class.blink::Decimal"* dereferenceable(24), i32, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %6, align 8
  %8 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = tail call %"class.WTF::StringImpl"* @_ZN5blink22SerializeForNumberTypeERKNS_7DecimalE(%"class.blink::Decimal"* dereferenceable(24) %1) #12
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = bitcast %"class.blink::HTMLInputElement"* %7 to void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)***
  %12 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %12, i64 196
  %14 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %13, align 8
  call void %14(%"class.blink::HTMLInputElement"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 %2, i32 0) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #12
  br label %30

30:                                               ; preds = %4, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink22SerializeForNumberTypeERKNS_7DecimalE(%"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15NumberInputType15TypeMismatchForERKN3WTF6StringE(%"class.blink::NumberInputType"* nocapture readnone, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = tail call double @_ZN5blink26ParseToDoubleForNumberTypeERKN3WTF6StringEd(%"class.WTF::String"* dereferenceable(8) %1, double 0x7FF8000000000000) #12
  %12 = tail call double @llvm.fabs.f64(double %11) #13
  %13 = fcmp ueq double %12, 0x7FF0000000000000
  br label %14

14:                                               ; preds = %2, %10, %6
  %15 = phi i1 [ false, %6 ], [ %13, %10 ], [ false, %2 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink15NumberInputType12TypeMismatchEv(%"class.blink::NumberInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15NumberInputType15CreateStepRangeENS_15AnyStepHandlingE(%"class.blink::StepRange"* noalias sret, %"class.blink::NumberInputType"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink15NumberInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13, !prof !2

9:                                                ; preds = %3
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink15NumberInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description) #12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %9
  store <4 x i32> <i32 1, i32 0, i32 1, i32 0>, <4 x i32>* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink15NumberInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description to <4 x i32>*), align 16
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink15NumberInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description) #12
  br label %13

13:                                               ; preds = %9, %12, %3
  %14 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @_ZN5blink7Decimal10FromDoubleEd(%"class.blink::Decimal"* nonnull sret %4, double 0x7FEFFFFFFFFFFFFF) #12
  %16 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %1, i64 0, i32 0, i32 0
  %17 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #12
  call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* nonnull %5, i32 0) #12
  %18 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #12
  call void @_ZNK5blink7DecimalngEv(%"class.blink::Decimal"* nonnull sret %6, %"class.blink::Decimal"* nonnull %4) #12
  call void @_ZNK5blink9InputType15CreateStepRangeENS_15AnyStepHandlingERKNS_7DecimalES4_S4_RKNS_9StepRange15StepDescriptionE(%"class.blink::StepRange"* sret %0, %"class.blink::InputType"* %16, i32 %2, %"class.blink::Decimal"* nonnull dereferenceable(24) %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %6, %"class.blink::Decimal"* nonnull dereferenceable(24) %4, %"struct.blink::StepRange::StepDescription"* dereferenceable(16) bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink15NumberInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description to %"struct.blink::StepRange::StepDescription"*)) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

declare void @_ZN5blink7Decimal10FromDoubleEd(%"class.blink::Decimal"* sret, double) local_unnamed_addr #1

declare void @_ZNK5blink9InputType15CreateStepRangeENS_15AnyStepHandlingERKNS_7DecimalES4_S4_RKNS_9StepRange15StepDescriptionE(%"class.blink::StepRange"* sret, %"class.blink::InputType"*, i32, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24), %"struct.blink::StepRange::StepDescription"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"*, i32) unnamed_addr #1

declare void @_ZNK5blink7DecimalngEv(%"class.blink::Decimal"* sret, %"class.blink::Decimal"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15NumberInputType27SizeShouldIncludeDecorationEiRi(%"class.blink::NumberInputType"* nocapture readonly, i32, i32* nocapture dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = alloca %"class.blink::Decimal", align 8
  %10 = alloca %"class.blink::Decimal", align 8
  store i32 %1, i32* %2, align 4
  %11 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %13, align 8
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kStepAttrE, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %16, align 8
  %18 = icmp eq %"class.blink::ElementData"* %17, null
  br i1 %18, label %69, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::ElementData"* %17 to %"class.blink::UniqueElementData"*
  %26 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %17, i64 1, i32 1
  %27 = bitcast %"class.blink::Member.18"* %26 to %"class.blink::Attribute"**
  %28 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %25, i64 0, i32 2, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  br label %36

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %17, i64 1
  %33 = bitcast %"class.blink::ElementData"* %32 to %"class.blink::Attribute"*
  %34 = lshr i32 %21, 1
  %35 = and i32 %34, 268435455
  br label %36

36:                                               ; preds = %31, %24
  %37 = phi %"class.blink::Attribute"* [ %33, %31 ], [ %28, %24 ]
  %38 = phi i32 [ %35, %31 ], [ %30, %24 ]
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 %39
  %41 = icmp eq i32 %38, 0
  br i1 %41, label %69, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %47

47:                                               ; preds = %62, %42
  %48 = phi %"class.blink::Attribute"* [ %37, %42 ], [ %63, %62 ]
  %49 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %50, %44
  br i1 %51, label %65, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, %55
  br i1 %56, label %57, label %62

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 4, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %59, %60
  br i1 %61, label %65, label %62

62:                                               ; preds = %57, %52
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 1
  %64 = icmp eq %"class.blink::Attribute"* %63, %40
  br i1 %64, label %69, label %47

65:                                               ; preds = %57, %47
  %66 = icmp eq %"class.blink::Attribute"* %48, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 0, i32 1
  br label %71

69:                                               ; preds = %62, %65, %36, %3
  %70 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %71

71:                                               ; preds = %67, %69
  %72 = phi %"class.WTF::AtomicString"* [ %70, %69 ], [ %68, %67 ]
  %73 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %12, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %173, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %95

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i33
  %85 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %84, i33 1) #12
  %86 = extractvalue { i33, i1 } %85, 1
  %87 = extractvalue { i33, i1 } %85, 0
  %88 = icmp slt i33 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %91, !prof !3

90:                                               ; preds = %81
  tail call void @llvm.trap() #12
  unreachable

91:                                               ; preds = %81
  %92 = trunc i33 %87 to i32
  store i32 %92, i32* %82, align 4
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %173, label %95

95:                                               ; preds = %76, %91
  %96 = phi %"class.WTF::StringImpl"* [ %93, %91 ], [ %74, %76 ]
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 1
  %100 = bitcast %"class.WTF::StringImpl"* %99 to i8*
  %101 = icmp eq i32 %98, 3
  br i1 %101, label %102, label %173

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %126, label %107

107:                                              ; preds = %102
  %108 = load i8, i8* %100, align 1
  %109 = zext i8 %108 to i64
  %110 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 97), align 1
  %114 = sext i8 %113 to i32
  %115 = icmp eq i32 %112, %114
  br i1 %115, label %116, label %173

116:                                              ; preds = %107
  %117 = getelementptr inbounds i8, i8* %100, i64 1
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i64
  %120 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %124 = sext i8 %123 to i32
  %125 = icmp eq i32 %122, %124
  br i1 %125, label %163, label %173

126:                                              ; preds = %102
  %127 = bitcast %"class.WTF::StringImpl"* %99 to i16*
  %128 = load i16, i16* %127, align 2
  %129 = add i16 %128, -65
  %130 = icmp ult i16 %129, 26
  %131 = zext i1 %130 to i16
  %132 = shl nuw nsw i16 %131, 5
  %133 = or i16 %132, %128
  %134 = zext i16 %133 to i32
  %135 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 97), align 1
  %136 = sext i8 %135 to i32
  %137 = icmp eq i32 %134, %136
  br i1 %137, label %138, label %173

138:                                              ; preds = %126
  %139 = getelementptr inbounds i16, i16* %127, i64 1
  %140 = load i16, i16* %139, align 2
  %141 = add i16 %140, -65
  %142 = icmp ult i16 %141, 26
  %143 = zext i1 %142 to i16
  %144 = shl nuw nsw i16 %143, 5
  %145 = or i16 %144, %140
  %146 = zext i16 %145 to i32
  %147 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %148 = sext i8 %147 to i32
  %149 = icmp eq i32 %146, %148
  br i1 %149, label %150, label %173

150:                                              ; preds = %138
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 1, i32 1
  %152 = bitcast i32* %151 to i16*
  %153 = load i16, i16* %152, align 2
  %154 = add i16 %153, -65
  %155 = icmp ult i16 %154, 26
  %156 = zext i1 %155 to i16
  %157 = shl nuw nsw i16 %156, 5
  %158 = or i16 %157, %153
  %159 = zext i16 %158 to i32
  %160 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 121), align 1
  %161 = sext i8 %160 to i32
  %162 = icmp eq i32 %159, %161
  br i1 %162, label %348, label %173

163:                                              ; preds = %116
  %164 = getelementptr inbounds i8, i8* %100, i64 2
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i64
  %167 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 121), align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %169, %171
  br i1 %172, label %348, label %173

173:                                              ; preds = %71, %91, %116, %107, %138, %126, %95, %150, %163
  %174 = phi %"class.WTF::StringImpl"* [ null, %71 ], [ null, %91 ], [ %96, %116 ], [ %96, %107 ], [ %96, %138 ], [ %96, %126 ], [ %96, %95 ], [ %96, %150 ], [ %96, %163 ]
  %175 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %175) #12
  %176 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %5, i64 0, i32 0, i32 3
  %177 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %177, i8 -86, i64 24, i1 false)
  %178 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %13, align 8
  %179 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kMinAttrE, align 8
  %180 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %181 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %180, align 8
  %182 = icmp eq %"class.blink::ElementData"* %181, null
  br i1 %182, label %233, label %183

183:                                              ; preds = %173
  %184 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %181, i64 0, i32 0, i32 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = and i32 %185, 1
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %195, label %188

188:                                              ; preds = %183
  %189 = bitcast %"class.blink::ElementData"* %181 to %"class.blink::UniqueElementData"*
  %190 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %181, i64 1, i32 1
  %191 = bitcast %"class.blink::Member.18"* %190 to %"class.blink::Attribute"**
  %192 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %191, align 8
  %193 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %189, i64 0, i32 2, i32 0, i32 0, i32 2
  %194 = load i32, i32* %193, align 4
  br label %200

195:                                              ; preds = %183
  %196 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %181, i64 1
  %197 = bitcast %"class.blink::ElementData"* %196 to %"class.blink::Attribute"*
  %198 = lshr i32 %185, 1
  %199 = and i32 %198, 268435455
  br label %200

200:                                              ; preds = %195, %188
  %201 = phi %"class.blink::Attribute"* [ %197, %195 ], [ %192, %188 ]
  %202 = phi i32 [ %199, %195 ], [ %194, %188 ]
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %201, i64 %203
  %205 = icmp eq i32 %202, 0
  br i1 %205, label %233, label %206

206:                                              ; preds = %200
  %207 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %179, i64 0, i32 0, i32 0
  %208 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %207, align 8
  %209 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %208, i64 0, i32 3, i32 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %208, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %211

211:                                              ; preds = %226, %206
  %212 = phi %"class.blink::Attribute"* [ %201, %206 ], [ %227, %226 ]
  %213 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %212, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %213, align 8
  %215 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %214, %208
  br i1 %215, label %229, label %216

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %214, i64 0, i32 3, i32 0, i32 0, i32 0
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %217, align 8
  %219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8
  %220 = icmp eq %"class.WTF::StringImpl"* %218, %219
  br i1 %220, label %221, label %226

221:                                              ; preds = %216
  %222 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %214, i64 0, i32 4, i32 0, i32 0, i32 0
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %223, %224
  br i1 %225, label %229, label %226

226:                                              ; preds = %221, %216
  %227 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %212, i64 1
  %228 = icmp eq %"class.blink::Attribute"* %227, %204
  br i1 %228, label %233, label %211

229:                                              ; preds = %221, %211
  %230 = icmp eq %"class.blink::Attribute"* %212, null
  br i1 %230, label %233, label %231

231:                                              ; preds = %229
  %232 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %212, i64 0, i32 1
  br label %235

233:                                              ; preds = %226, %229, %200, %173
  %234 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %235

235:                                              ; preds = %231, %233
  %236 = phi %"class.WTF::AtomicString"* [ %234, %233 ], [ %232, %231 ]
  %237 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %236, i64 0, i32 0
  %238 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %238) #12
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %6) #12
  call void @_ZN5blink27ParseToDecimalForNumberTypeERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %5, %"class.WTF::String"* dereferenceable(8) %237, %"class.blink::Decimal"* nonnull dereferenceable(24) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %238) #12
  %239 = load i32, i32* %176, align 4
  %240 = and i32 %239, -3
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %344, label %242

242:                                              ; preds = %235
  %243 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %243) #12
  %244 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %7, i64 0, i32 0, i32 3
  %245 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %245, i8 -86, i64 24, i1 false)
  %246 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %13, align 8
  %247 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kMaxAttrE, align 8
  %248 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %246, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %249 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %248, align 8
  %250 = icmp eq %"class.blink::ElementData"* %249, null
  br i1 %250, label %301, label %251

251:                                              ; preds = %242
  %252 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %249, i64 0, i32 0, i32 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = and i32 %253, 1
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %263, label %256

256:                                              ; preds = %251
  %257 = bitcast %"class.blink::ElementData"* %249 to %"class.blink::UniqueElementData"*
  %258 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %249, i64 1, i32 1
  %259 = bitcast %"class.blink::Member.18"* %258 to %"class.blink::Attribute"**
  %260 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %259, align 8
  %261 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %257, i64 0, i32 2, i32 0, i32 0, i32 2
  %262 = load i32, i32* %261, align 4
  br label %268

263:                                              ; preds = %251
  %264 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %249, i64 1
  %265 = bitcast %"class.blink::ElementData"* %264 to %"class.blink::Attribute"*
  %266 = lshr i32 %253, 1
  %267 = and i32 %266, 268435455
  br label %268

268:                                              ; preds = %263, %256
  %269 = phi %"class.blink::Attribute"* [ %265, %263 ], [ %260, %256 ]
  %270 = phi i32 [ %267, %263 ], [ %262, %256 ]
  %271 = zext i32 %270 to i64
  %272 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %269, i64 %271
  %273 = icmp eq i32 %270, 0
  br i1 %273, label %301, label %274

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %247, i64 0, i32 0, i32 0
  %276 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %275, align 8
  %277 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %276, i64 0, i32 3, i32 0, i32 0, i32 0
  %278 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %276, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %279

279:                                              ; preds = %294, %274
  %280 = phi %"class.blink::Attribute"* [ %269, %274 ], [ %295, %294 ]
  %281 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %280, i64 0, i32 0, i32 0, i32 0
  %282 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %281, align 8
  %283 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %282, %276
  br i1 %283, label %297, label %284

284:                                              ; preds = %279
  %285 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %282, i64 0, i32 3, i32 0, i32 0, i32 0
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %285, align 8
  %287 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %277, align 8
  %288 = icmp eq %"class.WTF::StringImpl"* %286, %287
  br i1 %288, label %289, label %294

289:                                              ; preds = %284
  %290 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %282, i64 0, i32 4, i32 0, i32 0, i32 0
  %291 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %290, align 8
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %278, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %291, %292
  br i1 %293, label %297, label %294

294:                                              ; preds = %289, %284
  %295 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %280, i64 1
  %296 = icmp eq %"class.blink::Attribute"* %295, %272
  br i1 %296, label %301, label %279

297:                                              ; preds = %289, %279
  %298 = icmp eq %"class.blink::Attribute"* %280, null
  br i1 %298, label %301, label %299

299:                                              ; preds = %297
  %300 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %280, i64 0, i32 1
  br label %303

301:                                              ; preds = %294, %297, %268, %242
  %302 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %303

303:                                              ; preds = %299, %301
  %304 = phi %"class.WTF::AtomicString"* [ %302, %301 ], [ %300, %299 ]
  %305 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %304, i64 0, i32 0
  %306 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %306) #12
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %8) #12
  call void @_ZN5blink27ParseToDecimalForNumberTypeERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %7, %"class.WTF::String"* dereferenceable(8) %305, %"class.blink::Decimal"* nonnull dereferenceable(24) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %306) #12
  %307 = load i32, i32* %244, align 4
  %308 = and i32 %307, -3
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %341, label %310

310:                                              ; preds = %303
  %311 = bitcast %"class.blink::Decimal"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %311) #12
  %312 = bitcast %"class.blink::Decimal"* %10 to i8*
  %313 = bitcast %"class.blink::Decimal"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %313, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %312) #12
  call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* nonnull %10, i32 1) #12
  call void @_ZN5blink27ParseToDecimalForNumberTypeERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %9, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %10) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %312) #12
  %314 = call fastcc i64 @_ZN5blinkL19CalculateRenderSizeERKNS_7DecimalE(%"class.blink::Decimal"* nonnull dereferenceable(24) %5)
  %315 = trunc i64 %314 to i32
  %316 = lshr i64 %314, 32
  %317 = trunc i64 %316 to i32
  %318 = call fastcc i64 @_ZN5blinkL19CalculateRenderSizeERKNS_7DecimalE(%"class.blink::Decimal"* nonnull dereferenceable(24) %7)
  %319 = trunc i64 %318 to i32
  %320 = lshr i64 %318, 32
  %321 = trunc i64 %320 to i32
  %322 = call fastcc i64 @_ZN5blinkL19CalculateRenderSizeERKNS_7DecimalE(%"class.blink::Decimal"* nonnull dereferenceable(24) %9)
  %323 = trunc i64 %322 to i32
  %324 = lshr i64 %322, 32
  %325 = trunc i64 %324 to i32
  %326 = icmp ult i32 %319, %323
  %327 = select i1 %326, i64 %322, i64 %318
  %328 = icmp ult i32 %321, %325
  %329 = select i1 %328, i32 %325, i32 %321
  %330 = trunc i64 %327 to i32
  %331 = icmp ult i32 %315, %330
  %332 = select i1 %331, i64 %327, i64 %314
  %333 = icmp ugt i32 %329, %317
  %334 = select i1 %333, i32 %329, i32 %317
  %335 = trunc i64 %332 to i32
  %336 = add i32 %334, %335
  %337 = icmp ne i32 %334, 0
  %338 = zext i1 %337 to i32
  %339 = add i32 %336, %338
  store i32 %339, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %311) #12
  %340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  br label %341

341:                                              ; preds = %303, %310
  %342 = phi %"class.WTF::StringImpl"* [ %340, %310 ], [ %174, %303 ]
  %343 = phi i1 [ true, %310 ], [ false, %303 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %243) #12
  br label %344

344:                                              ; preds = %341, %235
  %345 = phi %"class.WTF::StringImpl"* [ %342, %341 ], [ %174, %235 ]
  %346 = phi i1 [ %343, %341 ], [ false, %235 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %175) #12
  %347 = icmp eq %"class.WTF::StringImpl"* %345, null
  br i1 %347, label %363, label %348

348:                                              ; preds = %150, %163, %344
  %349 = phi i1 [ %346, %344 ], [ false, %163 ], [ false, %150 ]
  %350 = phi %"class.WTF::StringImpl"* [ %345, %344 ], [ %96, %163 ], [ %96, %150 ]
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %350, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load atomic i32, i32* %351 monotonic, align 4
  %353 = and i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %350, i64 0, i32 0
  %356 = load i32, i32* %355, align 4
  br i1 %354, label %357, label %359

357:                                              ; preds = %348
  %358 = add i32 %356, -1
  store i32 %358, i32* %355, align 4
  br label %359

359:                                              ; preds = %357, %348
  %360 = phi i32 [ %358, %357 ], [ %356, %348 ]
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %359
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %350) #12
  br label %363

363:                                              ; preds = %344, %359, %362
  %364 = phi i1 [ %346, %344 ], [ %349, %359 ], [ %349, %362 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret i1 %364
}

declare void @_ZN5blink27ParseToDecimalForNumberTypeERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.WTF::String"* dereferenceable(8), %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN5blinkL19CalculateRenderSizeERKNS_7DecimalE(%"class.blink::Decimal"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %2 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %3 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %0, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 40, i1 false) #12
  %6 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 24
  %7 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 23
  store i8* %8, i8** %7, align 8
  %9 = urem i64 %4, 10
  %10 = udiv i64 %4, 10
  %11 = trunc i64 %9 to i8
  %12 = or i8 %11, 48
  store i8 %12, i8* %8, align 1
  %13 = icmp ugt i64 %4, 9
  br i1 %13, label %14, label %29

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 22
  store i8* %15, i8** %7, align 8
  %16 = urem i64 %10, 10
  %17 = trunc i64 %16 to i8
  %18 = or i8 %17, 48
  store i8 %18, i8* %15, align 2
  %19 = icmp ugt i64 %4, 99
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = udiv i64 %4, 100
  %22 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 21
  store i8* %22, i8** %7, align 8
  %23 = urem i64 %21, 10
  %24 = trunc i64 %23 to i8
  %25 = or i8 %24, 48
  store i8 %25, i8* %22, align 1
  %26 = icmp ugt i64 %4, 999
  br i1 %26, label %31, label %40

27:                                               ; preds = %14
  %28 = ptrtoint i8* %15 to i64
  br label %43

29:                                               ; preds = %1
  %30 = ptrtoint i8* %8 to i64
  br label %43

31:                                               ; preds = %20, %31
  %32 = phi i64 [ %34, %31 ], [ %21, %20 ]
  %33 = load i8*, i8** %7, align 8
  %34 = udiv i64 %32, 10
  %35 = getelementptr inbounds i8, i8* %33, i64 -1
  store i8* %35, i8** %7, align 8
  %36 = urem i64 %34, 10
  %37 = trunc i64 %36 to i8
  %38 = or i8 %37, 48
  store i8 %38, i8* %35, align 1
  %39 = icmp ugt i64 %32, 99
  br i1 %39, label %31, label %40

40:                                               ; preds = %31, %20
  %41 = bitcast i8** %7 to i64*
  %42 = load i64, i64* %41, align 8
  br label %43

43:                                               ; preds = %40, %27, %29
  %44 = phi i64 [ %30, %29 ], [ %42, %40 ], [ %28, %27 ]
  %45 = ptrtoint i8* %6 to i64
  %46 = sub i64 %45, %44
  %47 = trunc i64 %46 to i32
  %48 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 2
  store i32 %47, i32* %48, align 8
  %49 = inttoptr i64 %44 to i8*
  %50 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %49, i32 %47) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #12
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %67, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %52
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %52
  %64 = phi i32 [ %62, %61 ], [ %60, %52 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #12
  br label %67

67:                                               ; preds = %43, %63, %66
  %68 = phi i32 [ %54, %63 ], [ %54, %66 ], [ 0, %43 ]
  %69 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %0, i64 0, i32 0, i32 4
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 1
  %72 = zext i1 %71 to i32
  %73 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %0, i64 0, i32 0, i32 1
  %74 = load i16, i16* %73, align 8
  %75 = sext i16 %74 to i32
  %76 = icmp sgt i16 %74, -1
  br i1 %76, label %77, label %79

77:                                               ; preds = %67
  %78 = add i32 %68, %72
  br label %88

79:                                               ; preds = %67
  %80 = add i32 %68, %75
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %79
  %83 = add nuw i32 %80, %72
  %84 = sub nsw i32 0, %75
  br label %88

85:                                               ; preds = %79
  %86 = select i1 %71, i32 2, i32 1
  %87 = sub nsw i32 0, %75
  br label %88

88:                                               ; preds = %82, %85, %77
  %89 = phi i32 [ %78, %77 ], [ %83, %82 ], [ %86, %85 ]
  %90 = phi i32 [ 0, %77 ], [ %84, %82 ], [ %87, %85 ]
  %91 = zext i32 %90 to i64
  %92 = shl nuw i64 %91, 32
  %93 = zext i32 %89 to i64
  %94 = or i64 %92, %93
  ret i64 %94
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink15NumberInputType27SizeShouldIncludeDecorationEiRi(%"class.blink::NumberInputType"* nocapture readonly, i32, i32* nocapture dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %5 = bitcast %"class.blink::Member"* %4 to %"class.blink::NumberInputType"*
  %6 = tail call zeroext i1 @_ZNK5blink15NumberInputType27SizeShouldIncludeDecorationEiRi(%"class.blink::NumberInputType"* %5, i32 %1, i32* dereferenceable(4) %2)
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink15NumberInputType11IsSteppableEv(%"class.blink::NumberInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NumberInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::NumberInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #12
  tail call void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %3) #12
  %4 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextFieldInputType31HandleKeydownEventForSpinButtonERNS_13KeyboardEventE(%"class.blink::TextFieldInputType"* %4, %"class.blink::KeyboardEvent"* dereferenceable(176) %1) #12
  %5 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i16, i16* %5, align 8
  %7 = and i16 %6, 64
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  tail call void @_ZN5blink18TextFieldInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::TextFieldInputType"* %4, %"class.blink::KeyboardEvent"* dereferenceable(176) %1) #12
  br label %10

10:                                               ; preds = %2, %9
  %11 = tail call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #12
  tail call void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %11) #12
  ret void
}

declare void @_ZN5blink18TextFieldInputType31HandleKeydownEventForSpinButtonERNS_13KeyboardEventE(%"class.blink::TextFieldInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) local_unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::TextFieldInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink15NumberInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::NumberInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %4 = tail call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #12
  tail call void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %4) #12
  %5 = bitcast %"class.blink::Member"* %3 to %"class.blink::TextFieldInputType"*
  tail call void @_ZN5blink18TextFieldInputType31HandleKeydownEventForSpinButtonERNS_13KeyboardEventE(%"class.blink::TextFieldInputType"* %5, %"class.blink::KeyboardEvent"* dereferenceable(176) %1) #12
  %6 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 64
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZN5blink18TextFieldInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::TextFieldInputType"* %5, %"class.blink::KeyboardEvent"* dereferenceable(176) %1) #12
  br label %11

11:                                               ; preds = %2, %10
  %12 = tail call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #12
  tail call void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NumberInputType29HandleBeforeTextInsertedEventERNS_23BeforeTextInsertedEventE(%"class.blink::NumberInputType"*, %"class.blink::BeforeTextInsertedEvent"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringBuilder", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringAppend", align 8
  %12 = alloca { %"class.WTF::StringImpl"*, i16 }, align 8
  %13 = bitcast { %"class.WTF::StringImpl"*, i16 }* %12 to %"class.WTF::StringAppend.908"*
  %14 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0
  %15 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink9InputType9GetLocaleEv(%"class.blink::InputType"* %14) #12
  %16 = getelementptr inbounds %"class.blink::BeforeTextInsertedEvent", %"class.blink::BeforeTextInsertedEvent"* %1, i64 0, i32 1
  %17 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i64 15) #12
  %18 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale28StripInvalidNumberCharactersERKN3WTF6StringES4_(%"class.blink::Locale"* %15, %"class.WTF::String"* dereferenceable(8) %16, %"class.WTF::String"* nonnull dereferenceable(8) %5) #12
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #12
  br label %35

35:                                               ; preds = %2, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %36 = call zeroext i1 @_ZN5blink6Locale29UsesSingleCharNumberFilteringEv(%"class.blink::Locale"* %15) #12
  br i1 %36, label %75, label %37

37:                                               ; preds = %35
  %38 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #12
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !3

53:                                               ; preds = %44
  call void @llvm.trap() #12
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %54, %39, %37
  %57 = ptrtoint %"class.WTF::StringImpl"* %18 to i64
  %58 = bitcast %"class.WTF::String"* %16 to i64*
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  store i64 %57, i64* %58, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %618, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %618

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %618

75:                                               ; preds = %35
  %76 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #12
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %77, align 8
  %78 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %79 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %79, i64 0, i32 0
  %81 = call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"* %80) #12
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %77, align 8
  %82 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #12
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %83, align 8
  %84 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %78, align 8
  %85 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %84, i64 0, i32 0
  %86 = call i32 @_ZNK5blink18TextControlElement14selectionStartEv(%"class.blink::TextControlElement"* %85) #12
  %87 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %6, i32 0, i32 %86) #12
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %83, align 8
  %88 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #12
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %89, align 8
  %90 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %78, align 8
  %91 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %90, i64 0, i32 0
  %92 = call i32 @_ZNK5blink18TextControlElement12selectionEndEv(%"class.blink::TextControlElement"* %91) #12
  %93 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %6, i32 %92, i32 -1) #12
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %89, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %75
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  br label %98

98:                                               ; preds = %75, %95
  %99 = phi i32 [ %97, %95 ], [ 0, %75 ]
  %100 = bitcast %"class.WTF::StringBuilder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %100) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 -86, i64 48, i1 false)
  %101 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %101, align 8
  %102 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %9, i64 0, i32 1
  %103 = bitcast %union.anon.897* %102 to i8*
  store i8 0, i8* %103, align 8
  %104 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %9, i64 0, i32 2
  store i32 0, i32* %104, align 8
  %105 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %9, i64 0, i32 3
  store i8 1, i8* %105, align 4
  %106 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %9, i64 0, i32 4
  store i8 0, i8* %106, align 1
  %107 = icmp eq i32 %99, 0
  br i1 %107, label %134, label %108

108:                                              ; preds = %98
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 1
  %112 = bitcast %"class.WTF::StringImpl"* %111 to i8*
  %113 = bitcast %"class.WTF::StringImpl"* %111 to i16*
  %114 = bitcast { %"class.WTF::StringImpl"*, i16 }* %12 to i8*
  %115 = bitcast %"class.WTF::String"* %10 to i8*
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %117 = bitcast %"class.WTF::StringAppend"* %11 to i8*
  %118 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 1, i32 0, i32 0
  %120 = bitcast %"class.WTF::StringView"* %3 to i8*
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %123 = bitcast i8** %122 to %"class.WTF::StringImpl"**
  %124 = bitcast %"class.WTF::StringView"* %3 to i64*
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %126 = bitcast %"class.WTF::StringView"* %4 to i8*
  %127 = bitcast %"class.WTF::StringView"* %4 to i64*
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %130 = getelementptr inbounds { %"class.WTF::StringImpl"*, i16 }, { %"class.WTF::StringImpl"*, i16 }* %12, i64 0, i32 0
  %131 = getelementptr inbounds { %"class.WTF::StringImpl"*, i16 }, { %"class.WTF::StringImpl"*, i16 }* %12, i64 0, i32 1
  %132 = bitcast %"class.WTF::String"* %7 to i64*
  %133 = zext i32 %99 to i64
  br label %252

134:                                              ; preds = %615, %98
  %135 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %9) #12
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %154, label %137

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %154

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i33
  %146 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %145, i33 1) #12
  %147 = extractvalue { i33, i1 } %146, 1
  %148 = extractvalue { i33, i1 } %146, 0
  %149 = icmp slt i33 %148, 0
  %150 = or i1 %147, %149
  br i1 %150, label %151, label %152, !prof !3

151:                                              ; preds = %142
  call void @llvm.trap() #12
  unreachable

152:                                              ; preds = %142
  %153 = trunc i33 %148 to i32
  store i32 %153, i32* %143, align 4
  br label %154

154:                                              ; preds = %152, %137, %134
  %155 = ptrtoint %"class.WTF::StringImpl"* %135 to i64
  %156 = bitcast %"class.WTF::String"* %16 to i64*
  %157 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  store i64 %155, i64* %156, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %154
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %160
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %160
  %170 = phi i32 [ %168, %167 ], [ %166, %160 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #12
  br label %173

173:                                              ; preds = %154, %169, %172
  br i1 %136, label %187, label %174

174:                                              ; preds = %173
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %174
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #12
  br label %187

187:                                              ; preds = %173, %183, %186
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %9) #12
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #12
  br label %203

203:                                              ; preds = %187, %199, %202
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %100) #12
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #12
  br label %219

219:                                              ; preds = %203, %215, %218
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #12
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %235, label %222

222:                                              ; preds = %219
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  br i1 %226, label %229, label %231

229:                                              ; preds = %222
  %230 = add i32 %228, -1
  store i32 %230, i32* %227, align 4
  br label %231

231:                                              ; preds = %229, %222
  %232 = phi i32 [ %230, %229 ], [ %228, %222 ]
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %231
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %220) #12
  br label %235

235:                                              ; preds = %219, %231, %234
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #12
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %251, label %238

238:                                              ; preds = %235
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = load atomic i32, i32* %239 monotonic, align 4
  %241 = and i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %244 = load i32, i32* %243, align 4
  br i1 %242, label %245, label %247

245:                                              ; preds = %238
  %246 = add i32 %244, -1
  store i32 %246, i32* %243, align 4
  br label %247

247:                                              ; preds = %245, %238
  %248 = phi i32 [ %246, %245 ], [ %244, %238 ]
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %247
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %236) #12
  br label %251

251:                                              ; preds = %235, %247, %250
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #12
  br label %618

252:                                              ; preds = %615, %108
  %253 = phi i64 [ 0, %108 ], [ %616, %615 ]
  br i1 %94, label %269, label %254

254:                                              ; preds = %252
  %255 = load i32, i32* %109, align 4
  %256 = zext i32 %255 to i64
  %257 = icmp ult i64 %253, %256
  br i1 %257, label %258, label %269

258:                                              ; preds = %254
  %259 = load atomic i32, i32* %110 monotonic, align 4
  %260 = and i32 %259, 1
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %266, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds i8, i8* %112, i64 %253
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i16
  br label %269

266:                                              ; preds = %258
  %267 = getelementptr inbounds i16, i16* %113, i64 %253
  %268 = load i16, i16* %267, align 2
  br label %269

269:                                              ; preds = %252, %254, %262, %266
  %270 = phi i16 [ 0, %254 ], [ 0, %252 ], [ %265, %262 ], [ %268, %266 ]
  %271 = call zeroext i1 @_ZN5blink6Locale18IsDecimalSeparatorEDs(%"class.blink::Locale"* %15, i16 zeroext %270) #12
  br i1 %271, label %272, label %284

272:                                              ; preds = %269
  %273 = call zeroext i1 @_ZN5blink6Locale19HasDecimalSeparatorERKN3WTF6StringE(%"class.blink::Locale"* %15, %"class.WTF::String"* nonnull dereferenceable(8) %7) #12
  br i1 %273, label %615, label %274

274:                                              ; preds = %272
  %275 = call zeroext i1 @_ZN5blink6Locale19HasDecimalSeparatorERKN3WTF6StringE(%"class.blink::Locale"* %15, %"class.WTF::String"* nonnull dereferenceable(8) %8) #12
  br i1 %275, label %615, label %276

276:                                              ; preds = %274
  %277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %278 = icmp eq %"class.WTF::StringImpl"* %277, null
  br i1 %278, label %282, label %279

279:                                              ; preds = %276
  %280 = call i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"* nonnull %277, i1 (i16)* nonnull @_ZN5blinkL3IsEEDs, i32 0) #12
  %281 = icmp eq i32 %280, -1
  br i1 %281, label %282, label %615

282:                                              ; preds = %276, %279
  %283 = call zeroext i1 @_ZN5blink6Locale16HasSignNotAfterEERKN3WTF6StringE(%"class.blink::Locale"* %15, %"class.WTF::String"* nonnull dereferenceable(8) %8) #12
  br i1 %283, label %615, label %532

284:                                              ; preds = %269
  %285 = or i16 %270, 32
  %286 = icmp eq i16 %285, 101
  br i1 %286, label %287, label %301

287:                                              ; preds = %284
  %288 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %289 = icmp eq %"class.WTF::StringImpl"* %288, null
  br i1 %289, label %293, label %290

290:                                              ; preds = %287
  %291 = call i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"* nonnull %288, i1 (i16)* nonnull @_ZN5blinkL3IsEEDs, i32 0) #12
  %292 = icmp eq i32 %291, -1
  br i1 %292, label %293, label %615

293:                                              ; preds = %287, %290
  %294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %295 = icmp eq %"class.WTF::StringImpl"* %294, null
  br i1 %295, label %299, label %296

296:                                              ; preds = %293
  %297 = call i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"* nonnull %294, i1 (i16)* nonnull @_ZN5blinkL3IsEEDs, i32 0) #12
  %298 = icmp eq i32 %297, -1
  br i1 %298, label %299, label %615

299:                                              ; preds = %293, %296
  %300 = call zeroext i1 @_ZN5blink6Locale19HasDecimalSeparatorERKN3WTF6StringE(%"class.blink::Locale"* %15, %"class.WTF::String"* nonnull dereferenceable(8) %8) #12
  br i1 %300, label %615, label %532

301:                                              ; preds = %284
  %302 = call zeroext i1 @_ZN5blink6Locale12IsSignPrefixEDs(%"class.blink::Locale"* %15, i16 zeroext %270) #12
  br i1 %302, label %303, label %444

303:                                              ; preds = %301
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #12
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %116, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #12
  %304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %305 = icmp eq %"class.WTF::StringImpl"* %304, null
  br i1 %305, label %323, label %306

306:                                              ; preds = %303
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = and i32 %308, 2
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %323

311:                                              ; preds = %306
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 0
  %313 = load i32, i32* %312, align 4
  %314 = zext i32 %313 to i33
  %315 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %314, i33 1) #12
  %316 = extractvalue { i33, i1 } %315, 1
  %317 = extractvalue { i33, i1 } %315, 0
  %318 = icmp slt i33 %317, 0
  %319 = or i1 %316, %318
  br i1 %319, label %320, label %321, !prof !3

320:                                              ; preds = %311
  call void @llvm.trap() #12
  unreachable

321:                                              ; preds = %311
  %322 = trunc i33 %317 to i32
  store i32 %322, i32* %312, align 4
  br label %323

323:                                              ; preds = %303, %306, %321
  %324 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::StringImpl"* %304)
  %325 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %324, 0
  store %"class.WTF::StringImpl"* %325, %"class.WTF::StringImpl"** %118, align 8
  %326 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %324, 1
  store %"class.WTF::StringImpl"* %326, %"class.WTF::StringImpl"** %119, align 8
  %327 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %11)
  store %"class.WTF::StringImpl"* %327, %"class.WTF::StringImpl"** %116, align 8
  %328 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %329 = icmp eq %"class.WTF::StringImpl"* %328, null
  br i1 %329, label %343, label %330

330:                                              ; preds = %323
  %331 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %328, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = load atomic i32, i32* %331 monotonic, align 4
  %333 = and i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %328, i64 0, i32 0
  %336 = load i32, i32* %335, align 4
  br i1 %334, label %337, label %339

337:                                              ; preds = %330
  %338 = add i32 %336, -1
  store i32 %338, i32* %335, align 4
  br label %339

339:                                              ; preds = %337, %330
  %340 = phi i32 [ %338, %337 ], [ %336, %330 ]
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %343

342:                                              ; preds = %339
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %328) #12
  br label %343

343:                                              ; preds = %342, %339, %323
  %344 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %345 = icmp eq %"class.WTF::StringImpl"* %344, null
  br i1 %345, label %359, label %346

346:                                              ; preds = %343
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %348 = load atomic i32, i32* %347 monotonic, align 4
  %349 = and i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 0
  %352 = load i32, i32* %351, align 4
  br i1 %350, label %353, label %355

353:                                              ; preds = %346
  %354 = add i32 %352, -1
  store i32 %354, i32* %351, align 4
  br label %355

355:                                              ; preds = %353, %346
  %356 = phi i32 [ %354, %353 ], [ %352, %346 ]
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %358, label %359

358:                                              ; preds = %355
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %344) #12
  br label %359

359:                                              ; preds = %343, %355, %358
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #12
  %360 = call zeroext i1 @_ZN5blink6Locale15HasTwoSignCharsERKN3WTF6StringE(%"class.blink::Locale"* %15, %"class.WTF::String"* nonnull dereferenceable(8) %10) #12
  br i1 %360, label %427, label %361

361:                                              ; preds = %359
  %362 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %363 = icmp eq %"class.WTF::StringImpl"* %362, null
  br i1 %363, label %426, label %364

364:                                              ; preds = %361
  %365 = call i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"* nonnull %362, i1 (i16)* nonnull @_ZN5blinkL3IsEEDs, i32 0) #12
  %366 = icmp eq i32 %365, -1
  br i1 %366, label %410, label %367

367:                                              ; preds = %364
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #12
  %368 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %369 = icmp eq %"class.WTF::StringImpl"* %368, null
  br i1 %369, label %370, label %372

370:                                              ; preds = %367
  store i8* null, i8** %122, align 8
  %371 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %371, i64* %124, align 8
  br label %377

372:                                              ; preds = %367
  store %"class.WTF::StringImpl"* %368, %"class.WTF::StringImpl"** %121, align 8
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %368, i64 0, i32 1
  %374 = load i32, i32* %373, align 4
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %368, i64 1
  store %"class.WTF::StringImpl"* %375, %"class.WTF::StringImpl"** %123, align 8
  %376 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %377

377:                                              ; preds = %372, %370
  %378 = phi i64 [ %376, %372 ], [ %371, %370 ]
  %379 = phi i32 [ %374, %372 ], [ 0, %370 ]
  store i32 %379, i32* %125, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #12
  store i64 %378, i64* %127, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8** %128, align 8
  store i32 0, i32* %129, align 8
  %380 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #12
  br i1 %380, label %410, label %381

381:                                              ; preds = %377
  %382 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %383 = icmp eq %"class.WTF::StringImpl"* %382, null
  br i1 %383, label %427, label %384

384:                                              ; preds = %381
  %385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 1
  %386 = load i32, i32* %385, align 4
  %387 = add i32 %386, -1
  %388 = icmp eq i32 %386, 0
  br i1 %388, label %427, label %389

389:                                              ; preds = %384
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %391 = load atomic i32, i32* %390 monotonic, align 4
  %392 = and i32 %391, 1
  %393 = icmp eq i32 %392, 0
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 1
  br i1 %393, label %401, label %395

395:                                              ; preds = %389
  %396 = bitcast %"class.WTF::StringImpl"* %394 to i8*
  %397 = zext i32 %387 to i64
  %398 = getelementptr inbounds i8, i8* %396, i64 %397
  %399 = load i8, i8* %398, align 1
  %400 = zext i8 %399 to i16
  br label %406

401:                                              ; preds = %389
  %402 = bitcast %"class.WTF::StringImpl"* %394 to i16*
  %403 = zext i32 %387 to i64
  %404 = getelementptr inbounds i16, i16* %402, i64 %403
  %405 = load i16, i16* %404, align 2
  br label %406

406:                                              ; preds = %395, %401
  %407 = phi i16 [ %400, %395 ], [ %405, %401 ]
  %408 = or i16 %407, 32
  %409 = icmp eq i16 %408, 101
  br i1 %409, label %410, label %427

410:                                              ; preds = %364, %406, %377
  %411 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %412 = icmp eq %"class.WTF::StringImpl"* %411, null
  br i1 %412, label %426, label %413

413:                                              ; preds = %410
  %414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = load atomic i32, i32* %414 monotonic, align 4
  %416 = and i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %411, i64 0, i32 0
  %419 = load i32, i32* %418, align 4
  br i1 %417, label %420, label %422

420:                                              ; preds = %413
  %421 = add i32 %419, -1
  store i32 %421, i32* %418, align 4
  br label %422

422:                                              ; preds = %420, %413
  %423 = phi i32 [ %421, %420 ], [ %419, %413 ]
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %426

425:                                              ; preds = %422
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %411) #12
  br label %426

426:                                              ; preds = %361, %410, %422, %425
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #12
  br label %532

427:                                              ; preds = %384, %381, %359, %406
  %428 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %429 = icmp eq %"class.WTF::StringImpl"* %428, null
  br i1 %429, label %443, label %430

430:                                              ; preds = %427
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = load atomic i32, i32* %431 monotonic, align 4
  %433 = and i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 0
  %436 = load i32, i32* %435, align 4
  br i1 %434, label %437, label %439

437:                                              ; preds = %430
  %438 = add i32 %436, -1
  store i32 %438, i32* %435, align 4
  br label %439

439:                                              ; preds = %437, %430
  %440 = phi i32 [ %438, %437 ], [ %436, %430 ]
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %443

442:                                              ; preds = %439
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %428) #12
  br label %443

443:                                              ; preds = %427, %439, %442
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #12
  br label %615

444:                                              ; preds = %301
  %445 = call zeroext i1 @_ZN5blink6Locale7IsDigitEDs(%"class.blink::Locale"* %15, i16 zeroext %270) #12
  br i1 %445, label %446, label %532

446:                                              ; preds = %444
  %447 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %448 = icmp eq %"class.WTF::StringImpl"* %447, null
  br i1 %448, label %453, label %449

449:                                              ; preds = %446
  %450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %447, i64 0, i32 1
  %451 = load i32, i32* %450, align 4
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %453, label %482

453:                                              ; preds = %446, %449
  %454 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %455 = icmp eq %"class.WTF::StringImpl"* %454, null
  br i1 %455, label %478, label %456

456:                                              ; preds = %453
  %457 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 1
  %458 = load i32, i32* %457, align 4
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %478, label %460

460:                                              ; preds = %456
  %461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %462 = load atomic i32, i32* %461 monotonic, align 4
  %463 = and i32 %462, 1
  %464 = icmp eq i32 %463, 0
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 1
  br i1 %464, label %470, label %466

466:                                              ; preds = %460
  %467 = bitcast %"class.WTF::StringImpl"* %465 to i8*
  %468 = load i8, i8* %467, align 1
  %469 = zext i8 %468 to i16
  br label %473

470:                                              ; preds = %460
  %471 = bitcast %"class.WTF::StringImpl"* %465 to i16*
  %472 = load i16, i16* %471, align 2
  br label %473

473:                                              ; preds = %466, %470
  %474 = phi i16 [ %469, %466 ], [ %472, %470 ]
  %475 = call zeroext i1 @_ZN5blink6Locale12IsSignPrefixEDs(%"class.blink::Locale"* %15, i16 zeroext %474) #12
  br i1 %475, label %615, label %476

476:                                              ; preds = %473
  %477 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  br label %478

478:                                              ; preds = %476, %453, %456
  %479 = phi %"class.WTF::StringImpl"* [ %477, %476 ], [ %447, %453 ], [ %447, %456 ]
  %480 = icmp eq %"class.WTF::StringImpl"* %479, null
  br i1 %480, label %481, label %482

481:                                              ; preds = %478
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114) #12
  br label %579

482:                                              ; preds = %449, %478
  %483 = phi %"class.WTF::StringImpl"* [ %479, %478 ], [ %447, %449 ]
  %484 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %483, i64 0, i32 1
  %485 = load i32, i32* %484, align 4
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %532, label %487

487:                                              ; preds = %482
  %488 = add i32 %485, -1
  %489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %483, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %490 = load atomic i32, i32* %489 monotonic, align 4
  %491 = and i32 %490, 1
  %492 = icmp eq i32 %491, 0
  %493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %483, i64 1
  br i1 %492, label %500, label %494

494:                                              ; preds = %487
  %495 = bitcast %"class.WTF::StringImpl"* %493 to i8*
  %496 = zext i32 %488 to i64
  %497 = getelementptr inbounds i8, i8* %495, i64 %496
  %498 = load i8, i8* %497, align 1
  %499 = zext i8 %498 to i16
  br label %505

500:                                              ; preds = %487
  %501 = bitcast %"class.WTF::StringImpl"* %493 to i16*
  %502 = zext i32 %488 to i64
  %503 = getelementptr inbounds i16, i16* %501, i64 %502
  %504 = load i16, i16* %503, align 2
  br label %505

505:                                              ; preds = %494, %500
  %506 = phi i16 [ %499, %494 ], [ %504, %500 ]
  %507 = or i16 %506, 32
  %508 = icmp eq i16 %507, 101
  br i1 %508, label %509, label %532

509:                                              ; preds = %505
  %510 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %511 = icmp eq %"class.WTF::StringImpl"* %510, null
  br i1 %511, label %532, label %512

512:                                              ; preds = %509
  %513 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 1
  %514 = load i32, i32* %513, align 4
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %532, label %516

516:                                              ; preds = %512
  %517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %518 = load atomic i32, i32* %517 monotonic, align 4
  %519 = and i32 %518, 1
  %520 = icmp eq i32 %519, 0
  %521 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 1
  br i1 %520, label %526, label %522

522:                                              ; preds = %516
  %523 = bitcast %"class.WTF::StringImpl"* %521 to i8*
  %524 = load i8, i8* %523, align 1
  %525 = zext i8 %524 to i16
  br label %529

526:                                              ; preds = %516
  %527 = bitcast %"class.WTF::StringImpl"* %521 to i16*
  %528 = load i16, i16* %527, align 2
  br label %529

529:                                              ; preds = %522, %526
  %530 = phi i16 [ %525, %522 ], [ %528, %526 ]
  %531 = call zeroext i1 @_ZN5blink6Locale12IsSignPrefixEDs(%"class.blink::Locale"* %15, i16 zeroext %530) #12
  br i1 %531, label %615, label %532

532:                                              ; preds = %509, %426, %299, %444, %529, %512, %505, %482, %282
  %533 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114) #12
  %534 = icmp eq %"class.WTF::StringImpl"* %533, null
  br i1 %534, label %579, label %535

535:                                              ; preds = %532
  %536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %533, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load atomic i32, i32* %536 monotonic, align 4
  %538 = and i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %533, i64 0, i32 0
  %541 = load i32, i32* %540, align 4
  br i1 %539, label %542, label %552

542:                                              ; preds = %535
  %543 = zext i32 %541 to i33
  %544 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %543, i33 1) #12
  %545 = extractvalue { i33, i1 } %544, 1
  %546 = extractvalue { i33, i1 } %544, 0
  %547 = icmp slt i33 %546, 0
  %548 = or i1 %545, %547
  br i1 %548, label %549, label %550, !prof !3

549:                                              ; preds = %542
  call void @llvm.trap() #12
  unreachable

550:                                              ; preds = %542
  %551 = trunc i33 %546 to i32
  store i32 %551, i32* %540, align 4
  br label %552

552:                                              ; preds = %535, %550
  %553 = phi i32 [ %551, %550 ], [ %541, %535 ]
  %554 = load atomic i32, i32* %536 monotonic, align 4
  %555 = and i32 %554, 2
  %556 = icmp eq i32 %555, 0
  %557 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %533, i64 0, i32 0
  br i1 %556, label %558, label %568

558:                                              ; preds = %552
  %559 = zext i32 %553 to i33
  %560 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %559, i33 1) #12
  %561 = extractvalue { i33, i1 } %560, 1
  %562 = extractvalue { i33, i1 } %560, 0
  %563 = icmp slt i33 %562, 0
  %564 = or i1 %561, %563
  br i1 %564, label %565, label %566, !prof !3

565:                                              ; preds = %558
  call void @llvm.trap() #12
  unreachable

566:                                              ; preds = %558
  %567 = trunc i33 %562 to i32
  store i32 %567, i32* %557, align 4
  br label %568

568:                                              ; preds = %566, %552
  %569 = phi i32 [ %567, %566 ], [ %553, %552 ]
  %570 = load atomic i32, i32* %536 monotonic, align 4
  %571 = and i32 %570, 2
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %573, label %575

573:                                              ; preds = %568
  %574 = add i32 %569, -1
  store i32 %574, i32* %557, align 4
  br label %575

575:                                              ; preds = %573, %568
  %576 = phi i32 [ %574, %573 ], [ %569, %568 ]
  %577 = icmp eq i32 %576, 0
  br i1 %577, label %578, label %579

578:                                              ; preds = %575
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %533) #12
  br label %579

579:                                              ; preds = %481, %532, %575, %578
  %580 = phi %"class.WTF::StringImpl"* [ null, %481 ], [ null, %532 ], [ %533, %575 ], [ %533, %578 ]
  store %"class.WTF::StringImpl"* %580, %"class.WTF::StringImpl"** %130, align 8
  store i16 %270, i16* %131, align 8
  %581 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEDsEcvS1_Ev(%"class.WTF::StringAppend.908"* nonnull %13)
  %582 = ptrtoint %"class.WTF::StringImpl"* %581 to i64
  %583 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  store i64 %582, i64* %132, align 8
  %584 = icmp eq %"class.WTF::StringImpl"* %583, null
  br i1 %584, label %598, label %585

585:                                              ; preds = %579
  %586 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %583, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %587 = load atomic i32, i32* %586 monotonic, align 4
  %588 = and i32 %587, 2
  %589 = icmp eq i32 %588, 0
  %590 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %583, i64 0, i32 0
  %591 = load i32, i32* %590, align 4
  br i1 %589, label %592, label %594

592:                                              ; preds = %585
  %593 = add i32 %591, -1
  store i32 %593, i32* %590, align 4
  br label %594

594:                                              ; preds = %592, %585
  %595 = phi i32 [ %593, %592 ], [ %591, %585 ]
  %596 = icmp eq i32 %595, 0
  br i1 %596, label %597, label %598

597:                                              ; preds = %594
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %583) #12
  br label %598

598:                                              ; preds = %597, %594, %579
  %599 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %600 = icmp eq %"class.WTF::StringImpl"* %599, null
  br i1 %600, label %614, label %601

601:                                              ; preds = %598
  %602 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %599, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %603 = load atomic i32, i32* %602 monotonic, align 4
  %604 = and i32 %603, 2
  %605 = icmp eq i32 %604, 0
  %606 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %599, i64 0, i32 0
  %607 = load i32, i32* %606, align 4
  br i1 %605, label %608, label %610

608:                                              ; preds = %601
  %609 = add i32 %607, -1
  store i32 %609, i32* %606, align 4
  br label %610

610:                                              ; preds = %608, %601
  %611 = phi i32 [ %609, %608 ], [ %607, %601 ]
  %612 = icmp eq i32 %611, 0
  br i1 %612, label %613, label %614

613:                                              ; preds = %610
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %599) #12
  br label %614

614:                                              ; preds = %598, %610, %613
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %114) #12
  call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* nonnull %9, i16 zeroext %270)
  br label %615

615:                                              ; preds = %473, %529, %443, %299, %290, %296, %272, %274, %282, %279, %614
  %616 = add nuw nsw i64 %253, 1
  %617 = icmp eq i64 %616, %133
  br i1 %617, label %134, label %252

618:                                              ; preds = %74, %71, %56, %251
  %619 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %619, label %633, label %620

620:                                              ; preds = %618
  %621 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %622 = load atomic i32, i32* %621 monotonic, align 4
  %623 = and i32 %622, 2
  %624 = icmp eq i32 %623, 0
  %625 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %626 = load i32, i32* %625, align 4
  br i1 %624, label %627, label %629

627:                                              ; preds = %620
  %628 = add i32 %626, -1
  store i32 %628, i32* %625, align 4
  br label %629

629:                                              ; preds = %627, %620
  %630 = phi i32 [ %628, %627 ], [ %626, %620 ]
  %631 = icmp eq i32 %630, 0
  br i1 %631, label %632, label %633

632:                                              ; preds = %629
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #12
  br label %633

633:                                              ; preds = %618, %629, %632
  ret void
}

declare dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink9InputType9GetLocaleEv(%"class.blink::InputType"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale28StripInvalidNumberCharactersERKN3WTF6StringES4_(%"class.blink::Locale"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink6Locale29UsesSingleCharNumberFilteringEv(%"class.blink::Locale"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink18TextControlElement14selectionStartEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare i32 @_ZNK5blink18TextControlElement12selectionEndEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare zeroext i1 @_ZN5blink6Locale18IsDecimalSeparatorEDs(%"class.blink::Locale"*, i16 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink6Locale19HasDecimalSeparatorERKN3WTF6StringE(%"class.blink::Locale"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blinkL3IsEEDs(i16 zeroext) #2 {
  %2 = or i16 %0, 32
  %3 = icmp eq i16 %2, 101
  ret i1 %3
}

declare zeroext i1 @_ZN5blink6Locale16HasSignNotAfterEERKN3WTF6StringE(%"class.blink::Locale"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink6Locale12IsSignPrefixEDs(%"class.blink::Locale"*, i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #12
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %31
  tail call void @llvm.trap() #12
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #12
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #12
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #12
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #12
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #12
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1623"* nonnull %67, i8* %30) #12
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1623"* nonnull %68, i8* %71) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #12
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %80
  call void @llvm.trap() #12
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #12
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #12
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #12
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #12
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #12
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #12
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1623"* nonnull %144, i16* %107) #12
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1623"* nonnull %145, i16* %148) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #12
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #12
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !3

164:                                              ; preds = %157
  call void @llvm.trap() #12
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #12
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #12
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

declare zeroext i1 @_ZN5blink6Locale15HasTwoSignCharsERKN3WTF6StringE(%"class.blink::Locale"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink6Locale7IsDigitEDs(%"class.blink::Locale"*, i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEDsEcvS1_Ev(%"class.WTF::StringAppend.908"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.908", %"class.WTF::StringAppend.908"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %10 = select i1 %8, %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"* %7
  %11 = getelementptr inbounds %"class.WTF::StringAppend.908", %"class.WTF::StringAppend.908"* %0, i64 0, i32 1
  %12 = load i16, i16* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 1
  %16 = icmp ne i32 %15, 0
  %17 = icmp ult i16 %12, 256
  %18 = and i1 %17, %16
  br i1 %18, label %19, label %79

19:                                               ; preds = %1
  %20 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEDsE6lengthEv(%"class.WTF::StringAppend.908"* %0)
  %22 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %21, i8** nonnull dereferenceable(8) %4) #12
  %23 = load i8*, i8** %4, align 8
  %24 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false) #12
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %19
  %30 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %37

31:                                               ; preds = %19
  %32 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 1
  %36 = bitcast %"class.WTF::StringImpl"* %35 to i8*
  br label %37

37:                                               ; preds = %29, %31
  %38 = phi i8* [ null, %29 ], [ %36, %31 ]
  %39 = phi i64 [ %30, %29 ], [ %32, %31 ]
  %40 = phi i32 [ 0, %29 ], [ %34, %31 ]
  %41 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %39, i64* %41, align 8
  store i8* %38, i8** %25, align 8
  store i32 %40, i32* %26, align 8
  %42 = load i16, i16* %11, align 8
  %43 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1623"* nonnull %43, i8* %23) #12
  %44 = load i32, i32* %26, align 8
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %23, i64 %45
  %47 = trunc i16 %42 to i8
  store i8 %47, i8* %46, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  %48 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %48, label %138, label %49

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %66

56:                                               ; preds = %49
  %57 = zext i32 %55 to i33
  %58 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #12
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !3

63:                                               ; preds = %56
  call void @llvm.trap() #12
  unreachable

64:                                               ; preds = %56
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %54, align 4
  br label %66

66:                                               ; preds = %49, %64
  %67 = phi i32 [ %65, %64 ], [ %55, %49 ]
  %68 = ptrtoint %"class.WTF::StringImpl"* %22 to i64
  %69 = load atomic i32, i32* %50 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %74 = add i32 %67, -1
  store i32 %74, i32* %73, align 4
  br label %75

75:                                               ; preds = %72, %66
  %76 = phi i32 [ %74, %72 ], [ %67, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %138

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #12
  br label %138

79:                                               ; preds = %1
  %80 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %81 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEDsE6lengthEv(%"class.WTF::StringAppend.908"* %0)
  %82 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %81, i16** nonnull dereferenceable(8) %5) #12
  %83 = load i16*, i16** %5, align 8
  %84 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #12
  %85 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 24, i1 false) #12
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %91

89:                                               ; preds = %79
  %90 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %97

91:                                               ; preds = %79
  %92 = ptrtoint %"class.WTF::StringImpl"* %87 to i64
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 1
  %96 = bitcast %"class.WTF::StringImpl"* %95 to i8*
  br label %97

97:                                               ; preds = %89, %91
  %98 = phi i8* [ null, %89 ], [ %96, %91 ]
  %99 = phi i64 [ %90, %89 ], [ %92, %91 ]
  %100 = phi i32 [ 0, %89 ], [ %94, %91 ]
  %101 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %99, i64* %101, align 8
  store i8* %98, i8** %85, align 8
  store i32 %100, i32* %86, align 8
  %102 = load i16, i16* %11, align 8
  %103 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1623"* nonnull %103, i16* %83) #12
  %104 = load i32, i32* %86, align 8
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i16, i16* %83, i64 %105
  store i16 %102, i16* %106, align 2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #12
  %107 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %107, label %138, label %108

108:                                              ; preds = %97
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %125

115:                                              ; preds = %108
  %116 = zext i32 %114 to i33
  %117 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #12
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %115
  call void @llvm.trap() #12
  unreachable

123:                                              ; preds = %115
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %113, align 4
  br label %125

125:                                              ; preds = %108, %123
  %126 = phi i32 [ %124, %123 ], [ %114, %108 ]
  %127 = ptrtoint %"class.WTF::StringImpl"* %82 to i64
  %128 = load atomic i32, i32* %109 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %133 = add i32 %126, -1
  store i32 %133, i32* %132, align 4
  br label %134

134:                                              ; preds = %131, %125
  %135 = phi i32 [ %133, %131 ], [ %126, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #12
  br label %138

138:                                              ; preds = %137, %134, %97, %78, %75, %37
  %139 = phi i8* [ %20, %37 ], [ %20, %75 ], [ %20, %78 ], [ %80, %97 ], [ %80, %134 ], [ %80, %137 ]
  %140 = phi i64 [ 0, %37 ], [ %68, %75 ], [ %68, %78 ], [ 0, %97 ], [ %127, %134 ], [ %127, %137 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #12
  %141 = inttoptr i64 %140 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %141
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"*, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i16, align 2
  store i16 %1, i16* %4, align 2
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp ne i8 %6, 0
  %8 = icmp ult i16 %1, 256
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %35

10:                                               ; preds = %2
  %11 = trunc i16 %1 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 %11, i8* %3, align 1
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #12
  br label %16

16:                                               ; preds = %15, %10
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %30, label %23, !prof !3

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %17, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = zext i32 %19 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8 %11, i8* %27, align 1
  %28 = load i32, i32* %18, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %18, align 4
  br label %31

30:                                               ; preds = %16
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.898"* %17, i8* nonnull dereferenceable(1) %3) #12
  br label %31

31:                                               ; preds = %23, %30
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  br label %62

35:                                               ; preds = %2
  %36 = icmp eq i8 %6, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37, %35
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #12
  br label %42

42:                                               ; preds = %37, %41
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %56, label %49, !prof !3

49:                                               ; preds = %42
  %50 = bitcast %union.anon.897* %43 to i16**
  %51 = load i16*, i16** %50, align 8
  %52 = zext i32 %45 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  store i16 %1, i16* %53, align 2
  %54 = load i32, i32* %44, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %44, align 4
  br label %58

56:                                               ; preds = %42
  %57 = bitcast %union.anon.897* %43 to %"class.WTF::Vector.903"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.903"* %57, i16* nonnull dereferenceable(2) %4) #12
  br label %58

58:                                               ; preds = %49, %56
  %59 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 1
  store i32 %61, i32* %59, align 8
  br label %62

62:                                               ; preds = %58, %31
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink15NumberInputType29HandleBeforeTextInsertedEventERNS_23BeforeTextInsertedEventE(%"class.blink::NumberInputType"*, %"class.blink::BeforeTextInsertedEvent"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to %"class.blink::NumberInputType"*
  tail call void @_ZN5blink15NumberInputType29HandleBeforeTextInsertedEventERNS_23BeforeTextInsertedEventE(%"class.blink::NumberInputType"* %4, %"class.blink::BeforeTextInsertedEvent"* dereferenceable(112) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15NumberInputType13ParseToNumberERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* noalias sret, %"class.blink::NumberInputType"* nocapture readnone, %"class.WTF::String"* dereferenceable(8), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink27ParseToDecimalForNumberTypeERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* sret %0, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::Decimal"* dereferenceable(24) %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15NumberInputType9SerializeERKNS_7DecimalE(%"class.blink::NumberInputType"* nocapture readnone, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %1, i64 0, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, -3
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = tail call %"class.WTF::StringImpl"* @_ZN5blink22SerializeForNumberTypeERKNS_7DecimalE(%"class.blink::Decimal"* dereferenceable(24) %1) #12
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi %"class.WTF::StringImpl"* [ %8, %7 ], [ null, %2 ]
  ret %"class.WTF::StringImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15NumberInputType13LocalizeValueERKN3WTF6StringE(%"class.blink::NumberInputType"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %27

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %56

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #12
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #12
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %56

27:                                               ; preds = %6
  %28 = tail call i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"* nonnull %4, i1 (i16)* nonnull @_ZN5blinkL3IsEEDs, i32 0) #12
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %50, label %30

30:                                               ; preds = %27
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %56, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %56

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #12
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !3

47:                                               ; preds = %38
  tail call void @llvm.trap() #12
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %56

50:                                               ; preds = %27
  %51 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %52 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %53) #12
  %55 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale24ConvertToLocalizedNumberERKN3WTF6StringE(%"class.blink::Locale"* %54, %"class.WTF::String"* dereferenceable(8) %1) #12
  br label %56

56:                                               ; preds = %2, %48, %33, %30, %25, %10, %50
  %57 = phi %"class.WTF::StringImpl"* [ %55, %50 ], [ %4, %10 ], [ %4, %25 ], [ null, %30 ], [ %31, %33 ], [ %31, %48 ], [ null, %2 ]
  ret %"class.WTF::StringImpl"* %57
}

declare dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale24ConvertToLocalizedNumberERKN3WTF6StringE(%"class.blink::Locale"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15NumberInputType12VisibleValueEv(%"class.blink::NumberInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #12
  %4 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %6 = bitcast %"class.blink::HTMLInputElement"* %5 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %7, i64 195
  %9 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %8, align 8
  %10 = tail call %"class.WTF::StringImpl"* %9(%"class.blink::HTMLInputElement"* %5) #12
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = call %"class.WTF::StringImpl"* @_ZNK5blink15NumberInputType13LocalizeValueERKN3WTF6StringE(%"class.blink::NumberInputType"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %2)
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #12
  br label %28

28:                                               ; preds = %1, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #12
  ret %"class.WTF::StringImpl"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15NumberInputType23ConvertFromVisibleValueERKN3WTF6StringE(%"class.blink::NumberInputType"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %27

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %56

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #12
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #12
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %56

27:                                               ; preds = %6
  %28 = tail call i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"* nonnull %4, i1 (i16)* nonnull @_ZN5blinkL3IsEEDs, i32 0) #12
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %50, label %30

30:                                               ; preds = %27
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %56, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %56

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #12
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !3

47:                                               ; preds = %38
  tail call void @llvm.trap() #12
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %56

50:                                               ; preds = %27
  %51 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %52 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %53) #12
  %55 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale26ConvertFromLocalizedNumberERKN3WTF6StringE(%"class.blink::Locale"* %54, %"class.WTF::String"* dereferenceable(8) %1) #12
  br label %56

56:                                               ; preds = %2, %48, %33, %30, %25, %10, %50
  %57 = phi %"class.WTF::StringImpl"* [ %55, %50 ], [ %4, %10 ], [ %4, %25 ], [ null, %30 ], [ %31, %33 ], [ %31, %48 ], [ null, %2 ]
  ret %"class.WTF::StringImpl"* %57
}

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale26ConvertFromLocalizedNumberERKN3WTF6StringE(%"class.blink::Locale"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15NumberInputType13SanitizeValueERKN3WTF6StringE(%"class.blink::NumberInputType"* nocapture readnone, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %53, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %27

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %53

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #12
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #12
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %53

27:                                               ; preds = %6
  %28 = tail call double @_ZN5blink26ParseToDoubleForNumberTypeERKN3WTF6StringEd(%"class.WTF::String"* dereferenceable(8) %1, double 0x7FF8000000000000) #12
  %29 = tail call double @llvm.fabs.f64(double %28) #13
  %30 = fcmp one double %29, 0x7FF0000000000000
  %31 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %32 = select i1 %30, %"class.WTF::String"* %1, %"class.WTF::String"* %31
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #12
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #12
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %2, %51, %36, %27, %25, %10
  %54 = phi %"class.WTF::StringImpl"* [ %4, %10 ], [ %4, %25 ], [ null, %27 ], [ %34, %36 ], [ %34, %51 ], [ null, %2 ]
  ret %"class.WTF::StringImpl"* %54
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15NumberInputType20WarnIfValueIsInvalidERKN3WTF6StringE(%"class.blink::NumberInputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %11, align 8
  %13 = tail call %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement13SanitizeValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"* %12, %"class.WTF::String"* dereferenceable(8) %1) #12
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp ne i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %15
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %15
  %28 = phi i32 [ %26, %25 ], [ %24, %15 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #12
  br i1 %18, label %34, label %32

31:                                               ; preds = %27
  br i1 %18, label %34, label %32

32:                                               ; preds = %10, %30, %31
  %33 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink9InputType19AddWarningToConsoleEPKcRKN3WTF6StringE(%"class.blink::InputType"* %33, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), %"class.WTF::String"* dereferenceable(8) %1) #12
  br label %34

34:                                               ; preds = %6, %2, %30, %31, %32
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement13SanitizeValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK5blink9InputType19AddWarningToConsoleEPKcRKN3WTF6StringE(%"class.blink::InputType"*, i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15NumberInputType11HasBadInputEv(%"class.blink::NumberInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %8, i64 0, i32 0
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"* %9) #12
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = call %"class.WTF::StringImpl"* @_ZNK5blink15NumberInputType23ConvertFromVisibleValueERKN3WTF6StringE(%"class.blink::NumberInputType"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %5, align 8
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #12
  br label %28

28:                                               ; preds = %27, %24
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  br label %30

30:                                               ; preds = %28, %1
  %31 = phi %"class.WTF::StringImpl"* [ %29, %28 ], [ %12, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %58, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %33
  %38 = call double @_ZN5blink26ParseToDoubleForNumberTypeERKN3WTF6StringEd(%"class.WTF::String"* nonnull dereferenceable(8) %2, double 0x7FF8000000000000) #12
  %39 = call double @llvm.fabs.f64(double %38) #13
  %40 = fcmp ueq double %39, 0x7FF0000000000000
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %58, label %43

43:                                               ; preds = %33, %37
  %44 = phi i1 [ %40, %37 ], [ false, %33 ]
  %45 = phi %"class.WTF::StringImpl"* [ %41, %37 ], [ %31, %33 ]
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %43
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %43
  %55 = phi i32 [ %53, %52 ], [ %51, %43 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #12
  br label %58

58:                                               ; preds = %30, %37, %54, %57
  %59 = phi i1 [ %40, %37 ], [ %44, %54 ], [ %44, %57 ], [ false, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink15NumberInputType11HasBadInputEv(%"class.blink::NumberInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %3 = bitcast %"class.blink::Member"* %2 to %"class.blink::NumberInputType"*
  %4 = tail call zeroext i1 @_ZNK5blink15NumberInputType11HasBadInputEv(%"class.blink::NumberInputType"* %3)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15NumberInputType12BadInputTextEv(%"class.blink::NumberInputType"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0
  %3 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink9InputType9GetLocaleEv(%"class.blink::InputType"* %2) #12
  %4 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %3, i32 25040) #12
  ret %"class.WTF::StringImpl"* %4
}

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15NumberInputType17ValueNotEqualTextERKNS_7DecimalE(%"class.blink::NumberInputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0
  %6 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink9InputType9GetLocaleEv(%"class.blink::InputType"* %5) #12
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %1, i64 0, i32 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, -3
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = tail call %"class.WTF::StringImpl"* @_ZN5blink22SerializeForNumberTypeERKNS_7DecimalE(%"class.blink::Decimal"* dereferenceable(24) %1) #12
  br label %15

15:                                               ; preds = %2, %13
  %16 = phi %"class.WTF::StringImpl"* [ %14, %13 ], [ null, %2 ]
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  %18 = call %"class.WTF::StringImpl"* @_ZNK5blink15NumberInputType13LocalizeValueERKN3WTF6StringE(%"class.blink::NumberInputType"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEiRKN3WTF6StringE(%"class.blink::Locale"* %6, i32 25031, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #12
  br label %36

36:                                               ; preds = %15, %32, %35
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #12
  br label %52

52:                                               ; preds = %36, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret %"class.WTF::StringImpl"* %20
}

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEiRKN3WTF6StringE(%"class.blink::Locale"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15NumberInputType17RangeOverflowTextERKNS_7DecimalE(%"class.blink::NumberInputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0
  %6 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink9InputType9GetLocaleEv(%"class.blink::InputType"* %5) #12
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %1, i64 0, i32 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, -3
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = tail call %"class.WTF::StringImpl"* @_ZN5blink22SerializeForNumberTypeERKNS_7DecimalE(%"class.blink::Decimal"* dereferenceable(24) %1) #12
  br label %15

15:                                               ; preds = %2, %13
  %16 = phi %"class.WTF::StringImpl"* [ %14, %13 ], [ null, %2 ]
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  %18 = call %"class.WTF::StringImpl"* @_ZNK5blink15NumberInputType13LocalizeValueERKN3WTF6StringE(%"class.blink::NumberInputType"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEiRKN3WTF6StringE(%"class.blink::Locale"* %6, i32 25035, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #12
  br label %36

36:                                               ; preds = %15, %32, %35
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #12
  br label %52

52:                                               ; preds = %36, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret %"class.WTF::StringImpl"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15NumberInputType18RangeUnderflowTextERKNS_7DecimalE(%"class.blink::NumberInputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0
  %6 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink9InputType9GetLocaleEv(%"class.blink::InputType"* %5) #12
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %1, i64 0, i32 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, -3
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = tail call %"class.WTF::StringImpl"* @_ZN5blink22SerializeForNumberTypeERKNS_7DecimalE(%"class.blink::Decimal"* dereferenceable(24) %1) #12
  br label %15

15:                                               ; preds = %2, %13
  %16 = phi %"class.WTF::StringImpl"* [ %14, %13 ], [ null, %2 ]
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  %18 = call %"class.WTF::StringImpl"* @_ZNK5blink15NumberInputType13LocalizeValueERKN3WTF6StringE(%"class.blink::NumberInputType"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEiRKN3WTF6StringE(%"class.blink::Locale"* %6, i32 25033, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #12
  br label %36

36:                                               ; preds = %15, %32, %35
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #12
  br label %52

52:                                               ; preds = %36, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret %"class.WTF::StringImpl"* %20
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink15NumberInputType19SupportsPlaceholderEv(%"class.blink::NumberInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NumberInputType24MinOrMaxAttributeChangedEv(%"class.blink::NumberInputType"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink13InputTypeView24MinOrMaxAttributeChangedEv(%"class.blink::InputTypeView"* %2) #12
  %3 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %8, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRareData"**
  %12 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %12, i64 0, i32 1, i32 0, i32 0
  br label %16

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRenderingData"**
  br label %16

16:                                               ; preds = %10, %14
  %17 = phi %"class.blink::NodeRenderingData"** [ %13, %10 ], [ %15, %14 ]
  %18 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %18, i64 0, i32 1
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutObject"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %16
  br i1 %8, label %27, label %23

23:                                               ; preds = %22
  %24 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRareData"**
  %25 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %25, i64 0, i32 1, i32 0, i32 0
  br label %29

27:                                               ; preds = %22
  %28 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRenderingData"**
  br label %29

29:                                               ; preds = %23, %27
  %30 = phi %"class.blink::NodeRenderingData"** [ %26, %23 ], [ %28, %27 ]
  %31 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %31, i64 0, i32 1
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %33, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason17kAttributeChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #12
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %33, i8 zeroext 3) #12
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %33, i32 1) #12
  br label %34

34:                                               ; preds = %16, %29
  ret void
}

declare void @_ZN5blink13InputTypeView24MinOrMaxAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink15NumberInputType24MinOrMaxAttributeChangedEv(%"class.blink::NumberInputType"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %3 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 2
  %4 = bitcast %"class.blink::Member"* %3 to %"class.blink::InputTypeView"*
  tail call void @_ZN5blink13InputTypeView24MinOrMaxAttributeChangedEv(%"class.blink::InputTypeView"* %4) #12
  %5 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 1, i32 0, i32 0
  %6 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %10, label %16, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %14 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %14, i64 0, i32 1, i32 0, i32 0
  br label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %18

18:                                               ; preds = %16, %12
  %19 = phi %"class.blink::NodeRenderingData"** [ %15, %12 ], [ %17, %16 ]
  %20 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %20, i64 0, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %36, label %24

24:                                               ; preds = %18
  br i1 %10, label %29, label %25

25:                                               ; preds = %24
  %26 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %27 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %27, i64 0, i32 1, i32 0, i32 0
  br label %31

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %31

31:                                               ; preds = %29, %25
  %32 = phi %"class.blink::NodeRenderingData"** [ %28, %25 ], [ %30, %29 ]
  %33 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %33, i64 0, i32 1
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %35, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason17kAttributeChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #12
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %35, i8 zeroext 3) #12
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %35, i32 1) #12
  br label %36

36:                                               ; preds = %18, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NumberInputType20StepAttributeChangedEv(%"class.blink::NumberInputType"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink13InputTypeView20StepAttributeChangedEv(%"class.blink::InputTypeView"* %2) #12
  %3 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %8, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRareData"**
  %12 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %12, i64 0, i32 1, i32 0, i32 0
  br label %16

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRenderingData"**
  br label %16

16:                                               ; preds = %10, %14
  %17 = phi %"class.blink::NodeRenderingData"** [ %13, %10 ], [ %15, %14 ]
  %18 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %18, i64 0, i32 1
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutObject"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %16
  br i1 %8, label %27, label %23

23:                                               ; preds = %22
  %24 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRareData"**
  %25 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %25, i64 0, i32 1, i32 0, i32 0
  br label %29

27:                                               ; preds = %22
  %28 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRenderingData"**
  br label %29

29:                                               ; preds = %23, %27
  %30 = phi %"class.blink::NodeRenderingData"** [ %26, %23 ], [ %28, %27 ]
  %31 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %31, i64 0, i32 1
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %33, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason17kAttributeChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #12
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %33, i8 zeroext 3) #12
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %33, i32 1) #12
  br label %34

34:                                               ; preds = %16, %29
  ret void
}

declare void @_ZN5blink13InputTypeView20StepAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink15NumberInputType20StepAttributeChangedEv(%"class.blink::NumberInputType"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %3 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 2
  %4 = bitcast %"class.blink::Member"* %3 to %"class.blink::InputTypeView"*
  tail call void @_ZN5blink13InputTypeView20StepAttributeChangedEv(%"class.blink::InputTypeView"* %4) #12
  %5 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 1, i32 0, i32 0
  %6 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %10, label %16, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %14 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %14, i64 0, i32 1, i32 0, i32 0
  br label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %18

18:                                               ; preds = %16, %12
  %19 = phi %"class.blink::NodeRenderingData"** [ %15, %12 ], [ %17, %16 ]
  %20 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %20, i64 0, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %36, label %24

24:                                               ; preds = %18
  br i1 %10, label %29, label %25

25:                                               ; preds = %24
  %26 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %27 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %27, i64 0, i32 1, i32 0, i32 0
  br label %31

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %31

31:                                               ; preds = %29, %25
  %32 = phi %"class.blink::NodeRenderingData"** [ %28, %25 ], [ %30, %29 ]
  %33 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %33, i64 0, i32 1
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %35, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason17kAttributeChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #12
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %35, i8 zeroext 3) #12
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %35, i32 1) #12
  br label %36

36:                                               ; preds = %18, %31
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink15NumberInputType20SupportsSelectionAPIEv(%"class.blink::NumberInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: nounwind
declare void @_ZN5blink18TextFieldInputTypeD2Ev(%"class.blink::TextFieldInputType"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15NumberInputTypeD0Ev(%"class.blink::NumberInputType"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextFieldInputTypeD2Ev(%"class.blink::TextFieldInputType"* %2) #12
  ret void
}

declare void @_ZNK5blink18TextFieldInputType5TraceEPNS_7VisitorE(%"class.blink::TextFieldInputType"*, %"class.blink::Visitor"*) unnamed_addr #1

declare %"class.blink::InputTypeView"* @_ZN5blink18TextFieldInputType10CreateViewEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType20IsInteractiveContentEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType12IsTextButtonEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink18TextFieldInputType11IsTextFieldEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType20IsFormDataAppendableEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink18TextFieldInputType16AppendToFormDataERNS_8FormDataE(%"class.blink::TextFieldInputType"*, %"class.blink::FormData"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType21ResultForDialogSubmitEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType24ValueInFilenameValueModeEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType12DefaultLabelEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink18TextFieldInputType12GetValueModeEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare double @_ZNK5blink9InputType11ValueAsDateEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink9InputType14SetValueAsDateERKN4absl8optionalIN4base4TimeEEERNS_14ExceptionStateE(%"class.blink::InputType"*, %"class.absl::optional.1516"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZNK5blink9InputType14ReadingCheckedEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType21WillUpdateCheckednessEb(%"class.blink::InputType"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType18SupportsValidationEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType16SupportsRequiredEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink18TextFieldInputType12ValueMissingERKN3WTF6StringE(%"class.blink::TextFieldInputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType15PatternMismatchERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType7TooLongERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType8TooShortERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9InputType21DefaultValueForStepUpEv(%"class.blink::Decimal"* sret, %"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType27ReversedRangeOutOfRangeTextERKNS_7DecimalES3_(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType16RangeInvalidTextERKNS_7DecimalES3_(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType16TypeMismatchTextEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType16ValueMissingTextEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType17CanSetStringValueEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType22SanitizeUserInputValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType19IsKeyboardFocusableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink18TextFieldInputType25MayTriggerVirtualKeyboardEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType27CanBeSuccessfulSubmitButtonEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType25MatchesDefaultPseudoClassEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType20LayoutObjectIsNeededEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType48SanitizeValueInResponseToMinOrMaxAttributeChangeEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType27ShouldRespectAlignAttributeEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.blink::FileList"* @_ZN5blink9InputType5FilesEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType8SetFilesEPNS_8FileListE(%"class.blink::InputType"*, %"class.blink::FileList"*) unnamed_addr #1

declare void @_ZN5blink9InputType25SetFilesAndDispatchEventsEPNS_8FileListE(%"class.blink::InputType"*, %"class.blink::FileList"*) unnamed_addr #1

declare void @_ZN5blink9InputType17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::InputType"*, %"class.WTF::Vector.1242"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType19ReceiveDroppedFilesEPKNS_8DragDataE(%"class.blink::InputType"*, %"class.blink::DragData"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink9InputType19DroppedFileSystemIdEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink18TextFieldInputType20CanSetSuggestedValueEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType40ShouldSendChangeEventAfterCheckedChangedEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType11CanSetValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN5blink18TextFieldInputType26ShouldRespectListAttributeEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType14IsEnumeratableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType11IsCheckableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType37ShouldRespectHeightAndWidthAttributesEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType9MaxLengthEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType9MinLengthEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink18TextFieldInputType16SupportsReadOnlyEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType14DefaultToolTipERKNS_13InputTypeViewE(%"class.blink::InputType"*, %"class.blink::InputTypeView"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN5blink9InputType24FindClosestTickMarkValueERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::InputType"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink9InputType24SubResourceAttributeNameEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType26CopyNonAttributePropertiesERKNS_16HTMLInputElementE(%"class.blink::InputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #1

declare void @_ZN5blink9InputType24OnAttachWithLayoutObjectEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType25ShouldAppearIndeterminateEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType26SupportsInputModeAttributeEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType6HeightEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType5WidthEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType19DispatchSearchEventEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.blink::ColorChooserClient"* @_ZN5blink9InputType21GetColorChooserClientEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType19CreateShadowSubtreeEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType20DestroyShadowSubtreeEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType21ValueAttributeChangedEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType24DisabledAttributeChangedEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType24ReadonlyAttributeChangedEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType12ForwardEventERNS_5EventE(%"class.blink::TextFieldInputType"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType15HandleBlurEventEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType10UpdateViewEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType26CustomStyleForLayoutObjectERNS_13ComputedStyleE(%"class.blink::TextFieldInputType"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink18TextFieldInputType27TypeShouldForceLegacyLayoutEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink18TextFieldInputType18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::TextFieldInputType"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18TextFieldInputType14NeedsContainerEv(%"class.blink::TextFieldInputType"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink18TextFieldInputType21DidSetValueByUserEditEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink18TextFieldInputType22ShouldSubmitImplicitlyERKNS_5EventE(%"class.blink::TextFieldInputType"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType26ListAttributeTargetChangedEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType21UpdatePlaceholderTextEb(%"class.blink::TextFieldInputType"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType17SubtreeHasChangedEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType29FocusAndSelectSpinButtonOwnerEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink18TextFieldInputType36ShouldSpinButtonRespondToMouseEventsEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink18TextFieldInputType36ShouldSpinButtonRespondToWheelEventsEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType18SpinButtonStepDownEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType16SpinButtonStepUpEv(%"class.blink::TextFieldInputType"*) unnamed_addr #1

declare void @_ZN5blink18TextFieldInputType32SpinButtonDidReleaseMouseCaptureENS_17SpinButtonElement13EventDispatchE(%"class.blink::TextFieldInputType"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_NK5blink18TextFieldInputType5TraceEPNS_7VisitorE(%"class.blink::TextFieldInputType"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink15NumberInputTypeD1Ev(%"class.blink::NumberInputType"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %3 = bitcast %"class.blink::Member"* %2 to %"class.blink::TextFieldInputType"*
  tail call void @_ZN5blink18TextFieldInputTypeD2Ev(%"class.blink::TextFieldInputType"* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink15NumberInputTypeD0Ev(%"class.blink::NumberInputType"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %3 = bitcast %"class.blink::Member"* %2 to %"class.blink::TextFieldInputType"*
  tail call void @_ZN5blink18TextFieldInputTypeD2Ev(%"class.blink::TextFieldInputType"* %3) #12
  ret void
}

declare void @_ZN5blink13InputTypeView16HandleClickEventERNS_10MouseEventE(%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView20HandleMouseDownEventERNS_10MouseEventE(%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*) unnamed_addr #1

declare %"class.blink::ClickHandlingState"* @_ZN5blink13InputTypeView17WillDispatchClickEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView16DidDispatchClickERNS_5EventERKNS_18ClickHandlingStateE(%"class.blink::InputTypeView"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::ClickHandlingState"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN5blink13InputTypeView19HandleKeypressEventERNS_13KeyboardEventE(%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #1

declare void @_ZN5blink13InputTypeView16HandleKeyupEventERNS_13KeyboardEventE(%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink18TextFieldInputType12ForwardEventERNS_5EventE(%"class.blink::TextFieldInputType"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn16_N5blink18TextFieldInputType22ShouldSubmitImplicitlyERKNS_5EventE(%"class.blink::TextFieldInputType"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 align 2

declare %"class.blink::HTMLFormElement"* @_ZNK5blink13InputTypeView17FormForSubmissionEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView19HasCustomFocusLogicEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView18HandleFocusInEventEPNS_7ElementENS_5mojom9FocusTypeE(%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink18TextFieldInputType15HandleBlurEventEv(%"class.blink::TextFieldInputType"*) unnamed_addr #0 align 2

declare void @_ZN5blink13InputTypeView22HandleDOMActivateEventERNS_5EventE(%"class.blink::InputTypeView"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink13InputTypeView15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::InputTypeView"*, i32) unnamed_addr #1

declare void @_ZN5blink13InputTypeView4BlurEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink18TextFieldInputType17SubtreeHasChangedEv(%"class.blink::TextFieldInputType"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn16_NK5blink18TextFieldInputType27TypeShouldForceLegacyLayoutEv(%"class.blink::TextFieldInputType"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::LayoutObject"* @_ZThn16_NK5blink18TextFieldInputType18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::TextFieldInputType"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink18TextFieldInputType26CustomStyleForLayoutObjectERNS_13ComputedStyleE(%"class.blink::TextFieldInputType"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 align 2

declare zeroext i8 @_ZN5blink13InputTypeView21ComputedTextDirectionEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView14ClosePopupViewEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView14HasOpenedPopupEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView18NeedsShadowSubtreeEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink18TextFieldInputType19CreateShadowSubtreeEv(%"class.blink::TextFieldInputType"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink18TextFieldInputType20DestroyShadowSubtreeEv(%"class.blink::TextFieldInputType"*) unnamed_addr #0 align 2

declare %"class.blink::HTMLInputElement"* @_ZNK5blink13InputTypeView12UploadButtonEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13InputTypeView14FileStatusTextEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView19AltAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView19SrcAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink18TextFieldInputType10UpdateViewEv(%"class.blink::TextFieldInputType"*) unnamed_addr #0 align 2

declare void @_ZN5blink13InputTypeView24MultipleAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink18TextFieldInputType24DisabledAttributeChangedEv(%"class.blink::TextFieldInputType"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink18TextFieldInputType24ReadonlyAttributeChangedEv(%"class.blink::TextFieldInputType"*) unnamed_addr #0 align 2

declare void @_ZN5blink13InputTypeView24RequiredAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink18TextFieldInputType21ValueAttributeChangedEv(%"class.blink::TextFieldInputType"*) unnamed_addr #0 align 2

declare void @_ZN5blink13InputTypeView11DidSetValueERKN3WTF6StringEb(%"class.blink::InputTypeView"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink18TextFieldInputType26ListAttributeTargetChangedEv(%"class.blink::TextFieldInputType"*) unnamed_addr #0 align 2

declare void @_ZN5blink13InputTypeView27CapsLockStateMayHaveChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView27ShouldDrawCapsLockIndicatorEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView27UpdateClearButtonVisibilityEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink18TextFieldInputType21UpdatePlaceholderTextEb(%"class.blink::TextFieldInputType"*, i1 zeroext) unnamed_addr #0 align 2

declare %"class.blink::AXObject"* @_ZN5blink13InputTypeView17PopupRootAXObjectEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13InputTypeView21EnsureFallbackContentEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13InputTypeView20EnsurePrimaryContentEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13InputTypeView18HasFallbackContentEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink13InputTypeView20SaveFormControlStateEv() unnamed_addr

declare void @_ZN5blink13InputTypeView23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::InputTypeView"*, %"class.blink::FormControlState"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView15IsDraggedSliderEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink13InputTypeView17FocusedFieldIndexEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn40_NK5blink18TextFieldInputType5TraceEPNS_7VisitorE(%"class.blink::TextFieldInputType"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn40_N5blink15NumberInputTypeD1Ev(%"class.blink::NumberInputType"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 -1, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::Member"* %2 to %"class.blink::TextFieldInputType"*
  tail call void @_ZN5blink18TextFieldInputTypeD2Ev(%"class.blink::TextFieldInputType"* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn40_N5blink15NumberInputTypeD0Ev(%"class.blink::NumberInputType"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NumberInputType", %"class.blink::NumberInputType"* %0, i64 -1, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::Member"* %2 to %"class.blink::TextFieldInputType"*
  tail call void @_ZN5blink18TextFieldInputTypeD2Ev(%"class.blink::TextFieldInputType"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn40_N5blink18TextFieldInputType29FocusAndSelectSpinButtonOwnerEv(%"class.blink::TextFieldInputType"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn40_N5blink18TextFieldInputType36ShouldSpinButtonRespondToMouseEventsEv(%"class.blink::TextFieldInputType"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn40_N5blink18TextFieldInputType36ShouldSpinButtonRespondToWheelEventsEv(%"class.blink::TextFieldInputType"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn40_N5blink18TextFieldInputType32SpinButtonDidReleaseMouseCaptureENS_17SpinButtonElement13EventDispatchE(%"class.blink::TextFieldInputType"*, i32) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn40_N5blink18TextFieldInputType18SpinButtonStepDownEv(%"class.blink::TextFieldInputType"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn40_N5blink18TextFieldInputType16SpinButtonStepUpEv(%"class.blink::TextFieldInputType"*) unnamed_addr #0 align 2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #1

declare %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() local_unnamed_addr #1

declare void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"*) local_unnamed_addr #1

declare void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"*, i1 (i16)*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.898"*, i8* dereferenceable(1)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.898"* %0, i32 %5) #12
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.898"* %0, i32 %5) #12
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.898"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.898"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.898"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.898"* %0, i32 %27) #12
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.898"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.898"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.898"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #12
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.899"* %18, i8* nonnull %6) #12
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !5

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #12
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !5

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.899"* %46, i8* %42) #12
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.898"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #12
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.899"*, i8*) local_unnamed_addr #9 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #12
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.903"*, i16* dereferenceable(2)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.903"* %0, i32 %5) #12
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.903"* %0, i32 %5) #12
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.903"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.903"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.903"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.903"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.903"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.903"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.903"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #12
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.904"* %19, i16* nonnull %6) #12
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #12
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #12
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !5

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #12
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !5

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.904"* %53, i16* %48) #12
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.903"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.904"*, i16*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #6 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon.1597, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #12
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !5

23:                                               ; preds = %19
  %24 = bitcast %class.anon.1597* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #12
  %25 = getelementptr inbounds %class.anon.1597, %class.anon.1597* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon.1597, %class.anon.1597* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), %class.anon.1597* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #12
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #12
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon.1597* dereferenceable(16)) local_unnamed_addr #6 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = tail call i8* @_Znwm(i64 192) #14
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #12
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #12
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #12
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #12
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #12
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #12
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #12
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #12
  %38 = getelementptr inbounds %class.anon.1597, %class.anon.1597* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #12
  %40 = getelementptr inbounds %class.anon.1597, %class.anon.1597* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #12
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #12
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #12
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #12
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #12
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #12
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !6

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !8

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !9

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #14
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #14, !noalias !10
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !10
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #14
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #12
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #12
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #12
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %33
  tail call void @llvm.trap() #12
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #12
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #12
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0), i8* %31, i8* %32) #12
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.13, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #12
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #12
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %46, i8* %47) #12
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.13, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  ret i32 %24
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1623"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1623"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEDsE6lengthEv(%"class.WTF::StringAppend.908"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.908", %"class.WTF::StringAppend.908"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = add i32 %15, 1
  %17 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp eq i32 %15, -1
  br i1 %20, label %22, label %21

21:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %14
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 -1) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0), i8* %23, i8* %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.13, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %32 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %33, align 8
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = icmp eq i32 %16, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %33, align 8
  br label %46

37:                                               ; preds = %31
  %38 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  %39 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 1) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %38, i8* %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %41, i8** %33, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.13, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #12
  br label %46

46:                                               ; preds = %36, %37, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  ret i32 %16
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readnone }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
