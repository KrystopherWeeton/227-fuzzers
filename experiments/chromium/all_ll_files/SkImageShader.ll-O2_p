; ModuleID = '../../third_party/skia/src/shaders/SkImageShader.cpp'
source_filename = "../../third_party/skia/src/shaders/SkImageShader.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkCubicResampler = type { float, float }
%struct.SkRGBA4f = type { float, float, float, float }
%"struct.std::__1::pair" = type { %class.SkPixmap, %class.SkMatrix }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkBitmapProcState = type opaque
%class.SkImageShader = type <{ %class.SkShaderBase.base, [4 x i8], %class.sk_sp, %struct.SkSamplingOptions, i32, i32, i8, [3 x i8] }>
%class.SkShaderBase.base = type { %class.SkShader.base, %class.SkMatrix }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%class.SkM44 = type { [16 x float] }
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%class.sk_sp.14 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.8*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair.120" }
%"struct.std::__1::pair.120" = type { i32, void (%class.sk_sp.14*, %class.SkReadBuffer*)* }
%class.sk_sp.8 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkDeserialProcs = type { void (%class.sk_sp.9*, i8*, i64, i8*)*, i8*, void (%class.sk_sp*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.8*, i8*, i64, i8*)*, i8* }
%class.sk_sp.9 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.10", [7 x i8] }>
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.15 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.16*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%"class.SkShaderBase::Context" = type <{ i32 (...)**, %class.SkShaderBase*, %class.SkMatrix, %class.SkMatrix, i8, [7 x i8] }>
%"struct.SkShaderBase::ContextRec" = type <{ %class.SkMatrix*, %class.SkMatrix*, i32, [4 x i8], %class.SkColorSpace*, i8, i8, [6 x i8] }>
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkImage_Base = type { %class.SkImage.base, %"struct.std::__1::atomic.10", [3 x i8] }
%class.SkImage.base = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32 }>
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.21"*, i64 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.GrFPArgs = type { %class.GrRecordingContext*, %class.SkMatrixProvider*, %class.SkMatrix*, i8, %class.GrColorInfo* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.28", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.77" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.27 }
%class.sk_sp.27 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.31, %class.SkTHashMap.33, %class.SkTHashMap.42, %class.SkTArray.51, %class.SkTArray.53, i32, i8, [3 x i8] }>
%class.SkTArray.31 = type { %"class.std::__1::unique_ptr.32"*, i64 }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.53, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.54 }
%class.sk_sp.54 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.33 = type { %class.SkTHashTable.34 }
%class.SkTHashTable.34 = type { i32, i32, %class.SkAutoTArray.35 }
%class.SkAutoTArray.35 = type { %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.126" }
%"struct.std::__1::pair.126" = type { i32, i32 }
%class.SkTHashMap.42 = type { %class.SkTHashTable.43 }
%class.SkTHashTable.43 = type { i32, i32, %class.SkAutoTArray.44 }
%class.SkAutoTArray.44 = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.127" }
%"struct.std::__1::pair.127" = type { i32, %class.SkTArray.128* }
%class.SkTArray.128 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.51 = type { %"class.std::__1::unique_ptr.52"*, i64 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.128, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.53 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.64" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %class.SkArenaAlloc* }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.67 }
%class.SkFibBlockSizes.67 = type { i32 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.GrColorInfo = type { %class.sk_sp.1, %class.sk_sp.83, i32, i32 }
%class.sk_sp.83 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.SkTCopyOnFirstWrite = type { %class.SkMatrix*, %class.SkTLazy }
%class.SkTLazy = type { [40 x i8], %class.SkMatrix* }
%class.SkPaint = type <{ %class.sk_sp.84, %class.sk_sp.15, %class.sk_sp.85, %class.sk_sp.86, %class.sk_sp.87, %struct.SkRGBA4f.88, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.84 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.85 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.86 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.87 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f.88 = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkBitmap = type { %class.sk_sp.89, %class.SkPixmap, %class.sk_sp.90 }
%class.sk_sp.89 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.sk_sp.90 = type { %class.SkMipmap* }
%class.SkMipmap = type <{ %class.SkCachedData.base, [6 x i8], %class.sk_sp.1, %"struct.SkMipmap::Level"*, i32, [4 x i8] }>
%class.SkCachedData.base = type <{ i32 (...)**, %class.SkMutex, %union.anon.91, i8*, i64, i32, i32, i8, i8 }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%union.anon.91 = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%"struct.SkMipmap::Level" = type { %class.SkPixmap, %struct.SkSize }
%struct.SkSize = type { float, float }
%struct.SkStageRec = type { %class.SkRasterPipeline*, %class.SkArenaAlloc*, i32, %class.SkColorSpace*, %class.SkPaint*, %class.SkMatrix*, %class.SkMatrixProvider* }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%class.SkImageStageUpdater = type { %class.SkStageUpdater, %class.SkImageShader*, i8, [9 x float] }
%class.SkStageUpdater = type { i32 (...)** }
%struct.SkRasterPipeline_GatherCtx = type { i8*, i32, float, float }
%struct.SkRasterPipeline_TileCtx = type { float, float }
%struct.SkRasterPipeline_DecalTileCtx = type { [16 x i32], float, float }
%class.anon.94 = type { i8*, %class.SkRasterPipeline**, %struct.SkRasterPipeline_DecalTileCtx**, %class.SkImageShader*, %struct.SkRasterPipeline_TileCtx**, %struct.SkRasterPipeline_TileCtx**, %struct.SkRasterPipeline_GatherCtx**, %class.SkPixmap* }
%class.anon.95 = type { %class.SkPixmap*, %struct.SkStageRec*, %class.SkRasterPipeline**, %class.SkArenaAlloc**, %struct.SkSamplingOptions*, %class.SkImageShader* }
%class.SkMipmapAccessor = type { %class.SkPixmap, %class.SkPixmap, float, %class.SkMatrix, %class.SkMatrix, i32, %class.SkBitmap, %class.sk_sp.92 }
%class.sk_sp.92 = type { %class.SkMipmap* }
%"class.skvm::Builder" = type <{ %class.SkTHashMap.97, %"class.std::__1::vector", %"class.std::__1::vector.109", %"struct.skvm::Features", [6 x i8] }>
%class.SkTHashMap.97 = type { %class.SkTHashTable.98 }
%class.SkTHashTable.98 = type { i32, i32, %class.SkAutoTArray.99 }
%class.SkAutoTArray.99 = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"*, %"class.std::__1::__compressed_pair.106" }
%"struct.skvm::Instruction" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.skvm::Instruction"* }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { i32*, i32*, %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { i32* }
%"struct.skvm::Features" = type { i8, i8 }
%"struct.skvm::Coord" = type { %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::F32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%"struct.skvm::Color" = type { %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::Uniforms" = type { %"struct.skvm::Ptr", %"class.std::__1::vector.109" }
%"struct.skvm::Ptr" = type { i32 }
%class.anon.116 = type { %"class.skvm::Builder"**, %"struct.skvm::Uniforms"** }
%class.anon.117 = type { %"class.skvm::Builder"**, %"struct.skvm::Uniforms"**, %class.anon.116* }
%class.anon.118 = type { %class.SkImageShader*, i8*, %"class.skvm::Builder"** }
%class.anon.119 = type { %class.anon.117*, %struct.SkSamplingOptions*, %"class.skvm::Builder"**, %"struct.skvm::Uniforms"**, %class.anon.118* }
%"struct.skvm::PixelFormat" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.Uniforms = type { %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::Uniform", %"struct.skvm::I32", %"struct.skvm::PixelFormat", [4 x i8] }
%"struct.skvm::Uniform" = type { %"struct.skvm::Ptr", i32 }
%"struct.skvm::I32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.SkShader::GradientInfo" = type { i32, i32*, float*, [2 x %struct.SkPoint], [2 x float], i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkRuntimeEffect = type opaque

$_ZN4skvm8Uniforms5pushFEf = comdat any

$_ZN13SkImageShaderD2Ev = comdat any

$_ZN13SkImageShaderD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkImageShader10getFactoryEv = comdat any

$_ZNK13SkImageShader11getTypeNameEv = comdat any

$_ZNK12SkShaderBase18getFlattenableTypeEv = comdat any

$_ZNK12SkShaderBase10isConstantEv = comdat any

$_ZNK12SkShaderBase15asRuntimeEffectEv = comdat any

$_ZNK12SkShaderBase18onAsLuminanceColorEPj = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI19SkImageStageUpdaterJPK13SkImageShaderRbEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS7_ENUlPcE_8__invokeESG_ = comdat any

$_ZN14SkStageUpdaterD2Ev = comdat any

$_ZN19SkImageStageUpdaterD0Ev = comdat any

$_ZN19SkImageStageUpdater6updateERK8SkMatrixPS1_ = comdat any

$_ZTV19SkImageStageUpdater = comdat any

@_ZTV13SkImageShader = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImageShader*)* @_ZN13SkImageShaderD2Ev to i8*), i8* bitcast (void (%class.SkImageShader*)* @_ZN13SkImageShaderD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.14*, %class.SkReadBuffer*)* (%class.SkImageShader*)* @_ZNK13SkImageShader10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkImageShader*)* @_ZNK13SkImageShader11getTypeNameEv to i8*), i8* bitcast (void (%class.SkImageShader*, %class.SkWriteBuffer*)* @_ZNK13SkImageShader7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkShaderBase*)* @_ZNK12SkShaderBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkImageShader*)* @_ZNK13SkImageShader8isOpaqueEv to i8*), i8* bitcast (i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)* @_ZNK8SkShader11asAGradientEPNS_12GradientInfoE to i8*), i8* bitcast (i1 (%class.SkShaderBase*)* @_ZNK12SkShaderBase10isConstantEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.SkImageShader*, %struct.GrFPArgs*)* @_ZNK13SkImageShader19asFragmentProcessorERK8GrFPArgs to i8*), i8* bitcast (%class.SkImage* (%class.SkImageShader*, %class.SkMatrix*, i32*)* @_ZNK13SkImageShader10onIsAImageEP8SkMatrixP10SkTileMode to i8*), i8* bitcast (%class.SkRuntimeEffect* (%class.SkShaderBase*)* @_ZNK12SkShaderBase15asRuntimeEffectEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkShaderBase*, %class.SkMatrix*)* @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix to i8*), i8* bitcast (%"class.SkShaderBase::Context"* (%class.SkImageShader*, %"struct.SkShaderBase::ContextRec"*, %class.SkArenaAlloc*)* @_ZNK13SkImageShader13onMakeContextERKN12SkShaderBase10ContextRecEP12SkArenaAlloc to i8*), i8* bitcast (i1 (%class.SkShaderBase*, i32*)* @_ZNK12SkShaderBase18onAsLuminanceColorEPj to i8*), i8* bitcast (i1 (%class.SkImageShader*, %struct.SkStageRec*)* @_ZNK13SkImageShader14onAppendStagesERK10SkStageRec to i8*), i8* bitcast (%class.SkStageUpdater* (%class.SkImageShader*, %struct.SkStageRec*)* @_ZNK13SkImageShader23onAppendUpdatableStagesERK10SkStageRec to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %class.SkImageShader*, %"class.skvm::Builder"*, %"struct.skvm::Coord"*, %"struct.skvm::Coord"*, %"struct.skvm::Color"*, %class.SkMatrixProvider*, %class.SkMatrix*, %class.SkColorInfo*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc to i8*)] }, align 8
@__const._ZN13SkImageShader10CreateProcER12SkReadBuffer.sampling = private unnamed_addr constant { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkCubicResampler { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766 }, align 4
@_ZL17SK_PMColor4fWHITE = internal constant %struct.SkRGBA4f { float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00 }, align 4
@.str = private unnamed_addr constant [14 x i8] c"SkImageShader\00", align 1
@__const._ZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc. = private unnamed_addr constant %"struct.std::__1::pair" { %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.1 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, align 8
@_ZN6SkOpts25S32_alpha_D32_filter_DXDYE = external local_unnamed_addr global void (%struct.SkBitmapProcState*, i32*, i32, i32*)*, align 8
@_ZTV13SkEmptyShader = external unnamed_addr constant { [21 x i8*] }, align 8
@_ZTV19SkImageStageUpdater = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkStageUpdater*)* @_ZN14SkStageUpdaterD2Ev to i8*), i8* bitcast (void (%class.SkImageStageUpdater*)* @_ZN19SkImageStageUpdaterD0Ev to i8*), i8* bitcast (i1 (%class.SkImageStageUpdater*, %class.SkMatrix*, %class.SkMatrix*)* @_ZN19SkImageStageUpdater6updateERK8SkMatrixPS1_ to i8*)] }, comdat, align 8

@_ZN13SkImageShaderC1E5sk_spI7SkImageE10SkTileModeS3_RK17SkSamplingOptionsPK8SkMatrixb = hidden unnamed_addr alias void (%class.SkImageShader*, %class.sk_sp*, i32, i32, %struct.SkSamplingOptions*, %class.SkMatrix*, i1), void (%class.SkImageShader*, %class.sk_sp*, i32, i32, %struct.SkSamplingOptions*, %class.SkMatrix*, i1)* @_ZN13SkImageShaderC2E5sk_spI7SkImageE10SkTileModeS3_RK17SkSamplingOptionsPK8SkMatrixb

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13SkImageShader20CubicResamplerMatrixEff(%class.SkM44* noalias nocapture sret, float, float) local_unnamed_addr #0 align 2 {
  %4 = fmul float %1, 0x3FC5555560000000
  %5 = fmul float %1, -5.000000e-01
  %6 = fsub float %5, %2
  %7 = fmul float %1, 5.000000e-01
  %8 = fmul float %2, 2.000000e+00
  %9 = fadd float %7, %8
  %10 = fmul float %1, 0xBFC5555560000000
  %11 = fmul float %1, 0x3FD5555560000000
  %12 = fsub float 1.000000e+00, %11
  %13 = fmul float %1, 2.000000e+00
  %14 = fadd float %13, -3.000000e+00
  %15 = fadd float %14, %2
  %16 = fmul float %1, 1.500000e+00
  %17 = fsub float 2.000000e+00, %16
  %18 = fadd float %7, %2
  %19 = fmul float %1, 2.500000e+00
  %20 = fsub float 3.000000e+00, %19
  %21 = fadd float %16, -2.000000e+00
  %22 = fadd float %21, %2
  %23 = insertelement <4 x float> <float undef, float -0.000000e+00, float undef, float undef>, float %20, i32 0
  %24 = insertelement <4 x float> %23, float %10, i32 2
  %25 = insertelement <4 x float> %24, float %17, i32 3
  %26 = insertelement <2 x float> undef, float %8, i32 0
  %27 = insertelement <2 x float> %26, float %2, i32 1
  %28 = shufflevector <2 x float> %27, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 1>
  %29 = fsub <4 x float> %25, %28
  %30 = fadd float %4, %2
  %31 = getelementptr inbounds %class.SkM44, %class.SkM44* %0, i64 0, i32 0, i64 0
  store float %4, float* %31, align 4
  %32 = getelementptr inbounds %class.SkM44, %class.SkM44* %0, i64 0, i32 0, i64 1
  store float %12, float* %32, align 4
  %33 = getelementptr inbounds %class.SkM44, %class.SkM44* %0, i64 0, i32 0, i64 2
  store float %4, float* %33, align 4
  %34 = getelementptr inbounds %class.SkM44, %class.SkM44* %0, i64 0, i32 0, i64 3
  store float 0.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds %class.SkM44, %class.SkM44* %0, i64 0, i32 0, i64 4
  store float %6, float* %35, align 4
  %36 = getelementptr inbounds %class.SkM44, %class.SkM44* %0, i64 0, i32 0, i64 5
  store float 0.000000e+00, float* %36, align 4
  %37 = getelementptr inbounds %class.SkM44, %class.SkM44* %0, i64 0, i32 0, i64 6
  store float %18, float* %37, align 4
  %38 = getelementptr inbounds %class.SkM44, %class.SkM44* %0, i64 0, i32 0, i64 7
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds %class.SkM44, %class.SkM44* %0, i64 0, i32 0, i64 8
  store float %9, float* %39, align 4
  %40 = getelementptr inbounds %class.SkM44, %class.SkM44* %0, i64 0, i32 0, i64 9
  store float %15, float* %40, align 4
  %41 = getelementptr inbounds %class.SkM44, %class.SkM44* %0, i64 0, i32 0, i64 10
  %42 = bitcast float* %41 to <4 x float>*
  store <4 x float> %29, <4 x float>* %42, align 4
  %43 = getelementptr inbounds %class.SkM44, %class.SkM44* %0, i64 0, i32 0, i64 14
  store float %22, float* %43, align 4
  %44 = getelementptr inbounds %class.SkM44, %class.SkM44* %0, i64 0, i32 0, i64 15
  store float %30, float* %44, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkImageShaderC2E5sk_spI7SkImageE10SkTileModeS3_RK17SkSamplingOptionsPK8SkMatrixb(%class.SkImageShader*, %class.sk_sp* nocapture, i32, i32, %struct.SkSamplingOptions* nocapture readonly dereferenceable(20), %class.SkMatrix*, i1 zeroext) unnamed_addr #1 align 2 {
  %8 = zext i1 %6 to i8
  %9 = bitcast %class.SkImageShader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* %9, %class.SkMatrix* %5) #13
  %10 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV13SkImageShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 2
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %13 = bitcast %class.sk_sp* %1 to i64*
  %14 = load i64, i64* %13, align 8
  store %class.SkImage* null, %class.SkImage** %12, align 8
  %15 = bitcast %class.sk_sp* %11 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 3, i32 0
  %17 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %17, i64 20, i1 false)
  %18 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 4
  %19 = inttoptr i64 %14 to %class.SkImage*
  %20 = getelementptr inbounds %class.SkImage, %class.SkImage* %19, i64 0, i32 2, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  %23 = select i1 %22, i32 0, i32 %2
  store i32 %23, i32* %18, align 4
  %24 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 5
  %25 = getelementptr inbounds %class.SkImage, %class.SkImage* %19, i64 0, i32 2, i32 1, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 1
  %28 = select i1 %27, i32 0, i32 %3
  store i32 %28, i32* %24, align 8
  %29 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 6
  store i8 %8, i8* %29, align 4
  ret void
}

declare void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase*, %class.SkMatrix*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkImageShader17PreSamplingCreateER12SkReadBuffer(%class.sk_sp.14* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #1 align 2 {
  %3 = alloca %class.SkMatrix, align 16
  %4 = alloca %class.sk_sp, align 8
  %5 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #13
  %6 = icmp ugt i32 %5, 3
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #13
  br label %8

8:                                                ; preds = %2, %7
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = select i1 %11, i32 %5, i32 0
  %13 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #13
  %14 = icmp ugt i32 %13, 3
  br i1 %14, label %15, label %16

15:                                               ; preds = %8
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #13
  br label %16

16:                                               ; preds = %8, %15
  %17 = load i8, i8* %9, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = select i1 %18, i32 %13, i32 0
  %20 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, -1
  %23 = icmp ult i32 %22, 75
  br i1 %23, label %71, label %24

24:                                               ; preds = %16
  %25 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #13
  %26 = icmp ugt i32 %25, 6
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #13
  br label %28

28:                                               ; preds = %27, %24
  %29 = load i32, i32* %20, align 8
  %30 = add i32 %29, -1
  %31 = icmp ult i32 %30, 78
  br i1 %31, label %32, label %49

32:                                               ; preds = %28
  %33 = icmp slt i32 %29, 77
  br i1 %33, label %71, label %34

34:                                               ; preds = %32
  %35 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #13
  %36 = icmp ugt i32 %35, 1
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #13
  br label %38

38:                                               ; preds = %34, %37
  %39 = load i8, i8* %9, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  %41 = select i1 %40, i32 %35, i32 0
  %42 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #13
  %43 = icmp ugt i32 %42, 2
  br i1 %43, label %44, label %45

44:                                               ; preds = %38
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #13
  br label %45

45:                                               ; preds = %38, %44
  %46 = load i8, i8* %9, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  %48 = select i1 %47, i32 %42, i32 0
  br label %71

49:                                               ; preds = %28
  %50 = load i8, i8* %9, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  %52 = select i1 %51, i32 %25, i32 0
  switch i32 %52, label %71 [
    i32 5, label %53
    i32 6, label %68
  ]

53:                                               ; preds = %49
  %54 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #13
  %55 = icmp ugt i32 %54, 1
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #13
  br label %57

57:                                               ; preds = %53, %56
  %58 = load i8, i8* %9, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  %60 = select i1 %59, i32 %54, i32 0
  %61 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #13
  %62 = icmp ugt i32 %61, 2
  br i1 %62, label %63, label %64

63:                                               ; preds = %57
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #13
  br label %64

64:                                               ; preds = %57, %63
  %65 = load i8, i8* %9, align 8, !range !2
  %66 = icmp eq i8 %65, 0
  %67 = select i1 %66, i32 %61, i32 0
  br label %71

68:                                               ; preds = %49
  %69 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #13
  %70 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #13
  br label %71

71:                                               ; preds = %16, %64, %68, %49, %32, %45
  %72 = phi i8 [ 0, %32 ], [ 0, %45 ], [ 0, %49 ], [ 1, %68 ], [ 0, %64 ], [ 0, %16 ]
  %73 = phi i32 [ 0, %32 ], [ %48, %45 ], [ 0, %49 ], [ 0, %68 ], [ %67, %64 ], [ 0, %16 ]
  %74 = phi i32 [ 0, %32 ], [ %41, %45 ], [ 0, %49 ], [ 0, %68 ], [ %60, %64 ], [ 0, %16 ]
  %75 = phi float [ 0.000000e+00, %32 ], [ 0.000000e+00, %45 ], [ 0.000000e+00, %49 ], [ %70, %68 ], [ 0.000000e+00, %64 ], [ 0.000000e+00, %16 ]
  %76 = phi float [ 0.000000e+00, %32 ], [ 0.000000e+00, %45 ], [ 0.000000e+00, %49 ], [ %69, %68 ], [ 0.000000e+00, %64 ], [ 0.000000e+00, %16 ]
  %77 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %77) #13
  %78 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %79 = bitcast %class.SkMatrix* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %79, align 16
  %80 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %81 = bitcast float* %80 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %81, align 16
  %82 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %82, align 16
  store i32 16, i32* %78, align 4
  call void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer* %1, %class.SkMatrix* nonnull %3) #13
  %83 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #13
  %84 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %84, align 8
  call void @_ZN12SkReadBuffer9readImageEv(%class.sk_sp* nonnull sret %4, %class.SkReadBuffer* %1) #13
  %85 = load %class.SkImage*, %class.SkImage** %84, align 8
  %86 = icmp eq %class.SkImage* %85, null
  %87 = ptrtoint %class.SkImage* %85 to i64
  br i1 %86, label %142, label %88

88:                                               ; preds = %71
  store %class.SkImage* null, %class.SkImage** %84, align 8
  %89 = icmp eq i8 %72, 0
  br i1 %89, label %98, label %90

90:                                               ; preds = %88
  %91 = fcmp oge float %76, 0.000000e+00
  %92 = fcmp ole float %76, 1.000000e+00
  %93 = and i1 %91, %92
  br i1 %93, label %94, label %130

94:                                               ; preds = %90
  %95 = fcmp oge float %75, 0.000000e+00
  %96 = fcmp ole float %75, 1.000000e+00
  %97 = and i1 %95, %96
  br i1 %97, label %98, label %130

98:                                               ; preds = %88, %94
  %99 = call i8* @_Znwm(i64 96) #14, !noalias !3
  %100 = getelementptr inbounds %class.SkImage, %class.SkImage* %85, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 1 monotonic, !noalias !3
  %102 = bitcast i8* %99 to %class.SkShaderBase*
  call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* nonnull %102, %class.SkMatrix* nonnull %3) #13, !noalias !3
  %103 = bitcast i8* %99 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV13SkImageShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %103, align 8, !noalias !3
  %104 = getelementptr inbounds i8, i8* %99, i64 56
  %105 = bitcast i8* %104 to i64*
  store i64 %87, i64* %105, align 8, !noalias !3
  %106 = getelementptr inbounds i8, i8* %99, i64 64
  store i8 %72, i8* %106, align 8, !noalias !3
  %107 = getelementptr inbounds i8, i8* %99, i64 65
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %107, i8* nonnull align 1 getelementptr inbounds ({ i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }, { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }* @__const._ZN13SkImageShader10CreateProcER12SkReadBuffer.sampling, i64 0, i32 1, i64 0), i64 3, i1 false), !noalias !3
  %108 = getelementptr inbounds i8, i8* %99, i64 68
  %109 = bitcast i8* %108 to float*
  store float %76, float* %109, align 4, !noalias !3
  %110 = getelementptr inbounds i8, i8* %99, i64 72
  %111 = bitcast i8* %110 to float*
  store float %75, float* %111, align 8, !noalias !3
  %112 = getelementptr inbounds i8, i8* %99, i64 76
  %113 = bitcast i8* %112 to i32*
  store i32 %74, i32* %113, align 4, !noalias !3
  %114 = getelementptr inbounds i8, i8* %99, i64 80
  %115 = bitcast i8* %114 to i32*
  store i32 %73, i32* %115, align 8, !noalias !3
  %116 = getelementptr inbounds i8, i8* %99, i64 84
  %117 = bitcast i8* %116 to i32*
  %118 = getelementptr inbounds %class.SkImage, %class.SkImage* %85, i64 0, i32 2, i32 1, i32 0
  %119 = load i32, i32* %118, align 4, !noalias !3
  %120 = icmp eq i32 %119, 1
  %121 = select i1 %120, i32 0, i32 %12
  store i32 %121, i32* %117, align 4, !noalias !3
  %122 = getelementptr inbounds i8, i8* %99, i64 88
  %123 = bitcast i8* %122 to i32*
  %124 = getelementptr inbounds %class.SkImage, %class.SkImage* %85, i64 0, i32 2, i32 1, i32 1
  %125 = load i32, i32* %124, align 4, !noalias !3
  %126 = icmp eq i32 %125, 1
  %127 = select i1 %126, i32 0, i32 %19
  store i32 %127, i32* %123, align 8, !noalias !3
  %128 = getelementptr inbounds i8, i8* %99, i64 92
  store i8 0, i8* %128, align 4, !noalias !3
  %129 = ptrtoint i8* %99 to i64
  br label %130

130:                                              ; preds = %90, %94, %98
  %131 = phi i64 [ %129, %98 ], [ 0, %94 ], [ 0, %90 ]
  %132 = bitcast %class.sk_sp.14* %0 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %class.SkImage, %class.SkImage* %85, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw add i32* %133, i32 -1 acq_rel
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %144

136:                                              ; preds = %130
  %137 = bitcast %class.SkImage* %85 to %class.SkRefCntBase*
  %138 = bitcast %class.SkImage* %85 to void (%class.SkRefCntBase*)***
  %139 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %138, align 8
  %140 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %139, i64 2
  %141 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %140, align 8
  call void %141(%class.SkRefCntBase* nonnull %137) #13
  br label %144

142:                                              ; preds = %71
  %143 = bitcast %class.sk_sp.14* %0 to i64*
  store i64 0, i64* %143, align 8
  br label %157

144:                                              ; preds = %136, %130
  %145 = load %class.SkImage*, %class.SkImage** %84, align 8
  %146 = icmp eq %class.SkImage* %145, null
  br i1 %146, label %157, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %class.SkImage, %class.SkImage* %145, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = atomicrmw add i32* %148, i32 -1 acq_rel
  %150 = icmp eq i32 %149, 1
  br i1 %150, label %151, label %157

151:                                              ; preds = %147
  %152 = bitcast %class.SkImage* %145 to %class.SkRefCntBase*
  %153 = bitcast %class.SkImage* %145 to void (%class.SkRefCntBase*)***
  %154 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %153, align 8
  %155 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %154, i64 2
  %156 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %155, align 8
  call void %156(%class.SkRefCntBase* nonnull %152) #13
  br label %157

157:                                              ; preds = %142, %144, %147, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %77) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer*, %class.SkMatrix*) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer9readImageEv(%class.sk_sp* sret, %class.SkReadBuffer*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkImageShader4MakeE5sk_spI7SkImageE10SkTileModeS3_RK17SkSamplingOptionsPK8SkMatrixb(%class.sk_sp.15* noalias nocapture sret, %class.sk_sp* nocapture readonly, i32, i32, %struct.SkSamplingOptions* nocapture readonly dereferenceable(20), %class.SkMatrix*, i1 zeroext) local_unnamed_addr #1 align 2 {
  %8 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 0
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 1, i32 0
  %13 = load float, float* %12, align 4
  %14 = fcmp oge float %13, 0.000000e+00
  %15 = fcmp ole float %13, 1.000000e+00
  %16 = and i1 %14, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 1, i32 1
  %19 = load float, float* %18, align 4
  %20 = fcmp oge float %19, 0.000000e+00
  %21 = fcmp ole float %19, 1.000000e+00
  %22 = and i1 %20, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %17, %11
  %24 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %24, align 8
  br label %60

25:                                               ; preds = %7, %17
  %26 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %27 = load %class.SkImage*, %class.SkImage** %26, align 8
  %28 = icmp eq %class.SkImage* %27, null
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = tail call i8* @_Znwm(i64 56) #14, !noalias !6
  %31 = bitcast i8* %30 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* nonnull %31, %class.SkMatrix* null) #13, !noalias !6
  %32 = bitcast i8* %30 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV13SkEmptyShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8, !noalias !6
  %33 = ptrtoint i8* %30 to i64
  %34 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %33, i64* %34, align 8
  br label %60

35:                                               ; preds = %25
  %36 = tail call i8* @_Znwm(i64 96) #14
  %37 = getelementptr inbounds %class.SkImage, %class.SkImage* %27, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic
  %39 = ptrtoint %class.SkImage* %27 to i64
  %40 = zext i1 %6 to i8
  %41 = bitcast i8* %36 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* nonnull %41, %class.SkMatrix* %5) #13
  %42 = bitcast i8* %36 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV13SkImageShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds i8, i8* %36, i64 56
  %44 = bitcast i8* %43 to i64*
  store i64 %39, i64* %44, align 8
  %45 = getelementptr inbounds i8, i8* %36, i64 64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 4 %8, i64 20, i1 false) #13
  %46 = getelementptr inbounds i8, i8* %36, i64 84
  %47 = bitcast i8* %46 to i32*
  %48 = getelementptr inbounds %class.SkImage, %class.SkImage* %27, i64 0, i32 2, i32 1, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  %51 = select i1 %50, i32 0, i32 %2
  store i32 %51, i32* %47, align 4
  %52 = getelementptr inbounds i8, i8* %36, i64 88
  %53 = bitcast i8* %52 to i32*
  %54 = getelementptr inbounds %class.SkImage, %class.SkImage* %27, i64 0, i32 2, i32 1, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 1
  %57 = select i1 %56, i32 0, i32 %3
  store i32 %57, i32* %53, align 8
  %58 = getelementptr inbounds i8, i8* %36, i64 92
  store i8 %40, i8* %58, align 4
  %59 = bitcast %class.sk_sp.15* %0 to i8**
  store i8* %36, i8** %59, align 8
  br label %60

60:                                               ; preds = %35, %29, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkImageShader10CreateProcER12SkReadBuffer(%class.sk_sp.14* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #1 align 2 {
  %3 = alloca [3 x i8], align 1
  %4 = alloca %struct.SkSamplingOptions, align 4
  %5 = alloca %class.SkMatrix, align 16
  %6 = alloca %class.sk_sp, align 8
  %7 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = icmp ult i32 %9, 79
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  tail call void @_ZN13SkImageShader17PreSamplingCreateER12SkReadBuffer(%class.sk_sp.14* sret %0, %class.SkReadBuffer* dereferenceable(136) %1)
  br label %129

12:                                               ; preds = %2
  %13 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #13
  %14 = icmp ugt i32 %13, 3
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #13
  br label %16

16:                                               ; preds = %12, %15
  %17 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, i32 %13, i32 0
  %21 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #13
  %22 = icmp ugt i32 %21, 3
  br i1 %22, label %23, label %24

23:                                               ; preds = %16
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #13
  br label %24

24:                                               ; preds = %16, %23
  %25 = load i8, i8* %17, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = select i1 %26, i32 %21, i32 0
  %28 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %28)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ({ i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }, { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }* @__const._ZN13SkImageShader10CreateProcER12SkReadBuffer.sampling, i64 0, i32 1, i64 0), i64 3, i1 false)
  %29 = load i32, i32* %7, align 8
  %30 = add i32 %29, -1
  %31 = icmp ult i32 %30, 84
  br i1 %31, label %32, label %34

32:                                               ; preds = %24
  %33 = tail call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %1) #13
  br i1 %33, label %34, label %45

34:                                               ; preds = %24, %32
  %35 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %35) #13
  call void @_ZN14SkSamplingPriv4ReadER12SkReadBuffer(%struct.SkSamplingOptions* nonnull sret %4, %class.SkReadBuffer* dereferenceable(136) %1) #13
  %36 = load i8, i8* %35, align 4
  %37 = getelementptr inbounds i8, i8* %35, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %37, i64 3, i1 false)
  %38 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 1, i32 0
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 1, i32 1
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 2
  %43 = bitcast i32* %42 to i64*
  %44 = load i64, i64* %43, align 4
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %35) #13
  br label %45

45:                                               ; preds = %34, %32
  %46 = phi i64 [ %44, %34 ], [ 0, %32 ]
  %47 = phi float [ %41, %34 ], [ 0.000000e+00, %32 ]
  %48 = phi i8 [ %36, %34 ], [ 0, %32 ]
  %49 = phi float [ %39, %34 ], [ 0.000000e+00, %32 ]
  %50 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %50) #13
  %51 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %52 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %52, align 16
  %53 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %54 = bitcast float* %53 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %54, align 16
  %55 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %55, align 16
  store i32 16, i32* %51, align 4
  call void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer* %1, %class.SkMatrix* nonnull %5) #13
  %56 = bitcast %class.sk_sp* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  %57 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %57, align 8
  call void @_ZN12SkReadBuffer9readImageEv(%class.sk_sp* nonnull sret %6, %class.SkReadBuffer* %1) #13
  %58 = load %class.SkImage*, %class.SkImage** %57, align 8
  %59 = icmp eq %class.SkImage* %58, null
  %60 = ptrtoint %class.SkImage* %58 to i64
  br i1 %59, label %61, label %63

61:                                               ; preds = %45
  %62 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %62, align 8
  br label %128

63:                                               ; preds = %45
  store %class.SkImage* null, %class.SkImage** %57, align 8
  %64 = icmp eq i8 %48, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %63
  %66 = fcmp oge float %49, 0.000000e+00
  %67 = fcmp ole float %49, 1.000000e+00
  %68 = and i1 %66, %67
  br i1 %68, label %69, label %103

69:                                               ; preds = %65
  %70 = fcmp oge float %47, 0.000000e+00
  %71 = fcmp ole float %47, 1.000000e+00
  %72 = and i1 %70, %71
  br i1 %72, label %73, label %103

73:                                               ; preds = %63, %69
  %74 = call i8* @_Znwm(i64 96) #14, !noalias !9
  %75 = getelementptr inbounds %class.SkImage, %class.SkImage* %58, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 1 monotonic, !noalias !9
  %77 = bitcast i8* %74 to %class.SkShaderBase*
  call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* nonnull %77, %class.SkMatrix* nonnull %5) #13, !noalias !9
  %78 = bitcast i8* %74 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV13SkImageShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8, !noalias !9
  %79 = getelementptr inbounds i8, i8* %74, i64 56
  %80 = bitcast i8* %79 to i64*
  store i64 %60, i64* %80, align 8, !noalias !9
  %81 = getelementptr inbounds i8, i8* %74, i64 64
  store i8 %48, i8* %81, align 8, !noalias !9
  %82 = getelementptr inbounds i8, i8* %74, i64 65
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %82, i8* nonnull align 1 %28, i64 3, i1 false), !noalias !9
  %83 = getelementptr inbounds i8, i8* %74, i64 68
  %84 = bitcast i8* %83 to float*
  store float %49, float* %84, align 4, !noalias !9
  %85 = getelementptr inbounds i8, i8* %74, i64 72
  %86 = bitcast i8* %85 to float*
  store float %47, float* %86, align 8, !noalias !9
  %87 = getelementptr inbounds i8, i8* %74, i64 76
  %88 = bitcast i8* %87 to i64*
  store i64 %46, i64* %88, align 4
  %89 = getelementptr inbounds i8, i8* %74, i64 84
  %90 = bitcast i8* %89 to i32*
  %91 = getelementptr inbounds %class.SkImage, %class.SkImage* %58, i64 0, i32 2, i32 1, i32 0
  %92 = load i32, i32* %91, align 4, !noalias !9
  %93 = icmp eq i32 %92, 1
  %94 = select i1 %93, i32 0, i32 %20
  store i32 %94, i32* %90, align 4, !noalias !9
  %95 = getelementptr inbounds i8, i8* %74, i64 88
  %96 = bitcast i8* %95 to i32*
  %97 = getelementptr inbounds %class.SkImage, %class.SkImage* %58, i64 0, i32 2, i32 1, i32 1
  %98 = load i32, i32* %97, align 4, !noalias !9
  %99 = icmp eq i32 %98, 1
  %100 = select i1 %99, i32 0, i32 %27
  store i32 %100, i32* %96, align 8, !noalias !9
  %101 = getelementptr inbounds i8, i8* %74, i64 92
  store i8 0, i8* %101, align 4, !noalias !9
  %102 = ptrtoint i8* %74 to i64
  br label %103

103:                                              ; preds = %65, %69, %73
  %104 = phi i64 [ %102, %73 ], [ 0, %69 ], [ 0, %65 ]
  %105 = bitcast %class.sk_sp.14* %0 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %class.SkImage, %class.SkImage* %58, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = atomicrmw add i32* %106, i32 -1 acq_rel
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %109, label %115

109:                                              ; preds = %103
  %110 = bitcast %class.SkImage* %58 to %class.SkRefCntBase*
  %111 = bitcast %class.SkImage* %58 to void (%class.SkRefCntBase*)***
  %112 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %111, align 8
  %113 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %112, i64 2
  %114 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %113, align 8
  call void %114(%class.SkRefCntBase* nonnull %110) #13
  br label %115

115:                                              ; preds = %109, %103
  %116 = load %class.SkImage*, %class.SkImage** %57, align 8
  %117 = icmp eq %class.SkImage* %116, null
  br i1 %117, label %128, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %class.SkImage, %class.SkImage* %116, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = atomicrmw add i32* %119, i32 -1 acq_rel
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %122, label %128

122:                                              ; preds = %118
  %123 = bitcast %class.SkImage* %116 to %class.SkRefCntBase*
  %124 = bitcast %class.SkImage* %116 to void (%class.SkRefCntBase*)***
  %125 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %124, align 8
  %126 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %125, i64 2
  %127 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %126, align 8
  call void %127(%class.SkRefCntBase* nonnull %123) #13
  br label %128

128:                                              ; preds = %61, %115, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %50) #13
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %28)
  br label %129

129:                                              ; preds = %128, %11
  ret void
}

declare zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN14SkSamplingPriv4ReadER12SkReadBuffer(%struct.SkSamplingOptions* sret, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkImageShader7flattenER13SkWriteBuffer(%class.SkImageShader*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %6 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %6, i64 9
  %8 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, i32 %4) #13
  %9 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 5
  %10 = load i32, i32* %9, align 8
  %11 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %5, align 8
  %12 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %11, i64 9
  %13 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %12, align 8
  tail call void %13(%class.SkWriteBuffer* %1, i32 %10) #13
  %14 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 3
  tail call void @_ZN14SkSamplingPriv5WriteER13SkWriteBufferRK17SkSamplingOptions(%class.SkWriteBuffer* dereferenceable(56) %1, %struct.SkSamplingOptions* dereferenceable(20) %14) #13
  %15 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 0, i32 1
  %16 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkMatrix*)***
  %17 = load void (%class.SkWriteBuffer*, %class.SkMatrix*)**, void (%class.SkWriteBuffer*, %class.SkMatrix*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkMatrix*)*, void (%class.SkWriteBuffer*, %class.SkMatrix*)** %17, i64 20
  %19 = load void (%class.SkWriteBuffer*, %class.SkMatrix*)*, void (%class.SkWriteBuffer*, %class.SkMatrix*)** %18, align 8
  tail call void %19(%class.SkWriteBuffer* %1, %class.SkMatrix* dereferenceable(40) %15) #13
  %20 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 2, i32 0
  %21 = load %class.SkImage*, %class.SkImage** %20, align 8
  %22 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkImage*)***
  %23 = load void (%class.SkWriteBuffer*, %class.SkImage*)**, void (%class.SkWriteBuffer*, %class.SkImage*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkImage*)*, void (%class.SkWriteBuffer*, %class.SkImage*)** %23, i64 26
  %25 = load void (%class.SkWriteBuffer*, %class.SkImage*)*, void (%class.SkWriteBuffer*, %class.SkImage*)** %24, align 8
  tail call void %25(%class.SkWriteBuffer* %1, %class.SkImage* %21) #13
  ret void
}

declare void @_ZN14SkSamplingPriv5WriteER13SkWriteBufferRK17SkSamplingOptions(%class.SkWriteBuffer* dereferenceable(56), %struct.SkSamplingOptions* dereferenceable(20)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13SkImageShader8isOpaqueEv(%class.SkImageShader* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 2, i32 0
  %3 = load %class.SkImage*, %class.SkImage** %2, align 8
  %4 = tail call i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage* %3) #13
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 8
  %13 = icmp ne i32 %12, 3
  br label %14

14:                                               ; preds = %6, %10, %1
  %15 = phi i1 [ false, %6 ], [ false, %1 ], [ %13, %10 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkShaderBase::Context"* @_ZNK13SkImageShader13onMakeContextERKN12SkShaderBase10ContextRecEP12SkArenaAlloc(%class.SkImageShader*, %"struct.SkShaderBase::ContextRec"* dereferenceable(40), %class.SkArenaAlloc*) unnamed_addr #1 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %class.SkMatrix, align 16
  %7 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 2, i32 0
  %8 = load %class.SkImage*, %class.SkImage** %7, align 8
  %9 = tail call i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage* %8) #13
  %10 = icmp eq i32 %9, 3
  br i1 %10, label %112, label %11

11:                                               ; preds = %3
  %12 = load %class.SkImage*, %class.SkImage** %7, align 8
  %13 = tail call i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage* %12) #13
  %14 = icmp eq i32 %13, 6
  br i1 %14, label %15, label %112

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 5
  %19 = load i32, i32* %18, align 8
  %20 = icmp ne i32 %17, %19
  %21 = icmp eq i32 %17, 3
  %22 = or i1 %20, %21
  br i1 %22, label %112, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 3
  %25 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %24, i64 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %112

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 3, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 3, i32 3
  %32 = load i32, i32* %31, align 4
  switch i32 %30, label %112 [
    i32 0, label %33
    i32 1, label %35
  ]

33:                                               ; preds = %28
  %34 = icmp eq i32 %32, 0
  br i1 %34, label %37, label %112

35:                                               ; preds = %28
  %36 = icmp ult i32 %32, 2
  br i1 %36, label %37, label %112

37:                                               ; preds = %35, %33
  %38 = load %class.SkImage*, %class.SkImage** %7, align 8
  %39 = getelementptr inbounds %class.SkImage, %class.SkImage* %38, i64 0, i32 2, i32 1, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %40, 32767
  br i1 %41, label %112, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %class.SkImage, %class.SkImage* %38, i64 0, i32 2, i32 1, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, 32767
  br i1 %45, label %112, label %46

46:                                               ; preds = %42
  %47 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47) #13
  %48 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %49 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %49, align 16
  %50 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %51 = bitcast float* %50 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %51, align 16
  %52 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %52, align 16
  store i32 16, i32* %48, align 4
  %53 = bitcast %class.SkImageShader* %0 to %class.SkShaderBase*
  %54 = getelementptr inbounds %"struct.SkShaderBase::ContextRec", %"struct.SkShaderBase::ContextRec"* %1, i64 0, i32 0
  %55 = load %class.SkMatrix*, %class.SkMatrix** %54, align 8
  %56 = getelementptr inbounds %"struct.SkShaderBase::ContextRec", %"struct.SkShaderBase::ContextRec"* %1, i64 0, i32 1
  %57 = load %class.SkMatrix*, %class.SkMatrix** %56, align 8
  %58 = call zeroext i1 @_ZNK12SkShaderBase19computeTotalInverseERK8SkMatrixPS1_PS0_(%class.SkShaderBase* %53, %class.SkMatrix* dereferenceable(40) %55, %class.SkMatrix* %57, %class.SkMatrix* nonnull %6) #13
  br i1 %58, label %59, label %110

59:                                               ; preds = %46
  %60 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %61 = load void (%struct.SkBitmapProcState*, i32*, i32, i32*)*, void (%struct.SkBitmapProcState*, i32*, i32, i32*)** @_ZN6SkOpts25S32_alpha_D32_filter_DXDYE, align 8
  %62 = icmp eq void (%struct.SkBitmapProcState*, i32*, i32, i32*)* %61, null
  br i1 %62, label %63, label %74

63:                                               ; preds = %59
  %64 = load i32, i32* %48, align 4
  %65 = trunc i32 %64 to i8
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %63
  %68 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %6) #13
  %69 = zext i8 %68 to i32
  store i32 %69, i32* %48, align 4
  br label %70

70:                                               ; preds = %67, %63
  %71 = phi i32 [ %69, %67 ], [ %64, %63 ]
  %72 = and i32 %71, 12
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %110

74:                                               ; preds = %70, %59
  %75 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #13
  %76 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %76, align 8
  %77 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> <float 3.276700e+04, float 3.276700e+04>, <2 x float>* %77, align 8
  %78 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #13
  %79 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -1, i64 16, i1 false) #13
  %80 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %6, %struct.SkRect* nonnull %79, %struct.SkRect* nonnull dereferenceable(16) %60, i32 1) #13
  %81 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %82 = load <2 x float>, <2 x float>* %81, align 8
  %83 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %84 = load <2 x float>, <2 x float>* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #13
  %85 = extractelement <2 x float> %82, i32 0
  %86 = extractelement <2 x float> %84, i32 0
  %87 = fcmp olt float %85, %86
  br i1 %87, label %88, label %110

88:                                               ; preds = %74
  %89 = extractelement <2 x float> %82, i32 1
  %90 = extractelement <2 x float> %84, i32 1
  %91 = fcmp uge float %89, %90
  %92 = fcmp ult float %85, 0xC1C0000000000000
  %93 = or i1 %92, %91
  br i1 %93, label %110, label %94

94:                                               ; preds = %88
  %95 = fcmp oge float %89, 0xC1C0000000000000
  %96 = fcmp ole float %86, 0x41C0000000000000
  %97 = fcmp ole float %90, 0x41C0000000000000
  %98 = and i1 %95, %96
  %99 = and i1 %97, %98
  br i1 %99, label %100, label %110

100:                                              ; preds = %94
  %101 = load %class.SkImage*, %class.SkImage** %7, align 8
  %102 = call %class.SkColorSpace* @_ZNK7SkImage10colorSpaceEv(%class.SkImage* %101) #13
  %103 = call zeroext i1 @_ZNK12SkShaderBase10ContextRec18isLegacyCompatibleEP12SkColorSpace(%"struct.SkShaderBase::ContextRec"* %1, %class.SkColorSpace* %102) #13
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  %105 = load i32, i32* %16, align 4
  %106 = load i32, i32* %18, align 8
  %107 = bitcast %class.SkImage** %7 to %class.SkImage_Base**
  %108 = load %class.SkImage_Base*, %class.SkImage_Base** %107, align 8
  %109 = call %"class.SkShaderBase::Context"* @_ZN24SkBitmapProcLegacyShader11MakeContextERK12SkShaderBase10SkTileModeS3_RK17SkSamplingOptionsPK12SkImage_BaseRKNS0_10ContextRecEP12SkArenaAlloc(%class.SkShaderBase* dereferenceable(56) %53, i32 %105, i32 %106, %struct.SkSamplingOptions* dereferenceable(20) %24, %class.SkImage_Base* %108, %"struct.SkShaderBase::ContextRec"* dereferenceable(40) %1, %class.SkArenaAlloc* %2) #13
  br label %110

110:                                              ; preds = %70, %74, %88, %100, %46, %94, %104
  %111 = phi %"class.SkShaderBase::Context"* [ %109, %104 ], [ null, %94 ], [ null, %46 ], [ null, %100 ], [ null, %88 ], [ null, %74 ], [ null, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %47) #13
  br label %112

112:                                              ; preds = %15, %35, %28, %33, %110, %23, %42, %37, %11, %3
  %113 = phi %"class.SkShaderBase::Context"* [ null, %3 ], [ null, %11 ], [ null, %15 ], [ %111, %110 ], [ null, %23 ], [ null, %42 ], [ null, %37 ], [ null, %33 ], [ null, %28 ], [ null, %35 ]
  ret %"class.SkShaderBase::Context"* %113
}

declare i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage*) local_unnamed_addr #2

declare i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage*) local_unnamed_addr #2

declare zeroext i1 @_ZNK12SkShaderBase19computeTotalInverseERK8SkMatrixPS1_PS0_(%class.SkShaderBase*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #2

declare zeroext i1 @_ZNK12SkShaderBase10ContextRec18isLegacyCompatibleEP12SkColorSpace(%"struct.SkShaderBase::ContextRec"*, %class.SkColorSpace*) local_unnamed_addr #2

declare %class.SkColorSpace* @_ZNK7SkImage10colorSpaceEv(%class.SkImage*) local_unnamed_addr #2

declare %"class.SkShaderBase::Context"* @_ZN24SkBitmapProcLegacyShader11MakeContextERK12SkShaderBase10SkTileModeS3_RK17SkSamplingOptionsPK12SkImage_BaseRKNS0_10ContextRecEP12SkArenaAlloc(%class.SkShaderBase* dereferenceable(56), i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkImage_Base*, %"struct.SkShaderBase::ContextRec"* dereferenceable(40), %class.SkArenaAlloc*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkImage* @_ZNK13SkImageShader10onIsAImageEP8SkMatrixP10SkTileMode(%class.SkImageShader* nocapture readonly, %class.SkMatrix*, i32*) unnamed_addr #1 align 2 {
  %4 = icmp eq %class.SkMatrix* %1, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 0, i32 1
  %7 = bitcast %class.SkMatrix* %1 to i8*
  %8 = bitcast %class.SkMatrix* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 %8, i64 40, i1 false)
  br label %9

9:                                                ; preds = %3, %5
  %10 = icmp eq i32* %2, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %2, align 4
  %14 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds i32, i32* %2, i64 1
  store i32 %15, i32* %16, align 4
  br label %17

17:                                               ; preds = %9, %11
  %18 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 2, i32 0
  %19 = load %class.SkImage*, %class.SkImage** %18, align 8
  ret %class.SkImage* %19
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK13SkImageShader19asFragmentProcessorERK8GrFPArgs(%class.SkImageShader*, %struct.GrFPArgs* nocapture readonly dereferenceable(40)) unnamed_addr #1 align 2 {
  %3 = alloca %class.SkTCopyOnFirstWrite, align 8
  %4 = alloca %class.SkMatrix, align 16
  %5 = alloca [2 x i32], align 4
  %6 = bitcast %class.SkTCopyOnFirstWrite* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  %7 = bitcast %class.SkImageShader* %0 to %class.SkShaderBase*
  %8 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 2
  %9 = load %class.SkMatrix*, %class.SkMatrix** %8, align 8
  call void @_ZNK12SkShaderBase16totalLocalMatrixEPK8SkMatrix(%class.SkTCopyOnFirstWrite* nonnull sret %3, %class.SkShaderBase* %7, %class.SkMatrix* %9) #13
  %10 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #13
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %12 = bitcast %class.SkMatrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %12, align 16
  %13 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %14 = bitcast float* %13 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %14, align 16
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %15, align 16
  store i32 16, i32* %11, align 4
  %16 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %3, i64 0, i32 0
  %17 = load %class.SkMatrix*, %class.SkMatrix** %16, align 8
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = trunc i32 %19 to i8
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %17) #13
  %24 = zext i8 %23 to i32
  store i32 %24, i32* %18, align 4
  br label %25

25:                                               ; preds = %22, %2
  %26 = phi i32 [ %24, %22 ], [ %19, %2 ]
  %27 = and i32 %26, 15
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %4) #13
  br label %33

31:                                               ; preds = %25
  %32 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %17, %class.SkMatrix* nonnull %4) #13
  br i1 %32, label %33, label %77

33:                                               ; preds = %29, %31
  %34 = bitcast [2 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  %35 = getelementptr inbounds [2 x i32], [2 x i32]* %5, i64 0, i64 0
  %36 = getelementptr inbounds [2 x i32], [2 x i32]* %5, i64 0, i64 1
  %37 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 4
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %35, align 4
  %39 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 5
  %40 = load i32, i32* %39, align 8
  store i32 %40, i32* %36, align 4
  %41 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 2, i32 0
  %42 = bitcast %class.SkImage** %41 to %class.SkImage_Base**
  %43 = load %class.SkImage_Base*, %class.SkImage_Base** %42, align 8
  %44 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 0
  %45 = load %class.GrRecordingContext*, %class.GrRecordingContext** %44, align 8
  %46 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 3, i32 0
  %47 = bitcast i8* %46 to %struct.SkSamplingOptions*
  %48 = call %class.GrFragmentProcessor* @_ZNK12SkImage_Base19asFragmentProcessorEP18GrRecordingContext17SkSamplingOptionsPK10SkTileModeRK8SkMatrixPK6SkRectSB_(%class.SkImage_Base* %43, %class.GrRecordingContext* %45, %struct.SkSamplingOptions* nonnull byval(%struct.SkSamplingOptions) align 8 %47, i32* nonnull %35, %class.SkMatrix* nonnull dereferenceable(40) %4, %struct.SkRect* null, %struct.SkRect* null) #13
  %49 = icmp eq %class.GrFragmentProcessor* %48, null
  br i1 %49, label %75, label %50

50:                                               ; preds = %33
  %51 = load %class.SkImage*, %class.SkImage** %41, align 8
  %52 = call %class.SkColorSpace* @_ZNK7SkImage10colorSpaceEv(%class.SkImage* %51) #13
  %53 = load %class.SkImage*, %class.SkImage** %41, align 8
  %54 = call i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage* %53) #13
  %55 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 4
  %56 = load %class.GrColorInfo*, %class.GrColorInfo** %55, align 8
  %57 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %56, i64 0, i32 0, i32 0
  %58 = load %class.SkColorSpace*, %class.SkColorSpace** %57, align 8
  %59 = call %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor* nonnull %48, %class.SkColorSpace* %52, i32 %54, %class.SkColorSpace* %58, i32 2) #13
  %60 = load %class.SkImage*, %class.SkImage** %41, align 8
  %61 = call zeroext i1 @_ZNK7SkImage11isAlphaOnlyEv(%class.SkImage* %60) #13
  br i1 %61, label %62, label %65

62:                                               ; preds = %50
  %63 = call %class.GrFragmentProcessor* @_ZN24GrBlendFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEES5_11SkBlendModeNS_13BlendBehaviorE(%class.GrFragmentProcessor* %59, %class.GrFragmentProcessor* null, i32 6, i32 0) #13
  %64 = ptrtoint %class.GrFragmentProcessor* %63 to i64
  br label %75

65:                                               ; preds = %50
  %66 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 3
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %65
  %70 = call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor13OverrideInputENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK8SkRGBA4fIL11SkAlphaType2EEb(%class.GrFragmentProcessor* %59, %struct.SkRGBA4f* nonnull dereferenceable(16) @_ZL17SK_PMColor4fWHITE, i1 zeroext false) #13
  %71 = ptrtoint %class.GrFragmentProcessor* %70 to i64
  br label %75

72:                                               ; preds = %65
  %73 = call %class.GrFragmentProcessor* @_ZN24GrBlendFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEES5_11SkBlendModeNS_13BlendBehaviorE(%class.GrFragmentProcessor* %59, %class.GrFragmentProcessor* null, i32 5, i32 0) #13
  %74 = ptrtoint %class.GrFragmentProcessor* %73 to i64
  br label %75

75:                                               ; preds = %33, %69, %72, %62
  %76 = phi i64 [ %71, %69 ], [ %74, %72 ], [ %64, %62 ], [ 0, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %77

77:                                               ; preds = %31, %75
  %78 = phi i64 [ %76, %75 ], [ 0, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #13
  %79 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %3, i64 0, i32 1, i32 1
  %80 = load %class.SkMatrix*, %class.SkMatrix** %79, align 8
  %81 = icmp eq %class.SkMatrix* %80, null
  br i1 %81, label %83, label %82

82:                                               ; preds = %77
  store %class.SkMatrix* null, %class.SkMatrix** %79, align 8
  br label %83

83:                                               ; preds = %77, %82
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #13
  %84 = inttoptr i64 %78 to %class.GrFragmentProcessor*
  ret %class.GrFragmentProcessor* %84
}

declare void @_ZNK12SkShaderBase16totalLocalMatrixEPK8SkMatrix(%class.SkTCopyOnFirstWrite* sret, %class.SkShaderBase*, %class.SkMatrix*) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZNK12SkImage_Base19asFragmentProcessorEP18GrRecordingContext17SkSamplingOptionsPK10SkTileModeRK8SkMatrixPK6SkRectSB_(%class.SkImage_Base*, %class.GrRecordingContext*, %struct.SkSamplingOptions* byval(%struct.SkSamplingOptions) align 8, i32*, %class.SkMatrix* dereferenceable(40), %struct.SkRect*, %struct.SkRect*) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK7SkImage11isAlphaOnlyEv(%class.SkImage*) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN24GrBlendFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEES5_11SkBlendModeNS_13BlendBehaviorE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i32, i32) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor13OverrideInputENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK8SkRGBA4fIL11SkAlphaType2EEb(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16), i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z26SkMakeBitmapShaderForPaintRK7SkPaintRK8SkBitmap10SkTileModeS5_RK17SkSamplingOptionsPK8SkMatrix16SkCopyPixelsMode(%class.sk_sp.15* noalias nocapture sret, %class.SkPaint* dereferenceable(72), %class.SkBitmap* dereferenceable(56), i32, i32, %struct.SkSamplingOptions* nocapture readonly dereferenceable(20), %class.SkMatrix*, i32) local_unnamed_addr #1 {
  %9 = alloca %class.sk_sp.15, align 8
  %10 = alloca %class.sk_sp, align 8
  %11 = alloca %class.sk_sp.15, align 8
  %12 = alloca %class.sk_sp.15, align 8
  %13 = alloca %class.sk_sp.15, align 8
  %14 = bitcast %class.sk_sp.15* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %9, i64 0, i32 0
  store %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*), %class.SkShader** %15, align 8
  call void @_Z27SkMakeImageFromRasterBitmapRK8SkBitmap16SkCopyPixelsMode(%class.sk_sp* nonnull sret %10, %class.SkBitmap* dereferenceable(56) %2, i32 %7) #13
  call void @_ZN13SkImageShader4MakeE5sk_spI7SkImageE10SkTileModeS3_RK17SkSamplingOptionsPK8SkMatrixb(%class.sk_sp.15* nonnull sret %9, %class.sk_sp* nonnull %10, i32 %3, i32 %4, %struct.SkSamplingOptions* dereferenceable(20) %5, %class.SkMatrix* %6, i1 zeroext false)
  %16 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %10, i64 0, i32 0
  %17 = load %class.SkImage*, %class.SkImage** %16, align 8
  %18 = icmp eq %class.SkImage* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %class.SkImage, %class.SkImage* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = bitcast %class.SkImage* %17 to %class.SkRefCntBase*
  %25 = bitcast %class.SkImage* %17 to void (%class.SkRefCntBase*)***
  %26 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, i64 2
  %28 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, align 8
  call void %28(%class.SkRefCntBase* nonnull %24) #13
  br label %29

29:                                               ; preds = %8, %19, %23
  %30 = load %class.SkShader*, %class.SkShader** %15, align 8
  %31 = icmp eq %class.SkShader* %30, null
  %32 = ptrtoint %class.SkShader* %30 to i64
  br i1 %31, label %33, label %35

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %34, align 8
  br label %82

35:                                               ; preds = %29
  %36 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %79

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 1, i32 0
  %41 = load %class.SkShader*, %class.SkShader** %40, align 8
  %42 = icmp eq %class.SkShader* %41, null
  br i1 %42, label %79, label %43

43:                                               ; preds = %39
  %44 = bitcast %class.sk_sp.15* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #13
  call void @_ZNK7SkPaint9refShaderEv(%class.sk_sp.15* nonnull sret %12, %class.SkPaint* %1) #13
  %45 = bitcast %class.sk_sp.15* %9 to i64*
  %46 = bitcast %class.sk_sp.15* %13 to i64*
  store i64 %32, i64* %46, align 8
  call void @_ZN9SkShaders5BlendE11SkBlendMode5sk_spI8SkShaderES3_(%class.sk_sp.15* nonnull sret %11, i32 6, %class.sk_sp.15* nonnull %12, %class.sk_sp.15* nonnull %13) #13
  %47 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %11, i64 0, i32 0
  %48 = bitcast %class.sk_sp.15* %11 to i64*
  %49 = load i64, i64* %48, align 8
  store %class.SkShader* null, %class.SkShader** %47, align 8
  store i64 %49, i64* %45, align 8
  %50 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %13, i64 0, i32 0
  %51 = load %class.SkShader*, %class.SkShader** %50, align 8
  %52 = icmp eq %class.SkShader* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %43
  %54 = getelementptr inbounds %class.SkShader, %class.SkShader* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkShader* %51 to %class.SkRefCntBase*
  %59 = bitcast %class.SkShader* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  call void %62(%class.SkRefCntBase* nonnull %58) #13
  br label %63

63:                                               ; preds = %43, %53, %57
  %64 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %12, i64 0, i32 0
  %65 = load %class.SkShader*, %class.SkShader** %64, align 8
  %66 = icmp eq %class.SkShader* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %class.SkShader, %class.SkShader* %65, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = bitcast %class.SkShader* %65 to %class.SkRefCntBase*
  %73 = bitcast %class.SkShader* %65 to void (%class.SkRefCntBase*)***
  %74 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, i64 2
  %76 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, align 8
  call void %76(%class.SkRefCntBase* nonnull %72) #13
  br label %77

77:                                               ; preds = %63, %67, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #13
  %78 = load i64, i64* %45, align 8
  br label %79

79:                                               ; preds = %39, %77, %35
  %80 = phi i64 [ %32, %39 ], [ %78, %77 ], [ %32, %35 ]
  store %class.SkShader* null, %class.SkShader** %15, align 8
  %81 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %80, i64* %81, align 8
  br label %82

82:                                               ; preds = %33, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  ret void
}

declare void @_Z27SkMakeImageFromRasterBitmapRK8SkBitmap16SkCopyPixelsMode(%class.sk_sp* sret, %class.SkBitmap* dereferenceable(56), i32) local_unnamed_addr #2

declare void @_ZN9SkShaders5BlendE11SkBlendMode5sk_spI8SkShaderES3_(%class.sk_sp.15* sret, i32, %class.sk_sp.15*, %class.sk_sp.15*) local_unnamed_addr #2

declare void @_ZNK7SkPaint9refShaderEv(%class.sk_sp.15* sret, %class.SkPaint*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkShaderBase20RegisterFlattenablesEv() local_unnamed_addr #1 align 2 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.14*, %class.SkReadBuffer*)* nonnull @_ZN13SkImageShader10CreateProcER12SkReadBuffer) #13
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.14*, %class.SkReadBuffer*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdater(%class.SkImageShader*, %struct.SkStageRec* dereferenceable(56), %class.SkImageStageUpdater*) local_unnamed_addr #5 align 2 {
  %4 = alloca [3 x float], align 8
  %5 = alloca %struct.SkSamplingOptions, align 4
  %6 = alloca %class.SkRasterPipeline*, align 8
  %7 = alloca %class.SkArenaAlloc*, align 8
  %8 = alloca %class.SkMatrix, align 16
  %9 = alloca %class.SkPixmap, align 8
  %10 = alloca { i8*, i64 }, align 8
  %11 = alloca %class.SkMatrix, align 8
  %12 = alloca [3 x i8], align 1
  %13 = alloca [3 x float], align 4
  %14 = alloca %struct.SkRasterPipeline_GatherCtx*, align 8
  %15 = alloca %struct.SkRasterPipeline_TileCtx*, align 8
  %16 = alloca %struct.SkRasterPipeline_TileCtx*, align 8
  %17 = alloca %struct.SkRasterPipeline_DecalTileCtx*, align 8
  %18 = alloca i8, align 1
  %19 = alloca %class.anon.94, align 8
  %20 = alloca %class.anon.95, align 8
  %21 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %21) #13
  %22 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 3, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 8 %22, i64 20, i1 false)
  %23 = load i8, i8* %21, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %38, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 1
  %27 = bitcast %struct.SkCubicResampler* %26 to <2 x float>*
  %28 = load <2 x float>, <2 x float>* %27, align 4
  %29 = extractelement <2 x float> %28, i32 0
  %30 = fadd float %29, 0xBFD5555560000000
  %31 = tail call float @llvm.fabs.f32(float %30) #13
  %32 = fcmp ugt float %31, 0x3F30000000000000
  br i1 %32, label %643, label %33

33:                                               ; preds = %25
  %34 = extractelement <2 x float> %28, i32 1
  %35 = fadd float %34, 0xBFD5555560000000
  %36 = tail call float @llvm.fabs.f32(float %35) #13
  %37 = fcmp ugt float %36, 0x3F30000000000000
  br i1 %37, label %643, label %42

38:                                               ; preds = %3
  %39 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 2
  br i1 %41, label %643, label %42

42:                                               ; preds = %33, %38
  %43 = icmp ne %class.SkImageStageUpdater* %2, null
  br i1 %43, label %44, label %48

44:                                               ; preds = %42
  %45 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %643

48:                                               ; preds = %44, %42
  %49 = bitcast %class.SkRasterPipeline** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #13
  %50 = bitcast %struct.SkStageRec* %1 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %class.SkRasterPipeline** %6 to i64*
  store i64 %51, i64* %52, align 8
  %53 = bitcast %class.SkArenaAlloc** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #13
  %54 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 1
  %55 = bitcast %class.SkArenaAlloc** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %class.SkArenaAlloc** %7 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %58) #13
  %59 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 1
  %60 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 0
  %61 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 1
  %62 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 2
  %63 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 3
  %64 = bitcast %class.SkMatrix* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %64, align 16
  %65 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 4
  %66 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 5
  %67 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 6
  %68 = bitcast float* %65 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %68, align 16
  %69 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %69, align 16
  store i32 16, i32* %59, align 4
  %70 = bitcast %class.SkImageShader* %0 to %class.SkShaderBase*
  %71 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 6
  %72 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %71, align 8
  %73 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %72, i64 0, i32 2
  %74 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 5
  %75 = load %class.SkMatrix*, %class.SkMatrix** %74, align 8
  %76 = call zeroext i1 @_ZNK12SkShaderBase19computeTotalInverseERK8SkMatrixPS1_PS0_(%class.SkShaderBase* %70, %class.SkMatrix* dereferenceable(40) %73, %class.SkMatrix* %75, %class.SkMatrix* nonnull %8) #13
  br i1 %76, label %77, label %641

77:                                               ; preds = %48
  %78 = load float, float* %69, align 16
  %79 = fcmp une float %78, 1.000000e+00
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZN8SkMatrix22doNormalizePerspectiveEv(%class.SkMatrix* nonnull %8) #13
  br label %81

81:                                               ; preds = %77, %80
  %82 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  %83 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 2, i32 0
  %84 = load %class.SkImage*, %class.SkImage** %83, align 8
  %85 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 3
  %86 = load i32, i32* %85, align 4
  %87 = call %class.SkMipmapAccessor* @_ZN16SkMipmapAccessor4MakeEP12SkArenaAllocPK7SkImageRK8SkMatrix12SkMipmapMode(%class.SkArenaAlloc* %82, %class.SkImage* %84, %class.SkMatrix* nonnull dereferenceable(40) %8, i32 %86) #13
  %88 = icmp eq %class.SkMipmapAccessor* %87, null
  br i1 %88, label %641, label %89

89:                                               ; preds = %81
  %90 = bitcast %class.SkPixmap* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %90) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 40, i1 false) #13
  %91 = bitcast { i8*, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91)
  %92 = bitcast %class.SkMatrix* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %92)
  %93 = bitcast %class.SkMipmapAccessor* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %91, i8* nonnull align 8 %93, i64 16, i1 false)
  %94 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %87, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %95 = load %class.SkColorSpace*, %class.SkColorSpace** %94, align 8, !noalias !12
  %96 = icmp eq %class.SkColorSpace* %95, null
  br i1 %96, label %103, label %97

97:                                               ; preds = %89
  %98 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw add i32* %98, i32 1 monotonic, !noalias !12
  %100 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %101 = load %class.SkColorSpace*, %class.SkColorSpace** %100, align 8
  %102 = bitcast %class.SkColorSpace* %101 to i8*
  br label %103

103:                                              ; preds = %89, %97
  %104 = phi i8* [ null, %89 ], [ %102, %97 ]
  %105 = phi %class.SkColorSpace* [ null, %89 ], [ %101, %97 ]
  %106 = ptrtoint %class.SkColorSpace* %95 to i64
  %107 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %87, i64 0, i32 0, i32 2, i32 0, i32 1
  %108 = bitcast i32* %107 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8, !noalias !12
  %110 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %87, i64 0, i32 3
  %111 = bitcast %class.SkMatrix* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* align 4 %111, i64 40, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %91, i64 16, i1 false)
  %112 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %9, i64 0, i32 2
  %113 = bitcast %struct.SkImageInfo* %112 to i64*
  store i64 %106, i64* %113, align 8
  %114 = icmp eq %class.SkColorSpace* %105, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %103
  %116 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw add i32* %116, i32 -1 acq_rel
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %119, label %120

119:                                              ; preds = %115
  call void @_ZdlPv(i8* %104) #14
  br label %120

120:                                              ; preds = %119, %115, %103
  %121 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %9, i64 0, i32 2, i32 0, i32 1
  %122 = bitcast i32* %121 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %122, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %58, i8* nonnull align 8 %92, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %92)
  %123 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %123, i32 21, i8* null) #13
  br i1 %43, label %124, label %133

124:                                              ; preds = %120
  %125 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  %126 = getelementptr inbounds %class.SkImageStageUpdater, %class.SkImageStageUpdater* %2, i64 0, i32 2
  %127 = load i8, i8* %126, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  %129 = getelementptr inbounds %class.SkImageStageUpdater, %class.SkImageStageUpdater* %2, i64 0, i32 3, i64 0
  %130 = bitcast float* %129 to i8*
  br i1 %128, label %132, label %131

131:                                              ; preds = %124
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %125, i32 132, i8* %130) #13
  br label %213

132:                                              ; preds = %124
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %125, i32 127, i8* %130) #13
  br label %213

133:                                              ; preds = %120
  %134 = load i8, i8* %21, align 4, !range !2
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %136, label %210

136:                                              ; preds = %133
  %137 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %71, align 8
  %138 = bitcast %class.SkMatrixProvider* %137 to i1 (%class.SkMatrixProvider*)***
  %139 = load i1 (%class.SkMatrixProvider*)**, i1 (%class.SkMatrixProvider*)*** %138, align 8
  %140 = getelementptr inbounds i1 (%class.SkMatrixProvider*)*, i1 (%class.SkMatrixProvider*)** %139, i64 3
  %141 = load i1 (%class.SkMatrixProvider*)*, i1 (%class.SkMatrixProvider*)** %140, align 8
  %142 = call zeroext i1 %141(%class.SkMatrixProvider* %137) #13
  br i1 %142, label %146, label %143

143:                                              ; preds = %136
  %144 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 2
  %145 = load i32, i32* %144, align 4
  br label %179

146:                                              ; preds = %136
  %147 = getelementptr inbounds [3 x i8], [3 x i8]* %12, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %147)
  %148 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 2
  %149 = load i32, i32* %148, align 4
  %150 = load i32, i32* %85, align 4
  %151 = icmp eq i32 %149, 1
  br i1 %151, label %152, label %174

152:                                              ; preds = %146
  %153 = load i32, i32* %59, align 4, !noalias !17
  %154 = trunc i32 %153 to i8
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %152
  %157 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %8) #13, !noalias !17
  %158 = zext i8 %157 to i32
  store i32 %158, i32* %59, align 4, !noalias !17
  br label %159

159:                                              ; preds = %156, %152
  %160 = phi i32 [ %158, %156 ], [ %153, %152 ]
  %161 = and i32 %160, 14
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %174

163:                                              ; preds = %159
  %164 = load float, float* %62, align 8, !noalias !17
  %165 = fptosi float %164 to i32
  %166 = sitofp i32 %165 to float
  %167 = fcmp oeq float %164, %166
  br i1 %167, label %168, label %174

168:                                              ; preds = %163
  %169 = load float, float* %66, align 4, !noalias !17
  %170 = fptosi float %169 to i32
  %171 = sitofp i32 %170 to float
  %172 = fcmp oeq float %169, %171
  br i1 %172, label %173, label %174

173:                                              ; preds = %168
  br label %174

174:                                              ; preds = %146, %159, %163, %168, %173
  %175 = phi i32 [ 0, %173 ], [ 1, %168 ], [ 1, %163 ], [ 1, %159 ], [ %149, %146 ]
  store i8 0, i8* %21, align 4
  %176 = getelementptr inbounds i8, i8* %21, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %176, i8* nonnull align 1 %147, i64 3, i1 false)
  %177 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %177, align 4
  %178 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %178, align 4
  store i32 %175, i32* %148, align 4
  store i32 %150, i32* %85, align 4
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %147)
  br label %179

179:                                              ; preds = %143, %174
  %180 = phi i32 [ %145, %143 ], [ %175, %174 ]
  %181 = bitcast [3 x float]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %181)
  %182 = load float, float* %60, align 16
  %183 = bitcast float* %61 to i32*
  %184 = load i32, i32* %183, align 4
  %185 = load float, float* %62, align 8
  %186 = bitcast float* %63 to i32*
  %187 = load i32, i32* %186, align 4
  %188 = load float, float* %65, align 16
  %189 = load float, float* %66, align 4
  %190 = bitcast float* %67 to i8*
  %191 = load i32, i32* %59, align 4
  %192 = bitcast [3 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %192)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %192, i8* align 8 %190, i64 12, i1 false)
  %193 = icmp eq i32 %180, 0
  br i1 %193, label %194, label %206

194:                                              ; preds = %179
  %195 = fcmp ult float %182, 0.000000e+00
  br i1 %195, label %199, label %196

196:                                              ; preds = %194
  %197 = call float @llvm.floor.f32(float %185) #13
  %198 = call float @nextafterf(float %185, float %197) #13, !noalias !20
  br label %199

199:                                              ; preds = %196, %194
  %200 = phi float [ %185, %194 ], [ %198, %196 ]
  %201 = phi i32 [ %191, %194 ], [ 128, %196 ]
  %202 = fcmp ult float %188, 0.000000e+00
  br i1 %202, label %206, label %203

203:                                              ; preds = %199
  %204 = call float @llvm.floor.f32(float %189) #13
  %205 = call float @nextafterf(float %189, float %204) #13, !noalias !20
  br label %206

206:                                              ; preds = %179, %199, %203
  %207 = phi float [ %200, %199 ], [ %200, %203 ], [ %185, %179 ]
  %208 = phi float [ %189, %199 ], [ %205, %203 ], [ %189, %179 ]
  %209 = phi i32 [ %201, %199 ], [ 128, %203 ], [ %191, %179 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %181, i8* nonnull align 8 %192, i64 12, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %192)
  store float %182, float* %60, align 16
  store i32 %184, i32* %183, align 4
  store float %207, float* %62, align 8
  store i32 %187, i32* %186, align 4
  store float %188, float* %65, align 16
  store float %208, float* %66, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %190, i8* nonnull align 4 %181, i64 12, i1 false)
  store i32 %209, i32* %59, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %181)
  br label %210

210:                                              ; preds = %133, %206
  %211 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  %212 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  call void @_ZN16SkRasterPipeline13append_matrixEP12SkArenaAllocRK8SkMatrix(%class.SkRasterPipeline* %211, %class.SkArenaAlloc* %212, %class.SkMatrix* nonnull dereferenceable(40) %8) #13
  br label %213

213:                                              ; preds = %132, %131, %210
  %214 = bitcast %struct.SkRasterPipeline_GatherCtx** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #13
  store %struct.SkRasterPipeline_GatherCtx* inttoptr (i64 -6148914691236517206 to %struct.SkRasterPipeline_GatherCtx*), %struct.SkRasterPipeline_GatherCtx** %14, align 8
  %215 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  %216 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %215, i64 0, i32 1
  %217 = bitcast i8** %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = sub i64 0, %218
  %220 = and i64 %219, 7
  %221 = or i64 %220, 24
  %222 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %215, i64 0, i32 2
  %223 = bitcast i8** %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = sub i64 %224, %218
  %226 = icmp ugt i64 %221, %225
  br i1 %226, label %227, label %231

227:                                              ; preds = %213
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %215, i32 24, i32 8) #13
  %228 = load i64, i64* %217, align 8
  %229 = sub i64 0, %228
  %230 = and i64 %229, 7
  br label %231

231:                                              ; preds = %213, %227
  %232 = phi i64 [ %228, %227 ], [ %218, %213 ]
  %233 = phi i64 [ %230, %227 ], [ %220, %213 ]
  %234 = inttoptr i64 %232 to i8*
  %235 = getelementptr inbounds i8, i8* %234, i64 %233
  %236 = getelementptr inbounds i8, i8* %235, i64 24
  store i8* %236, i8** %216, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %235, i8 0, i64 24, i1 false) #13
  %237 = bitcast %struct.SkRasterPipeline_GatherCtx** %14 to i8**
  store i8* %235, i8** %237, align 8
  %238 = bitcast %class.SkPixmap* %9 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = bitcast i8* %235 to i64*
  store i64 %239, i64* %240, align 8
  %241 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %9, i64 0, i32 1
  %242 = load i64, i64* %241, align 8
  %243 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %9, i64 0, i32 2, i32 0
  %244 = call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %243) #13
  %245 = zext i32 %244 to i64
  %246 = lshr i64 %242, %245
  %247 = trunc i64 %246 to i32
  %248 = load %struct.SkRasterPipeline_GatherCtx*, %struct.SkRasterPipeline_GatherCtx** %14, align 8
  %249 = getelementptr inbounds %struct.SkRasterPipeline_GatherCtx, %struct.SkRasterPipeline_GatherCtx* %248, i64 0, i32 1
  store i32 %247, i32* %249, align 8
  %250 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %9, i64 0, i32 2, i32 1, i32 0
  %251 = load i32, i32* %250, align 8
  %252 = sitofp i32 %251 to float
  %253 = getelementptr inbounds %struct.SkRasterPipeline_GatherCtx, %struct.SkRasterPipeline_GatherCtx* %248, i64 0, i32 2
  store float %252, float* %253, align 4
  %254 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %9, i64 0, i32 2, i32 1, i32 1
  %255 = load i32, i32* %254, align 4
  %256 = sitofp i32 %255 to float
  %257 = getelementptr inbounds %struct.SkRasterPipeline_GatherCtx, %struct.SkRasterPipeline_GatherCtx* %248, i64 0, i32 3
  store float %256, float* %257, align 8
  %258 = bitcast %struct.SkRasterPipeline_TileCtx** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %258) #13
  store %struct.SkRasterPipeline_TileCtx* inttoptr (i64 -6148914691236517206 to %struct.SkRasterPipeline_TileCtx*), %struct.SkRasterPipeline_TileCtx** %15, align 8
  %259 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  %260 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %259, i64 0, i32 1
  %261 = bitcast i8** %260 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = sub i64 0, %262
  %264 = and i64 %263, 3
  %265 = or i64 %264, 8
  %266 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %259, i64 0, i32 2
  %267 = bitcast i8** %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = sub i64 %268, %262
  %270 = icmp ugt i64 %265, %269
  br i1 %270, label %271, label %275

271:                                              ; preds = %231
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %259, i32 8, i32 4) #13
  %272 = load i64, i64* %261, align 8
  %273 = sub i64 0, %272
  %274 = and i64 %273, 3
  br label %275

275:                                              ; preds = %231, %271
  %276 = phi i64 [ %272, %271 ], [ %262, %231 ]
  %277 = phi i64 [ %274, %271 ], [ %264, %231 ]
  %278 = inttoptr i64 %276 to i8*
  %279 = getelementptr inbounds i8, i8* %278, i64 %277
  %280 = getelementptr inbounds i8, i8* %279, i64 8
  store i8* %280, i8** %260, align 8
  %281 = bitcast i8* %279 to i64*
  store i64 0, i64* %281, align 4
  %282 = bitcast %struct.SkRasterPipeline_TileCtx** %15 to i8**
  store i8* %279, i8** %282, align 8
  %283 = bitcast %struct.SkRasterPipeline_TileCtx** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %283) #13
  store %struct.SkRasterPipeline_TileCtx* inttoptr (i64 -6148914691236517206 to %struct.SkRasterPipeline_TileCtx*), %struct.SkRasterPipeline_TileCtx** %16, align 8
  %284 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  %285 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %284, i64 0, i32 1
  %286 = bitcast i8** %285 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = sub i64 0, %287
  %289 = and i64 %288, 3
  %290 = or i64 %289, 8
  %291 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %284, i64 0, i32 2
  %292 = bitcast i8** %291 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = sub i64 %293, %287
  %295 = icmp ugt i64 %290, %294
  br i1 %295, label %296, label %300

296:                                              ; preds = %275
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %284, i32 8, i32 4) #13
  %297 = load i64, i64* %286, align 8
  %298 = sub i64 0, %297
  %299 = and i64 %298, 3
  br label %300

300:                                              ; preds = %275, %296
  %301 = phi i64 [ %297, %296 ], [ %287, %275 ]
  %302 = phi i64 [ %299, %296 ], [ %289, %275 ]
  %303 = inttoptr i64 %301 to i8*
  %304 = getelementptr inbounds i8, i8* %303, i64 %302
  %305 = getelementptr inbounds i8, i8* %304, i64 8
  store i8* %305, i8** %285, align 8
  %306 = bitcast i8* %304 to i64*
  store i64 0, i64* %306, align 4
  %307 = bitcast %struct.SkRasterPipeline_TileCtx** %16 to i8**
  store i8* %304, i8** %307, align 8
  %308 = load i32, i32* %250, align 8
  %309 = sitofp i32 %308 to float
  %310 = load %struct.SkRasterPipeline_TileCtx*, %struct.SkRasterPipeline_TileCtx** %15, align 8
  %311 = getelementptr inbounds %struct.SkRasterPipeline_TileCtx, %struct.SkRasterPipeline_TileCtx* %310, i64 0, i32 0
  store float %309, float* %311, align 4
  %312 = load i32, i32* %250, align 8
  %313 = sitofp i32 %312 to float
  %314 = fdiv float 1.000000e+00, %313
  %315 = load %struct.SkRasterPipeline_TileCtx*, %struct.SkRasterPipeline_TileCtx** %15, align 8
  %316 = getelementptr inbounds %struct.SkRasterPipeline_TileCtx, %struct.SkRasterPipeline_TileCtx* %315, i64 0, i32 1
  store float %314, float* %316, align 4
  %317 = load i32, i32* %254, align 4
  %318 = sitofp i32 %317 to float
  %319 = load %struct.SkRasterPipeline_TileCtx*, %struct.SkRasterPipeline_TileCtx** %16, align 8
  %320 = getelementptr inbounds %struct.SkRasterPipeline_TileCtx, %struct.SkRasterPipeline_TileCtx* %319, i64 0, i32 0
  store float %318, float* %320, align 4
  %321 = load i32, i32* %254, align 4
  %322 = sitofp i32 %321 to float
  %323 = fdiv float 1.000000e+00, %322
  %324 = load %struct.SkRasterPipeline_TileCtx*, %struct.SkRasterPipeline_TileCtx** %16, align 8
  %325 = getelementptr inbounds %struct.SkRasterPipeline_TileCtx, %struct.SkRasterPipeline_TileCtx* %324, i64 0, i32 1
  store float %323, float* %325, align 4
  %326 = bitcast %struct.SkRasterPipeline_DecalTileCtx** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %326) #13
  store %struct.SkRasterPipeline_DecalTileCtx* null, %struct.SkRasterPipeline_DecalTileCtx** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #13
  store i8 -86, i8* %18, align 1
  %327 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 4
  %328 = load i32, i32* %327, align 4
  %329 = icmp eq i32 %328, 3
  br i1 %329, label %330, label %335

330:                                              ; preds = %300
  %331 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 5
  %332 = load i32, i32* %331, align 8
  %333 = icmp eq i32 %332, 3
  %334 = zext i1 %333 to i8
  store i8 %334, i8* %18, align 1
  br label %339

335:                                              ; preds = %300
  store i8 0, i8* %18, align 1
  %336 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 5
  %337 = load i32, i32* %336, align 8
  %338 = icmp eq i32 %337, 3
  br i1 %338, label %339, label %374

339:                                              ; preds = %330, %335
  %340 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  %341 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %340, i64 0, i32 1
  %342 = bitcast i8** %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = sub i64 0, %343
  %345 = and i64 %344, 3
  %346 = or i64 %345, 72
  %347 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %340, i64 0, i32 2
  %348 = bitcast i8** %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = sub i64 %349, %343
  %351 = icmp ugt i64 %346, %350
  br i1 %351, label %352, label %356

352:                                              ; preds = %339
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %340, i32 72, i32 4) #13
  %353 = load i64, i64* %342, align 8
  %354 = sub i64 0, %353
  %355 = and i64 %354, 3
  br label %356

356:                                              ; preds = %339, %352
  %357 = phi i64 [ %353, %352 ], [ %343, %339 ]
  %358 = phi i64 [ %355, %352 ], [ %345, %339 ]
  %359 = inttoptr i64 %357 to i8*
  %360 = getelementptr inbounds i8, i8* %359, i64 %358
  %361 = getelementptr inbounds i8, i8* %360, i64 72
  store i8* %361, i8** %341, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %360, i8 0, i64 72, i1 false) #13
  %362 = bitcast %struct.SkRasterPipeline_DecalTileCtx** %17 to i8**
  store i8* %360, i8** %362, align 8
  %363 = bitcast %struct.SkRasterPipeline_TileCtx** %15 to i32**
  %364 = load i32*, i32** %363, align 8
  %365 = load i32, i32* %364, align 4
  %366 = getelementptr inbounds i8, i8* %360, i64 64
  %367 = bitcast i8* %366 to i32*
  store i32 %365, i32* %367, align 4
  %368 = bitcast %struct.SkRasterPipeline_TileCtx** %16 to i32**
  %369 = load i32*, i32** %368, align 8
  %370 = load i32, i32* %369, align 4
  %371 = load %struct.SkRasterPipeline_DecalTileCtx*, %struct.SkRasterPipeline_DecalTileCtx** %17, align 8
  %372 = getelementptr inbounds %struct.SkRasterPipeline_DecalTileCtx, %struct.SkRasterPipeline_DecalTileCtx* %371, i64 0, i32 2
  %373 = bitcast float* %372 to i32*
  store i32 %370, i32* %373, align 4
  br label %374

374:                                              ; preds = %356, %335
  %375 = bitcast %class.anon.94* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %375) #13
  %376 = getelementptr inbounds %class.anon.94, %class.anon.94* %19, i64 0, i32 0
  store i8* %18, i8** %376, align 8
  %377 = getelementptr inbounds %class.anon.94, %class.anon.94* %19, i64 0, i32 1
  store %class.SkRasterPipeline** %6, %class.SkRasterPipeline*** %377, align 8
  %378 = getelementptr inbounds %class.anon.94, %class.anon.94* %19, i64 0, i32 2
  store %struct.SkRasterPipeline_DecalTileCtx** %17, %struct.SkRasterPipeline_DecalTileCtx*** %378, align 8
  %379 = getelementptr inbounds %class.anon.94, %class.anon.94* %19, i64 0, i32 3
  store %class.SkImageShader* %0, %class.SkImageShader** %379, align 8
  %380 = getelementptr inbounds %class.anon.94, %class.anon.94* %19, i64 0, i32 4
  store %struct.SkRasterPipeline_TileCtx** %15, %struct.SkRasterPipeline_TileCtx*** %380, align 8
  %381 = getelementptr inbounds %class.anon.94, %class.anon.94* %19, i64 0, i32 5
  store %struct.SkRasterPipeline_TileCtx** %16, %struct.SkRasterPipeline_TileCtx*** %381, align 8
  %382 = getelementptr inbounds %class.anon.94, %class.anon.94* %19, i64 0, i32 6
  store %struct.SkRasterPipeline_GatherCtx** %14, %struct.SkRasterPipeline_GatherCtx*** %382, align 8
  %383 = getelementptr inbounds %class.anon.94, %class.anon.94* %19, i64 0, i32 7
  store %class.SkPixmap* %9, %class.SkPixmap** %383, align 8
  %384 = bitcast %class.anon.95* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %384) #13
  %385 = getelementptr inbounds %class.anon.95, %class.anon.95* %20, i64 0, i32 0
  %386 = getelementptr inbounds %class.anon.95, %class.anon.95* %20, i64 0, i32 1
  %387 = getelementptr inbounds %class.anon.95, %class.anon.95* %20, i64 0, i32 2
  %388 = getelementptr inbounds %class.anon.95, %class.anon.95* %20, i64 0, i32 3
  %389 = getelementptr inbounds %class.anon.95, %class.anon.95* %20, i64 0, i32 4
  %390 = getelementptr inbounds %class.anon.95, %class.anon.95* %20, i64 0, i32 5
  store %class.SkPixmap* %9, %class.SkPixmap** %385, align 8
  store %struct.SkStageRec* %1, %struct.SkStageRec** %386, align 8
  store %class.SkRasterPipeline** %6, %class.SkRasterPipeline*** %387, align 8
  store %class.SkArenaAlloc** %7, %class.SkArenaAlloc*** %388, align 8
  store %struct.SkSamplingOptions* %5, %struct.SkSamplingOptions** %389, align 8
  store %class.SkImageShader* %0, %class.SkImageShader** %390, align 8
  %391 = load i32, i32* %121, align 8
  %392 = icmp eq i32 %391, 6
  %393 = or i32 %391, 2
  %394 = icmp eq i32 %393, 6
  %395 = load i8, i8* %21, align 4
  %396 = icmp eq i8 %395, 0
  %397 = and i1 %394, %396
  br i1 %397, label %398, label %469

398:                                              ; preds = %374
  %399 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 2
  %400 = load i32, i32* %399, align 4
  %401 = icmp eq i32 %400, 1
  br i1 %401, label %402, label %469

402:                                              ; preds = %398
  %403 = load i32, i32* %327, align 4
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %416

405:                                              ; preds = %402
  %406 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 5
  %407 = load i32, i32* %406, align 8
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %414

409:                                              ; preds = %405
  %410 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  %411 = load i8*, i8** %237, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %410, i32 81, i8* %411) #13
  br i1 %392, label %412, label %630

412:                                              ; preds = %409
  %413 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %413, i32 14, i8* null) #13
  br label %630

414:                                              ; preds = %405
  %415 = load i32, i32* %327, align 4
  br label %416

416:                                              ; preds = %414, %402
  %417 = phi i32 [ %415, %414 ], [ %403, %402 ]
  %418 = icmp eq i32 %417, 3
  br i1 %418, label %469, label %419

419:                                              ; preds = %416
  %420 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 5
  %421 = load i32, i32* %420, align 8
  %422 = icmp eq i32 %421, 3
  br i1 %422, label %469, label %423

423:                                              ; preds = %419
  %424 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  %425 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %424, i64 0, i32 1
  %426 = bitcast i8** %425 to i64*
  %427 = load i64, i64* %426, align 8
  %428 = sub i64 0, %427
  %429 = and i64 %428, 7
  %430 = or i64 %429, 48
  %431 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %424, i64 0, i32 2
  %432 = bitcast i8** %431 to i64*
  %433 = load i64, i64* %432, align 8
  %434 = sub i64 %433, %427
  %435 = icmp ugt i64 %430, %434
  br i1 %435, label %436, label %440

436:                                              ; preds = %423
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %424, i32 48, i32 8) #13
  %437 = load i64, i64* %426, align 8
  %438 = sub i64 0, %437
  %439 = and i64 %438, 7
  br label %440

440:                                              ; preds = %423, %436
  %441 = phi i64 [ %437, %436 ], [ %427, %423 ]
  %442 = phi i64 [ %439, %436 ], [ %429, %423 ]
  %443 = inttoptr i64 %441 to i8*
  %444 = getelementptr inbounds i8, i8* %443, i64 %442
  %445 = getelementptr inbounds i8, i8* %444, i64 48
  store i8* %445, i8** %425, align 8
  %446 = load i8*, i8** %237, align 8
  %447 = getelementptr i8, i8* %444, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %447, i8 0, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %444, i8* align 8 %446, i64 24, i1 false)
  %448 = getelementptr inbounds i8, i8* %444, i64 24
  %449 = bitcast i8* %448 to i32*
  store i32 %391, i32* %449, align 8
  %450 = load i32, i32* %327, align 4
  %451 = getelementptr inbounds i8, i8* %444, i64 28
  %452 = bitcast i8* %451 to i32*
  store i32 %450, i32* %452, align 4
  %453 = load i32, i32* %420, align 8
  %454 = getelementptr inbounds i8, i8* %444, i64 32
  %455 = bitcast i8* %454 to i32*
  store i32 %453, i32* %455, align 8
  %456 = getelementptr inbounds i8, i8* %444, i64 12
  %457 = bitcast i8* %456 to float*
  %458 = load float, float* %457, align 4
  %459 = fdiv float 1.000000e+00, %458
  %460 = getelementptr inbounds i8, i8* %444, i64 36
  %461 = bitcast i8* %460 to float*
  store float %459, float* %461, align 4
  %462 = getelementptr inbounds i8, i8* %444, i64 16
  %463 = bitcast i8* %462 to float*
  %464 = load float, float* %463, align 8
  %465 = fdiv float 1.000000e+00, %464
  %466 = getelementptr inbounds i8, i8* %444, i64 40
  %467 = bitcast i8* %466 to float*
  store float %465, float* %467, align 8
  %468 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %468, i32 147, i8* %444) #13
  br label %630

469:                                              ; preds = %398, %374, %419, %416
  %470 = xor i1 %394, true
  %471 = or i1 %396, %470
  br i1 %471, label %533, label %472

472:                                              ; preds = %469
  %473 = load i32, i32* %327, align 4
  switch i32 %473, label %483 [
    i32 0, label %474
    i32 3, label %533
  ]

474:                                              ; preds = %472
  %475 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 5
  %476 = load i32, i32* %475, align 8
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %478, label %483

478:                                              ; preds = %474
  %479 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  %480 = load i8*, i8** %237, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %479, i32 82, i8* %480) #13
  br i1 %392, label %481, label %630

481:                                              ; preds = %478
  %482 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %482, i32 14, i8* null) #13
  br label %630

483:                                              ; preds = %472, %474
  %484 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 5
  %485 = load i32, i32* %484, align 8
  %486 = icmp eq i32 %485, 3
  br i1 %486, label %533, label %487

487:                                              ; preds = %483
  %488 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  %489 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %488, i64 0, i32 1
  %490 = bitcast i8** %489 to i64*
  %491 = load i64, i64* %490, align 8
  %492 = sub i64 0, %491
  %493 = and i64 %492, 7
  %494 = or i64 %493, 48
  %495 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %488, i64 0, i32 2
  %496 = bitcast i8** %495 to i64*
  %497 = load i64, i64* %496, align 8
  %498 = sub i64 %497, %491
  %499 = icmp ugt i64 %494, %498
  br i1 %499, label %500, label %504

500:                                              ; preds = %487
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %488, i32 48, i32 8) #13
  %501 = load i64, i64* %490, align 8
  %502 = sub i64 0, %501
  %503 = and i64 %502, 7
  br label %504

504:                                              ; preds = %487, %500
  %505 = phi i64 [ %501, %500 ], [ %491, %487 ]
  %506 = phi i64 [ %503, %500 ], [ %493, %487 ]
  %507 = inttoptr i64 %505 to i8*
  %508 = getelementptr inbounds i8, i8* %507, i64 %506
  %509 = getelementptr inbounds i8, i8* %508, i64 48
  store i8* %509, i8** %489, align 8
  %510 = load i8*, i8** %237, align 8
  %511 = getelementptr i8, i8* %508, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %511, i8 0, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %508, i8* align 8 %510, i64 24, i1 false)
  %512 = getelementptr inbounds i8, i8* %508, i64 24
  %513 = bitcast i8* %512 to i32*
  store i32 %391, i32* %513, align 8
  %514 = load i32, i32* %327, align 4
  %515 = getelementptr inbounds i8, i8* %508, i64 28
  %516 = bitcast i8* %515 to i32*
  store i32 %514, i32* %516, align 4
  %517 = load i32, i32* %484, align 8
  %518 = getelementptr inbounds i8, i8* %508, i64 32
  %519 = bitcast i8* %518 to i32*
  store i32 %517, i32* %519, align 8
  %520 = getelementptr inbounds i8, i8* %508, i64 12
  %521 = bitcast i8* %520 to float*
  %522 = load float, float* %521, align 4
  %523 = fdiv float 1.000000e+00, %522
  %524 = getelementptr inbounds i8, i8* %508, i64 36
  %525 = bitcast i8* %524 to float*
  store float %523, float* %525, align 4
  %526 = getelementptr inbounds i8, i8* %508, i64 16
  %527 = bitcast i8* %526 to float*
  %528 = load float, float* %527, align 8
  %529 = fdiv float 1.000000e+00, %528
  %530 = getelementptr inbounds i8, i8* %508, i64 40
  %531 = bitcast i8* %530 to float*
  store float %529, float* %531, align 8
  %532 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %532, i32 148, i8* %508) #13
  br label %630

533:                                              ; preds = %472, %469, %483
  %534 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  %535 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %534, i64 0, i32 1
  %536 = bitcast i8** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = sub i64 0, %537
  %539 = and i64 %538, 3
  %540 = or i64 %539, 384
  %541 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %534, i64 0, i32 2
  %542 = bitcast i8** %541 to i64*
  %543 = load i64, i64* %542, align 8
  %544 = sub i64 %543, %537
  %545 = icmp ugt i64 %540, %544
  br i1 %545, label %546, label %551

546:                                              ; preds = %533
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %534, i32 384, i32 4) #13
  %547 = load i64, i64* %536, align 8
  %548 = sub i64 0, %547
  %549 = and i64 %548, 3
  %550 = load i8, i8* %21, align 4, !range !2
  br label %551

551:                                              ; preds = %533, %546
  %552 = phi i8 [ %550, %546 ], [ %395, %533 ]
  %553 = phi i64 [ %547, %546 ], [ %537, %533 ]
  %554 = phi i64 [ %549, %546 ], [ %539, %533 ]
  %555 = inttoptr i64 %553 to i8*
  %556 = getelementptr inbounds i8, i8* %555, i64 %554
  %557 = getelementptr inbounds i8, i8* %556, i64 384
  store i8* %557, i8** %535, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %556, i8 0, i64 384, i1 false) #13
  %558 = icmp eq i8 %552, 0
  br i1 %558, label %610, label %559

559:                                              ; preds = %551
  %560 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %560, i32 161, i8* %556) #13
  %561 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %561, i32 153, i8* %556) #13
  %562 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %562, i32 157, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %563 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %563, i32 162, i8* %556) #13
  %564 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %564, i32 154, i8* %556) #13
  %565 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %565, i32 157, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %566 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %566, i32 162, i8* %556) #13
  %567 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %567, i32 155, i8* %556) #13
  %568 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %568, i32 157, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %569 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %569, i32 162, i8* %556) #13
  %570 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %570, i32 156, i8* %556) #13
  %571 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %571, i32 157, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %572 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %572, i32 162, i8* %556) #13
  %573 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %573, i32 153, i8* %556) #13
  %574 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %574, i32 158, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %575 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %575, i32 162, i8* %556) #13
  %576 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %576, i32 154, i8* %556) #13
  %577 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %577, i32 158, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %578 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %578, i32 162, i8* %556) #13
  %579 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %579, i32 155, i8* %556) #13
  %580 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %580, i32 158, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %581 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %581, i32 162, i8* %556) #13
  %582 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %582, i32 156, i8* %556) #13
  %583 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %583, i32 158, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %584 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %584, i32 162, i8* %556) #13
  %585 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %585, i32 153, i8* %556) #13
  %586 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %586, i32 159, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %587 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %587, i32 162, i8* %556) #13
  %588 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %588, i32 154, i8* %556) #13
  %589 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %589, i32 159, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %590 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %590, i32 162, i8* %556) #13
  %591 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %591, i32 155, i8* %556) #13
  %592 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %592, i32 159, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %593 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %593, i32 162, i8* %556) #13
  %594 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %594, i32 156, i8* %556) #13
  %595 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %595, i32 159, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %596 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %596, i32 162, i8* %556) #13
  %597 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %597, i32 153, i8* %556) #13
  %598 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %598, i32 160, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %599 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %599, i32 162, i8* %556) #13
  %600 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %600, i32 154, i8* %556) #13
  %601 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %601, i32 160, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %602 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %602, i32 162, i8* %556) #13
  %603 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %603, i32 155, i8* %556) #13
  %604 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %604, i32 160, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %605 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %605, i32 162, i8* %556) #13
  %606 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %606, i32 156, i8* %556) #13
  %607 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %607, i32 160, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %608 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %608, i32 162, i8* %556) #13
  %609 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %609, i32 2, i8* null) #13
  br label %630

610:                                              ; preds = %551
  %611 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 2
  %612 = load i32, i32* %611, align 4
  %613 = icmp eq i32 %612, 1
  br i1 %613, label %614, label %629

614:                                              ; preds = %610
  %615 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %615, i32 161, i8* %556) #13
  %616 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %616, i32 149, i8* %556) #13
  %617 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %617, i32 151, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %618 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %618, i32 162, i8* %556) #13
  %619 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %619, i32 150, i8* %556) #13
  %620 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %620, i32 151, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %621 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %621, i32 162, i8* %556) #13
  %622 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %622, i32 149, i8* %556) #13
  %623 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %623, i32 152, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %624 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %624, i32 162, i8* %556) #13
  %625 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %625, i32 150, i8* %556) #13
  %626 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %626, i32 152, i8* %556) #13
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19) #13
  %627 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %627, i32 162, i8* %556) #13
  %628 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %6, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %628, i32 2, i8* null) #13
  br label %630

629:                                              ; preds = %610
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* nonnull %19)
  br label %630

630:                                              ; preds = %559, %629, %614, %478, %481, %409, %412, %504, %440
  call fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_2clEv"(%class.anon.95* nonnull %20)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %384) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %375) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %326) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %283) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %258) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #13
  %631 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %632 = load %class.SkColorSpace*, %class.SkColorSpace** %631, align 8
  %633 = icmp eq %class.SkColorSpace* %632, null
  br i1 %633, label %640, label %634

634:                                              ; preds = %630
  %635 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %632, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = atomicrmw add i32* %635, i32 -1 acq_rel
  %637 = icmp eq i32 %636, 1
  br i1 %637, label %638, label %640

638:                                              ; preds = %634
  %639 = bitcast %class.SkColorSpace* %632 to i8*
  call void @_ZdlPv(i8* %639) #14
  br label %640

640:                                              ; preds = %630, %634, %638
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %90) #13
  br label %641

641:                                              ; preds = %640, %81, %48
  %642 = phi i1 [ false, %48 ], [ true, %640 ], [ false, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %58) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #13
  br label %643

643:                                              ; preds = %33, %25, %44, %38, %641
  %644 = phi i1 [ %642, %641 ], [ false, %33 ], [ false, %38 ], [ false, %44 ], [ false, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %21) #13
  ret i1 %644
}

declare %class.SkMipmapAccessor* @_ZN16SkMipmapAccessor4MakeEP12SkArenaAllocPK7SkImageRK8SkMatrix12SkMipmapMode(%class.SkArenaAlloc*, %class.SkImage*, %class.SkMatrix* dereferenceable(40), i32) local_unnamed_addr #2

declare void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline*, i32, i8*) local_unnamed_addr #2

declare void @_ZN16SkRasterPipeline13append_matrixEP12SkArenaAllocRK8SkMatrix(%class.SkRasterPipeline*, %class.SkArenaAlloc*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_2clEv"(%class.anon.95* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = getelementptr inbounds %class.anon.95, %class.anon.95* %0, i64 0, i32 5
  %4 = load %class.SkImageShader*, %class.SkImageShader** %3, align 8
  %5 = getelementptr inbounds %class.anon.95, %class.anon.95* %0, i64 0, i32 0
  %6 = load %class.SkPixmap*, %class.SkPixmap** %5, align 8
  %7 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %class.SkColorSpace*, %class.SkColorSpace** %7, align 8
  %9 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %6, i64 0, i32 2, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %6, i64 0, i32 2, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %31

14:                                               ; preds = %1
  %15 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #13
  %16 = bitcast <2 x i64>* %2 to float*
  %17 = getelementptr inbounds %class.anon.95, %class.anon.95* %0, i64 0, i32 1
  %18 = load %struct.SkStageRec*, %struct.SkStageRec** %17, align 8
  %19 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %18, i64 0, i32 4
  %20 = load %class.SkPaint*, %class.SkPaint** %19, align 8
  %21 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %20, i64 0, i32 5
  %22 = bitcast %struct.SkRGBA4f.88* %21 to <2 x i64>*
  %23 = load <2 x i64>, <2 x i64>* %22, align 8
  store <2 x i64> %23, <2 x i64>* %2, align 16
  %24 = getelementptr inbounds %class.anon.95, %class.anon.95* %0, i64 0, i32 2
  %25 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %24, align 8
  %26 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %25, align 8
  %27 = getelementptr inbounds %class.anon.95, %class.anon.95* %0, i64 0, i32 3
  %28 = load %class.SkArenaAlloc**, %class.SkArenaAlloc*** %27, align 8
  %29 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %28, align 8
  call void @_ZN16SkRasterPipeline14append_set_rgbEP12SkArenaAllocPKf(%class.SkRasterPipeline* %26, %class.SkArenaAlloc* %29, float* nonnull %16) #13
  %30 = call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #13
  br label %31

31:                                               ; preds = %14, %1
  %32 = phi i32 [ 3, %14 ], [ %10, %1 ]
  %33 = phi %class.SkColorSpace* [ %30, %14 ], [ %8, %1 ]
  %34 = getelementptr inbounds %class.anon.95, %class.anon.95* %0, i64 0, i32 4
  %35 = load %struct.SkSamplingOptions*, %struct.SkSamplingOptions** %34, align 8
  %36 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %35, i64 0, i32 0
  %37 = load i8, i8* %36, align 4, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %53, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %class.anon.95, %class.anon.95* %0, i64 0, i32 2
  %41 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %40, align 8
  %42 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %41, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %42, i32 3, i8* null) #13
  %43 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %40, align 8
  %44 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %43, align 8
  %45 = icmp eq i32 %32, 3
  br i1 %45, label %51, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %4, i64 0, i32 6
  %48 = load i8, i8* %47, align 4, !range !2
  %49 = icmp eq i8 %48, 0
  %50 = select i1 %49, i32 5, i32 4
  br label %51

51:                                               ; preds = %46, %39
  %52 = phi i32 [ 4, %39 ], [ %50, %46 ]
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %44, i32 %52, i8* null) #13
  br label %53

53:                                               ; preds = %31, %51
  %54 = getelementptr inbounds %class.anon.95, %class.anon.95* %0, i64 0, i32 3
  %55 = load %class.SkArenaAlloc**, %class.SkArenaAlloc*** %54, align 8
  %56 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %55, align 8
  %57 = getelementptr inbounds %class.anon.95, %class.anon.95* %0, i64 0, i32 1
  %58 = load %struct.SkStageRec*, %struct.SkStageRec** %57, align 8
  %59 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %58, i64 0, i32 3
  %60 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %56, i64 0, i32 1
  %61 = bitcast i8** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 0, %62
  %64 = and i64 %63, 3
  %65 = or i64 %64, 100
  %66 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %56, i64 0, i32 2
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %68, %62
  %70 = icmp ugt i64 %65, %69
  br i1 %70, label %71, label %75

71:                                               ; preds = %53
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %56, i32 100, i32 4) #13
  %72 = load i64, i64* %61, align 8
  %73 = sub i64 0, %72
  %74 = and i64 %73, 3
  br label %75

75:                                               ; preds = %53, %71
  %76 = phi i64 [ %72, %71 ], [ %62, %53 ]
  %77 = phi i64 [ %74, %71 ], [ %64, %53 ]
  %78 = inttoptr i64 %76 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 %77
  %80 = getelementptr inbounds i8, i8* %79, i64 100
  store i8* %80, i8** %60, align 8
  %81 = bitcast i8* %79 to %struct.SkColorSpaceXformSteps*
  %82 = load %class.SkColorSpace*, %class.SkColorSpace** %59, align 8
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* %81, %class.SkColorSpace* %33, i32 %32, %class.SkColorSpace* %82, i32 2) #13
  %83 = getelementptr inbounds %class.anon.95, %class.anon.95* %0, i64 0, i32 2
  %84 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %83, align 8
  %85 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %84, align 8
  call void @_ZNK22SkColorSpaceXformSteps5applyEP16SkRasterPipeline(%struct.SkColorSpaceXformSteps* %81, %class.SkRasterPipeline* %85) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdaterENK3$_4clEv"(%class.anon.94* readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 3
  %3 = load %class.SkImageShader*, %class.SkImageShader** %2, align 8
  %4 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %10 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %9, align 8
  %11 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %10, align 8
  %12 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 2
  %13 = bitcast %struct.SkRasterPipeline_DecalTileCtx*** %12 to i8***
  %14 = load i8**, i8*** %13, align 8
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %11, i32 144, i8* %15) #13
  br label %70

16:                                               ; preds = %1
  %17 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %3, i64 0, i32 4
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %43 [
    i32 3, label %35
    i32 2, label %19
    i32 1, label %27
  ]

19:                                               ; preds = %16
  %20 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %21 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %20, align 8
  %22 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %21, align 8
  %23 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 4
  %24 = bitcast %struct.SkRasterPipeline_TileCtx*** %23 to i8***
  %25 = load i8**, i8*** %24, align 8
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %22, i32 138, i8* %26) #13
  br label %43

27:                                               ; preds = %16
  %28 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %29 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %28, align 8
  %30 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %29, align 8
  %31 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 4
  %32 = bitcast %struct.SkRasterPipeline_TileCtx*** %31 to i8***
  %33 = load i8**, i8*** %32, align 8
  %34 = load i8*, i8** %33, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %30, i32 139, i8* %34) #13
  br label %43

35:                                               ; preds = %16
  %36 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %37 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %36, align 8
  %38 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %37, align 8
  %39 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 2
  %40 = bitcast %struct.SkRasterPipeline_DecalTileCtx*** %39 to i8***
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %38, i32 142, i8* %42) #13
  br label %43

43:                                               ; preds = %16, %35, %27, %19
  %44 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %3, i64 0, i32 5
  %45 = load i32, i32* %44, align 8
  switch i32 %45, label %70 [
    i32 3, label %62
    i32 2, label %46
    i32 1, label %54
  ]

46:                                               ; preds = %43
  %47 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %48 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %47, align 8
  %49 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %48, align 8
  %50 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 5
  %51 = bitcast %struct.SkRasterPipeline_TileCtx*** %50 to i8***
  %52 = load i8**, i8*** %51, align 8
  %53 = load i8*, i8** %52, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %49, i32 140, i8* %53) #13
  br label %70

54:                                               ; preds = %43
  %55 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %56 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %55, align 8
  %57 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %56, align 8
  %58 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 5
  %59 = bitcast %struct.SkRasterPipeline_TileCtx*** %58 to i8***
  %60 = load i8**, i8*** %59, align 8
  %61 = load i8*, i8** %60, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %57, i32 141, i8* %61) #13
  br label %70

62:                                               ; preds = %43
  %63 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %64 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %63, align 8
  %65 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %64, align 8
  %66 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 2
  %67 = bitcast %struct.SkRasterPipeline_DecalTileCtx*** %66 to i8***
  %68 = load i8**, i8*** %67, align 8
  %69 = load i8*, i8** %68, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %65, i32 143, i8* %69) #13
  br label %70

70:                                               ; preds = %46, %54, %62, %43, %8
  %71 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 6
  %72 = bitcast %struct.SkRasterPipeline_GatherCtx*** %71 to i8***
  %73 = load i8**, i8*** %72, align 8
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 7
  %76 = load %class.SkPixmap*, %class.SkPixmap** %75, align 8
  %77 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %76, i64 0, i32 2, i32 0, i32 1
  %78 = load i32, i32* %77, align 8
  switch i32 %78, label %169 [
    i32 1, label %79
    i32 18, label %83
    i32 16, label %87
    i32 2, label %91
    i32 3, label %95
    i32 15, label %99
    i32 19, label %103
    i32 17, label %107
    i32 4, label %111
    i32 7, label %115
    i32 20, label %119
    i32 12, label %123
    i32 13, label %123
    i32 14, label %127
    i32 11, label %131
    i32 5, label %137
    i32 8, label %143
    i32 9, label %149
    i32 10, label %155
    i32 6, label %163
  ]

79:                                               ; preds = %70
  %80 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %81 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %80, align 8
  %82 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %81, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %82, i32 26, i8* %74) #13
  br label %169

83:                                               ; preds = %70
  %84 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %85 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %84, align 8
  %86 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %85, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %86, i32 64, i8* %74) #13
  br label %169

87:                                               ; preds = %70
  %88 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %89 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %88, align 8
  %90 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %89, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %90, i32 42, i8* %74) #13
  br label %169

91:                                               ; preds = %70
  %92 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %93 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %92, align 8
  %94 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %93, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %94, i32 30, i8* %74) #13
  br label %169

95:                                               ; preds = %70
  %96 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %97 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %96, align 8
  %98 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %97, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %98, i32 34, i8* %74) #13
  br label %169

99:                                               ; preds = %70
  %100 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %101 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %100, align 8
  %102 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %101, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %102, i32 60, i8* %74) #13
  br label %169

103:                                              ; preds = %70
  %104 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %105 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %104, align 8
  %106 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %105, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %106, i32 68, i8* %74) #13
  br label %169

107:                                              ; preds = %70
  %108 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %109 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %108, align 8
  %110 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %109, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %110, i32 46, i8* %74) #13
  br label %169

111:                                              ; preds = %70
  %112 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %113 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %112, align 8
  %114 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %113, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %114, i32 56, i8* %74) #13
  br label %169

115:                                              ; preds = %70
  %116 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %117 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %116, align 8
  %118 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %117, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %118, i32 76, i8* %74) #13
  br label %169

119:                                              ; preds = %70
  %120 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %121 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %120, align 8
  %122 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %121, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %122, i32 72, i8* %74) #13
  br label %169

123:                                              ; preds = %70, %70
  %124 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %125 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %124, align 8
  %126 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %125, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %126, i32 38, i8* %74) #13
  br label %169

127:                                              ; preds = %70
  %128 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %129 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %128, align 8
  %130 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %129, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %130, i32 50, i8* %74) #13
  br label %169

131:                                              ; preds = %70
  %132 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %133 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %132, align 8
  %134 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %133, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %134, i32 26, i8* %74) #13
  %135 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %132, align 8
  %136 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %135, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %136, i32 77, i8* null) #13
  br label %169

137:                                              ; preds = %70
  %138 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %139 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %138, align 8
  %140 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %139, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %140, i32 56, i8* %74) #13
  %141 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %138, align 8
  %142 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %141, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %142, i32 10, i8* null) #13
  br label %169

143:                                              ; preds = %70
  %144 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %145 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %144, align 8
  %146 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %145, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %146, i32 76, i8* %74) #13
  %147 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %144, align 8
  %148 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %147, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %148, i32 14, i8* null) #13
  br label %169

149:                                              ; preds = %70
  %150 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %151 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %150, align 8
  %152 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %151, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %152, i32 76, i8* %74) #13
  %153 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %150, align 8
  %154 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %153, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %154, i32 10, i8* null) #13
  br label %169

155:                                              ; preds = %70
  %156 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %157 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %156, align 8
  %158 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %157, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %158, i32 76, i8* %74) #13
  %159 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %156, align 8
  %160 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %159, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %160, i32 10, i8* null) #13
  %161 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %156, align 8
  %162 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %161, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %162, i32 14, i8* null) #13
  br label %169

163:                                              ; preds = %70
  %164 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %165 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %164, align 8
  %166 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %165, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %166, i32 56, i8* %74) #13
  %167 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %164, align 8
  %168 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %167, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %168, i32 14, i8* null) #13
  br label %169

169:                                              ; preds = %70, %163, %155, %149, %143, %137, %131, %127, %123, %119, %115, %111, %107, %103, %99, %95, %91, %87, %83, %79
  %170 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 2
  %171 = load %struct.SkRasterPipeline_DecalTileCtx**, %struct.SkRasterPipeline_DecalTileCtx*** %170, align 8
  %172 = load %struct.SkRasterPipeline_DecalTileCtx*, %struct.SkRasterPipeline_DecalTileCtx** %171, align 8
  %173 = icmp eq %struct.SkRasterPipeline_DecalTileCtx* %172, null
  br i1 %173, label %179, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %class.anon.94, %class.anon.94* %0, i64 0, i32 1
  %176 = load %class.SkRasterPipeline**, %class.SkRasterPipeline*** %175, align 8
  %177 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %176, align 8
  %178 = bitcast %struct.SkRasterPipeline_DecalTileCtx* %172 to i8*
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %177, i32 145, i8* nonnull %178) #13
  br label %179

179:                                              ; preds = %169, %174
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13SkImageShader14onAppendStagesERK10SkStageRec(%class.SkImageShader*, %struct.SkStageRec* dereferenceable(56)) unnamed_addr #1 align 2 {
  %3 = tail call zeroext i1 @_ZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdater(%class.SkImageShader* %0, %struct.SkStageRec* dereferenceable(56) %1, %class.SkImageStageUpdater* null)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkStageUpdater* @_ZNK13SkImageShader23onAppendUpdatableStagesERK10SkStageRec(%class.SkImageShader*, %struct.SkStageRec* dereferenceable(56)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 6
  %4 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %3, align 8
  %5 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %4, i64 0, i32 2, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 192
  %8 = icmp eq i32 %7, 128
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %4, i64 0, i32 2
  %11 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %10) #13
  %12 = zext i8 %11 to i32
  store i32 %12, i32* %5, align 4
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i32 [ %12, %9 ], [ %6, %2 ]
  %15 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 1
  %16 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %15, align 8
  %17 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %16, i32 65, i32 8) #13
  %18 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %16, i64 0, i32 1
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = ptrtoint i8* %17 to i64
  %22 = sub i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds i8, i8* %17, i64 56
  store i8* %24, i8** %18, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %16, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI19SkImageStageUpdaterJPK13SkImageShaderRbEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS7_ENUlPcE_8__invokeESG_, i32 %23) #13
  %25 = bitcast i8* %17 to %class.SkImageStageUpdater*
  %26 = and i32 %14, 8
  %27 = icmp eq i32 %26, 0
  %28 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV19SkImageStageUpdater, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds i8, i8* %17, i64 8
  %30 = bitcast i8* %29 to %class.SkImageShader**
  store %class.SkImageShader* %0, %class.SkImageShader** %30, align 8
  %31 = getelementptr inbounds i8, i8* %17, i64 16
  br i1 %27, label %32, label %46

32:                                               ; preds = %13
  %33 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 0, i32 1, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 192
  %36 = icmp eq i32 %35, 128
  br i1 %36, label %37, label %41

37:                                               ; preds = %32
  %38 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 0, i32 1
  %39 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %38) #13
  %40 = zext i8 %39 to i32
  store i32 %40, i32* %33, align 4
  br label %41

41:                                               ; preds = %37, %32
  %42 = phi i32 [ %40, %37 ], [ %34, %32 ]
  %43 = lshr i32 %42, 3
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  br label %46

46:                                               ; preds = %13, %41
  %47 = phi i8 [ 1, %13 ], [ %45, %41 ]
  store i8 %47, i8* %31, align 8
  %48 = tail call zeroext i1 @_ZNK13SkImageShader8doStagesERK10SkStageRecP19SkImageStageUpdater(%class.SkImageShader* %0, %struct.SkStageRec* dereferenceable(56) %1, %class.SkImageStageUpdater* %25)
  %49 = select i1 %48, %class.SkImageStageUpdater* %25, %class.SkImageStageUpdater* null
  %50 = getelementptr inbounds %class.SkImageStageUpdater, %class.SkImageStageUpdater* %49, i64 0, i32 0
  ret %class.SkStageUpdater* %50
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias sret, %class.SkImageShader*, %"class.skvm::Builder"*, %"struct.skvm::Coord"* nocapture readnone byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* nocapture readonly byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* nocapture readonly byval(%"struct.skvm::Color") align 8, %class.SkMatrixProvider* dereferenceable(112), %class.SkMatrix*, %class.SkColorInfo* nocapture readonly dereferenceable(16), %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) unnamed_addr #1 align 2 {
  %12 = alloca [3 x float], align 8
  %13 = alloca %"class.skvm::Builder"*, align 8
  %14 = alloca %"struct.skvm::Uniforms"*, align 8
  %15 = alloca %class.SkMatrix, align 16
  %16 = alloca %struct.SkSamplingOptions, align 4
  %17 = alloca %"struct.std::__1::pair", align 8
  %18 = alloca [3 x i8], align 1
  %19 = alloca [3 x float], align 4
  %20 = alloca %class.SkPixmap, align 8
  %21 = alloca %class.SkMatrix, align 16
  %22 = alloca { i8*, i64 }, align 8
  %23 = alloca %class.SkMatrix, align 8
  %24 = alloca %"struct.skvm::Coord", align 8
  %25 = alloca i8, align 1
  %26 = alloca %class.anon.116, align 8
  %27 = alloca %class.anon.117, align 8
  %28 = alloca %class.anon.118, align 8
  %29 = alloca %class.anon.119, align 8
  %30 = alloca %"struct.skvm::Color", align 8
  %31 = alloca %"struct.skvm::Coord", align 8
  %32 = alloca %"struct.skvm::Color", align 8
  %33 = alloca [64 x i8], align 8
  %34 = alloca %"struct.skvm::Color", align 8
  %35 = alloca %struct.SkColorSpaceXformSteps, align 4
  %36 = getelementptr inbounds [64 x i8], [64 x i8]* %33, i64 0, i64 0
  store %"class.skvm::Builder"* %2, %"class.skvm::Builder"** %13, align 8
  store %"struct.skvm::Uniforms"* %9, %"struct.skvm::Uniforms"** %14, align 8
  %37 = bitcast %class.SkMatrix* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %37) #13
  %38 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 1
  %39 = bitcast %class.SkMatrix* %15 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %39, align 16
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 0, i64 4
  %41 = bitcast float* %40 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %41, align 16
  %42 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %42, align 16
  store i32 16, i32* %38, align 4
  %43 = bitcast %class.SkImageShader* %1 to %class.SkShaderBase*
  %44 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %6, i64 0, i32 2
  %45 = call zeroext i1 @_ZNK12SkShaderBase19computeTotalInverseERK8SkMatrixPS1_PS0_(%class.SkShaderBase* %43, %class.SkMatrix* dereferenceable(40) %44, %class.SkMatrix* %7, %class.SkMatrix* nonnull %15) #13
  br i1 %45, label %55, label %46

46:                                               ; preds = %11
  %47 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %47, align 8
  %48 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 1
  store i32 -1, i32* %48, align 8
  %49 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %49, align 8
  %50 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 1
  store i32 -1, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %51, align 8
  %52 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 1
  store i32 -1, i32* %52, align 8
  %53 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %53, align 8
  %54 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 1
  store i32 -1, i32* %54, align 8
  br label %416

55:                                               ; preds = %11
  %56 = load float, float* %42, align 16
  %57 = fcmp une float %56, 1.000000e+00
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZN8SkMatrix22doNormalizePerspectiveEv(%class.SkMatrix* nonnull %15) #13
  br label %59

59:                                               ; preds = %55, %58
  %60 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %60) #13
  %61 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %1, i64 0, i32 3, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %60, i8* align 8 %61, i64 20, i1 false)
  %62 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %1, i64 0, i32 2, i32 0
  %63 = load %class.SkImage*, %class.SkImage** %62, align 8
  %64 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %16, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = call %class.SkMipmapAccessor* @_ZN16SkMipmapAccessor4MakeEP12SkArenaAllocPK7SkImageRK8SkMatrix12SkMipmapMode(%class.SkArenaAlloc* %10, %class.SkImage* %63, %class.SkMatrix* nonnull dereferenceable(40) %15, i32 %65) #13
  %67 = icmp eq %class.SkMipmapAccessor* %66, null
  br i1 %67, label %68, label %77

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %69, align 8
  %70 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 1
  store i32 -1, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %71, align 8
  %72 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 1
  store i32 -1, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %73, align 8
  %74 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 1
  store i32 -1, i32* %74, align 8
  %75 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %75, align 8
  %76 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 1
  store i32 -1, i32* %76, align 8
  br label %415

77:                                               ; preds = %59
  %78 = bitcast %"struct.std::__1::pair"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %78) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* align 8 bitcast (%"struct.std::__1::pair"* @__const._ZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc. to i8*), i64 80, i1 false)
  %79 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %66, i64 0, i32 3
  %80 = bitcast %class.SkMipmapAccessor* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* nonnull align 8 %80, i64 16, i1 false) #13
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %66, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %83 = load %class.SkColorSpace*, %class.SkColorSpace** %82, align 8, !noalias !23
  %84 = icmp eq %class.SkColorSpace* %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %77
  %86 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 1 monotonic, !noalias !23
  br label %88

88:                                               ; preds = %77, %85
  store %class.SkColorSpace* %83, %class.SkColorSpace** %81, align 8, !alias.scope !23
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 0, i32 2, i32 0, i32 1
  %90 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %66, i64 0, i32 0, i32 2, i32 0, i32 1
  %91 = bitcast i32* %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !noalias !23
  %93 = bitcast i32* %89 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %93, align 8, !alias.scope !23
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1
  %95 = bitcast %class.SkMatrix* %94 to i8*
  %96 = bitcast %class.SkMatrix* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 4 %96, i64 40, i1 false) #13
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 0
  %98 = load i8, i8* %60, align 4, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %184

100:                                              ; preds = %88
  %101 = bitcast %class.SkMatrixProvider* %6 to i1 (%class.SkMatrixProvider*)***
  %102 = load i1 (%class.SkMatrixProvider*)**, i1 (%class.SkMatrixProvider*)*** %101, align 8
  %103 = getelementptr inbounds i1 (%class.SkMatrixProvider*)*, i1 (%class.SkMatrixProvider*)** %102, i64 3
  %104 = load i1 (%class.SkMatrixProvider*)*, i1 (%class.SkMatrixProvider*)** %103, align 8
  %105 = call zeroext i1 %104(%class.SkMatrixProvider* %6) #13
  br i1 %105, label %109, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %16, i64 0, i32 2
  %108 = load i32, i32* %107, align 4
  br label %145

109:                                              ; preds = %100
  %110 = getelementptr inbounds [3 x i8], [3 x i8]* %18, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %110)
  %111 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %16, i64 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = load i32, i32* %64, align 4
  %114 = icmp eq i32 %112, 1
  br i1 %114, label %115, label %140

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1, i32 1
  %117 = load i32, i32* %116, align 4, !noalias !28
  %118 = trunc i32 %117 to i8
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %115
  %121 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %94) #13, !noalias !28
  %122 = zext i8 %121 to i32
  store i32 %122, i32* %116, align 4, !noalias !28
  br label %123

123:                                              ; preds = %120, %115
  %124 = phi i32 [ %122, %120 ], [ %117, %115 ]
  %125 = and i32 %124, 14
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %140

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1, i32 0, i64 2
  %129 = load float, float* %128, align 8, !noalias !28
  %130 = fptosi float %129 to i32
  %131 = sitofp i32 %130 to float
  %132 = fcmp oeq float %129, %131
  br i1 %132, label %133, label %140

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1, i32 0, i64 5
  %135 = load float, float* %134, align 4, !noalias !28
  %136 = fptosi float %135 to i32
  %137 = sitofp i32 %136 to float
  %138 = fcmp oeq float %135, %137
  br i1 %138, label %139, label %140

139:                                              ; preds = %133
  br label %140

140:                                              ; preds = %109, %123, %127, %133, %139
  %141 = phi i32 [ 0, %139 ], [ 1, %133 ], [ 1, %127 ], [ 1, %123 ], [ %112, %109 ]
  store i8 0, i8* %60, align 4
  %142 = getelementptr inbounds i8, i8* %60, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %142, i8* nonnull align 1 %110, i64 3, i1 false)
  %143 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %16, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %143, align 4
  %144 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %16, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %144, align 4
  store i32 %141, i32* %111, align 4
  store i32 %113, i32* %64, align 4
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %110)
  br label %145

145:                                              ; preds = %106, %140
  %146 = phi i32 [ %108, %106 ], [ %141, %140 ]
  %147 = bitcast [3 x float]* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %147)
  %148 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1, i32 0, i64 0
  %149 = load float, float* %148, align 8
  %150 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1, i32 0, i64 1
  %151 = bitcast float* %150 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1, i32 0, i64 2
  %154 = load float, float* %153, align 8
  %155 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1, i32 0, i64 3
  %156 = bitcast float* %155 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1, i32 0, i64 4
  %159 = load float, float* %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1, i32 0, i64 5
  %161 = load float, float* %160, align 4
  %162 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1, i32 0, i64 6
  %163 = bitcast float* %162 to i8*
  %164 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1, i32 1
  %165 = load i32, i32* %164, align 4
  %166 = bitcast [3 x float]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %166)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %166, i8* align 8 %163, i64 12, i1 false)
  %167 = icmp eq i32 %146, 0
  br i1 %167, label %168, label %180

168:                                              ; preds = %145
  %169 = fcmp ult float %149, 0.000000e+00
  br i1 %169, label %173, label %170

170:                                              ; preds = %168
  %171 = call float @llvm.floor.f32(float %154) #13
  %172 = call float @nextafterf(float %154, float %171) #13, !noalias !31
  br label %173

173:                                              ; preds = %170, %168
  %174 = phi float [ %154, %168 ], [ %172, %170 ]
  %175 = phi i32 [ %165, %168 ], [ 128, %170 ]
  %176 = fcmp ult float %159, 0.000000e+00
  br i1 %176, label %180, label %177

177:                                              ; preds = %173
  %178 = call float @llvm.floor.f32(float %161) #13
  %179 = call float @nextafterf(float %161, float %178) #13, !noalias !31
  br label %180

180:                                              ; preds = %145, %173, %177
  %181 = phi float [ %174, %173 ], [ %174, %177 ], [ %154, %145 ]
  %182 = phi float [ %161, %173 ], [ %179, %177 ], [ %161, %145 ]
  %183 = phi i32 [ %175, %173 ], [ 128, %177 ], [ %165, %145 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %147, i8* nonnull align 8 %166, i64 12, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %166)
  store float %149, float* %148, align 8
  store i32 %152, i32* %151, align 4
  store float %181, float* %153, align 8
  store i32 %157, i32* %156, align 4
  store float %159, float* %158, align 8
  store float %182, float* %160, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* nonnull align 4 %147, i64 12, i1 false)
  store i32 %183, i32* %164, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %147)
  br label %184

184:                                              ; preds = %88, %180
  %185 = bitcast %class.SkPixmap* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %185) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 0, i64 40, i1 false) #13
  %186 = bitcast %class.SkMatrix* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %186) #13
  %187 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 1
  %188 = bitcast %class.SkMatrix* %21 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %188, align 16
  %189 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 0, i64 4
  %190 = bitcast float* %189 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %190, align 16
  %191 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %191, align 16
  store i32 16, i32* %187, align 4
  %192 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %66, i64 0, i32 2
  %193 = load float, float* %192, align 8
  %194 = fcmp ogt float %193, 0.000000e+00
  br i1 %194, label %195, label %229

195:                                              ; preds = %184
  %196 = bitcast { i8*, i64 }* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %196)
  %197 = bitcast %class.SkMatrix* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %197)
  %198 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %66, i64 0, i32 1
  %199 = bitcast %class.SkPixmap* %198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %196, i8* align 8 %199, i64 16, i1 false)
  %200 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %66, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %201 = load %class.SkColorSpace*, %class.SkColorSpace** %200, align 8, !noalias !34
  %202 = icmp eq %class.SkColorSpace* %201, null
  br i1 %202, label %209, label %203

203:                                              ; preds = %195
  %204 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %201, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = atomicrmw add i32* %204, i32 1 monotonic, !noalias !34
  %206 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %20, i64 0, i32 2, i32 0, i32 0, i32 0
  %207 = load %class.SkColorSpace*, %class.SkColorSpace** %206, align 8
  %208 = bitcast %class.SkColorSpace* %207 to i8*
  br label %209

209:                                              ; preds = %195, %203
  %210 = phi i8* [ null, %195 ], [ %208, %203 ]
  %211 = phi %class.SkColorSpace* [ null, %195 ], [ %207, %203 ]
  %212 = ptrtoint %class.SkColorSpace* %201 to i64
  %213 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %66, i64 0, i32 1, i32 2, i32 0, i32 1
  %214 = bitcast i32* %213 to <2 x i64>*
  %215 = load <2 x i64>, <2 x i64>* %214, align 8, !noalias !34
  %216 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %66, i64 0, i32 4
  %217 = bitcast %class.SkMatrix* %216 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %197, i8* align 4 %217, i64 40, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %185, i8* nonnull align 8 %196, i64 16, i1 false)
  %218 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %20, i64 0, i32 2
  %219 = bitcast %struct.SkImageInfo* %218 to i64*
  store i64 %212, i64* %219, align 8
  %220 = icmp eq %class.SkColorSpace* %211, null
  br i1 %220, label %226, label %221

221:                                              ; preds = %209
  %222 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %211, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = atomicrmw add i32* %222, i32 -1 acq_rel
  %224 = icmp eq i32 %223, 1
  br i1 %224, label %225, label %226

225:                                              ; preds = %221
  call void @_ZdlPv(i8* %210) #14
  br label %226

226:                                              ; preds = %225, %221, %209
  %227 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %20, i64 0, i32 2, i32 0, i32 1
  %228 = bitcast i32* %227 to <2 x i64>*
  store <2 x i64> %215, <2 x i64>* %228, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %186, i8* nonnull align 8 %197, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %196)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %197)
  br label %229

229:                                              ; preds = %226, %184
  %230 = phi %class.SkPixmap* [ %20, %226 ], [ null, %184 ]
  %231 = bitcast %"struct.skvm::Coord"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %231) #13
  %232 = bitcast %"struct.skvm::Coord"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %232, i8 -86, i64 32, i1 false)
  %233 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %13, align 8
  %234 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %14, align 8
  call void @_ZN12SkShaderBase11ApplyMatrixEPN4skvm7BuilderERK8SkMatrixNS0_5CoordEPNS0_8UniformsE(%"struct.skvm::Coord"* nonnull sret %24, %"class.skvm::Builder"* %233, %class.SkMatrix* dereferenceable(40) %94, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %4, %"struct.skvm::Uniforms"* %234) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #13
  store i8 -86, i8* %25, align 1
  %235 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 0, i32 2, i32 0, i32 2
  %236 = load i32, i32* %235, align 4
  %237 = icmp eq i32 %236, 1
  br i1 %237, label %242, label %238

238:                                              ; preds = %229
  %239 = load i32, i32* %89, align 8
  %240 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %239) #13
  %241 = zext i1 %240 to i8
  br label %242

242:                                              ; preds = %238, %229
  %243 = phi i8 [ 1, %229 ], [ %241, %238 ]
  store i8 %243, i8* %25, align 1
  %244 = bitcast %class.anon.116* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %244) #13
  %245 = getelementptr inbounds %class.anon.116, %class.anon.116* %26, i64 0, i32 0
  %246 = getelementptr inbounds %class.anon.116, %class.anon.116* %26, i64 0, i32 1
  store %"class.skvm::Builder"** %13, %"class.skvm::Builder"*** %245, align 8
  store %"struct.skvm::Uniforms"** %14, %"struct.skvm::Uniforms"*** %246, align 8
  %247 = bitcast %class.anon.117* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %247) #13
  %248 = getelementptr inbounds %class.anon.117, %class.anon.117* %27, i64 0, i32 0
  %249 = getelementptr inbounds %class.anon.117, %class.anon.117* %27, i64 0, i32 1
  %250 = getelementptr inbounds %class.anon.117, %class.anon.117* %27, i64 0, i32 2
  store %"class.skvm::Builder"** %13, %"class.skvm::Builder"*** %248, align 8
  store %"struct.skvm::Uniforms"** %14, %"struct.skvm::Uniforms"*** %249, align 8
  store %class.anon.116* %26, %class.anon.116** %250, align 8
  %251 = bitcast %class.anon.118* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %251) #13
  %252 = getelementptr inbounds %class.anon.118, %class.anon.118* %28, i64 0, i32 0
  %253 = getelementptr inbounds %class.anon.118, %class.anon.118* %28, i64 0, i32 1
  %254 = getelementptr inbounds %class.anon.118, %class.anon.118* %28, i64 0, i32 2
  store %class.SkImageShader* %1, %class.SkImageShader** %252, align 8
  store i8* %25, i8** %253, align 8
  store %"class.skvm::Builder"** %13, %"class.skvm::Builder"*** %254, align 8
  %255 = bitcast %class.anon.119* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %255) #13
  %256 = getelementptr inbounds %class.anon.119, %class.anon.119* %29, i64 0, i32 0
  %257 = getelementptr inbounds %class.anon.119, %class.anon.119* %29, i64 0, i32 1
  %258 = getelementptr inbounds %class.anon.119, %class.anon.119* %29, i64 0, i32 2
  %259 = getelementptr inbounds %class.anon.119, %class.anon.119* %29, i64 0, i32 3
  %260 = getelementptr inbounds %class.anon.119, %class.anon.119* %29, i64 0, i32 4
  store %class.anon.117* %27, %class.anon.117** %256, align 8
  store %struct.SkSamplingOptions* %16, %struct.SkSamplingOptions** %257, align 8
  store %"class.skvm::Builder"** %13, %"class.skvm::Builder"*** %258, align 8
  store %"struct.skvm::Uniforms"** %14, %"struct.skvm::Uniforms"*** %259, align 8
  store %class.anon.118* %28, %class.anon.118** %260, align 8
  %261 = bitcast %"struct.skvm::Color"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %261) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %261, i8 -86, i64 64, i1 false)
  call fastcc void @"_ZZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENK3$_5clERK8SkPixmapRS9_S3_"(%"struct.skvm::Color"* nonnull sret %30, %class.anon.119* nonnull %29, %class.SkPixmap* nonnull dereferenceable(40) %97, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %24)
  %262 = icmp eq %class.SkPixmap* %230, null
  br i1 %262, label %279, label %263

263:                                              ; preds = %242
  %264 = bitcast %"struct.skvm::Coord"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %264) #13
  %265 = bitcast %"struct.skvm::Coord"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %265, i8 -86, i64 32, i1 false)
  %266 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %13, align 8
  %267 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %14, align 8
  call void @_ZN12SkShaderBase11ApplyMatrixEPN4skvm7BuilderERK8SkMatrixNS0_5CoordEPNS0_8UniformsE(%"struct.skvm::Coord"* nonnull sret %31, %"class.skvm::Builder"* %266, %class.SkMatrix* nonnull dereferenceable(40) %21, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %4, %"struct.skvm::Uniforms"* %267) #13
  %268 = bitcast %"struct.skvm::Color"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %268) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 8 %261, i64 64, i1 false)
  call fastcc void @"_ZZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENK3$_5clERK8SkPixmapRS9_S3_"(%"struct.skvm::Color"* nonnull sret %34, %class.anon.119* nonnull %29, %class.SkPixmap* nonnull dereferenceable(40) %230, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %31)
  %269 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %13, align 8
  %270 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %14, align 8
  %271 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %270, float %193)
  %272 = trunc i64 %271 to i32
  %273 = lshr i64 %271, 32
  %274 = trunc i64 %273 to i32
  %275 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %269, i32 %272, i32 %274) #13
  %276 = extractvalue { %"class.skvm::Builder"*, i32 } %275, 0
  %277 = extractvalue { %"class.skvm::Builder"*, i32 } %275, 1
  %278 = bitcast [64 x i8]* %33 to %"struct.skvm::Color"*
  call void @_ZN4skvm7Builder4lerpENS_5ColorES1_NS_3F32E(%"struct.skvm::Color"* nonnull sret %32, %"class.skvm::Builder"* %276, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %278, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %34, %"class.skvm::Builder"* %276, i32 %277) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %261, i8* nonnull align 8 %268, i64 64, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %268) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #13
  br label %279

279:                                              ; preds = %242, %263
  %280 = load i8, i8* %25, align 1, !range !2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %297, label %282

282:                                              ; preds = %279
  %283 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %1, i64 0, i32 4
  %284 = load i32, i32* %283, align 4
  %285 = icmp eq i32 %284, 3
  br i1 %285, label %297, label %286

286:                                              ; preds = %282
  %287 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %1, i64 0, i32 5
  %288 = load i32, i32* %287, align 8
  %289 = icmp eq i32 %288, 3
  br i1 %289, label %297, label %290

290:                                              ; preds = %286
  %291 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %13, align 8
  %292 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %291, i32 1065353216) #13
  %293 = extractvalue { %"class.skvm::Builder"*, i32 } %292, 0
  %294 = extractvalue { %"class.skvm::Builder"*, i32 } %292, 1
  %295 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %30, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %293, %"class.skvm::Builder"** %295, align 8
  %296 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %30, i64 0, i32 3, i32 1
  store i32 %294, i32* %296, align 8
  br label %297

297:                                              ; preds = %286, %282, %279, %290
  %298 = load %class.SkColorSpace*, %class.SkColorSpace** %81, align 8
  %299 = load i32, i32* %235, align 4
  %300 = load i32, i32* %89, align 8
  switch i32 %300, label %301 [
    i32 0, label %314
    i32 1, label %302
    i32 2, label %314
    i32 3, label %314
    i32 4, label %314
    i32 5, label %314
    i32 6, label %314
    i32 7, label %314
    i32 9, label %314
    i32 8, label %314
    i32 10, label %314
    i32 11, label %314
    i32 12, label %314
    i32 13, label %314
    i32 14, label %314
    i32 15, label %314
    i32 18, label %302
    i32 19, label %314
    i32 16, label %302
    i32 17, label %314
    i32 20, label %314
  ]

301:                                              ; preds = %297
  call void @llvm.trap() #13
  unreachable

302:                                              ; preds = %297, %297, %297
  %303 = bitcast %"struct.skvm::Color"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %261, i8* nonnull align 8 %303, i64 12, i1 false)
  %304 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %5, i64 0, i32 1
  %305 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %30, i64 0, i32 1
  %306 = bitcast %"struct.skvm::F32"* %305 to i8*
  %307 = bitcast %"struct.skvm::F32"* %304 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %306, i8* align 8 %307, i64 12, i1 false)
  %308 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %5, i64 0, i32 2
  %309 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %30, i64 0, i32 2
  %310 = bitcast %"struct.skvm::F32"* %309 to i8*
  %311 = bitcast %"struct.skvm::F32"* %308 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %310, i8* align 8 %311, i64 12, i1 false)
  %312 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %8, i64 0, i32 0, i32 0
  %313 = load %class.SkColorSpace*, %class.SkColorSpace** %312, align 8
  br label %314

314:                                              ; preds = %297, %297, %297, %297, %297, %297, %297, %297, %297, %297, %297, %297, %297, %297, %297, %297, %297, %297, %302
  %315 = phi i32 [ 3, %302 ], [ %299, %297 ], [ %299, %297 ], [ %299, %297 ], [ %299, %297 ], [ %299, %297 ], [ %299, %297 ], [ %299, %297 ], [ %299, %297 ], [ %299, %297 ], [ %299, %297 ], [ %299, %297 ], [ %299, %297 ], [ %299, %297 ], [ %299, %297 ], [ %299, %297 ], [ %299, %297 ], [ %299, %297 ], [ %299, %297 ]
  %316 = phi %class.SkColorSpace* [ %313, %302 ], [ %298, %297 ], [ %298, %297 ], [ %298, %297 ], [ %298, %297 ], [ %298, %297 ], [ %298, %297 ], [ %298, %297 ], [ %298, %297 ], [ %298, %297 ], [ %298, %297 ], [ %298, %297 ], [ %298, %297 ], [ %298, %297 ], [ %298, %297 ], [ %298, %297 ], [ %298, %297 ], [ %298, %297 ], [ %298, %297 ]
  %317 = load i8, i8* %60, align 4, !range !2
  %318 = icmp eq i8 %317, 0
  br i1 %318, label %388, label %319

319:                                              ; preds = %314
  %320 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %30, i64 0, i32 3, i32 0
  %321 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %320, align 8
  %322 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %30, i64 0, i32 3, i32 1
  %323 = load i32, i32* %322, align 8
  %324 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %321, i32 0) #13
  %325 = extractvalue { %"class.skvm::Builder"*, i32 } %324, 0
  %326 = extractvalue { %"class.skvm::Builder"*, i32 } %324, 1
  %327 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %321, i32 1065353216) #13
  %328 = extractvalue { %"class.skvm::Builder"*, i32 } %327, 0
  %329 = extractvalue { %"class.skvm::Builder"*, i32 } %327, 1
  %330 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %321, %"class.skvm::Builder"* %321, i32 %323, %"class.skvm::Builder"* %328, i32 %329) #13
  %331 = extractvalue { %"class.skvm::Builder"*, i32 } %330, 0
  %332 = extractvalue { %"class.skvm::Builder"*, i32 } %330, 1
  %333 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %321, %"class.skvm::Builder"* %325, i32 %326, %"class.skvm::Builder"* %331, i32 %332) #13
  %334 = extractvalue { %"class.skvm::Builder"*, i32 } %333, 0
  %335 = extractvalue { %"class.skvm::Builder"*, i32 } %333, 1
  store %"class.skvm::Builder"* %334, %"class.skvm::Builder"** %320, align 8
  store i32 %335, i32* %322, align 8
  %336 = icmp eq i32 %315, 3
  br i1 %336, label %341, label %337

337:                                              ; preds = %319
  %338 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %1, i64 0, i32 6
  %339 = load i8, i8* %338, align 4, !range !2
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %346, label %341

341:                                              ; preds = %337, %319
  %342 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %13, align 8
  %343 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %342, i32 1065353216) #13
  %344 = extractvalue { %"class.skvm::Builder"*, i32 } %343, 0
  %345 = extractvalue { %"class.skvm::Builder"*, i32 } %343, 1
  br label %346

346:                                              ; preds = %337, %341
  %347 = phi %"class.skvm::Builder"* [ %344, %341 ], [ %334, %337 ]
  %348 = phi i32 [ %345, %341 ], [ %335, %337 ]
  %349 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %30, i64 0, i32 0, i32 0
  %350 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %349, align 8
  %351 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %30, i64 0, i32 0, i32 1
  %352 = load i32, i32* %351, align 8
  %353 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %350, i32 0) #13
  %354 = extractvalue { %"class.skvm::Builder"*, i32 } %353, 0
  %355 = extractvalue { %"class.skvm::Builder"*, i32 } %353, 1
  %356 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %350, %"class.skvm::Builder"* %350, i32 %352, %"class.skvm::Builder"* %347, i32 %348) #13
  %357 = extractvalue { %"class.skvm::Builder"*, i32 } %356, 0
  %358 = extractvalue { %"class.skvm::Builder"*, i32 } %356, 1
  %359 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %350, %"class.skvm::Builder"* %354, i32 %355, %"class.skvm::Builder"* %357, i32 %358) #13
  %360 = extractvalue { %"class.skvm::Builder"*, i32 } %359, 0
  %361 = extractvalue { %"class.skvm::Builder"*, i32 } %359, 1
  store %"class.skvm::Builder"* %360, %"class.skvm::Builder"** %349, align 8
  store i32 %361, i32* %351, align 8
  %362 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %30, i64 0, i32 1, i32 0
  %363 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %362, align 8
  %364 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %30, i64 0, i32 1, i32 1
  %365 = load i32, i32* %364, align 8
  %366 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %363, i32 0) #13
  %367 = extractvalue { %"class.skvm::Builder"*, i32 } %366, 0
  %368 = extractvalue { %"class.skvm::Builder"*, i32 } %366, 1
  %369 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %363, %"class.skvm::Builder"* %363, i32 %365, %"class.skvm::Builder"* %347, i32 %348) #13
  %370 = extractvalue { %"class.skvm::Builder"*, i32 } %369, 0
  %371 = extractvalue { %"class.skvm::Builder"*, i32 } %369, 1
  %372 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %363, %"class.skvm::Builder"* %367, i32 %368, %"class.skvm::Builder"* %370, i32 %371) #13
  %373 = extractvalue { %"class.skvm::Builder"*, i32 } %372, 0
  %374 = extractvalue { %"class.skvm::Builder"*, i32 } %372, 1
  store %"class.skvm::Builder"* %373, %"class.skvm::Builder"** %362, align 8
  store i32 %374, i32* %364, align 8
  %375 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %30, i64 0, i32 2, i32 0
  %376 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %375, align 8
  %377 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %30, i64 0, i32 2, i32 1
  %378 = load i32, i32* %377, align 8
  %379 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %376, i32 0) #13
  %380 = extractvalue { %"class.skvm::Builder"*, i32 } %379, 0
  %381 = extractvalue { %"class.skvm::Builder"*, i32 } %379, 1
  %382 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %376, %"class.skvm::Builder"* %376, i32 %378, %"class.skvm::Builder"* %347, i32 %348) #13
  %383 = extractvalue { %"class.skvm::Builder"*, i32 } %382, 0
  %384 = extractvalue { %"class.skvm::Builder"*, i32 } %382, 1
  %385 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %376, %"class.skvm::Builder"* %380, i32 %381, %"class.skvm::Builder"* %383, i32 %384) #13
  %386 = extractvalue { %"class.skvm::Builder"*, i32 } %385, 0
  %387 = extractvalue { %"class.skvm::Builder"*, i32 } %385, 1
  store %"class.skvm::Builder"* %386, %"class.skvm::Builder"** %375, align 8
  store i32 %387, i32* %377, align 8
  br label %388

388:                                              ; preds = %314, %346
  %389 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %35, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %389) #13
  %390 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %8, i64 0, i32 0, i32 0
  %391 = load %class.SkColorSpace*, %class.SkColorSpace** %390, align 8
  %392 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %8, i64 0, i32 2
  %393 = load i32, i32* %392, align 4
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %35, %class.SkColorSpace* %316, i32 %315, %class.SkColorSpace* %391, i32 %393) #13
  %394 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %13, align 8
  %395 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %14, align 8
  call void @_ZNK22SkColorSpaceXformSteps7programEPN4skvm7BuilderEPNS0_8UniformsENS0_5ColorE(%"struct.skvm::Color"* sret %0, %struct.SkColorSpaceXformSteps* nonnull %35, %"class.skvm::Builder"* %394, %"struct.skvm::Uniforms"* %395, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %30) #13
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %389) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %261) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %255) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %251) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %247) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %244) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %231) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %186) #13
  %396 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %20, i64 0, i32 2, i32 0, i32 0, i32 0
  %397 = load %class.SkColorSpace*, %class.SkColorSpace** %396, align 8
  %398 = icmp eq %class.SkColorSpace* %397, null
  br i1 %398, label %405, label %399

399:                                              ; preds = %388
  %400 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %397, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %401 = atomicrmw add i32* %400, i32 -1 acq_rel
  %402 = icmp eq i32 %401, 1
  br i1 %402, label %403, label %405

403:                                              ; preds = %399
  %404 = bitcast %class.SkColorSpace* %397 to i8*
  call void @_ZdlPv(i8* %404) #14
  br label %405

405:                                              ; preds = %388, %399, %403
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %185) #13
  %406 = load %class.SkColorSpace*, %class.SkColorSpace** %81, align 8
  %407 = icmp eq %class.SkColorSpace* %406, null
  br i1 %407, label %414, label %408

408:                                              ; preds = %405
  %409 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %406, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = atomicrmw add i32* %409, i32 -1 acq_rel
  %411 = icmp eq i32 %410, 1
  br i1 %411, label %412, label %414

412:                                              ; preds = %408
  %413 = bitcast %class.SkColorSpace* %406 to i8*
  call void @_ZdlPv(i8* %413) #14
  br label %414

414:                                              ; preds = %405, %408, %412
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %78) #13
  br label %415

415:                                              ; preds = %414, %68
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %60) #13
  br label %416

416:                                              ; preds = %415, %46
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %37) #13
  ret void
}

declare void @_ZN12SkShaderBase11ApplyMatrixEPN4skvm7BuilderERK8SkMatrixNS0_5CoordEPNS0_8UniformsE(%"struct.skvm::Coord"* sret, %"class.skvm::Builder"*, %class.SkMatrix* dereferenceable(40), %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Uniforms"*) local_unnamed_addr #2

declare zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENK3$_5clERK8SkPixmapRS9_S3_"(%"struct.skvm::Color"* noalias sret, %class.anon.119* nocapture readonly, %class.SkPixmap* dereferenceable(40), %"struct.skvm::Coord"* nocapture readonly byval(%"struct.skvm::Coord") align 8) unnamed_addr #6 align 2 {
  %5 = alloca %"struct.skvm::PixelFormat", align 4
  %6 = alloca %struct.Uniforms, align 8
  %7 = alloca [4 x %"struct.skvm::F32"], align 16
  %8 = alloca [4 x %"struct.skvm::F32"], align 16
  %9 = alloca %class.SkM44, align 4
  %10 = alloca %"struct.skvm::Color", align 8
  %11 = alloca %"struct.skvm::F32", align 8
  %12 = alloca %"struct.skvm::Color", align 8
  %13 = alloca %"struct.skvm::Color", align 8
  %14 = alloca %"struct.skvm::F32", align 8
  %15 = alloca %"struct.skvm::Color", align 8
  %16 = alloca %"struct.skvm::F32", align 8
  %17 = alloca %"struct.skvm::Color", align 8
  %18 = alloca %"struct.skvm::Color", align 8
  %19 = alloca %"struct.skvm::F32", align 8
  %20 = alloca %"struct.skvm::Color", align 8
  %21 = alloca %"struct.skvm::F32", align 8
  %22 = bitcast %struct.Uniforms* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %22) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 192, i1 false)
  %23 = getelementptr inbounds %class.anon.119, %class.anon.119* %1, i64 0, i32 0
  %24 = load %class.anon.117*, %class.anon.117** %23, align 8
  %25 = bitcast %"struct.skvm::PixelFormat"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %25) #13, !noalias !39
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %25, i8 -86, i64 36, i1 false) #13, !noalias !39
  %26 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 2, i32 0, i32 1
  %27 = load i32, i32* %26, align 8, !noalias !39
  call void @_ZN4skvm26SkColorType_to_PixelFormatE11SkColorType(%"struct.skvm::PixelFormat"* nonnull sret %5, i32 %27) #13, !noalias !39
  %28 = getelementptr inbounds %class.anon.117, %class.anon.117* %24, i64 0, i32 0
  %29 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %28, align 8, !noalias !39
  %30 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %29, align 8, !noalias !39
  %31 = getelementptr inbounds %class.anon.117, %class.anon.117* %24, i64 0, i32 1
  %32 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %31, align 8, !noalias !39
  %33 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %32, align 8, !noalias !39
  %34 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 2, i32 1, i32 0
  %35 = load i32, i32* %34, align 4, !noalias !39
  %36 = sitofp i32 %35 to float
  %37 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %33, float %36) #13, !noalias !39
  %38 = trunc i64 %37 to i32
  %39 = lshr i64 %37, 32
  %40 = trunc i64 %39 to i32
  %41 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %30, i32 %38, i32 %40) #13, !noalias !39
  %42 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 0, i32 0
  %43 = extractvalue { %"class.skvm::Builder"*, i32 } %41, 0
  store %"class.skvm::Builder"* %43, %"class.skvm::Builder"** %42, align 8, !alias.scope !39
  %44 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 0, i32 1
  %45 = extractvalue { %"class.skvm::Builder"*, i32 } %41, 1
  store i32 %45, i32* %44, align 8, !alias.scope !39
  %46 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %28, align 8, !noalias !39
  %47 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %46, align 8, !noalias !39
  %48 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %31, align 8, !noalias !39
  %49 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %48, align 8, !noalias !39
  %50 = load i32, i32* %34, align 4, !noalias !39
  %51 = sitofp i32 %50 to float
  %52 = fdiv float 1.000000e+00, %51
  %53 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %49, float %52) #13, !noalias !39
  %54 = trunc i64 %53 to i32
  %55 = lshr i64 %53, 32
  %56 = trunc i64 %55 to i32
  %57 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %47, i32 %54, i32 %56) #13, !noalias !39
  %58 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 1, i32 0
  %59 = extractvalue { %"class.skvm::Builder"*, i32 } %57, 0
  store %"class.skvm::Builder"* %59, %"class.skvm::Builder"** %58, align 8, !alias.scope !39
  %60 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 1, i32 1
  %61 = extractvalue { %"class.skvm::Builder"*, i32 } %57, 1
  store i32 %61, i32* %60, align 8, !alias.scope !39
  %62 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %28, align 8, !noalias !39
  %63 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %62, align 8, !noalias !39
  %64 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %31, align 8, !noalias !39
  %65 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %64, align 8, !noalias !39
  %66 = load i32, i32* %34, align 4, !noalias !39
  %67 = sitofp i32 %66 to float
  %68 = fdiv float 5.000000e-01, %67
  %69 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %65, float %68) #13, !noalias !39
  %70 = trunc i64 %69 to i32
  %71 = lshr i64 %69, 32
  %72 = trunc i64 %71 to i32
  %73 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %63, i32 %70, i32 %72) #13, !noalias !39
  %74 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 2, i32 0
  %75 = extractvalue { %"class.skvm::Builder"*, i32 } %73, 0
  store %"class.skvm::Builder"* %75, %"class.skvm::Builder"** %74, align 8, !alias.scope !39
  %76 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 2, i32 1
  %77 = extractvalue { %"class.skvm::Builder"*, i32 } %73, 1
  store i32 %77, i32* %76, align 8, !alias.scope !39
  %78 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %28, align 8, !noalias !39
  %79 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %78, align 8, !noalias !39
  %80 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %31, align 8, !noalias !39
  %81 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %80, align 8, !noalias !39
  %82 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 2, i32 1, i32 1
  %83 = load i32, i32* %82, align 4, !noalias !39
  %84 = sitofp i32 %83 to float
  %85 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %81, float %84) #13, !noalias !39
  %86 = trunc i64 %85 to i32
  %87 = lshr i64 %85, 32
  %88 = trunc i64 %87 to i32
  %89 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %79, i32 %86, i32 %88) #13, !noalias !39
  %90 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 3, i32 0
  %91 = extractvalue { %"class.skvm::Builder"*, i32 } %89, 0
  store %"class.skvm::Builder"* %91, %"class.skvm::Builder"** %90, align 8, !alias.scope !39
  %92 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 3, i32 1
  %93 = extractvalue { %"class.skvm::Builder"*, i32 } %89, 1
  store i32 %93, i32* %92, align 8, !alias.scope !39
  %94 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %28, align 8, !noalias !39
  %95 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %94, align 8, !noalias !39
  %96 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %31, align 8, !noalias !39
  %97 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %96, align 8, !noalias !39
  %98 = load i32, i32* %82, align 4, !noalias !39
  %99 = sitofp i32 %98 to float
  %100 = fdiv float 1.000000e+00, %99
  %101 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %97, float %100) #13, !noalias !39
  %102 = trunc i64 %101 to i32
  %103 = lshr i64 %101, 32
  %104 = trunc i64 %103 to i32
  %105 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %95, i32 %102, i32 %104) #13, !noalias !39
  %106 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 4, i32 0
  %107 = extractvalue { %"class.skvm::Builder"*, i32 } %105, 0
  store %"class.skvm::Builder"* %107, %"class.skvm::Builder"** %106, align 8, !alias.scope !39
  %108 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 4, i32 1
  %109 = extractvalue { %"class.skvm::Builder"*, i32 } %105, 1
  store i32 %109, i32* %108, align 8, !alias.scope !39
  %110 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %28, align 8, !noalias !39
  %111 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %110, align 8, !noalias !39
  %112 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %31, align 8, !noalias !39
  %113 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %112, align 8, !noalias !39
  %114 = load i32, i32* %82, align 4, !noalias !39
  %115 = sitofp i32 %114 to float
  %116 = fdiv float 5.000000e-01, %115
  %117 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %113, float %116) #13, !noalias !39
  %118 = trunc i64 %117 to i32
  %119 = lshr i64 %117, 32
  %120 = trunc i64 %119 to i32
  %121 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %111, i32 %118, i32 %120) #13, !noalias !39
  %122 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 5, i32 0
  %123 = extractvalue { %"class.skvm::Builder"*, i32 } %121, 0
  store %"class.skvm::Builder"* %123, %"class.skvm::Builder"** %122, align 8, !alias.scope !39
  %124 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 5, i32 1
  %125 = extractvalue { %"class.skvm::Builder"*, i32 } %121, 1
  store i32 %125, i32* %124, align 8, !alias.scope !39
  %126 = getelementptr inbounds %class.anon.117, %class.anon.117* %24, i64 0, i32 2
  %127 = load %class.anon.116*, %class.anon.116** %126, align 8, !noalias !39
  %128 = load i32, i32* %34, align 4, !noalias !39
  %129 = sitofp i32 %128 to float
  %130 = call fastcc { %"class.skvm::Builder"*, i32 } @"_ZZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENK3$_8clEf"(%class.anon.116* %127, float %129) #13, !noalias !39
  %131 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 6, i32 0
  %132 = extractvalue { %"class.skvm::Builder"*, i32 } %130, 0
  store %"class.skvm::Builder"* %132, %"class.skvm::Builder"** %131, align 8, !alias.scope !39
  %133 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 6, i32 1
  %134 = extractvalue { %"class.skvm::Builder"*, i32 } %130, 1
  store i32 %134, i32* %133, align 8, !alias.scope !39
  %135 = load %class.anon.116*, %class.anon.116** %126, align 8, !noalias !39
  %136 = load i32, i32* %82, align 4, !noalias !39
  %137 = sitofp i32 %136 to float
  %138 = call fastcc { %"class.skvm::Builder"*, i32 } @"_ZZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENK3$_8clEf"(%class.anon.116* %135, float %137) #13, !noalias !39
  %139 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 7, i32 0
  %140 = extractvalue { %"class.skvm::Builder"*, i32 } %138, 0
  store %"class.skvm::Builder"* %140, %"class.skvm::Builder"** %139, align 8, !alias.scope !39
  %141 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 7, i32 1
  %142 = extractvalue { %"class.skvm::Builder"*, i32 } %138, 1
  store i32 %142, i32* %141, align 8, !alias.scope !39
  %143 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 8
  %144 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %31, align 8, !noalias !39
  %145 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %144, align 8, !noalias !39
  %146 = bitcast %class.SkPixmap* %2 to i64*
  %147 = load i64, i64* %146, align 8, !noalias !39
  %148 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %145, i64 0, i32 1
  %149 = trunc i64 %147 to i32
  %150 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %145, i64 0, i32 1, i32 0, i32 1
  %151 = load i32*, i32** %150, align 8, !noalias !39
  %152 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %145, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8, !noalias !39
  %154 = icmp eq i32* %151, %153
  %155 = ptrtoint i32* %153 to i64
  br i1 %154, label %160, label %156

156:                                              ; preds = %4
  store i32 %149, i32* %151, align 4, !noalias !39
  %157 = getelementptr inbounds i32, i32* %151, i64 1
  %158 = ptrtoint i32* %157 to i64
  %159 = bitcast i32** %150 to i64*
  store i64 %158, i64* %159, align 8, !noalias !39
  br label %217

160:                                              ; preds = %4
  %161 = ptrtoint i32* %151 to i64
  %162 = bitcast i32** %150 to i64*
  %163 = bitcast %"class.std::__1::vector.109"* %148 to i64*
  %164 = load i64, i64* %163, align 8, !noalias !39
  %165 = sub i64 %161, %164
  %166 = ashr exact i64 %165, 2
  %167 = add nsw i64 %166, 1
  %168 = icmp ugt i64 %167, 4611686018427387903
  br i1 %168, label %169, label %171

169:                                              ; preds = %160
  %170 = bitcast %"class.std::__1::vector.109"* %148 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %170) #15, !noalias !39
  unreachable

171:                                              ; preds = %160
  %172 = bitcast i32** %152 to i64*
  %173 = sub i64 %155, %164
  %174 = ashr exact i64 %173, 2
  %175 = icmp ult i64 %174, 2305843009213693951
  br i1 %175, label %176, label %184

176:                                              ; preds = %171
  %177 = ashr exact i64 %173, 1
  %178 = icmp ult i64 %177, %167
  %179 = select i1 %178, i64 %167, i64 %177
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %189, label %181

181:                                              ; preds = %176
  %182 = icmp ugt i64 %179, 4611686018427387903
  br i1 %182, label %183, label %184

183:                                              ; preds = %181
  call void @abort() #15, !noalias !39
  unreachable

184:                                              ; preds = %181, %171
  %185 = phi i64 [ %179, %181 ], [ 4611686018427387903, %171 ]
  %186 = shl i64 %185, 2
  %187 = call i8* @_Znwm(i64 %186) #14, !noalias !39
  %188 = bitcast i8* %187 to i32*
  br label %189

189:                                              ; preds = %184, %176
  %190 = phi i64 [ %185, %184 ], [ 0, %176 ]
  %191 = phi i32* [ %188, %184 ], [ null, %176 ]
  %192 = getelementptr inbounds i32, i32* %191, i64 %166
  %193 = getelementptr inbounds i32, i32* %191, i64 %190
  %194 = ptrtoint i32* %193 to i64
  store i32 %149, i32* %192, align 4, !noalias !39
  %195 = getelementptr inbounds i32, i32* %192, i64 1
  %196 = ptrtoint i32* %195 to i64
  %197 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %148, i64 0, i32 0, i32 0
  %198 = load i32*, i32** %197, align 8, !noalias !39
  %199 = load i64, i64* %162, align 8, !noalias !39
  %200 = ptrtoint i32* %198 to i64
  %201 = sub i64 %199, %200
  %202 = ashr exact i64 %201, 2
  %203 = sub nsw i64 0, %202
  %204 = getelementptr inbounds i32, i32* %192, i64 %203
  %205 = ptrtoint i32* %204 to i64
  %206 = icmp sgt i64 %201, 0
  br i1 %206, label %207, label %211

207:                                              ; preds = %189
  %208 = bitcast i32* %204 to i8*
  %209 = bitcast i32* %198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %208, i8* align 4 %209, i64 %201, i1 false) #13, !noalias !39
  %210 = load i32*, i32** %197, align 8, !noalias !39
  br label %211

211:                                              ; preds = %207, %189
  %212 = phi i32* [ %198, %189 ], [ %210, %207 ]
  store i64 %205, i64* %163, align 8, !noalias !39
  store i64 %196, i64* %162, align 8, !noalias !39
  store i64 %194, i64* %172, align 8, !noalias !39
  %213 = icmp eq i32* %212, null
  br i1 %213, label %217, label %214

214:                                              ; preds = %211
  %215 = bitcast i32* %212 to i8*
  call void @_ZdlPv(i8* %215) #14, !noalias !39
  %216 = load i32*, i32** %150, align 8, !noalias !39
  br label %217

217:                                              ; preds = %214, %211, %156
  %218 = phi i32* [ %157, %156 ], [ %195, %211 ], [ %216, %214 ]
  %219 = lshr i64 %147, 32
  %220 = trunc i64 %219 to i32
  %221 = load i32*, i32** %152, align 8, !noalias !39
  %222 = icmp eq i32* %218, %221
  br i1 %222, label %228, label %223

223:                                              ; preds = %217
  store i32 %220, i32* %218, align 4, !noalias !39
  %224 = getelementptr inbounds i32, i32* %218, i64 1
  %225 = ptrtoint i32* %224 to i64
  %226 = bitcast i32** %150 to i64*
  store i64 %225, i64* %226, align 8, !noalias !39
  %227 = bitcast %"class.std::__1::vector.109"* %148 to i64*
  br label %283

228:                                              ; preds = %217
  %229 = ptrtoint i32* %218 to i64
  %230 = bitcast i32** %150 to i64*
  %231 = bitcast %"class.std::__1::vector.109"* %148 to i64*
  %232 = load i64, i64* %231, align 8, !noalias !39
  %233 = sub i64 %229, %232
  %234 = ashr exact i64 %233, 2
  %235 = add nsw i64 %234, 1
  %236 = icmp ugt i64 %235, 4611686018427387903
  br i1 %236, label %237, label %239

237:                                              ; preds = %228
  %238 = bitcast %"class.std::__1::vector.109"* %148 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %238) #15, !noalias !39
  unreachable

239:                                              ; preds = %228
  %240 = bitcast i32** %152 to i64*
  %241 = icmp ult i64 %234, 2305843009213693951
  br i1 %241, label %242, label %250

242:                                              ; preds = %239
  %243 = ashr exact i64 %233, 1
  %244 = icmp ult i64 %243, %235
  %245 = select i1 %244, i64 %235, i64 %243
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %255, label %247

247:                                              ; preds = %242
  %248 = icmp ugt i64 %245, 4611686018427387903
  br i1 %248, label %249, label %250

249:                                              ; preds = %247
  call void @abort() #15, !noalias !39
  unreachable

250:                                              ; preds = %247, %239
  %251 = phi i64 [ %245, %247 ], [ 4611686018427387903, %239 ]
  %252 = shl i64 %251, 2
  %253 = call i8* @_Znwm(i64 %252) #14, !noalias !39
  %254 = bitcast i8* %253 to i32*
  br label %255

255:                                              ; preds = %250, %242
  %256 = phi i64 [ %251, %250 ], [ 0, %242 ]
  %257 = phi i32* [ %254, %250 ], [ null, %242 ]
  %258 = getelementptr inbounds i32, i32* %257, i64 %234
  %259 = getelementptr inbounds i32, i32* %257, i64 %256
  %260 = ptrtoint i32* %259 to i64
  store i32 %220, i32* %258, align 4, !noalias !39
  %261 = getelementptr inbounds i32, i32* %258, i64 1
  %262 = ptrtoint i32* %261 to i64
  %263 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %148, i64 0, i32 0, i32 0
  %264 = load i32*, i32** %263, align 8, !noalias !39
  %265 = load i64, i64* %230, align 8, !noalias !39
  %266 = ptrtoint i32* %264 to i64
  %267 = sub i64 %265, %266
  %268 = ashr exact i64 %267, 2
  %269 = sub nsw i64 0, %268
  %270 = getelementptr inbounds i32, i32* %258, i64 %269
  %271 = ptrtoint i32* %270 to i64
  %272 = icmp sgt i64 %267, 0
  br i1 %272, label %273, label %277

273:                                              ; preds = %255
  %274 = bitcast i32* %270 to i8*
  %275 = bitcast i32* %264 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %274, i8* align 4 %275, i64 %267, i1 false) #13, !noalias !39
  %276 = load i32*, i32** %263, align 8, !noalias !39
  br label %277

277:                                              ; preds = %273, %255
  %278 = phi i32* [ %264, %255 ], [ %276, %273 ]
  store i64 %271, i64* %231, align 8, !noalias !39
  store i64 %262, i64* %230, align 8, !noalias !39
  store i64 %260, i64* %240, align 8, !noalias !39
  %279 = icmp eq i32* %278, null
  br i1 %279, label %283, label %280

280:                                              ; preds = %277
  %281 = bitcast i32* %278 to i8*
  call void @_ZdlPv(i8* %281) #14, !noalias !39
  %282 = load i64, i64* %230, align 8, !noalias !39
  br label %283

283:                                              ; preds = %280, %277, %223
  %284 = phi i64* [ %227, %223 ], [ %231, %277 ], [ %231, %280 ]
  %285 = phi i64 [ %225, %223 ], [ %262, %277 ], [ %282, %280 ]
  %286 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %145, i64 0, i32 0, i32 0
  %287 = load i32, i32* %286, align 8, !noalias !39
  %288 = load i64, i64* %284, align 8, !noalias !39
  %289 = sub i64 %285, %288
  %290 = shl i64 %289, 32
  %291 = add i64 %290, -34359738368
  %292 = zext i32 %287 to i64
  %293 = or i64 %291, %292
  %294 = bitcast %"struct.skvm::Uniform"* %143 to i64*
  store i64 %293, i64* %294, align 8, !alias.scope !39
  %295 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %28, align 8, !noalias !39
  %296 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %295, align 8, !noalias !39
  %297 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %31, align 8, !noalias !39
  %298 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %297, align 8, !noalias !39
  %299 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 1
  %300 = load i64, i64* %299, align 8, !noalias !39
  %301 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 2, i32 0
  %302 = call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %301) #13, !noalias !39
  %303 = zext i32 %302 to i64
  %304 = lshr i64 %300, %303
  %305 = trunc i64 %304 to i32
  %306 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %298, i64 0, i32 1
  %307 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %298, i64 0, i32 1, i32 0, i32 1
  %308 = load i32*, i32** %307, align 8, !noalias !39
  %309 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %298, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %310 = load i32*, i32** %309, align 8, !noalias !39
  %311 = icmp eq i32* %308, %310
  %312 = ptrtoint i32* %310 to i64
  br i1 %311, label %318, label %313

313:                                              ; preds = %283
  store i32 %305, i32* %308, align 4, !noalias !39
  %314 = getelementptr inbounds i32, i32* %308, i64 1
  %315 = ptrtoint i32* %314 to i64
  %316 = bitcast i32** %307 to i64*
  store i64 %315, i64* %316, align 8, !noalias !39
  %317 = bitcast %"class.std::__1::vector.109"* %306 to i64*
  br label %375

318:                                              ; preds = %283
  %319 = ptrtoint i32* %308 to i64
  %320 = bitcast i32** %307 to i64*
  %321 = bitcast %"class.std::__1::vector.109"* %306 to i64*
  %322 = load i64, i64* %321, align 8, !noalias !39
  %323 = sub i64 %319, %322
  %324 = ashr exact i64 %323, 2
  %325 = add nsw i64 %324, 1
  %326 = icmp ugt i64 %325, 4611686018427387903
  br i1 %326, label %327, label %329

327:                                              ; preds = %318
  %328 = bitcast %"class.std::__1::vector.109"* %306 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %328) #15, !noalias !39
  unreachable

329:                                              ; preds = %318
  %330 = bitcast i32** %309 to i64*
  %331 = sub i64 %312, %322
  %332 = ashr exact i64 %331, 2
  %333 = icmp ult i64 %332, 2305843009213693951
  br i1 %333, label %334, label %342

334:                                              ; preds = %329
  %335 = ashr exact i64 %331, 1
  %336 = icmp ult i64 %335, %325
  %337 = select i1 %336, i64 %325, i64 %335
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %347, label %339

339:                                              ; preds = %334
  %340 = icmp ugt i64 %337, 4611686018427387903
  br i1 %340, label %341, label %342

341:                                              ; preds = %339
  call void @abort() #15, !noalias !39
  unreachable

342:                                              ; preds = %339, %329
  %343 = phi i64 [ %337, %339 ], [ 4611686018427387903, %329 ]
  %344 = shl i64 %343, 2
  %345 = call i8* @_Znwm(i64 %344) #14, !noalias !39
  %346 = bitcast i8* %345 to i32*
  br label %347

347:                                              ; preds = %342, %334
  %348 = phi i64 [ %343, %342 ], [ 0, %334 ]
  %349 = phi i32* [ %346, %342 ], [ null, %334 ]
  %350 = getelementptr inbounds i32, i32* %349, i64 %324
  %351 = getelementptr inbounds i32, i32* %349, i64 %348
  %352 = ptrtoint i32* %351 to i64
  store i32 %305, i32* %350, align 4, !noalias !39
  %353 = getelementptr inbounds i32, i32* %350, i64 1
  %354 = ptrtoint i32* %353 to i64
  %355 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %306, i64 0, i32 0, i32 0
  %356 = load i32*, i32** %355, align 8, !noalias !39
  %357 = load i64, i64* %320, align 8, !noalias !39
  %358 = ptrtoint i32* %356 to i64
  %359 = sub i64 %357, %358
  %360 = ashr exact i64 %359, 2
  %361 = sub nsw i64 0, %360
  %362 = getelementptr inbounds i32, i32* %350, i64 %361
  %363 = ptrtoint i32* %362 to i64
  %364 = icmp sgt i64 %359, 0
  br i1 %364, label %365, label %369

365:                                              ; preds = %347
  %366 = bitcast i32* %362 to i8*
  %367 = bitcast i32* %356 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %366, i8* align 4 %367, i64 %359, i1 false) #13, !noalias !39
  %368 = load i32*, i32** %355, align 8, !noalias !39
  br label %369

369:                                              ; preds = %365, %347
  %370 = phi i32* [ %356, %347 ], [ %368, %365 ]
  store i64 %363, i64* %321, align 8, !noalias !39
  store i64 %354, i64* %320, align 8, !noalias !39
  store i64 %352, i64* %330, align 8, !noalias !39
  %371 = icmp eq i32* %370, null
  br i1 %371, label %375, label %372

372:                                              ; preds = %369
  %373 = bitcast i32* %370 to i8*
  call void @_ZdlPv(i8* %373) #14, !noalias !39
  %374 = load i64, i64* %320, align 8, !noalias !39
  br label %375

375:                                              ; preds = %313, %369, %372
  %376 = phi i64* [ %317, %313 ], [ %321, %369 ], [ %321, %372 ]
  %377 = phi i64 [ %315, %313 ], [ %354, %369 ], [ %374, %372 ]
  %378 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %298, i64 0, i32 0, i32 0
  %379 = load i32, i32* %378, align 8, !noalias !39
  %380 = load i64, i64* %376, align 8, !noalias !39
  %381 = sub i64 %377, %380
  %382 = shl i64 %381, 32
  %383 = add i64 %382, -17179869184
  %384 = lshr exact i64 %383, 32
  %385 = trunc i64 %384 to i32
  %386 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %296, i32 %379, i32 %385) #13, !noalias !39
  %387 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 9, i32 0
  %388 = extractvalue { %"class.skvm::Builder"*, i32 } %386, 0
  store %"class.skvm::Builder"* %388, %"class.skvm::Builder"** %387, align 8, !alias.scope !39
  %389 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 9, i32 1
  %390 = extractvalue { %"class.skvm::Builder"*, i32 } %386, 1
  store i32 %390, i32* %389, align 8, !alias.scope !39
  %391 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 10
  %392 = bitcast %"struct.skvm::PixelFormat"* %391 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %392, i8* nonnull align 4 %25, i64 36, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %25) #13, !noalias !39
  %393 = getelementptr inbounds %class.anon.119, %class.anon.119* %1, i64 0, i32 1
  %394 = load %struct.SkSamplingOptions*, %struct.SkSamplingOptions** %393, align 8
  %395 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %394, i64 0, i32 0
  %396 = load i8, i8* %395, align 4, !range !2
  %397 = icmp eq i8 %396, 0
  br i1 %397, label %765, label %398

398:                                              ; preds = %375
  %399 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 0, i32 0
  %400 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %399, align 8
  %401 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 0, i32 1
  %402 = load i32, i32* %401, align 8
  %403 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %400, i32 1056964608) #13
  %404 = extractvalue { %"class.skvm::Builder"*, i32 } %403, 0
  %405 = extractvalue { %"class.skvm::Builder"*, i32 } %403, 1
  %406 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %400, %"class.skvm::Builder"* %400, i32 %402, %"class.skvm::Builder"* %404, i32 %405) #13
  %407 = extractvalue { %"class.skvm::Builder"*, i32 } %406, 0
  %408 = extractvalue { %"class.skvm::Builder"*, i32 } %406, 1
  %409 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5floorENS_3F32E(%"class.skvm::Builder"* %407, %"class.skvm::Builder"* %407, i32 %408) #13
  %410 = extractvalue { %"class.skvm::Builder"*, i32 } %409, 0
  %411 = extractvalue { %"class.skvm::Builder"*, i32 } %409, 1
  %412 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %407, %"class.skvm::Builder"* %407, i32 %408, %"class.skvm::Builder"* %410, i32 %411) #13
  %413 = extractvalue { %"class.skvm::Builder"*, i32 } %412, 0
  %414 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 1, i32 0
  %415 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %414, align 8
  %416 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 1, i32 1
  %417 = load i32, i32* %416, align 8
  %418 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %415, i32 1056964608) #13
  %419 = extractvalue { %"class.skvm::Builder"*, i32 } %418, 0
  %420 = extractvalue { %"class.skvm::Builder"*, i32 } %418, 1
  %421 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %415, %"class.skvm::Builder"* %415, i32 %417, %"class.skvm::Builder"* %419, i32 %420) #13
  %422 = extractvalue { %"class.skvm::Builder"*, i32 } %421, 0
  %423 = extractvalue { %"class.skvm::Builder"*, i32 } %421, 1
  %424 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5floorENS_3F32E(%"class.skvm::Builder"* %422, %"class.skvm::Builder"* %422, i32 %423) #13
  %425 = extractvalue { %"class.skvm::Builder"*, i32 } %424, 0
  %426 = extractvalue { %"class.skvm::Builder"*, i32 } %424, 1
  %427 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %422, %"class.skvm::Builder"* %422, i32 %423, %"class.skvm::Builder"* %425, i32 %426) #13
  %428 = extractvalue { %"class.skvm::Builder"*, i32 } %427, 0
  %429 = bitcast [4 x %"struct.skvm::F32"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %429) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %429, i8 -86, i64 64, i1 false)
  %430 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %7, i64 0, i64 0, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %430, align 16
  %431 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %7, i64 0, i64 0, i32 1
  store i32 -1, i32* %431, align 8
  %432 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %7, i64 0, i64 1, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %432, align 16
  %433 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %7, i64 0, i64 1, i32 1
  store i32 -1, i32* %433, align 8
  %434 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %7, i64 0, i64 2, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %434, align 16
  %435 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %7, i64 0, i64 2, i32 1
  store i32 -1, i32* %435, align 8
  %436 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %7, i64 0, i64 3, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %436, align 16
  %437 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %7, i64 0, i64 3, i32 1
  store i32 -1, i32* %437, align 8
  %438 = extractvalue { %"class.skvm::Builder"*, i32 } %412, 1
  %439 = extractvalue { %"class.skvm::Builder"*, i32 } %427, 1
  %440 = bitcast [4 x %"struct.skvm::F32"]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %440) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %440, i8 -86, i64 64, i1 false)
  %441 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %8, i64 0, i64 0, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %441, align 16
  %442 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %8, i64 0, i64 0, i32 1
  store i32 -1, i32* %442, align 8
  %443 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %8, i64 0, i64 1, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %443, align 16
  %444 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %8, i64 0, i64 1, i32 1
  store i32 -1, i32* %444, align 8
  %445 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %8, i64 0, i64 2, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %445, align 16
  %446 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %8, i64 0, i64 2, i32 1
  store i32 -1, i32* %446, align 8
  %447 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %8, i64 0, i64 3, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %447, align 16
  %448 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %8, i64 0, i64 3, i32 1
  store i32 -1, i32* %448, align 8
  %449 = bitcast %class.SkM44* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %449) #13
  %450 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 1
  %451 = bitcast float* %450 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %451, i8 -1, i64 60, i1 false)
  %452 = load %struct.SkSamplingOptions*, %struct.SkSamplingOptions** %393, align 8
  %453 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %452, i64 0, i32 1, i32 0
  %454 = load float, float* %453, align 4
  %455 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %452, i64 0, i32 1, i32 1
  %456 = load float, float* %455, align 4
  %457 = fmul float %454, 0x3FC5555560000000
  %458 = fmul float %454, -5.000000e-01
  %459 = fsub float %458, %456
  %460 = fmul float %454, 5.000000e-01
  %461 = fmul float %456, 2.000000e+00
  %462 = fadd float %460, %461
  %463 = fmul float %454, 0xBFC5555560000000
  %464 = fmul float %454, 0x3FD5555560000000
  %465 = fsub float 1.000000e+00, %464
  %466 = fmul float %454, 2.000000e+00
  %467 = fadd float %466, -3.000000e+00
  %468 = fadd float %456, %467
  %469 = fmul float %454, 1.500000e+00
  %470 = fsub float 2.000000e+00, %469
  %471 = fadd float %460, %456
  %472 = fmul float %454, 2.500000e+00
  %473 = fsub float 3.000000e+00, %472
  %474 = fadd float %469, -2.000000e+00
  %475 = fadd float %456, %474
  %476 = insertelement <4 x float> <float undef, float -0.000000e+00, float undef, float undef>, float %473, i32 0
  %477 = insertelement <4 x float> %476, float %463, i32 2
  %478 = insertelement <4 x float> %477, float %470, i32 3
  %479 = insertelement <2 x float> undef, float %461, i32 0
  %480 = insertelement <2 x float> %479, float %456, i32 1
  %481 = shufflevector <2 x float> %480, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 1>
  %482 = fsub <4 x float> %478, %481
  %483 = fadd float %457, %456
  %484 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 0
  store float %457, float* %484, align 4, !alias.scope !42
  %485 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 1
  store float %465, float* %485, align 4, !alias.scope !42
  %486 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 2
  store float %457, float* %486, align 4, !alias.scope !42
  %487 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 3
  store float 0.000000e+00, float* %487, align 4, !alias.scope !42
  %488 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 4
  store float %459, float* %488, align 4, !alias.scope !42
  %489 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 5
  store float 0.000000e+00, float* %489, align 4, !alias.scope !42
  %490 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 6
  store float %471, float* %490, align 4, !alias.scope !42
  %491 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 7
  store float 0.000000e+00, float* %491, align 4, !alias.scope !42
  %492 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 8
  store float %462, float* %492, align 4, !alias.scope !42
  %493 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 9
  store float %468, float* %493, align 4, !alias.scope !42
  %494 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 10
  %495 = bitcast float* %494 to <4 x float>*
  store <4 x float> %482, <4 x float>* %495, align 4, !alias.scope !42
  %496 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 14
  store float %475, float* %496, align 4, !alias.scope !42
  %497 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 15
  store float %483, float* %497, align 4, !alias.scope !42
  %498 = getelementptr inbounds %class.anon.119, %class.anon.119* %1, i64 0, i32 2
  %499 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %498, align 8
  %500 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %499, align 8
  %501 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %500, i32 1065353216) #13
  %502 = extractvalue { %"class.skvm::Builder"*, i32 } %501, 0
  %503 = extractvalue { %"class.skvm::Builder"*, i32 } %501, 1
  %504 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %413, %"class.skvm::Builder"* %413, i32 %438, %"class.skvm::Builder"* %413, i32 %438) #13
  %505 = extractvalue { %"class.skvm::Builder"*, i32 } %504, 0
  %506 = extractvalue { %"class.skvm::Builder"*, i32 } %504, 1
  %507 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %413, %"class.skvm::Builder"* %413, i32 %438, %"class.skvm::Builder"* %413, i32 %438) #13
  %508 = extractvalue { %"class.skvm::Builder"*, i32 } %507, 0
  %509 = extractvalue { %"class.skvm::Builder"*, i32 } %507, 1
  %510 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %508, %"class.skvm::Builder"* %508, i32 %509, %"class.skvm::Builder"* %413, i32 %438) #13
  %511 = extractvalue { %"class.skvm::Builder"*, i32 } %510, 0
  %512 = extractvalue { %"class.skvm::Builder"*, i32 } %510, 1
  %513 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %498, align 8
  %514 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %513, align 8
  %515 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %514, i32 1065353216) #13
  %516 = extractvalue { %"class.skvm::Builder"*, i32 } %515, 0
  %517 = extractvalue { %"class.skvm::Builder"*, i32 } %515, 1
  %518 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %428, %"class.skvm::Builder"* %428, i32 %439, %"class.skvm::Builder"* %428, i32 %439) #13
  %519 = extractvalue { %"class.skvm::Builder"*, i32 } %518, 0
  %520 = extractvalue { %"class.skvm::Builder"*, i32 } %518, 1
  %521 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %428, %"class.skvm::Builder"* %428, i32 %439, %"class.skvm::Builder"* %428, i32 %439) #13
  %522 = extractvalue { %"class.skvm::Builder"*, i32 } %521, 0
  %523 = extractvalue { %"class.skvm::Builder"*, i32 } %521, 1
  %524 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %522, %"class.skvm::Builder"* %522, i32 %523, %"class.skvm::Builder"* %428, i32 %439) #13
  %525 = extractvalue { %"class.skvm::Builder"*, i32 } %524, 0
  %526 = extractvalue { %"class.skvm::Builder"*, i32 } %524, 1
  %527 = getelementptr inbounds %class.anon.119, %class.anon.119* %1, i64 0, i32 3
  br label %576

528:                                              ; preds = %576
  %529 = bitcast %"struct.skvm::Color"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %529, i8 -86, i64 64, i1 false)
  %530 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %530, align 8
  %531 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 1
  store i32 -1, i32* %531, align 8
  %532 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %532, align 8
  %533 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 1
  store i32 -1, i32* %533, align 8
  %534 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %534, align 8
  %535 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 1
  store i32 -1, i32* %535, align 8
  %536 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %536, align 8
  %537 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 1
  store i32 -1, i32* %537, align 8
  %538 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %498, align 8
  %539 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %538, align 8
  %540 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %539, i32 0) #13
  %541 = extractvalue { %"class.skvm::Builder"*, i32 } %540, 0
  %542 = extractvalue { %"class.skvm::Builder"*, i32 } %540, 1
  %543 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3
  store %"class.skvm::Builder"* %541, %"class.skvm::Builder"** %536, align 8
  store i32 %542, i32* %537, align 8
  %544 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2
  %545 = bitcast %"struct.skvm::F32"* %544 to i8*
  %546 = bitcast %"struct.skvm::F32"* %543 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %545, i8* align 8 %546, i64 12, i1 false)
  %547 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1
  %548 = bitcast %"struct.skvm::F32"* %547 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %548, i8* align 8 %546, i64 12, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %529, i8* align 8 %546, i64 12, i1 false)
  %549 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %414, align 8
  %550 = load i32, i32* %416, align 8
  %551 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %549, i32 1069547520) #13
  %552 = extractvalue { %"class.skvm::Builder"*, i32 } %551, 0
  %553 = extractvalue { %"class.skvm::Builder"*, i32 } %551, 1
  %554 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %549, %"class.skvm::Builder"* %549, i32 %550, %"class.skvm::Builder"* %552, i32 %553) #13
  %555 = extractvalue { %"class.skvm::Builder"*, i32 } %554, 0
  %556 = extractvalue { %"class.skvm::Builder"*, i32 } %554, 1
  %557 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %399, align 8
  %558 = load i32, i32* %401, align 8
  %559 = bitcast %"struct.skvm::Color"* %10 to i8*
  %560 = getelementptr inbounds %class.anon.119, %class.anon.119* %1, i64 0, i32 4
  %561 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %11, i64 0, i32 0
  %562 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %11, i64 0, i32 1
  %563 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %11, i64 0, i32 2, i64 0
  %564 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %10, i64 0, i32 0, i32 0
  %565 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %10, i64 0, i32 0, i32 1
  %566 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %10, i64 0, i32 1, i32 0
  %567 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %10, i64 0, i32 1, i32 1
  %568 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %547, i64 0, i32 0
  %569 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %10, i64 0, i32 2, i32 0
  %570 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %10, i64 0, i32 2, i32 1
  %571 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %544, i64 0, i32 0
  %572 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %10, i64 0, i32 3, i32 0
  %573 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %10, i64 0, i32 3, i32 1
  %574 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %543, i64 0, i32 0
  %575 = bitcast i8* %563 to i32*
  br label %682

576:                                              ; preds = %576, %398
  %577 = phi i64 [ 0, %398 ], [ %679, %576 ]
  %578 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 %577
  %579 = load float, float* %578, align 4
  %580 = add nuw nsw i64 %577, 4
  %581 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 %580
  %582 = load float, float* %581, align 4
  %583 = add nuw nsw i64 %577, 8
  %584 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 %583
  %585 = load float, float* %584, align 4
  %586 = add nuw nsw i64 %577, 12
  %587 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 %586
  %588 = load float, float* %587, align 4
  %589 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %498, align 8
  %590 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %589, align 8
  %591 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %527, align 8
  %592 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %591, align 8
  %593 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %592, float %579)
  %594 = trunc i64 %593 to i32
  %595 = lshr i64 %593, 32
  %596 = trunc i64 %595 to i32
  %597 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %590, i32 %594, i32 %596) #13
  %598 = extractvalue { %"class.skvm::Builder"*, i32 } %597, 0
  %599 = extractvalue { %"class.skvm::Builder"*, i32 } %597, 1
  %600 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %498, align 8
  %601 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %600, align 8
  %602 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %527, align 8
  %603 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %602, align 8
  %604 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %603, float %582)
  %605 = trunc i64 %604 to i32
  %606 = lshr i64 %604, 32
  %607 = trunc i64 %606 to i32
  %608 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %601, i32 %605, i32 %607) #13
  %609 = extractvalue { %"class.skvm::Builder"*, i32 } %608, 0
  %610 = extractvalue { %"class.skvm::Builder"*, i32 } %608, 1
  %611 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %498, align 8
  %612 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %611, align 8
  %613 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %527, align 8
  %614 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %613, align 8
  %615 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %614, float %585)
  %616 = trunc i64 %615 to i32
  %617 = lshr i64 %615, 32
  %618 = trunc i64 %617 to i32
  %619 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %612, i32 %616, i32 %618) #13
  %620 = extractvalue { %"class.skvm::Builder"*, i32 } %619, 0
  %621 = extractvalue { %"class.skvm::Builder"*, i32 } %619, 1
  %622 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %498, align 8
  %623 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %622, align 8
  %624 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %527, align 8
  %625 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %624, align 8
  %626 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %625, float %588)
  %627 = trunc i64 %626 to i32
  %628 = lshr i64 %626, 32
  %629 = trunc i64 %628 to i32
  %630 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %623, i32 %627, i32 %629) #13
  %631 = extractvalue { %"class.skvm::Builder"*, i32 } %630, 0
  %632 = extractvalue { %"class.skvm::Builder"*, i32 } %630, 1
  %633 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %598, %"class.skvm::Builder"* %598, i32 %599, %"class.skvm::Builder"* %502, i32 %503) #13
  %634 = extractvalue { %"class.skvm::Builder"*, i32 } %633, 0
  %635 = extractvalue { %"class.skvm::Builder"*, i32 } %633, 1
  %636 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %609, %"class.skvm::Builder"* %609, i32 %610, %"class.skvm::Builder"* %413, i32 %438) #13
  %637 = extractvalue { %"class.skvm::Builder"*, i32 } %636, 0
  %638 = extractvalue { %"class.skvm::Builder"*, i32 } %636, 1
  %639 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %634, %"class.skvm::Builder"* %634, i32 %635, %"class.skvm::Builder"* %637, i32 %638) #13
  %640 = extractvalue { %"class.skvm::Builder"*, i32 } %639, 0
  %641 = extractvalue { %"class.skvm::Builder"*, i32 } %639, 1
  %642 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %620, %"class.skvm::Builder"* %620, i32 %621, %"class.skvm::Builder"* %505, i32 %506) #13
  %643 = extractvalue { %"class.skvm::Builder"*, i32 } %642, 0
  %644 = extractvalue { %"class.skvm::Builder"*, i32 } %642, 1
  %645 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %640, %"class.skvm::Builder"* %640, i32 %641, %"class.skvm::Builder"* %643, i32 %644) #13
  %646 = extractvalue { %"class.skvm::Builder"*, i32 } %645, 0
  %647 = extractvalue { %"class.skvm::Builder"*, i32 } %645, 1
  %648 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %631, %"class.skvm::Builder"* %631, i32 %632, %"class.skvm::Builder"* %511, i32 %512) #13
  %649 = extractvalue { %"class.skvm::Builder"*, i32 } %648, 0
  %650 = extractvalue { %"class.skvm::Builder"*, i32 } %648, 1
  %651 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %646, %"class.skvm::Builder"* %646, i32 %647, %"class.skvm::Builder"* %649, i32 %650) #13
  %652 = extractvalue { %"class.skvm::Builder"*, i32 } %651, 0
  %653 = extractvalue { %"class.skvm::Builder"*, i32 } %651, 1
  %654 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %7, i64 0, i64 %577, i32 0
  store %"class.skvm::Builder"* %652, %"class.skvm::Builder"** %654, align 16
  %655 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %7, i64 0, i64 %577, i32 1
  store i32 %653, i32* %655, align 8
  %656 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %598, %"class.skvm::Builder"* %598, i32 %599, %"class.skvm::Builder"* %516, i32 %517) #13
  %657 = extractvalue { %"class.skvm::Builder"*, i32 } %656, 0
  %658 = extractvalue { %"class.skvm::Builder"*, i32 } %656, 1
  %659 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %609, %"class.skvm::Builder"* %609, i32 %610, %"class.skvm::Builder"* %428, i32 %439) #13
  %660 = extractvalue { %"class.skvm::Builder"*, i32 } %659, 0
  %661 = extractvalue { %"class.skvm::Builder"*, i32 } %659, 1
  %662 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %657, %"class.skvm::Builder"* %657, i32 %658, %"class.skvm::Builder"* %660, i32 %661) #13
  %663 = extractvalue { %"class.skvm::Builder"*, i32 } %662, 0
  %664 = extractvalue { %"class.skvm::Builder"*, i32 } %662, 1
  %665 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %620, %"class.skvm::Builder"* %620, i32 %621, %"class.skvm::Builder"* %519, i32 %520) #13
  %666 = extractvalue { %"class.skvm::Builder"*, i32 } %665, 0
  %667 = extractvalue { %"class.skvm::Builder"*, i32 } %665, 1
  %668 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %663, %"class.skvm::Builder"* %663, i32 %664, %"class.skvm::Builder"* %666, i32 %667) #13
  %669 = extractvalue { %"class.skvm::Builder"*, i32 } %668, 0
  %670 = extractvalue { %"class.skvm::Builder"*, i32 } %668, 1
  %671 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %631, %"class.skvm::Builder"* %631, i32 %632, %"class.skvm::Builder"* %525, i32 %526) #13
  %672 = extractvalue { %"class.skvm::Builder"*, i32 } %671, 0
  %673 = extractvalue { %"class.skvm::Builder"*, i32 } %671, 1
  %674 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %669, %"class.skvm::Builder"* %669, i32 %670, %"class.skvm::Builder"* %672, i32 %673) #13
  %675 = extractvalue { %"class.skvm::Builder"*, i32 } %674, 0
  %676 = extractvalue { %"class.skvm::Builder"*, i32 } %674, 1
  %677 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %8, i64 0, i64 %577, i32 0
  store %"class.skvm::Builder"* %675, %"class.skvm::Builder"** %677, align 16
  %678 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %8, i64 0, i64 %577, i32 1
  store i32 %676, i32* %678, align 8
  %679 = add nuw nsw i64 %577, 1
  %680 = icmp eq i64 %679, 4
  br i1 %680, label %528, label %576

681:                                              ; preds = %694
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %449) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %440) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %429) #13
  br label %843

682:                                              ; preds = %694, %528
  %683 = phi i64 [ 0, %528 ], [ %695, %694 ]
  %684 = phi %"class.skvm::Builder"* [ %555, %528 ], [ %700, %694 ]
  %685 = phi i32 [ %556, %528 ], [ %701, %694 ]
  %686 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %557, i32 1069547520) #13
  %687 = extractvalue { %"class.skvm::Builder"*, i32 } %686, 0
  %688 = extractvalue { %"class.skvm::Builder"*, i32 } %686, 1
  %689 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %557, %"class.skvm::Builder"* %557, i32 %558, %"class.skvm::Builder"* %687, i32 %688) #13
  %690 = extractvalue { %"class.skvm::Builder"*, i32 } %689, 0
  %691 = extractvalue { %"class.skvm::Builder"*, i32 } %689, 1
  %692 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %8, i64 0, i64 %683, i32 0
  %693 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %8, i64 0, i64 %683, i32 1
  br label %703

694:                                              ; preds = %703
  %695 = add nuw nsw i64 %683, 1
  %696 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %684, i32 1065353216) #13
  %697 = extractvalue { %"class.skvm::Builder"*, i32 } %696, 0
  %698 = extractvalue { %"class.skvm::Builder"*, i32 } %696, 1
  %699 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %684, %"class.skvm::Builder"* %684, i32 %685, %"class.skvm::Builder"* %697, i32 %698) #13
  %700 = extractvalue { %"class.skvm::Builder"*, i32 } %699, 0
  %701 = extractvalue { %"class.skvm::Builder"*, i32 } %699, 1
  %702 = icmp eq i64 %695, 4
  br i1 %702, label %681, label %682

703:                                              ; preds = %703, %682
  %704 = phi i64 [ 0, %682 ], [ %757, %703 ]
  %705 = phi %"class.skvm::Builder"* [ %690, %682 ], [ %762, %703 ]
  %706 = phi i32 [ %691, %682 ], [ %763, %703 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %559) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %559, i8 -86, i64 64, i1 false)
  %707 = load %class.anon.118*, %class.anon.118** %560, align 8
  store %"class.skvm::Builder"* %684, %"class.skvm::Builder"** %561, align 8
  store i32 %685, i32* %562, align 8
  store i32 -1431655766, i32* %575, align 4
  call fastcc void @"_ZZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENK3$_7clERKZNKS_9onProgramES2_S3_S3_S4_S7_SA_SD_SF_SH_E8UniformsNS0_3F32ESM_"(%"struct.skvm::Color"* nonnull sret %10, %class.anon.118* %707, %struct.Uniforms* nonnull dereferenceable(192) %6, %"class.skvm::Builder"* %705, i32 %706, %"struct.skvm::F32"* nonnull byval(%"struct.skvm::F32") align 8 %11)
  %708 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %7, i64 0, i64 %704, i32 0
  %709 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %708, align 16
  %710 = getelementptr inbounds [4 x %"struct.skvm::F32"], [4 x %"struct.skvm::F32"]* %7, i64 0, i64 %704, i32 1
  %711 = load i32, i32* %710, align 8
  %712 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %692, align 16
  %713 = load i32, i32* %693, align 8
  %714 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %709, %"class.skvm::Builder"* %709, i32 %711, %"class.skvm::Builder"* %712, i32 %713) #13
  %715 = extractvalue { %"class.skvm::Builder"*, i32 } %714, 0
  %716 = extractvalue { %"class.skvm::Builder"*, i32 } %714, 1
  %717 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %564, align 8
  %718 = load i32, i32* %565, align 8
  %719 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %717, %"class.skvm::Builder"* %717, i32 %718, %"class.skvm::Builder"* %715, i32 %716) #13
  %720 = extractvalue { %"class.skvm::Builder"*, i32 } %719, 0
  %721 = extractvalue { %"class.skvm::Builder"*, i32 } %719, 1
  %722 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %530, align 8
  %723 = load i32, i32* %531, align 8
  %724 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %722, %"class.skvm::Builder"* %722, i32 %723, %"class.skvm::Builder"* %720, i32 %721) #13
  %725 = extractvalue { %"class.skvm::Builder"*, i32 } %724, 0
  %726 = extractvalue { %"class.skvm::Builder"*, i32 } %724, 1
  store %"class.skvm::Builder"* %725, %"class.skvm::Builder"** %530, align 8
  store i32 %726, i32* %531, align 8
  %727 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %566, align 8
  %728 = load i32, i32* %567, align 8
  %729 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %727, %"class.skvm::Builder"* %727, i32 %728, %"class.skvm::Builder"* %715, i32 %716) #13
  %730 = extractvalue { %"class.skvm::Builder"*, i32 } %729, 0
  %731 = extractvalue { %"class.skvm::Builder"*, i32 } %729, 1
  %732 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %568, align 8
  %733 = load i32, i32* %533, align 8
  %734 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %732, %"class.skvm::Builder"* %732, i32 %733, %"class.skvm::Builder"* %730, i32 %731) #13
  %735 = extractvalue { %"class.skvm::Builder"*, i32 } %734, 0
  %736 = extractvalue { %"class.skvm::Builder"*, i32 } %734, 1
  store %"class.skvm::Builder"* %735, %"class.skvm::Builder"** %568, align 8
  store i32 %736, i32* %533, align 8
  %737 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %569, align 8
  %738 = load i32, i32* %570, align 8
  %739 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %737, %"class.skvm::Builder"* %737, i32 %738, %"class.skvm::Builder"* %715, i32 %716) #13
  %740 = extractvalue { %"class.skvm::Builder"*, i32 } %739, 0
  %741 = extractvalue { %"class.skvm::Builder"*, i32 } %739, 1
  %742 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %571, align 8
  %743 = load i32, i32* %535, align 8
  %744 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %742, %"class.skvm::Builder"* %742, i32 %743, %"class.skvm::Builder"* %740, i32 %741) #13
  %745 = extractvalue { %"class.skvm::Builder"*, i32 } %744, 0
  %746 = extractvalue { %"class.skvm::Builder"*, i32 } %744, 1
  store %"class.skvm::Builder"* %745, %"class.skvm::Builder"** %571, align 8
  store i32 %746, i32* %535, align 8
  %747 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %572, align 8
  %748 = load i32, i32* %573, align 8
  %749 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %747, %"class.skvm::Builder"* %747, i32 %748, %"class.skvm::Builder"* %715, i32 %716) #13
  %750 = extractvalue { %"class.skvm::Builder"*, i32 } %749, 0
  %751 = extractvalue { %"class.skvm::Builder"*, i32 } %749, 1
  %752 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %574, align 8
  %753 = load i32, i32* %537, align 8
  %754 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %752, %"class.skvm::Builder"* %752, i32 %753, %"class.skvm::Builder"* %750, i32 %751) #13
  %755 = extractvalue { %"class.skvm::Builder"*, i32 } %754, 0
  %756 = extractvalue { %"class.skvm::Builder"*, i32 } %754, 1
  store %"class.skvm::Builder"* %755, %"class.skvm::Builder"** %574, align 8
  store i32 %756, i32* %537, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %559) #13
  %757 = add nuw nsw i64 %704, 1
  %758 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %705, i32 1065353216) #13
  %759 = extractvalue { %"class.skvm::Builder"*, i32 } %758, 0
  %760 = extractvalue { %"class.skvm::Builder"*, i32 } %758, 1
  %761 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %705, %"class.skvm::Builder"* %705, i32 %706, %"class.skvm::Builder"* %759, i32 %760) #13
  %762 = extractvalue { %"class.skvm::Builder"*, i32 } %761, 0
  %763 = extractvalue { %"class.skvm::Builder"*, i32 } %761, 1
  %764 = icmp eq i64 %757, 4
  br i1 %764, label %694, label %703

765:                                              ; preds = %375
  %766 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %394, i64 0, i32 2
  %767 = load i32, i32* %766, align 4
  %768 = icmp eq i32 %767, 1
  br i1 %768, label %769, label %835

769:                                              ; preds = %765
  %770 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 0, i32 0
  %771 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %770, align 8
  %772 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 0, i32 1
  %773 = load i32, i32* %772, align 8
  %774 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %771, i32 1056964608) #13
  %775 = extractvalue { %"class.skvm::Builder"*, i32 } %774, 0
  %776 = extractvalue { %"class.skvm::Builder"*, i32 } %774, 1
  %777 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %771, %"class.skvm::Builder"* %771, i32 %773, %"class.skvm::Builder"* %775, i32 %776) #13
  %778 = extractvalue { %"class.skvm::Builder"*, i32 } %777, 0
  %779 = extractvalue { %"class.skvm::Builder"*, i32 } %777, 1
  %780 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 1, i32 0
  %781 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %780, align 8
  %782 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 1, i32 1
  %783 = load i32, i32* %782, align 8
  %784 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %781, i32 1056964608) #13
  %785 = extractvalue { %"class.skvm::Builder"*, i32 } %784, 0
  %786 = extractvalue { %"class.skvm::Builder"*, i32 } %784, 1
  %787 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %781, %"class.skvm::Builder"* %781, i32 %783, %"class.skvm::Builder"* %785, i32 %786) #13
  %788 = extractvalue { %"class.skvm::Builder"*, i32 } %787, 0
  %789 = extractvalue { %"class.skvm::Builder"*, i32 } %787, 1
  %790 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %771, i32 1056964608) #13
  %791 = extractvalue { %"class.skvm::Builder"*, i32 } %790, 0
  %792 = extractvalue { %"class.skvm::Builder"*, i32 } %790, 1
  %793 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %771, %"class.skvm::Builder"* %771, i32 %773, %"class.skvm::Builder"* %791, i32 %792) #13
  %794 = extractvalue { %"class.skvm::Builder"*, i32 } %793, 0
  %795 = extractvalue { %"class.skvm::Builder"*, i32 } %793, 1
  %796 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %781, i32 1056964608) #13
  %797 = extractvalue { %"class.skvm::Builder"*, i32 } %796, 0
  %798 = extractvalue { %"class.skvm::Builder"*, i32 } %796, 1
  %799 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %781, %"class.skvm::Builder"* %781, i32 %783, %"class.skvm::Builder"* %797, i32 %798) #13
  %800 = extractvalue { %"class.skvm::Builder"*, i32 } %799, 0
  %801 = extractvalue { %"class.skvm::Builder"*, i32 } %799, 1
  %802 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5floorENS_3F32E(%"class.skvm::Builder"* %794, %"class.skvm::Builder"* %794, i32 %795) #13
  %803 = extractvalue { %"class.skvm::Builder"*, i32 } %802, 0
  %804 = extractvalue { %"class.skvm::Builder"*, i32 } %802, 1
  %805 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %794, %"class.skvm::Builder"* %794, i32 %795, %"class.skvm::Builder"* %803, i32 %804) #13
  %806 = extractvalue { %"class.skvm::Builder"*, i32 } %805, 0
  %807 = extractvalue { %"class.skvm::Builder"*, i32 } %805, 1
  %808 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5floorENS_3F32E(%"class.skvm::Builder"* %800, %"class.skvm::Builder"* %800, i32 %801) #13
  %809 = extractvalue { %"class.skvm::Builder"*, i32 } %808, 0
  %810 = extractvalue { %"class.skvm::Builder"*, i32 } %808, 1
  %811 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %800, %"class.skvm::Builder"* %800, i32 %801, %"class.skvm::Builder"* %809, i32 %810) #13
  %812 = extractvalue { %"class.skvm::Builder"*, i32 } %811, 0
  %813 = extractvalue { %"class.skvm::Builder"*, i32 } %811, 1
  %814 = getelementptr inbounds %class.anon.119, %class.anon.119* %1, i64 0, i32 4
  %815 = load %class.anon.118*, %class.anon.118** %814, align 8
  %816 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %14, i64 0, i32 0
  store %"class.skvm::Builder"* %788, %"class.skvm::Builder"** %816, align 8
  %817 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %14, i64 0, i32 1
  store i32 %789, i32* %817, align 8
  %818 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %14, i64 0, i32 2, i64 0
  %819 = bitcast i8* %818 to i32*
  store i32 -1431655766, i32* %819, align 4
  call fastcc void @"_ZZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENK3$_7clERKZNKS_9onProgramES2_S3_S3_S4_S7_SA_SD_SF_SH_E8UniformsNS0_3F32ESM_"(%"struct.skvm::Color"* nonnull sret %13, %class.anon.118* %815, %struct.Uniforms* nonnull dereferenceable(192) %6, %"class.skvm::Builder"* %778, i32 %779, %"struct.skvm::F32"* nonnull byval(%"struct.skvm::F32") align 8 %14)
  %820 = load %class.anon.118*, %class.anon.118** %814, align 8
  %821 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %16, i64 0, i32 0
  store %"class.skvm::Builder"* %788, %"class.skvm::Builder"** %821, align 8
  %822 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %16, i64 0, i32 1
  store i32 %789, i32* %822, align 8
  %823 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %16, i64 0, i32 2, i64 0
  %824 = bitcast i8* %823 to i32*
  store i32 -1431655766, i32* %824, align 4
  call fastcc void @"_ZZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENK3$_7clERKZNKS_9onProgramES2_S3_S3_S4_S7_SA_SD_SF_SH_E8UniformsNS0_3F32ESM_"(%"struct.skvm::Color"* nonnull sret %15, %class.anon.118* %820, %struct.Uniforms* nonnull dereferenceable(192) %6, %"class.skvm::Builder"* %794, i32 %795, %"struct.skvm::F32"* nonnull byval(%"struct.skvm::F32") align 8 %16)
  call void @_ZN4skvm7Builder4lerpENS_5ColorES1_NS_3F32E(%"struct.skvm::Color"* nonnull sret %12, %"class.skvm::Builder"* %806, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %13, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %15, %"class.skvm::Builder"* %806, i32 %807) #13
  %825 = load %class.anon.118*, %class.anon.118** %814, align 8
  %826 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %19, i64 0, i32 0
  store %"class.skvm::Builder"* %800, %"class.skvm::Builder"** %826, align 8
  %827 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %19, i64 0, i32 1
  store i32 %801, i32* %827, align 8
  %828 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %19, i64 0, i32 2
  %829 = bitcast [4 x i8]* %828 to i32*
  store i32 -1431655766, i32* %829, align 4
  call fastcc void @"_ZZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENK3$_7clERKZNKS_9onProgramES2_S3_S3_S4_S7_SA_SD_SF_SH_E8UniformsNS0_3F32ESM_"(%"struct.skvm::Color"* nonnull sret %18, %class.anon.118* %825, %struct.Uniforms* nonnull dereferenceable(192) %6, %"class.skvm::Builder"* %778, i32 %779, %"struct.skvm::F32"* nonnull byval(%"struct.skvm::F32") align 8 %19)
  %830 = load %class.anon.118*, %class.anon.118** %814, align 8
  %831 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %21, i64 0, i32 0
  store %"class.skvm::Builder"* %800, %"class.skvm::Builder"** %831, align 8
  %832 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %21, i64 0, i32 1
  store i32 %801, i32* %832, align 8
  %833 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %21, i64 0, i32 2
  %834 = bitcast [4 x i8]* %833 to i32*
  store i32 -1431655766, i32* %834, align 4
  call fastcc void @"_ZZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENK3$_7clERKZNKS_9onProgramES2_S3_S3_S4_S7_SA_SD_SF_SH_E8UniformsNS0_3F32ESM_"(%"struct.skvm::Color"* nonnull sret %20, %class.anon.118* %830, %struct.Uniforms* nonnull dereferenceable(192) %6, %"class.skvm::Builder"* %794, i32 %795, %"struct.skvm::F32"* nonnull byval(%"struct.skvm::F32") align 8 %21)
  call void @_ZN4skvm7Builder4lerpENS_5ColorES1_NS_3F32E(%"struct.skvm::Color"* nonnull sret %17, %"class.skvm::Builder"* %806, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %18, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %20, %"class.skvm::Builder"* %806, i32 %807) #13
  call void @_ZN4skvm7Builder4lerpENS_5ColorES1_NS_3F32E(%"struct.skvm::Color"* sret %0, %"class.skvm::Builder"* %812, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %12, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %17, %"class.skvm::Builder"* %812, i32 %813) #13
  br label %843

835:                                              ; preds = %765
  %836 = getelementptr inbounds %class.anon.119, %class.anon.119* %1, i64 0, i32 4
  %837 = load %class.anon.118*, %class.anon.118** %836, align 8
  %838 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 0, i32 0
  %839 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %838, align 8
  %840 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 0, i32 1
  %841 = load i32, i32* %840, align 8
  %842 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 1
  call fastcc void @"_ZZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENK3$_7clERKZNKS_9onProgramES2_S3_S3_S4_S7_SA_SD_SF_SH_E8UniformsNS0_3F32ESM_"(%"struct.skvm::Color"* sret %0, %class.anon.118* %837, %struct.Uniforms* nonnull dereferenceable(192) %6, %"class.skvm::Builder"* %839, i32 %841, %"struct.skvm::F32"* nonnull byval(%"struct.skvm::F32") align 8 %842)
  br label %843

843:                                              ; preds = %835, %769, %681
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %22) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"*, float) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %5, %7
  %9 = ptrtoint i32* %7 to i64
  br i1 %8, label %16, label %10

10:                                               ; preds = %2
  %11 = bitcast i32* %5 to float*
  store float %1, float* %11, align 4
  %12 = getelementptr inbounds i32, i32* %5, i64 1
  %13 = ptrtoint i32* %12 to i64
  %14 = bitcast i32** %4 to i64*
  store i64 %13, i64* %14, align 8
  %15 = bitcast %"class.std::__1::vector.109"* %3 to i64*
  br label %74

16:                                               ; preds = %2
  %17 = ptrtoint i32* %5 to i64
  %18 = bitcast i32** %4 to i64*
  %19 = bitcast %"class.std::__1::vector.109"* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 2
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 4611686018427387903
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.109"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #15
  unreachable

27:                                               ; preds = %16
  %28 = bitcast i32** %6 to i64*
  %29 = sub i64 %9, %20
  %30 = ashr exact i64 %29, 2
  %31 = icmp ult i64 %30, 2305843009213693951
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 1
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 4611686018427387903
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #15
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 4611686018427387903, %27 ]
  %42 = shl i64 %41, 2
  %43 = tail call i8* @_Znwm(i64 %42) #14
  %44 = bitcast i8* %43 to i32*
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi i32* [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds i32, i32* %47, i64 %22
  %49 = getelementptr inbounds i32, i32* %47, i64 %46
  %50 = ptrtoint i32* %49 to i64
  %51 = bitcast i32* %48 to float*
  store float %1, float* %51, align 4
  %52 = getelementptr inbounds i32, i32* %48, i64 1
  %53 = ptrtoint i32* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %3, i64 0, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint i32* %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 2
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds i32, i32* %48, i64 %60
  %62 = ptrtoint i32* %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast i32* %61 to i8*
  %66 = bitcast i32* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 %58, i1 false) #13
  %67 = load i32*, i32** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi i32* [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq i32* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = bitcast i32* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #14
  %73 = load i64, i64* %18, align 8
  br label %74

74:                                               ; preds = %10, %68, %71
  %75 = phi i64* [ %15, %10 ], [ %19, %68 ], [ %19, %71 ]
  %76 = phi i64 [ %13, %10 ], [ %53, %68 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = load i64, i64* %75, align 8
  %80 = sub i64 %76, %79
  %81 = shl i64 %80, 32
  %82 = add i64 %81, -17179869184
  %83 = zext i32 %78 to i64
  %84 = or i64 %82, %83
  ret i64 %84
}

declare void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) unnamed_addr #2

declare void @_ZNK22SkColorSpaceXformSteps7programEPN4skvm7BuilderEPNS0_8UniformsENS0_5ColorE(%"struct.skvm::Color"* sret, %struct.SkColorSpaceXformSteps*, %"class.skvm::Builder"*, %"struct.skvm::Uniforms"*, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkImageShaderD2Ev(%class.SkImageShader*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV13SkImageShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkImage*, %class.SkImage** %3, align 8
  %5 = icmp eq %class.SkImage* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImage, %class.SkImage* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImage* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImage* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %class.SkImageShader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %17) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkImageShaderD0Ev(%class.SkImageShader*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV13SkImageShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkImage*, %class.SkImage** %3, align 8
  %5 = icmp eq %class.SkImage* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImage, %class.SkImage* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImage* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImage* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %class.SkImageShader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %17) #13
  %18 = bitcast %class.SkImageShader* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #1 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #13
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.14*, %class.SkReadBuffer*)* @_ZNK13SkImageShader10getFactoryEv(%class.SkImageShader*) unnamed_addr #1 comdat align 2 {
  ret void (%class.sk_sp.14*, %class.SkReadBuffer*)* @_ZN13SkImageShader10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK13SkImageShader11getTypeNameEv(%class.SkImageShader*) unnamed_addr #1 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK12SkShaderBase18getFlattenableTypeEv(%class.SkShaderBase*) unnamed_addr #1 comdat align 2 {
  ret i32 8
}

declare i32 @_ZNK8SkShader11asAGradientEPNS_12GradientInfoE(%class.SkShader*, %"struct.SkShader::GradientInfo"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkShaderBase10isConstantEv(%class.SkShaderBase*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkRuntimeEffect* @_ZNK12SkShaderBase15asRuntimeEffectEv(%class.SkShaderBase*) unnamed_addr #1 comdat align 2 {
  ret %class.SkRuntimeEffect* null
}

declare void @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix(%class.sk_sp.15* sret, %class.SkShaderBase*, %class.SkMatrix*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkShaderBase18onAsLuminanceColorEPj(%class.SkShaderBase*, i32*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

declare void @_ZN8SkMatrix22doNormalizePerspectiveEv(%class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare float @nextafterf(float, float) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

declare i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

declare %class.SkColorSpace* @_Z17sk_srgb_singletonv() local_unnamed_addr #2

declare void @_ZNK22SkColorSpaceXformSteps5applyEP16SkRasterPipeline(%struct.SkColorSpaceXformSteps*, %class.SkRasterPipeline*) local_unnamed_addr #2

declare void @_ZN16SkRasterPipeline14append_set_rgbEP12SkArenaAllocPKf(%class.SkRasterPipeline*, %class.SkArenaAlloc*, float*) local_unnamed_addr #2

declare void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

declare zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENK3$_7clERKZNKS_9onProgramES2_S3_S3_S4_S7_SA_SD_SF_SH_E8UniformsNS0_3F32ESM_"(%"struct.skvm::Color"* noalias sret, %class.anon.118* nocapture readonly, %struct.Uniforms* nocapture readonly dereferenceable(192), %"class.skvm::Builder"*, i32, %"struct.skvm::F32"* nocapture byval(%"struct.skvm::F32") align 8) unnamed_addr #6 align 2 {
  %7 = getelementptr inbounds %class.anon.118, %class.anon.118* %1, i64 0, i32 0
  %8 = load %class.SkImageShader*, %class.SkImageShader** %7, align 8
  %9 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %8, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %68 [
    i32 2, label %32
    i32 1, label %11
  ]

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 0, i32 0
  %13 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %12, align 8
  %14 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 1, i32 0
  %17 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %16, align 8
  %18 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 1, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %3, %"class.skvm::Builder"* %3, i32 %4, %"class.skvm::Builder"* %17, i32 %19) #13
  %21 = extractvalue { %"class.skvm::Builder"*, i32 } %20, 0
  %22 = extractvalue { %"class.skvm::Builder"*, i32 } %20, 1
  %23 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5floorENS_3F32E(%"class.skvm::Builder"* %21, %"class.skvm::Builder"* %21, i32 %22) #13
  %24 = extractvalue { %"class.skvm::Builder"*, i32 } %23, 0
  %25 = extractvalue { %"class.skvm::Builder"*, i32 } %23, 1
  %26 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %24, %"class.skvm::Builder"* %24, i32 %25, %"class.skvm::Builder"* %13, i32 %15) #13
  %27 = extractvalue { %"class.skvm::Builder"*, i32 } %26, 0
  %28 = extractvalue { %"class.skvm::Builder"*, i32 } %26, 1
  %29 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %3, %"class.skvm::Builder"* %3, i32 %4, %"class.skvm::Builder"* %27, i32 %28) #13
  %30 = extractvalue { %"class.skvm::Builder"*, i32 } %29, 0
  %31 = extractvalue { %"class.skvm::Builder"*, i32 } %29, 1
  br label %68

32:                                               ; preds = %6
  %33 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 0, i32 0
  %34 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %33, align 8
  %35 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 2, i32 0
  %38 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %37, align 8
  %39 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 2, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %3, %"class.skvm::Builder"* %3, i32 %4, %"class.skvm::Builder"* %34, i32 %36) #13
  %42 = extractvalue { %"class.skvm::Builder"*, i32 } %41, 0
  %43 = extractvalue { %"class.skvm::Builder"*, i32 } %41, 1
  %44 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %34, %"class.skvm::Builder"* %34, i32 %36, %"class.skvm::Builder"* %34, i32 %36) #13
  %45 = extractvalue { %"class.skvm::Builder"*, i32 } %44, 0
  %46 = extractvalue { %"class.skvm::Builder"*, i32 } %44, 1
  %47 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %42, %"class.skvm::Builder"* %42, i32 %43, %"class.skvm::Builder"* %38, i32 %40) #13
  %48 = extractvalue { %"class.skvm::Builder"*, i32 } %47, 0
  %49 = extractvalue { %"class.skvm::Builder"*, i32 } %47, 1
  %50 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5floorENS_3F32E(%"class.skvm::Builder"* %48, %"class.skvm::Builder"* %48, i32 %49) #13
  %51 = extractvalue { %"class.skvm::Builder"*, i32 } %50, 0
  %52 = extractvalue { %"class.skvm::Builder"*, i32 } %50, 1
  %53 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %45, %"class.skvm::Builder"* %45, i32 %46, %"class.skvm::Builder"* %51, i32 %52) #13
  %54 = extractvalue { %"class.skvm::Builder"*, i32 } %53, 0
  %55 = extractvalue { %"class.skvm::Builder"*, i32 } %53, 1
  %56 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %42, %"class.skvm::Builder"* %42, i32 %43, %"class.skvm::Builder"* %54, i32 %55) #13
  %57 = extractvalue { %"class.skvm::Builder"*, i32 } %56, 0
  %58 = extractvalue { %"class.skvm::Builder"*, i32 } %56, 1
  %59 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %57, %"class.skvm::Builder"* %57, i32 %58, %"class.skvm::Builder"* %34, i32 %36) #13
  %60 = extractvalue { %"class.skvm::Builder"*, i32 } %59, 0
  %61 = extractvalue { %"class.skvm::Builder"*, i32 } %59, 1
  %62 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %60, i32 2147483647) #13
  %63 = extractvalue { %"class.skvm::Builder"*, i32 } %62, 0
  %64 = extractvalue { %"class.skvm::Builder"*, i32 } %62, 1
  %65 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %60, %"class.skvm::Builder"* %60, i32 %61, %"class.skvm::Builder"* %63, i32 %64) #13
  %66 = extractvalue { %"class.skvm::Builder"*, i32 } %65, 0
  %67 = extractvalue { %"class.skvm::Builder"*, i32 } %65, 1
  br label %68

68:                                               ; preds = %6, %32, %11
  %69 = phi %"class.skvm::Builder"* [ %3, %6 ], [ %30, %11 ], [ %66, %32 ]
  %70 = phi i32 [ %4, %6 ], [ %31, %11 ], [ %67, %32 ]
  %71 = getelementptr inbounds %class.SkImageShader, %class.SkImageShader* %8, i64 0, i32 5
  %72 = load i32, i32* %71, align 8
  switch i32 %72, label %73 [
    i32 2, label %103
    i32 1, label %78
  ]

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %5, i64 0, i32 0
  %75 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %74, align 8
  %76 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %5, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  br label %143

78:                                               ; preds = %68
  %79 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %5, i64 0, i32 0
  %80 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %79, align 8
  %81 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %5, i64 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 3, i32 0
  %84 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %83, align 8
  %85 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 3, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 4, i32 0
  %88 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %87, align 8
  %89 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 4, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %80, %"class.skvm::Builder"* %80, i32 %82, %"class.skvm::Builder"* %88, i32 %90) #13
  %92 = extractvalue { %"class.skvm::Builder"*, i32 } %91, 0
  %93 = extractvalue { %"class.skvm::Builder"*, i32 } %91, 1
  %94 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5floorENS_3F32E(%"class.skvm::Builder"* %92, %"class.skvm::Builder"* %92, i32 %93) #13
  %95 = extractvalue { %"class.skvm::Builder"*, i32 } %94, 0
  %96 = extractvalue { %"class.skvm::Builder"*, i32 } %94, 1
  %97 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %95, %"class.skvm::Builder"* %95, i32 %96, %"class.skvm::Builder"* %84, i32 %86) #13
  %98 = extractvalue { %"class.skvm::Builder"*, i32 } %97, 0
  %99 = extractvalue { %"class.skvm::Builder"*, i32 } %97, 1
  %100 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %80, %"class.skvm::Builder"* %80, i32 %82, %"class.skvm::Builder"* %98, i32 %99) #13
  %101 = extractvalue { %"class.skvm::Builder"*, i32 } %100, 0
  %102 = extractvalue { %"class.skvm::Builder"*, i32 } %100, 1
  store %"class.skvm::Builder"* %101, %"class.skvm::Builder"** %79, align 8
  store i32 %102, i32* %81, align 8
  br label %143

103:                                              ; preds = %68
  %104 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %5, i64 0, i32 0
  %105 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %104, align 8
  %106 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %5, i64 0, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 3, i32 0
  %109 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %108, align 8
  %110 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 3, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 5, i32 0
  %113 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %112, align 8
  %114 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 5, i32 1
  %115 = load i32, i32* %114, align 8
  %116 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %105, %"class.skvm::Builder"* %105, i32 %107, %"class.skvm::Builder"* %109, i32 %111) #13
  %117 = extractvalue { %"class.skvm::Builder"*, i32 } %116, 0
  %118 = extractvalue { %"class.skvm::Builder"*, i32 } %116, 1
  %119 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %109, %"class.skvm::Builder"* %109, i32 %111, %"class.skvm::Builder"* %109, i32 %111) #13
  %120 = extractvalue { %"class.skvm::Builder"*, i32 } %119, 0
  %121 = extractvalue { %"class.skvm::Builder"*, i32 } %119, 1
  %122 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %117, %"class.skvm::Builder"* %117, i32 %118, %"class.skvm::Builder"* %113, i32 %115) #13
  %123 = extractvalue { %"class.skvm::Builder"*, i32 } %122, 0
  %124 = extractvalue { %"class.skvm::Builder"*, i32 } %122, 1
  %125 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5floorENS_3F32E(%"class.skvm::Builder"* %123, %"class.skvm::Builder"* %123, i32 %124) #13
  %126 = extractvalue { %"class.skvm::Builder"*, i32 } %125, 0
  %127 = extractvalue { %"class.skvm::Builder"*, i32 } %125, 1
  %128 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %120, %"class.skvm::Builder"* %120, i32 %121, %"class.skvm::Builder"* %126, i32 %127) #13
  %129 = extractvalue { %"class.skvm::Builder"*, i32 } %128, 0
  %130 = extractvalue { %"class.skvm::Builder"*, i32 } %128, 1
  %131 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %117, %"class.skvm::Builder"* %117, i32 %118, %"class.skvm::Builder"* %129, i32 %130) #13
  %132 = extractvalue { %"class.skvm::Builder"*, i32 } %131, 0
  %133 = extractvalue { %"class.skvm::Builder"*, i32 } %131, 1
  %134 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %132, %"class.skvm::Builder"* %132, i32 %133, %"class.skvm::Builder"* %109, i32 %111) #13
  %135 = extractvalue { %"class.skvm::Builder"*, i32 } %134, 0
  %136 = extractvalue { %"class.skvm::Builder"*, i32 } %134, 1
  %137 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %135, i32 2147483647) #13
  %138 = extractvalue { %"class.skvm::Builder"*, i32 } %137, 0
  %139 = extractvalue { %"class.skvm::Builder"*, i32 } %137, 1
  %140 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %135, %"class.skvm::Builder"* %135, i32 %136, %"class.skvm::Builder"* %138, i32 %139) #13
  %141 = extractvalue { %"class.skvm::Builder"*, i32 } %140, 0
  %142 = extractvalue { %"class.skvm::Builder"*, i32 } %140, 1
  store %"class.skvm::Builder"* %141, %"class.skvm::Builder"** %104, align 8
  store i32 %142, i32* %106, align 8
  br label %143

143:                                              ; preds = %73, %103, %78
  %144 = phi i32 [ %77, %73 ], [ %142, %103 ], [ %102, %78 ]
  %145 = phi %"class.skvm::Builder"* [ %75, %73 ], [ %141, %103 ], [ %101, %78 ]
  %146 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 6, i32 0
  %147 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %146, align 8
  %148 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 6, i32 1
  %149 = load i32, i32* %148, align 8
  %150 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %69, i32 0) #13
  %151 = extractvalue { %"class.skvm::Builder"*, i32 } %150, 0
  %152 = extractvalue { %"class.skvm::Builder"*, i32 } %150, 1
  %153 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %69, %"class.skvm::Builder"* %69, i32 %70, %"class.skvm::Builder"* %147, i32 %149) #13
  %154 = extractvalue { %"class.skvm::Builder"*, i32 } %153, 0
  %155 = extractvalue { %"class.skvm::Builder"*, i32 } %153, 1
  %156 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %69, %"class.skvm::Builder"* %151, i32 %152, %"class.skvm::Builder"* %154, i32 %155) #13
  %157 = extractvalue { %"class.skvm::Builder"*, i32 } %156, 0
  %158 = extractvalue { %"class.skvm::Builder"*, i32 } %156, 1
  %159 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 7, i32 0
  %160 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %159, align 8
  %161 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 7, i32 1
  %162 = load i32, i32* %161, align 8
  %163 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %145, i32 0) #13
  %164 = extractvalue { %"class.skvm::Builder"*, i32 } %163, 0
  %165 = extractvalue { %"class.skvm::Builder"*, i32 } %163, 1
  %166 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %145, %"class.skvm::Builder"* %145, i32 %144, %"class.skvm::Builder"* %160, i32 %162) #13
  %167 = extractvalue { %"class.skvm::Builder"*, i32 } %166, 0
  %168 = extractvalue { %"class.skvm::Builder"*, i32 } %166, 1
  %169 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %145, %"class.skvm::Builder"* %164, i32 %165, %"class.skvm::Builder"* %167, i32 %168) #13
  %170 = extractvalue { %"class.skvm::Builder"*, i32 } %169, 0
  %171 = extractvalue { %"class.skvm::Builder"*, i32 } %169, 1
  %172 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5truncENS_3F32E(%"class.skvm::Builder"* %157, %"class.skvm::Builder"* %157, i32 %158) #13
  %173 = extractvalue { %"class.skvm::Builder"*, i32 } %172, 0
  %174 = extractvalue { %"class.skvm::Builder"*, i32 } %172, 1
  %175 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5truncENS_3F32E(%"class.skvm::Builder"* %170, %"class.skvm::Builder"* %170, i32 %171) #13
  %176 = extractvalue { %"class.skvm::Builder"*, i32 } %175, 0
  %177 = extractvalue { %"class.skvm::Builder"*, i32 } %175, 1
  %178 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 9, i32 0
  %179 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %178, align 8
  %180 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 9, i32 1
  %181 = load i32, i32* %180, align 8
  %182 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3I32ES1_(%"class.skvm::Builder"* %176, %"class.skvm::Builder"* %176, i32 %177, %"class.skvm::Builder"* %179, i32 %181) #13
  %183 = extractvalue { %"class.skvm::Builder"*, i32 } %182, 0
  %184 = extractvalue { %"class.skvm::Builder"*, i32 } %182, 1
  %185 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3I32ES1_(%"class.skvm::Builder"* %173, %"class.skvm::Builder"* %173, i32 %174, %"class.skvm::Builder"* %183, i32 %184) #13
  %186 = extractvalue { %"class.skvm::Builder"*, i32 } %185, 0
  %187 = extractvalue { %"class.skvm::Builder"*, i32 } %185, 1
  %188 = bitcast %"struct.skvm::Color"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 -86, i64 64, i1 false)
  %189 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 10
  %190 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %2, i64 0, i32 8
  %191 = bitcast %"struct.skvm::Uniform"* %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = trunc i64 %192 to i32
  %194 = lshr i64 %192, 32
  %195 = trunc i64 %194 to i32
  tail call void @_ZN4skvm7Builder6gatherENS_11PixelFormatENS_3PtrEiNS_3I32E(%"struct.skvm::Color"* sret %0, %"class.skvm::Builder"* %186, %"struct.skvm::PixelFormat"* nonnull byval(%"struct.skvm::PixelFormat") align 8 %189, i32 %193, i32 %195, %"class.skvm::Builder"* %186, i32 %187) #13
  %196 = getelementptr inbounds %class.anon.118, %class.anon.118* %1, i64 0, i32 1
  %197 = load i8*, i8** %196, align 8
  %198 = load i8, i8* %197, align 1, !range !2
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %209, label %200

200:                                              ; preds = %143
  %201 = getelementptr inbounds %class.anon.118, %class.anon.118* %1, i64 0, i32 2
  %202 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %201, align 8
  %203 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %202, align 8
  %204 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %203, i32 1065353216) #13
  %205 = extractvalue { %"class.skvm::Builder"*, i32 } %204, 0
  %206 = extractvalue { %"class.skvm::Builder"*, i32 } %204, 1
  %207 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %205, %"class.skvm::Builder"** %207, align 8
  %208 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 1
  store i32 %206, i32* %208, align 8
  br label %209

209:                                              ; preds = %143, %200
  %210 = load i32, i32* %9, align 4
  %211 = icmp eq i32 %210, 3
  br i1 %211, label %215, label %212

212:                                              ; preds = %209
  %213 = load i32, i32* %71, align 8
  %214 = icmp eq i32 %213, 3
  br i1 %214, label %215, label %282

215:                                              ; preds = %212, %209
  %216 = getelementptr inbounds %class.anon.118, %class.anon.118* %1, i64 0, i32 2
  %217 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %216, align 8
  %218 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %217, align 8
  %219 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %218, i32 -1) #13
  %220 = extractvalue { %"class.skvm::Builder"*, i32 } %219, 0
  %221 = extractvalue { %"class.skvm::Builder"*, i32 } %219, 1
  %222 = load i32, i32* %9, align 4
  %223 = icmp eq i32 %222, 3
  br i1 %223, label %224, label %231

224:                                              ; preds = %215
  %225 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2eqENS_3F32ES1_(%"class.skvm::Builder"* %69, %"class.skvm::Builder"* %69, i32 %70, %"class.skvm::Builder"* %157, i32 %158) #13
  %226 = extractvalue { %"class.skvm::Builder"*, i32 } %225, 0
  %227 = extractvalue { %"class.skvm::Builder"*, i32 } %225, 1
  %228 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %220, %"class.skvm::Builder"* %220, i32 %221, %"class.skvm::Builder"* %226, i32 %227) #13
  %229 = extractvalue { %"class.skvm::Builder"*, i32 } %228, 0
  %230 = extractvalue { %"class.skvm::Builder"*, i32 } %228, 1
  br label %231

231:                                              ; preds = %224, %215
  %232 = phi i32 [ %230, %224 ], [ %221, %215 ]
  %233 = phi %"class.skvm::Builder"* [ %229, %224 ], [ %220, %215 ]
  %234 = load i32, i32* %71, align 8
  %235 = icmp eq i32 %234, 3
  br i1 %235, label %236, label %243

236:                                              ; preds = %231
  %237 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2eqENS_3F32ES1_(%"class.skvm::Builder"* %145, %"class.skvm::Builder"* %145, i32 %144, %"class.skvm::Builder"* %170, i32 %171) #13
  %238 = extractvalue { %"class.skvm::Builder"*, i32 } %237, 0
  %239 = extractvalue { %"class.skvm::Builder"*, i32 } %237, 1
  %240 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %233, %"class.skvm::Builder"* %233, i32 %232, %"class.skvm::Builder"* %238, i32 %239) #13
  %241 = extractvalue { %"class.skvm::Builder"*, i32 } %240, 0
  %242 = extractvalue { %"class.skvm::Builder"*, i32 } %240, 1
  br label %243

243:                                              ; preds = %236, %231
  %244 = phi i32 [ %242, %236 ], [ %232, %231 ]
  %245 = phi %"class.skvm::Builder"* [ %241, %236 ], [ %233, %231 ]
  %246 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %216, align 8
  %247 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %246, align 8
  %248 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 0
  %249 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %248, align 8
  %250 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 1
  %251 = load i32, i32* %250, align 8
  %252 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %247, %"class.skvm::Builder"* %245, i32 %244, %"class.skvm::Builder"* %249, i32 %251) #13
  %253 = extractvalue { %"class.skvm::Builder"*, i32 } %252, 0
  %254 = extractvalue { %"class.skvm::Builder"*, i32 } %252, 1
  store %"class.skvm::Builder"* %253, %"class.skvm::Builder"** %248, align 8
  store i32 %254, i32* %250, align 8
  %255 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %216, align 8
  %256 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %255, align 8
  %257 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 0
  %258 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %257, align 8
  %259 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 1
  %260 = load i32, i32* %259, align 8
  %261 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %256, %"class.skvm::Builder"* %245, i32 %244, %"class.skvm::Builder"* %258, i32 %260) #13
  %262 = extractvalue { %"class.skvm::Builder"*, i32 } %261, 0
  %263 = extractvalue { %"class.skvm::Builder"*, i32 } %261, 1
  store %"class.skvm::Builder"* %262, %"class.skvm::Builder"** %257, align 8
  store i32 %263, i32* %259, align 8
  %264 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %216, align 8
  %265 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %264, align 8
  %266 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 0
  %267 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %266, align 8
  %268 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 1
  %269 = load i32, i32* %268, align 8
  %270 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %265, %"class.skvm::Builder"* %245, i32 %244, %"class.skvm::Builder"* %267, i32 %269) #13
  %271 = extractvalue { %"class.skvm::Builder"*, i32 } %270, 0
  %272 = extractvalue { %"class.skvm::Builder"*, i32 } %270, 1
  store %"class.skvm::Builder"* %271, %"class.skvm::Builder"** %266, align 8
  store i32 %272, i32* %268, align 8
  %273 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %216, align 8
  %274 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %273, align 8
  %275 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 0
  %276 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %275, align 8
  %277 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 1
  %278 = load i32, i32* %277, align 8
  %279 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %274, %"class.skvm::Builder"* %245, i32 %244, %"class.skvm::Builder"* %276, i32 %278) #13
  %280 = extractvalue { %"class.skvm::Builder"*, i32 } %279, 0
  %281 = extractvalue { %"class.skvm::Builder"*, i32 } %279, 1
  store %"class.skvm::Builder"* %280, %"class.skvm::Builder"** %275, align 8
  store i32 %281, i32* %277, align 8
  br label %282

282:                                              ; preds = %243, %212
  ret void
}

declare void @_ZN4skvm26SkColorType_to_PixelFormatE11SkColorType(%"struct.skvm::PixelFormat"* sret, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc { %"class.skvm::Builder"*, i32 } @"_ZZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENK3$_8clEf"(%class.anon.116* nocapture readonly, float) unnamed_addr #6 align 2 {
  %3 = bitcast float %1 to i32
  %4 = getelementptr inbounds %class.anon.116, %class.anon.116* %0, i64 0, i32 0
  %5 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %4, align 8
  %6 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %5, align 8
  %7 = getelementptr inbounds %class.anon.116, %class.anon.116* %0, i64 0, i32 1
  %8 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %7, align 8
  %9 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %8, align 8
  %10 = add nsw i32 %3, -1
  %11 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %9, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %9, i64 0, i32 1, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %9, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = icmp eq i32* %13, %15
  %17 = ptrtoint i32* %15 to i64
  br i1 %16, label %23, label %18

18:                                               ; preds = %2
  store i32 %10, i32* %13, align 4
  %19 = getelementptr inbounds i32, i32* %13, i64 1
  %20 = ptrtoint i32* %19 to i64
  %21 = bitcast i32** %12 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.std::__1::vector.109"* %11 to i64*
  br label %80

23:                                               ; preds = %2
  %24 = ptrtoint i32* %13 to i64
  %25 = bitcast i32** %12 to i64*
  %26 = bitcast %"class.std::__1::vector.109"* %11 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 2
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 4611686018427387903
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::vector.109"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #15
  unreachable

34:                                               ; preds = %23
  %35 = bitcast i32** %14 to i64*
  %36 = sub i64 %17, %27
  %37 = ashr exact i64 %36, 2
  %38 = icmp ult i64 %37, 2305843009213693951
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = ashr exact i64 %36, 1
  %41 = icmp ult i64 %40, %30
  %42 = select i1 %41, i64 %30, i64 %40
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = icmp ugt i64 %42, 4611686018427387903
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @abort() #15
  unreachable

47:                                               ; preds = %44, %34
  %48 = phi i64 [ %42, %44 ], [ 4611686018427387903, %34 ]
  %49 = shl i64 %48, 2
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i32*
  br label %52

52:                                               ; preds = %47, %39
  %53 = phi i64 [ %48, %47 ], [ 0, %39 ]
  %54 = phi i32* [ %51, %47 ], [ null, %39 ]
  %55 = getelementptr inbounds i32, i32* %54, i64 %29
  %56 = getelementptr inbounds i32, i32* %54, i64 %53
  %57 = ptrtoint i32* %56 to i64
  store i32 %10, i32* %55, align 4
  %58 = getelementptr inbounds i32, i32* %55, i64 1
  %59 = ptrtoint i32* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %11, i64 0, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = load i64, i64* %25, align 8
  %63 = ptrtoint i32* %61 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 2
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds i32, i32* %55, i64 %66
  %68 = ptrtoint i32* %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %52
  %71 = bitcast i32* %67 to i8*
  %72 = bitcast i32* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %72, i64 %64, i1 false) #13
  %73 = load i32*, i32** %60, align 8
  br label %74

74:                                               ; preds = %70, %52
  %75 = phi i32* [ %61, %52 ], [ %73, %70 ]
  store i64 %68, i64* %26, align 8
  store i64 %59, i64* %25, align 8
  store i64 %57, i64* %35, align 8
  %76 = icmp eq i32* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %74
  %78 = bitcast i32* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #14
  %79 = load i64, i64* %25, align 8
  br label %80

80:                                               ; preds = %18, %74, %77
  %81 = phi i64* [ %22, %18 ], [ %26, %74 ], [ %26, %77 ]
  %82 = phi i64 [ %20, %18 ], [ %59, %74 ], [ %79, %77 ]
  %83 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %9, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = load i64, i64* %81, align 8
  %86 = sub i64 %82, %85
  %87 = shl i64 %86, 32
  %88 = add i64 %87, -17179869184
  %89 = lshr exact i64 %88, 32
  %90 = trunc i64 %89 to i32
  %91 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %6, i32 %84, i32 %90) #13
  ret { %"class.skvm::Builder"*, i32 } %91
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"*, i32, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5floorENS_3F32E(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3I32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5truncENS_3F32E(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3I32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare void @_ZN4skvm7Builder6gatherENS_11PixelFormatENS_3PtrEiNS_3I32E(%"struct.skvm::Color"* sret, %"class.skvm::Builder"*, %"struct.skvm::PixelFormat"* byval(%"struct.skvm::PixelFormat") align 8, i32, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2eqENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare void @_ZN4skvm7Builder4lerpENS_5ColorES1_NS_3F32E(%"struct.skvm::Color"* sret, %"class.skvm::Builder"*, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase*) unnamed_addr #9

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #2

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI19SkImageStageUpdaterJPK13SkImageShaderRbEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS7_ENUlPcE_8__invokeESG_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -65
  %3 = bitcast i8* %2 to %class.SkImageStageUpdater*
  %4 = bitcast i8* %2 to void (%class.SkImageStageUpdater*)***
  %5 = load void (%class.SkImageStageUpdater*)**, void (%class.SkImageStageUpdater*)*** %4, align 8
  %6 = load void (%class.SkImageStageUpdater*)*, void (%class.SkImageStageUpdater*)** %5, align 8
  tail call void %6(%class.SkImageStageUpdater* %3) #13
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkStageUpdaterD2Ev(%class.SkStageUpdater*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkImageStageUpdaterD0Ev(%class.SkImageStageUpdater*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %class.SkImageStageUpdater* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN19SkImageStageUpdater6updateERK8SkMatrixPS1_(%class.SkImageStageUpdater*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix*) unnamed_addr #1 comdat align 2 {
  %4 = alloca %class.SkMatrix, align 16
  %5 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #13
  %6 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %7 = bitcast %class.SkMatrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %7, align 16
  %8 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %9 = bitcast float* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %9, align 16
  %10 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %10, align 16
  store i32 16, i32* %6, align 4
  %11 = getelementptr inbounds %class.SkImageStageUpdater, %class.SkImageStageUpdater* %0, i64 0, i32 1
  %12 = bitcast %class.SkImageShader** %11 to %class.SkShaderBase**
  %13 = load %class.SkShaderBase*, %class.SkShaderBase** %12, align 8
  %14 = call zeroext i1 @_ZNK12SkShaderBase19computeTotalInverseERK8SkMatrixPS1_PS0_(%class.SkShaderBase* %13, %class.SkMatrix* dereferenceable(40) %1, %class.SkMatrix* %2, %class.SkMatrix* nonnull %4) #13
  br i1 %14, label %15, label %25

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.SkImageStageUpdater, %class.SkImageStageUpdater* %0, i64 0, i32 2
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = getelementptr inbounds %class.SkImageStageUpdater, %class.SkImageStageUpdater* %0, i64 0, i32 3, i64 0
  br i1 %18, label %22, label %20

20:                                               ; preds = %15
  %21 = bitcast float* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* nonnull align 16 %5, i64 36, i1 false) #13
  br label %24

22:                                               ; preds = %15
  %23 = call zeroext i1 @_ZNK8SkMatrix8asAffineEPf(%class.SkMatrix* nonnull %4, float* %19) #13
  br i1 %23, label %24, label %25

24:                                               ; preds = %22, %20
  br label %25

25:                                               ; preds = %3, %22, %24
  %26 = phi i1 [ true, %24 ], [ false, %22 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #13
  ret i1 %26
}

declare zeroext i1 @_ZNK8SkMatrix8asAffineEPf(%class.SkMatrix*, float*) local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN13SkImageShader4MakeE5sk_spI7SkImageE10SkTileModeS3_RK17SkSamplingOptionsPK8SkMatrixb: argument 0"}
!5 = distinct !{!5, !"_ZN13SkImageShader4MakeE5sk_spI7SkImageE10SkTileModeS3_RK17SkSamplingOptionsPK8SkMatrixb"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_Z10sk_make_spI13SkEmptyShaderJEE5sk_spIT_EDpOT0_: argument 0"}
!8 = distinct !{!8, !"_Z10sk_make_spI13SkEmptyShaderJEE5sk_spIT_EDpOT0_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN13SkImageShader4MakeE5sk_spI7SkImageE10SkTileModeS3_RK17SkSamplingOptionsPK8SkMatrixb: argument 0"}
!11 = distinct !{!11, !"_ZN13SkImageShader4MakeE5sk_spI7SkImageE10SkTileModeS3_RK17SkSamplingOptionsPK8SkMatrixb"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZNSt3__19make_pairIRK8SkPixmapRK8SkMatrixEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__19make_pairIRK8SkPixmapRK8SkMatrixEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_"}
!15 = distinct !{!15, !16, !"_ZNK16SkMipmapAccessor5levelEv: argument 0"}
!16 = distinct !{!16, !"_ZNK16SkMipmapAccessor5levelEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZL14tweak_sampling17SkSamplingOptionsRK8SkMatrix: argument 0"}
!19 = distinct !{!19, !"_ZL14tweak_sampling17SkSamplingOptionsRK8SkMatrix"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZL16tweak_inv_matrix12SkFilterMode8SkMatrix: argument 0"}
!22 = distinct !{!22, !"_ZL16tweak_inv_matrix12SkFilterMode8SkMatrix"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZNSt3__19make_pairIRK8SkPixmapRK8SkMatrixEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__19make_pairIRK8SkPixmapRK8SkMatrixEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_"}
!26 = distinct !{!26, !27, !"_ZNK16SkMipmapAccessor5levelEv: argument 0"}
!27 = distinct !{!27, !"_ZNK16SkMipmapAccessor5levelEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZL14tweak_sampling17SkSamplingOptionsRK8SkMatrix: argument 0"}
!30 = distinct !{!30, !"_ZL14tweak_sampling17SkSamplingOptionsRK8SkMatrix"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZL16tweak_inv_matrix12SkFilterMode8SkMatrix: argument 0"}
!33 = distinct !{!33, !"_ZL16tweak_inv_matrix12SkFilterMode8SkMatrix"}
!34 = !{!35, !37}
!35 = distinct !{!35, !36, !"_ZNSt3__19make_pairIRK8SkPixmapRK8SkMatrixEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__19make_pairIRK8SkPixmapRK8SkMatrixEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_"}
!37 = distinct !{!37, !38, !"_ZNK16SkMipmapAccessor10lowerLevelEv: argument 0"}
!38 = distinct !{!38, !"_ZNK16SkMipmapAccessor10lowerLevelEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENK3$_6clERK8SkPixmap: argument 0"}
!41 = distinct !{!41, !"_ZZNK13SkImageShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENK3$_6clERK8SkPixmap"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN13SkImageShader20CubicResamplerMatrixEff: argument 0"}
!44 = distinct !{!44, !"_ZN13SkImageShader20CubicResamplerMatrixEff"}
