; ModuleID = '../../net/third_party/quiche/src/quic/core/crypto/null_encrypter.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/crypto/null_encrypter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quic::NullEncrypter" = type <{ %"class.quic::QuicEncrypter", i8, [7 x i8] }>
%"class.quic::QuicEncrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicCrypter" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }

$_ZN4quic13NullEncrypterD0Ev = comdat any

$_ZN4quic11QuicCrypterD2Ev = comdat any

@_ZTVN4quic13NullEncrypterE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::QuicCrypter"*)* @_ZN4quic11QuicCrypterD2Ev to i8*), i8* bitcast (void (%"class.quic::NullEncrypter"*)* @_ZN4quic13NullEncrypterD0Ev to i8*), i8* bitcast (i1 (%"class.quic::NullEncrypter"*, i8*, i64)* @_ZN4quic13NullEncrypter6SetKeyEN4absl11string_viewE to i8*), i8* bitcast (i1 (%"class.quic::NullEncrypter"*, i8*, i64)* @_ZN4quic13NullEncrypter14SetNoncePrefixEN4absl11string_viewE to i8*), i8* bitcast (i1 (%"class.quic::NullEncrypter"*, i8*, i64)* @_ZN4quic13NullEncrypter5SetIVEN4absl11string_viewE to i8*), i8* bitcast (i1 (%"class.quic::QuicCrypter"*, %"struct.quic::ParsedQuicVersion"*, i8*, i64)* @_ZN4quic11QuicCrypter18SetNoncePrefixOrIVERKNS_17ParsedQuicVersionEN4absl11string_viewE to i8*), i8* bitcast (i1 (%"class.quic::NullEncrypter"*, i8*, i64)* @_ZN4quic13NullEncrypter22SetHeaderProtectionKeyEN4absl11string_viewE to i8*), i8* bitcast (i64 (%"class.quic::NullEncrypter"*)* @_ZNK4quic13NullEncrypter10GetKeySizeEv to i8*), i8* bitcast (i64 (%"class.quic::NullEncrypter"*)* @_ZNK4quic13NullEncrypter9GetIVSizeEv to i8*), i8* bitcast (i64 (%"class.quic::NullEncrypter"*)* @_ZNK4quic13NullEncrypter18GetNoncePrefixSizeEv to i8*), i8* bitcast (i1 (%"class.quic::NullEncrypter"*, i64, i8*, i64, i8*, i64, i8*, i64*, i64)* @_ZN4quic13NullEncrypter13EncryptPacketEmN4absl11string_viewES2_PcPmm to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.quic::NullEncrypter"*, i8*, i64)* @_ZN4quic13NullEncrypter28GenerateHeaderProtectionMaskEN4absl11string_viewE to i8*), i8* bitcast (i64 (%"class.quic::NullEncrypter"*, i64)* @_ZNK4quic13NullEncrypter19GetMaxPlaintextSizeEm to i8*), i8* bitcast (i64 (%"class.quic::NullEncrypter"*, i64)* @_ZNK4quic13NullEncrypter17GetCiphertextSizeEm to i8*), i8* bitcast (i64 (%"class.quic::NullEncrypter"*)* @_ZNK4quic13NullEncrypter23GetConfidentialityLimitEv to i8*), i8* bitcast ({ i8*, i64 } (%"class.quic::NullEncrypter"*)* @_ZNK4quic13NullEncrypter6GetKeyEv to i8*), i8* bitcast ({ i8*, i64 } (%"class.quic::NullEncrypter"*)* @_ZNK4quic13NullEncrypter14GetNoncePrefixEv to i8*)] }, align 8
@.str = private unnamed_addr constant [7 x i8] c"Server\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Client\00", align 1

@_ZN4quic13NullEncrypterC1ENS_11PerspectiveE = hidden unnamed_addr alias void (%"class.quic::NullEncrypter"*, i8), void (%"class.quic::NullEncrypter"*, i8)* @_ZN4quic13NullEncrypterC2ENS_11PerspectiveE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic13NullEncrypterC2ENS_11PerspectiveE(%"class.quic::NullEncrypter"* nocapture, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::NullEncrypter", %"class.quic::NullEncrypter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN4quic13NullEncrypterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.quic::NullEncrypter", %"class.quic::NullEncrypter"* %0, i64 0, i32 1
  store i8 %1, i8* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic13NullEncrypter6SetKeyEN4absl11string_viewE(%"class.quic::NullEncrypter"* nocapture readnone, i8*, i64) unnamed_addr #1 align 2 {
  %4 = icmp eq i64 %2, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic13NullEncrypter14SetNoncePrefixEN4absl11string_viewE(%"class.quic::NullEncrypter"* nocapture readnone, i8*, i64) unnamed_addr #1 align 2 {
  %4 = icmp eq i64 %2, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic13NullEncrypter5SetIVEN4absl11string_viewE(%"class.quic::NullEncrypter"* nocapture readnone, i8*, i64) unnamed_addr #1 align 2 {
  %4 = icmp eq i64 %2, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic13NullEncrypter22SetHeaderProtectionKeyEN4absl11string_viewE(%"class.quic::NullEncrypter"* nocapture readnone, i8*, i64) unnamed_addr #1 align 2 {
  %4 = icmp eq i64 %2, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic13NullEncrypter13EncryptPacketEmN4absl11string_viewES2_PcPmm(%"class.quic::NullEncrypter"* nocapture readonly, i64, i8*, i64, i8*, i64, i8*, i64* nocapture, i64) unnamed_addr #2 align 2 {
  %10 = add i64 %5, 12
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %21, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.quic::NullEncrypter", %"class.quic::NullEncrypter"* %0, i64 0, i32 1
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 0
  %16 = select i1 %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)
  %17 = tail call { i64, i64 } @_ZN4quic9QuicUtils20FNV1a_128_Hash_ThreeEN4absl11string_viewES2_S2_(i8* %2, i64 %3, i8* %4, i64 %5, i8* %16, i64 6) #7
  %18 = extractvalue { i64, i64 } %17, 0
  %19 = extractvalue { i64, i64 } %17, 1
  %20 = getelementptr inbounds i8, i8* %6, i64 12
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %4, i64 %5, i1 false)
  tail call void @_ZN4quic9QuicUtils21SerializeUint128ShortEN4absl7uint128EPh(i64 %18, i64 %19, i8* %6) #7
  store i64 %10, i64* %7, align 8
  br label %21

21:                                               ; preds = %9, %12
  %22 = phi i1 [ true, %12 ], [ false, %9 ]
  ret i1 %22
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK4quic13NullEncrypter13GetHashLengthEv(%"class.quic::NullEncrypter"* nocapture readnone) local_unnamed_addr #1 align 2 {
  ret i64 12
}

declare { i64, i64 } @_ZN4quic9QuicUtils20FNV1a_128_Hash_ThreeEN4absl11string_viewES2_S2_(i8*, i64, i8*, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN4quic9QuicUtils21SerializeUint128ShortEN4absl7uint128EPh(i64, i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic13NullEncrypter28GenerateHeaderProtectionMaskEN4absl11string_viewE(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.quic::NullEncrypter"* nocapture readnone, i8* nocapture readnone, i64) unnamed_addr #2 align 2 {
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  store i8 5, i8* %6, align 1
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 6, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK4quic13NullEncrypter10GetKeySizeEv(%"class.quic::NullEncrypter"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK4quic13NullEncrypter18GetNoncePrefixSizeEv(%"class.quic::NullEncrypter"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK4quic13NullEncrypter9GetIVSizeEv(%"class.quic::NullEncrypter"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i64 0
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i64 @_ZNK4quic13NullEncrypter19GetMaxPlaintextSizeEm(%"class.quic::NullEncrypter"* nocapture readnone, i64) unnamed_addr #5 align 2 {
  %3 = icmp ult i64 %1, 12
  %4 = select i1 %3, i64 %1, i64 12
  %5 = sub i64 %1, %4
  ret i64 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK4quic13NullEncrypter17GetCiphertextSizeEm(%"class.quic::NullEncrypter"* nocapture readnone, i64) unnamed_addr #1 align 2 {
  %3 = add i64 %1, 12
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK4quic13NullEncrypter23GetConfidentialityLimitEv(%"class.quic::NullEncrypter"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i64 -1
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZNK4quic13NullEncrypter6GetKeyEv(%"class.quic::NullEncrypter"* nocapture readnone) unnamed_addr #5 align 2 {
  ret { i8*, i64 } zeroinitializer
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZNK4quic13NullEncrypter14GetNoncePrefixEv(%"class.quic::NullEncrypter"* nocapture readnone) unnamed_addr #5 align 2 {
  ret { i8*, i64 } zeroinitializer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic13NullEncrypterD0Ev(%"class.quic::NullEncrypter"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.quic::NullEncrypter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

declare zeroext i1 @_ZN4quic11QuicCrypter18SetNoncePrefixOrIVERKNS_17ParsedQuicVersionEN4absl11string_viewE(%"class.quic::QuicCrypter"*, %"struct.quic::ParsedQuicVersion"* dereferenceable(8), i8*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic11QuicCrypterD2Ev(%"class.quic::QuicCrypter"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
