; ModuleID = '../../third_party/fontconfig/src/src/fccharset.c'
source_filename = "../../third_party/fontconfig/src/src/fccharset.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._FcCharSet = type { %struct._FcRef, i32, i64, i64 }
%struct._FcRef = type { i32 }
%struct._FcValuePromotionBuffer = type { %union.anon }
%union.anon = type { double, [248 x i8] }
%struct._FcCharLeaf = type { [8 x i32] }
%struct._FcStrBuf = type { i8*, i32, i32, i32, i32, [128 x i8] }
%struct._FcCharSetFreezer = type { [257 x %struct._FcCharLeafEnt*], %struct._FcCharLeafEnt**, i32, [67 x %struct._FcCharSetEnt*], [67 x %struct._FcCharSetOrigEnt*], %struct._FcCharLeafEnt*, i32, i32, i32, i32, i32 }
%struct._FcCharSetEnt = type { %struct._FcCharSetEnt*, i32, %struct._FcCharSet }
%struct._FcCharSetOrigEnt = type { %struct._FcCharSetOrigEnt*, %struct._FcCharSet*, %struct._FcCharSet* }
%struct._FcCharLeafEnt = type { %struct._FcCharLeafEnt*, i32, %struct._FcCharLeaf }
%struct._FcSerialize = type { i64, %struct._FcCharSetFreezer*, i8*, [8191 x %struct._FcSerializeBucket*] }
%struct._FcSerializeBucket = type { %struct._FcSerializeBucket*, i8*, i64 }

@FcDebugVal = external hidden local_unnamed_addr global i32, align 4
@.str = private unnamed_addr constant [36 x i8] c"\0Acharsets %d -> %d leaves %d -> %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%x\00", align 1

@FcCharSetCreate = hidden alias %struct._FcCharSet* (), %struct._FcCharSet* ()* @IA__FcCharSetCreate
@FcCharSetNew = hidden alias %struct._FcCharSet* (), %struct._FcCharSet* ()* @IA__FcCharSetNew
@FcCharSetDestroy = hidden alias void (%struct._FcCharSet*), void (%struct._FcCharSet*)* @IA__FcCharSetDestroy
@FcCharSetAddChar = hidden alias i32 (%struct._FcCharSet*, i32), i32 (%struct._FcCharSet*, i32)* @IA__FcCharSetAddChar
@FcCharSetDelChar = hidden alias i32 (%struct._FcCharSet*, i32), i32 (%struct._FcCharSet*, i32)* @IA__FcCharSetDelChar
@FcCharSetCopy = hidden alias %struct._FcCharSet* (%struct._FcCharSet*), %struct._FcCharSet* (%struct._FcCharSet*)* @IA__FcCharSetCopy
@FcCharSetEqual = hidden alias i32 (%struct._FcCharSet*, %struct._FcCharSet*), i32 (%struct._FcCharSet*, %struct._FcCharSet*)* @IA__FcCharSetEqual
@FcCharSetIntersect = hidden alias %struct._FcCharSet* (%struct._FcCharSet*, %struct._FcCharSet*), %struct._FcCharSet* (%struct._FcCharSet*, %struct._FcCharSet*)* @IA__FcCharSetIntersect
@FcCharSetUnion = hidden alias %struct._FcCharSet* (%struct._FcCharSet*, %struct._FcCharSet*), %struct._FcCharSet* (%struct._FcCharSet*, %struct._FcCharSet*)* @IA__FcCharSetUnion
@FcCharSetSubtract = hidden alias %struct._FcCharSet* (%struct._FcCharSet*, %struct._FcCharSet*), %struct._FcCharSet* (%struct._FcCharSet*, %struct._FcCharSet*)* @IA__FcCharSetSubtract
@FcCharSetMerge = hidden alias i32 (%struct._FcCharSet*, %struct._FcCharSet*, i32*), i32 (%struct._FcCharSet*, %struct._FcCharSet*, i32*)* @IA__FcCharSetMerge
@FcCharSetHasChar = hidden alias i32 (%struct._FcCharSet*, i32), i32 (%struct._FcCharSet*, i32)* @IA__FcCharSetHasChar
@FcCharSetCount = hidden alias i32 (%struct._FcCharSet*), i32 (%struct._FcCharSet*)* @IA__FcCharSetCount
@FcCharSetIntersectCount = hidden alias i32 (%struct._FcCharSet*, %struct._FcCharSet*), i32 (%struct._FcCharSet*, %struct._FcCharSet*)* @IA__FcCharSetIntersectCount
@FcCharSetSubtractCount = hidden alias i32 (%struct._FcCharSet*, %struct._FcCharSet*), i32 (%struct._FcCharSet*, %struct._FcCharSet*)* @IA__FcCharSetSubtractCount
@FcCharSetIsSubset = hidden alias i32 (%struct._FcCharSet*, %struct._FcCharSet*), i32 (%struct._FcCharSet*, %struct._FcCharSet*)* @IA__FcCharSetIsSubset
@FcCharSetFirstPage = hidden alias i32 (%struct._FcCharSet*, i32*, i32*), i32 (%struct._FcCharSet*, i32*, i32*)* @IA__FcCharSetFirstPage
@FcCharSetNextPage = hidden alias i32 (%struct._FcCharSet*, i32*, i32*), i32 (%struct._FcCharSet*, i32*, i32*)* @IA__FcCharSetNextPage
@FcCharSetCoverage = hidden alias i32 (%struct._FcCharSet*, i32, i32*), i32 (%struct._FcCharSet*, i32, i32*)* @IA__FcCharSetCoverage

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %struct._FcCharSet* @IA__FcCharSetCreate() #0 {
  %1 = tail call noalias i8* @malloc(i64 24) #13
  %2 = icmp eq i8* %1, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %0
  %4 = bitcast i8* %1 to %struct._FcCharSet*
  %5 = bitcast i8* %1 to i32*
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds i8, i8* %1, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 20, i1 false)
  br label %7

7:                                                ; preds = %0, %3
  %8 = phi %struct._FcCharSet* [ %4, %3 ], [ null, %0 ]
  ret %struct._FcCharSet* %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden %struct._FcCharSet* @FcCharSetPromote(%struct._FcValuePromotionBuffer*) local_unnamed_addr #3 {
  %2 = bitcast %struct._FcValuePromotionBuffer* %0 to %struct._FcCharSet*
  %3 = bitcast %struct._FcValuePromotionBuffer* %0 to i32*
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %2, i64 0, i32 1
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %struct._FcValuePromotionBuffer, %struct._FcValuePromotionBuffer* %0, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  ret %struct._FcCharSet* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct._FcCharSet* @IA__FcCharSetNew() #4 {
  %1 = tail call noalias i8* @malloc(i64 24) #13
  %2 = icmp eq i8* %1, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %0
  %4 = bitcast i8* %1 to %struct._FcCharSet*
  %5 = bitcast i8* %1 to i32*
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds i8, i8* %1, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 20, i1 false) #13
  br label %7

7:                                                ; preds = %0, %3
  %8 = phi %struct._FcCharSet* [ %4, %3 ], [ null, %0 ]
  ret %struct._FcCharSet* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @IA__FcCharSetDestroy(%struct._FcCharSet*) #4 {
  %2 = icmp eq %struct._FcCharSet* %0, null
  br i1 %2, label %47, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = bitcast %struct._FcCharSet* %0 to i8*
  tail call void @FcCacheObjectDereference(i8* nonnull %8) #13
  br label %47

9:                                                ; preds = %3
  %10 = atomicrmw add i32* %4, i32 -1 seq_cst
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %47

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %32

16:                                               ; preds = %12
  %17 = ptrtoint %struct._FcCharSet* %0 to i64
  %18 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  br label %19

19:                                               ; preds = %16, %19
  %20 = phi i64 [ 0, %16 ], [ %28, %19 ]
  %21 = load i64, i64* %18, align 8
  %22 = add nsw i64 %21, %17
  %23 = inttoptr i64 %22 to i64*
  %24 = getelementptr inbounds i64, i64* %23, i64 %20
  %25 = load i64, i64* %24, align 8
  %26 = add nsw i64 %22, %25
  %27 = inttoptr i64 %26 to i8*
  tail call void @free(i8* %27) #13
  %28 = add nuw nsw i64 %20, 1
  %29 = load i32, i32* %13, align 4
  %30 = sext i32 %29 to i64
  %31 = icmp slt i64 %28, %30
  br i1 %31, label %19, label %32

32:                                               ; preds = %19, %12
  %33 = phi i32 [ %14, %12 ], [ %29, %19 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %45, label %35

35:                                               ; preds = %32
  %36 = ptrtoint %struct._FcCharSet* %0 to i64
  %37 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = add nsw i64 %38, %36
  %40 = inttoptr i64 %39 to i8*
  tail call void @free(i8* %40) #13
  %41 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 3
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i64 %42, %36
  %44 = inttoptr i64 %43 to i8*
  tail call void @free(i8* %44) #13
  br label %45

45:                                               ; preds = %32, %35
  %46 = bitcast %struct._FcCharSet* %0 to i8*
  tail call void @free(i8* %46) #13
  br label %47

47:                                               ; preds = %45, %1, %9, %7
  ret void
}

declare hidden void @FcCacheObjectDereference(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcCharLeaf* @FcCharSetFindLeafCreate(%struct._FcCharSet*, i32) local_unnamed_addr #4 {
  %3 = lshr i32 %1, 8
  %4 = trunc i32 %3 to i16
  %5 = ptrtoint %struct._FcCharSet* %0 to i64
  %6 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, %5
  %9 = inttoptr i64 %8 to i16*
  %10 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, -1
  %13 = icmp eq i64 %8, 0
  br i1 %13, label %60, label %14

14:                                               ; preds = %2
  %15 = icmp sgt i32 %11, 0
  br i1 %15, label %16, label %32

16:                                               ; preds = %14, %25
  %17 = phi i32 [ %30, %25 ], [ %12, %14 ]
  %18 = phi i32 [ %29, %25 ], [ 0, %14 ]
  %19 = add nsw i32 %18, %17
  %20 = ashr i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i16, i16* %9, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, %4
  br i1 %24, label %47, label %25

25:                                               ; preds = %16
  %26 = icmp ult i16 %23, %4
  %27 = add nsw i32 %20, 1
  %28 = add nsw i32 %20, -1
  %29 = select i1 %26, i32 %27, i32 %18
  %30 = select i1 %26, i32 %17, i32 %28
  %31 = icmp sgt i32 %29, %30
  br i1 %31, label %32, label %16

32:                                               ; preds = %25, %14
  %33 = phi i32 [ %12, %14 ], [ %30, %25 ]
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %32
  %36 = icmp slt i32 %33, %11
  br i1 %36, label %37, label %44

37:                                               ; preds = %35
  %38 = sext i32 %33 to i64
  %39 = getelementptr inbounds i16, i16* %9, i64 %38
  %40 = load i16, i16* %39, align 2
  %41 = icmp ult i16 %40, %4
  br i1 %41, label %42, label %44

42:                                               ; preds = %37, %32
  %43 = add nsw i32 %33, 1
  br label %44

44:                                               ; preds = %42, %37, %35
  %45 = phi i32 [ %43, %42 ], [ %33, %37 ], [ %33, %35 ]
  %46 = xor i32 %45, -1
  br label %47

47:                                               ; preds = %16, %44
  %48 = phi i32 [ %46, %44 ], [ %20, %16 ]
  %49 = icmp sgt i32 %48, -1
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = add nsw i64 %52, %5
  %54 = inttoptr i64 %53 to i64*
  %55 = sext i32 %48 to i64
  %56 = getelementptr inbounds i64, i64* %54, i64 %55
  %57 = load i64, i64* %56, align 8
  %58 = add nsw i64 %53, %57
  %59 = inttoptr i64 %58 to %struct._FcCharLeaf*
  br label %70

60:                                               ; preds = %2, %47
  %61 = phi i32 [ %48, %47 ], [ -1, %2 ]
  %62 = tail call noalias i8* @calloc(i64 1, i64 32) #13
  %63 = bitcast i8* %62 to %struct._FcCharLeaf*
  %64 = icmp eq i8* %62, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %60
  %66 = xor i32 %61, -1
  %67 = tail call fastcc i32 @FcCharSetPutLeaf(%struct._FcCharSet* %0, i32 %1, %struct._FcCharLeaf* nonnull %63, i32 %66)
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %65
  tail call void @free(i8* nonnull %62) #13
  br label %70

70:                                               ; preds = %65, %60, %69, %50
  %71 = phi %struct._FcCharLeaf* [ %59, %50 ], [ null, %69 ], [ null, %60 ], [ %63, %65 ]
  ret %struct._FcCharLeaf* %71
}

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @FcCharSetPutLeaf(%struct._FcCharSet*, i32, %struct._FcCharLeaf*, i32) unnamed_addr #4 {
  %5 = ptrtoint %struct._FcCharSet* %0 to i64
  %6 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, %5
  %9 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, %5
  %12 = lshr i32 %1, 8
  %13 = icmp ugt i32 %1, 16777215
  br i1 %13, label %168, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16), !range !2
  %18 = icmp ugt i32 %17, 1
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = inttoptr i64 %8 to i64*
  %21 = inttoptr i64 %11 to i16*
  br label %142

22:                                               ; preds = %14
  %23 = icmp eq i32 %16, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %22
  %25 = tail call noalias i8* @malloc(i64 64) #13
  %26 = bitcast i8* %25 to i64*
  %27 = tail call noalias i8* @malloc(i64 16) #13
  %28 = bitcast i8* %27 to i16*
  %29 = icmp ne i8* %25, null
  %30 = icmp ne i8* %27, null
  %31 = and i1 %29, %30
  br i1 %31, label %134, label %32

32:                                               ; preds = %24
  br i1 %29, label %33, label %34

33:                                               ; preds = %32
  tail call void @free(i8* nonnull %25) #13
  br label %34

34:                                               ; preds = %33, %32
  br i1 %30, label %35, label %168

35:                                               ; preds = %34
  tail call void @free(i8* nonnull %27) #13
  br label %168

36:                                               ; preds = %22
  %37 = shl i32 %16, 1
  %38 = inttoptr i64 %8 to i8*
  %39 = zext i32 %37 to i64
  %40 = shl nuw nsw i64 %39, 3
  %41 = tail call i8* @realloc(i8* %38, i64 %40) #13
  %42 = bitcast i8* %41 to i64*
  %43 = icmp eq i8* %41, null
  br i1 %43, label %168, label %44

44:                                               ; preds = %36
  %45 = inttoptr i64 %11 to i8*
  %46 = shl nuw nsw i64 %39, 1
  %47 = tail call i8* @realloc(i8* %45, i64 %46) #13
  %48 = bitcast i8* %47 to i16*
  %49 = icmp eq i8* %47, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44
  %51 = and i32 %16, 2147483647
  %52 = zext i32 %51 to i64
  %53 = shl nuw nsw i64 %52, 3
  %54 = tail call i8* @realloc(i8* nonnull %41, i64 %53) #13
  %55 = icmp eq i8* %54, null
  br i1 %55, label %168, label %56

56:                                               ; preds = %50
  %57 = ptrtoint i8* %54 to i64
  %58 = sub nsw i64 %57, %5
  store i64 %58, i64* %6, align 8
  br label %168

59:                                               ; preds = %44
  %60 = ptrtoint i8* %41 to i64
  %61 = sub nsw i64 %60, %8
  %62 = icmp ne i64 %61, 0
  %63 = load i32, i32* %15, align 4
  %64 = icmp sgt i32 %63, 0
  %65 = and i1 %62, %64
  br i1 %65, label %66, label %134

66:                                               ; preds = %59
  %67 = sext i32 %63 to i64
  %68 = icmp ult i32 %63, 4
  br i1 %68, label %125, label %69

69:                                               ; preds = %66
  %70 = and i64 %67, -4
  %71 = insertelement <2 x i64> undef, i64 %61, i32 0
  %72 = shufflevector <2 x i64> %71, <2 x i64> undef, <2 x i32> zeroinitializer
  %73 = insertelement <2 x i64> undef, i64 %61, i32 0
  %74 = shufflevector <2 x i64> %73, <2 x i64> undef, <2 x i32> zeroinitializer
  %75 = add nsw i64 %70, -4
  %76 = lshr exact i64 %75, 2
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 1
  %79 = icmp eq i64 %75, 0
  br i1 %79, label %109, label %80

80:                                               ; preds = %69
  %81 = sub nuw nsw i64 %77, %78
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %106, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %107, %82 ]
  %85 = getelementptr inbounds i64, i64* %42, i64 %83
  %86 = bitcast i64* %85 to <2 x i64>*
  %87 = load <2 x i64>, <2 x i64>* %86, align 8
  %88 = getelementptr inbounds i64, i64* %85, i64 2
  %89 = bitcast i64* %88 to <2 x i64>*
  %90 = load <2 x i64>, <2 x i64>* %89, align 8
  %91 = sub nsw <2 x i64> %87, %72
  %92 = sub nsw <2 x i64> %90, %74
  %93 = bitcast i64* %85 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %93, align 8
  %94 = bitcast i64* %88 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %94, align 8
  %95 = or i64 %83, 4
  %96 = getelementptr inbounds i64, i64* %42, i64 %95
  %97 = bitcast i64* %96 to <2 x i64>*
  %98 = load <2 x i64>, <2 x i64>* %97, align 8
  %99 = getelementptr inbounds i64, i64* %96, i64 2
  %100 = bitcast i64* %99 to <2 x i64>*
  %101 = load <2 x i64>, <2 x i64>* %100, align 8
  %102 = sub nsw <2 x i64> %98, %72
  %103 = sub nsw <2 x i64> %101, %74
  %104 = bitcast i64* %96 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %104, align 8
  %105 = bitcast i64* %99 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %105, align 8
  %106 = add i64 %83, 8
  %107 = add i64 %84, -2
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %82, !llvm.loop !3

109:                                              ; preds = %82, %69
  %110 = phi i64 [ 0, %69 ], [ %106, %82 ]
  %111 = icmp eq i64 %78, 0
  br i1 %111, label %123, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds i64, i64* %42, i64 %110
  %114 = bitcast i64* %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8
  %116 = getelementptr inbounds i64, i64* %113, i64 2
  %117 = bitcast i64* %116 to <2 x i64>*
  %118 = load <2 x i64>, <2 x i64>* %117, align 8
  %119 = sub nsw <2 x i64> %115, %72
  %120 = sub nsw <2 x i64> %118, %74
  %121 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %121, align 8
  %122 = bitcast i64* %116 to <2 x i64>*
  store <2 x i64> %120, <2 x i64>* %122, align 8
  br label %123

123:                                              ; preds = %109, %112
  %124 = icmp eq i64 %70, %67
  br i1 %124, label %134, label %125

125:                                              ; preds = %123, %66
  %126 = phi i64 [ 0, %66 ], [ %70, %123 ]
  br label %127

127:                                              ; preds = %125, %127
  %128 = phi i64 [ %132, %127 ], [ %126, %125 ]
  %129 = getelementptr inbounds i64, i64* %42, i64 %128
  %130 = load i64, i64* %129, align 8
  %131 = sub nsw i64 %130, %61
  store i64 %131, i64* %129, align 8
  %132 = add nuw nsw i64 %128, 1
  %133 = icmp slt i64 %132, %67
  br i1 %133, label %127, label %134, !llvm.loop !5

134:                                              ; preds = %127, %123, %59, %24
  %135 = phi i32 [ 0, %24 ], [ %63, %59 ], [ %63, %123 ], [ %63, %127 ]
  %136 = phi i64* [ %26, %24 ], [ %42, %59 ], [ %42, %123 ], [ %42, %127 ]
  %137 = phi i16* [ %28, %24 ], [ %48, %59 ], [ %48, %123 ], [ %48, %127 ]
  %138 = ptrtoint i64* %136 to i64
  %139 = sub nsw i64 %138, %5
  store i64 %139, i64* %6, align 8
  %140 = ptrtoint i16* %137 to i64
  %141 = sub nsw i64 %140, %5
  store i64 %141, i64* %9, align 8
  br label %142

142:                                              ; preds = %19, %134
  %143 = phi i64 [ %8, %19 ], [ %138, %134 ]
  %144 = phi i32 [ %16, %19 ], [ %135, %134 ]
  %145 = phi i64* [ %20, %19 ], [ %136, %134 ]
  %146 = phi i16* [ %21, %19 ], [ %137, %134 ]
  %147 = sext i32 %3 to i64
  %148 = getelementptr inbounds i64, i64* %145, i64 %147
  %149 = getelementptr inbounds i64, i64* %148, i64 1
  %150 = bitcast i64* %149 to i8*
  %151 = bitcast i64* %148 to i8*
  %152 = sub nsw i32 %144, %3
  %153 = sext i32 %152 to i64
  %154 = shl nsw i64 %153, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %154, i1 false)
  %155 = getelementptr inbounds i16, i16* %146, i64 %147
  %156 = getelementptr inbounds i16, i16* %155, i64 1
  %157 = bitcast i16* %156 to i8*
  %158 = bitcast i16* %155 to i8*
  %159 = load i32, i32* %15, align 4
  %160 = sub nsw i32 %159, %3
  %161 = sext i32 %160 to i64
  %162 = shl nsw i64 %161, 1
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %157, i8* align 2 %158, i64 %162, i1 false)
  %163 = trunc i32 %12 to i16
  store i16 %163, i16* %155, align 2
  %164 = ptrtoint %struct._FcCharLeaf* %2 to i64
  %165 = sub nsw i64 %164, %143
  store i64 %165, i64* %148, align 8
  %166 = load i32, i32* %15, align 4
  %167 = add nsw i32 %166, 1
  store i32 %167, i32* %15, align 4
  br label %168

168:                                              ; preds = %50, %36, %56, %34, %35, %4, %142
  %169 = phi i32 [ 1, %142 ], [ 0, %4 ], [ 0, %35 ], [ 0, %34 ], [ 0, %56 ], [ 0, %36 ], [ 0, %50 ]
  ret i32 %169
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcCharSetAddChar(%struct._FcCharSet*, i32) #4 {
  %3 = icmp eq %struct._FcCharSet* %0, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %20, label %8

8:                                                ; preds = %4
  %9 = tail call %struct._FcCharLeaf* @FcCharSetFindLeafCreate(%struct._FcCharSet* nonnull %0, i32 %1)
  %10 = icmp eq %struct._FcCharLeaf* %9, null
  br i1 %10, label %20, label %11

11:                                               ; preds = %8
  %12 = lshr i32 %1, 5
  %13 = and i32 %12, 7
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %9, i64 0, i32 0, i64 %14
  %16 = and i32 %1, 31
  %17 = shl i32 1, %16
  %18 = load i32, i32* %15, align 4
  %19 = or i32 %18, %17
  store i32 %19, i32* %15, align 4
  br label %20

20:                                               ; preds = %4, %8, %2, %11
  %21 = phi i32 [ 1, %11 ], [ 0, %4 ], [ 0, %2 ], [ 0, %8 ]
  ret i32 %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @IA__FcCharSetDelChar(%struct._FcCharSet*, i32) #7 {
  %3 = icmp eq %struct._FcCharSet* %0, null
  br i1 %3, label %77, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %77, label %8

8:                                                ; preds = %4
  %9 = lshr i32 %1, 8
  %10 = trunc i32 %9 to i16
  %11 = ptrtoint %struct._FcCharSet* %0 to i64
  %12 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, %11
  %15 = inttoptr i64 %14 to i16*
  %16 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, -1
  %19 = icmp eq i64 %14, 0
  br i1 %19, label %77, label %20

20:                                               ; preds = %8
  %21 = icmp sgt i32 %17, 0
  br i1 %21, label %22, label %38

22:                                               ; preds = %20, %31
  %23 = phi i32 [ %36, %31 ], [ %18, %20 ]
  %24 = phi i32 [ %35, %31 ], [ 0, %20 ]
  %25 = add nsw i32 %24, %23
  %26 = ashr i32 %25, 1
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i16, i16* %15, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = icmp eq i16 %29, %10
  br i1 %30, label %53, label %31

31:                                               ; preds = %22
  %32 = icmp ult i16 %29, %10
  %33 = add nsw i32 %26, 1
  %34 = add nsw i32 %26, -1
  %35 = select i1 %32, i32 %33, i32 %24
  %36 = select i1 %32, i32 %23, i32 %34
  %37 = icmp sgt i32 %35, %36
  br i1 %37, label %38, label %22

38:                                               ; preds = %31, %20
  %39 = phi i32 [ %18, %20 ], [ %36, %31 ]
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %38
  %42 = icmp slt i32 %39, %17
  br i1 %42, label %43, label %50

43:                                               ; preds = %41
  %44 = sext i32 %39 to i64
  %45 = getelementptr inbounds i16, i16* %15, i64 %44
  %46 = load i16, i16* %45, align 2
  %47 = icmp ult i16 %46, %10
  br i1 %47, label %48, label %50

48:                                               ; preds = %43, %38
  %49 = add nsw i32 %39, 1
  br label %50

50:                                               ; preds = %48, %43, %41
  %51 = phi i32 [ %49, %48 ], [ %39, %43 ], [ %39, %41 ]
  %52 = xor i32 %51, -1
  br label %53

53:                                               ; preds = %22, %50
  %54 = phi i32 [ %52, %50 ], [ %26, %22 ]
  %55 = icmp sgt i32 %54, -1
  br i1 %55, label %56, label %77

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %58 = load i64, i64* %57, align 8
  %59 = add nsw i64 %58, %11
  %60 = inttoptr i64 %59 to i64*
  %61 = sext i32 %54 to i64
  %62 = getelementptr inbounds i64, i64* %60, i64 %61
  %63 = load i64, i64* %62, align 8
  %64 = add nsw i64 %59, %63
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %56
  %67 = inttoptr i64 %64 to %struct._FcCharLeaf*
  %68 = lshr i32 %1, 5
  %69 = and i32 %68, 7
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %67, i64 0, i32 0, i64 %70
  %72 = and i32 %1, 31
  %73 = shl i32 1, %72
  %74 = xor i32 %73, -1
  %75 = load i32, i32* %71, align 4
  %76 = and i32 %75, %74
  store i32 %76, i32* %71, align 4
  br label %77

77:                                               ; preds = %4, %8, %53, %56, %2, %66
  %78 = phi i32 [ 1, %66 ], [ 0, %4 ], [ 0, %2 ], [ 1, %56 ], [ 1, %53 ], [ 1, %8 ]
  ret i32 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcCharSet* @IA__FcCharSetCopy(%struct._FcCharSet* returned) #4 {
  %2 = icmp eq %struct._FcCharSet* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = atomicrmw add i32* %4, i32 1 seq_cst
  br label %11

9:                                                ; preds = %3
  %10 = bitcast %struct._FcCharSet* %0 to i8*
  tail call void @FcCacheObjectReference(i8* nonnull %10) #13
  br label %11

11:                                               ; preds = %1, %7, %9
  ret %struct._FcCharSet* %0
}

declare hidden void @FcCacheObjectReference(i8*) local_unnamed_addr #5

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @IA__FcCharSetEqual(%struct._FcCharSet*, %struct._FcCharSet*) #8 {
  %3 = icmp eq %struct._FcCharSet* %0, %1
  br i1 %3, label %187, label %4

4:                                                ; preds = %2
  %5 = icmp ne %struct._FcCharSet* %0, null
  %6 = icmp ne %struct._FcCharSet* %1, null
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %187

8:                                                ; preds = %4
  %9 = ptrtoint %struct._FcCharSet* %0 to i64
  %10 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = add nsw i64 %11, %9
  %13 = inttoptr i64 %12 to i16*
  %14 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, -1
  %17 = icmp eq i64 %12, 0
  br i1 %17, label %40, label %18

18:                                               ; preds = %8
  %19 = icmp sgt i32 %15, 0
  br i1 %19, label %20, label %30

20:                                               ; preds = %18, %27
  %21 = phi i32 [ %28, %27 ], [ %16, %18 ]
  %22 = ashr i32 %21, 1
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i16, i16* %13, i64 %23
  %25 = load i16, i16* %24, align 2
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %20
  %28 = add nsw i32 %22, -1
  %29 = icmp slt i32 %21, 2
  br i1 %29, label %30, label %20

30:                                               ; preds = %27, %18
  %31 = phi i32 [ %16, %18 ], [ %28, %27 ]
  %32 = lshr i32 %31, 31
  %33 = add nsw i32 %32, %31
  %34 = xor i32 %33, -1
  br label %35

35:                                               ; preds = %20, %30
  %36 = phi i32 [ %34, %30 ], [ %22, %20 ]
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = sext i32 %36 to i64
  br label %50

40:                                               ; preds = %35, %8
  %41 = phi i32 [ %36, %35 ], [ -1, %8 ]
  %42 = xor i32 %41, -1
  %43 = icmp eq i32 %15, %42
  br i1 %43, label %62, label %44

44:                                               ; preds = %40
  %45 = sext i32 %42 to i64
  %46 = getelementptr inbounds i16, i16* %13, i64 %45
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = shl nuw nsw i32 %48, 8
  br label %50

50:                                               ; preds = %44, %38
  %51 = phi i32 [ %49, %44 ], [ 0, %38 ]
  %52 = phi i64 [ %45, %44 ], [ %39, %38 ]
  %53 = phi i32 [ %42, %44 ], [ %36, %38 ]
  %54 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = add nsw i64 %55, %9
  %57 = inttoptr i64 %56 to i64*
  %58 = getelementptr inbounds i64, i64* %57, i64 %52
  %59 = load i64, i64* %58, align 8
  %60 = add nsw i64 %56, %59
  %61 = inttoptr i64 %60 to %struct._FcCharLeaf*
  br label %62

62:                                               ; preds = %40, %50
  %63 = phi i32 [ %53, %50 ], [ 0, %40 ]
  %64 = phi i32 [ %51, %50 ], [ -1, %40 ]
  %65 = phi %struct._FcCharLeaf* [ %61, %50 ], [ null, %40 ]
  %66 = ptrtoint %struct._FcCharSet* %1 to i64
  %67 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 3
  %68 = load i64, i64* %67, align 8
  %69 = add nsw i64 %68, %66
  %70 = inttoptr i64 %69 to i16*
  %71 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = add nsw i32 %72, -1
  %74 = icmp eq i64 %69, 0
  br i1 %74, label %97, label %75

75:                                               ; preds = %62
  %76 = icmp sgt i32 %72, 0
  br i1 %76, label %77, label %87

77:                                               ; preds = %75, %84
  %78 = phi i32 [ %85, %84 ], [ %73, %75 ]
  %79 = ashr i32 %78, 1
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i16, i16* %70, i64 %80
  %82 = load i16, i16* %81, align 2
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %92, label %84

84:                                               ; preds = %77
  %85 = add nsw i32 %79, -1
  %86 = icmp slt i32 %78, 2
  br i1 %86, label %87, label %77

87:                                               ; preds = %84, %75
  %88 = phi i32 [ %73, %75 ], [ %85, %84 ]
  %89 = lshr i32 %88, 31
  %90 = add nsw i32 %89, %88
  %91 = xor i32 %90, -1
  br label %92

92:                                               ; preds = %77, %87
  %93 = phi i32 [ %91, %87 ], [ %79, %77 ]
  %94 = icmp slt i32 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  %96 = sext i32 %93 to i64
  br label %107

97:                                               ; preds = %92, %62
  %98 = phi i32 [ %93, %92 ], [ -1, %62 ]
  %99 = xor i32 %98, -1
  %100 = icmp eq i32 %72, %99
  br i1 %100, label %182, label %101

101:                                              ; preds = %97
  %102 = sext i32 %99 to i64
  %103 = getelementptr inbounds i16, i16* %70, i64 %102
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i32
  %106 = shl nuw nsw i32 %105, 8
  br label %107

107:                                              ; preds = %95, %101
  %108 = phi i32 [ %106, %101 ], [ 0, %95 ]
  %109 = phi i64 [ %102, %101 ], [ %96, %95 ]
  %110 = phi i32 [ %99, %101 ], [ %93, %95 ]
  %111 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 2
  %112 = load i64, i64* %111, align 8
  %113 = add nsw i64 %112, %66
  %114 = inttoptr i64 %113 to i64*
  %115 = getelementptr inbounds i64, i64* %114, i64 %109
  %116 = load i64, i64* %115, align 8
  %117 = add nsw i64 %113, %116
  %118 = inttoptr i64 %117 to %struct._FcCharLeaf*
  %119 = icmp ne %struct._FcCharLeaf* %65, null
  %120 = icmp ne i64 %117, 0
  %121 = and i1 %119, %120
  br i1 %121, label %122, label %182

122:                                              ; preds = %107
  %123 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %124 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 2
  br label %125

125:                                              ; preds = %122, %164
  %126 = phi %struct._FcCharLeaf* [ %118, %122 ], [ %176, %164 ]
  %127 = phi i32 [ %108, %122 ], [ %169, %164 ]
  %128 = phi i32 [ %110, %122 ], [ %162, %164 ]
  %129 = phi %struct._FcCharLeaf* [ %65, %122 ], [ %161, %164 ]
  %130 = phi i32 [ %64, %122 ], [ %160, %164 ]
  %131 = phi i32 [ %63, %122 ], [ %159, %164 ]
  %132 = icmp eq i32 %130, %127
  br i1 %132, label %133, label %187

133:                                              ; preds = %125
  %134 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %129, i64 0, i32 0, i64 0
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %135, %137
  br i1 %138, label %139, label %187

139:                                              ; preds = %133
  %140 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %129, i64 0, i32 0, i64 1
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 1
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %141, %143
  br i1 %144, label %189, label %187

145:                                              ; preds = %225
  %146 = sext i32 %226 to i64
  %147 = getelementptr inbounds i16, i16* %13, i64 %146
  %148 = load i16, i16* %147, align 2
  %149 = zext i16 %148 to i32
  %150 = shl nuw nsw i32 %149, 8
  %151 = load i64, i64* %123, align 8
  %152 = add nsw i64 %151, %9
  %153 = inttoptr i64 %152 to i64*
  %154 = getelementptr inbounds i64, i64* %153, i64 %146
  %155 = load i64, i64* %154, align 8
  %156 = add nsw i64 %152, %155
  %157 = inttoptr i64 %156 to %struct._FcCharLeaf*
  br label %158

158:                                              ; preds = %225, %145
  %159 = phi i32 [ %226, %145 ], [ %131, %225 ]
  %160 = phi i32 [ %150, %145 ], [ -1, %225 ]
  %161 = phi %struct._FcCharLeaf* [ %157, %145 ], [ null, %225 ]
  %162 = add nsw i32 %128, 1
  %163 = icmp slt i32 %162, %72
  br i1 %163, label %164, label %182

164:                                              ; preds = %158
  %165 = sext i32 %162 to i64
  %166 = getelementptr inbounds i16, i16* %70, i64 %165
  %167 = load i16, i16* %166, align 2
  %168 = zext i16 %167 to i32
  %169 = shl nuw nsw i32 %168, 8
  %170 = load i64, i64* %124, align 8
  %171 = add nsw i64 %170, %66
  %172 = inttoptr i64 %171 to i64*
  %173 = getelementptr inbounds i64, i64* %172, i64 %165
  %174 = load i64, i64* %173, align 8
  %175 = add nsw i64 %171, %174
  %176 = inttoptr i64 %175 to %struct._FcCharLeaf*
  %177 = icmp ne %struct._FcCharLeaf* %161, null
  %178 = icmp ne i64 %175, 0
  %179 = and i1 %177, %178
  br i1 %179, label %125, label %180

180:                                              ; preds = %164
  %181 = inttoptr i64 %175 to %struct._FcCharLeaf*
  br label %182

182:                                              ; preds = %158, %180, %97, %107
  %183 = phi %struct._FcCharLeaf* [ %65, %107 ], [ %65, %97 ], [ %161, %180 ], [ %161, %158 ]
  %184 = phi %struct._FcCharLeaf* [ %118, %107 ], [ null, %97 ], [ %181, %180 ], [ null, %158 ]
  %185 = icmp eq %struct._FcCharLeaf* %183, %184
  %186 = zext i1 %185 to i32
  br label %187

187:                                              ; preds = %125, %133, %139, %189, %195, %201, %207, %213, %219, %4, %2, %182
  %188 = phi i32 [ %186, %182 ], [ 1, %2 ], [ 0, %4 ], [ 0, %219 ], [ 0, %213 ], [ 0, %207 ], [ 0, %201 ], [ 0, %195 ], [ 0, %189 ], [ 0, %139 ], [ 0, %133 ], [ 0, %125 ]
  ret i32 %188

189:                                              ; preds = %139
  %190 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %129, i64 0, i32 0, i64 2
  %191 = load i32, i32* %190, align 4
  %192 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 2
  %193 = load i32, i32* %192, align 4
  %194 = icmp eq i32 %191, %193
  br i1 %194, label %195, label %187

195:                                              ; preds = %189
  %196 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %129, i64 0, i32 0, i64 3
  %197 = load i32, i32* %196, align 4
  %198 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 3
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %197, %199
  br i1 %200, label %201, label %187

201:                                              ; preds = %195
  %202 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %129, i64 0, i32 0, i64 4
  %203 = load i32, i32* %202, align 4
  %204 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 4
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %203, %205
  br i1 %206, label %207, label %187

207:                                              ; preds = %201
  %208 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %129, i64 0, i32 0, i64 5
  %209 = load i32, i32* %208, align 4
  %210 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 5
  %211 = load i32, i32* %210, align 4
  %212 = icmp eq i32 %209, %211
  br i1 %212, label %213, label %187

213:                                              ; preds = %207
  %214 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %129, i64 0, i32 0, i64 6
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 6
  %217 = load i32, i32* %216, align 4
  %218 = icmp eq i32 %215, %217
  br i1 %218, label %219, label %187

219:                                              ; preds = %213
  %220 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %129, i64 0, i32 0, i64 7
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 7
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %221, %223
  br i1 %224, label %225, label %187

225:                                              ; preds = %219
  %226 = add nsw i32 %131, 1
  %227 = icmp slt i32 %226, %15
  br i1 %227, label %145, label %158
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcCharSet* @IA__FcCharSetIntersect(%struct._FcCharSet*, %struct._FcCharSet*) #4 {
  %3 = tail call fastcc %struct._FcCharSet* @FcCharSetOperate(%struct._FcCharSet* %0, %struct._FcCharSet* %1, i32 (%struct._FcCharLeaf*, %struct._FcCharLeaf*, %struct._FcCharLeaf*)* nonnull @FcCharSetIntersectLeaf, i32 0, i32 0)
  ret %struct._FcCharSet* %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct._FcCharSet* @FcCharSetOperate(%struct._FcCharSet*, %struct._FcCharSet*, i32 (%struct._FcCharLeaf*, %struct._FcCharLeaf*, %struct._FcCharLeaf*)* nocapture, i32, i32) unnamed_addr #4 {
  %6 = alloca %struct._FcCharLeaf, align 4
  %7 = icmp ne %struct._FcCharSet* %0, null
  %8 = icmp ne %struct._FcCharSet* %1, null
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %408

10:                                               ; preds = %5
  %11 = tail call noalias i8* @malloc(i64 24) #13
  %12 = icmp eq i8* %11, null
  br i1 %12, label %408, label %13

13:                                               ; preds = %10
  %14 = bitcast i8* %11 to %struct._FcCharSet*
  %15 = bitcast i8* %11 to i32*
  store i32 1, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %11, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 20, i1 false) #13
  %17 = ptrtoint %struct._FcCharSet* %0 to i64
  %18 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = add nsw i64 %19, %17
  %21 = inttoptr i64 %20 to i16*
  %22 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = add nsw i32 %23, -1
  %25 = icmp eq i64 %20, 0
  br i1 %25, label %48, label %26

26:                                               ; preds = %13
  %27 = icmp sgt i32 %23, 0
  br i1 %27, label %28, label %38

28:                                               ; preds = %26, %35
  %29 = phi i32 [ %36, %35 ], [ %24, %26 ]
  %30 = ashr i32 %29, 1
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i16, i16* %21, i64 %31
  %33 = load i16, i16* %32, align 2
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %28
  %36 = add nsw i32 %30, -1
  %37 = icmp slt i32 %29, 2
  br i1 %37, label %38, label %28

38:                                               ; preds = %35, %26
  %39 = phi i32 [ %24, %26 ], [ %36, %35 ]
  %40 = lshr i32 %39, 31
  %41 = add nsw i32 %40, %39
  %42 = xor i32 %41, -1
  br label %43

43:                                               ; preds = %28, %38
  %44 = phi i32 [ %42, %38 ], [ %30, %28 ]
  %45 = icmp slt i32 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %43
  %47 = sext i32 %44 to i64
  br label %58

48:                                               ; preds = %43, %13
  %49 = phi i32 [ %44, %43 ], [ -1, %13 ]
  %50 = xor i32 %49, -1
  %51 = icmp eq i32 %23, %50
  br i1 %51, label %70, label %52

52:                                               ; preds = %48
  %53 = sext i32 %50 to i64
  %54 = getelementptr inbounds i16, i16* %21, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = shl nuw nsw i32 %56, 8
  br label %58

58:                                               ; preds = %52, %46
  %59 = phi i32 [ %57, %52 ], [ 0, %46 ]
  %60 = phi i64 [ %53, %52 ], [ %47, %46 ]
  %61 = phi i32 [ %50, %52 ], [ %44, %46 ]
  %62 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = add nsw i64 %63, %17
  %65 = inttoptr i64 %64 to i64*
  %66 = getelementptr inbounds i64, i64* %65, i64 %60
  %67 = load i64, i64* %66, align 8
  %68 = add nsw i64 %64, %67
  %69 = inttoptr i64 %68 to %struct._FcCharLeaf*
  br label %70

70:                                               ; preds = %48, %58
  %71 = phi i32 [ %61, %58 ], [ 0, %48 ]
  %72 = phi i32 [ %59, %58 ], [ -1, %48 ]
  %73 = phi %struct._FcCharLeaf* [ %69, %58 ], [ null, %48 ]
  %74 = ptrtoint %struct._FcCharSet* %1 to i64
  %75 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 3
  %76 = load i64, i64* %75, align 8
  %77 = add nsw i64 %76, %74
  %78 = inttoptr i64 %77 to i16*
  %79 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = add nsw i32 %80, -1
  %82 = icmp eq i64 %77, 0
  br i1 %82, label %105, label %83

83:                                               ; preds = %70
  %84 = icmp sgt i32 %80, 0
  br i1 %84, label %85, label %95

85:                                               ; preds = %83, %92
  %86 = phi i32 [ %93, %92 ], [ %81, %83 ]
  %87 = ashr i32 %86, 1
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i16, i16* %78, i64 %88
  %90 = load i16, i16* %89, align 2
  %91 = icmp eq i16 %90, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %85
  %93 = add nsw i32 %87, -1
  %94 = icmp slt i32 %86, 2
  br i1 %94, label %95, label %85

95:                                               ; preds = %92, %83
  %96 = phi i32 [ %81, %83 ], [ %93, %92 ]
  %97 = lshr i32 %96, 31
  %98 = add nsw i32 %97, %96
  %99 = xor i32 %98, -1
  br label %100

100:                                              ; preds = %85, %95
  %101 = phi i32 [ %99, %95 ], [ %87, %85 ]
  %102 = icmp slt i32 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %100
  %104 = sext i32 %101 to i64
  br label %115

105:                                              ; preds = %100, %70
  %106 = phi i32 [ %101, %100 ], [ -1, %70 ]
  %107 = xor i32 %106, -1
  %108 = icmp eq i32 %80, %107
  br i1 %108, label %127, label %109

109:                                              ; preds = %105
  %110 = sext i32 %107 to i64
  %111 = getelementptr inbounds i16, i16* %78, i64 %110
  %112 = load i16, i16* %111, align 2
  %113 = zext i16 %112 to i32
  %114 = shl nuw nsw i32 %113, 8
  br label %115

115:                                              ; preds = %109, %103
  %116 = phi i32 [ %114, %109 ], [ 0, %103 ]
  %117 = phi i64 [ %110, %109 ], [ %104, %103 ]
  %118 = phi i32 [ %107, %109 ], [ %101, %103 ]
  %119 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 2
  %120 = load i64, i64* %119, align 8
  %121 = add nsw i64 %120, %74
  %122 = inttoptr i64 %121 to i64*
  %123 = getelementptr inbounds i64, i64* %122, i64 %117
  %124 = load i64, i64* %123, align 8
  %125 = add nsw i64 %121, %124
  %126 = inttoptr i64 %125 to %struct._FcCharLeaf*
  br label %127

127:                                              ; preds = %105, %115
  %128 = phi i32 [ %118, %115 ], [ 0, %105 ]
  %129 = phi i32 [ %116, %115 ], [ -1, %105 ]
  %130 = phi %struct._FcCharLeaf* [ %126, %115 ], [ null, %105 ]
  %131 = icmp ne i32 %3, 0
  %132 = icmp eq i32 %4, 0
  %133 = bitcast %struct._FcCharLeaf* %6 to i8*
  %134 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %135 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 2
  %136 = icmp eq i32 %3, 0
  %137 = bitcast %struct._FcCharLeaf* %6 to i8*
  br label %138

138:                                              ; preds = %399, %127
  %139 = phi i32 [ %71, %127 ], [ %400, %399 ]
  %140 = phi i32 [ %72, %127 ], [ %401, %399 ]
  %141 = phi %struct._FcCharLeaf* [ %73, %127 ], [ %402, %399 ]
  %142 = phi i32 [ %128, %127 ], [ %403, %399 ]
  %143 = phi i32 [ %129, %127 ], [ %404, %399 ]
  %144 = phi %struct._FcCharLeaf* [ %130, %127 ], [ %405, %399 ]
  %145 = icmp eq %struct._FcCharLeaf* %141, null
  br i1 %145, label %146, label %149

146:                                              ; preds = %138
  %147 = icmp eq %struct._FcCharLeaf* %144, null
  %148 = or i1 %132, %147
  br i1 %148, label %408, label %152

149:                                              ; preds = %138
  %150 = icmp ne %struct._FcCharLeaf* %144, null
  %151 = or i1 %131, %150
  br i1 %151, label %152, label %408

152:                                              ; preds = %149, %146
  %153 = icmp ult i32 %140, %143
  br i1 %153, label %154, label %248

154:                                              ; preds = %152
  br i1 %136, label %180, label %155

155:                                              ; preds = %154
  %156 = call %struct._FcCharLeaf* @FcCharSetFindLeafCreate(%struct._FcCharSet* nonnull %14, i32 %140) #13
  %157 = icmp eq %struct._FcCharLeaf* %156, null
  br i1 %157, label %407, label %158

158:                                              ; preds = %155
  %159 = bitcast %struct._FcCharLeaf* %156 to i8*
  %160 = bitcast %struct._FcCharLeaf* %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %159, i8* align 4 %160, i64 32, i1 false) #13
  %161 = add nsw i32 %139, 1
  %162 = load i32, i32* %22, align 4
  %163 = icmp slt i32 %161, %162
  br i1 %163, label %164, label %399

164:                                              ; preds = %158
  %165 = load i64, i64* %18, align 8
  %166 = add nsw i64 %165, %17
  %167 = inttoptr i64 %166 to i16*
  %168 = sext i32 %161 to i64
  %169 = getelementptr inbounds i16, i16* %167, i64 %168
  %170 = load i16, i16* %169, align 2
  %171 = zext i16 %170 to i32
  %172 = shl nuw nsw i32 %171, 8
  %173 = load i64, i64* %134, align 8
  %174 = add nsw i64 %173, %17
  %175 = inttoptr i64 %174 to i64*
  %176 = getelementptr inbounds i64, i64* %175, i64 %168
  %177 = load i64, i64* %176, align 8
  %178 = add nsw i64 %174, %177
  %179 = inttoptr i64 %178 to %struct._FcCharLeaf*
  br label %399

180:                                              ; preds = %154
  %181 = lshr i32 %143, 8
  %182 = trunc i32 %181 to i16
  %183 = load i64, i64* %18, align 8
  %184 = add nsw i64 %183, %17
  %185 = inttoptr i64 %184 to i16*
  %186 = load i32, i32* %22, align 4
  %187 = add nsw i32 %186, -1
  %188 = icmp eq i64 %184, 0
  br i1 %188, label %227, label %189

189:                                              ; preds = %180
  %190 = icmp sgt i32 %186, 0
  br i1 %190, label %191, label %207

191:                                              ; preds = %189, %200
  %192 = phi i32 [ %205, %200 ], [ %187, %189 ]
  %193 = phi i32 [ %204, %200 ], [ 0, %189 ]
  %194 = add nsw i32 %193, %192
  %195 = ashr i32 %194, 1
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds i16, i16* %185, i64 %196
  %198 = load i16, i16* %197, align 2
  %199 = icmp eq i16 %198, %182
  br i1 %199, label %222, label %200

200:                                              ; preds = %191
  %201 = icmp ult i16 %198, %182
  %202 = add nsw i32 %195, 1
  %203 = add nsw i32 %195, -1
  %204 = select i1 %201, i32 %202, i32 %193
  %205 = select i1 %201, i32 %192, i32 %203
  %206 = icmp sgt i32 %204, %205
  br i1 %206, label %207, label %191

207:                                              ; preds = %200, %189
  %208 = phi i32 [ %187, %189 ], [ %205, %200 ]
  %209 = icmp slt i32 %208, 0
  br i1 %209, label %217, label %210

210:                                              ; preds = %207
  %211 = icmp slt i32 %208, %186
  br i1 %211, label %212, label %219

212:                                              ; preds = %210
  %213 = sext i32 %208 to i64
  %214 = getelementptr inbounds i16, i16* %185, i64 %213
  %215 = load i16, i16* %214, align 2
  %216 = icmp ult i16 %215, %182
  br i1 %216, label %217, label %219

217:                                              ; preds = %212, %207
  %218 = add nsw i32 %208, 1
  br label %219

219:                                              ; preds = %217, %212, %210
  %220 = phi i32 [ %218, %217 ], [ %208, %212 ], [ %208, %210 ]
  %221 = xor i32 %220, -1
  br label %222

222:                                              ; preds = %191, %219
  %223 = phi i32 [ %221, %219 ], [ %195, %191 ]
  %224 = icmp slt i32 %223, 0
  br i1 %224, label %227, label %225

225:                                              ; preds = %222
  %226 = sext i32 %223 to i64
  br label %237

227:                                              ; preds = %180, %222
  %228 = phi i32 [ %223, %222 ], [ -1, %180 ]
  %229 = xor i32 %228, -1
  %230 = icmp eq i32 %186, %229
  br i1 %230, label %399, label %231

231:                                              ; preds = %227
  %232 = sext i32 %229 to i64
  %233 = getelementptr inbounds i16, i16* %185, i64 %232
  %234 = load i16, i16* %233, align 2
  %235 = zext i16 %234 to i32
  %236 = shl nuw nsw i32 %235, 8
  br label %237

237:                                              ; preds = %231, %225
  %238 = phi i32 [ %236, %231 ], [ %143, %225 ]
  %239 = phi i64 [ %232, %231 ], [ %226, %225 ]
  %240 = phi i32 [ %229, %231 ], [ %223, %225 ]
  %241 = load i64, i64* %134, align 8
  %242 = add nsw i64 %241, %17
  %243 = inttoptr i64 %242 to i64*
  %244 = getelementptr inbounds i64, i64* %243, i64 %239
  %245 = load i64, i64* %244, align 8
  %246 = add nsw i64 %242, %245
  %247 = inttoptr i64 %246 to %struct._FcCharLeaf*
  br label %399

248:                                              ; preds = %152
  %249 = icmp ult i32 %143, %140
  br i1 %249, label %250, label %344

250:                                              ; preds = %248
  br i1 %132, label %276, label %251

251:                                              ; preds = %250
  %252 = call %struct._FcCharLeaf* @FcCharSetFindLeafCreate(%struct._FcCharSet* nonnull %14, i32 %143) #13
  %253 = icmp eq %struct._FcCharLeaf* %252, null
  br i1 %253, label %407, label %254

254:                                              ; preds = %251
  %255 = bitcast %struct._FcCharLeaf* %252 to i8*
  %256 = bitcast %struct._FcCharLeaf* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %255, i8* align 4 %256, i64 32, i1 false) #13
  %257 = add nsw i32 %142, 1
  %258 = load i32, i32* %79, align 4
  %259 = icmp slt i32 %257, %258
  br i1 %259, label %260, label %399

260:                                              ; preds = %254
  %261 = load i64, i64* %75, align 8
  %262 = add nsw i64 %261, %74
  %263 = inttoptr i64 %262 to i16*
  %264 = sext i32 %257 to i64
  %265 = getelementptr inbounds i16, i16* %263, i64 %264
  %266 = load i16, i16* %265, align 2
  %267 = zext i16 %266 to i32
  %268 = shl nuw nsw i32 %267, 8
  %269 = load i64, i64* %135, align 8
  %270 = add nsw i64 %269, %74
  %271 = inttoptr i64 %270 to i64*
  %272 = getelementptr inbounds i64, i64* %271, i64 %264
  %273 = load i64, i64* %272, align 8
  %274 = add nsw i64 %270, %273
  %275 = inttoptr i64 %274 to %struct._FcCharLeaf*
  br label %399

276:                                              ; preds = %250
  %277 = lshr i32 %140, 8
  %278 = trunc i32 %277 to i16
  %279 = load i64, i64* %75, align 8
  %280 = add nsw i64 %279, %74
  %281 = inttoptr i64 %280 to i16*
  %282 = load i32, i32* %79, align 4
  %283 = add nsw i32 %282, -1
  %284 = icmp eq i64 %280, 0
  br i1 %284, label %323, label %285

285:                                              ; preds = %276
  %286 = icmp sgt i32 %282, 0
  br i1 %286, label %287, label %303

287:                                              ; preds = %285, %296
  %288 = phi i32 [ %301, %296 ], [ %283, %285 ]
  %289 = phi i32 [ %300, %296 ], [ 0, %285 ]
  %290 = add nsw i32 %289, %288
  %291 = ashr i32 %290, 1
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds i16, i16* %281, i64 %292
  %294 = load i16, i16* %293, align 2
  %295 = icmp eq i16 %294, %278
  br i1 %295, label %318, label %296

296:                                              ; preds = %287
  %297 = icmp ult i16 %294, %278
  %298 = add nsw i32 %291, 1
  %299 = add nsw i32 %291, -1
  %300 = select i1 %297, i32 %298, i32 %289
  %301 = select i1 %297, i32 %288, i32 %299
  %302 = icmp sgt i32 %300, %301
  br i1 %302, label %303, label %287

303:                                              ; preds = %296, %285
  %304 = phi i32 [ %283, %285 ], [ %301, %296 ]
  %305 = icmp slt i32 %304, 0
  br i1 %305, label %313, label %306

306:                                              ; preds = %303
  %307 = icmp slt i32 %304, %282
  br i1 %307, label %308, label %315

308:                                              ; preds = %306
  %309 = sext i32 %304 to i64
  %310 = getelementptr inbounds i16, i16* %281, i64 %309
  %311 = load i16, i16* %310, align 2
  %312 = icmp ult i16 %311, %278
  br i1 %312, label %313, label %315

313:                                              ; preds = %308, %303
  %314 = add nsw i32 %304, 1
  br label %315

315:                                              ; preds = %313, %308, %306
  %316 = phi i32 [ %314, %313 ], [ %304, %308 ], [ %304, %306 ]
  %317 = xor i32 %316, -1
  br label %318

318:                                              ; preds = %287, %315
  %319 = phi i32 [ %317, %315 ], [ %291, %287 ]
  %320 = icmp slt i32 %319, 0
  br i1 %320, label %323, label %321

321:                                              ; preds = %318
  %322 = sext i32 %319 to i64
  br label %333

323:                                              ; preds = %276, %318
  %324 = phi i32 [ %319, %318 ], [ -1, %276 ]
  %325 = xor i32 %324, -1
  %326 = icmp eq i32 %282, %325
  br i1 %326, label %399, label %327

327:                                              ; preds = %323
  %328 = sext i32 %325 to i64
  %329 = getelementptr inbounds i16, i16* %281, i64 %328
  %330 = load i16, i16* %329, align 2
  %331 = zext i16 %330 to i32
  %332 = shl nuw nsw i32 %331, 8
  br label %333

333:                                              ; preds = %327, %321
  %334 = phi i32 [ %332, %327 ], [ %140, %321 ]
  %335 = phi i64 [ %328, %327 ], [ %322, %321 ]
  %336 = phi i32 [ %325, %327 ], [ %319, %321 ]
  %337 = load i64, i64* %135, align 8
  %338 = add nsw i64 %337, %74
  %339 = inttoptr i64 %338 to i64*
  %340 = getelementptr inbounds i64, i64* %339, i64 %335
  %341 = load i64, i64* %340, align 8
  %342 = add nsw i64 %338, %341
  %343 = inttoptr i64 %342 to %struct._FcCharLeaf*
  br label %399

344:                                              ; preds = %248
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %133) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %137, i8 -86, i64 32, i1 false)
  %345 = call i32 %2(%struct._FcCharLeaf* nonnull %6, %struct._FcCharLeaf* %141, %struct._FcCharLeaf* %144) #13, !callees !7
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %352, label %347

347:                                              ; preds = %344
  %348 = call %struct._FcCharLeaf* @FcCharSetFindLeafCreate(%struct._FcCharSet* nonnull %14, i32 %140) #13
  %349 = icmp eq %struct._FcCharLeaf* %348, null
  br i1 %349, label %406, label %350

350:                                              ; preds = %347
  %351 = bitcast %struct._FcCharLeaf* %348 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %351, i8* nonnull align 4 %133, i64 32, i1 false) #13
  br label %352

352:                                              ; preds = %350, %344
  %353 = add nsw i32 %139, 1
  %354 = load i32, i32* %22, align 4
  %355 = icmp slt i32 %353, %354
  br i1 %355, label %356, label %372

356:                                              ; preds = %352
  %357 = load i64, i64* %18, align 8
  %358 = add nsw i64 %357, %17
  %359 = inttoptr i64 %358 to i16*
  %360 = sext i32 %353 to i64
  %361 = getelementptr inbounds i16, i16* %359, i64 %360
  %362 = load i16, i16* %361, align 2
  %363 = zext i16 %362 to i32
  %364 = shl nuw nsw i32 %363, 8
  %365 = load i64, i64* %134, align 8
  %366 = add nsw i64 %365, %17
  %367 = inttoptr i64 %366 to i64*
  %368 = getelementptr inbounds i64, i64* %367, i64 %360
  %369 = load i64, i64* %368, align 8
  %370 = add nsw i64 %366, %369
  %371 = inttoptr i64 %370 to %struct._FcCharLeaf*
  br label %372

372:                                              ; preds = %352, %356
  %373 = phi i32 [ %353, %356 ], [ %139, %352 ]
  %374 = phi i32 [ %364, %356 ], [ -1, %352 ]
  %375 = phi %struct._FcCharLeaf* [ %371, %356 ], [ null, %352 ]
  %376 = add nsw i32 %142, 1
  %377 = load i32, i32* %79, align 4
  %378 = icmp slt i32 %376, %377
  br i1 %378, label %379, label %395

379:                                              ; preds = %372
  %380 = load i64, i64* %75, align 8
  %381 = add nsw i64 %380, %74
  %382 = inttoptr i64 %381 to i16*
  %383 = sext i32 %376 to i64
  %384 = getelementptr inbounds i16, i16* %382, i64 %383
  %385 = load i16, i16* %384, align 2
  %386 = zext i16 %385 to i32
  %387 = shl nuw nsw i32 %386, 8
  %388 = load i64, i64* %135, align 8
  %389 = add nsw i64 %388, %74
  %390 = inttoptr i64 %389 to i64*
  %391 = getelementptr inbounds i64, i64* %390, i64 %383
  %392 = load i64, i64* %391, align 8
  %393 = add nsw i64 %389, %392
  %394 = inttoptr i64 %393 to %struct._FcCharLeaf*
  br label %395

395:                                              ; preds = %372, %379
  %396 = phi i32 [ %142, %372 ], [ %376, %379 ]
  %397 = phi i32 [ -1, %372 ], [ %387, %379 ]
  %398 = phi %struct._FcCharLeaf* [ null, %372 ], [ %394, %379 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %133) #13
  br label %399

399:                                              ; preds = %395, %333, %323, %260, %254, %237, %227, %164, %158
  %400 = phi i32 [ %161, %164 ], [ %139, %158 ], [ %240, %237 ], [ %139, %227 ], [ %139, %254 ], [ %139, %260 ], [ %139, %323 ], [ %139, %333 ], [ %373, %395 ]
  %401 = phi i32 [ %172, %164 ], [ -1, %158 ], [ %238, %237 ], [ -1, %227 ], [ %140, %254 ], [ %140, %260 ], [ %140, %323 ], [ %140, %333 ], [ %374, %395 ]
  %402 = phi %struct._FcCharLeaf* [ %179, %164 ], [ null, %158 ], [ %247, %237 ], [ null, %227 ], [ %141, %254 ], [ %141, %260 ], [ %141, %323 ], [ %141, %333 ], [ %375, %395 ]
  %403 = phi i32 [ %142, %164 ], [ %142, %158 ], [ %142, %237 ], [ %142, %227 ], [ %142, %254 ], [ %257, %260 ], [ %142, %323 ], [ %336, %333 ], [ %396, %395 ]
  %404 = phi i32 [ %143, %164 ], [ %143, %158 ], [ %143, %237 ], [ %143, %227 ], [ -1, %254 ], [ %268, %260 ], [ -1, %323 ], [ %334, %333 ], [ %397, %395 ]
  %405 = phi %struct._FcCharLeaf* [ %144, %164 ], [ %144, %158 ], [ %144, %237 ], [ %144, %227 ], [ null, %254 ], [ %275, %260 ], [ null, %323 ], [ %343, %333 ], [ %398, %395 ]
  br label %138

406:                                              ; preds = %347
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %133) #13
  br label %407

407:                                              ; preds = %251, %155, %406
  call void @IA__FcCharSetDestroy(%struct._FcCharSet* nonnull %14)
  br label %408

408:                                              ; preds = %149, %146, %10, %407, %5
  %409 = phi %struct._FcCharSet* [ null, %5 ], [ null, %407 ], [ null, %10 ], [ %14, %146 ], [ %14, %149 ]
  ret %struct._FcCharSet* %409
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @FcCharSetIntersectLeaf(%struct._FcCharLeaf* nocapture, %struct._FcCharLeaf* nocapture readonly, %struct._FcCharLeaf* nocapture readonly) #7 {
  %4 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 0
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, %5
  %9 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 0
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 1
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, %11
  %15 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 1
  store i32 %14, i32* %15, align 4
  %16 = or i32 %8, %14
  %17 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 2
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, %18
  %22 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 2
  store i32 %21, i32* %22, align 4
  %23 = or i32 %16, %21
  %24 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 3
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 3
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, %25
  %29 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 3
  store i32 %28, i32* %29, align 4
  %30 = or i32 %23, %28
  %31 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 4
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 4
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, %32
  %36 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 4
  store i32 %35, i32* %36, align 4
  %37 = or i32 %30, %35
  %38 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 5
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 5
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, %39
  %43 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 5
  store i32 %42, i32* %43, align 4
  %44 = or i32 %37, %42
  %45 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 6
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 6
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, %46
  %50 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 6
  store i32 %49, i32* %50, align 4
  %51 = or i32 %44, %49
  %52 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 7
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 7
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, %53
  %57 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 7
  store i32 %56, i32* %57, align 4
  %58 = or i32 %51, %56
  %59 = icmp ne i32 %58, 0
  %60 = zext i1 %59 to i32
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcCharSet* @IA__FcCharSetUnion(%struct._FcCharSet*, %struct._FcCharSet*) #4 {
  %3 = tail call fastcc %struct._FcCharSet* @FcCharSetOperate(%struct._FcCharSet* %0, %struct._FcCharSet* %1, i32 (%struct._FcCharLeaf*, %struct._FcCharLeaf*, %struct._FcCharLeaf*)* nonnull @FcCharSetUnionLeaf, i32 1, i32 1)
  ret %struct._FcCharSet* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @FcCharSetUnionLeaf(%struct._FcCharLeaf* nocapture, %struct._FcCharLeaf* nocapture readonly, %struct._FcCharLeaf* nocapture readonly) #7 {
  %4 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 0
  %7 = load i32, i32* %6, align 4
  %8 = or i32 %7, %5
  %9 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 0
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 1
  %13 = load i32, i32* %12, align 4
  %14 = or i32 %13, %11
  %15 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 1
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 2
  %19 = load i32, i32* %18, align 4
  %20 = or i32 %19, %17
  %21 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 3
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 3
  %25 = load i32, i32* %24, align 4
  %26 = or i32 %25, %23
  %27 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 3
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 4
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 4
  %31 = load i32, i32* %30, align 4
  %32 = or i32 %31, %29
  %33 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 4
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 5
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 5
  %37 = load i32, i32* %36, align 4
  %38 = or i32 %37, %35
  %39 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 5
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 6
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 6
  %43 = load i32, i32* %42, align 4
  %44 = or i32 %43, %41
  %45 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 6
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 7
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 7
  %49 = load i32, i32* %48, align 4
  %50 = or i32 %49, %47
  %51 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 7
  store i32 %50, i32* %51, align 4
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcCharSetMerge(%struct._FcCharSet*, %struct._FcCharSet*, i32*) #4 {
  %4 = icmp ne %struct._FcCharSet* %0, null
  %5 = icmp ne %struct._FcCharSet* %1, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %174

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, -1
  %11 = icmp ne i32* %2, null
  br i1 %10, label %12, label %14

12:                                               ; preds = %7
  br i1 %11, label %13, label %174

13:                                               ; preds = %12
  store i32 0, i32* %2, align 4
  br label %174

14:                                               ; preds = %7
  br i1 %11, label %15, label %19

15:                                               ; preds = %14
  %16 = tail call i32 @IA__FcCharSetIsSubset(%struct._FcCharSet* nonnull %1, %struct._FcCharSet* nonnull %0)
  %17 = icmp eq i32 %16, 0
  %18 = zext i1 %17 to i32
  store i32 %18, i32* %2, align 4
  br i1 %17, label %19, label %174

19:                                               ; preds = %15, %14
  %20 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %174

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 1
  %25 = ptrtoint %struct._FcCharSet* %0 to i64
  %26 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 3
  %27 = ptrtoint %struct._FcCharSet* %1 to i64
  %28 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 3
  %29 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 2
  %30 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  br label %31

31:                                               ; preds = %23, %169
  %32 = phi i32 [ %21, %23 ], [ %170, %169 ]
  %33 = phi i32 [ 0, %23 ], [ %172, %169 ]
  %34 = phi i32 [ 0, %23 ], [ %171, %169 ]
  %35 = load i32, i32* %24, align 4
  %36 = icmp slt i32 %34, %35
  br i1 %36, label %37, label %44

37:                                               ; preds = %31
  %38 = load i64, i64* %26, align 8
  %39 = add nsw i64 %38, %25
  %40 = inttoptr i64 %39 to i16*
  %41 = sext i32 %34 to i64
  %42 = getelementptr inbounds i16, i16* %40, i64 %41
  %43 = load i16, i16* %42, align 2
  br label %44

44:                                               ; preds = %31, %37
  %45 = phi i16 [ %43, %37 ], [ -1, %31 ]
  %46 = load i64, i64* %28, align 8
  %47 = add nsw i64 %46, %27
  %48 = inttoptr i64 %47 to i16*
  %49 = sext i32 %33 to i64
  %50 = getelementptr inbounds i16, i16* %48, i64 %49
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = icmp ult i16 %45, %51
  br i1 %53, label %54, label %100

54:                                               ; preds = %44
  %55 = add nsw i32 %34, 1
  %56 = load i64, i64* %26, align 8
  %57 = add nsw i64 %56, %25
  %58 = inttoptr i64 %57 to i16*
  %59 = add nsw i32 %35, -1
  %60 = icmp eq i64 %57, 0
  br i1 %60, label %98, label %61

61:                                               ; preds = %54
  %62 = icmp sgt i32 %35, %55
  br i1 %62, label %63, label %79

63:                                               ; preds = %61, %72
  %64 = phi i32 [ %77, %72 ], [ %59, %61 ]
  %65 = phi i32 [ %76, %72 ], [ %55, %61 ]
  %66 = add nsw i32 %65, %64
  %67 = ashr i32 %66, 1
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i16, i16* %58, i64 %68
  %70 = load i16, i16* %69, align 2
  %71 = icmp eq i16 %70, %51
  br i1 %71, label %94, label %72

72:                                               ; preds = %63
  %73 = icmp ult i16 %70, %51
  %74 = add nsw i32 %67, 1
  %75 = add nsw i32 %67, -1
  %76 = select i1 %73, i32 %74, i32 %65
  %77 = select i1 %73, i32 %64, i32 %75
  %78 = icmp sgt i32 %76, %77
  br i1 %78, label %79, label %63

79:                                               ; preds = %72, %61
  %80 = phi i32 [ %59, %61 ], [ %77, %72 ]
  %81 = icmp slt i32 %80, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %79
  %83 = icmp slt i32 %80, %35
  br i1 %83, label %84, label %91

84:                                               ; preds = %82
  %85 = sext i32 %80 to i64
  %86 = getelementptr inbounds i16, i16* %58, i64 %85
  %87 = load i16, i16* %86, align 2
  %88 = icmp ult i16 %87, %51
  br i1 %88, label %89, label %91

89:                                               ; preds = %84, %79
  %90 = add nsw i32 %80, 1
  br label %91

91:                                               ; preds = %89, %84, %82
  %92 = phi i32 [ %90, %89 ], [ %80, %84 ], [ %80, %82 ]
  %93 = xor i32 %92, -1
  br label %94

94:                                               ; preds = %63, %91
  %95 = phi i32 [ %93, %91 ], [ %67, %63 ]
  %96 = icmp slt i32 %95, 0
  %97 = xor i32 %95, -1
  br i1 %96, label %98, label %169

98:                                               ; preds = %54, %94
  %99 = phi i32 [ %97, %94 ], [ 0, %54 ]
  br label %169

100:                                              ; preds = %44
  %101 = load i64, i64* %29, align 8
  %102 = add nsw i64 %101, %27
  %103 = inttoptr i64 %102 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %49
  %105 = load i64, i64* %104, align 8
  %106 = add nsw i64 %102, %105
  %107 = inttoptr i64 %106 to %struct._FcCharLeaf*
  %108 = icmp ult i16 %51, %45
  br i1 %108, label %109, label %116

109:                                              ; preds = %100
  %110 = shl nuw nsw i32 %52, 8
  %111 = tail call %struct._FcCharLeaf* @FcCharSetFindLeafCreate(%struct._FcCharSet* nonnull %0, i32 %110) #13
  %112 = icmp eq %struct._FcCharLeaf* %111, null
  br i1 %112, label %174, label %113

113:                                              ; preds = %109
  %114 = bitcast %struct._FcCharLeaf* %111 to i8*
  %115 = inttoptr i64 %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %114, i8* align 4 %115, i64 32, i1 false) #13
  br label %165

116:                                              ; preds = %100
  %117 = load i64, i64* %30, align 8
  %118 = add nsw i64 %117, %25
  %119 = inttoptr i64 %118 to i64*
  %120 = sext i32 %34 to i64
  %121 = getelementptr inbounds i64, i64* %119, i64 %120
  %122 = load i64, i64* %121, align 8
  %123 = add nsw i64 %118, %122
  %124 = inttoptr i64 %123 to %struct._FcCharLeaf*
  %125 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %124, i64 0, i32 0, i64 0
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %107, i64 0, i32 0, i64 0
  %128 = load i32, i32* %127, align 4
  %129 = or i32 %128, %126
  store i32 %129, i32* %125, align 4
  %130 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %124, i64 0, i32 0, i64 1
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %107, i64 0, i32 0, i64 1
  %133 = load i32, i32* %132, align 4
  %134 = or i32 %133, %131
  store i32 %134, i32* %130, align 4
  %135 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %124, i64 0, i32 0, i64 2
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %107, i64 0, i32 0, i64 2
  %138 = load i32, i32* %137, align 4
  %139 = or i32 %138, %136
  store i32 %139, i32* %135, align 4
  %140 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %124, i64 0, i32 0, i64 3
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %107, i64 0, i32 0, i64 3
  %143 = load i32, i32* %142, align 4
  %144 = or i32 %143, %141
  store i32 %144, i32* %140, align 4
  %145 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %124, i64 0, i32 0, i64 4
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %107, i64 0, i32 0, i64 4
  %148 = load i32, i32* %147, align 4
  %149 = or i32 %148, %146
  store i32 %149, i32* %145, align 4
  %150 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %124, i64 0, i32 0, i64 5
  %151 = load i32, i32* %150, align 4
  %152 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %107, i64 0, i32 0, i64 5
  %153 = load i32, i32* %152, align 4
  %154 = or i32 %153, %151
  store i32 %154, i32* %150, align 4
  %155 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %124, i64 0, i32 0, i64 6
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %107, i64 0, i32 0, i64 6
  %158 = load i32, i32* %157, align 4
  %159 = or i32 %158, %156
  store i32 %159, i32* %155, align 4
  %160 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %124, i64 0, i32 0, i64 7
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %107, i64 0, i32 0, i64 7
  %163 = load i32, i32* %162, align 4
  %164 = or i32 %163, %161
  store i32 %164, i32* %160, align 4
  br label %165

165:                                              ; preds = %116, %113
  %166 = add nsw i32 %34, 1
  %167 = add nsw i32 %33, 1
  %168 = load i32, i32* %20, align 4
  br label %169

169:                                              ; preds = %165, %98, %94
  %170 = phi i32 [ %32, %98 ], [ %32, %94 ], [ %168, %165 ]
  %171 = phi i32 [ %99, %98 ], [ %95, %94 ], [ %166, %165 ]
  %172 = phi i32 [ %33, %98 ], [ %33, %94 ], [ %167, %165 ]
  %173 = icmp slt i32 %172, %170
  br i1 %173, label %31, label %174

174:                                              ; preds = %169, %109, %19, %15, %12, %13, %3
  %175 = phi i32 [ 0, %3 ], [ 0, %13 ], [ 0, %12 ], [ 1, %15 ], [ 1, %19 ], [ 1, %169 ], [ 0, %109 ]
  ret i32 %175
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @IA__FcCharSetIsSubset(%struct._FcCharSet*, %struct._FcCharSet*) #9 {
  %3 = icmp eq %struct._FcCharSet* %0, %1
  br i1 %3, label %128, label %4

4:                                                ; preds = %2
  %5 = icmp ne %struct._FcCharSet* %0, null
  %6 = icmp ne %struct._FcCharSet* %1, null
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %128

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %124

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = ptrtoint %struct._FcCharSet* %0 to i64
  %16 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 3
  %17 = ptrtoint %struct._FcCharSet* %1 to i64
  %18 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 3
  %19 = add nsw i32 %14, -1
  %20 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %21 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 2
  br label %22

22:                                               ; preds = %12, %120
  %23 = phi i32 [ 0, %12 ], [ %122, %120 ]
  %24 = phi i32 [ 0, %12 ], [ %121, %120 ]
  %25 = icmp slt i32 %23, %14
  br i1 %25, label %26, label %124

26:                                               ; preds = %22
  %27 = load i64, i64* %16, align 8
  %28 = add nsw i64 %27, %15
  %29 = inttoptr i64 %28 to i16*
  %30 = sext i32 %24 to i64
  %31 = getelementptr inbounds i16, i16* %29, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = load i64, i64* %18, align 8
  %34 = add nsw i64 %33, %17
  %35 = inttoptr i64 %34 to i16*
  %36 = sext i32 %23 to i64
  %37 = getelementptr inbounds i16, i16* %35, i64 %36
  %38 = load i16, i16* %37, align 2
  %39 = icmp eq i16 %32, %38
  br i1 %39, label %40, label %76

40:                                               ; preds = %26
  %41 = load i64, i64* %20, align 8
  %42 = add nsw i64 %41, %15
  %43 = inttoptr i64 %42 to i64*
  %44 = getelementptr inbounds i64, i64* %43, i64 %30
  %45 = load i64, i64* %44, align 8
  %46 = add nsw i64 %42, %45
  %47 = inttoptr i64 %46 to %struct._FcCharLeaf*
  %48 = load i64, i64* %21, align 8
  %49 = add nsw i64 %48, %17
  %50 = inttoptr i64 %49 to i64*
  %51 = getelementptr inbounds i64, i64* %50, i64 %36
  %52 = load i64, i64* %51, align 8
  %53 = add nsw i64 %49, %52
  %54 = inttoptr i64 %53 to %struct._FcCharLeaf*
  %55 = icmp eq %struct._FcCharLeaf* %47, %54
  br i1 %55, label %73, label %56

56:                                               ; preds = %40
  %57 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %47, i64 0, i32 0, i64 0
  %58 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %54, i64 0, i32 0, i64 0
  br label %59

59:                                               ; preds = %64, %56
  %60 = phi i32* [ %57, %56 ], [ %66, %64 ]
  %61 = phi i32* [ %58, %56 ], [ %68, %64 ]
  %62 = phi i32 [ 8, %56 ], [ %65, %64 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %73, label %64

64:                                               ; preds = %59
  %65 = add nsw i32 %62, -1
  %66 = getelementptr inbounds i32, i32* %60, i64 1
  %67 = load i32, i32* %60, align 4
  %68 = getelementptr inbounds i32, i32* %61, i64 1
  %69 = load i32, i32* %61, align 4
  %70 = xor i32 %69, -1
  %71 = and i32 %67, %70
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %59, label %128

73:                                               ; preds = %59, %40
  %74 = add nsw i32 %24, 1
  %75 = add nsw i32 %23, 1
  br label %120

76:                                               ; preds = %26
  %77 = icmp ult i16 %32, %38
  br i1 %77, label %128, label %78

78:                                               ; preds = %76
  %79 = add nsw i32 %23, 1
  %80 = icmp eq i64 %34, 0
  br i1 %80, label %118, label %81

81:                                               ; preds = %78
  %82 = icmp sgt i32 %14, %79
  br i1 %82, label %83, label %99

83:                                               ; preds = %81, %92
  %84 = phi i32 [ %97, %92 ], [ %19, %81 ]
  %85 = phi i32 [ %96, %92 ], [ %79, %81 ]
  %86 = add nsw i32 %85, %84
  %87 = ashr i32 %86, 1
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i16, i16* %35, i64 %88
  %90 = load i16, i16* %89, align 2
  %91 = icmp eq i16 %90, %32
  br i1 %91, label %114, label %92

92:                                               ; preds = %83
  %93 = icmp ult i16 %90, %32
  %94 = add nsw i32 %87, 1
  %95 = add nsw i32 %87, -1
  %96 = select i1 %93, i32 %94, i32 %85
  %97 = select i1 %93, i32 %84, i32 %95
  %98 = icmp sgt i32 %96, %97
  br i1 %98, label %99, label %83

99:                                               ; preds = %92, %81
  %100 = phi i32 [ %19, %81 ], [ %97, %92 ]
  %101 = icmp slt i32 %100, 0
  br i1 %101, label %109, label %102

102:                                              ; preds = %99
  %103 = icmp slt i32 %100, %14
  br i1 %103, label %104, label %111

104:                                              ; preds = %102
  %105 = sext i32 %100 to i64
  %106 = getelementptr inbounds i16, i16* %35, i64 %105
  %107 = load i16, i16* %106, align 2
  %108 = icmp ult i16 %107, %32
  br i1 %108, label %109, label %111

109:                                              ; preds = %104, %99
  %110 = add nsw i32 %100, 1
  br label %111

111:                                              ; preds = %109, %104, %102
  %112 = phi i32 [ %110, %109 ], [ %100, %104 ], [ %100, %102 ]
  %113 = xor i32 %112, -1
  br label %114

114:                                              ; preds = %83, %111
  %115 = phi i32 [ %113, %111 ], [ %87, %83 ]
  %116 = icmp slt i32 %115, 0
  %117 = xor i32 %115, -1
  br i1 %116, label %118, label %120

118:                                              ; preds = %78, %114
  %119 = phi i32 [ %117, %114 ], [ 0, %78 ]
  br label %120

120:                                              ; preds = %118, %114, %73
  %121 = phi i32 [ %74, %73 ], [ %24, %114 ], [ %24, %118 ]
  %122 = phi i32 [ %75, %73 ], [ %115, %114 ], [ %119, %118 ]
  %123 = icmp slt i32 %121, %10
  br i1 %123, label %22, label %124

124:                                              ; preds = %22, %120, %8
  %125 = phi i32 [ 0, %8 ], [ %121, %120 ], [ %24, %22 ]
  %126 = icmp sge i32 %125, %10
  %127 = zext i1 %126 to i32
  br label %128

128:                                              ; preds = %76, %64, %4, %2, %124
  %129 = phi i32 [ %127, %124 ], [ 1, %2 ], [ 0, %4 ], [ 0, %64 ], [ 0, %76 ]
  ret i32 %129
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcCharSet* @IA__FcCharSetSubtract(%struct._FcCharSet*, %struct._FcCharSet*) #4 {
  %3 = tail call fastcc %struct._FcCharSet* @FcCharSetOperate(%struct._FcCharSet* %0, %struct._FcCharSet* %1, i32 (%struct._FcCharLeaf*, %struct._FcCharLeaf*, %struct._FcCharLeaf*)* nonnull @FcCharSetSubtractLeaf, i32 1, i32 0)
  ret %struct._FcCharSet* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @FcCharSetSubtractLeaf(%struct._FcCharLeaf* nocapture, %struct._FcCharLeaf* nocapture readonly, %struct._FcCharLeaf* nocapture readonly) #7 {
  %4 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 0
  %7 = load i32, i32* %6, align 4
  %8 = xor i32 %7, -1
  %9 = and i32 %5, %8
  %10 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 0
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 1
  %14 = load i32, i32* %13, align 4
  %15 = xor i32 %14, -1
  %16 = and i32 %12, %15
  %17 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 1
  store i32 %16, i32* %17, align 4
  %18 = or i32 %9, %16
  %19 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 2
  %22 = load i32, i32* %21, align 4
  %23 = xor i32 %22, -1
  %24 = and i32 %20, %23
  %25 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 2
  store i32 %24, i32* %25, align 4
  %26 = or i32 %18, %24
  %27 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 3
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 3
  %30 = load i32, i32* %29, align 4
  %31 = xor i32 %30, -1
  %32 = and i32 %28, %31
  %33 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 3
  store i32 %32, i32* %33, align 4
  %34 = or i32 %26, %32
  %35 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 4
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 4
  %38 = load i32, i32* %37, align 4
  %39 = xor i32 %38, -1
  %40 = and i32 %36, %39
  %41 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 4
  store i32 %40, i32* %41, align 4
  %42 = or i32 %34, %40
  %43 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 5
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 5
  %46 = load i32, i32* %45, align 4
  %47 = xor i32 %46, -1
  %48 = and i32 %44, %47
  %49 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 5
  store i32 %48, i32* %49, align 4
  %50 = or i32 %42, %48
  %51 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 6
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 6
  %54 = load i32, i32* %53, align 4
  %55 = xor i32 %54, -1
  %56 = and i32 %52, %55
  %57 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 6
  store i32 %56, i32* %57, align 4
  %58 = or i32 %50, %56
  %59 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %1, i64 0, i32 0, i64 7
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %2, i64 0, i32 0, i64 7
  %62 = load i32, i32* %61, align 4
  %63 = xor i32 %62, -1
  %64 = and i32 %60, %63
  %65 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %0, i64 0, i32 0, i64 7
  store i32 %64, i32* %65, align 4
  %66 = or i32 %58, %64
  %67 = icmp ne i32 %66, 0
  %68 = zext i1 %67 to i32
  ret i32 %68
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @IA__FcCharSetHasChar(%struct._FcCharSet*, i32) #9 {
  %3 = icmp eq %struct._FcCharSet* %0, null
  br i1 %3, label %74, label %4

4:                                                ; preds = %2
  %5 = lshr i32 %1, 8
  %6 = trunc i32 %5 to i16
  %7 = ptrtoint %struct._FcCharSet* %0 to i64
  %8 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = add nsw i64 %9, %7
  %11 = inttoptr i64 %10 to i16*
  %12 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, -1
  %15 = icmp eq i64 %10, 0
  br i1 %15, label %74, label %16

16:                                               ; preds = %4
  %17 = icmp sgt i32 %13, 0
  br i1 %17, label %18, label %34

18:                                               ; preds = %16, %27
  %19 = phi i32 [ %32, %27 ], [ %14, %16 ]
  %20 = phi i32 [ %31, %27 ], [ 0, %16 ]
  %21 = add nsw i32 %20, %19
  %22 = ashr i32 %21, 1
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i16, i16* %11, i64 %23
  %25 = load i16, i16* %24, align 2
  %26 = icmp eq i16 %25, %6
  br i1 %26, label %49, label %27

27:                                               ; preds = %18
  %28 = icmp ult i16 %25, %6
  %29 = add nsw i32 %22, 1
  %30 = add nsw i32 %22, -1
  %31 = select i1 %28, i32 %29, i32 %20
  %32 = select i1 %28, i32 %19, i32 %30
  %33 = icmp sgt i32 %31, %32
  br i1 %33, label %34, label %18

34:                                               ; preds = %27, %16
  %35 = phi i32 [ %14, %16 ], [ %32, %27 ]
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %34
  %38 = icmp slt i32 %35, %13
  br i1 %38, label %39, label %46

39:                                               ; preds = %37
  %40 = sext i32 %35 to i64
  %41 = getelementptr inbounds i16, i16* %11, i64 %40
  %42 = load i16, i16* %41, align 2
  %43 = icmp ult i16 %42, %6
  br i1 %43, label %44, label %46

44:                                               ; preds = %39, %34
  %45 = add nsw i32 %35, 1
  br label %46

46:                                               ; preds = %44, %39, %37
  %47 = phi i32 [ %45, %44 ], [ %35, %39 ], [ %35, %37 ]
  %48 = xor i32 %47, -1
  br label %49

49:                                               ; preds = %18, %46
  %50 = phi i32 [ %48, %46 ], [ %22, %18 ]
  %51 = icmp sgt i32 %50, -1
  br i1 %51, label %52, label %74

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %54 = load i64, i64* %53, align 8
  %55 = add nsw i64 %54, %7
  %56 = inttoptr i64 %55 to i64*
  %57 = sext i32 %50 to i64
  %58 = getelementptr inbounds i64, i64* %56, i64 %57
  %59 = load i64, i64* %58, align 8
  %60 = add nsw i64 %55, %59
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %74, label %62

62:                                               ; preds = %52
  %63 = inttoptr i64 %60 to %struct._FcCharLeaf*
  %64 = lshr i32 %1, 5
  %65 = and i32 %64, 7
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %63, i64 0, i32 0, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = and i32 %1, 31
  %70 = shl i32 1, %69
  %71 = and i32 %68, %70
  %72 = icmp ne i32 %71, 0
  %73 = zext i1 %72 to i32
  br label %74

74:                                               ; preds = %4, %49, %52, %2, %62
  %75 = phi i32 [ %73, %62 ], [ 0, %2 ], [ 0, %52 ], [ 0, %49 ], [ 0, %4 ]
  ret i32 %75
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @IA__FcCharSetIntersectCount(%struct._FcCharSet*, %struct._FcCharSet*) #8 {
  %3 = icmp ne %struct._FcCharSet* %0, null
  %4 = icmp ne %struct._FcCharSet* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %339

6:                                                ; preds = %2
  %7 = ptrtoint %struct._FcCharSet* %0 to i64
  %8 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = add nsw i64 %9, %7
  %11 = inttoptr i64 %10 to i16*
  %12 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, -1
  %15 = icmp eq i64 %10, 0
  br i1 %15, label %38, label %16

16:                                               ; preds = %6
  %17 = icmp sgt i32 %13, 0
  br i1 %17, label %18, label %28

18:                                               ; preds = %16, %25
  %19 = phi i32 [ %26, %25 ], [ %14, %16 ]
  %20 = ashr i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i16, i16* %11, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %18
  %26 = add nsw i32 %20, -1
  %27 = icmp slt i32 %19, 2
  br i1 %27, label %28, label %18

28:                                               ; preds = %25, %16
  %29 = phi i32 [ %14, %16 ], [ %26, %25 ]
  %30 = lshr i32 %29, 31
  %31 = add nsw i32 %30, %29
  %32 = xor i32 %31, -1
  br label %33

33:                                               ; preds = %18, %28
  %34 = phi i32 [ %32, %28 ], [ %20, %18 ]
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = sext i32 %34 to i64
  br label %48

38:                                               ; preds = %33, %6
  %39 = phi i32 [ %34, %33 ], [ -1, %6 ]
  %40 = xor i32 %39, -1
  %41 = icmp eq i32 %13, %40
  br i1 %41, label %60, label %42

42:                                               ; preds = %38
  %43 = sext i32 %40 to i64
  %44 = getelementptr inbounds i16, i16* %11, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = shl nuw nsw i32 %46, 8
  br label %48

48:                                               ; preds = %42, %36
  %49 = phi i32 [ %47, %42 ], [ 0, %36 ]
  %50 = phi i64 [ %43, %42 ], [ %37, %36 ]
  %51 = phi i32 [ %40, %42 ], [ %34, %36 ]
  %52 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = add nsw i64 %53, %7
  %55 = inttoptr i64 %54 to i64*
  %56 = getelementptr inbounds i64, i64* %55, i64 %50
  %57 = load i64, i64* %56, align 8
  %58 = add nsw i64 %54, %57
  %59 = inttoptr i64 %58 to %struct._FcCharLeaf*
  br label %60

60:                                               ; preds = %38, %48
  %61 = phi i32 [ %51, %48 ], [ 0, %38 ]
  %62 = phi i32 [ %49, %48 ], [ -1, %38 ]
  %63 = phi %struct._FcCharLeaf* [ %59, %48 ], [ null, %38 ]
  %64 = ptrtoint %struct._FcCharSet* %1 to i64
  %65 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = add nsw i64 %66, %64
  %68 = inttoptr i64 %67 to i16*
  %69 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = add nsw i32 %70, -1
  %72 = icmp eq i64 %67, 0
  br i1 %72, label %95, label %73

73:                                               ; preds = %60
  %74 = icmp sgt i32 %70, 0
  br i1 %74, label %75, label %85

75:                                               ; preds = %73, %82
  %76 = phi i32 [ %83, %82 ], [ %71, %73 ]
  %77 = ashr i32 %76, 1
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i16, i16* %68, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %90, label %82

82:                                               ; preds = %75
  %83 = add nsw i32 %77, -1
  %84 = icmp slt i32 %76, 2
  br i1 %84, label %85, label %75

85:                                               ; preds = %82, %73
  %86 = phi i32 [ %71, %73 ], [ %83, %82 ]
  %87 = lshr i32 %86, 31
  %88 = add nsw i32 %87, %86
  %89 = xor i32 %88, -1
  br label %90

90:                                               ; preds = %75, %85
  %91 = phi i32 [ %89, %85 ], [ %77, %75 ]
  %92 = icmp slt i32 %91, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %90
  %94 = sext i32 %91 to i64
  br label %105

95:                                               ; preds = %90, %60
  %96 = phi i32 [ %91, %90 ], [ -1, %60 ]
  %97 = xor i32 %96, -1
  %98 = icmp eq i32 %70, %97
  br i1 %98, label %339, label %99

99:                                               ; preds = %95
  %100 = sext i32 %97 to i64
  %101 = getelementptr inbounds i16, i16* %68, i64 %100
  %102 = load i16, i16* %101, align 2
  %103 = zext i16 %102 to i32
  %104 = shl nuw nsw i32 %103, 8
  br label %105

105:                                              ; preds = %93, %99
  %106 = phi i32 [ %104, %99 ], [ 0, %93 ]
  %107 = phi i64 [ %100, %99 ], [ %94, %93 ]
  %108 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = add nsw i64 %109, %64
  %111 = inttoptr i64 %110 to i64*
  %112 = getelementptr inbounds i64, i64* %111, i64 %107
  %113 = load i64, i64* %112, align 8
  %114 = add nsw i64 %110, %113
  %115 = icmp ne %struct._FcCharLeaf* %63, null
  %116 = icmp ne i64 %114, 0
  %117 = and i1 %115, %116
  br i1 %117, label %118, label %339

118:                                              ; preds = %105
  %119 = inttoptr i64 %114 to %struct._FcCharLeaf*
  %120 = icmp sgt i32 %13, 0
  %121 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %122 = icmp sgt i32 %70, 0
  %123 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 2
  br label %124

124:                                              ; preds = %118, %333
  %125 = phi i32 [ 0, %118 ], [ %271, %333 ]
  %126 = phi %struct._FcCharLeaf* [ %119, %118 ], [ %335, %333 ]
  %127 = phi i32 [ %106, %118 ], [ %334, %333 ]
  %128 = phi %struct._FcCharLeaf* [ %63, %118 ], [ %270, %333 ]
  %129 = phi i32 [ %62, %118 ], [ %269, %333 ]
  %130 = phi i32 [ %61, %118 ], [ %268, %333 ]
  %131 = icmp eq i32 %129, %127
  br i1 %131, label %132, label %204

132:                                              ; preds = %124
  %133 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 0
  %134 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 0
  %135 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 1
  %136 = load i32, i32* %133, align 4
  %137 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 1
  %138 = load i32, i32* %134, align 4
  %139 = and i32 %138, %136
  %140 = tail call i32 @llvm.ctpop.i32(i32 %139) #13, !range !2
  %141 = add i32 %140, %125
  %142 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 2
  %143 = load i32, i32* %135, align 4
  %144 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 2
  %145 = load i32, i32* %137, align 4
  %146 = and i32 %145, %143
  %147 = tail call i32 @llvm.ctpop.i32(i32 %146) #13, !range !2
  %148 = add i32 %147, %141
  %149 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 3
  %150 = load i32, i32* %142, align 4
  %151 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 3
  %152 = load i32, i32* %144, align 4
  %153 = and i32 %152, %150
  %154 = tail call i32 @llvm.ctpop.i32(i32 %153) #13, !range !2
  %155 = add i32 %154, %148
  %156 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 4
  %157 = load i32, i32* %149, align 4
  %158 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 4
  %159 = load i32, i32* %151, align 4
  %160 = and i32 %159, %157
  %161 = tail call i32 @llvm.ctpop.i32(i32 %160) #13, !range !2
  %162 = add i32 %161, %155
  %163 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 5
  %164 = load i32, i32* %156, align 4
  %165 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 5
  %166 = load i32, i32* %158, align 4
  %167 = and i32 %166, %164
  %168 = tail call i32 @llvm.ctpop.i32(i32 %167) #13, !range !2
  %169 = add i32 %168, %162
  %170 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 6
  %171 = load i32, i32* %163, align 4
  %172 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 6
  %173 = load i32, i32* %165, align 4
  %174 = and i32 %173, %171
  %175 = tail call i32 @llvm.ctpop.i32(i32 %174) #13, !range !2
  %176 = add i32 %175, %169
  %177 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 7
  %178 = load i32, i32* %170, align 4
  %179 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 7
  %180 = load i32, i32* %172, align 4
  %181 = and i32 %180, %178
  %182 = tail call i32 @llvm.ctpop.i32(i32 %181) #13, !range !2
  %183 = add i32 %182, %176
  %184 = load i32, i32* %177, align 4
  %185 = load i32, i32* %179, align 4
  %186 = and i32 %185, %184
  %187 = tail call i32 @llvm.ctpop.i32(i32 %186) #13, !range !2
  %188 = add i32 %187, %183
  %189 = add nsw i32 %130, 1
  %190 = icmp slt i32 %189, %13
  br i1 %190, label %191, label %267

191:                                              ; preds = %132
  %192 = sext i32 %189 to i64
  %193 = getelementptr inbounds i16, i16* %11, i64 %192
  %194 = load i16, i16* %193, align 2
  %195 = zext i16 %194 to i32
  %196 = shl nuw nsw i32 %195, 8
  %197 = load i64, i64* %121, align 8
  %198 = add nsw i64 %197, %7
  %199 = inttoptr i64 %198 to i64*
  %200 = getelementptr inbounds i64, i64* %199, i64 %192
  %201 = load i64, i64* %200, align 8
  %202 = add nsw i64 %198, %201
  %203 = inttoptr i64 %202 to %struct._FcCharLeaf*
  br label %267

204:                                              ; preds = %124
  %205 = icmp ult i32 %129, %127
  br i1 %205, label %206, label %267

206:                                              ; preds = %204
  %207 = lshr i32 %127, 8
  %208 = trunc i32 %207 to i16
  br i1 %15, label %246, label %209

209:                                              ; preds = %206
  br i1 %120, label %210, label %226

210:                                              ; preds = %209, %219
  %211 = phi i32 [ %224, %219 ], [ %14, %209 ]
  %212 = phi i32 [ %223, %219 ], [ 0, %209 ]
  %213 = add nsw i32 %212, %211
  %214 = ashr i32 %213, 1
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds i16, i16* %11, i64 %215
  %217 = load i16, i16* %216, align 2
  %218 = icmp eq i16 %217, %208
  br i1 %218, label %241, label %219

219:                                              ; preds = %210
  %220 = icmp ult i16 %217, %208
  %221 = add nsw i32 %214, 1
  %222 = add nsw i32 %214, -1
  %223 = select i1 %220, i32 %221, i32 %212
  %224 = select i1 %220, i32 %211, i32 %222
  %225 = icmp sgt i32 %223, %224
  br i1 %225, label %226, label %210

226:                                              ; preds = %219, %209
  %227 = phi i32 [ %14, %209 ], [ %224, %219 ]
  %228 = icmp slt i32 %227, 0
  br i1 %228, label %236, label %229

229:                                              ; preds = %226
  %230 = icmp slt i32 %227, %13
  br i1 %230, label %231, label %238

231:                                              ; preds = %229
  %232 = sext i32 %227 to i64
  %233 = getelementptr inbounds i16, i16* %11, i64 %232
  %234 = load i16, i16* %233, align 2
  %235 = icmp ult i16 %234, %208
  br i1 %235, label %236, label %238

236:                                              ; preds = %231, %226
  %237 = add nsw i32 %227, 1
  br label %238

238:                                              ; preds = %236, %231, %229
  %239 = phi i32 [ %237, %236 ], [ %227, %231 ], [ %227, %229 ]
  %240 = xor i32 %239, -1
  br label %241

241:                                              ; preds = %210, %238
  %242 = phi i32 [ %240, %238 ], [ %214, %210 ]
  %243 = icmp slt i32 %242, 0
  br i1 %243, label %246, label %244

244:                                              ; preds = %241
  %245 = sext i32 %242 to i64
  br label %256

246:                                              ; preds = %206, %241
  %247 = phi i32 [ %242, %241 ], [ -1, %206 ]
  %248 = xor i32 %247, -1
  %249 = icmp eq i32 %13, %248
  br i1 %249, label %267, label %250

250:                                              ; preds = %246
  %251 = sext i32 %248 to i64
  %252 = getelementptr inbounds i16, i16* %11, i64 %251
  %253 = load i16, i16* %252, align 2
  %254 = zext i16 %253 to i32
  %255 = shl nuw nsw i32 %254, 8
  br label %256

256:                                              ; preds = %250, %244
  %257 = phi i32 [ %255, %250 ], [ %127, %244 ]
  %258 = phi i64 [ %251, %250 ], [ %245, %244 ]
  %259 = phi i32 [ %248, %250 ], [ %242, %244 ]
  %260 = load i64, i64* %121, align 8
  %261 = add nsw i64 %260, %7
  %262 = inttoptr i64 %261 to i64*
  %263 = getelementptr inbounds i64, i64* %262, i64 %258
  %264 = load i64, i64* %263, align 8
  %265 = add nsw i64 %261, %264
  %266 = inttoptr i64 %265 to %struct._FcCharLeaf*
  br label %267

267:                                              ; preds = %256, %246, %191, %132, %204
  %268 = phi i32 [ %130, %204 ], [ %189, %191 ], [ %130, %132 ], [ %259, %256 ], [ %130, %246 ]
  %269 = phi i32 [ %129, %204 ], [ %196, %191 ], [ -1, %132 ], [ %257, %256 ], [ -1, %246 ]
  %270 = phi %struct._FcCharLeaf* [ %128, %204 ], [ %203, %191 ], [ null, %132 ], [ %266, %256 ], [ null, %246 ]
  %271 = phi i32 [ %125, %204 ], [ %188, %191 ], [ %188, %132 ], [ %125, %256 ], [ %125, %246 ]
  %272 = icmp ult i32 %127, %269
  br i1 %272, label %273, label %333

273:                                              ; preds = %267
  %274 = lshr i32 %269, 8
  %275 = trunc i32 %274 to i16
  br i1 %72, label %313, label %276

276:                                              ; preds = %273
  br i1 %122, label %277, label %293

277:                                              ; preds = %276, %286
  %278 = phi i32 [ %291, %286 ], [ %71, %276 ]
  %279 = phi i32 [ %290, %286 ], [ 0, %276 ]
  %280 = add nsw i32 %279, %278
  %281 = ashr i32 %280, 1
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds i16, i16* %68, i64 %282
  %284 = load i16, i16* %283, align 2
  %285 = icmp eq i16 %284, %275
  br i1 %285, label %308, label %286

286:                                              ; preds = %277
  %287 = icmp ult i16 %284, %275
  %288 = add nsw i32 %281, 1
  %289 = add nsw i32 %281, -1
  %290 = select i1 %287, i32 %288, i32 %279
  %291 = select i1 %287, i32 %278, i32 %289
  %292 = icmp sgt i32 %290, %291
  br i1 %292, label %293, label %277

293:                                              ; preds = %286, %276
  %294 = phi i32 [ %71, %276 ], [ %291, %286 ]
  %295 = icmp slt i32 %294, 0
  br i1 %295, label %303, label %296

296:                                              ; preds = %293
  %297 = icmp slt i32 %294, %70
  br i1 %297, label %298, label %305

298:                                              ; preds = %296
  %299 = sext i32 %294 to i64
  %300 = getelementptr inbounds i16, i16* %68, i64 %299
  %301 = load i16, i16* %300, align 2
  %302 = icmp ult i16 %301, %275
  br i1 %302, label %303, label %305

303:                                              ; preds = %298, %293
  %304 = add nsw i32 %294, 1
  br label %305

305:                                              ; preds = %303, %298, %296
  %306 = phi i32 [ %304, %303 ], [ %294, %298 ], [ %294, %296 ]
  %307 = xor i32 %306, -1
  br label %308

308:                                              ; preds = %277, %305
  %309 = phi i32 [ %307, %305 ], [ %281, %277 ]
  %310 = icmp slt i32 %309, 0
  br i1 %310, label %313, label %311

311:                                              ; preds = %308
  %312 = sext i32 %309 to i64
  br label %323

313:                                              ; preds = %273, %308
  %314 = phi i32 [ %309, %308 ], [ -1, %273 ]
  %315 = xor i32 %314, -1
  %316 = icmp eq i32 %70, %315
  br i1 %316, label %339, label %317

317:                                              ; preds = %313
  %318 = sext i32 %315 to i64
  %319 = getelementptr inbounds i16, i16* %68, i64 %318
  %320 = load i16, i16* %319, align 2
  %321 = zext i16 %320 to i32
  %322 = shl nuw nsw i32 %321, 8
  br label %323

323:                                              ; preds = %317, %311
  %324 = phi i32 [ %322, %317 ], [ %269, %311 ]
  %325 = phi i64 [ %318, %317 ], [ %312, %311 ]
  %326 = load i64, i64* %123, align 8
  %327 = add nsw i64 %326, %64
  %328 = inttoptr i64 %327 to i64*
  %329 = getelementptr inbounds i64, i64* %328, i64 %325
  %330 = load i64, i64* %329, align 8
  %331 = add nsw i64 %327, %330
  %332 = inttoptr i64 %331 to %struct._FcCharLeaf*
  br label %333

333:                                              ; preds = %323, %267
  %334 = phi i32 [ %127, %267 ], [ %324, %323 ]
  %335 = phi %struct._FcCharLeaf* [ %126, %267 ], [ %332, %323 ]
  %336 = icmp ne %struct._FcCharLeaf* %270, null
  %337 = icmp ne %struct._FcCharLeaf* %335, null
  %338 = and i1 %336, %337
  br i1 %338, label %124, label %339

339:                                              ; preds = %313, %333, %95, %105, %2
  %340 = phi i32 [ 0, %2 ], [ 0, %105 ], [ 0, %95 ], [ %271, %333 ], [ %271, %313 ]
  ret i32 %340
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @IA__FcCharSetCount(%struct._FcCharSet*) #8 {
  %2 = icmp eq %struct._FcCharSet* %0, null
  br i1 %2, label %76, label %3

3:                                                ; preds = %1
  %4 = ptrtoint %struct._FcCharSet* %0 to i64
  %5 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = add nsw i64 %6, %4
  %8 = inttoptr i64 %7 to i16*
  %9 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, -1
  %12 = icmp eq i64 %7, 0
  br i1 %12, label %33, label %13

13:                                               ; preds = %3
  %14 = icmp sgt i32 %10, 0
  br i1 %14, label %15, label %25

15:                                               ; preds = %13, %22
  %16 = phi i32 [ %23, %22 ], [ %11, %13 ]
  %17 = ashr i32 %16, 1
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i16, i16* %8, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %15
  %23 = add nsw i32 %17, -1
  %24 = icmp slt i32 %16, 2
  br i1 %24, label %25, label %15

25:                                               ; preds = %22, %13
  %26 = phi i32 [ %11, %13 ], [ %23, %22 ]
  %27 = lshr i32 %26, 31
  %28 = add nsw i32 %27, %26
  %29 = xor i32 %28, -1
  br label %30

30:                                               ; preds = %15, %25
  %31 = phi i32 [ %29, %25 ], [ %17, %15 ]
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %30, %3
  %34 = phi i32 [ %31, %30 ], [ -1, %3 ]
  %35 = xor i32 %34, -1
  %36 = icmp eq i32 %10, %35
  br i1 %36, label %76, label %37

37:                                               ; preds = %30, %33
  %38 = phi i32 [ %31, %30 ], [ %35, %33 ]
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = add nsw i64 %41, %4
  %43 = inttoptr i64 %42 to i64*
  %44 = getelementptr inbounds i64, i64* %43, i64 %39
  %45 = load i64, i64* %44, align 8
  %46 = add nsw i64 %42, %45
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %76, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  br label %50

50:                                               ; preds = %48, %67
  %51 = phi i32 [ 0, %48 ], [ %64, %67 ]
  %52 = phi i64 [ %46, %48 ], [ %74, %67 ]
  %53 = phi i32 [ %38, %48 ], [ %65, %67 ]
  %54 = inttoptr i64 %52 to <8 x i32>*
  %55 = load <8 x i32>, <8 x i32>* %54, align 4
  %56 = call <8 x i32> @llvm.ctpop.v8i32(<8 x i32> %55)
  %57 = shufflevector <8 x i32> %56, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %58 = add <8 x i32> %56, %57
  %59 = shufflevector <8 x i32> %58, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %60 = add <8 x i32> %58, %59
  %61 = shufflevector <8 x i32> %60, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %62 = add <8 x i32> %60, %61
  %63 = extractelement <8 x i32> %62, i32 0
  %64 = add i32 %63, %51
  %65 = add nsw i32 %53, 1
  %66 = icmp slt i32 %65, %10
  br i1 %66, label %67, label %76

67:                                               ; preds = %50
  %68 = sext i32 %65 to i64
  %69 = load i64, i64* %49, align 8
  %70 = add nsw i64 %69, %4
  %71 = inttoptr i64 %70 to i64*
  %72 = getelementptr inbounds i64, i64* %71, i64 %68
  %73 = load i64, i64* %72, align 8
  %74 = add nsw i64 %70, %73
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %50

76:                                               ; preds = %50, %67, %33, %37, %1
  %77 = phi i32 [ 0, %1 ], [ 0, %37 ], [ 0, %33 ], [ %64, %67 ], [ %64, %50 ]
  ret i32 %77
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @IA__FcCharSetSubtractCount(%struct._FcCharSet*, %struct._FcCharSet*) #8 {
  %3 = icmp ne %struct._FcCharSet* %0, null
  %4 = icmp ne %struct._FcCharSet* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %317

6:                                                ; preds = %2
  %7 = ptrtoint %struct._FcCharSet* %0 to i64
  %8 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = add nsw i64 %9, %7
  %11 = inttoptr i64 %10 to i16*
  %12 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, -1
  %15 = icmp eq i64 %10, 0
  br i1 %15, label %38, label %16

16:                                               ; preds = %6
  %17 = icmp sgt i32 %13, 0
  br i1 %17, label %18, label %28

18:                                               ; preds = %16, %25
  %19 = phi i32 [ %26, %25 ], [ %14, %16 ]
  %20 = ashr i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i16, i16* %11, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %18
  %26 = add nsw i32 %20, -1
  %27 = icmp slt i32 %19, 2
  br i1 %27, label %28, label %18

28:                                               ; preds = %25, %16
  %29 = phi i32 [ %14, %16 ], [ %26, %25 ]
  %30 = lshr i32 %29, 31
  %31 = add nsw i32 %30, %29
  %32 = xor i32 %31, -1
  br label %33

33:                                               ; preds = %18, %28
  %34 = phi i32 [ %32, %28 ], [ %20, %18 ]
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = sext i32 %34 to i64
  br label %48

38:                                               ; preds = %33, %6
  %39 = phi i32 [ %34, %33 ], [ -1, %6 ]
  %40 = xor i32 %39, -1
  %41 = icmp eq i32 %13, %40
  br i1 %41, label %60, label %42

42:                                               ; preds = %38
  %43 = sext i32 %40 to i64
  %44 = getelementptr inbounds i16, i16* %11, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = shl nuw nsw i32 %46, 8
  br label %48

48:                                               ; preds = %42, %36
  %49 = phi i32 [ %47, %42 ], [ 0, %36 ]
  %50 = phi i64 [ %43, %42 ], [ %37, %36 ]
  %51 = phi i32 [ %40, %42 ], [ %34, %36 ]
  %52 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = add nsw i64 %53, %7
  %55 = inttoptr i64 %54 to i64*
  %56 = getelementptr inbounds i64, i64* %55, i64 %50
  %57 = load i64, i64* %56, align 8
  %58 = add nsw i64 %54, %57
  %59 = inttoptr i64 %58 to %struct._FcCharLeaf*
  br label %60

60:                                               ; preds = %38, %48
  %61 = phi i32 [ %51, %48 ], [ 0, %38 ]
  %62 = phi i32 [ %49, %48 ], [ -1, %38 ]
  %63 = phi %struct._FcCharLeaf* [ %59, %48 ], [ null, %38 ]
  %64 = ptrtoint %struct._FcCharSet* %1 to i64
  %65 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = add nsw i64 %66, %64
  %68 = inttoptr i64 %67 to i16*
  %69 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = add nsw i32 %70, -1
  %72 = icmp eq i64 %67, 0
  br i1 %72, label %95, label %73

73:                                               ; preds = %60
  %74 = icmp sgt i32 %70, 0
  br i1 %74, label %75, label %85

75:                                               ; preds = %73, %82
  %76 = phi i32 [ %83, %82 ], [ %71, %73 ]
  %77 = ashr i32 %76, 1
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i16, i16* %68, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %90, label %82

82:                                               ; preds = %75
  %83 = add nsw i32 %77, -1
  %84 = icmp slt i32 %76, 2
  br i1 %84, label %85, label %75

85:                                               ; preds = %82, %73
  %86 = phi i32 [ %71, %73 ], [ %83, %82 ]
  %87 = lshr i32 %86, 31
  %88 = add nsw i32 %87, %86
  %89 = xor i32 %88, -1
  br label %90

90:                                               ; preds = %75, %85
  %91 = phi i32 [ %89, %85 ], [ %77, %75 ]
  %92 = icmp slt i32 %91, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %90
  %94 = sext i32 %91 to i64
  br label %105

95:                                               ; preds = %90, %60
  %96 = phi i32 [ %91, %90 ], [ -1, %60 ]
  %97 = xor i32 %96, -1
  %98 = icmp eq i32 %70, %97
  br i1 %98, label %116, label %99

99:                                               ; preds = %95
  %100 = sext i32 %97 to i64
  %101 = getelementptr inbounds i16, i16* %68, i64 %100
  %102 = load i16, i16* %101, align 2
  %103 = zext i16 %102 to i32
  %104 = shl nuw nsw i32 %103, 8
  br label %105

105:                                              ; preds = %99, %93
  %106 = phi i32 [ %104, %99 ], [ 0, %93 ]
  %107 = phi i64 [ %100, %99 ], [ %94, %93 ]
  %108 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = add nsw i64 %109, %64
  %111 = inttoptr i64 %110 to i64*
  %112 = getelementptr inbounds i64, i64* %111, i64 %107
  %113 = load i64, i64* %112, align 8
  %114 = add nsw i64 %110, %113
  %115 = inttoptr i64 %114 to %struct._FcCharLeaf*
  br label %116

116:                                              ; preds = %95, %105
  %117 = phi i32 [ %106, %105 ], [ -1, %95 ]
  %118 = phi %struct._FcCharLeaf* [ %115, %105 ], [ null, %95 ]
  %119 = icmp eq %struct._FcCharLeaf* %63, null
  br i1 %119, label %317, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %122 = icmp sgt i32 %70, 0
  %123 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 2
  br label %124

124:                                              ; preds = %120, %309
  %125 = phi i32 [ 0, %120 ], [ %315, %309 ]
  %126 = phi %struct._FcCharLeaf* [ %118, %120 ], [ %314, %309 ]
  %127 = phi i32 [ %117, %120 ], [ %313, %309 ]
  %128 = phi %struct._FcCharLeaf* [ %63, %120 ], [ %312, %309 ]
  %129 = phi i32 [ %62, %120 ], [ %311, %309 ]
  %130 = phi i32 [ %61, %120 ], [ %310, %309 ]
  %131 = icmp ugt i32 %129, %127
  br i1 %131, label %247, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 0
  %134 = icmp eq i32 %129, %127
  br i1 %134, label %165, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 1
  %137 = load i32, i32* %133, align 4
  %138 = tail call i32 @llvm.ctpop.i32(i32 %137) #13, !range !2
  %139 = add i32 %138, %125
  %140 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 2
  %141 = load i32, i32* %136, align 4
  %142 = tail call i32 @llvm.ctpop.i32(i32 %141) #13, !range !2
  %143 = add i32 %142, %139
  %144 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 3
  %145 = load i32, i32* %140, align 4
  %146 = tail call i32 @llvm.ctpop.i32(i32 %145) #13, !range !2
  %147 = add i32 %146, %143
  %148 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 4
  %149 = load i32, i32* %144, align 4
  %150 = tail call i32 @llvm.ctpop.i32(i32 %149) #13, !range !2
  %151 = add i32 %150, %147
  %152 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 5
  %153 = load i32, i32* %148, align 4
  %154 = tail call i32 @llvm.ctpop.i32(i32 %153) #13, !range !2
  %155 = add i32 %154, %151
  %156 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 6
  %157 = load i32, i32* %152, align 4
  %158 = tail call i32 @llvm.ctpop.i32(i32 %157) #13, !range !2
  %159 = add i32 %158, %155
  %160 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 7
  %161 = load i32, i32* %156, align 4
  %162 = tail call i32 @llvm.ctpop.i32(i32 %161) #13, !range !2
  %163 = add i32 %162, %159
  %164 = load i32, i32* %160, align 4
  br label %227

165:                                              ; preds = %132
  %166 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 0
  %167 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 1
  %168 = load i32, i32* %133, align 4
  %169 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 1
  %170 = load i32, i32* %166, align 4
  %171 = xor i32 %170, -1
  %172 = and i32 %168, %171
  %173 = tail call i32 @llvm.ctpop.i32(i32 %172) #13, !range !2
  %174 = add i32 %173, %125
  %175 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 2
  %176 = load i32, i32* %167, align 4
  %177 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 2
  %178 = load i32, i32* %169, align 4
  %179 = xor i32 %178, -1
  %180 = and i32 %176, %179
  %181 = tail call i32 @llvm.ctpop.i32(i32 %180) #13, !range !2
  %182 = add i32 %181, %174
  %183 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 3
  %184 = load i32, i32* %175, align 4
  %185 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 3
  %186 = load i32, i32* %177, align 4
  %187 = xor i32 %186, -1
  %188 = and i32 %184, %187
  %189 = tail call i32 @llvm.ctpop.i32(i32 %188) #13, !range !2
  %190 = add i32 %189, %182
  %191 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 4
  %192 = load i32, i32* %183, align 4
  %193 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 4
  %194 = load i32, i32* %185, align 4
  %195 = xor i32 %194, -1
  %196 = and i32 %192, %195
  %197 = tail call i32 @llvm.ctpop.i32(i32 %196) #13, !range !2
  %198 = add i32 %197, %190
  %199 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 5
  %200 = load i32, i32* %191, align 4
  %201 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 5
  %202 = load i32, i32* %193, align 4
  %203 = xor i32 %202, -1
  %204 = and i32 %200, %203
  %205 = tail call i32 @llvm.ctpop.i32(i32 %204) #13, !range !2
  %206 = add i32 %205, %198
  %207 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 6
  %208 = load i32, i32* %199, align 4
  %209 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 6
  %210 = load i32, i32* %201, align 4
  %211 = xor i32 %210, -1
  %212 = and i32 %208, %211
  %213 = tail call i32 @llvm.ctpop.i32(i32 %212) #13, !range !2
  %214 = add i32 %213, %206
  %215 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %128, i64 0, i32 0, i64 7
  %216 = load i32, i32* %207, align 4
  %217 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %126, i64 0, i32 0, i64 7
  %218 = load i32, i32* %209, align 4
  %219 = xor i32 %218, -1
  %220 = and i32 %216, %219
  %221 = tail call i32 @llvm.ctpop.i32(i32 %220) #13, !range !2
  %222 = add i32 %221, %214
  %223 = load i32, i32* %215, align 4
  %224 = load i32, i32* %217, align 4
  %225 = xor i32 %224, -1
  %226 = and i32 %223, %225
  br label %227

227:                                              ; preds = %135, %165
  %228 = phi i32 [ %164, %135 ], [ %226, %165 ]
  %229 = phi i32 [ %163, %135 ], [ %222, %165 ]
  %230 = tail call i32 @llvm.ctpop.i32(i32 %228) #13, !range !2
  %231 = add i32 %230, %229
  %232 = add nsw i32 %130, 1
  %233 = icmp slt i32 %232, %13
  br i1 %233, label %234, label %317

234:                                              ; preds = %227
  %235 = sext i32 %232 to i64
  %236 = getelementptr inbounds i16, i16* %11, i64 %235
  %237 = load i16, i16* %236, align 2
  %238 = zext i16 %237 to i32
  %239 = shl nuw nsw i32 %238, 8
  %240 = load i64, i64* %121, align 8
  %241 = add nsw i64 %240, %7
  %242 = inttoptr i64 %241 to i64*
  %243 = getelementptr inbounds i64, i64* %242, i64 %235
  %244 = load i64, i64* %243, align 8
  %245 = add nsw i64 %241, %244
  %246 = inttoptr i64 %245 to %struct._FcCharLeaf*
  br label %309

247:                                              ; preds = %124
  %248 = icmp eq %struct._FcCharLeaf* %126, null
  br i1 %248, label %309, label %249

249:                                              ; preds = %247
  %250 = lshr i32 %129, 8
  %251 = trunc i32 %250 to i16
  br i1 %72, label %289, label %252

252:                                              ; preds = %249
  br i1 %122, label %253, label %269

253:                                              ; preds = %252, %262
  %254 = phi i32 [ %267, %262 ], [ %71, %252 ]
  %255 = phi i32 [ %266, %262 ], [ 0, %252 ]
  %256 = add nsw i32 %255, %254
  %257 = ashr i32 %256, 1
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds i16, i16* %68, i64 %258
  %260 = load i16, i16* %259, align 2
  %261 = icmp eq i16 %260, %251
  br i1 %261, label %284, label %262

262:                                              ; preds = %253
  %263 = icmp ult i16 %260, %251
  %264 = add nsw i32 %257, 1
  %265 = add nsw i32 %257, -1
  %266 = select i1 %263, i32 %264, i32 %255
  %267 = select i1 %263, i32 %254, i32 %265
  %268 = icmp sgt i32 %266, %267
  br i1 %268, label %269, label %253

269:                                              ; preds = %262, %252
  %270 = phi i32 [ %71, %252 ], [ %267, %262 ]
  %271 = icmp slt i32 %270, 0
  br i1 %271, label %279, label %272

272:                                              ; preds = %269
  %273 = icmp slt i32 %270, %70
  br i1 %273, label %274, label %281

274:                                              ; preds = %272
  %275 = sext i32 %270 to i64
  %276 = getelementptr inbounds i16, i16* %68, i64 %275
  %277 = load i16, i16* %276, align 2
  %278 = icmp ult i16 %277, %251
  br i1 %278, label %279, label %281

279:                                              ; preds = %274, %269
  %280 = add nsw i32 %270, 1
  br label %281

281:                                              ; preds = %279, %274, %272
  %282 = phi i32 [ %280, %279 ], [ %270, %274 ], [ %270, %272 ]
  %283 = xor i32 %282, -1
  br label %284

284:                                              ; preds = %253, %281
  %285 = phi i32 [ %283, %281 ], [ %257, %253 ]
  %286 = icmp slt i32 %285, 0
  br i1 %286, label %289, label %287

287:                                              ; preds = %284
  %288 = sext i32 %285 to i64
  br label %299

289:                                              ; preds = %249, %284
  %290 = phi i32 [ %285, %284 ], [ -1, %249 ]
  %291 = xor i32 %290, -1
  %292 = icmp eq i32 %70, %291
  br i1 %292, label %309, label %293

293:                                              ; preds = %289
  %294 = sext i32 %291 to i64
  %295 = getelementptr inbounds i16, i16* %68, i64 %294
  %296 = load i16, i16* %295, align 2
  %297 = zext i16 %296 to i32
  %298 = shl nuw nsw i32 %297, 8
  br label %299

299:                                              ; preds = %293, %287
  %300 = phi i32 [ %298, %293 ], [ %129, %287 ]
  %301 = phi i64 [ %294, %293 ], [ %288, %287 ]
  %302 = load i64, i64* %123, align 8
  %303 = add nsw i64 %302, %64
  %304 = inttoptr i64 %303 to i64*
  %305 = getelementptr inbounds i64, i64* %304, i64 %301
  %306 = load i64, i64* %305, align 8
  %307 = add nsw i64 %303, %306
  %308 = inttoptr i64 %307 to %struct._FcCharLeaf*
  br label %309

309:                                              ; preds = %299, %289, %234, %247
  %310 = phi i32 [ %130, %247 ], [ %232, %234 ], [ %130, %289 ], [ %130, %299 ]
  %311 = phi i32 [ %129, %247 ], [ %239, %234 ], [ %129, %289 ], [ %129, %299 ]
  %312 = phi %struct._FcCharLeaf* [ %128, %247 ], [ %246, %234 ], [ %128, %289 ], [ %128, %299 ]
  %313 = phi i32 [ %127, %247 ], [ %127, %234 ], [ -1, %289 ], [ %300, %299 ]
  %314 = phi %struct._FcCharLeaf* [ null, %247 ], [ %126, %234 ], [ null, %289 ], [ %308, %299 ]
  %315 = phi i32 [ %125, %247 ], [ %231, %234 ], [ %125, %289 ], [ %125, %299 ]
  %316 = icmp eq %struct._FcCharLeaf* %312, null
  br i1 %316, label %317, label %124

317:                                              ; preds = %227, %309, %116, %2
  %318 = phi i32 [ 0, %2 ], [ 0, %116 ], [ %231, %227 ], [ %315, %309 ]
  ret i32 %318
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcCharSetNextPage(%struct._FcCharSet*, i32* nocapture, i32* nocapture) #4 {
  %4 = icmp eq %struct._FcCharSet* %0, null
  br i1 %4, label %95, label %5

5:                                                ; preds = %3
  %6 = load i32, i32* %2, align 4
  %7 = lshr i32 %6, 8
  %8 = trunc i32 %7 to i16
  %9 = ptrtoint %struct._FcCharSet* %0 to i64
  %10 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = add nsw i64 %11, %9
  %13 = inttoptr i64 %12 to i16*
  %14 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, -1
  %17 = icmp eq i64 %12, 0
  br i1 %17, label %56, label %18

18:                                               ; preds = %5
  %19 = icmp sgt i32 %15, 0
  br i1 %19, label %20, label %36

20:                                               ; preds = %18, %29
  %21 = phi i32 [ %34, %29 ], [ %16, %18 ]
  %22 = phi i32 [ %33, %29 ], [ 0, %18 ]
  %23 = add nsw i32 %22, %21
  %24 = ashr i32 %23, 1
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i16, i16* %13, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = icmp eq i16 %27, %8
  br i1 %28, label %51, label %29

29:                                               ; preds = %20
  %30 = icmp ult i16 %27, %8
  %31 = add nsw i32 %24, 1
  %32 = add nsw i32 %24, -1
  %33 = select i1 %30, i32 %31, i32 %22
  %34 = select i1 %30, i32 %21, i32 %32
  %35 = icmp sgt i32 %33, %34
  br i1 %35, label %36, label %20

36:                                               ; preds = %29, %18
  %37 = phi i32 [ %16, %18 ], [ %34, %29 ]
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %36
  %40 = icmp slt i32 %37, %15
  br i1 %40, label %41, label %48

41:                                               ; preds = %39
  %42 = sext i32 %37 to i64
  %43 = getelementptr inbounds i16, i16* %13, i64 %42
  %44 = load i16, i16* %43, align 2
  %45 = icmp ult i16 %44, %8
  br i1 %45, label %46, label %48

46:                                               ; preds = %41, %36
  %47 = add nsw i32 %37, 1
  br label %48

48:                                               ; preds = %46, %41, %39
  %49 = phi i32 [ %47, %46 ], [ %37, %41 ], [ %37, %39 ]
  %50 = xor i32 %49, -1
  br label %51

51:                                               ; preds = %20, %48
  %52 = phi i32 [ %50, %48 ], [ %24, %20 ]
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = sext i32 %52 to i64
  br label %66

56:                                               ; preds = %5, %51
  %57 = phi i32 [ %52, %51 ], [ -1, %5 ]
  %58 = xor i32 %57, -1
  %59 = icmp eq i32 %15, %58
  br i1 %59, label %95, label %60

60:                                               ; preds = %56
  %61 = sext i32 %58 to i64
  %62 = getelementptr inbounds i16, i16* %13, i64 %61
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = shl nuw nsw i32 %64, 8
  br label %66

66:                                               ; preds = %54, %60
  %67 = phi i32 [ %65, %60 ], [ %6, %54 ]
  %68 = phi i64 [ %61, %60 ], [ %55, %54 ]
  %69 = phi i32 [ %58, %60 ], [ %52, %54 ]
  %70 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %71 = load i64, i64* %70, align 8
  %72 = add nsw i64 %71, %9
  %73 = inttoptr i64 %72 to i64*
  %74 = getelementptr inbounds i64, i64* %73, i64 %68
  %75 = load i64, i64* %74, align 8
  %76 = add nsw i64 %72, %75
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %95, label %78

78:                                               ; preds = %66
  %79 = bitcast i32* %1 to i8*
  %80 = inttoptr i64 %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* nonnull align 4 %80, i64 32, i1 false)
  %81 = add nsw i32 %69, 1
  %82 = load i32, i32* %14, align 4
  %83 = icmp slt i32 %81, %82
  br i1 %83, label %84, label %93

84:                                               ; preds = %78
  %85 = load i64, i64* %10, align 8
  %86 = add nsw i64 %85, %9
  %87 = inttoptr i64 %86 to i16*
  %88 = sext i32 %81 to i64
  %89 = getelementptr inbounds i16, i16* %87, i64 %88
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = shl nuw nsw i32 %91, 8
  br label %93

93:                                               ; preds = %78, %84
  %94 = phi i32 [ %92, %84 ], [ -1, %78 ]
  store i32 %94, i32* %2, align 4
  br label %95

95:                                               ; preds = %56, %66, %3, %93
  %96 = phi i32 [ %67, %93 ], [ -1, %3 ], [ -1, %66 ], [ -1, %56 ]
  ret i32 %96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcCharSetFirstPage(%struct._FcCharSet*, i32* nocapture, i32* nocapture) #4 {
  store i32 0, i32* %2, align 4
  %4 = tail call i32 @IA__FcCharSetNextPage(%struct._FcCharSet* %0, i32* %1, i32* %2)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcCharSetCoverage(%struct._FcCharSet*, i32, i32* nocapture) #4 {
  %4 = lshr i32 %1, 8
  %5 = trunc i32 %4 to i16
  %6 = ptrtoint %struct._FcCharSet* %0 to i64
  %7 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, %6
  %10 = inttoptr i64 %9 to i16*
  %11 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, -1
  %14 = icmp eq i64 %9, 0
  br i1 %14, label %51, label %15

15:                                               ; preds = %3
  %16 = icmp sgt i32 %12, 0
  br i1 %16, label %17, label %33

17:                                               ; preds = %15, %26
  %18 = phi i32 [ %31, %26 ], [ %13, %15 ]
  %19 = phi i32 [ %30, %26 ], [ 0, %15 ]
  %20 = add nsw i32 %19, %18
  %21 = ashr i32 %20, 1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i16, i16* %10, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = icmp eq i16 %24, %5
  br i1 %25, label %48, label %26

26:                                               ; preds = %17
  %27 = icmp ult i16 %24, %5
  %28 = add nsw i32 %21, 1
  %29 = add nsw i32 %21, -1
  %30 = select i1 %27, i32 %28, i32 %19
  %31 = select i1 %27, i32 %18, i32 %29
  %32 = icmp sgt i32 %30, %31
  br i1 %32, label %33, label %17

33:                                               ; preds = %26, %15
  %34 = phi i32 [ %13, %15 ], [ %31, %26 ]
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %33
  %37 = icmp slt i32 %34, %12
  br i1 %37, label %38, label %45

38:                                               ; preds = %36
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds i16, i16* %10, i64 %39
  %41 = load i16, i16* %40, align 2
  %42 = icmp ult i16 %41, %5
  br i1 %42, label %43, label %45

43:                                               ; preds = %38, %33
  %44 = add nsw i32 %34, 1
  br label %45

45:                                               ; preds = %43, %38, %36
  %46 = phi i32 [ %44, %43 ], [ %34, %38 ], [ %34, %36 ]
  %47 = xor i32 %46, -1
  br label %48

48:                                               ; preds = %17, %45
  %49 = phi i32 [ %47, %45 ], [ %21, %17 ]
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %57

51:                                               ; preds = %3, %48
  %52 = phi i32 [ %49, %48 ], [ -1, %3 ]
  %53 = xor i32 %52, -1
  %54 = icmp eq i32 %12, %53
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = bitcast i32* %2 to i8*
  br label %69

57:                                               ; preds = %51, %48
  %58 = phi i32 [ %49, %48 ], [ %53, %51 ]
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %61 = load i64, i64* %60, align 8
  %62 = add nsw i64 %61, %6
  %63 = inttoptr i64 %62 to i64*
  %64 = getelementptr inbounds i64, i64* %63, i64 %59
  %65 = load i64, i64* %64, align 8
  %66 = add nsw i64 %62, %65
  %67 = icmp eq i64 %66, 0
  %68 = bitcast i32* %2 to i8*
  br i1 %67, label %69, label %71

69:                                               ; preds = %55, %57
  %70 = phi i8* [ %56, %55 ], [ %68, %57 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 32, i1 false)
  br label %85

71:                                               ; preds = %57
  %72 = inttoptr i64 %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* nonnull align 4 %72, i64 32, i1 false)
  %73 = add nsw i32 %58, 1
  %74 = load i32, i32* %11, align 4
  %75 = icmp slt i32 %73, %74
  br i1 %75, label %76, label %85

76:                                               ; preds = %71
  %77 = load i64, i64* %7, align 8
  %78 = add nsw i64 %77, %6
  %79 = inttoptr i64 %78 to i16*
  %80 = sext i32 %73 to i64
  %81 = getelementptr inbounds i16, i16* %79, i64 %80
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = shl nuw nsw i32 %83, 8
  br label %85

85:                                               ; preds = %76, %71, %69
  %86 = phi i32 [ 0, %69 ], [ %84, %76 ], [ -1, %71 ]
  ret i32 %86
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcCharSet* @FcNameParseCharSet(i8*) local_unnamed_addr #4 {
  %2 = alloca i8*, align 8
  %3 = tail call noalias i8* @malloc(i64 24) #13
  %4 = icmp eq i8* %3, null
  br i1 %4, label %110, label %5

5:                                                ; preds = %1
  %6 = bitcast i8* %3 to %struct._FcCharSet*
  %7 = bitcast i8* %3 to i32*
  store i32 1, i32* %7, align 4
  %8 = getelementptr inbounds i8, i8* %3, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 20, i1 false) #13
  %9 = load i8, i8* %0, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %110, label %11

11:                                               ; preds = %5
  %12 = bitcast i8** %2 to i8*
  %13 = bitcast i8** %2 to i64*
  %14 = tail call i16** @__ctype_b_loc() #14
  %15 = tail call i32* @__errno_location() #14
  br label %19

16:                                               ; preds = %106, %85
  %17 = load i8, i8* %75, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %110, label %19

19:                                               ; preds = %11, %16
  %20 = phi i8* [ %0, %11 ], [ %75, %16 ]
  %21 = ptrtoint i8* %20 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  store i64 %21, i64* %13, align 8
  %22 = load i16*, i16** %14, align 8
  %23 = load i8, i8* %20, align 1
  %24 = sext i8 %23 to i64
  %25 = getelementptr inbounds i16, i16* %22, i64 %24
  %26 = load i16, i16* %25, align 2
  %27 = and i16 %26, 8192
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %39, label %29

29:                                               ; preds = %19, %29
  %30 = phi i8* [ %31, %29 ], [ %20, %19 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = sext i8 %32 to i64
  %34 = getelementptr inbounds i16, i16* %22, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = and i16 %35, 8192
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %38, label %29

38:                                               ; preds = %29
  store i8* %31, i8** %2, align 8
  br label %39

39:                                               ; preds = %38, %19
  %40 = phi i8* [ %31, %38 ], [ %20, %19 ]
  store i32 0, i32* %15, align 4
  %41 = call i64 @strtol(i8* %40, i8** nonnull %2, i32 16) #13
  %42 = load i32, i32* %15, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %109

44:                                               ; preds = %39
  %45 = load i16*, i16** %14, align 8
  %46 = load i8*, i8** %2, align 8
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i64
  %49 = getelementptr inbounds i16, i16* %45, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = and i16 %50, 8192
  %52 = icmp eq i16 %51, 0
  br i1 %52, label %63, label %53

53:                                               ; preds = %44, %53
  %54 = phi i8* [ %55, %53 ], [ %46, %44 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 1
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i64
  %58 = getelementptr inbounds i16, i16* %45, i64 %57
  %59 = load i16, i16* %58, align 2
  %60 = and i16 %59, 8192
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %62, label %53

62:                                               ; preds = %53
  store i8* %55, i8** %2, align 8
  br label %63

63:                                               ; preds = %62, %44
  %64 = phi i8* [ %55, %62 ], [ %46, %44 ]
  %65 = phi i8 [ %56, %62 ], [ %47, %44 ]
  %66 = icmp eq i8 %65, 45
  br i1 %66, label %67, label %74

67:                                               ; preds = %63
  %68 = getelementptr inbounds i8, i8* %64, i64 1
  store i8* %68, i8** %2, align 8
  store i32 0, i32* %15, align 4
  %69 = call i64 @strtol(i8* %68, i8** nonnull %2, i32 16) #13
  %70 = load i32, i32* %15, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %109

72:                                               ; preds = %67
  %73 = load i8*, i8** %2, align 8
  br label %74

74:                                               ; preds = %72, %63
  %75 = phi i8* [ %73, %72 ], [ %64, %63 ]
  %76 = phi i64 [ %69, %72 ], [ %41, %63 ]
  %77 = icmp eq i8* %75, %40
  %78 = or i64 %76, %41
  %79 = icmp slt i64 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %109, label %81

81:                                               ; preds = %74
  %82 = icmp slt i64 %76, %41
  %83 = icmp sgt i64 %76, 1114111
  %84 = or i1 %82, %83
  br i1 %84, label %109, label %85

85:                                               ; preds = %81
  %86 = trunc i64 %41 to i32
  %87 = trunc i64 %76 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  %88 = add i32 %87, 1
  %89 = icmp ugt i32 %88, %86
  br i1 %89, label %90, label %16

90:                                               ; preds = %85, %106
  %91 = phi i32 [ %107, %106 ], [ %86, %85 ]
  %92 = load i32, i32* %7, align 4
  %93 = icmp eq i32 %92, -1
  br i1 %93, label %106, label %94

94:                                               ; preds = %90
  %95 = tail call %struct._FcCharLeaf* @FcCharSetFindLeafCreate(%struct._FcCharSet* nonnull %6, i32 %91) #13
  %96 = icmp eq %struct._FcCharLeaf* %95, null
  br i1 %96, label %106, label %97

97:                                               ; preds = %94
  %98 = lshr i32 %91, 5
  %99 = and i32 %98, 7
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %95, i64 0, i32 0, i64 %100
  %102 = and i32 %91, 31
  %103 = shl i32 1, %102
  %104 = load i32, i32* %101, align 4
  %105 = or i32 %104, %103
  store i32 %105, i32* %101, align 4
  br label %106

106:                                              ; preds = %90, %94, %97
  %107 = add i32 %91, 1
  %108 = icmp eq i32 %107, %88
  br i1 %108, label %16, label %90

109:                                              ; preds = %39, %67, %81, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  tail call void @IA__FcCharSetDestroy(%struct._FcCharSet* nonnull %6)
  br label %110

110:                                              ; preds = %16, %5, %1, %109
  %111 = phi %struct._FcCharSet* [ null, %109 ], [ null, %1 ], [ %6, %5 ], [ %6, %16 ]
  ret %struct._FcCharSet* %111
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcNameUnparseCharSet(%struct._FcStrBuf*, %struct._FcCharSet*) local_unnamed_addr #4 {
  %3 = alloca [64 x i8], align 16
  %4 = ptrtoint %struct._FcCharSet* %1 to i64
  %5 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = add nsw i64 %6, %4
  %8 = inttoptr i64 %7 to i16*
  %9 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, -1
  %12 = icmp eq i64 %7, 0
  br i1 %12, label %35, label %13

13:                                               ; preds = %2
  %14 = icmp sgt i32 %10, 0
  br i1 %14, label %15, label %25

15:                                               ; preds = %13, %22
  %16 = phi i32 [ %23, %22 ], [ %11, %13 ]
  %17 = ashr i32 %16, 1
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i16, i16* %8, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %15
  %23 = add nsw i32 %17, -1
  %24 = icmp slt i32 %16, 2
  br i1 %24, label %25, label %15

25:                                               ; preds = %22, %13
  %26 = phi i32 [ %11, %13 ], [ %23, %22 ]
  %27 = lshr i32 %26, 31
  %28 = add nsw i32 %27, %26
  %29 = xor i32 %28, -1
  br label %30

30:                                               ; preds = %15, %25
  %31 = phi i32 [ %29, %25 ], [ %17, %15 ]
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = sext i32 %31 to i64
  br label %45

35:                                               ; preds = %30, %2
  %36 = phi i32 [ %31, %30 ], [ -1, %2 ]
  %37 = xor i32 %36, -1
  %38 = icmp eq i32 %10, %37
  br i1 %38, label %139, label %39

39:                                               ; preds = %35
  %40 = sext i32 %37 to i64
  %41 = getelementptr inbounds i16, i16* %8, i64 %40
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = shl nuw nsw i32 %43, 8
  br label %45

45:                                               ; preds = %33, %39
  %46 = phi i32 [ %44, %39 ], [ 0, %33 ]
  %47 = phi i64 [ %40, %39 ], [ %34, %33 ]
  %48 = phi i32 [ %37, %39 ], [ %31, %33 ]
  %49 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = add nsw i64 %50, %4
  %52 = inttoptr i64 %51 to i64*
  %53 = getelementptr inbounds i64, i64* %52, i64 %47
  %54 = load i64, i64* %53, align 8
  %55 = add nsw i64 %51, %54
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %139, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i64 0, i64 0
  %59 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 2
  br label %60

60:                                               ; preds = %57, %116
  %61 = phi i32 [ 2147483647, %57 ], [ %109, %116 ]
  %62 = phi i32 [ 2147483647, %57 ], [ %108, %116 ]
  %63 = phi i64 [ %55, %57 ], [ %130, %116 ]
  %64 = phi i32 [ %46, %57 ], [ %124, %116 ]
  %65 = phi i32 [ %48, %57 ], [ %113, %116 ]
  %66 = inttoptr i64 %63 to %struct._FcCharLeaf*
  br label %67

67:                                               ; preds = %107, %60
  %68 = phi i64 [ 0, %60 ], [ %110, %107 ]
  %69 = phi i32 [ %61, %60 ], [ %109, %107 ]
  %70 = phi i32 [ %62, %60 ], [ %108, %107 ]
  %71 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %66, i64 0, i32 0, i64 %68
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %107, label %74

74:                                               ; preds = %67
  %75 = trunc i64 %68 to i32
  %76 = shl i32 %75, 5
  %77 = add i32 %64, %76
  br label %78

78:                                               ; preds = %74, %101
  %79 = phi i32 [ %105, %101 ], [ %77, %74 ]
  %80 = phi i32 [ %104, %101 ], [ %72, %74 ]
  %81 = phi i32 [ %103, %101 ], [ %69, %74 ]
  %82 = phi i32 [ %102, %101 ], [ %70, %74 ]
  %83 = and i32 %80, 1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %101, label %85

85:                                               ; preds = %78
  %86 = add i32 %81, 1
  %87 = icmp eq i32 %79, %86
  br i1 %87, label %101, label %88

88:                                               ; preds = %85
  %89 = icmp eq i32 %81, %82
  br i1 %89, label %94, label %90

90:                                               ; preds = %88
  %91 = call i32 @FcStrBufChar(%struct._FcStrBuf* %0, i8 zeroext 45) #13
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %58) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %58, i8 -86, i64 64, i1 false) #13
  %92 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %58, i64 64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 %81) #13
  %93 = call i32 @FcStrBufString(%struct._FcStrBuf* %0, i8* nonnull %58) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %58) #13
  br label %94

94:                                               ; preds = %88, %90
  %95 = icmp eq i32 %81, 2147483647
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = call i32 @FcStrBufChar(%struct._FcStrBuf* %0, i8 zeroext 32) #13
  br label %98

98:                                               ; preds = %94, %96
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %58) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %58, i8 -86, i64 64, i1 false) #13
  %99 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %58, i64 64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 %79) #13
  %100 = call i32 @FcStrBufString(%struct._FcStrBuf* %0, i8* nonnull %58) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %58) #13
  br label %101

101:                                              ; preds = %98, %85, %78
  %102 = phi i32 [ %82, %78 ], [ %79, %98 ], [ %82, %85 ]
  %103 = phi i32 [ %81, %78 ], [ %79, %98 ], [ %79, %85 ]
  %104 = lshr i32 %80, 1
  %105 = add nsw i32 %79, 1
  %106 = icmp eq i32 %104, 0
  br i1 %106, label %107, label %78

107:                                              ; preds = %101, %67
  %108 = phi i32 [ %70, %67 ], [ %102, %101 ]
  %109 = phi i32 [ %69, %67 ], [ %103, %101 ]
  %110 = add nuw nsw i64 %68, 1
  %111 = icmp eq i64 %110, 8
  br i1 %111, label %112, label %67

112:                                              ; preds = %107
  %113 = add nsw i32 %65, 1
  %114 = load i32, i32* %9, align 4
  %115 = icmp slt i32 %113, %114
  br i1 %115, label %116, label %132

116:                                              ; preds = %112
  %117 = load i64, i64* %5, align 8
  %118 = add nsw i64 %117, %4
  %119 = inttoptr i64 %118 to i16*
  %120 = sext i32 %113 to i64
  %121 = getelementptr inbounds i16, i16* %119, i64 %120
  %122 = load i16, i16* %121, align 2
  %123 = zext i16 %122 to i32
  %124 = shl nuw nsw i32 %123, 8
  %125 = load i64, i64* %59, align 8
  %126 = add nsw i64 %125, %4
  %127 = inttoptr i64 %126 to i64*
  %128 = getelementptr inbounds i64, i64* %127, i64 %120
  %129 = load i64, i64* %128, align 8
  %130 = add nsw i64 %126, %129
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %60

132:                                              ; preds = %112, %116
  %133 = icmp eq i32 %109, %108
  br i1 %133, label %139, label %134

134:                                              ; preds = %132
  %135 = call i32 @FcStrBufChar(%struct._FcStrBuf* %0, i8 zeroext 45) #13
  %136 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %136) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %136, i8 -86, i64 64, i1 false) #13
  %137 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %136, i64 64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 %109) #13
  %138 = call i32 @FcStrBufString(%struct._FcStrBuf* %0, i8* nonnull %136) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %136) #13
  br label %139

139:                                              ; preds = %35, %45, %132, %134
  ret i32 1
}

declare hidden i32 @FcStrBufChar(%struct._FcStrBuf*, i8 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcCharSet* @FcCharSetFreeze(%struct._FcCharSetFreezer* nocapture, %struct._FcCharSet*) local_unnamed_addr #4 {
  %3 = tail call noalias i8* @malloc(i64 24) #13
  %4 = icmp eq i8* %3, null
  br i1 %4, label %580, label %5

5:                                                ; preds = %2
  %6 = bitcast i8* %3 to %struct._FcCharSet*
  %7 = bitcast i8* %3 to i32*
  store i32 1, i32* %7, align 4
  %8 = getelementptr inbounds i8, i8* %3, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 20, i1 false) #13
  %9 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %5
  %13 = bitcast i8* %8 to i32*
  br label %363

14:                                               ; preds = %5
  %15 = ptrtoint %struct._FcCharSet* %1 to i64
  %16 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 2
  %17 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 6
  %18 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 5
  %19 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 2
  %20 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 1
  %21 = bitcast %struct._FcCharLeafEnt*** %20 to i8**
  %22 = bitcast %struct._FcCharLeafEnt** %18 to i8**
  %23 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 9
  %24 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 3
  %25 = ptrtoint i8* %3 to i64
  %26 = getelementptr inbounds i8, i8* %3, i64 16
  %27 = bitcast i8* %26 to i64*
  %28 = bitcast i8* %8 to i32*
  %29 = getelementptr inbounds i8, i8* %3, i64 8
  %30 = bitcast i8* %29 to i64*
  br label %31

31:                                               ; preds = %14, %218
  %32 = phi i64 [ 0, %14 ], [ %219, %218 ]
  %33 = load i64, i64* %16, align 8
  %34 = add nsw i64 %33, %15
  %35 = inttoptr i64 %34 to i64*
  %36 = getelementptr inbounds i64, i64* %35, i64 %32
  %37 = load i64, i64* %36, align 8
  %38 = add nsw i64 %34, %37
  %39 = inttoptr i64 %38 to %struct._FcCharLeaf*
  %40 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %39, i64 0, i32 0, i64 0
  %41 = load i32, i32* %40, align 4
  %42 = shl i32 %41, 1
  %43 = lshr i32 %41, 31
  %44 = or i32 %42, %43
  %45 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %39, i64 0, i32 0, i64 1
  %46 = load i32, i32* %45, align 4
  %47 = xor i32 %44, %46
  %48 = shl i32 %47, 1
  %49 = lshr i32 %47, 31
  %50 = or i32 %48, %49
  %51 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %39, i64 0, i32 0, i64 2
  %52 = load i32, i32* %51, align 4
  %53 = xor i32 %50, %52
  %54 = shl i32 %53, 1
  %55 = lshr i32 %53, 31
  %56 = or i32 %54, %55
  %57 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %39, i64 0, i32 0, i64 3
  %58 = load i32, i32* %57, align 4
  %59 = xor i32 %56, %58
  %60 = shl i32 %59, 1
  %61 = lshr i32 %59, 31
  %62 = or i32 %60, %61
  %63 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %39, i64 0, i32 0, i64 4
  %64 = load i32, i32* %63, align 4
  %65 = xor i32 %62, %64
  %66 = shl i32 %65, 1
  %67 = lshr i32 %65, 31
  %68 = or i32 %66, %67
  %69 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %39, i64 0, i32 0, i64 5
  %70 = load i32, i32* %69, align 4
  %71 = xor i32 %68, %70
  %72 = shl i32 %71, 1
  %73 = lshr i32 %71, 31
  %74 = or i32 %72, %73
  %75 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %39, i64 0, i32 0, i64 6
  %76 = load i32, i32* %75, align 4
  %77 = xor i32 %74, %76
  %78 = shl i32 %77, 1
  %79 = lshr i32 %77, 31
  %80 = or i32 %78, %79
  %81 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %39, i64 0, i32 0, i64 7
  %82 = load i32, i32* %81, align 4
  %83 = xor i32 %80, %82
  %84 = urem i32 %83, 257
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 0, i64 %85
  %87 = load %struct._FcCharLeafEnt*, %struct._FcCharLeafEnt** %86, align 8
  %88 = icmp eq %struct._FcCharLeafEnt* %87, null
  br i1 %88, label %105, label %89

89:                                               ; preds = %31
  %90 = inttoptr i64 %38 to i8*
  br label %91

91:                                               ; preds = %101, %89
  %92 = phi %struct._FcCharLeafEnt* [ %87, %89 ], [ %103, %101 ]
  %93 = getelementptr inbounds %struct._FcCharLeafEnt, %struct._FcCharLeafEnt* %92, i64 0, i32 1
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, %83
  br i1 %95, label %96, label %101

96:                                               ; preds = %91
  %97 = getelementptr inbounds %struct._FcCharLeafEnt, %struct._FcCharLeafEnt* %92, i64 0, i32 2
  %98 = bitcast %struct._FcCharLeaf* %97 to i8*
  %99 = tail call i32 @bcmp(i8* %98, i8* %90, i64 32) #13
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %145, label %101

101:                                              ; preds = %96, %91
  %102 = getelementptr inbounds %struct._FcCharLeafEnt, %struct._FcCharLeafEnt* %92, i64 0, i32 0
  %103 = load %struct._FcCharLeafEnt*, %struct._FcCharLeafEnt** %102, align 8
  %104 = icmp eq %struct._FcCharLeafEnt* %103, null
  br i1 %104, label %105, label %91

105:                                              ; preds = %101, %31
  %106 = load i32, i32* %17, align 8
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %105
  %109 = load %struct._FcCharLeafEnt*, %struct._FcCharLeafEnt** %18, align 8
  %110 = add i32 %106, -1
  br label %130

111:                                              ; preds = %105
  %112 = load i32, i32* %19, align 8
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %19, align 8
  %114 = load i8*, i8** %21, align 8
  %115 = sext i32 %113 to i64
  %116 = shl nsw i64 %115, 3
  %117 = tail call i8* @realloc(i8* %114, i64 %116) #13
  %118 = icmp eq i8* %117, null
  br i1 %118, label %559, label %119

119:                                              ; preds = %111
  store i8* %117, i8** %21, align 8
  %120 = tail call noalias i8* @malloc(i64 4080) #13
  %121 = bitcast i8* %117 to %struct._FcCharLeafEnt**
  %122 = load i32, i32* %19, align 8
  %123 = add nsw i32 %122, -1
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds %struct._FcCharLeafEnt*, %struct._FcCharLeafEnt** %121, i64 %124
  %126 = bitcast %struct._FcCharLeafEnt** %125 to i8**
  store i8* %120, i8** %126, align 8
  store i8* %120, i8** %22, align 8
  %127 = icmp eq i8* %120, null
  br i1 %127, label %559, label %128

128:                                              ; preds = %119
  %129 = bitcast i8* %120 to %struct._FcCharLeafEnt*
  store i32 85, i32* %17, align 8
  br label %130

130:                                              ; preds = %128, %108
  %131 = phi %struct._FcCharLeafEnt* [ %129, %128 ], [ %109, %108 ]
  %132 = phi i32 [ 84, %128 ], [ %110, %108 ]
  store i32 %132, i32* %17, align 8
  %133 = load i32, i32* %23, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %23, align 4
  %135 = getelementptr inbounds %struct._FcCharLeafEnt, %struct._FcCharLeafEnt* %131, i64 1
  store %struct._FcCharLeafEnt* %135, %struct._FcCharLeafEnt** %18, align 8
  %136 = icmp eq %struct._FcCharLeafEnt* %131, null
  br i1 %136, label %559, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %struct._FcCharLeafEnt, %struct._FcCharLeafEnt* %131, i64 0, i32 2
  %139 = bitcast %struct._FcCharLeaf* %138 to i8*
  %140 = inttoptr i64 %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 4 %140, i64 32, i1 false) #13
  %141 = getelementptr inbounds %struct._FcCharLeafEnt, %struct._FcCharLeafEnt* %131, i64 0, i32 1
  store i32 %83, i32* %141, align 8
  %142 = bitcast %struct._FcCharLeafEnt** %86 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %struct._FcCharLeafEnt* %131 to i64*
  store i64 %143, i64* %144, align 8
  store %struct._FcCharLeafEnt* %131, %struct._FcCharLeafEnt** %86, align 8
  br label %145

145:                                              ; preds = %96, %137
  %146 = phi %struct._FcCharLeaf* [ %138, %137 ], [ %97, %96 ]
  %147 = icmp eq %struct._FcCharLeaf* %146, null
  br i1 %147, label %559, label %148

148:                                              ; preds = %145
  %149 = load i64, i64* %24, align 8
  %150 = add nsw i64 %149, %15
  %151 = inttoptr i64 %150 to i16*
  %152 = getelementptr inbounds i16, i16* %151, i64 %32
  %153 = load i16, i16* %152, align 2
  %154 = zext i16 %153 to i32
  %155 = shl nuw nsw i32 %154, 8
  %156 = load i64, i64* %27, align 8
  %157 = add nsw i64 %156, %25
  %158 = inttoptr i64 %157 to i16*
  %159 = load i32, i32* %28, align 4
  %160 = add nsw i32 %159, -1
  %161 = icmp eq i64 %157, 0
  br i1 %161, label %213, label %162

162:                                              ; preds = %148
  %163 = icmp sgt i32 %159, 0
  br i1 %163, label %164, label %180

164:                                              ; preds = %162, %173
  %165 = phi i32 [ %178, %173 ], [ %160, %162 ]
  %166 = phi i32 [ %177, %173 ], [ 0, %162 ]
  %167 = add nsw i32 %166, %165
  %168 = ashr i32 %167, 1
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i16, i16* %158, i64 %169
  %171 = load i16, i16* %170, align 2
  %172 = icmp eq i16 %171, %153
  br i1 %172, label %195, label %173

173:                                              ; preds = %164
  %174 = icmp ult i16 %171, %153
  %175 = add nsw i32 %168, 1
  %176 = add nsw i32 %168, -1
  %177 = select i1 %174, i32 %175, i32 %166
  %178 = select i1 %174, i32 %165, i32 %176
  %179 = icmp sgt i32 %177, %178
  br i1 %179, label %180, label %164

180:                                              ; preds = %173, %162
  %181 = phi i32 [ %160, %162 ], [ %178, %173 ]
  %182 = icmp slt i32 %181, 0
  br i1 %182, label %190, label %183

183:                                              ; preds = %180
  %184 = icmp slt i32 %181, %159
  br i1 %184, label %185, label %192

185:                                              ; preds = %183
  %186 = sext i32 %181 to i64
  %187 = getelementptr inbounds i16, i16* %158, i64 %186
  %188 = load i16, i16* %187, align 2
  %189 = icmp ult i16 %188, %153
  br i1 %189, label %190, label %192

190:                                              ; preds = %185, %180
  %191 = add nsw i32 %181, 1
  br label %192

192:                                              ; preds = %190, %185, %183
  %193 = phi i32 [ %191, %190 ], [ %181, %185 ], [ %181, %183 ]
  %194 = xor i32 %193, -1
  br label %195

195:                                              ; preds = %164, %192
  %196 = phi i32 [ %194, %192 ], [ %168, %164 ]
  %197 = icmp sgt i32 %196, -1
  br i1 %197, label %198, label %213

198:                                              ; preds = %195
  %199 = load i64, i64* %30, align 8
  %200 = add nsw i64 %199, %25
  %201 = inttoptr i64 %200 to i64*
  %202 = sext i32 %196 to i64
  %203 = getelementptr inbounds i64, i64* %201, i64 %202
  %204 = load i64, i64* %203, align 8
  %205 = add nsw i64 %200, %204
  %206 = inttoptr i64 %205 to i8*
  tail call void @free(i8* %206) #13
  %207 = ptrtoint %struct._FcCharLeaf* %146 to i64
  %208 = load i64, i64* %30, align 8
  %209 = add nsw i64 %208, %25
  %210 = inttoptr i64 %209 to i64*
  %211 = sub nsw i64 %207, %209
  %212 = getelementptr inbounds i64, i64* %210, i64 %202
  store i64 %211, i64* %212, align 8
  br label %218

213:                                              ; preds = %148, %195
  %214 = phi i32 [ %196, %195 ], [ -1, %148 ]
  %215 = xor i32 %214, -1
  %216 = tail call fastcc i32 @FcCharSetPutLeaf(%struct._FcCharSet* nonnull %6, i32 %155, %struct._FcCharLeaf* nonnull %146, i32 %215) #13
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %559, label %218

218:                                              ; preds = %198, %213
  %219 = add nuw nsw i64 %32, 1
  %220 = load i32, i32* %9, align 4
  %221 = sext i32 %220 to i64
  %222 = icmp slt i64 %219, %221
  br i1 %222, label %31, label %223

223:                                              ; preds = %218
  %224 = load i32, i32* %28, align 4
  %225 = icmp sgt i32 %224, 0
  br i1 %225, label %226, label %363

226:                                              ; preds = %223
  %227 = ptrtoint i8* %3 to i64
  %228 = getelementptr inbounds i8, i8* %3, i64 8
  %229 = bitcast i8* %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = add nsw i64 %230, %227
  %232 = inttoptr i64 %231 to i64*
  %233 = sext i32 %224 to i64
  br label %246

234:                                              ; preds = %246
  %235 = getelementptr inbounds i8, i8* %3, i64 16
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = add nsw i64 %237, %227
  %239 = inttoptr i64 %238 to i16*
  %240 = zext i32 %224 to i64
  %241 = add nsw i64 %240, -1
  %242 = and i64 %240, 3
  %243 = icmp ult i64 %241, 3
  br i1 %243, label %344, label %244

244:                                              ; preds = %234
  %245 = sub nsw i64 %240, %242
  br label %303

246:                                              ; preds = %246, %226
  %247 = phi i64 [ 0, %226 ], [ %301, %246 ]
  %248 = phi i32 [ 0, %226 ], [ %300, %246 ]
  %249 = shl i32 %248, 1
  %250 = lshr i32 %248, 31
  %251 = or i32 %249, %250
  %252 = getelementptr inbounds i64, i64* %232, i64 %247
  %253 = load i64, i64* %252, align 8
  %254 = add nsw i64 %253, %231
  %255 = inttoptr i64 %254 to %struct._FcCharLeaf*
  %256 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %255, i64 0, i32 0, i64 0
  %257 = load i32, i32* %256, align 4
  %258 = shl i32 %257, 1
  %259 = lshr i32 %257, 31
  %260 = or i32 %258, %259
  %261 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %255, i64 0, i32 0, i64 1
  %262 = load i32, i32* %261, align 4
  %263 = xor i32 %260, %262
  %264 = shl i32 %263, 1
  %265 = lshr i32 %263, 31
  %266 = or i32 %264, %265
  %267 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %255, i64 0, i32 0, i64 2
  %268 = load i32, i32* %267, align 4
  %269 = xor i32 %266, %268
  %270 = shl i32 %269, 1
  %271 = lshr i32 %269, 31
  %272 = or i32 %270, %271
  %273 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %255, i64 0, i32 0, i64 3
  %274 = load i32, i32* %273, align 4
  %275 = xor i32 %272, %274
  %276 = shl i32 %275, 1
  %277 = lshr i32 %275, 31
  %278 = or i32 %276, %277
  %279 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %255, i64 0, i32 0, i64 4
  %280 = load i32, i32* %279, align 4
  %281 = xor i32 %278, %280
  %282 = shl i32 %281, 1
  %283 = lshr i32 %281, 31
  %284 = or i32 %282, %283
  %285 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %255, i64 0, i32 0, i64 5
  %286 = load i32, i32* %285, align 4
  %287 = xor i32 %284, %286
  %288 = shl i32 %287, 1
  %289 = lshr i32 %287, 31
  %290 = or i32 %288, %289
  %291 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %255, i64 0, i32 0, i64 6
  %292 = load i32, i32* %291, align 4
  %293 = xor i32 %290, %292
  %294 = shl i32 %293, 1
  %295 = lshr i32 %293, 31
  %296 = or i32 %294, %295
  %297 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %255, i64 0, i32 0, i64 7
  %298 = load i32, i32* %297, align 4
  %299 = xor i32 %298, %251
  %300 = xor i32 %299, %296
  %301 = add nuw nsw i64 %247, 1
  %302 = icmp eq i64 %301, %233
  br i1 %302, label %234, label %246

303:                                              ; preds = %303, %244
  %304 = phi i64 [ 0, %244 ], [ %341, %303 ]
  %305 = phi i32 [ %300, %244 ], [ %340, %303 ]
  %306 = phi i64 [ %245, %244 ], [ %342, %303 ]
  %307 = shl i32 %305, 1
  %308 = lshr i32 %305, 31
  %309 = or i32 %307, %308
  %310 = getelementptr inbounds i16, i16* %239, i64 %304
  %311 = load i16, i16* %310, align 2
  %312 = zext i16 %311 to i32
  %313 = xor i32 %309, %312
  %314 = or i64 %304, 1
  %315 = shl i32 %313, 1
  %316 = lshr i32 %305, 30
  %317 = and i32 %316, 1
  %318 = or i32 %315, %317
  %319 = getelementptr inbounds i16, i16* %239, i64 %314
  %320 = load i16, i16* %319, align 2
  %321 = zext i16 %320 to i32
  %322 = xor i32 %318, %321
  %323 = or i64 %304, 2
  %324 = shl i32 %322, 1
  %325 = lshr i32 %305, 29
  %326 = and i32 %325, 1
  %327 = or i32 %324, %326
  %328 = getelementptr inbounds i16, i16* %239, i64 %323
  %329 = load i16, i16* %328, align 2
  %330 = zext i16 %329 to i32
  %331 = xor i32 %327, %330
  %332 = or i64 %304, 3
  %333 = shl i32 %331, 1
  %334 = lshr i32 %305, 28
  %335 = and i32 %334, 1
  %336 = or i32 %333, %335
  %337 = getelementptr inbounds i16, i16* %239, i64 %332
  %338 = load i16, i16* %337, align 2
  %339 = zext i16 %338 to i32
  %340 = xor i32 %336, %339
  %341 = add nuw nsw i64 %304, 4
  %342 = add i64 %306, -4
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %344, label %303

344:                                              ; preds = %303, %234
  %345 = phi i32 [ undef, %234 ], [ %340, %303 ]
  %346 = phi i64 [ 0, %234 ], [ %341, %303 ]
  %347 = phi i32 [ %300, %234 ], [ %340, %303 ]
  %348 = icmp eq i64 %242, 0
  br i1 %348, label %363, label %349

349:                                              ; preds = %344, %349
  %350 = phi i64 [ %360, %349 ], [ %346, %344 ]
  %351 = phi i32 [ %359, %349 ], [ %347, %344 ]
  %352 = phi i64 [ %361, %349 ], [ %242, %344 ]
  %353 = shl i32 %351, 1
  %354 = lshr i32 %351, 31
  %355 = or i32 %353, %354
  %356 = getelementptr inbounds i16, i16* %239, i64 %350
  %357 = load i16, i16* %356, align 2
  %358 = zext i16 %357 to i32
  %359 = xor i32 %355, %358
  %360 = add nuw nsw i64 %350, 1
  %361 = add i64 %352, -1
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %349, !llvm.loop !8

363:                                              ; preds = %344, %349, %12, %223
  %364 = phi i1 [ false, %223 ], [ false, %12 ], [ %225, %349 ], [ %225, %344 ]
  %365 = phi i32 [ %224, %223 ], [ 0, %12 ], [ %224, %349 ], [ %224, %344 ]
  %366 = phi i32* [ %28, %223 ], [ %13, %12 ], [ %28, %349 ], [ %28, %344 ]
  %367 = phi i32 [ 0, %223 ], [ 0, %12 ], [ %345, %344 ], [ %359, %349 ]
  %368 = urem i32 %367, 67
  %369 = zext i32 %368 to i64
  %370 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 3, i64 %369
  %371 = load %struct._FcCharSetEnt*, %struct._FcCharSetEnt** %370, align 8
  %372 = icmp eq %struct._FcCharSetEnt* %371, null
  br i1 %372, label %466, label %373

373:                                              ; preds = %363
  %374 = ptrtoint i8* %3 to i64
  %375 = getelementptr inbounds i8, i8* %3, i64 16
  %376 = bitcast i8* %375 to i64*
  %377 = sext i32 %365 to i64
  %378 = shl nsw i64 %377, 1
  %379 = getelementptr inbounds i8, i8* %3, i64 8
  %380 = bitcast i8* %379 to i64*
  %381 = zext i32 %365 to i64
  %382 = and i64 %381, 1
  %383 = icmp eq i32 %365, 1
  %384 = sub nsw i64 %381, %382
  %385 = icmp eq i64 %382, 0
  br label %386

386:                                              ; preds = %462, %373
  %387 = phi %struct._FcCharSetEnt* [ %371, %373 ], [ %464, %462 ]
  %388 = getelementptr inbounds %struct._FcCharSetEnt, %struct._FcCharSetEnt* %387, i64 0, i32 1
  %389 = load i32, i32* %388, align 8
  %390 = icmp eq i32 %389, %367
  br i1 %390, label %391, label %462

391:                                              ; preds = %386
  %392 = getelementptr inbounds %struct._FcCharSetEnt, %struct._FcCharSetEnt* %387, i64 0, i32 2
  %393 = getelementptr inbounds %struct._FcCharSetEnt, %struct._FcCharSetEnt* %387, i64 0, i32 2, i32 1
  %394 = load i32, i32* %393, align 4
  %395 = icmp eq i32 %394, %365
  br i1 %395, label %396, label %462

396:                                              ; preds = %391
  %397 = ptrtoint %struct._FcCharSet* %392 to i64
  %398 = getelementptr inbounds %struct._FcCharSetEnt, %struct._FcCharSetEnt* %387, i64 0, i32 2, i32 3
  %399 = load i64, i64* %398, align 8
  %400 = add nsw i64 %399, %397
  %401 = inttoptr i64 %400 to i8*
  %402 = load i64, i64* %376, align 8
  %403 = add nsw i64 %402, %374
  %404 = inttoptr i64 %403 to i8*
  %405 = tail call i32 @bcmp(i8* %401, i8* %404, i64 %378) #13
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %462

407:                                              ; preds = %396
  br i1 %364, label %408, label %536

408:                                              ; preds = %407
  %409 = getelementptr inbounds %struct._FcCharSetEnt, %struct._FcCharSetEnt* %387, i64 0, i32 2, i32 2
  %410 = load i64, i64* %409, align 8
  %411 = add nsw i64 %410, %397
  %412 = inttoptr i64 %411 to i64*
  %413 = load i64, i64* %380, align 8
  %414 = add nsw i64 %413, %374
  %415 = inttoptr i64 %414 to i64*
  br i1 %383, label %444, label %416

416:                                              ; preds = %408, %416
  %417 = phi i64 [ %441, %416 ], [ 0, %408 ]
  %418 = phi i32 [ %440, %416 ], [ 1, %408 ]
  %419 = phi i64 [ %442, %416 ], [ %384, %408 ]
  %420 = getelementptr inbounds i64, i64* %412, i64 %417
  %421 = load i64, i64* %420, align 8
  %422 = add nsw i64 %421, %411
  %423 = inttoptr i64 %422 to %struct._FcCharLeaf*
  %424 = getelementptr inbounds i64, i64* %415, i64 %417
  %425 = load i64, i64* %424, align 8
  %426 = add nsw i64 %425, %414
  %427 = inttoptr i64 %426 to %struct._FcCharLeaf*
  %428 = icmp eq %struct._FcCharLeaf* %423, %427
  %429 = or i64 %417, 1
  %430 = getelementptr inbounds i64, i64* %412, i64 %429
  %431 = load i64, i64* %430, align 8
  %432 = add nsw i64 %431, %411
  %433 = inttoptr i64 %432 to %struct._FcCharLeaf*
  %434 = getelementptr inbounds i64, i64* %415, i64 %429
  %435 = load i64, i64* %434, align 8
  %436 = add nsw i64 %435, %414
  %437 = inttoptr i64 %436 to %struct._FcCharLeaf*
  %438 = icmp eq %struct._FcCharLeaf* %433, %437
  %439 = and i1 %438, %428
  %440 = select i1 %439, i32 %418, i32 0
  %441 = add nuw nsw i64 %417, 2
  %442 = add i64 %419, -2
  %443 = icmp eq i64 %442, 0
  br i1 %443, label %444, label %416

444:                                              ; preds = %416, %408
  %445 = phi i32 [ undef, %408 ], [ %440, %416 ]
  %446 = phi i64 [ 0, %408 ], [ %441, %416 ]
  %447 = phi i32 [ 1, %408 ], [ %440, %416 ]
  br i1 %385, label %459, label %448

448:                                              ; preds = %444
  %449 = getelementptr inbounds i64, i64* %412, i64 %446
  %450 = load i64, i64* %449, align 8
  %451 = add nsw i64 %450, %411
  %452 = inttoptr i64 %451 to %struct._FcCharLeaf*
  %453 = getelementptr inbounds i64, i64* %415, i64 %446
  %454 = load i64, i64* %453, align 8
  %455 = add nsw i64 %454, %414
  %456 = inttoptr i64 %455 to %struct._FcCharLeaf*
  %457 = icmp eq %struct._FcCharLeaf* %452, %456
  %458 = select i1 %457, i32 %447, i32 0
  br label %459

459:                                              ; preds = %444, %448
  %460 = phi i32 [ %445, %444 ], [ %458, %448 ]
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %462, label %536

462:                                              ; preds = %459, %396, %391, %386
  %463 = getelementptr inbounds %struct._FcCharSetEnt, %struct._FcCharSetEnt* %387, i64 0, i32 0
  %464 = load %struct._FcCharSetEnt*, %struct._FcCharSetEnt** %463, align 8
  %465 = icmp eq %struct._FcCharSetEnt* %464, null
  br i1 %465, label %466, label %386

466:                                              ; preds = %462, %363
  %467 = mul i32 %365, 10
  %468 = add i32 %467, 40
  %469 = sext i32 %468 to i64
  %470 = tail call noalias i8* @malloc(i64 %469) #13
  %471 = icmp eq i8* %470, null
  br i1 %471, label %536, label %472

472:                                              ; preds = %466
  %473 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 10
  %474 = load i32, i32* %473, align 8
  %475 = add nsw i32 %474, 1
  store i32 %475, i32* %473, align 8
  %476 = getelementptr inbounds i8, i8* %470, i64 16
  %477 = bitcast i8* %476 to %struct._FcCharSet*
  %478 = bitcast i8* %476 to i32*
  store i32 -1, i32* %478, align 4
  %479 = load i32, i32* %366, align 4
  %480 = getelementptr inbounds i8, i8* %470, i64 20
  %481 = bitcast i8* %480 to i32*
  store i32 %479, i32* %481, align 4
  %482 = icmp eq i32 %479, 0
  %483 = getelementptr inbounds i8, i8* %470, i64 24
  br i1 %482, label %528, label %484

484:                                              ; preds = %472
  %485 = bitcast i8* %483 to i64*
  store i64 24, i64* %485, align 8
  %486 = sext i32 %479 to i64
  %487 = shl nsw i64 %486, 3
  %488 = add nsw i64 %487, 24
  %489 = getelementptr inbounds i8, i8* %470, i64 32
  %490 = bitcast i8* %489 to i64*
  store i64 %488, i64* %490, align 8
  %491 = ptrtoint i8* %476 to i64
  %492 = add nsw i64 %491, 24
  %493 = inttoptr i64 %492 to i64*
  %494 = icmp sgt i32 %479, 0
  %495 = ptrtoint i8* %3 to i64
  br i1 %494, label %496, label %517

496:                                              ; preds = %484
  %497 = getelementptr inbounds i8, i8* %3, i64 8
  %498 = bitcast i8* %497 to i64*
  %499 = sub i64 -24, %491
  br label %500

500:                                              ; preds = %500, %496
  %501 = phi i64 [ 0, %496 ], [ %510, %500 ]
  %502 = load i64, i64* %498, align 8
  %503 = add nsw i64 %502, %495
  %504 = inttoptr i64 %503 to i64*
  %505 = getelementptr inbounds i64, i64* %504, i64 %501
  %506 = load i64, i64* %505, align 8
  %507 = add i64 %499, %506
  %508 = add i64 %507, %503
  %509 = getelementptr inbounds i64, i64* %493, i64 %501
  store i64 %508, i64* %509, align 8
  %510 = add nuw nsw i64 %501, 1
  %511 = load i32, i32* %366, align 4
  %512 = sext i32 %511 to i64
  %513 = icmp slt i64 %510, %512
  br i1 %513, label %500, label %514

514:                                              ; preds = %500
  %515 = sext i32 %511 to i64
  %516 = load i64, i64* %490, align 8
  br label %517

517:                                              ; preds = %514, %484
  %518 = phi i64 [ %515, %514 ], [ %486, %484 ]
  %519 = phi i64 [ %516, %514 ], [ %488, %484 ]
  %520 = add nsw i64 %519, %491
  %521 = inttoptr i64 %520 to i8*
  %522 = getelementptr inbounds i8, i8* %3, i64 16
  %523 = bitcast i8* %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = add nsw i64 %524, %495
  %526 = inttoptr i64 %525 to i8*
  %527 = shl nsw i64 %518, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %521, i8* align 2 %526, i64 %527, i1 false) #13
  br label %529

528:                                              ; preds = %472
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %483, i8 0, i64 16, i1 false) #13
  br label %529

529:                                              ; preds = %528, %517
  %530 = getelementptr inbounds i8, i8* %470, i64 8
  %531 = bitcast i8* %530 to i32*
  store i32 %367, i32* %531, align 8
  %532 = bitcast %struct._FcCharSetEnt** %370 to i64*
  %533 = load i64, i64* %532, align 8
  %534 = bitcast i8* %470 to i64*
  store i64 %533, i64* %534, align 8
  %535 = bitcast %struct._FcCharSetEnt** %370 to i8**
  store i8* %470, i8** %535, align 8
  br label %536

536:                                              ; preds = %407, %459, %466, %529
  %537 = phi %struct._FcCharSet* [ %477, %529 ], [ null, %466 ], [ %392, %459 ], [ %392, %407 ]
  %538 = ptrtoint %struct._FcCharSet* %1 to i64
  %539 = urem i64 %538, 67
  %540 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 4, i64 %539
  %541 = tail call noalias i8* @malloc(i64 24) #13
  %542 = icmp eq i8* %541, null
  br i1 %542, label %559, label %543

543:                                              ; preds = %536
  %544 = getelementptr inbounds i8, i8* %541, i64 8
  %545 = bitcast i8* %544 to %struct._FcCharSet**
  store %struct._FcCharSet* %1, %struct._FcCharSet** %545, align 8
  %546 = getelementptr inbounds i8, i8* %541, i64 16
  %547 = bitcast i8* %546 to %struct._FcCharSet**
  store %struct._FcCharSet* %537, %struct._FcCharSet** %547, align 8
  %548 = bitcast %struct._FcCharSetOrigEnt** %540 to i64*
  %549 = load i64, i64* %548, align 8
  %550 = bitcast i8* %541 to i64*
  store i64 %549, i64* %550, align 8
  %551 = bitcast %struct._FcCharSetOrigEnt** %540 to i8**
  store i8* %541, i8** %551, align 8
  %552 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 8
  %553 = load i32, i32* %552, align 8
  %554 = add nsw i32 %553, 1
  store i32 %554, i32* %552, align 8
  %555 = load i32, i32* %9, align 4
  %556 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 7
  %557 = load i32, i32* %556, align 4
  %558 = add nsw i32 %557, %555
  store i32 %558, i32* %556, align 4
  br label %559

559:                                              ; preds = %111, %119, %130, %213, %145, %536, %543
  %560 = phi i32* [ %366, %536 ], [ %366, %543 ], [ %28, %145 ], [ %28, %213 ], [ %28, %130 ], [ %28, %119 ], [ %28, %111 ]
  %561 = phi %struct._FcCharSet* [ null, %536 ], [ %537, %543 ], [ null, %145 ], [ null, %213 ], [ null, %130 ], [ null, %119 ], [ null, %111 ]
  %562 = load i32, i32* %560, align 4
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %579, label %564

564:                                              ; preds = %559
  %565 = ptrtoint i8* %3 to i64
  %566 = getelementptr inbounds i8, i8* %3, i64 8
  %567 = bitcast i8* %566 to i64*
  %568 = load i64, i64* %567, align 8
  %569 = add nsw i64 %568, %565
  %570 = inttoptr i64 %569 to i8*
  tail call void @free(i8* %570) #13
  %571 = load i32, i32* %560, align 4
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %579, label %573

573:                                              ; preds = %564
  %574 = getelementptr inbounds i8, i8* %3, i64 16
  %575 = bitcast i8* %574 to i64*
  %576 = load i64, i64* %575, align 8
  %577 = add nsw i64 %576, %565
  %578 = inttoptr i64 %577 to i8*
  tail call void @free(i8* %578) #13
  br label %579

579:                                              ; preds = %559, %564, %573
  tail call void @free(i8* %3) #13
  br label %580

580:                                              ; preds = %2, %579
  %581 = phi %struct._FcCharSet* [ %561, %579 ], [ null, %2 ]
  ret %struct._FcCharSet* %581
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %struct._FcCharSetFreezer* @FcCharSetFreezerCreate() local_unnamed_addr #0 {
  %1 = tail call noalias i8* @calloc(i64 1, i64 3176) #13
  %2 = bitcast i8* %1 to %struct._FcCharSetFreezer*
  ret %struct._FcCharSetFreezer* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FcCharSetFreezerDestroy(%struct._FcCharSetFreezer* nocapture) local_unnamed_addr #4 {
  %2 = load i32, i32* @FcDebugVal, align 4
  %3 = and i32 %2, 16
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 10
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 7
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 9
  %13 = load i32, i32* %12, align 4
  %14 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 %7, i32 %9, i32 %11, i32 %13)
  br label %15

15:                                               ; preds = %1, %5
  br label %16

16:                                               ; preds = %15, %27
  %17 = phi i64 [ %28, %27 ], [ 0, %15 ]
  %18 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 3, i64 %17
  %19 = load %struct._FcCharSetEnt*, %struct._FcCharSetEnt** %18, align 8
  %20 = icmp eq %struct._FcCharSetEnt* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %16, %21
  %22 = phi %struct._FcCharSetEnt* [ %25, %21 ], [ %19, %16 ]
  %23 = bitcast %struct._FcCharSetEnt* %22 to i8*
  %24 = getelementptr inbounds %struct._FcCharSetEnt, %struct._FcCharSetEnt* %22, i64 0, i32 0
  %25 = load %struct._FcCharSetEnt*, %struct._FcCharSetEnt** %24, align 8
  tail call void @free(i8* %23) #13
  %26 = icmp eq %struct._FcCharSetEnt* %25, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %16
  %28 = add nuw nsw i64 %17, 1
  %29 = icmp eq i64 %28, 67
  br i1 %29, label %36, label %16

30:                                               ; preds = %47
  %31 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %32, 0
  %34 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 1
  %35 = load %struct._FcCharLeafEnt**, %struct._FcCharLeafEnt*** %34, align 8
  br i1 %33, label %50, label %61

36:                                               ; preds = %27, %47
  %37 = phi i64 [ %48, %47 ], [ 0, %27 ]
  %38 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %0, i64 0, i32 4, i64 %37
  %39 = load %struct._FcCharSetOrigEnt*, %struct._FcCharSetOrigEnt** %38, align 8
  %40 = icmp eq %struct._FcCharSetOrigEnt* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %36, %41
  %42 = phi %struct._FcCharSetOrigEnt* [ %45, %41 ], [ %39, %36 ]
  %43 = bitcast %struct._FcCharSetOrigEnt* %42 to i8*
  %44 = getelementptr inbounds %struct._FcCharSetOrigEnt, %struct._FcCharSetOrigEnt* %42, i64 0, i32 0
  %45 = load %struct._FcCharSetOrigEnt*, %struct._FcCharSetOrigEnt** %44, align 8
  tail call void @free(i8* %43) #13
  %46 = icmp eq %struct._FcCharSetOrigEnt* %45, null
  br i1 %46, label %47, label %41

47:                                               ; preds = %41, %36
  %48 = add nuw nsw i64 %37, 1
  %49 = icmp eq i64 %48, 67
  br i1 %49, label %30, label %36

50:                                               ; preds = %30, %50
  %51 = phi i64 [ %56, %50 ], [ 0, %30 ]
  %52 = phi %struct._FcCharLeafEnt** [ %60, %50 ], [ %35, %30 ]
  %53 = getelementptr inbounds %struct._FcCharLeafEnt*, %struct._FcCharLeafEnt** %52, i64 %51
  %54 = bitcast %struct._FcCharLeafEnt** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @free(i8* %55) #13
  %56 = add nuw nsw i64 %51, 1
  %57 = load i32, i32* %31, align 8
  %58 = sext i32 %57 to i64
  %59 = icmp slt i64 %56, %58
  %60 = load %struct._FcCharLeafEnt**, %struct._FcCharLeafEnt*** %34, align 8
  br i1 %59, label %50, label %61

61:                                               ; preds = %50, %30
  %62 = phi %struct._FcCharLeafEnt** [ %35, %30 ], [ %60, %50 ]
  %63 = bitcast %struct._FcCharLeafEnt** %62 to i8*
  tail call void @free(i8* %63) #13
  %64 = bitcast %struct._FcCharSetFreezer* %0 to i8*
  tail call void @free(i8* %64) #13
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcCharSetSerializeAlloc(%struct._FcSerialize*, %struct._FcCharSet*) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._FcSerialize, %struct._FcSerialize* %0, i64 0, i32 1
  %8 = load %struct._FcCharSetFreezer*, %struct._FcCharSetFreezer** %7, align 8
  %9 = icmp eq %struct._FcCharSetFreezer* %8, null
  br i1 %9, label %10, label %15

10:                                               ; preds = %6
  %11 = tail call noalias i8* @calloc(i64 1, i64 3176) #13
  %12 = bitcast %struct._FcCharSetFreezer** %7 to i8**
  store i8* %11, i8** %12, align 8
  %13 = icmp eq i8* %11, null
  %14 = bitcast i8* %11 to %struct._FcCharSetFreezer*
  br i1 %13, label %81, label %15

15:                                               ; preds = %10, %6
  %16 = phi %struct._FcCharSetFreezer* [ %14, %10 ], [ %8, %6 ]
  %17 = ptrtoint %struct._FcCharSet* %1 to i64
  %18 = urem i64 %17, 67
  %19 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %16, i64 0, i32 4, i64 %18
  %20 = load %struct._FcCharSetOrigEnt*, %struct._FcCharSetOrigEnt** %19, align 8
  %21 = icmp eq %struct._FcCharSetOrigEnt* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %27
  %23 = phi %struct._FcCharSetOrigEnt* [ %29, %27 ], [ %20, %15 ]
  %24 = getelementptr inbounds %struct._FcCharSetOrigEnt, %struct._FcCharSetOrigEnt* %23, i64 0, i32 1
  %25 = load %struct._FcCharSet*, %struct._FcCharSet** %24, align 8
  %26 = icmp eq %struct._FcCharSet* %25, %1
  br i1 %26, label %31, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct._FcCharSetOrigEnt, %struct._FcCharSetOrigEnt* %23, i64 0, i32 0
  %29 = load %struct._FcCharSetOrigEnt*, %struct._FcCharSetOrigEnt** %28, align 8
  %30 = icmp eq %struct._FcCharSetOrigEnt* %29, null
  br i1 %30, label %35, label %22

31:                                               ; preds = %22
  %32 = getelementptr inbounds %struct._FcCharSetOrigEnt, %struct._FcCharSetOrigEnt* %23, i64 0, i32 2
  %33 = load %struct._FcCharSet*, %struct._FcCharSet** %32, align 8
  %34 = icmp eq %struct._FcCharSet* %33, null
  br i1 %34, label %35, label %81

35:                                               ; preds = %27, %15, %31
  %36 = tail call %struct._FcCharSet* @FcCharSetFreeze(%struct._FcCharSetFreezer* %16, %struct._FcCharSet* %1)
  br label %37

37:                                               ; preds = %2, %35
  %38 = phi %struct._FcCharSet* [ %1, %2 ], [ %36, %35 ]
  %39 = ptrtoint %struct._FcCharSet* %38 to i64
  %40 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %38, i64 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %38, i64 0, i32 3
  %43 = load i64, i64* %42, align 8
  %44 = add nsw i64 %43, %39
  %45 = bitcast %struct._FcCharSet* %38 to i8*
  %46 = tail call i32 @FcSerializeAlloc(%struct._FcSerialize* %0, i8* %45, i32 24) #13
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %81, label %48

48:                                               ; preds = %37
  %49 = add nsw i64 %41, %39
  %50 = inttoptr i64 %49 to i8*
  %51 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %38, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = shl i32 %52, 3
  %54 = tail call i32 @FcSerializeAlloc(%struct._FcSerialize* %0, i8* %50, i32 %53) #13
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %81, label %56

56:                                               ; preds = %48
  %57 = inttoptr i64 %44 to i8*
  %58 = load i32, i32* %51, align 4
  %59 = shl i32 %58, 1
  %60 = tail call i32 @FcSerializeAlloc(%struct._FcSerialize* %0, i8* %57, i32 %59) #13
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %81, label %62

62:                                               ; preds = %56
  %63 = load i32, i32* %51, align 4
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %69, label %81

65:                                               ; preds = %69
  %66 = load i32, i32* %51, align 4
  %67 = sext i32 %66 to i64
  %68 = icmp slt i64 %80, %67
  br i1 %68, label %69, label %81

69:                                               ; preds = %62, %65
  %70 = phi i64 [ %80, %65 ], [ 0, %62 ]
  %71 = load i64, i64* %40, align 8
  %72 = add nsw i64 %71, %39
  %73 = inttoptr i64 %72 to i64*
  %74 = getelementptr inbounds i64, i64* %73, i64 %70
  %75 = load i64, i64* %74, align 8
  %76 = add nsw i64 %72, %75
  %77 = inttoptr i64 %76 to i8*
  %78 = tail call i32 @FcSerializeAlloc(%struct._FcSerialize* %0, i8* %77, i32 32) #13
  %79 = icmp eq i32 %78, 0
  %80 = add nuw nsw i64 %70, 1
  br i1 %79, label %81, label %65

81:                                               ; preds = %69, %65, %62, %56, %48, %37, %31, %10
  %82 = phi i32 [ 0, %10 ], [ 1, %31 ], [ 0, %37 ], [ 0, %48 ], [ 0, %56 ], [ 1, %62 ], [ 0, %69 ], [ 1, %65 ]
  ret i32 %82
}

declare hidden i32 @FcSerializeAlloc(%struct._FcSerialize*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcCharSet* @FcCharSetSerialize(%struct._FcSerialize*, %struct._FcCharSet*) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._FcSerialize, %struct._FcSerialize* %0, i64 0, i32 1
  %8 = load %struct._FcCharSetFreezer*, %struct._FcCharSetFreezer** %7, align 8
  %9 = icmp eq %struct._FcCharSetFreezer* %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %6
  %11 = ptrtoint %struct._FcCharSet* %1 to i64
  %12 = urem i64 %11, 67
  %13 = getelementptr inbounds %struct._FcCharSetFreezer, %struct._FcCharSetFreezer* %8, i64 0, i32 4, i64 %12
  %14 = load %struct._FcCharSetOrigEnt*, %struct._FcCharSetOrigEnt** %13, align 8
  %15 = icmp eq %struct._FcCharSetOrigEnt* %14, null
  br i1 %15, label %97, label %16

16:                                               ; preds = %10, %21
  %17 = phi %struct._FcCharSetOrigEnt* [ %23, %21 ], [ %14, %10 ]
  %18 = getelementptr inbounds %struct._FcCharSetOrigEnt, %struct._FcCharSetOrigEnt* %17, i64 0, i32 1
  %19 = load %struct._FcCharSet*, %struct._FcCharSet** %18, align 8
  %20 = icmp eq %struct._FcCharSet* %19, %1
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct._FcCharSetOrigEnt, %struct._FcCharSetOrigEnt* %17, i64 0, i32 0
  %23 = load %struct._FcCharSetOrigEnt*, %struct._FcCharSetOrigEnt** %22, align 8
  %24 = icmp eq %struct._FcCharSetOrigEnt* %23, null
  br i1 %24, label %97, label %16

25:                                               ; preds = %16
  %26 = getelementptr inbounds %struct._FcCharSetOrigEnt, %struct._FcCharSetOrigEnt* %17, i64 0, i32 2
  %27 = load %struct._FcCharSet*, %struct._FcCharSet** %26, align 8
  %28 = icmp eq %struct._FcCharSet* %27, null
  br i1 %28, label %97, label %29

29:                                               ; preds = %2, %25, %6
  %30 = phi %struct._FcCharSet* [ %1, %2 ], [ %27, %25 ], [ %1, %6 ]
  %31 = bitcast %struct._FcCharSet* %30 to i8*
  %32 = tail call i8* @FcSerializePtr(%struct._FcSerialize* %0, i8* %31) #13
  %33 = bitcast i8* %32 to %struct._FcCharSet*
  %34 = icmp eq i8* %32, null
  br i1 %34, label %97, label %35

35:                                               ; preds = %29
  %36 = bitcast i8* %32 to i32*
  store i32 -1, i32* %36, align 4
  %37 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %30, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds i8, i8* %32, i64 4
  %40 = bitcast i8* %39 to i32*
  store i32 %38, i32* %40, align 4
  %41 = load i32, i32* %37, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %95, label %43

43:                                               ; preds = %35
  %44 = ptrtoint %struct._FcCharSet* %30 to i64
  %45 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %30, i64 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = add nsw i64 %46, %44
  %48 = inttoptr i64 %47 to i8*
  %49 = tail call i8* @FcSerializePtr(%struct._FcSerialize* %0, i8* %48) #13
  %50 = bitcast i8* %49 to i64*
  %51 = icmp eq i8* %49, null
  br i1 %51, label %97, label %52

52:                                               ; preds = %43
  %53 = ptrtoint i8* %49 to i64
  %54 = ptrtoint i8* %32 to i64
  %55 = sub nsw i64 %53, %54
  %56 = getelementptr inbounds i8, i8* %32, i64 8
  %57 = bitcast i8* %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %30, i64 0, i32 3
  %59 = load i64, i64* %58, align 8
  %60 = add nsw i64 %59, %44
  %61 = inttoptr i64 %60 to i16*
  %62 = inttoptr i64 %60 to i8*
  %63 = tail call i8* @FcSerializePtr(%struct._FcSerialize* %0, i8* %62) #13
  %64 = bitcast i8* %63 to i16*
  %65 = icmp eq i64 %60, 0
  br i1 %65, label %97, label %66

66:                                               ; preds = %52
  %67 = ptrtoint i8* %63 to i64
  %68 = sub nsw i64 %67, %54
  %69 = getelementptr inbounds i8, i8* %32, i64 16
  %70 = bitcast i8* %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = load i32, i32* %37, align 4
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %97

73:                                               ; preds = %66, %84
  %74 = phi i64 [ %91, %84 ], [ 0, %66 ]
  %75 = load i64, i64* %45, align 8
  %76 = add nsw i64 %75, %44
  %77 = inttoptr i64 %76 to i64*
  %78 = getelementptr inbounds i64, i64* %77, i64 %74
  %79 = load i64, i64* %78, align 8
  %80 = add nsw i64 %76, %79
  %81 = inttoptr i64 %80 to i8*
  %82 = tail call i8* @FcSerializePtr(%struct._FcSerialize* %0, i8* %81) #13
  %83 = icmp eq i8* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %73
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %82, i8* align 4 %81, i64 32, i1 false)
  %85 = ptrtoint i8* %82 to i64
  %86 = sub nsw i64 %85, %53
  %87 = getelementptr inbounds i64, i64* %50, i64 %74
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds i16, i16* %61, i64 %74
  %89 = load i16, i16* %88, align 2
  %90 = getelementptr inbounds i16, i16* %64, i64 %74
  store i16 %89, i16* %90, align 2
  %91 = add nuw nsw i64 %74, 1
  %92 = load i32, i32* %37, align 4
  %93 = sext i32 %92 to i64
  %94 = icmp slt i64 %91, %93
  br i1 %94, label %73, label %97

95:                                               ; preds = %35
  %96 = getelementptr inbounds i8, i8* %32, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false)
  br label %97

97:                                               ; preds = %21, %73, %84, %66, %10, %95, %52, %43, %29, %25
  %98 = phi %struct._FcCharSet* [ null, %25 ], [ null, %29 ], [ null, %43 ], [ null, %52 ], [ %33, %95 ], [ null, %10 ], [ %33, %66 ], [ null, %73 ], [ %33, %84 ], [ null, %21 ]
  ret %struct._FcCharSet* %98
}

declare hidden i8* @FcSerializePtr(%struct._FcSerialize*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #10

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #11

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #11

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #2

declare hidden i32 @FcStrBufString(%struct._FcStrBuf*, i8*) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

; Function Attrs: nounwind readnone speculatable
declare <8 x i32> @llvm.ctpop.v8i32(<8 x i32>) #10

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.isvectorized", i32 1}
!5 = distinct !{!5, !6, !4}
!6 = !{!"llvm.loop.unroll.runtime.disable"}
!7 = !{i32 (%struct._FcCharLeaf*, %struct._FcCharLeaf*, %struct._FcCharLeaf*)* @FcCharSetIntersectLeaf, i32 (%struct._FcCharLeaf*, %struct._FcCharLeaf*, %struct._FcCharLeaf*)* @FcCharSetSubtractLeaf, i32 (%struct._FcCharLeaf*, %struct._FcCharLeaf*, %struct._FcCharLeaf*)* @FcCharSetUnionLeaf}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
