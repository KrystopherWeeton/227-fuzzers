; ModuleID = '../../third_party/blink/renderer/modules/webcodecs/parsed_read_into_options.cc'
source_filename = "../../third_party/blink/renderer/modules/webcodecs/parsed_read_into_options.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::ParsedReadIntoOptions" = type { i32, [4 x %"struct.blink::ParsedReadIntoOptions::Plane"], i32 }
%"struct.blink::ParsedReadIntoOptions::Plane" = type { i32, i32, i32, i32, i32, i32 }
%"class.blink::VideoFrameReadIntoOptions" = type { %"class.blink::IDLDictionaryBase", i8, %"class.blink::HeapVector", %"class.blink::Member.2" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::PlaneLayout"* }
%"class.blink::PlaneLayout" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::VideoFrameRegion"* }
%"class.blink::VideoFrameRegion" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i32, i32, i32, i32, [4 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.v8::Isolate" = type { i8 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF6VectorIN5blink6MemberINS1_11PlaneLayoutEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [43 x i8] c"Invalid region.left %u with codedWidth %u.\00", align 1
@.str.1 = private unnamed_addr constant [63 x i8] c"Invalid region.width %u with region.left %u and codedWidth %u.\00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c"Invalid region.top %u with codedHeight %u.\00", align 1
@.str.3 = private unnamed_addr constant [64 x i8] c"Invalid region.height %u with region.top %u and codedHeight %u.\00", align 1
@.str.4 = private unnamed_addr constant [75 x i8] c"Invalid region with width %d and height %d. Region must have nonzero area.\00", align 1
@.str.5 = private unnamed_addr constant [50 x i8] c"region.left %d is not sample-aligned in plane %u.\00", align 1
@.str.6 = private unnamed_addr constant [51 x i8] c"region.width %d is not sample-aligned in plane %u.\00", align 1
@.str.7 = private unnamed_addr constant [49 x i8] c"region.top %d is not sample-aligned in plane %u.\00", align 1
@.str.8 = private unnamed_addr constant [52 x i8] c"region.height %d is not sample-aligned in plane %u.\00", align 1
@.str.9 = private unnamed_addr constant [46 x i8] c"Invalid layout. Expected %u planes, found %u.\00", align 1
@.str.10 = private unnamed_addr constant [122 x i8] c"Invalid layout, plane %u %s an offset. Either all planes must have an offset and stride, or all planes must have neither.\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"does not have\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"has\00", align 1
@.str.13 = private unnamed_addr constant [121 x i8] c"Invalid layout, plane %u %s a stride. Either all planes must have an offset and stride, or all planes must have neither.\00", align 1
@.str.14 = private unnamed_addr constant [65 x i8] c"Invalid layout, plane %u must have stride at least %u, found %u.\00", align 1
@.str.15 = private unnamed_addr constant [54 x i8] c"Invalid layout, plane %u with stride %u is too large.\00", align 1
@.str.16 = private unnamed_addr constant [70 x i8] c"Invalid layout, plane %u with offset %u and stride %u exceeds bounds.\00", align 1
@.str.17 = private unnamed_addr constant [49 x i8] c"Invalid layout, plane %u overlaps with plane %u.\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.19 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

@_ZN5blink21ParsedReadIntoOptionsC1EPNS_25VideoFrameReadIntoOptionsEN5media16VideoPixelFormatERKN3gfx4SizeERKNS5_4RectERNS_14ExceptionStateE = hidden unnamed_addr alias void (%"struct.blink::ParsedReadIntoOptions"*, %"class.blink::VideoFrameReadIntoOptions"*, i32, %"class.gfx::Size"*, %"class.gfx::Rect"*, %"class.blink::ExceptionState"*), void (%"struct.blink::ParsedReadIntoOptions"*, %"class.blink::VideoFrameReadIntoOptions"*, i32, %"class.gfx::Size"*, %"class.gfx::Rect"*, %"class.blink::ExceptionState"*)* @_ZN5blink21ParsedReadIntoOptionsC2EPNS_25VideoFrameReadIntoOptionsEN5media16VideoPixelFormatERKN3gfx4SizeERKNS5_4RectERNS_14ExceptionStateE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ParsedReadIntoOptionsC2EPNS_25VideoFrameReadIntoOptionsEN5media16VideoPixelFormatERKN3gfx4SizeERKNS5_4RectERNS_14ExceptionStateE(%"struct.blink::ParsedReadIntoOptions"* nocapture, %"class.blink::VideoFrameReadIntoOptions"*, i32, %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca [4 x i32], align 16
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = getelementptr inbounds %"struct.blink::ParsedReadIntoOptions", %"struct.blink::ParsedReadIntoOptions"* %0, i64 0, i32 0
  %25 = tail call i64 @_ZN5media10VideoFrame9NumPlanesENS_16VideoPixelFormatE(i32 %2) #5
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %24, align 4
  %27 = getelementptr inbounds %"struct.blink::ParsedReadIntoOptions", %"struct.blink::ParsedReadIntoOptions"* %0, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.blink::ParsedReadIntoOptions", %"struct.blink::ParsedReadIntoOptions"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 0
  %30 = bitcast [4 x %"struct.blink::ParsedReadIntoOptions::Plane"]* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 100, i1 false)
  %31 = load i32, i32* %29, align 4
  %32 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.blink::VideoFrameReadIntoOptions", %"class.blink::VideoFrameReadIntoOptions"* %1, i64 0, i32 3, i32 0, i32 0
  %39 = load %"class.blink::VideoFrameRegion"*, %"class.blink::VideoFrameRegion"** %38, align 8
  %40 = icmp eq %"class.blink::VideoFrameRegion"* %39, null
  br i1 %40, label %173, label %41

41:                                               ; preds = %6
  %42 = getelementptr inbounds %"class.blink::VideoFrameRegion", %"class.blink::VideoFrameRegion"* %39, i64 0, i32 6
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.blink::VideoFrameRegion", %"class.blink::VideoFrameRegion"* %39, i64 0, i32 7
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.blink::VideoFrameRegion", %"class.blink::VideoFrameRegion"* %39, i64 0, i32 8
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.blink::VideoFrameRegion", %"class.blink::VideoFrameRegion"* %39, i64 0, i32 5
  %49 = load i32, i32* %48, align 4
  %50 = icmp ult i32 %43, %31
  br i1 %50, label %74, label %51

51:                                               ; preds = %41
  %52 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #5
  %53 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 %43, i32 %31) #5
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8
  %55 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %56 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %55, align 8
  %57 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %56, align 8
  call void %57(%"class.blink::ExceptionState"* %5, i32 29, %"class.WTF::String"* nonnull dereferenceable(8) %7) #5
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #5
  br label %73

73:                                               ; preds = %51, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #5
  br label %626

74:                                               ; preds = %41
  %75 = icmp ugt i32 %47, %31
  %76 = add i32 %47, %43
  %77 = icmp ugt i32 %76, %31
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %74
  %80 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #5
  %81 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.1, i64 0, i64 0), i32 %47, i32 %43, i32 %31) #5
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %82, align 8
  %83 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %84 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %83, align 8
  %85 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %84, align 8
  call void %85(%"class.blink::ExceptionState"* %5, i32 29, %"class.WTF::String"* nonnull dereferenceable(8) %8) #5
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #5
  br label %101

101:                                              ; preds = %79, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #5
  br label %626

102:                                              ; preds = %74
  %103 = icmp ult i32 %45, %33
  br i1 %103, label %127, label %104

104:                                              ; preds = %102
  %105 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #5
  %106 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 %45, i32 %33) #5
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %107, align 8
  %108 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %109 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %108, align 8
  %110 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %109, align 8
  call void %110(%"class.blink::ExceptionState"* %5, i32 29, %"class.WTF::String"* nonnull dereferenceable(8) %9) #5
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #5
  br label %126

126:                                              ; preds = %104, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #5
  br label %626

127:                                              ; preds = %102
  %128 = icmp ugt i32 %49, %33
  %129 = add i32 %49, %45
  %130 = icmp ugt i32 %129, %33
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %155

132:                                              ; preds = %127
  %133 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #5
  %134 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3, i64 0, i64 0), i32 %49, i32 %45, i32 %33) #5
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %134, %"class.WTF::StringImpl"** %135, align 8
  %136 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %137 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %136, align 8
  %138 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %137, align 8
  call void %138(%"class.blink::ExceptionState"* %5, i32 29, %"class.WTF::String"* nonnull dereferenceable(8) %10) #5
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %132
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #5
  br label %154

154:                                              ; preds = %132, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #5
  br label %626

155:                                              ; preds = %127
  %156 = icmp sgt i32 %43, 0
  %157 = icmp sgt i32 %47, 0
  %158 = and i1 %156, %157
  %159 = sub nuw nsw i32 2147483647, %43
  %160 = icmp ult i32 %159, %47
  %161 = and i1 %160, %158
  %162 = select i1 %161, i32 %159, i32 %47
  %163 = icmp sgt i32 %45, 0
  %164 = icmp sgt i32 %49, 0
  %165 = and i1 %163, %164
  %166 = sub nuw nsw i32 2147483647, %45
  %167 = icmp ult i32 %166, %49
  %168 = and i1 %167, %165
  %169 = select i1 %168, i32 %166, i32 %49
  %170 = icmp sgt i32 %162, 0
  %171 = icmp sgt i32 %169, 0
  %172 = select i1 %171, i32 %169, i32 0
  br i1 %170, label %179, label %187

173:                                              ; preds = %6
  %174 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %35, 0
  br i1 %178, label %187, label %179

179:                                              ; preds = %155, %173
  %180 = phi i32 [ %37, %173 ], [ %172, %155 ]
  %181 = phi i32 [ %35, %173 ], [ %162, %155 ]
  %182 = phi i32 [ %175, %173 ], [ %45, %155 ]
  %183 = phi i32 [ %177, %173 ], [ %43, %155 ]
  %184 = icmp eq i32 %180, 0
  br i1 %184, label %187, label %185

185:                                              ; preds = %179
  %186 = icmp eq i32 %26, 0
  br i1 %186, label %330, label %212

187:                                              ; preds = %155, %173, %179
  %188 = phi i32 [ %181, %179 ], [ 0, %173 ], [ 0, %155 ]
  %189 = phi i32 [ 0, %179 ], [ %37, %173 ], [ %172, %155 ]
  %190 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #5
  %191 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.4, i64 0, i64 0), i32 %188, i32 %189) #5
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  %193 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %194 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %193, align 8
  %195 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %194, align 8
  call void %195(%"class.blink::ExceptionState"* %5, i32 29, %"class.WTF::String"* nonnull dereferenceable(8) %11) #5
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %211, label %198

198:                                              ; preds = %187
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  br i1 %202, label %205, label %207

205:                                              ; preds = %198
  %206 = add i32 %204, -1
  store i32 %206, i32* %203, align 4
  br label %207

207:                                              ; preds = %205, %198
  %208 = phi i32 [ %206, %205 ], [ %204, %198 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %196) #5
  br label %211

211:                                              ; preds = %187, %207, %210
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #5
  br label %626

212:                                              ; preds = %185, %325
  %213 = phi i64 [ %326, %325 ], [ 0, %185 ]
  %214 = tail call i64 @_ZN5media10VideoFrame10SampleSizeENS_16VideoPixelFormatEm(i32 %2, i64 %213) #5
  %215 = trunc i64 %214 to i32
  %216 = lshr i64 %214, 32
  %217 = trunc i64 %216 to i32
  %218 = srem i32 %183, %215
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %244, label %220

220:                                              ; preds = %212
  %221 = trunc i64 %213 to i32
  %222 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222) #5
  %223 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0), i32 %183, i32 %221) #5
  %224 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %223, %"class.WTF::StringImpl"** %224, align 8
  %225 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %226 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %225, align 8
  %227 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %226, align 8
  call void %227(%"class.blink::ExceptionState"* %5, i32 29, %"class.WTF::String"* nonnull dereferenceable(8) %12) #5
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %243, label %230

230:                                              ; preds = %220
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  br i1 %234, label %237, label %239

237:                                              ; preds = %230
  %238 = add i32 %236, -1
  store i32 %238, i32* %235, align 4
  br label %239

239:                                              ; preds = %237, %230
  %240 = phi i32 [ %238, %237 ], [ %236, %230 ]
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %239
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %228) #5
  br label %243

243:                                              ; preds = %220, %239, %242
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #5
  br label %626

244:                                              ; preds = %212
  %245 = srem i32 %181, %215
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %271, label %247

247:                                              ; preds = %244
  %248 = trunc i64 %213 to i32
  %249 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %249) #5
  %250 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6, i64 0, i64 0), i32 %181, i32 %248) #5
  %251 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %250, %"class.WTF::StringImpl"** %251, align 8
  %252 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %253 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %252, align 8
  %254 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %253, align 8
  call void %254(%"class.blink::ExceptionState"* %5, i32 29, %"class.WTF::String"* nonnull dereferenceable(8) %13) #5
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %270, label %257

257:                                              ; preds = %247
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  br i1 %261, label %264, label %266

264:                                              ; preds = %257
  %265 = add i32 %263, -1
  store i32 %265, i32* %262, align 4
  br label %266

266:                                              ; preds = %264, %257
  %267 = phi i32 [ %265, %264 ], [ %263, %257 ]
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %266
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %255) #5
  br label %270

270:                                              ; preds = %247, %266, %269
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %249) #5
  br label %626

271:                                              ; preds = %244
  %272 = srem i32 %182, %217
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %298, label %274

274:                                              ; preds = %271
  %275 = trunc i64 %213 to i32
  %276 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #5
  %277 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i64 0, i64 0), i32 %182, i32 %275) #5
  %278 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %277, %"class.WTF::StringImpl"** %278, align 8
  %279 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %280 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %279, align 8
  %281 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %280, align 8
  call void %281(%"class.blink::ExceptionState"* %5, i32 29, %"class.WTF::String"* nonnull dereferenceable(8) %14) #5
  %282 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %278, align 8
  %283 = icmp eq %"class.WTF::StringImpl"* %282, null
  br i1 %283, label %297, label %284

284:                                              ; preds = %274
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = load atomic i32, i32* %285 monotonic, align 4
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 0
  %290 = load i32, i32* %289, align 4
  br i1 %288, label %291, label %293

291:                                              ; preds = %284
  %292 = add i32 %290, -1
  store i32 %292, i32* %289, align 4
  br label %293

293:                                              ; preds = %291, %284
  %294 = phi i32 [ %292, %291 ], [ %290, %284 ]
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %293
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %282) #5
  br label %297

297:                                              ; preds = %274, %293, %296
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #5
  br label %626

298:                                              ; preds = %271
  %299 = srem i32 %180, %217
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %325, label %301

301:                                              ; preds = %298
  %302 = trunc i64 %213 to i32
  %303 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %303) #5
  %304 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.8, i64 0, i64 0), i32 %180, i32 %302) #5
  %305 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %304, %"class.WTF::StringImpl"** %305, align 8
  %306 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %307 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %306, align 8
  %308 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %307, align 8
  call void %308(%"class.blink::ExceptionState"* %5, i32 29, %"class.WTF::String"* nonnull dereferenceable(8) %15) #5
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %305, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %324, label %311

311:                                              ; preds = %301
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  br i1 %315, label %318, label %320

318:                                              ; preds = %311
  %319 = add i32 %317, -1
  store i32 %319, i32* %316, align 4
  br label %320

320:                                              ; preds = %318, %311
  %321 = phi i32 [ %319, %318 ], [ %317, %311 ]
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %320
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %309) #5
  br label %324

324:                                              ; preds = %301, %320, %323
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %303) #5
  br label %626

325:                                              ; preds = %298
  %326 = add nuw nsw i64 %213, 1
  %327 = load i32, i32* %24, align 4
  %328 = zext i32 %327 to i64
  %329 = icmp ult i64 %326, %328
  br i1 %329, label %212, label %330

330:                                              ; preds = %325, %185
  %331 = phi i32 [ 0, %185 ], [ %327, %325 ]
  %332 = getelementptr inbounds %"class.blink::VideoFrameReadIntoOptions", %"class.blink::VideoFrameReadIntoOptions"* %1, i64 0, i32 1
  %333 = load i8, i8* %332, align 8, !range !2
  %334 = icmp eq i8 %333, 0
  br i1 %334, label %461, label %335

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"class.blink::VideoFrameReadIntoOptions", %"class.blink::VideoFrameReadIntoOptions"* %1, i64 0, i32 2, i32 0
  %337 = getelementptr inbounds %"class.blink::VideoFrameReadIntoOptions", %"class.blink::VideoFrameReadIntoOptions"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %338 = load i32, i32* %337, align 4
  %339 = icmp eq i32 %338, %331
  br i1 %339, label %363, label %340

340:                                              ; preds = %335
  %341 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %341) #5
  %342 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.9, i64 0, i64 0), i32 %331, i32 %338) #5
  %343 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %342, %"class.WTF::StringImpl"** %343, align 8
  %344 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %345 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %344, align 8
  %346 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %345, align 8
  call void %346(%"class.blink::ExceptionState"* %5, i32 29, %"class.WTF::String"* nonnull dereferenceable(8) %16) #5
  %347 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %343, align 8
  %348 = icmp eq %"class.WTF::StringImpl"* %347, null
  br i1 %348, label %362, label %349

349:                                              ; preds = %340
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %351 = load atomic i32, i32* %350 monotonic, align 4
  %352 = and i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 0
  %355 = load i32, i32* %354, align 4
  br i1 %353, label %356, label %358

356:                                              ; preds = %349
  %357 = add i32 %355, -1
  store i32 %357, i32* %354, align 4
  br label %358

358:                                              ; preds = %356, %349
  %359 = phi i32 [ %357, %356 ], [ %355, %349 ]
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %361, label %362

361:                                              ; preds = %358
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %347) #5
  br label %362

362:                                              ; preds = %340, %358, %361
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %341) #5
  br label %626

363:                                              ; preds = %335
  %364 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11PlaneLayoutEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %336, i32 0) #5
  %365 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %364, i64 0, i32 0, i32 0
  %366 = load %"class.blink::PlaneLayout"*, %"class.blink::PlaneLayout"** %365, align 8
  %367 = getelementptr inbounds %"class.blink::PlaneLayout", %"class.blink::PlaneLayout"* %366, i64 0, i32 1
  %368 = load i8, i8* %367, align 8, !range !2
  %369 = icmp ne i8 %368, 0
  %370 = load i32, i32* %24, align 4
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %374

372:                                              ; preds = %363
  %373 = bitcast [4 x i32]* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %373) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %373, i8 0, i64 16, i1 false)
  br label %624

374:                                              ; preds = %363, %456
  %375 = phi i64 [ %457, %456 ], [ 0, %363 ]
  %376 = trunc i64 %375 to i32
  %377 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11PlaneLayoutEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %336, i32 %376) #5
  %378 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %377, i64 0, i32 0, i32 0
  %379 = load %"class.blink::PlaneLayout"*, %"class.blink::PlaneLayout"** %378, align 8
  %380 = getelementptr inbounds %"class.blink::PlaneLayout", %"class.blink::PlaneLayout"* %379, i64 0, i32 1
  %381 = load i8, i8* %380, align 8, !range !2
  %382 = icmp ne i8 %381, 0
  %383 = xor i1 %369, %382
  br i1 %383, label %384, label %409

384:                                              ; preds = %374
  %385 = trunc i64 %375 to i32
  %386 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %386) #5
  %387 = select i1 %369, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0)
  %388 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.10, i64 0, i64 0), i32 %385, i8* %387) #5
  %389 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %388, %"class.WTF::StringImpl"** %389, align 8
  %390 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %391 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %390, align 8
  %392 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %391, align 8
  call void %392(%"class.blink::ExceptionState"* %5, i32 29, %"class.WTF::String"* nonnull dereferenceable(8) %17) #5
  %393 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %389, align 8
  %394 = icmp eq %"class.WTF::StringImpl"* %393, null
  br i1 %394, label %408, label %395

395:                                              ; preds = %384
  %396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %393, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %397 = load atomic i32, i32* %396 monotonic, align 4
  %398 = and i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %393, i64 0, i32 0
  %401 = load i32, i32* %400, align 4
  br i1 %399, label %402, label %404

402:                                              ; preds = %395
  %403 = add i32 %401, -1
  store i32 %403, i32* %400, align 4
  br label %404

404:                                              ; preds = %402, %395
  %405 = phi i32 [ %403, %402 ], [ %401, %395 ]
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %408

407:                                              ; preds = %404
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %393) #5
  br label %408

408:                                              ; preds = %384, %404, %407
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %386) #5
  br label %626

409:                                              ; preds = %374
  %410 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11PlaneLayoutEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %336, i32 %376) #5
  %411 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %410, i64 0, i32 0, i32 0
  %412 = load %"class.blink::PlaneLayout"*, %"class.blink::PlaneLayout"** %411, align 8
  %413 = getelementptr inbounds %"class.blink::PlaneLayout", %"class.blink::PlaneLayout"* %412, i64 0, i32 2
  %414 = load i8, i8* %413, align 1, !range !2
  %415 = icmp ne i8 %414, 0
  %416 = xor i1 %369, %415
  br i1 %416, label %417, label %442

417:                                              ; preds = %409
  %418 = trunc i64 %375 to i32
  %419 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %419) #5
  %420 = select i1 %369, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0)
  %421 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.13, i64 0, i64 0), i32 %418, i8* %420) #5
  %422 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %421, %"class.WTF::StringImpl"** %422, align 8
  %423 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %424 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %423, align 8
  %425 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %424, align 8
  call void %425(%"class.blink::ExceptionState"* %5, i32 29, %"class.WTF::String"* nonnull dereferenceable(8) %18) #5
  %426 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %422, align 8
  %427 = icmp eq %"class.WTF::StringImpl"* %426, null
  br i1 %427, label %441, label %428

428:                                              ; preds = %417
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %426, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %430 = load atomic i32, i32* %429 monotonic, align 4
  %431 = and i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %426, i64 0, i32 0
  %434 = load i32, i32* %433, align 4
  br i1 %432, label %435, label %437

435:                                              ; preds = %428
  %436 = add i32 %434, -1
  store i32 %436, i32* %433, align 4
  br label %437

437:                                              ; preds = %435, %428
  %438 = phi i32 [ %436, %435 ], [ %434, %428 ]
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %440, label %441

440:                                              ; preds = %437
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %426) #5
  br label %441

441:                                              ; preds = %417, %437, %440
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %419) #5
  br label %626

442:                                              ; preds = %409
  br i1 %369, label %443, label %456

443:                                              ; preds = %442
  %444 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11PlaneLayoutEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %336, i32 %376) #5
  %445 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %444, i64 0, i32 0, i32 0
  %446 = load %"class.blink::PlaneLayout"*, %"class.blink::PlaneLayout"** %445, align 8
  %447 = getelementptr inbounds %"class.blink::PlaneLayout", %"class.blink::PlaneLayout"* %446, i64 0, i32 4
  %448 = load i32, i32* %447, align 4
  %449 = getelementptr inbounds %"struct.blink::ParsedReadIntoOptions", %"struct.blink::ParsedReadIntoOptions"* %0, i64 0, i32 1, i64 %375, i32 0
  store i32 %448, i32* %449, align 4
  %450 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11PlaneLayoutEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %336, i32 %376) #5
  %451 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %450, i64 0, i32 0, i32 0
  %452 = load %"class.blink::PlaneLayout"*, %"class.blink::PlaneLayout"** %451, align 8
  %453 = getelementptr inbounds %"class.blink::PlaneLayout", %"class.blink::PlaneLayout"* %452, i64 0, i32 5
  %454 = load i32, i32* %453, align 8
  %455 = getelementptr inbounds %"struct.blink::ParsedReadIntoOptions", %"struct.blink::ParsedReadIntoOptions"* %0, i64 0, i32 1, i64 %375, i32 1
  store i32 %454, i32* %455, align 4
  br label %456

456:                                              ; preds = %442, %443
  %457 = add nuw nsw i64 %375, 1
  %458 = load i32, i32* %24, align 4
  %459 = zext i32 %458 to i64
  %460 = icmp ult i64 %457, %459
  br i1 %460, label %374, label %461

461:                                              ; preds = %456, %330
  %462 = phi i32 [ %331, %330 ], [ %458, %456 ]
  %463 = phi i1 [ false, %330 ], [ %369, %456 ]
  %464 = bitcast [4 x i32]* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %464) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %464, i8 0, i64 16, i1 false)
  %465 = icmp eq i32 %462, 0
  br i1 %465, label %624, label %466

466:                                              ; preds = %461, %619
  %467 = phi i64 [ %620, %619 ], [ 0, %461 ]
  %468 = tail call i64 @_ZN5media10VideoFrame10SampleSizeENS_16VideoPixelFormatEm(i32 %2, i64 %467) #5
  %469 = trunc i64 %468 to i32
  %470 = lshr i64 %468, 32
  %471 = trunc i64 %470 to i32
  %472 = tail call i32 @_ZN5media10VideoFrame15BytesPerElementENS_16VideoPixelFormatEm(i32 %2, i64 %467) #5
  %473 = sdiv i32 %182, %471
  %474 = getelementptr inbounds %"struct.blink::ParsedReadIntoOptions", %"struct.blink::ParsedReadIntoOptions"* %0, i64 0, i32 1, i64 %467
  %475 = getelementptr inbounds %"struct.blink::ParsedReadIntoOptions", %"struct.blink::ParsedReadIntoOptions"* %0, i64 0, i32 1, i64 %467, i32 2
  store i32 %473, i32* %475, align 4
  %476 = sdiv i32 %180, %471
  %477 = getelementptr inbounds %"struct.blink::ParsedReadIntoOptions", %"struct.blink::ParsedReadIntoOptions"* %0, i64 0, i32 1, i64 %467, i32 3
  store i32 %476, i32* %477, align 4
  %478 = sdiv i32 %183, %469
  %479 = mul i32 %478, %472
  %480 = getelementptr inbounds %"struct.blink::ParsedReadIntoOptions", %"struct.blink::ParsedReadIntoOptions"* %0, i64 0, i32 1, i64 %467, i32 4
  store i32 %479, i32* %480, align 4
  %481 = sdiv i32 %181, %469
  %482 = mul i32 %481, %472
  %483 = getelementptr inbounds %"struct.blink::ParsedReadIntoOptions", %"struct.blink::ParsedReadIntoOptions"* %0, i64 0, i32 1, i64 %467, i32 5
  store i32 %482, i32* %483, align 4
  br i1 %463, label %488, label %484

484:                                              ; preds = %466
  %485 = load i32, i32* %28, align 4
  %486 = getelementptr inbounds %"struct.blink::ParsedReadIntoOptions::Plane", %"struct.blink::ParsedReadIntoOptions::Plane"* %474, i64 0, i32 0
  store i32 %485, i32* %486, align 4
  %487 = getelementptr inbounds %"struct.blink::ParsedReadIntoOptions", %"struct.blink::ParsedReadIntoOptions"* %0, i64 0, i32 1, i64 %467, i32 1
  store i32 %482, i32* %487, align 4
  br label %516

488:                                              ; preds = %466
  %489 = getelementptr inbounds %"struct.blink::ParsedReadIntoOptions", %"struct.blink::ParsedReadIntoOptions"* %0, i64 0, i32 1, i64 %467, i32 1
  %490 = load i32, i32* %489, align 4
  %491 = icmp ult i32 %490, %482
  br i1 %491, label %492, label %516

492:                                              ; preds = %488
  %493 = trunc i64 %467 to i32
  %494 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %494) #5
  %495 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.14, i64 0, i64 0), i32 %493, i32 %482, i32 %490) #5
  %496 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %495, %"class.WTF::StringImpl"** %496, align 8
  %497 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %498 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %497, align 8
  %499 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %498, align 8
  call void %499(%"class.blink::ExceptionState"* %5, i32 29, %"class.WTF::String"* nonnull dereferenceable(8) %20) #5
  %500 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %496, align 8
  %501 = icmp eq %"class.WTF::StringImpl"* %500, null
  br i1 %501, label %515, label %502

502:                                              ; preds = %492
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %500, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %504 = load atomic i32, i32* %503 monotonic, align 4
  %505 = and i32 %504, 2
  %506 = icmp eq i32 %505, 0
  %507 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %500, i64 0, i32 0
  %508 = load i32, i32* %507, align 4
  br i1 %506, label %509, label %511

509:                                              ; preds = %502
  %510 = add i32 %508, -1
  store i32 %510, i32* %507, align 4
  br label %511

511:                                              ; preds = %509, %502
  %512 = phi i32 [ %510, %509 ], [ %508, %502 ]
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %514, label %515

514:                                              ; preds = %511
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %500) #5
  br label %515

515:                                              ; preds = %492, %511, %514
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %494) #5
  br label %624

516:                                              ; preds = %488, %484
  %517 = phi i32 [ %490, %488 ], [ %482, %484 ]
  %518 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %517, i32 %476) #5
  %519 = extractvalue { i32, i1 } %518, 1
  br i1 %519, label %520, label %544

520:                                              ; preds = %516
  %521 = trunc i64 %467 to i32
  %522 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %522) #5
  %523 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.15, i64 0, i64 0), i32 %521, i32 %517) #5
  %524 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %523, %"class.WTF::StringImpl"** %524, align 8
  %525 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %526 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %525, align 8
  %527 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %526, align 8
  call void %527(%"class.blink::ExceptionState"* %5, i32 29, %"class.WTF::String"* nonnull dereferenceable(8) %21) #5
  %528 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %524, align 8
  %529 = icmp eq %"class.WTF::StringImpl"* %528, null
  br i1 %529, label %543, label %530

530:                                              ; preds = %520
  %531 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %528, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %532 = load atomic i32, i32* %531 monotonic, align 4
  %533 = and i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %528, i64 0, i32 0
  %536 = load i32, i32* %535, align 4
  br i1 %534, label %537, label %539

537:                                              ; preds = %530
  %538 = add i32 %536, -1
  store i32 %538, i32* %535, align 4
  br label %539

539:                                              ; preds = %537, %530
  %540 = phi i32 [ %538, %537 ], [ %536, %530 ]
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %542, label %543

542:                                              ; preds = %539
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %528) #5
  br label %543

543:                                              ; preds = %520, %539, %542
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %522) #5
  br label %624

544:                                              ; preds = %516
  %545 = extractvalue { i32, i1 } %518, 0
  %546 = getelementptr inbounds %"struct.blink::ParsedReadIntoOptions::Plane", %"struct.blink::ParsedReadIntoOptions::Plane"* %474, i64 0, i32 0
  %547 = load i32, i32* %546, align 4
  %548 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %545, i32 %547) #5
  %549 = extractvalue { i32, i1 } %548, 1
  %550 = extractvalue { i32, i1 } %548, 0
  br i1 %549, label %551, label %575

551:                                              ; preds = %544
  %552 = trunc i64 %467 to i32
  %553 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %553) #5
  %554 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i32 %552, i32 %547, i32 %517) #5
  %555 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %554, %"class.WTF::StringImpl"** %555, align 8
  %556 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %557 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %556, align 8
  %558 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %557, align 8
  call void %558(%"class.blink::ExceptionState"* %5, i32 29, %"class.WTF::String"* nonnull dereferenceable(8) %22) #5
  %559 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %555, align 8
  %560 = icmp eq %"class.WTF::StringImpl"* %559, null
  br i1 %560, label %574, label %561

561:                                              ; preds = %551
  %562 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %559, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %563 = load atomic i32, i32* %562 monotonic, align 4
  %564 = and i32 %563, 2
  %565 = icmp eq i32 %564, 0
  %566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %559, i64 0, i32 0
  %567 = load i32, i32* %566, align 4
  br i1 %565, label %568, label %570

568:                                              ; preds = %561
  %569 = add i32 %567, -1
  store i32 %569, i32* %566, align 4
  br label %570

570:                                              ; preds = %568, %561
  %571 = phi i32 [ %569, %568 ], [ %567, %561 ]
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %573, label %574

573:                                              ; preds = %570
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %559) #5
  br label %574

574:                                              ; preds = %551, %570, %573
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %553) #5
  br label %624

575:                                              ; preds = %544
  %576 = getelementptr inbounds [4 x i32], [4 x i32]* %19, i64 0, i64 %467
  store i32 %550, i32* %576, align 4
  %577 = load i32, i32* %28, align 4
  %578 = icmp ult i32 %577, %550
  %579 = select i1 %578, i32 %550, i32 %577
  store i32 %579, i32* %28, align 4
  %580 = icmp eq i64 %467, 0
  br i1 %580, label %619, label %581

581:                                              ; preds = %575, %615
  %582 = phi i64 [ %616, %615 ], [ 0, %575 ]
  %583 = getelementptr inbounds %"struct.blink::ParsedReadIntoOptions", %"struct.blink::ParsedReadIntoOptions"* %0, i64 0, i32 1, i64 %582, i32 0
  %584 = load i32, i32* %583, align 4
  %585 = icmp ult i32 %584, %550
  br i1 %585, label %586, label %615

586:                                              ; preds = %581
  %587 = getelementptr inbounds [4 x i32], [4 x i32]* %19, i64 0, i64 %582
  %588 = load i32, i32* %587, align 4
  %589 = load i32, i32* %546, align 4
  %590 = icmp ugt i32 %588, %589
  br i1 %590, label %591, label %615

591:                                              ; preds = %586
  %592 = trunc i64 %467 to i32
  %593 = trunc i64 %582 to i32
  %594 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %594) #5
  %595 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.17, i64 0, i64 0), i32 %592, i32 %593) #5
  %596 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %595, %"class.WTF::StringImpl"** %596, align 8
  %597 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %598 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %597, align 8
  %599 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %598, align 8
  call void %599(%"class.blink::ExceptionState"* %5, i32 29, %"class.WTF::String"* nonnull dereferenceable(8) %23) #5
  %600 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %596, align 8
  %601 = icmp eq %"class.WTF::StringImpl"* %600, null
  br i1 %601, label %618, label %602

602:                                              ; preds = %591
  %603 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %600, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %604 = load atomic i32, i32* %603 monotonic, align 4
  %605 = and i32 %604, 2
  %606 = icmp eq i32 %605, 0
  %607 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %600, i64 0, i32 0
  %608 = load i32, i32* %607, align 4
  br i1 %606, label %609, label %611

609:                                              ; preds = %602
  %610 = add i32 %608, -1
  store i32 %610, i32* %607, align 4
  br label %611

611:                                              ; preds = %609, %602
  %612 = phi i32 [ %610, %609 ], [ %608, %602 ]
  %613 = icmp eq i32 %612, 0
  br i1 %613, label %614, label %618

614:                                              ; preds = %611
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %600) #5
  br label %618

615:                                              ; preds = %586, %581
  %616 = add nuw nsw i64 %582, 1
  %617 = icmp eq i64 %616, %467
  br i1 %617, label %619, label %581

618:                                              ; preds = %614, %611, %591
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %594) #5
  br label %624

619:                                              ; preds = %615, %575
  %620 = add nuw nsw i64 %467, 1
  %621 = load i32, i32* %24, align 4
  %622 = zext i32 %621 to i64
  %623 = icmp ult i64 %620, %622
  br i1 %623, label %466, label %624

624:                                              ; preds = %619, %372, %461, %618, %574, %543, %515
  %625 = phi i8* [ %373, %372 ], [ %464, %461 ], [ %464, %618 ], [ %464, %574 ], [ %464, %543 ], [ %464, %515 ], [ %464, %619 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %625) #5
  br label %626

626:                                              ; preds = %324, %297, %270, %243, %362, %624, %408, %441, %154, %126, %101, %73, %211
  ret void
}

declare i64 @_ZN5media10VideoFrame9NumPlanesENS_16VideoPixelFormatE(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @_ZN5media10VideoFrame10SampleSizeENS_16VideoPixelFormatEm(i32, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @_ZN5media10VideoFrame15BytesPerElementENS_16VideoPixelFormatEm(i32, i64) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11PlaneLayoutEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #5
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %14, i8* %15) #5
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #5
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
