; ModuleID = '../../third_party/blink/renderer/platform/heap/impl/heap_page.cc'
source_filename = "../../third_party/blink/renderer/platform/heap/impl/heap_page.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.137", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.178", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.117", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type { %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event", i64, i64, i64, i64, i8, i8, %"class.base::TimeDelta", %"class.WTF::Vector" }
%"struct.blink::ThreadHeapStatsCollector::Event" = type <{ i64, i64, i64, i64, i8, [7 x i8], [31 x %"class.base::TimeDelta"], [3 x i32], i32, i32, [4 x i8], i64, i64, i64, double, %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::ThreadHeapStatsObserver"**, i32, i32 }
%"class.blink::ThreadHeapStatsObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.7" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type { %"class.WTF::BloomFilter" }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type { [9 x %"class.blink::PagePool::PoolEntry"*] }
%"class.blink::PagePool::PoolEntry" = type { %"class.blink::PageMemory"*, %"class.blink::PagePool::PoolEntry"* }
%"class.blink::PageMemory" = type { %"class.blink::PageMemoryRegion"*, %"class.blink::MemoryRegion" }
%"class.blink::PageMemoryRegion" = type { %"class.blink::MemoryRegion", i8, [10 x i8], %"class.base::AtomicRefCount", %"class.blink::RegionTree"* }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::MemoryRegion" = type { i8*, i64 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i64 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::Worklist.46"* }
%"class.blink::Worklist.46" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist.53"* }
%"class.blink::Worklist.53" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.95", %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.111", [4 x i8] }>
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97", %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { i64 }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { float }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.120", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.129" }
%"class.WTF::Vector.129" = type { %"class.WTF::VectorBuffer.130" }
%"class.WTF::VectorBuffer.130" = type { %"class.WTF::VectorBufferBase.131" }
%"class.WTF::VectorBufferBase.131" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, {}* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.145" }
%"class.WTF::VectorBuffer.145" = type { %"class.WTF::VectorBufferBase.146" }
%"class.WTF::VectorBufferBase.146" = type { %"struct.std::__1::pair.147"*, i32, i32 }
%"struct.std::__1::pair.147" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.46"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.53"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.182", i64 }
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.184" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__cxx_atomic_impl.180" }
%"struct.std::__1::__cxx_atomic_impl.180" = type { %"struct.std::__1::__cxx_atomic_base_impl.181" }
%"struct.std::__1::__cxx_atomic_base_impl.181" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::LargeObjectArena" = type { %"class.blink::BaseArena.base", [4 x i8] }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.214", %"class.blink::FreeList", %"class.WTF::Vector.219" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.WTF::Vector.214" = type { %"class.WTF::VectorBuffer.215" }
%"class.WTF::VectorBuffer.215" = type { %"class.WTF::VectorBufferBase.216" }
%"class.WTF::VectorBufferBase.216" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.219" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221" }
%"class.WTF::VectorBufferBase.221" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::LargeObjectPage" = type <{ %"class.blink::BasePage.base", [5 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.blink::ThreadState::Statistics" = type { i64, i64, i32, %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"struct.blink::ThreadState::Statistics::ArenaStatistics"*, i32, i32 }
%"struct.blink::ThreadState::Statistics::ArenaStatistics" = type { %"class.std::__1::basic_string", i64, i64, %"class.WTF::Vector.197", %"struct.blink::ThreadState::Statistics::FreeListStatistics", %"struct.blink::ThreadState::Statistics::ObjectStatistics" }
%"class.WTF::Vector.197" = type { %"class.WTF::VectorBuffer.198" }
%"class.WTF::VectorBuffer.198" = type { %"class.WTF::VectorBufferBase.199" }
%"class.WTF::VectorBufferBase.199" = type { %"struct.blink::ThreadState::Statistics::PageStatistics"*, i32, i32 }
%"struct.blink::ThreadState::Statistics::PageStatistics" = type { i64, i64 }
%"struct.blink::ThreadState::Statistics::FreeListStatistics" = type { %"class.WTF::Vector.202", %"class.WTF::Vector.202", %"class.WTF::Vector.202" }
%"class.WTF::Vector.202" = type { %"class.WTF::VectorBuffer.203" }
%"class.WTF::VectorBuffer.203" = type { %"class.WTF::VectorBufferBase.204" }
%"class.WTF::VectorBufferBase.204" = type { i64*, i32, i32 }
%"struct.blink::ThreadState::Statistics::ObjectStatistics" = type { i64, %"class.WTF::Vector.207", %"class.WTF::Vector.202", %"class.WTF::Vector.202" }
%"class.WTF::Vector.207" = type { %"class.WTF::VectorBuffer.208" }
%"class.WTF::VectorBuffer.208" = type { %"class.WTF::VectorBufferBase.209" }
%"class.WTF::VectorBufferBase.209" = type { %"class.std::__1::basic_string"*, i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ThreadHeapStatsCollector::InternalScope" = type <{ %"class.blink::ThreadHeapStatsCollector"*, %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.blink::NormalPage::CompactionContext" = type { %"class.blink::NormalPage"*, i64, %"class.blink::PageStack", %"class.blink::PageStack"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::MarkingVerifier" = type { %"class.blink::Visitor", %"class.blink::HeapObjectHeader"* }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.261", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.261" = type { %"class.std::__1::__vector_base.262" }
%"class.std::__1::__vector_base.262" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.263", i64, i64 }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.274" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.100" }

$_ZN5blink11ThreadState10Statistics15ArenaStatisticsD2Ev = comdat any

$_ZN5blink24ThreadHeapStatsCollector13InternalScopeILNS0_13TraceCategoryE0ELNS0_12ScopeContextE0EEC2IJEEEPS0_NS0_2IdEDpT_ = comdat any

$_ZN5blink24ThreadHeapStatsCollector13InternalScopeILNS0_13TraceCategoryE0ELNS0_12ScopeContextE0EED2Ev = comdat any

$_ZNK5blink10NormalPage4sizeEv = comdat any

$_ZNK5blink15LargeObjectPage4sizeEv = comdat any

$_ZN5blink9BaseArena25CollectFreeListStatisticsEPNS_11ThreadState10Statistics18FreeListStatisticsE = comdat any

$_ZN5blink9BaseArena14ClearFreeListsEv = comdat any

$_ZN5blink9BaseArena12MakeIterableEv = comdat any

$_ZN5blink9BaseArena20ResetAllocationPointEv = comdat any

$_ZN5blink9BaseArena23VerifyObjectStartBitmapEv = comdat any

$_ZN5blink15NormalPageArenaD0Ev = comdat any

$_ZN5blink15NormalPageArena20ResetAllocationPointEv = comdat any

$_ZN5blink16LargeObjectArenaD0Ev = comdat any

$_ZN5blink15LargeObjectPageD0Ev = comdat any

$_ZN5blink8BasePageD2Ev = comdat any

$_ZN5blink8BasePageD0Ev = comdat any

$_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink8BasePageEEEmm = comdat any

$_ZN3WTF6VectorIN5blink11ThreadState10Statistics15ArenaStatisticsELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11ThreadState10Statistics15ArenaStatisticsEEEmm = comdat any

$_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE7EraseAtEjj = comdat any

$_ZN5blink24ThreadHeapStatsCollector8ToStringENS0_2IdENS_7BlinkGC14CollectionTypeE = comdat any

$_ZN20trace_event_internal13AddTraceEventIRmRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_ = comdat any

$_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm = comdat any

$_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRmEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10NormalPage19ToBeFinalizedObjectEEEmm = comdat any

$_ZN3WTF6VectorIN5blink10NormalPage19FutureFreelistEntryELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10NormalPage19FutureFreelistEntryEEEmm = comdat any

$_ZN3WTF6VectorIN5blink10NormalPage19ToBeFinalizedObjectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11ThreadState10Statistics14PageStatisticsEEEmm = comdat any

$_ZTVN5blink8BasePageE = comdat any

$_ZZN5blink24ThreadHeapStatsCollector13InternalScopeILNS0_13TraceCategoryE0ELNS0_12ScopeContextE0EE10StartTraceEvE28trace_event_unique_atomic418 = comdat any

$_ZZN5blink24ThreadHeapStatsCollector13InternalScopeILNS0_13TraceCategoryE0ELNS0_12ScopeContextE0EE9StopTraceEvE28trace_event_unique_atomic447 = comdat any

@_ZTVN5blink9BaseArenaE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::BaseArena"*)* @_ZN5blink9BaseArenaD2Ev to i8*), i8* bitcast (void (%"class.blink::BaseArena"*)* @_ZN5blink9BaseArenaD0Ev to i8*), i8* bitcast (void (%"class.blink::BaseArena"*, %"struct.blink::ThreadState::Statistics::FreeListStatistics"*)* @_ZN5blink9BaseArena25CollectFreeListStatisticsEPNS_11ThreadState10Statistics18FreeListStatisticsE to i8*), i8* bitcast (void (%"class.blink::BaseArena"*)* @_ZN5blink9BaseArena14ClearFreeListsEv to i8*), i8* bitcast (void (%"class.blink::BaseArena"*)* @_ZN5blink9BaseArena12MakeIterableEv to i8*), i8* bitcast (void (%"class.blink::BaseArena"*)* @_ZN5blink9BaseArena19MakeConsistentForGCEv to i8*), i8* bitcast (void (%"class.blink::BaseArena"*)* @_ZN5blink9BaseArena20ResetAllocationPointEv to i8*), i8* bitcast (void (%"class.blink::BaseArena"*)* @_ZN5blink9BaseArena23VerifyObjectStartBitmapEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [65 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_page.cc\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"SweepingAndFinalizationCompleted()\00", align 1
@.str.2 = private unnamed_addr constant [41 x i8] c"GetThreadState()->IsSweepingInProgress()\00", align 1
@_ZTVN5blink15NormalPageArenaE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::BaseArena"*)* @_ZN5blink9BaseArenaD2Ev to i8*), i8* bitcast (void (%"class.blink::NormalPageArena"*)* @_ZN5blink15NormalPageArenaD0Ev to i8*), i8* bitcast (void (%"class.blink::NormalPageArena"*, %"struct.blink::ThreadState::Statistics::FreeListStatistics"*)* @_ZN5blink15NormalPageArena25CollectFreeListStatisticsEPNS_11ThreadState10Statistics18FreeListStatisticsE to i8*), i8* bitcast (void (%"class.blink::NormalPageArena"*)* @_ZN5blink15NormalPageArena14ClearFreeListsEv to i8*), i8* bitcast (void (%"class.blink::NormalPageArena"*)* @_ZN5blink15NormalPageArena12MakeIterableEv to i8*), i8* bitcast (void (%"class.blink::NormalPageArena"*)* @_ZN5blink15NormalPageArena19MakeConsistentForGCEv to i8*), i8* bitcast (void (%"class.blink::NormalPageArena"*)* @_ZN5blink15NormalPageArena20ResetAllocationPointEv to i8*), i8* bitcast (void (%"class.blink::NormalPageArena"*)* @_ZN5blink15NormalPageArena23VerifyObjectStartBitmapEv to i8*), i8* bitcast (i8* (%"class.blink::NormalPageArena"*, i64, i64)* @_ZN5blink15NormalPageArena14LazySweepPagesEmm to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [7 x i8] c"result\00", align 1
@_ZTVN5blink16LargeObjectArenaE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::BaseArena"*)* @_ZN5blink9BaseArenaD2Ev to i8*), i8* bitcast (void (%"class.blink::LargeObjectArena"*)* @_ZN5blink16LargeObjectArenaD0Ev to i8*), i8* bitcast (void (%"class.blink::BaseArena"*, %"struct.blink::ThreadState::Statistics::FreeListStatistics"*)* @_ZN5blink9BaseArena25CollectFreeListStatisticsEPNS_11ThreadState10Statistics18FreeListStatisticsE to i8*), i8* bitcast (void (%"class.blink::BaseArena"*)* @_ZN5blink9BaseArena14ClearFreeListsEv to i8*), i8* bitcast (void (%"class.blink::BaseArena"*)* @_ZN5blink9BaseArena12MakeIterableEv to i8*), i8* bitcast (void (%"class.blink::BaseArena"*)* @_ZN5blink9BaseArena19MakeConsistentForGCEv to i8*), i8* bitcast (void (%"class.blink::BaseArena"*)* @_ZN5blink9BaseArena20ResetAllocationPointEv to i8*), i8* bitcast (void (%"class.blink::BaseArena"*)* @_ZN5blink9BaseArena23VerifyObjectStartBitmapEv to i8*), i8* bitcast (i8* (%"class.blink::LargeObjectArena"*, i64, i64)* @_ZN5blink16LargeObjectArena14LazySweepPagesEmm to i8*)] }, align 8
@_ZTVN5blink8BasePageE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::BasePage"*)* @_ZN5blink8BasePageD2Ev to i8*), i8* bitcast (void (%"class.blink::BasePage"*)* @_ZN5blink8BasePageD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink10NormalPageE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::NormalPage"*)* @_ZN5blink10NormalPageD2Ev to i8*), i8* bitcast (void (%"class.blink::NormalPage"*)* @_ZN5blink10NormalPageD0Ev to i8*), i8* bitcast (i64 (%"class.blink::NormalPage"*)* @_ZN5blink10NormalPage27ObjectPayloadSizeForTestingEv to i8*), i8* bitcast (void (%"class.blink::NormalPage"*)* @_ZN5blink10NormalPage14RemoveFromHeapEv to i8*), i8* bitcast (i1 (%"class.blink::NormalPage"*, i8)* @_ZN5blink10NormalPage5SweepENS_12FinalizeTypeE to i8*), i8* bitcast (void (%"class.blink::NormalPage"*)* @_ZN5blink10NormalPage24MakeConsistentForMutatorEv to i8*), i8* bitcast (void (%"class.blink::NormalPage"*)* @_ZN5blink10NormalPage6UnmarkEv to i8*), i8* bitcast (void (%"class.blink::NormalPage"*, i8)* @_ZN5blink10NormalPage13FinalizeSweepENS_11SweepResultE to i8*), i8* bitcast (void (%"class.blink::NormalPage"*, %"struct.blink::ThreadState::Statistics::ArenaStatistics"*)* @_ZN5blink10NormalPage17CollectStatisticsEPNS_11ThreadState10Statistics15ArenaStatisticsE to i8*), i8* bitcast (i64 (%"class.blink::NormalPage"*)* @_ZNK5blink10NormalPage4sizeEv to i8*), i8* bitcast (void (%"class.blink::NormalPage"*)* @_ZN5blink10NormalPage13VerifyMarkingEv to i8*)] }, align 8
@_ZTVN5blink15LargeObjectPageE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::BasePage"*)* @_ZN5blink8BasePageD2Ev to i8*), i8* bitcast (void (%"class.blink::LargeObjectPage"*)* @_ZN5blink15LargeObjectPageD0Ev to i8*), i8* bitcast (i64 (%"class.blink::LargeObjectPage"*)* @_ZN5blink15LargeObjectPage27ObjectPayloadSizeForTestingEv to i8*), i8* bitcast (void (%"class.blink::LargeObjectPage"*)* @_ZN5blink15LargeObjectPage14RemoveFromHeapEv to i8*), i8* bitcast (i1 (%"class.blink::LargeObjectPage"*, i8)* @_ZN5blink15LargeObjectPage5SweepENS_12FinalizeTypeE to i8*), i8* bitcast (void (%"class.blink::LargeObjectPage"*)* @_ZN5blink15LargeObjectPage24MakeConsistentForMutatorEv to i8*), i8* bitcast (void (%"class.blink::LargeObjectPage"*)* @_ZN5blink15LargeObjectPage6UnmarkEv to i8*), i8* bitcast (void (%"class.blink::LargeObjectPage"*, i8)* @_ZN5blink15LargeObjectPage13FinalizeSweepENS_11SweepResultE to i8*), i8* bitcast (void (%"class.blink::LargeObjectPage"*, %"struct.blink::ThreadState::Statistics::ArenaStatistics"*)* @_ZN5blink15LargeObjectPage17CollectStatisticsEPNS_11ThreadState10Statistics15ArenaStatisticsE to i8*), i8* bitcast (i64 (%"class.blink::LargeObjectPage"*)* @_ZNK5blink15LargeObjectPage4sizeEv to i8*), i8* bitcast (void (%"class.blink::LargeObjectPage"*)* @_ZN5blink15LargeObjectPage13VerifyMarkingEv to i8*)] }, align 8
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink8BasePageEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::BasePage *]\00", align 1
@_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E = external local_unnamed_addr global i32, align 4
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@.str.9 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZTVN5blink15MarkingVerifierE = external unnamed_addr constant { [14 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11ThreadState10Statistics15ArenaStatisticsEEEPKcv = private unnamed_addr constant [95 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState::Statistics::ArenaStatistics]\00", align 1
@.str.11 = private unnamed_addr constant [28 x i8] c"position + length <= size()\00", align 1
@_ZZN5blink24ThreadHeapStatsCollector13InternalScopeILNS0_13TraceCategoryE0ELNS0_12ScopeContextE0EE10StartTraceEvE28trace_event_unique_atomic418 = linkonce_odr hidden global i64 0, comdat, align 8
@.str.12 = private unnamed_addr constant [27 x i8] c"blink_gc,devtools.timeline\00", align 1
@.str.13 = private unnamed_addr constant [30 x i8] c"BlinkGC.AtomicPauseCompaction\00", align 1
@.str.14 = private unnamed_addr constant [36 x i8] c"BlinkGC.AtomicPauseCompaction.Minor\00", align 1
@.str.15 = private unnamed_addr constant [32 x i8] c"BlinkGC.AtomicPauseMarkEpilogue\00", align 1
@.str.16 = private unnamed_addr constant [38 x i8] c"BlinkGC.AtomicPauseMarkEpilogue.Minor\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"BlinkGC.AtomicPauseMarkPrologue\00", align 1
@.str.18 = private unnamed_addr constant [38 x i8] c"BlinkGC.AtomicPauseMarkPrologue.Minor\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"BlinkGC.AtomicPauseMarkRoots\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"BlinkGC.AtomicPauseMarkRoots.Minor\00", align 1
@.str.21 = private unnamed_addr constant [41 x i8] c"BlinkGC.AtomicPauseMarkTransitiveClosure\00", align 1
@.str.22 = private unnamed_addr constant [47 x i8] c"BlinkGC.AtomicPauseMarkTransitiveClosure.Minor\00", align 1
@.str.23 = private unnamed_addr constant [35 x i8] c"BlinkGC.AtomicPauseSweepAndCompact\00", align 1
@.str.24 = private unnamed_addr constant [41 x i8] c"BlinkGC.AtomicPauseSweepAndCompact.Minor\00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"BlinkGC.CompleteSweep\00", align 1
@.str.26 = private unnamed_addr constant [28 x i8] c"BlinkGC.CompleteSweep.Minor\00", align 1
@.str.27 = private unnamed_addr constant [35 x i8] c"BlinkGC.IncrementalMarkingFinalize\00", align 1
@.str.28 = private unnamed_addr constant [41 x i8] c"BlinkGC.IncrementalMarkingFinalize.Minor\00", align 1
@.str.29 = private unnamed_addr constant [39 x i8] c"BlinkGC.IncrementalMarkingStartMarking\00", align 1
@.str.30 = private unnamed_addr constant [45 x i8] c"BlinkGC.IncrementalMarkingStartMarking.Minor\00", align 1
@.str.31 = private unnamed_addr constant [31 x i8] c"BlinkGC.IncrementalMarkingStep\00", align 1
@.str.32 = private unnamed_addr constant [37 x i8] c"BlinkGC.IncrementalMarkingStep.Minor\00", align 1
@.str.33 = private unnamed_addr constant [39 x i8] c"BlinkGC.IncrementalMarkingWithDeadline\00", align 1
@.str.34 = private unnamed_addr constant [45 x i8] c"BlinkGC.IncrementalMarkingWithDeadline.Minor\00", align 1
@.str.35 = private unnamed_addr constant [28 x i8] c"BlinkGC.InvokePreFinalizers\00", align 1
@.str.36 = private unnamed_addr constant [34 x i8] c"BlinkGC.InvokePreFinalizers.Minor\00", align 1
@.str.37 = private unnamed_addr constant [24 x i8] c"BlinkGC.LazySweepInIdle\00", align 1
@.str.38 = private unnamed_addr constant [30 x i8] c"BlinkGC.LazySweepInIdle.Minor\00", align 1
@.str.39 = private unnamed_addr constant [30 x i8] c"BlinkGC.LazySweepOnAllocation\00", align 1
@.str.40 = private unnamed_addr constant [36 x i8] c"BlinkGC.LazySweepOnAllocation.Minor\00", align 1
@.str.41 = private unnamed_addr constant [27 x i8] c"BlinkGC.MarkBailOutObjects\00", align 1
@.str.42 = private unnamed_addr constant [33 x i8] c"BlinkGC.MarkBailOutObjects.Minor\00", align 1
@.str.43 = private unnamed_addr constant [37 x i8] c"BlinkGC.MarkInvokeEphemeronCallbacks\00", align 1
@.str.44 = private unnamed_addr constant [43 x i8] c"BlinkGC.MarkInvokeEphemeronCallbacks.Minor\00", align 1
@.str.45 = private unnamed_addr constant [30 x i8] c"BlinkGC.MarkFlushV8References\00", align 1
@.str.46 = private unnamed_addr constant [36 x i8] c"BlinkGC.MarkFlushV8References.Minor\00", align 1
@.str.47 = private unnamed_addr constant [32 x i8] c"BlinkGC.MarkFlushEphemeronPairs\00", align 1
@.str.48 = private unnamed_addr constant [38 x i8] c"BlinkGC.MarkFlushEphemeronPairs.Minor\00", align 1
@.str.49 = private unnamed_addr constant [29 x i8] c"BlinkGC.MarkProcessWorklists\00", align 1
@.str.50 = private unnamed_addr constant [35 x i8] c"BlinkGC.MarkProcessWorklists.Minor\00", align 1
@.str.51 = private unnamed_addr constant [35 x i8] c"BlinkGC.MarkProcessMarkingWorklist\00", align 1
@.str.52 = private unnamed_addr constant [41 x i8] c"BlinkGC.MarkProcessMarkingWorklist.Minor\00", align 1
@.str.53 = private unnamed_addr constant [40 x i8] c"BlinkGC.MarkProcessWriteBarrierWorklist\00", align 1
@.str.54 = private unnamed_addr constant [46 x i8] c"BlinkGC.MarkProcessWriteBarrierWorklist.Minor\00", align 1
@.str.55 = private unnamed_addr constant [48 x i8] c"BlinkGC.MarkProcessNotFullyconstructeddWorklist\00", align 1
@.str.56 = private unnamed_addr constant [54 x i8] c"BlinkGC.MarkProcessNotFullyconstructeddWorklist.Minor\00", align 1
@.str.57 = private unnamed_addr constant [39 x i8] c"BlinkGC.MarkNotFullyConstructedObjects\00", align 1
@.str.58 = private unnamed_addr constant [45 x i8] c"BlinkGC.MarkNotFullyConstructedObjects.Minor\00", align 1
@.str.59 = private unnamed_addr constant [27 x i8] c"BlinkGC.MarkWeakProcessing\00", align 1
@.str.60 = private unnamed_addr constant [33 x i8] c"BlinkGC.MarkWeakProcessing.Minor\00", align 1
@.str.61 = private unnamed_addr constant [27 x i8] c"BlinkGC.UnifiedMarkingStep\00", align 1
@.str.62 = private unnamed_addr constant [33 x i8] c"BlinkGC.UnifiedMarkingStep.Minor\00", align 1
@.str.63 = private unnamed_addr constant [36 x i8] c"BlinkGC.VisitCrossThreadPersistents\00", align 1
@.str.64 = private unnamed_addr constant [42 x i8] c"BlinkGC.VisitCrossThreadPersistents.Minor\00", align 1
@.str.65 = private unnamed_addr constant [29 x i8] c"BlinkGC.VisitPersistentRoots\00", align 1
@.str.66 = private unnamed_addr constant [35 x i8] c"BlinkGC.VisitPersistentRoots.Minor\00", align 1
@.str.67 = private unnamed_addr constant [25 x i8] c"BlinkGC.VisitPersistents\00", align 1
@.str.68 = private unnamed_addr constant [31 x i8] c"BlinkGC.VisitPersistents.Minor\00", align 1
@.str.69 = private unnamed_addr constant [19 x i8] c"BlinkGC.VisitRoots\00", align 1
@.str.70 = private unnamed_addr constant [25 x i8] c"BlinkGC.VisitRoots.Minor\00", align 1
@.str.71 = private unnamed_addr constant [24 x i8] c"BlinkGC.VisitStackRoots\00", align 1
@.str.72 = private unnamed_addr constant [30 x i8] c"BlinkGC.VisitStackRoots.Minor\00", align 1
@.str.73 = private unnamed_addr constant [28 x i8] c"BlinkGC.VisitRememberedSets\00", align 1
@.str.74 = private unnamed_addr constant [34 x i8] c"BlinkGC.VisitRememberedSets.Minor\00", align 1
@_ZZN5blink24ThreadHeapStatsCollector13InternalScopeILNS0_13TraceCategoryE0ELNS0_12ScopeContextE0EE9StopTraceEvE28trace_event_unique_atomic447 = linkonce_odr hidden global i64 0, comdat, align 8
@.str.75 = private unnamed_addr constant [6 x i8] c"epoch\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"forced\00", align 1
@.str.77 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.78 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned long]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10NormalPage19ToBeFinalizedObjectEEEPKcv = private unnamed_addr constant [86 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NormalPage::ToBeFinalizedObject]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10NormalPage19FutureFreelistEntryEEEPKcv = private unnamed_addr constant [86 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NormalPage::FutureFreelistEntry]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11ThreadState10Statistics14PageStatisticsEEEPKcv = private unnamed_addr constant [94 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState::Statistics::PageStatistics]\00", align 1

@_ZN5blink9BaseArenaD1Ev = hidden unnamed_addr alias void (%"class.blink::BaseArena"*), void (%"class.blink::BaseArena"*)* @_ZN5blink9BaseArenaD2Ev
@_ZN5blink15NormalPageArenaC1EPNS_11ThreadStateEi = hidden unnamed_addr alias void (%"class.blink::NormalPageArena"*, %"class.blink::ThreadState"*, i32), void (%"class.blink::NormalPageArena"*, %"class.blink::ThreadState"*, i32)* @_ZN5blink15NormalPageArenaC2EPNS_11ThreadStateEi
@_ZN5blink30PlatformAwareObjectStartBitmapC1EPh = hidden unnamed_addr alias void (%"class.blink::PlatformAwareObjectStartBitmap"*, i8*), void (%"class.blink::PlatformAwareObjectStartBitmap"*, i8*)* @_ZN5blink30PlatformAwareObjectStartBitmapC2EPh
@_ZN5blink17ObjectStartBitmapC1EPh = hidden unnamed_addr alias void (%"class.blink::ObjectStartBitmap"*, i8*), void (%"class.blink::ObjectStartBitmap"*, i8*)* @_ZN5blink17ObjectStartBitmapC2EPh
@_ZN5blink16LargeObjectArenaC1EPNS_11ThreadStateEi = hidden unnamed_addr alias void (%"class.blink::LargeObjectArena"*, %"class.blink::ThreadState"*, i32), void (%"class.blink::LargeObjectArena"*, %"class.blink::ThreadState"*, i32)* @_ZN5blink16LargeObjectArenaC2EPNS_11ThreadStateEi
@_ZN5blink8FreeListC1Ev = hidden unnamed_addr alias void (%"class.blink::FreeList"*), void (%"class.blink::FreeList"*)* @_ZN5blink8FreeListC2Ev
@_ZN5blink10NormalPageC1EPNS_10PageMemoryEPNS_9BaseArenaE = hidden unnamed_addr alias void (%"class.blink::NormalPage"*, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*), void (%"class.blink::NormalPage"*, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*)* @_ZN5blink10NormalPageC2EPNS_10PageMemoryEPNS_9BaseArenaE
@_ZN5blink10NormalPageD1Ev = hidden unnamed_addr alias void (%"class.blink::NormalPage"*), void (%"class.blink::NormalPage"*)* @_ZN5blink10NormalPageD2Ev
@_ZN5blink15LargeObjectPageC1EPNS_10PageMemoryEPNS_9BaseArenaEm = hidden unnamed_addr alias void (%"class.blink::LargeObjectPage"*, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, i64), void (%"class.blink::LargeObjectPage"*, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, i64)* @_ZN5blink15LargeObjectPageC2EPNS_10PageMemoryEPNS_9BaseArenaEm

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HeapObjectHeader8FinalizeEPhm(%"class.blink::HeapObjectHeader"* nocapture readonly, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %0, i64 0, i32 1
  %5 = load i16, i16* %4, align 2
  %6 = lshr i16 %5, 2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %7, i64 0, i32 0
  %9 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %8, align 8
  %10 = zext i16 %6 to i64
  %11 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %9, i64 %10
  %12 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %11, align 8
  %13 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %12, i64 0, i32 1
  %14 = load void (i8*)*, void (i8*)** %13, align 8
  %15 = icmp eq void (i8*)* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %3
  tail call void %14(i8* %1) #16
  br label %17

17:                                               ; preds = %3, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HeapObjectHeader22HasNonTrivialFinalizerEv(%"class.blink::HeapObjectHeader"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %0, i64 0, i32 1
  %3 = load i16, i16* %2, align 2
  %4 = lshr i16 %3, 2
  %5 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %6 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %5, i64 0, i32 0
  %7 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %6, align 8
  %8 = zext i16 %4 to i64
  %9 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %7, i64 %8
  %10 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %9, align 8
  %11 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %10, i64 0, i32 1
  %12 = load void (i8*)*, void (i8*)** %11, align 8
  %13 = icmp ne void (i8*)* %12, null
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK5blink16HeapObjectHeader4NameEv(%"class.blink::HeapObjectHeader"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %0, i64 0, i32 1
  %3 = load i16, i16* %2, align 2
  %4 = lshr i16 %3, 2
  %5 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %6 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %5, i64 0, i32 0
  %7 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %6, align 8
  %8 = zext i16 %4 to i64
  %9 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %7, i64 %8
  %10 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %9, align 8
  %11 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %10, i64 0, i32 2
  %12 = load { i8*, i8 } (i8*)*, { i8*, i8 } (i8*)** %11, align 8
  %13 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %0, i64 1
  %14 = bitcast %"class.blink::HeapObjectHeader"* %13 to i8*
  %15 = tail call { i8*, i8 } %12(i8* %14) #16
  %16 = extractvalue { i8*, i8 } %15, 0
  ret i8* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9BaseArenaC2EPNS_11ThreadStateEi(%"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9BaseArenaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1
  %6 = bitcast %"class.blink::PageStackThreadSafe"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #16
  %7 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %7, i1 zeroext false) #16
  %8 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2
  %9 = bitcast %"class.blink::PageStackThreadSafe"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #16
  %10 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %10, i1 zeroext false) #16
  %11 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3
  %12 = bitcast %"class.blink::PageStackThreadSafe"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #16
  %13 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %13, i1 zeroext false) #16
  %14 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::PageStackThreadSafe"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #16
  %16 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %16, i1 zeroext false) #16
  %17 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 5
  store %"class.blink::ThreadState"* %1, %"class.blink::ThreadState"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 6
  store i32 %2, i32* %18, align 8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink9BaseArenaD0Ev(%"class.blink::BaseArena"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9BaseArena14RemoveAllPagesEv(%"class.blink::BaseArena"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::BaseArena"* %0 to void (%"class.blink::BaseArena"*)***
  %3 = load void (%"class.blink::BaseArena"*)**, void (%"class.blink::BaseArena"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.blink::BaseArena"*)*, void (%"class.blink::BaseArena"*)** %3, i64 3
  %5 = load void (%"class.blink::BaseArena"*)*, void (%"class.blink::BaseArena"*)** %4, align 8
  tail call void %5(%"class.blink::BaseArena"* %0) #16
  %6 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %1, %18
  %11 = phi i32 [ %23, %18 ], [ %8, %1 ]
  %12 = add i32 %11, -1
  %13 = tail call dereferenceable(8) %"class.blink::BasePage"** @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.129"* %6, i32 %12) #16
  %14 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %13, align 8
  %15 = load i32, i32* %7, align 4
  %16 = add i32 %15, -1
  store i32 %16, i32* %7, align 4
  %17 = icmp eq %"class.blink::BasePage"* %14, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %10
  %19 = bitcast %"class.blink::BasePage"* %14 to void (%"class.blink::BasePage"*)***
  %20 = load void (%"class.blink::BasePage"*)**, void (%"class.blink::BasePage"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::BasePage"*)*, void (%"class.blink::BasePage"*)** %20, i64 3
  %22 = load void (%"class.blink::BasePage"*)*, void (%"class.blink::BasePage"*)** %21, align 8
  tail call void %22(%"class.blink::BasePage"* nonnull %14) #16
  %23 = load i32, i32* %7, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %10

25:                                               ; preds = %10, %18, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9BaseArena17CollectStatisticsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_11ThreadState10StatisticsE(%"class.blink::BaseArena"*, %"class.std::__1::basic_string"* nocapture, %"struct.blink::ThreadState::Statistics"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::ThreadState::Statistics::ArenaStatistics", align 8
  %5 = bitcast %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %5) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 160, i1 false) #16
  %6 = bitcast %"class.blink::BaseArena"* %0 to void (%"class.blink::BaseArena"*)***
  %7 = load void (%"class.blink::BaseArena"*)**, void (%"class.blink::BaseArena"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::BaseArena"*)*, void (%"class.blink::BaseArena"*)** %7, i64 6
  %9 = load void (%"class.blink::BaseArena"*)*, void (%"class.blink::BaseArena"*)** %8, align 8
  tail call void %9(%"class.blink::BaseArena"* %0) #16
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %10, i64 24, i1 false) #16
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 0, i8* %12, align 1
  store i8 0, i8* %10, align 1
  %13 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %14, i64 %17
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %20, label %173

20:                                               ; preds = %173, %3
  %21 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 4
  %22 = bitcast %"class.blink::BaseArena"* %0 to void (%"class.blink::BaseArena"*, %"struct.blink::ThreadState::Statistics::FreeListStatistics"*)***
  %23 = load void (%"class.blink::BaseArena"*, %"struct.blink::ThreadState::Statistics::FreeListStatistics"*)**, void (%"class.blink::BaseArena"*, %"struct.blink::ThreadState::Statistics::FreeListStatistics"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::BaseArena"*, %"struct.blink::ThreadState::Statistics::FreeListStatistics"*)*, void (%"class.blink::BaseArena"*, %"struct.blink::ThreadState::Statistics::FreeListStatistics"*)** %23, i64 2
  %25 = load void (%"class.blink::BaseArena"*, %"struct.blink::ThreadState::Statistics::FreeListStatistics"*)*, void (%"class.blink::BaseArena"*, %"struct.blink::ThreadState::Statistics::FreeListStatistics"*)** %24, align 8
  call void %25(%"class.blink::BaseArena"* %0, %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %21) #16
  %26 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 1
  %27 = bitcast i64* %26 to <2 x i64>*
  %28 = load <2 x i64>, <2 x i64>* %27, align 8
  %29 = bitcast %"struct.blink::ThreadState::Statistics"* %2 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 8
  %31 = add <2 x i64> %30, %28
  %32 = bitcast %"struct.blink::ThreadState::Statistics"* %2 to <2 x i64>*
  store <2 x i64> %31, <2 x i64>* %32, align 8
  %33 = getelementptr inbounds %"struct.blink::ThreadState::Statistics", %"struct.blink::ThreadState::Statistics"* %2, i64 0, i32 3
  %34 = getelementptr inbounds %"struct.blink::ThreadState::Statistics", %"struct.blink::ThreadState::Statistics"* %2, i64 0, i32 3, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.blink::ThreadState::Statistics", %"struct.blink::ThreadState::Statistics"* %2, i64 0, i32 3, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %35, %37
  br i1 %38, label %39, label %61, !prof !2

39:                                               ; preds = %20
  %40 = add i32 %35, 1
  %41 = lshr i32 %35, 2
  %42 = add i32 %40, %41
  %43 = icmp ugt i32 %42, 4
  %44 = select i1 %43, i32 %42, i32 4
  %45 = icmp ugt i32 %44, %40
  %46 = select i1 %45, i32 %44, i32 %40
  %47 = icmp ult i32 %35, %46
  br i1 %47, label %48, label %61, !prof !3

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.WTF::Vector.189", %"class.WTF::Vector.189"* %33, i64 0, i32 0, i32 0, i32 0
  %50 = load %"struct.blink::ThreadState::Statistics::ArenaStatistics"*, %"struct.blink::ThreadState::Statistics::ArenaStatistics"** %49, align 8
  %51 = icmp eq %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %50, null
  br i1 %51, label %52, label %60

52:                                               ; preds = %48
  %53 = zext i32 %46 to i64
  %54 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11ThreadState10Statistics15ArenaStatisticsEEEmm(i64 %53) #16
  %55 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %54, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11ThreadState10Statistics15ArenaStatisticsEEEPKcv, i64 0, i64 0)) #16
  %56 = ptrtoint i8* %55 to i64
  %57 = bitcast %"class.WTF::Vector.189"* %33 to i64*
  store atomic i64 %56, i64* %57 monotonic, align 8
  %58 = udiv i64 %54, 160
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %36, align 8
  br label %61

60:                                               ; preds = %48
  call void @_ZN3WTF6VectorIN5blink11ThreadState10Statistics15ArenaStatisticsELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.189"* %33, i32 %46) #16
  br label %61

61:                                               ; preds = %20, %39, %52, %60
  %62 = getelementptr inbounds %"class.WTF::Vector.189", %"class.WTF::Vector.189"* %33, i64 0, i32 0, i32 0, i32 0
  %63 = load %"struct.blink::ThreadState::Statistics::ArenaStatistics"*, %"struct.blink::ThreadState::Statistics::ArenaStatistics"** %62, align 8
  %64 = load i32, i32* %34, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65
  %67 = bitcast %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %5, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #16
  %68 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 1
  %69 = bitcast i64* %68 to i8*
  %70 = bitcast i64* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 16, i1 false) #16
  %71 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 3
  %72 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 3
  %73 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 3, i32 0, i32 0, i32 1
  %74 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 3, i32 0, i32 0, i32 2
  %75 = bitcast %"class.WTF::Vector.197"* %72 to i64*
  %76 = bitcast %"class.WTF::Vector.197"* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #16
  %77 = load i64, i64* %75, align 8
  %78 = bitcast %"class.WTF::Vector.197"* %71 to i64*
  store atomic i64 0, i64* %75 monotonic, align 8
  store atomic i64 %77, i64* %78 monotonic, align 8
  %79 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 3, i32 0, i32 0, i32 1
  %80 = load i32, i32* %73, align 4
  %81 = load i32, i32* %79, align 8
  store i32 %81, i32* %73, align 4
  store i32 %80, i32* %79, align 8
  %82 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 3, i32 0, i32 0, i32 2
  %83 = load i32, i32* %74, align 4
  %84 = load i32, i32* %82, align 4
  store i32 %84, i32* %74, align 4
  store i32 %83, i32* %82, align 4
  %85 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 4
  %86 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 4, i32 0, i32 0, i32 0, i32 1
  %87 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 4, i32 0, i32 0, i32 0, i32 2
  %88 = bitcast %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %21 to i64*
  %89 = bitcast %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %85 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #16
  %90 = load i64, i64* %88, align 8
  %91 = bitcast %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %85 to i64*
  store atomic i64 0, i64* %88 monotonic, align 8
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %93 = load i32, i32* %86, align 4
  %94 = load i32, i32* %92, align 8
  store i32 %94, i32* %86, align 4
  store i32 %93, i32* %92, align 8
  %95 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %96 = load i32, i32* %87, align 4
  %97 = load i32, i32* %95, align 4
  store i32 %97, i32* %87, align 4
  store i32 %96, i32* %95, align 4
  %98 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 4, i32 1
  %99 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 4, i32 1
  %100 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 4, i32 1, i32 0, i32 0, i32 1
  %101 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 4, i32 1, i32 0, i32 0, i32 2
  %102 = bitcast %"class.WTF::Vector.202"* %99 to i64*
  %103 = bitcast %"class.WTF::Vector.202"* %98 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 16, i1 false) #16
  %104 = load i64, i64* %102, align 8
  %105 = bitcast %"class.WTF::Vector.202"* %98 to i64*
  store atomic i64 0, i64* %102 monotonic, align 8
  store atomic i64 %104, i64* %105 monotonic, align 8
  %106 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1
  %107 = load i32, i32* %100, align 4
  %108 = load i32, i32* %106, align 8
  store i32 %108, i32* %100, align 4
  store i32 %107, i32* %106, align 8
  %109 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 4, i32 1, i32 0, i32 0, i32 2
  %110 = load i32, i32* %101, align 4
  %111 = load i32, i32* %109, align 4
  store i32 %111, i32* %101, align 4
  store i32 %110, i32* %109, align 4
  %112 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 4, i32 2
  %113 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 4, i32 2
  %114 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 4, i32 2, i32 0, i32 0, i32 1
  %115 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 4, i32 2, i32 0, i32 0, i32 2
  %116 = bitcast %"class.WTF::Vector.202"* %113 to i64*
  %117 = bitcast %"class.WTF::Vector.202"* %112 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 16, i1 false) #16
  %118 = load i64, i64* %116, align 8
  %119 = bitcast %"class.WTF::Vector.202"* %112 to i64*
  store atomic i64 0, i64* %116 monotonic, align 8
  store atomic i64 %118, i64* %119 monotonic, align 8
  %120 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 4, i32 2, i32 0, i32 0, i32 1
  %121 = load i32, i32* %114, align 4
  %122 = load i32, i32* %120, align 8
  store i32 %122, i32* %114, align 4
  store i32 %121, i32* %120, align 8
  %123 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 4, i32 2, i32 0, i32 0, i32 2
  %124 = load i32, i32* %115, align 4
  %125 = load i32, i32* %123, align 4
  store i32 %125, i32* %115, align 4
  store i32 %124, i32* %123, align 4
  %126 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 5, i32 0
  %127 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 5, i32 0
  %128 = load i64, i64* %127, align 8
  store i64 %128, i64* %126, align 8
  %129 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 5, i32 1
  %130 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 5, i32 1
  %131 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 5, i32 1, i32 0, i32 0, i32 1
  %132 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 5, i32 1, i32 0, i32 0, i32 2
  %133 = bitcast %"class.WTF::Vector.207"* %130 to i64*
  %134 = bitcast %"class.WTF::Vector.207"* %129 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 16, i1 false) #16
  %135 = load i64, i64* %133, align 8
  %136 = bitcast %"class.WTF::Vector.207"* %129 to i64*
  store atomic i64 0, i64* %133 monotonic, align 8
  store atomic i64 %135, i64* %136 monotonic, align 8
  %137 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  %138 = load i32, i32* %131, align 4
  %139 = load i32, i32* %137, align 8
  store i32 %139, i32* %131, align 4
  store i32 %138, i32* %137, align 8
  %140 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 5, i32 1, i32 0, i32 0, i32 2
  %141 = load i32, i32* %132, align 4
  %142 = load i32, i32* %140, align 4
  store i32 %142, i32* %132, align 4
  store i32 %141, i32* %140, align 4
  %143 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 5, i32 2
  %144 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 5, i32 2
  %145 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 5, i32 2, i32 0, i32 0, i32 1
  %146 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 5, i32 2, i32 0, i32 0, i32 2
  %147 = bitcast %"class.WTF::Vector.202"* %144 to i64*
  %148 = bitcast %"class.WTF::Vector.202"* %143 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 16, i1 false) #16
  %149 = load i64, i64* %147, align 8
  %150 = bitcast %"class.WTF::Vector.202"* %143 to i64*
  store atomic i64 0, i64* %147 monotonic, align 8
  store atomic i64 %149, i64* %150 monotonic, align 8
  %151 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %152 = load i32, i32* %145, align 4
  %153 = load i32, i32* %151, align 8
  store i32 %153, i32* %145, align 4
  store i32 %152, i32* %151, align 8
  %154 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 5, i32 2, i32 0, i32 0, i32 2
  %155 = load i32, i32* %146, align 4
  %156 = load i32, i32* %154, align 4
  store i32 %156, i32* %146, align 4
  store i32 %155, i32* %154, align 4
  %157 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 5, i32 3
  %158 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 5, i32 3
  %159 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 5, i32 3, i32 0, i32 0, i32 1
  %160 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %63, i64 %65, i32 5, i32 3, i32 0, i32 0, i32 2
  %161 = bitcast %"class.WTF::Vector.202"* %158 to i64*
  %162 = bitcast %"class.WTF::Vector.202"* %157 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 16, i1 false) #16
  %163 = load i64, i64* %161, align 8
  %164 = bitcast %"class.WTF::Vector.202"* %157 to i64*
  store atomic i64 0, i64* %161 monotonic, align 8
  store atomic i64 %163, i64* %164 monotonic, align 8
  %165 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 5, i32 3, i32 0, i32 0, i32 1
  %166 = load i32, i32* %159, align 4
  %167 = load i32, i32* %165, align 8
  store i32 %167, i32* %159, align 4
  store i32 %166, i32* %165, align 8
  %168 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %4, i64 0, i32 5, i32 3, i32 0, i32 0, i32 2
  %169 = load i32, i32* %160, align 4
  %170 = load i32, i32* %168, align 4
  store i32 %170, i32* %160, align 4
  store i32 %169, i32* %168, align 4
  %171 = load i32, i32* %34, align 4
  %172 = add i32 %171, 1
  store i32 %172, i32* %34, align 4
  call void @_ZN5blink11ThreadState10Statistics15ArenaStatisticsD2Ev(%"struct.blink::ThreadState::Statistics::ArenaStatistics"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %5) #16
  ret void

173:                                              ; preds = %3, %173
  %174 = phi %"class.blink::BasePage"** [ %180, %173 ], [ %14, %3 ]
  %175 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %174, align 8
  %176 = bitcast %"class.blink::BasePage"* %175 to void (%"class.blink::BasePage"*, %"struct.blink::ThreadState::Statistics::ArenaStatistics"*)***
  %177 = load void (%"class.blink::BasePage"*, %"struct.blink::ThreadState::Statistics::ArenaStatistics"*)**, void (%"class.blink::BasePage"*, %"struct.blink::ThreadState::Statistics::ArenaStatistics"*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.blink::BasePage"*, %"struct.blink::ThreadState::Statistics::ArenaStatistics"*)*, void (%"class.blink::BasePage"*, %"struct.blink::ThreadState::Statistics::ArenaStatistics"*)** %177, i64 8
  %179 = load void (%"class.blink::BasePage"*, %"struct.blink::ThreadState::Statistics::ArenaStatistics"*)*, void (%"class.blink::BasePage"*, %"struct.blink::ThreadState::Statistics::ArenaStatistics"*)** %178, align 8
  call void %179(%"class.blink::BasePage"* %175, %"struct.blink::ThreadState::Statistics::ArenaStatistics"* nonnull %4) #16
  %180 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %174, i64 1
  %181 = icmp eq %"class.blink::BasePage"** %180, %18
  br i1 %181, label %20, label %173
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11ThreadState10Statistics15ArenaStatisticsD2Ev(%"struct.blink::ThreadState::Statistics::ArenaStatistics"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %0, i64 0, i32 5, i32 3, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  %5 = bitcast i64* %3 to i8*
  br i1 %4, label %12, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %0, i64 0, i32 5, i32 3, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !2

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #16
  store i64* null, i64** %2, align 8
  br label %12

12:                                               ; preds = %11, %1
  %13 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = icmp eq i64* %14, null
  %16 = bitcast i64* %14 to i8*
  br i1 %15, label %23, label %17, !prof !3

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !2

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #16
  store i64* null, i64** %13, align 8
  br label %23

23:                                               ; preds = %22, %12
  %24 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %0, i64 0, i32 5, i32 1
  %25 = getelementptr inbounds %"class.WTF::Vector.207", %"class.WTF::Vector.207"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %27 = icmp eq %"class.std::__1::basic_string"* %26, null
  br i1 %27, label %53, label %28, !prof !3

28:                                               ; preds = %23
  %29 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %30 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %51, label %33, !prof !2

33:                                               ; preds = %28
  %34 = zext i32 %31 to i64
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 %34
  br label %36

36:                                               ; preds = %45, %33
  %37 = phi %"class.std::__1::basic_string"* [ %46, %45 ], [ %26, %33 ]
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #18
  br label %45

45:                                               ; preds = %42, %36
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 1
  %47 = icmp eq %"class.std::__1::basic_string"* %46, %35
  br i1 %47, label %48, label %36

48:                                               ; preds = %45
  store i32 0, i32* %30, align 4
  %49 = bitcast %"class.WTF::Vector.207"* %24 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %28
  %52 = phi i8* [ %50, %48 ], [ %29, %28 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #16
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %25, align 8
  br label %53

53:                                               ; preds = %23, %51
  %54 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = icmp eq i64* %55, null
  %57 = bitcast i64* %55 to i8*
  br i1 %56, label %64, label %58, !prof !3

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %63, label %62, !prof !2

62:                                               ; preds = %58
  store i32 0, i32* %59, align 4
  br label %63

63:                                               ; preds = %62, %58
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #16
  store i64* null, i64** %54, align 8
  br label %64

64:                                               ; preds = %63, %53
  %65 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %66, null
  %68 = bitcast i64* %66 to i8*
  br i1 %67, label %75, label %69, !prof !3

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %74, label %73, !prof !2

73:                                               ; preds = %69
  store i32 0, i32* %70, align 4
  br label %74

74:                                               ; preds = %73, %69
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %68) #16
  store i64* null, i64** %65, align 8
  br label %75

75:                                               ; preds = %74, %64
  %76 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = icmp eq i64* %77, null
  %79 = bitcast i64* %77 to i8*
  br i1 %78, label %86, label %80, !prof !3

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %85, label %84, !prof !2

84:                                               ; preds = %80
  store i32 0, i32* %81, align 4
  br label %85

85:                                               ; preds = %84, %80
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %79) #16
  store i64* null, i64** %76, align 8
  br label %86

86:                                               ; preds = %75, %85
  %87 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %88 = load %"struct.blink::ThreadState::Statistics::PageStatistics"*, %"struct.blink::ThreadState::Statistics::PageStatistics"** %87, align 8
  %89 = icmp eq %"struct.blink::ThreadState::Statistics::PageStatistics"* %88, null
  %90 = bitcast %"struct.blink::ThreadState::Statistics::PageStatistics"* %88 to i8*
  br i1 %89, label %97, label %91, !prof !3

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %96, label %95, !prof !2

95:                                               ; preds = %91
  store i32 0, i32* %92, align 4
  br label %96

96:                                               ; preds = %95, %91
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %90) #16
  store %"struct.blink::ThreadState::Statistics::PageStatistics"* null, %"struct.blink::ThreadState::Statistics::PageStatistics"** %87, align 8
  br label %97

97:                                               ; preds = %86, %96
  %98 = bitcast %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  tail call void @_ZdlPv(i8* %104) #18
  br label %105

105:                                              ; preds = %97, %102
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5blink9BaseArena14AllocatedBytesEv(%"class.blink::BaseArena"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %33, label %7

7:                                                ; preds = %1
  %8 = zext i32 %5 to i64
  %9 = shl nuw nsw i64 %8, 3
  %10 = add nsw i64 %9, -8
  %11 = lshr exact i64 %10, 3
  %12 = add nuw nsw i64 %11, 1
  %13 = and i64 %12, 7
  %14 = icmp ult i64 %10, 56
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  %16 = sub nsw i64 %12, %13
  br label %35

17:                                               ; preds = %35, %7
  %18 = phi i64 [ undef, %7 ], [ %77, %35 ]
  %19 = phi i64 [ 0, %7 ], [ %77, %35 ]
  %20 = phi %"class.blink::BasePage"** [ %3, %7 ], [ %78, %35 ]
  %21 = icmp eq i64 %13, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %17, %22
  %23 = phi i64 [ %29, %22 ], [ %19, %17 ]
  %24 = phi %"class.blink::BasePage"** [ %30, %22 ], [ %20, %17 ]
  %25 = phi i64 [ %31, %22 ], [ %13, %17 ]
  %26 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %24, align 8
  %27 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %26, i64 0, i32 4
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, %23
  %30 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %24, i64 1
  %31 = add i64 %25, -1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %22, !llvm.loop !4

33:                                               ; preds = %17, %22, %1
  %34 = phi i64 [ 0, %1 ], [ %18, %17 ], [ %29, %22 ]
  ret i64 %34

35:                                               ; preds = %35, %15
  %36 = phi i64 [ 0, %15 ], [ %77, %35 ]
  %37 = phi %"class.blink::BasePage"** [ %3, %15 ], [ %78, %35 ]
  %38 = phi i64 [ %16, %15 ], [ %79, %35 ]
  %39 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %37, align 8
  %40 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %39, i64 0, i32 4
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, %36
  %43 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %37, i64 1
  %44 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %44, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %42
  %48 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %37, i64 2
  %49 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %49, i64 0, i32 4
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, %47
  %53 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %37, i64 3
  %54 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %54, i64 0, i32 4
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, %52
  %58 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %37, i64 4
  %59 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %59, i64 0, i32 4
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, %57
  %63 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %37, i64 5
  %64 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %64, i64 0, i32 4
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, %62
  %68 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %37, i64 6
  %69 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %69, i64 0, i32 4
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, %67
  %73 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %37, i64 7
  %74 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %74, i64 0, i32 4
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, %72
  %78 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %37, i64 8
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %17, label %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NormalPageArena25CollectFreeListStatisticsEPNS_11ThreadState10Statistics18FreeListStatisticsE(%"class.blink::NormalPageArena"* nocapture readonly, %"struct.blink::ThreadState::Statistics::FreeListStatistics"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2
  tail call void @_ZN5blink8FreeList17CollectStatisticsEPNS_11ThreadState10Statistics18FreeListStatisticsE(%"class.blink::FreeList"* %3, %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FreeList17CollectStatisticsEPNS_11ThreadState10Statistics18FreeListStatisticsE(%"class.blink::FreeList"* nocapture readonly, %"struct.blink::ThreadState::Statistics::FreeListStatistics"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.202", align 8
  %4 = alloca %"class.WTF::Vector.202", align 8
  %5 = alloca %"class.WTF::Vector.202", align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = bitcast %"class.WTF::Vector.202"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %3, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #16
  %13 = bitcast %"class.WTF::Vector.202"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #16
  %14 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %4, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %4, i64 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #16
  %17 = bitcast %"class.WTF::Vector.202"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %5, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %5, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #16
  %21 = bitcast i64* %6 to i8*
  %22 = bitcast i64* %7 to i8*
  %23 = bitcast i32* %8 to i8*
  br label %93

24:                                               ; preds = %136
  %25 = bitcast %"class.WTF::Vector.202"* %3 to i64*
  %26 = load i64, i64* %25, align 8
  store atomic i64 0, i64* %25 monotonic, align 8
  %27 = load i32, i32* %11, align 8
  store i32 0, i32* %11, align 8
  %28 = load i32, i32* %12, align 4
  store i32 0, i32* %12, align 4
  %29 = bitcast %"class.WTF::Vector.202"* %4 to i64*
  %30 = load i64, i64* %29, align 8
  store atomic i64 0, i64* %29 monotonic, align 8
  %31 = load i32, i32* %15, align 8
  store i32 0, i32* %15, align 8
  %32 = load i32, i32* %16, align 4
  store i32 0, i32* %16, align 4
  %33 = bitcast %"class.WTF::Vector.202"* %5 to i64*
  %34 = load i64, i64* %33, align 8
  store atomic i64 0, i64* %33 monotonic, align 8
  %35 = load i32, i32* %19, align 8
  store i32 0, i32* %19, align 8
  %36 = load i32, i32* %20, align 4
  store i32 0, i32* %20, align 4
  %37 = bitcast %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %1 to i64*
  %38 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::FreeListStatistics", %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  store atomic i64 %26, i64* %37 monotonic, align 8
  %40 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::FreeListStatistics", %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 %27, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::FreeListStatistics", %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %28, i32* %41, align 4
  %42 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::FreeListStatistics", %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %1, i64 0, i32 1
  %43 = bitcast %"class.WTF::Vector.202"* %42 to i64*
  %44 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %42, i64 0, i32 0, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  store atomic i64 %30, i64* %43 monotonic, align 8
  %46 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::FreeListStatistics", %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 %31, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::FreeListStatistics", %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %32, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::FreeListStatistics", %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %1, i64 0, i32 2
  %49 = bitcast %"class.WTF::Vector.202"* %48 to i64*
  %50 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %48, i64 0, i32 0, i32 0, i32 0
  %51 = load i64*, i64** %50, align 8
  store atomic i64 %34, i64* %49 monotonic, align 8
  %52 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::FreeListStatistics", %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  store i32 %35, i32* %52, align 4
  %53 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::FreeListStatistics", %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  store i32 %36, i32* %53, align 4
  %54 = icmp eq i64* %51, null
  br i1 %54, label %57, label %55, !prof !3

55:                                               ; preds = %24
  %56 = bitcast i64* %51 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #16
  br label %57

57:                                               ; preds = %55, %24
  %58 = icmp eq i64* %45, null
  br i1 %58, label %61, label %59, !prof !3

59:                                               ; preds = %57
  %60 = bitcast i64* %45 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %60) #16
  br label %61

61:                                               ; preds = %59, %57
  %62 = icmp eq i64* %39, null
  br i1 %62, label %65, label %63, !prof !3

63:                                               ; preds = %61
  %64 = bitcast i64* %39 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %64) #16
  br label %65

65:                                               ; preds = %61, %63
  %66 = load i64*, i64** %18, align 8
  %67 = icmp eq i64* %66, null
  %68 = bitcast i64* %66 to i8*
  br i1 %67, label %74, label %69, !prof !3

69:                                               ; preds = %65
  %70 = load i32, i32* %20, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %73, label %72, !prof !2

72:                                               ; preds = %69
  store i32 0, i32* %20, align 4
  br label %73

73:                                               ; preds = %72, %69
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %68) #16
  store i64* null, i64** %18, align 8
  br label %74

74:                                               ; preds = %65, %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #16
  %75 = load i64*, i64** %14, align 8
  %76 = icmp eq i64* %75, null
  %77 = bitcast i64* %75 to i8*
  br i1 %76, label %83, label %78, !prof !3

78:                                               ; preds = %74
  %79 = load i32, i32* %16, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81, !prof !2

81:                                               ; preds = %78
  store i32 0, i32* %16, align 4
  br label %82

82:                                               ; preds = %81, %78
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %77) #16
  store i64* null, i64** %14, align 8
  br label %83

83:                                               ; preds = %74, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #16
  %84 = load i64*, i64** %10, align 8
  %85 = icmp eq i64* %84, null
  %86 = bitcast i64* %84 to i8*
  br i1 %85, label %92, label %87, !prof !3

87:                                               ; preds = %83
  %88 = load i32, i32* %12, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %91, label %90, !prof !2

90:                                               ; preds = %87
  store i32 0, i32* %12, align 4
  br label %91

91:                                               ; preds = %90, %87
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %86) #16
  store i64* null, i64** %10, align 8
  br label %92

92:                                               ; preds = %83, %91
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #16
  ret void

93:                                               ; preds = %136, %2
  %94 = phi i64 [ 0, %2 ], [ %137, %136 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  store i64 0, i64* %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  store i64 0, i64* %7, align 8
  %95 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 %94
  %96 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %95, align 8
  %97 = icmp eq %"class.blink::FreeListEntry"* %96, null
  br i1 %97, label %98, label %139

98:                                               ; preds = %139, %93
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #16
  %99 = trunc i64 %94 to i32
  %100 = shl i32 1, %99
  store i32 %100, i32* %8, align 4
  %101 = load i32, i32* %12, align 4
  %102 = load i32, i32* %11, align 8
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %111, label %104, !prof !2

104:                                              ; preds = %98
  %105 = load i64*, i64** %10, align 8
  %106 = zext i32 %101 to i64
  %107 = getelementptr inbounds i64, i64* %105, i64 %106
  %108 = sext i32 %100 to i64
  store i64 %108, i64* %107, align 8
  %109 = load i32, i32* %12, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %12, align 4
  br label %112

111:                                              ; preds = %98
  call void @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_(%"class.WTF::Vector.202"* nonnull %3, i32* nonnull dereferenceable(4) %8) #16
  br label %112

112:                                              ; preds = %104, %111
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #16
  %113 = load i32, i32* %16, align 4
  %114 = load i32, i32* %15, align 8
  %115 = icmp eq i32 %113, %114
  br i1 %115, label %123, label %116, !prof !2

116:                                              ; preds = %112
  %117 = load i64*, i64** %14, align 8
  %118 = zext i32 %113 to i64
  %119 = getelementptr inbounds i64, i64* %117, i64 %118
  %120 = load i64, i64* %6, align 8
  store i64 %120, i64* %119, align 8
  %121 = load i32, i32* %16, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %16, align 4
  br label %124

123:                                              ; preds = %112
  call void @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRmEEvOT_(%"class.WTF::Vector.202"* nonnull %4, i64* nonnull dereferenceable(8) %6) #16
  br label %124

124:                                              ; preds = %116, %123
  %125 = load i32, i32* %20, align 4
  %126 = load i32, i32* %19, align 8
  %127 = icmp eq i32 %125, %126
  br i1 %127, label %135, label %128, !prof !2

128:                                              ; preds = %124
  %129 = load i64*, i64** %18, align 8
  %130 = zext i32 %125 to i64
  %131 = getelementptr inbounds i64, i64* %129, i64 %130
  %132 = load i64, i64* %7, align 8
  store i64 %132, i64* %131, align 8
  %133 = load i32, i32* %20, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %20, align 4
  br label %136

135:                                              ; preds = %124
  call void @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRmEEvOT_(%"class.WTF::Vector.202"* nonnull %5, i64* nonnull dereferenceable(8) %7) #16
  br label %136

136:                                              ; preds = %128, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  %137 = add nuw nsw i64 %94, 1
  %138 = icmp eq i64 %137, 17
  br i1 %138, label %24, label %93

139:                                              ; preds = %93, %139
  %140 = phi i64 [ %149, %139 ], [ 0, %93 ]
  %141 = phi i64 [ %143, %139 ], [ 0, %93 ]
  %142 = phi %"class.blink::FreeListEntry"* [ %151, %139 ], [ %96, %93 ]
  %143 = add i64 %141, 1
  store i64 %143, i64* %6, align 8
  %144 = getelementptr inbounds %"class.blink::FreeListEntry", %"class.blink::FreeListEntry"* %142, i64 0, i32 0, i32 2
  %145 = load i16, i16* %144, align 2
  %146 = lshr i16 %145, 2
  %147 = zext i16 %146 to i64
  %148 = shl nuw nsw i64 %147, 3
  %149 = add i64 %148, %140
  store i64 %149, i64* %7, align 8
  %150 = getelementptr inbounds %"class.blink::FreeListEntry", %"class.blink::FreeListEntry"* %142, i64 0, i32 1
  %151 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %150, align 8
  %152 = icmp eq %"class.blink::FreeListEntry"* %151, null
  br i1 %152, label %98, label %139
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9BaseArena19MakeConsistentForGCEv(%"class.blink::BaseArena"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %3) #16
  %4 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %3) #16
  br i1 %6, label %7, label %17

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %8) #16
  %9 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %8) #16
  br i1 %11, label %12, label %17

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %13) #16
  %14 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %13) #16
  br i1 %16, label %20, label %17

17:                                               ; preds = %1, %7, %12
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0), i32 192, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0)) #16
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  br label %20

20:                                               ; preds = %12, %17
  %21 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 5
  %22 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %23, align 8
  %25 = call %"class.blink::HeapCompact"* @_ZN5blink10ThreadHeap10CompactionEv(%"class.blink::ThreadHeap"* %24) #16
  %26 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %25, i64 0, i32 2
  %27 = load i8, i8* %26, align 8, !range !6
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 6
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %25, i64 0, i32 6
  %33 = load i32, i32* %32, align 8
  %34 = shl i32 1, %31
  %35 = and i32 %33, %34
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %55, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %38, align 8
  %40 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %39, i64 %42
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %37, %52
  %46 = phi %"class.blink::BasePage"** [ %53, %52 ], [ %39, %37 ]
  %47 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %47, i64 0, i32 7
  %49 = load i8, i8* %48, align 2
  %50 = icmp eq i8 %49, 1
  br i1 %50, label %52, label %51

51:                                               ; preds = %45
  call void @_ZN5blink11HeapCompact17AddCompactingPageEPNS_8BasePageE(%"class.blink::HeapCompact"* %25, %"class.blink::BasePage"* %47) #16
  br label %52

52:                                               ; preds = %51, %45
  %53 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %46, i64 1
  %54 = icmp eq %"class.blink::BasePage"** %53, %43
  br i1 %54, label %55, label %45

55:                                               ; preds = %52, %37, %29, %20
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare %"class.blink::HeapCompact"* @_ZN5blink10ThreadHeap10CompactionEv(%"class.blink::ThreadHeap"*) local_unnamed_addr #6

declare void @_ZN5blink11HeapCompact17AddCompactingPageEPNS_8BasePageE(%"class.blink::HeapCompact"*, %"class.blink::BasePage"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9BaseArena24MakeConsistentForMutatorEv(%"class.blink::BaseArena"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::BaseArena"* %0 to void (%"class.blink::BaseArena"*)***
  %3 = load void (%"class.blink::BaseArena"*)**, void (%"class.blink::BaseArena"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.blink::BaseArena"*)*, void (%"class.blink::BaseArena"*)** %3, i64 3
  %5 = load void (%"class.blink::BaseArena"*)*, void (%"class.blink::BaseArena"*)** %4, align 8
  tail call void %5(%"class.blink::BaseArena"* %0) #16
  %6 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %14, label %37

14:                                               ; preds = %1
  %15 = ptrtoint %"class.blink::BasePage"** %8 to i64
  %16 = bitcast %"class.blink::PageStackThreadSafe"* %6 to i64*
  br label %21

17:                                               ; preds = %37
  %18 = bitcast %"class.blink::PageStackThreadSafe"* %6 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = load i32, i32* %9, align 4
  br label %21

21:                                               ; preds = %14, %17
  %22 = phi i64* [ %16, %14 ], [ %18, %17 ]
  %23 = phi i32 [ 0, %14 ], [ %20, %17 ]
  %24 = phi i64 [ %15, %14 ], [ %19, %17 ]
  %25 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1
  %26 = bitcast %"class.blink::PageStackThreadSafe"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  store atomic i64 %27, i64* %22 monotonic, align 8
  store atomic i64 %24, i64* %26 monotonic, align 8
  %28 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  %32 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  store i32 %23, i32* %32, align 4
  store i32 %33, i32* %9, align 4
  %34 = load void (%"class.blink::BaseArena"*)**, void (%"class.blink::BaseArena"*)*** %2, align 8
  %35 = getelementptr inbounds void (%"class.blink::BaseArena"*)*, void (%"class.blink::BaseArena"*)** %34, i64 7
  %36 = load void (%"class.blink::BaseArena"*)*, void (%"class.blink::BaseArena"*)** %35, align 8
  tail call void %36(%"class.blink::BaseArena"* %0) #16
  ret void

37:                                               ; preds = %1, %37
  %38 = phi %"class.blink::BasePage"** [ %45, %37 ], [ %8, %1 ]
  %39 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %38, align 8
  %40 = bitcast %"class.blink::BasePage"* %39 to void (%"class.blink::BasePage"*)***
  %41 = load void (%"class.blink::BasePage"*)**, void (%"class.blink::BasePage"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::BasePage"*)*, void (%"class.blink::BasePage"*)** %41, i64 5
  %43 = load void (%"class.blink::BasePage"*)*, void (%"class.blink::BasePage"*)** %42, align 8
  tail call void %43(%"class.blink::BasePage"* %39) #16
  %44 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %39, i64 0, i32 5
  store i8 1, i8* %44, align 8
  %45 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %38, i64 1
  %46 = icmp eq %"class.blink::BasePage"** %45, %12
  br i1 %46, label %17, label %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9BaseArena6UnmarkEv(%"class.blink::BaseArena"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %10, %1
  ret void

10:                                               ; preds = %1, %10
  %11 = phi %"class.blink::BasePage"** [ %17, %10 ], [ %3, %1 ]
  %12 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %11, align 8
  %13 = bitcast %"class.blink::BasePage"* %12 to void (%"class.blink::BasePage"*)***
  %14 = load void (%"class.blink::BasePage"*)**, void (%"class.blink::BasePage"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::BasePage"*)*, void (%"class.blink::BasePage"*)** %14, i64 6
  %16 = load void (%"class.blink::BasePage"*)*, void (%"class.blink::BasePage"*)** %15, align 8
  tail call void %16(%"class.blink::BasePage"* %12) #16
  %17 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %11, i64 1
  %18 = icmp eq %"class.blink::BasePage"** %17, %7
  br i1 %18, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink9BaseArena27ObjectPayloadSizeForTestingEv(%"class.blink::BaseArena"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %11, %1
  %10 = phi i64 [ 0, %1 ], [ %20, %11 ]
  ret i64 %10

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %20, %11 ], [ 0, %1 ]
  %13 = phi %"class.blink::BasePage"** [ %21, %11 ], [ %3, %1 ]
  %14 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %13, align 8
  %15 = bitcast %"class.blink::BasePage"* %14 to i64 (%"class.blink::BasePage"*)***
  %16 = load i64 (%"class.blink::BasePage"*)**, i64 (%"class.blink::BasePage"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.blink::BasePage"*)*, i64 (%"class.blink::BasePage"*)** %16, i64 2
  %18 = load i64 (%"class.blink::BasePage"*)*, i64 (%"class.blink::BasePage"*)** %17, align 8
  %19 = tail call i64 %18(%"class.blink::BasePage"* %14) #16
  %20 = add i64 %19, %12
  %21 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %13, i64 1
  %22 = icmp eq %"class.blink::BasePage"** %21, %7
  br i1 %22, label %9, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9BaseArena15PrepareForSweepENS_7BlinkGC14CollectionTypeE(%"class.blink::BaseArena"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::BasePage"*, align 8
  %4 = bitcast %"class.blink::BaseArena"* %0 to void (%"class.blink::BaseArena"*)***
  %5 = load void (%"class.blink::BaseArena"*)**, void (%"class.blink::BaseArena"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BaseArena"*)*, void (%"class.blink::BaseArena"*)** %5, i64 3
  %7 = load void (%"class.blink::BaseArena"*)*, void (%"class.blink::BaseArena"*)** %6, align 8
  tail call void %7(%"class.blink::BaseArena"* %0) #16
  %8 = load void (%"class.blink::BaseArena"*)**, void (%"class.blink::BaseArena"*)*** %4, align 8
  %9 = getelementptr inbounds void (%"class.blink::BaseArena"*)*, void (%"class.blink::BaseArena"*)** %8, i64 7
  %10 = load void (%"class.blink::BaseArena"*)*, void (%"class.blink::BaseArena"*)** %9, align 8
  tail call void %10(%"class.blink::BaseArena"* %0) #16
  %11 = icmp eq i32 %1, 0
  br i1 %11, label %12, label %101

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::Vector.129", %"class.WTF::Vector.129"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %51, label %19

19:                                               ; preds = %12
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %15, i64 %20
  br label %22

22:                                               ; preds = %19, %45
  %23 = phi %"class.blink::BasePage"** [ %38, %45 ], [ %21, %19 ]
  %24 = phi %"class.blink::BasePage"** [ %49, %45 ], [ %15, %19 ]
  br label %25

25:                                               ; preds = %33, %22
  %26 = phi %"class.blink::BasePage"** [ %24, %22 ], [ %34, %33 ]
  %27 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %27, i64 0, i32 6
  %29 = load i8, i8* %28, align 1, !range !6
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = ptrtoint %"class.blink::BasePage"* %27 to i64
  br label %36

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %26, i64 1
  %35 = icmp eq %"class.blink::BasePage"** %34, %23
  br i1 %35, label %51, label %25

36:                                               ; preds = %40, %31
  %37 = phi %"class.blink::BasePage"** [ %38, %40 ], [ %23, %31 ]
  %38 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %37, i64 -1
  %39 = icmp eq %"class.blink::BasePage"** %26, %38
  br i1 %39, label %51, label %40

40:                                               ; preds = %36
  %41 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %38, align 8
  %42 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %41, i64 0, i32 6
  %43 = load i8, i8* %42, align 1, !range !6
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %36

45:                                               ; preds = %40
  %46 = ptrtoint %"class.blink::BasePage"* %41 to i64
  %47 = bitcast %"class.blink::BasePage"** %26 to i64*
  %48 = bitcast %"class.blink::BasePage"** %38 to i64*
  store i64 %46, i64* %47, align 8
  store i64 %32, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %26, i64 1
  %50 = icmp eq %"class.blink::BasePage"** %49, %38
  br i1 %50, label %51, label %22

51:                                               ; preds = %45, %33, %36, %12
  %52 = phi %"class.blink::BasePage"** [ %15, %12 ], [ %26, %36 ], [ %23, %33 ], [ %38, %45 ]
  %53 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %14, align 8
  %54 = load i32, i32* %16, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %53, i64 %55
  %57 = icmp eq %"class.blink::BasePage"** %52, %56
  br i1 %57, label %65, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0
  %60 = bitcast %"class.blink::BasePage"** %3 to i8*
  %61 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %62 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.blink::PageStack", %"class.blink::PageStack"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.blink::PageStack", %"class.blink::PageStack"* %59, i64 0, i32 0
  br label %77

65:                                               ; preds = %94, %51
  %66 = phi %"class.blink::BasePage"** [ %53, %51 ], [ %96, %94 ]
  %67 = phi %"class.blink::BasePage"** [ %52, %51 ], [ %95, %94 ]
  %68 = ptrtoint %"class.blink::BasePage"** %66 to i64
  %69 = ptrtoint %"class.blink::BasePage"** %52 to i64
  %70 = sub i64 %69, %68
  %71 = lshr exact i64 %70, 3
  %72 = trunc i64 %71 to i32
  %73 = ptrtoint %"class.blink::BasePage"** %67 to i64
  %74 = sub i64 %73, %69
  %75 = lshr exact i64 %74, 3
  %76 = trunc i64 %75 to i32
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE7EraseAtEjj(%"class.WTF::Vector.129"* %13, i32 %72, i32 %76) #16
  br label %175

77:                                               ; preds = %58, %94
  %78 = phi %"class.blink::BasePage"** [ %52, %58 ], [ %95, %94 ]
  %79 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %79, i64 0, i32 5
  store i8 0, i8* %80, align 8
  %81 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %79, i64 0, i32 6
  store i8 0, i8* %81, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60)
  store %"class.blink::BasePage"* %79, %"class.blink::BasePage"** %3, align 8
  %82 = load i32, i32* %61, align 4
  %83 = load i32, i32* %62, align 8
  %84 = icmp eq i32 %82, %83
  br i1 %84, label %93, label %85, !prof !2

85:                                               ; preds = %77
  %86 = ptrtoint %"class.blink::BasePage"* %79 to i64
  %87 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %63, align 8
  %88 = zext i32 %82 to i64
  %89 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %87, i64 %88
  %90 = bitcast %"class.blink::BasePage"** %89 to i64*
  store i64 %86, i64* %90, align 8
  %91 = load i32, i32* %61, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %61, align 4
  br label %94

93:                                               ; preds = %77
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %64, %"class.blink::BasePage"** nonnull dereferenceable(8) %3) #16
  br label %94

94:                                               ; preds = %85, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60)
  %95 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %78, i64 1
  %96 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %14, align 8
  %97 = load i32, i32* %16, align 4
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %96, i64 %98
  %100 = icmp eq %"class.blink::BasePage"** %95, %99
  br i1 %100, label %65, label %77

101:                                              ; preds = %2
  %102 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1
  %103 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %103, align 8
  %105 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %104, i64 %107
  %109 = icmp eq i32 %106, 0
  br i1 %109, label %128, label %110

110:                                              ; preds = %101
  %111 = shl nuw nsw i64 %107, 3
  %112 = add nsw i64 %111, -8
  %113 = lshr exact i64 %112, 3
  %114 = add nuw nsw i64 %113, 1
  %115 = and i64 %114, 7
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %110, %117
  %118 = phi %"class.blink::BasePage"** [ %122, %117 ], [ %104, %110 ]
  %119 = phi i64 [ %123, %117 ], [ %115, %110 ]
  %120 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %118, align 8
  %121 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %120, i64 0, i32 5
  store i8 0, i8* %121, align 8
  %122 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %118, i64 1
  %123 = add i64 %119, -1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %117, !llvm.loop !7

125:                                              ; preds = %117, %110
  %126 = phi %"class.blink::BasePage"** [ %104, %110 ], [ %122, %117 ]
  %127 = icmp ult i64 %112, 56
  br i1 %127, label %131, label %148

128:                                              ; preds = %101
  %129 = ptrtoint %"class.blink::BasePage"** %104 to i64
  %130 = bitcast %"class.blink::PageStackThreadSafe"* %102 to i64*
  br label %135

131:                                              ; preds = %148, %125
  %132 = bitcast %"class.blink::PageStackThreadSafe"* %102 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = load i32, i32* %105, align 4
  br label %135

135:                                              ; preds = %128, %131
  %136 = phi i64* [ %130, %128 ], [ %132, %131 ]
  %137 = phi i32 [ 0, %128 ], [ %134, %131 ]
  %138 = phi i64 [ %129, %128 ], [ %133, %131 ]
  %139 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2
  %140 = bitcast %"class.blink::PageStackThreadSafe"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  store atomic i64 %141, i64* %136 monotonic, align 8
  store atomic i64 %138, i64* %140 monotonic, align 8
  %142 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %143 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = load i32, i32* %142, align 4
  %145 = load i32, i32* %143, align 4
  store i32 %145, i32* %142, align 4
  store i32 %144, i32* %143, align 4
  %146 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %147 = load i32, i32* %146, align 4
  store i32 %137, i32* %146, align 4
  store i32 %147, i32* %105, align 4
  br label %175

148:                                              ; preds = %125, %148
  %149 = phi %"class.blink::BasePage"** [ %173, %148 ], [ %126, %125 ]
  %150 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %150, i64 0, i32 5
  store i8 0, i8* %151, align 8
  %152 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %149, i64 1
  %153 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %152, align 8
  %154 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %153, i64 0, i32 5
  store i8 0, i8* %154, align 8
  %155 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %149, i64 2
  %156 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %156, i64 0, i32 5
  store i8 0, i8* %157, align 8
  %158 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %149, i64 3
  %159 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %159, i64 0, i32 5
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %149, i64 4
  %162 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %162, i64 0, i32 5
  store i8 0, i8* %163, align 8
  %164 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %149, i64 5
  %165 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %165, i64 0, i32 5
  store i8 0, i8* %166, align 8
  %167 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %149, i64 6
  %168 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %168, i64 0, i32 5
  store i8 0, i8* %169, align 8
  %170 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %149, i64 7
  %171 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %170, align 8
  %172 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %171, i64 0, i32 5
  store i8 0, i8* %172, align 8
  %173 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %149, i64 8
  %174 = icmp eq %"class.blink::BasePage"** %173, %108
  br i1 %174, label %131, label %148

175:                                              ; preds = %135, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5blink9BaseArena9LazySweepEmm(%"class.blink::BaseArena"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.blink::ThreadHeapStatsCollector::InternalScope", align 8
  %8 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %8) #16
  %9 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %8) #16
  br i1 %11, label %12, label %22

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %13) #16
  %14 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %13) #16
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %18) #16
  %19 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %18) #16
  br i1 %21, label %75, label %22

22:                                               ; preds = %3, %12, %17
  %23 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 5
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 16
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 2
  br i1 %27, label %32, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0), i32 290, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0)) #16
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  br label %32

32:                                               ; preds = %22, %28
  %33 = phi %"class.blink::ThreadState"* [ %24, %22 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 7
  %35 = load i8, i8* %34, align 1, !range !6
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %75

37:                                               ; preds = %32
  %38 = bitcast %"class.blink::ThreadHeapStatsCollector::InternalScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #16
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.blink::ThreadHeapStatsCollector::InternalScope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false)
  %41 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %39, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %41, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %42, align 8
  call void @_ZN5blink24ThreadHeapStatsCollector13InternalScopeILNS0_13TraceCategoryE0ELNS0_12ScopeContextE0EEC2IJEEEPS0_NS0_2IdEDpT_(%"class.blink::ThreadHeapStatsCollector::InternalScope"* nonnull %7, %"class.blink::ThreadHeapStatsCollector"* %43, i32 13)
  %44 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %45 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %44, i64 0, i32 7
  store i8 1, i8* %45, align 1
  %46 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #16
  %47 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %48 = ptrtoint i64* %4 to i64
  %49 = sub i64 %47, %48
  %50 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %51 = icmp ult i64 %49, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #16
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %37
  %53 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #16
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi i32* [ %53, %52 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %37 ]
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %55, align 4
  %58 = bitcast %"class.blink::BaseArena"* %0 to i8* (%"class.blink::BaseArena"*, i64, i64)***
  %59 = load i8* (%"class.blink::BaseArena"*, i64, i64)**, i8* (%"class.blink::BaseArena"*, i64, i64)*** %58, align 8
  %60 = getelementptr inbounds i8* (%"class.blink::BaseArena"*, i64, i64)*, i8* (%"class.blink::BaseArena"*, i64, i64)** %59, i64 8
  %61 = load i8* (%"class.blink::BaseArena"*, i64, i64)*, i8* (%"class.blink::BaseArena"*, i64, i64)** %60, align 8
  %62 = call i8* %61(%"class.blink::BaseArena"* %0, i64 %1, i64 %2) #16
  %63 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #16
  %64 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %65 = ptrtoint i64* %5 to i64
  %66 = sub i64 %64, %65
  %67 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %68 = icmp ult i64 %66, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #16
  br i1 %68, label %71, label %69, !prof !3

69:                                               ; preds = %54
  %70 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #16
  br label %71

71:                                               ; preds = %54, %69
  %72 = phi i32* [ %70, %69 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %54 ]
  %73 = load i32, i32* %72, align 4
  %74 = add i32 %73, -1
  store i32 %74, i32* %72, align 4
  store i8 0, i8* %45, align 1
  call void @_ZN5blink24ThreadHeapStatsCollector13InternalScopeILNS0_13TraceCategoryE0ELNS0_12ScopeContextE0EED2Ev(%"class.blink::ThreadHeapStatsCollector::InternalScope"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #16
  br label %75

75:                                               ; preds = %32, %17, %71
  %76 = phi i8* [ %62, %71 ], [ null, %17 ], [ null, %32 ]
  ret i8* %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24ThreadHeapStatsCollector13InternalScopeILNS0_13TraceCategoryE0ELNS0_12ScopeContextE0EEC2IJEEEPS0_NS0_2IdEDpT_(%"class.blink::ThreadHeapStatsCollector::InternalScope"*, %"class.blink::ThreadHeapStatsCollector"*, i32) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector::InternalScope", %"class.blink::ThreadHeapStatsCollector::InternalScope"* %0, i64 0, i32 0
  store %"class.blink::ThreadHeapStatsCollector"* %1, %"class.blink::ThreadHeapStatsCollector"** %5, align 8
  %6 = tail call i64 @_ZN4base9TimeTicks3NowEv() #16
  %7 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector::InternalScope", %"class.blink::ThreadHeapStatsCollector::InternalScope"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector::InternalScope", %"class.blink::ThreadHeapStatsCollector::InternalScope"* %0, i64 0, i32 2
  store i32 %2, i32* %8, align 8
  %9 = load atomic i64, i64* @_ZZN5blink24ThreadHeapStatsCollector13InternalScopeILNS0_13TraceCategoryE0ELNS0_12ScopeContextE0EE10StartTraceEvE28trace_event_unique_atomic418 monotonic, align 8
  %10 = inttoptr i64 %9 to i8*
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %12, label %15, !prof !2

12:                                               ; preds = %3
  %13 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0)) #16
  %14 = ptrtoint i8* %13 to i64
  store atomic volatile i64 %14, i64* @_ZZN5blink24ThreadHeapStatsCollector13InternalScopeILNS0_13TraceCategoryE0ELNS0_12ScopeContextE0EE10StartTraceEvE28trace_event_unique_atomic418 monotonic, align 8
  br label %15

15:                                               ; preds = %12, %3
  %16 = phi i8* [ %13, %12 ], [ %10, %3 ]
  %17 = load i8, i8* %16, align 1
  %18 = and i8 %17, 25
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %31, label %20, !prof !3

20:                                               ; preds = %15
  %21 = load i32, i32* %8, align 8
  %22 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %5, align 8
  %23 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %22, i64 0, i32 0, i32 9
  %24 = load i32, i32* %23, align 8
  %25 = tail call i8* @_ZN5blink24ThreadHeapStatsCollector8ToStringENS0_2IdENS_7BlinkGC14CollectionTypeE(i32 %21, i32 %24) #16
  %26 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %27 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %29 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %29, i64* %28, align 8
  %30 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 66, i8* %16, i8* %25, i8* null, i64 0, i64 0, i32 %26, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  br label %31

31:                                               ; preds = %15, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24ThreadHeapStatsCollector13InternalScopeILNS0_13TraceCategoryE0ELNS0_12ScopeContextE0EED2Ev(%"class.blink::ThreadHeapStatsCollector::InternalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = load atomic i64, i64* @_ZZN5blink24ThreadHeapStatsCollector13InternalScopeILNS0_13TraceCategoryE0ELNS0_12ScopeContextE0EE9StopTraceEvE28trace_event_unique_atomic447 monotonic, align 8
  %4 = inttoptr i64 %3 to i8*
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %9, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0)) #16
  %8 = ptrtoint i8* %7 to i64
  store atomic volatile i64 %8, i64* @_ZZN5blink24ThreadHeapStatsCollector13InternalScopeILNS0_13TraceCategoryE0ELNS0_12ScopeContextE0EE9StopTraceEvE28trace_event_unique_atomic447 monotonic, align 8
  br label %9

9:                                                ; preds = %6, %1
  %10 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %11 = load i8, i8* %10, align 1
  %12 = and i8 %11, 25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %26, label %14, !prof !3

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector::InternalScope", %"class.blink::ThreadHeapStatsCollector::InternalScope"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector::InternalScope", %"class.blink::ThreadHeapStatsCollector::InternalScope"* %0, i64 0, i32 0
  %18 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %18, i64 0, i32 0, i32 9
  %20 = load i32, i32* %19, align 8
  %21 = tail call i8* @_ZN5blink24ThreadHeapStatsCollector8ToStringENS0_2IdENS_7BlinkGC14CollectionTypeE(i32 %16, i32 %20) #16
  %22 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %17, align 8
  %23 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %22, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %22, i64 0, i32 0, i32 16
  %25 = tail call i64 @_ZN20trace_event_internal13AddTraceEventIRmRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_(i8 signext 69, i8* %10, i8* %21, i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0), i64* dereferenceable(8) %23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i64 0, i64 0), i8* dereferenceable(1) %24) #16
  br label %26

26:                                               ; preds = %9, %14
  %27 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector::InternalScope", %"class.blink::ThreadHeapStatsCollector::InternalScope"* %0, i64 0, i32 2
  %28 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector::InternalScope", %"class.blink::ThreadHeapStatsCollector::InternalScope"* %0, i64 0, i32 0
  %29 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %28, align 8
  %30 = load i32, i32* %27, align 8
  %31 = tail call i64 @_ZN4base9TimeTicks3NowEv() #16
  %32 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector::InternalScope", %"class.blink::ThreadHeapStatsCollector::InternalScope"* %0, i64 0, i32 1, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = sub nsw i64 %31, %33
  %35 = zext i32 %30 to i64
  %36 = add i64 %34, -9223372036854775807
  %37 = icmp ult i64 %36, 2
  %38 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %29, i64 0, i32 0, i32 6, i64 %35, i32 0
  %39 = load i64, i64* %38, align 8
  br i1 %37, label %47, label %40

40:                                               ; preds = %26
  %41 = icmp slt i64 %34, 0
  %42 = select i1 %41, i64 -9223372036854775808, i64 9223372036854775807
  %43 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %39, i64 %34) #16
  %44 = extractvalue { i64, i1 } %43, 1
  %45 = extractvalue { i64, i1 } %43, 0
  %46 = select i1 %44, i64 %42, i64 %45, !prof !2
  br label %55

47:                                               ; preds = %26
  %48 = add i64 %39, -9223372036854775807
  %49 = icmp ugt i64 %48, 1
  %50 = icmp eq i64 %39, %34
  %51 = or i1 %50, %49
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.77, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.78, i64 0, i64 0)) #16
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #16
  br label %55

55:                                               ; preds = %40, %47, %52
  %56 = phi i64 [ %46, %40 ], [ %34, %47 ], [ %34, %52 ]
  store i64 %56, i64* %38, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9BaseArena34SweepUnsweptPageOnConcurrentThreadEPNS_8BasePageE(%"class.blink::BaseArena"*, %"class.blink::BasePage"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::BasePage"*, align 8
  %4 = alloca %"class.blink::BasePage"*, align 8
  %5 = bitcast %"class.blink::BasePage"* %1 to i1 (%"class.blink::BasePage"*, i8)***
  %6 = load i1 (%"class.blink::BasePage"*, i8)**, i1 (%"class.blink::BasePage"*, i8)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::BasePage"*, i8)*, i1 (%"class.blink::BasePage"*, i8)** %6, i64 4
  %8 = load i1 (%"class.blink::BasePage"*, i8)*, i1 (%"class.blink::BasePage"*, i8)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::BasePage"* %1, i8 zeroext 1) #16
  br i1 %9, label %10, label %30

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #16
  %13 = bitcast %"class.blink::BasePage"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  store %"class.blink::BasePage"* %1, %"class.blink::BasePage"** %4, align 8
  %14 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %28, label %19, !prof !2

19:                                               ; preds = %10
  %20 = ptrtoint %"class.blink::BasePage"* %1 to i64
  %21 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %21, align 8
  %23 = zext i32 %15 to i64
  %24 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %22, i64 %23
  %25 = bitcast %"class.blink::BasePage"** %24 to i64*
  store i64 %20, i64* %25, align 8
  %26 = load i32, i32* %14, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %14, align 4
  br label %50

28:                                               ; preds = %10
  %29 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %11, i64 0, i32 0, i32 0
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %29, %"class.blink::BasePage"** nonnull dereferenceable(8) %4) #16
  br label %50

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3
  %32 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %32) #16
  %33 = bitcast %"class.blink::BasePage"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  store %"class.blink::BasePage"* %1, %"class.blink::BasePage"** %3, align 8
  %34 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %35, %37
  br i1 %38, label %48, label %39, !prof !2

39:                                               ; preds = %30
  %40 = ptrtoint %"class.blink::BasePage"* %1 to i64
  %41 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %41, align 8
  %43 = zext i32 %35 to i64
  %44 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %42, i64 %43
  %45 = bitcast %"class.blink::BasePage"** %44 to i64*
  store i64 %40, i64* %45, align 8
  %46 = load i32, i32* %34, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %34, align 4
  br label %50

48:                                               ; preds = %30
  %49 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %31, i64 0, i32 0, i32 0
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %49, %"class.blink::BasePage"** nonnull dereferenceable(8) %3) #16
  br label %50

50:                                               ; preds = %48, %39, %28, %19
  %51 = phi i8* [ %13, %19 ], [ %13, %28 ], [ %33, %39 ], [ %33, %48 ]
  %52 = phi %"class.WTF::MutexBase"* [ %12, %19 ], [ %12, %28 ], [ %32, %39 ], [ %32, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #16
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %52) #16
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9BaseArena16SweepUnsweptPageEPNS_8BasePageE(%"class.blink::BaseArena"*, %"class.blink::BasePage"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::BasePage"*, align 8
  %4 = bitcast %"class.blink::BasePage"* %1 to i1 (%"class.blink::BasePage"*, i8)***
  %5 = load i1 (%"class.blink::BasePage"*, i8)**, i1 (%"class.blink::BasePage"*, i8)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::BasePage"*, i8)*, i1 (%"class.blink::BasePage"*, i8)** %5, i64 4
  %7 = load i1 (%"class.blink::BasePage"*, i8)*, i1 (%"class.blink::BasePage"*, i8)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::BasePage"* %1, i8 zeroext 0) #16
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::BasePage"* %1 to void (%"class.blink::BasePage"*, i8)***
  %11 = load void (%"class.blink::BasePage"*, i8)**, void (%"class.blink::BasePage"*, i8)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %11, i64 7
  %13 = load void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %12, align 8
  tail call void %13(%"class.blink::BasePage"* %1, i8 zeroext 0) #16
  br label %39

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %16) #16
  %17 = bitcast %"class.blink::BasePage"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  store %"class.blink::BasePage"* %1, %"class.blink::BasePage"** %3, align 8
  %18 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %32, label %23, !prof !2

23:                                               ; preds = %14
  %24 = ptrtoint %"class.blink::BasePage"* %1 to i64
  %25 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %25, align 8
  %27 = zext i32 %19 to i64
  %28 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %26, i64 %27
  %29 = bitcast %"class.blink::BasePage"** %28 to i64*
  store i64 %24, i64* %29, align 8
  %30 = load i32, i32* %18, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %18, align 4
  br label %34

32:                                               ; preds = %14
  %33 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %15, i64 0, i32 0, i32 0
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %33, %"class.blink::BasePage"** nonnull dereferenceable(8) %3) #16
  br label %34

34:                                               ; preds = %23, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %16) #16
  %35 = bitcast %"class.blink::BasePage"* %1 to void (%"class.blink::BasePage"*, i8)***
  %36 = load void (%"class.blink::BasePage"*, i8)**, void (%"class.blink::BasePage"*, i8)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %36, i64 7
  %38 = load void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %37, align 8
  call void %38(%"class.blink::BasePage"* %1, i8 zeroext 1) #16
  br label %39

39:                                               ; preds = %34, %9
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9BaseArena21LazySweepWithDeadlineEN4base9TimeTicksE(%"class.blink::BaseArena"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::BasePage"*, align 8
  %4 = alloca %"class.blink::BasePage"*, align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 5
  %7 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %7, i64 0, i32 16
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0), i32 337, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0)) #16
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #16
  br label %14

14:                                               ; preds = %2, %11
  %15 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 1, i32 0
  %16 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %15) #16
  %18 = load i32, i32* %16, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %54, %14
  %21 = phi i64 [ 1, %14 ], [ %55, %54 ]
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %15) #16
  br label %58

22:                                               ; preds = %14, %54
  %23 = phi i32 [ %56, %54 ], [ %18, %14 ]
  %24 = phi i64 [ %55, %54 ], [ 1, %14 ]
  %25 = add i32 %23, -1
  %26 = call dereferenceable(8) %"class.blink::BasePage"** @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.129"* %17, i32 %25) #16
  %27 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %26, align 8
  %28 = load i32, i32* %16, align 4
  %29 = add i32 %28, -1
  store i32 %29, i32* %16, align 4
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %15) #16
  %30 = icmp eq %"class.blink::BasePage"* %27, null
  br i1 %30, label %58, label %31

31:                                               ; preds = %22
  %32 = bitcast %"class.blink::BasePage"* %27 to void (%"class.blink::BasePage"*, i8)***
  %33 = load void (%"class.blink::BasePage"*, i8)**, void (%"class.blink::BasePage"*, i8)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %33, i64 7
  %35 = load void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %34, align 8
  call void %35(%"class.blink::BasePage"* nonnull %27, i8 zeroext 0) #16
  %36 = urem i64 %24, 10
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %54

38:                                               ; preds = %31
  %39 = call i64 @_ZN4base9TimeTicks3NowEv() #16
  %40 = icmp slt i64 %39, %1
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 1, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %42) #16
  %43 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %42) #16
  br i1 %45, label %46, label %188

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 1, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %47) #16
  %48 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %47) #16
  br i1 %50, label %51, label %188

51:                                               ; preds = %46
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %15) #16
  %52 = load i32, i32* %16, align 4
  %53 = icmp eq i32 %52, 0
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %15) #16
  br label %188

54:                                               ; preds = %31, %38
  %55 = add i64 %24, 1
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %15) #16
  %56 = load i32, i32* %16, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %20, label %22

58:                                               ; preds = %22, %20
  %59 = phi i64 [ %21, %20 ], [ %24, %22 ]
  %60 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 1, i32 0
  %61 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2
  %62 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 0, i32 0
  %63 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1
  %64 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 1, i32 0
  %65 = bitcast %"class.blink::BasePage"** %4 to i8*
  %66 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %67 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %63, i64 0, i32 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %60) #16
  %70 = load i32, i32* %61, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %117, %58
  %73 = phi i64 [ %59, %58 ], [ %118, %117 ]
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %60) #16
  br label %121

74:                                               ; preds = %58, %117
  %75 = phi i32 [ %119, %117 ], [ %70, %58 ]
  %76 = phi i64 [ %118, %117 ], [ %59, %58 ]
  %77 = add i32 %75, -1
  %78 = call dereferenceable(8) %"class.blink::BasePage"** @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.129"* %62, i32 %77) #16
  %79 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %78, align 8
  %80 = load i32, i32* %61, align 4
  %81 = add i32 %80, -1
  store i32 %81, i32* %61, align 4
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %60) #16
  %82 = icmp eq %"class.blink::BasePage"* %79, null
  br i1 %82, label %121, label %83

83:                                               ; preds = %74
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %64) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #16
  store %"class.blink::BasePage"* %79, %"class.blink::BasePage"** %4, align 8
  %84 = load i32, i32* %66, align 4
  %85 = load i32, i32* %67, align 8
  %86 = icmp eq i32 %84, %85
  br i1 %86, label %95, label %87, !prof !2

87:                                               ; preds = %83
  %88 = ptrtoint %"class.blink::BasePage"* %79 to i64
  %89 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %68, align 8
  %90 = zext i32 %84 to i64
  %91 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %89, i64 %90
  %92 = bitcast %"class.blink::BasePage"** %91 to i64*
  store i64 %88, i64* %92, align 8
  %93 = load i32, i32* %66, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %66, align 4
  br label %96

95:                                               ; preds = %83
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %69, %"class.blink::BasePage"** nonnull dereferenceable(8) %4) #16
  br label %96

96:                                               ; preds = %87, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #16
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %64) #16
  %97 = bitcast %"class.blink::BasePage"* %79 to void (%"class.blink::BasePage"*, i8)***
  %98 = load void (%"class.blink::BasePage"*, i8)**, void (%"class.blink::BasePage"*, i8)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %98, i64 7
  %100 = load void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %99, align 8
  call void %100(%"class.blink::BasePage"* nonnull %79, i8 zeroext 1) #16
  %101 = urem i64 %76, 10
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %117

103:                                              ; preds = %96
  %104 = call i64 @_ZN4base9TimeTicks3NowEv() #16
  %105 = icmp slt i64 %104, %1
  br i1 %105, label %117, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 1, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %107) #16
  %108 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %107) #16
  br i1 %110, label %111, label %188

111:                                              ; preds = %106
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %60) #16
  %112 = load i32, i32* %61, align 4
  %113 = icmp eq i32 %112, 0
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %60) #16
  br i1 %113, label %114, label %188

114:                                              ; preds = %111
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %15) #16
  %115 = load i32, i32* %16, align 4
  %116 = icmp eq i32 %115, 0
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %15) #16
  br label %188

117:                                              ; preds = %96, %103
  %118 = add i64 %76, 1
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %60) #16
  %119 = load i32, i32* %61, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %72, label %74

121:                                              ; preds = %74, %72
  %122 = phi i64 [ %73, %72 ], [ %76, %74 ]
  %123 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 1, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %123) #16
  %124 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %130, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0
  %129 = bitcast %"class.blink::BasePage"** %3 to i8*
  br label %131

130:                                              ; preds = %184, %121
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %123) #16
  br label %188

131:                                              ; preds = %127, %184
  %132 = phi i32 [ %125, %127 ], [ %186, %184 ]
  %133 = phi i64 [ %122, %127 ], [ %185, %184 ]
  %134 = add i32 %132, -1
  %135 = call dereferenceable(8) %"class.blink::BasePage"** @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.129"* %128, i32 %134) #16
  %136 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %135, align 8
  %137 = load i32, i32* %124, align 4
  %138 = add i32 %137, -1
  store i32 %138, i32* %124, align 4
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %123) #16
  %139 = icmp eq %"class.blink::BasePage"* %136, null
  br i1 %139, label %188, label %140

140:                                              ; preds = %131
  %141 = bitcast %"class.blink::BasePage"* %136 to i1 (%"class.blink::BasePage"*, i8)***
  %142 = load i1 (%"class.blink::BasePage"*, i8)**, i1 (%"class.blink::BasePage"*, i8)*** %141, align 8
  %143 = getelementptr inbounds i1 (%"class.blink::BasePage"*, i8)*, i1 (%"class.blink::BasePage"*, i8)** %142, i64 4
  %144 = load i1 (%"class.blink::BasePage"*, i8)*, i1 (%"class.blink::BasePage"*, i8)** %143, align 8
  %145 = call zeroext i1 %144(%"class.blink::BasePage"* nonnull %136, i8 zeroext 0) #16
  br i1 %145, label %146, label %151

146:                                              ; preds = %140
  %147 = bitcast %"class.blink::BasePage"* %136 to void (%"class.blink::BasePage"*, i8)***
  %148 = load void (%"class.blink::BasePage"*, i8)**, void (%"class.blink::BasePage"*, i8)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %148, i64 7
  %150 = load void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %149, align 8
  call void %150(%"class.blink::BasePage"* nonnull %136, i8 zeroext 0) #16
  br label %169

151:                                              ; preds = %140
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %64) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #16
  store %"class.blink::BasePage"* %136, %"class.blink::BasePage"** %3, align 8
  %152 = load i32, i32* %66, align 4
  %153 = load i32, i32* %67, align 8
  %154 = icmp eq i32 %152, %153
  br i1 %154, label %163, label %155, !prof !2

155:                                              ; preds = %151
  %156 = ptrtoint %"class.blink::BasePage"* %136 to i64
  %157 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %68, align 8
  %158 = zext i32 %152 to i64
  %159 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %157, i64 %158
  %160 = bitcast %"class.blink::BasePage"** %159 to i64*
  store i64 %156, i64* %160, align 8
  %161 = load i32, i32* %66, align 4
  %162 = add i32 %161, 1
  store i32 %162, i32* %66, align 4
  br label %164

163:                                              ; preds = %151
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %69, %"class.blink::BasePage"** nonnull dereferenceable(8) %3) #16
  br label %164

164:                                              ; preds = %163, %155
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #16
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %64) #16
  %165 = bitcast %"class.blink::BasePage"* %136 to void (%"class.blink::BasePage"*, i8)***
  %166 = load void (%"class.blink::BasePage"*, i8)**, void (%"class.blink::BasePage"*, i8)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %166, i64 7
  %168 = load void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %167, align 8
  call void %168(%"class.blink::BasePage"* nonnull %136, i8 zeroext 1) #16
  br label %169

169:                                              ; preds = %146, %164
  %170 = urem i64 %133, 10
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %184

172:                                              ; preds = %169
  %173 = call i64 @_ZN4base9TimeTicks3NowEv() #16
  %174 = icmp slt i64 %173, %1
  br i1 %174, label %184, label %175

175:                                              ; preds = %172
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %123) #16
  %176 = load i32, i32* %124, align 4
  %177 = icmp eq i32 %176, 0
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %123) #16
  br i1 %177, label %178, label %188

178:                                              ; preds = %175
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %60) #16
  %179 = load i32, i32* %61, align 4
  %180 = icmp eq i32 %179, 0
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %60) #16
  br i1 %180, label %181, label %188

181:                                              ; preds = %178
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %15) #16
  %182 = load i32, i32* %16, align 4
  %183 = icmp eq i32 %182, 0
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %15) #16
  br label %188

184:                                              ; preds = %172, %169
  %185 = add i64 %133, 1
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %123) #16
  %186 = load i32, i32* %124, align 4
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %130, label %131

188:                                              ; preds = %131, %181, %178, %175, %114, %111, %106, %51, %46, %41, %130
  %189 = phi i1 [ true, %130 ], [ %53, %51 ], [ false, %41 ], [ false, %46 ], [ %116, %114 ], [ false, %106 ], [ false, %111 ], [ %183, %181 ], [ false, %175 ], [ false, %178 ], [ true, %131 ]
  ret i1 %189
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9BaseArena28InvokeFinalizersOnSweptPagesEv(%"class.blink::BaseArena"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::BasePage"*, align 8
  %3 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 1, i32 0
  %4 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2
  %5 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 1, i32 0
  %8 = bitcast %"class.blink::BasePage"** %2 to i8*
  %9 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %6, i64 0, i32 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %3) #16
  %13 = load i32, i32* %4, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %44, %1
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %3) #16
  br label %24

16:                                               ; preds = %1, %44
  %17 = phi i32 [ %49, %44 ], [ %13, %1 ]
  %18 = add i32 %17, -1
  %19 = call dereferenceable(8) %"class.blink::BasePage"** @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.129"* %5, i32 %18) #16
  %20 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %19, align 8
  %21 = load i32, i32* %4, align 4
  %22 = add i32 %21, -1
  store i32 %22, i32* %4, align 4
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %3) #16
  %23 = icmp eq %"class.blink::BasePage"* %20, null
  br i1 %23, label %24, label %31

24:                                               ; preds = %16, %15
  %25 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 1, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %25) #16
  %26 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %51, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 0, i32 0
  br label %52

31:                                               ; preds = %16
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %7) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  store %"class.blink::BasePage"* %20, %"class.blink::BasePage"** %2, align 8
  %32 = load i32, i32* %9, align 4
  %33 = load i32, i32* %10, align 8
  %34 = icmp eq i32 %32, %33
  br i1 %34, label %43, label %35, !prof !2

35:                                               ; preds = %31
  %36 = ptrtoint %"class.blink::BasePage"* %20 to i64
  %37 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %11, align 8
  %38 = zext i32 %32 to i64
  %39 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %37, i64 %38
  %40 = bitcast %"class.blink::BasePage"** %39 to i64*
  store i64 %36, i64* %40, align 8
  %41 = load i32, i32* %9, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %9, align 4
  br label %44

43:                                               ; preds = %31
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %12, %"class.blink::BasePage"** nonnull dereferenceable(8) %2) #16
  br label %44

44:                                               ; preds = %35, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %7) #16
  %45 = bitcast %"class.blink::BasePage"* %20 to void (%"class.blink::BasePage"*, i8)***
  %46 = load void (%"class.blink::BasePage"*, i8)**, void (%"class.blink::BasePage"*, i8)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %46, i64 7
  %48 = load void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %47, align 8
  call void %48(%"class.blink::BasePage"* nonnull %20, i8 zeroext 1) #16
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %3) #16
  %49 = load i32, i32* %4, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %15, label %16

51:                                               ; preds = %60, %24
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %25) #16
  br label %67

52:                                               ; preds = %29, %60
  %53 = phi i32 [ %27, %29 ], [ %65, %60 ]
  %54 = add i32 %53, -1
  %55 = call dereferenceable(8) %"class.blink::BasePage"** @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.129"* %30, i32 %54) #16
  %56 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %55, align 8
  %57 = load i32, i32* %26, align 4
  %58 = add i32 %57, -1
  store i32 %58, i32* %26, align 4
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %25) #16
  %59 = icmp eq %"class.blink::BasePage"* %56, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %52
  %61 = bitcast %"class.blink::BasePage"* %56 to void (%"class.blink::BasePage"*, i8)***
  %62 = load void (%"class.blink::BasePage"*, i8)**, void (%"class.blink::BasePage"*, i8)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %62, i64 7
  %64 = load void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %63, align 8
  call void %64(%"class.blink::BasePage"* nonnull %56, i8 zeroext 0) #16
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %25) #16
  %65 = load i32, i32* %26, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %51, label %52

67:                                               ; preds = %52, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9BaseArena22ConcurrentSweepOnePageEv(%"class.blink::BaseArena"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %2) #16
  %3 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %2) #16
  br label %17

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = add i32 %4, -1
  %10 = tail call dereferenceable(8) %"class.blink::BasePage"** @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.129"* %8, i32 %9) #16
  %11 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %10, align 8
  %12 = load i32, i32* %3, align 4
  %13 = add i32 %12, -1
  store i32 %13, i32* %3, align 4
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %2) #16
  %14 = icmp eq %"class.blink::BasePage"* %11, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  %16 = tail call zeroext i1 @_ZN5blink9BaseArena34SweepUnsweptPageOnConcurrentThreadEPNS_8BasePageE(%"class.blink::BaseArena"* %0, %"class.blink::BasePage"* nonnull %11)
  br label %17

17:                                               ; preds = %6, %7, %15
  %18 = phi i1 [ false, %15 ], [ true, %7 ], [ true, %6 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9BaseArena13CompleteSweepEv(%"class.blink::BaseArena"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::BasePage"*, align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 5
  %5 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %5, i64 0, i32 16
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0), i32 402, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0)) #16
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  br label %12

12:                                               ; preds = %1, %9
  %13 = bitcast %"class.blink::BaseArena"* %0 to void (%"class.blink::BaseArena"*)***
  %14 = load void (%"class.blink::BaseArena"*)**, void (%"class.blink::BaseArena"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::BaseArena"*)*, void (%"class.blink::BaseArena"*)** %14, i64 4
  %16 = load void (%"class.blink::BaseArena"*)*, void (%"class.blink::BaseArena"*)** %15, align 8
  call void %16(%"class.blink::BaseArena"* %0) #16
  call void @_ZN5blink9BaseArena28InvokeFinalizersOnSweptPagesEv(%"class.blink::BaseArena"* %0)
  %17 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 1, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %17) #16
  %18 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 1, i32 0
  %25 = bitcast %"class.blink::BasePage"** %2 to i8*
  %26 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %23, i64 0, i32 0, i32 0
  br label %31

30:                                               ; preds = %68, %12
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %17) #16
  br label %71

31:                                               ; preds = %21, %68
  %32 = phi i32 [ %19, %21 ], [ %69, %68 ]
  %33 = add i32 %32, -1
  %34 = call dereferenceable(8) %"class.blink::BasePage"** @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.129"* %22, i32 %33) #16
  %35 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %34, align 8
  %36 = load i32, i32* %18, align 4
  %37 = add i32 %36, -1
  store i32 %37, i32* %18, align 4
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %17) #16
  %38 = icmp eq %"class.blink::BasePage"* %35, null
  br i1 %38, label %71, label %39

39:                                               ; preds = %31
  %40 = bitcast %"class.blink::BasePage"* %35 to i1 (%"class.blink::BasePage"*, i8)***
  %41 = load i1 (%"class.blink::BasePage"*, i8)**, i1 (%"class.blink::BasePage"*, i8)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::BasePage"*, i8)*, i1 (%"class.blink::BasePage"*, i8)** %41, i64 4
  %43 = load i1 (%"class.blink::BasePage"*, i8)*, i1 (%"class.blink::BasePage"*, i8)** %42, align 8
  %44 = call zeroext i1 %43(%"class.blink::BasePage"* nonnull %35, i8 zeroext 0) #16
  br i1 %44, label %45, label %50

45:                                               ; preds = %39
  %46 = bitcast %"class.blink::BasePage"* %35 to void (%"class.blink::BasePage"*, i8)***
  %47 = load void (%"class.blink::BasePage"*, i8)**, void (%"class.blink::BasePage"*, i8)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %47, i64 7
  %49 = load void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %48, align 8
  call void %49(%"class.blink::BasePage"* nonnull %35, i8 zeroext 0) #16
  br label %68

50:                                               ; preds = %39
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %24) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  store %"class.blink::BasePage"* %35, %"class.blink::BasePage"** %2, align 8
  %51 = load i32, i32* %26, align 4
  %52 = load i32, i32* %27, align 8
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %62, label %54, !prof !2

54:                                               ; preds = %50
  %55 = ptrtoint %"class.blink::BasePage"* %35 to i64
  %56 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %28, align 8
  %57 = zext i32 %51 to i64
  %58 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %56, i64 %57
  %59 = bitcast %"class.blink::BasePage"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = load i32, i32* %26, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %26, align 4
  br label %63

62:                                               ; preds = %50
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %29, %"class.blink::BasePage"** nonnull dereferenceable(8) %2) #16
  br label %63

63:                                               ; preds = %62, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #16
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %24) #16
  %64 = bitcast %"class.blink::BasePage"* %35 to void (%"class.blink::BasePage"*, i8)***
  %65 = load void (%"class.blink::BasePage"*, i8)**, void (%"class.blink::BasePage"*, i8)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %65, i64 7
  %67 = load void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %66, align 8
  call void %67(%"class.blink::BasePage"* nonnull %35, i8 zeroext 1) #16
  br label %68

68:                                               ; preds = %45, %63
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %17) #16
  %69 = load i32, i32* %18, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %30, label %31

71:                                               ; preds = %31, %30
  %72 = load void (%"class.blink::BaseArena"*)**, void (%"class.blink::BaseArena"*)*** %13, align 8
  %73 = getelementptr inbounds void (%"class.blink::BaseArena"*)*, void (%"class.blink::BaseArena"*)** %72, i64 7
  %74 = load void (%"class.blink::BaseArena"*)*, void (%"class.blink::BaseArena"*)** %73, align 8
  call void %74(%"class.blink::BaseArena"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5blink9BaseArena19AllocateLargeObjectEmm(%"class.blink::BaseArena"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 5
  %5 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %7, i64 0, i32 19, i64 8
  %9 = load %"class.blink::BaseArena"*, %"class.blink::BaseArena"** %8, align 8
  %10 = tail call i8* @_ZN5blink9BaseArena9LazySweepEmm(%"class.blink::BaseArena"* %9, i64 %1, i64 %2) #16
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %18

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::BaseArena"* %9 to %"class.blink::LargeObjectArena"*
  %14 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %9, i64 0, i32 5
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  tail call void @_ZN5blink11ThreadState13CompleteSweepEv(%"class.blink::ThreadState"* %15) #16
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  tail call void @_ZN5blink11ThreadState18ScheduleGCIfNeededEv(%"class.blink::ThreadState"* %16) #16
  %17 = tail call i8* @_ZN5blink16LargeObjectArena25DoAllocateLargeObjectPageEmm(%"class.blink::LargeObjectArena"* %13, i64 %1, i64 %2) #16
  br label %18

18:                                               ; preds = %3, %12
  %19 = phi i8* [ %17, %12 ], [ %10, %3 ]
  ret i8* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5blink16LargeObjectArena23AllocateLargeObjectPageEmm(%"class.blink::LargeObjectArena"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::LargeObjectArena"* %0 to %"class.blink::BaseArena"*
  %5 = tail call i8* @_ZN5blink9BaseArena9LazySweepEmm(%"class.blink::BaseArena"* %4, i64 %1, i64 %2)
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 5
  %9 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %8, align 8
  tail call void @_ZN5blink11ThreadState13CompleteSweepEv(%"class.blink::ThreadState"* %9) #16
  %10 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %8, align 8
  tail call void @_ZN5blink11ThreadState18ScheduleGCIfNeededEv(%"class.blink::ThreadState"* %10) #16
  %11 = tail call i8* @_ZN5blink16LargeObjectArena25DoAllocateLargeObjectPageEmm(%"class.blink::LargeObjectArena"* %0, i64 %1, i64 %2)
  br label %12

12:                                               ; preds = %3, %7
  %13 = phi i8* [ %11, %7 ], [ %5, %3 ]
  ret i8* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NormalPageArenaC2EPNS_11ThreadStateEi(%"class.blink::NormalPageArena"*, %"class.blink::ThreadState"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9BaseArenaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.blink::PageStackThreadSafe"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #16
  %7 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %7, i1 zeroext false) #16
  %8 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 2
  %9 = bitcast %"class.blink::PageStackThreadSafe"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #16
  %10 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %10, i1 zeroext false) #16
  %11 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 3
  %12 = bitcast %"class.blink::PageStackThreadSafe"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #16
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %13, i1 zeroext false) #16
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 4
  %15 = bitcast %"class.blink::PageStackThreadSafe"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #16
  %16 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 4, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %16, i1 zeroext false) #16
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 5
  store %"class.blink::ThreadState"* %1, %"class.blink::ThreadState"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 6
  store i32 %2, i32* %18, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15NormalPageArenaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %19 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2
  %20 = bitcast %"class.blink::FreeList"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 276, i1 false) #16
  %21 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 3
  %22 = bitcast i8** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink15NormalPageArena13AddToFreeListEPhm(%"class.blink::NormalPageArena"* nocapture, i8*, i64) local_unnamed_addr #8 align 2 {
  %4 = icmp ult i64 %2, 16
  %5 = bitcast i8* %1 to i32*
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds i8, i8* %1, i64 4
  %7 = bitcast i8* %6 to i16*
  store atomic i16 0, i16* %7 monotonic, align 2
  %8 = lshr i64 %2, 1
  %9 = trunc i64 %8 to i16
  %10 = getelementptr inbounds i8, i8* %1, i64 6
  %11 = bitcast i8* %10 to i16*
  store i16 %9, i16* %11, align 2
  br i1 %4, label %34, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to %"class.blink::FreeListEntry"**
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %14, align 8
  %15 = tail call i64 @llvm.ctlz.i64(i64 %2, i1 true) #16, !range !8
  %16 = trunc i64 %15 to i32
  %17 = xor i32 %16, 63
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 0, i64 %18
  %20 = bitcast %"class.blink::FreeListEntry"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast i8* %13 to i64*
  store i64 %21, i64* %22, align 8
  %23 = bitcast %"class.blink::FreeListEntry"** %19 to i8**
  store i8* %1, i8** %23, align 8
  %24 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp sgt i32 %17, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %12
  store i32 %17, i32* %24, align 8
  br label %28

28:                                               ; preds = %27, %12
  %29 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %14, align 8
  %30 = icmp eq %"class.blink::FreeListEntry"* %29, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 1, i64 %18
  %33 = bitcast %"class.blink::FreeListEntry"** %32 to i8**
  store i8* %1, i8** %33, align 8
  br label %34

34:                                               ; preds = %3, %28, %31
  %35 = ptrtoint i8* %1 to i64
  %36 = and i64 %35, -131072
  %37 = inttoptr i64 %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 4400
  %39 = bitcast i8* %38 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %40 = bitcast i8* %38 to i64*
  %41 = load i64, i64* %40, align 16
  %42 = sub i64 %35, %41
  %43 = lshr i64 %42, 3
  %44 = lshr i64 %42, 6
  %45 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %39, i64 0, i32 0, i32 1, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = trunc i64 %43 to i32
  %48 = and i32 %47, 7
  %49 = shl i32 1, %48
  %50 = trunc i32 %49 to i8
  %51 = or i8 %46, %50
  store atomic i8 %51, i8* %45 release, align 1
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink8FreeList3AddEPhm(%"class.blink::FreeList"* nocapture, i8*, i64) local_unnamed_addr #8 align 2 {
  %4 = icmp ult i64 %2, 16
  %5 = bitcast i8* %1 to i32*
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds i8, i8* %1, i64 4
  %7 = bitcast i8* %6 to i16*
  store atomic i16 0, i16* %7 monotonic, align 2
  %8 = lshr i64 %2, 1
  %9 = trunc i64 %8 to i16
  %10 = getelementptr inbounds i8, i8* %1, i64 6
  %11 = bitcast i8* %10 to i16*
  store i16 %9, i16* %11, align 2
  br i1 %4, label %34, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to %"class.blink::FreeListEntry"**
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %14, align 8
  %15 = tail call i64 @llvm.ctlz.i64(i64 %2, i1 true) #16, !range !8
  %16 = trunc i64 %15 to i32
  %17 = xor i32 %16, 63
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 %18
  %20 = bitcast %"class.blink::FreeListEntry"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast i8* %13 to i64*
  store i64 %21, i64* %22, align 8
  %23 = bitcast %"class.blink::FreeListEntry"** %19 to i8**
  store i8* %1, i8** %23, align 8
  %24 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp sgt i32 %17, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %12
  store i32 %17, i32* %24, align 8
  br label %28

28:                                               ; preds = %27, %12
  %29 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %14, align 8
  %30 = icmp eq %"class.blink::FreeListEntry"* %29, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 1, i64 %18
  %33 = bitcast %"class.blink::FreeListEntry"** %32 to i8**
  store i8* %1, i8** %33, align 8
  br label %34

34:                                               ; preds = %3, %31, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NormalPageArena19MakeConsistentForGCEv(%"class.blink::NormalPageArena"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::NormalPageArena"* %0 to %"class.blink::BaseArena"*
  tail call void @_ZN5blink9BaseArena19MakeConsistentForGCEv(%"class.blink::BaseArena"* %2)
  tail call void @_ZN5blink15NormalPageArena18SetAllocationPointEPhm(%"class.blink::NormalPageArena"* %0, i8* null, i64 0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NormalPageArena18SetAllocationPointEPhm(%"class.blink::NormalPageArena"* nocapture, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 3
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %74, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %74, label %11

11:                                               ; preds = %7
  %12 = icmp ult i64 %9, 16
  %13 = bitcast i8* %5 to i32*
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %5, i64 4
  %15 = bitcast i8* %14 to i16*
  store atomic i16 0, i16* %15 monotonic, align 2
  %16 = lshr i64 %9, 1
  %17 = trunc i64 %16 to i16
  %18 = getelementptr inbounds i8, i8* %5, i64 6
  %19 = bitcast i8* %18 to i16*
  store i16 %17, i16* %19, align 2
  br i1 %12, label %42, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds i8, i8* %5, i64 8
  %22 = bitcast i8* %21 to %"class.blink::FreeListEntry"**
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %22, align 8
  %23 = tail call i64 @llvm.ctlz.i64(i64 %9, i1 true) #16, !range !8
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, 63
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 0, i64 %26
  %28 = bitcast %"class.blink::FreeListEntry"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8* %21 to i64*
  store i64 %29, i64* %30, align 8
  %31 = bitcast %"class.blink::FreeListEntry"** %27 to i8**
  store i8* %5, i8** %31, align 8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %25, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %20
  store i32 %25, i32* %32, align 8
  br label %36

36:                                               ; preds = %35, %20
  %37 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %22, align 8
  %38 = icmp eq %"class.blink::FreeListEntry"* %37, null
  br i1 %38, label %39, label %42

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 1, i64 %26
  %41 = bitcast %"class.blink::FreeListEntry"** %40 to i8**
  store i8* %5, i8** %41, align 8
  br label %42

42:                                               ; preds = %11, %36, %39
  %43 = ptrtoint i8* %5 to i64
  %44 = and i64 %43, -131072
  %45 = inttoptr i64 %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 4400
  %47 = bitcast i8* %46 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %48 = bitcast i8* %46 to i64*
  %49 = load i64, i64* %48, align 16
  %50 = sub i64 %43, %49
  %51 = lshr i64 %50, 3
  %52 = lshr i64 %50, 6
  %53 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %47, i64 0, i32 0, i32 1, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = trunc i64 %51 to i32
  %56 = and i32 %55, 7
  %57 = shl i32 1, %56
  %58 = trunc i32 %57 to i8
  %59 = or i8 %54, %58
  store atomic i8 %59, i8* %53 release, align 1
  %60 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 5
  %61 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %63, i64 0, i32 1, i32 0, i32 0, i32 0
  %65 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %64, align 8
  tail call void @_ZN5blink24ThreadHeapStatsCollector27DecreaseAllocatedObjectSizeEm(%"class.blink::ThreadHeapStatsCollector"* %65, i64 %9) #16
  %66 = bitcast i8** %4 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, -131072
  %69 = inttoptr i64 %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 4128
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 32
  %73 = sub i64 %72, %9
  store i64 %73, i64* %71, align 32
  br label %74

74:                                               ; preds = %7, %3, %42
  store i8* %1, i8** %4, align 8
  %75 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 4
  store i64 %2, i64* %75, align 8
  %76 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 5
  %77 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %79, i64 0, i32 18, i32 0
  store i8* %1, i8** %80, align 8
  %81 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %79, i64 0, i32 18, i32 1
  store i64 %2, i64* %81, align 8
  %82 = icmp eq i8* %1, null
  br i1 %82, label %112, label %83

83:                                               ; preds = %74
  %84 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %76, align 8
  %85 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %84, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %86, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %87, align 8
  tail call void @_ZN5blink24ThreadHeapStatsCollector27IncreaseAllocatedObjectSizeEm(%"class.blink::ThreadHeapStatsCollector"* %88, i64 %2) #16
  %89 = ptrtoint i8* %1 to i64
  %90 = and i64 %89, -131072
  %91 = inttoptr i64 %90 to i8*
  %92 = getelementptr inbounds i8, i8* %91, i64 4128
  %93 = bitcast i8* %92 to i64*
  %94 = load i64, i64* %93, align 32
  %95 = add i64 %94, %2
  store i64 %95, i64* %93, align 32
  %96 = getelementptr inbounds i8, i8* %91, i64 4400
  %97 = bitcast i8* %96 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %98 = bitcast i8* %96 to i64*
  %99 = load i64, i64* %98, align 16
  %100 = sub i64 %89, %99
  %101 = lshr i64 %100, 3
  %102 = lshr i64 %100, 6
  %103 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %97, i64 0, i32 0, i32 1, i64 %102
  %104 = load i8, i8* %103, align 1
  %105 = trunc i64 %101 to i32
  %106 = and i32 %105, 7
  %107 = shl i32 1, %106
  %108 = trunc i32 %107 to i8
  %109 = xor i8 %108, -1
  %110 = and i8 %104, %109
  store atomic i8 %110, i8* %103 release, align 1
  %111 = getelementptr inbounds i8, i8* %91, i64 4137
  store i8 1, i8* %111, align 1
  br label %112

112:                                              ; preds = %74, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NormalPageArena14ClearFreeListsEv(%"class.blink::NormalPageArena"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink15NormalPageArena18SetAllocationPointEPhm(%"class.blink::NormalPageArena"* %0, i8* null, i64 0)
  %2 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::FreeList"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 276, i1 false) #16
  %4 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 5
  store i64 0, i64* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink8FreeList5ClearEv(%"class.blink::FreeList"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = bitcast %"class.blink::FreeList"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 276, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NormalPageArena12MakeIterableEv(%"class.blink::NormalPageArena"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink15NormalPageArena18SetAllocationPointEPhm(%"class.blink::NormalPageArena"* %0, i8* null, i64 0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink15NormalPageArena9ArenaSizeEv(%"class.blink::NormalPageArena"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %11, %1
  %10 = phi i64 [ 0, %1 ], [ %20, %11 ]
  ret i64 %10

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %20, %11 ], [ 0, %1 ]
  %13 = phi %"class.blink::BasePage"** [ %21, %11 ], [ %3, %1 ]
  %14 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %13, align 8
  %15 = bitcast %"class.blink::BasePage"* %14 to i64 (%"class.blink::BasePage"*)***
  %16 = load i64 (%"class.blink::BasePage"*)**, i64 (%"class.blink::BasePage"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.blink::BasePage"*)*, i64 (%"class.blink::BasePage"*)** %16, i64 9
  %18 = load i64 (%"class.blink::BasePage"*)*, i64 (%"class.blink::BasePage"*)** %17, align 8
  %19 = tail call i64 %18(%"class.blink::BasePage"* %14) #16
  %20 = add i64 %19, %12
  %21 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %13, i64 1
  %22 = icmp eq %"class.blink::BasePage"** %21, %7
  br i1 %22, label %9, label %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5blink15NormalPageArena12FreeListSizeEv(%"class.blink::NormalPageArena"* nocapture readonly) local_unnamed_addr #2 align 2 {
  br label %2

2:                                                ; preds = %20, %1
  %3 = phi i64 [ 0, %1 ], [ %22, %20 ]
  %4 = phi i64 [ 0, %1 ], [ %21, %20 ]
  %5 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 0, i64 %3
  %6 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %5, align 8
  %7 = icmp eq %"class.blink::FreeListEntry"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %2, %8
  %9 = phi %"class.blink::FreeListEntry"* [ %18, %8 ], [ %6, %2 ]
  %10 = phi i64 [ %16, %8 ], [ %4, %2 ]
  %11 = getelementptr inbounds %"class.blink::FreeListEntry", %"class.blink::FreeListEntry"* %9, i64 0, i32 0, i32 2
  %12 = load i16, i16* %11, align 2
  %13 = lshr i16 %12, 2
  %14 = zext i16 %13 to i64
  %15 = shl nuw nsw i64 %14, 3
  %16 = add i64 %15, %10
  %17 = getelementptr inbounds %"class.blink::FreeListEntry", %"class.blink::FreeListEntry"* %9, i64 0, i32 1
  %18 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %17, align 8
  %19 = icmp eq %"class.blink::FreeListEntry"* %18, null
  br i1 %19, label %20, label %8

20:                                               ; preds = %8, %2
  %21 = phi i64 [ %4, %2 ], [ %16, %8 ]
  %22 = add nuw nsw i64 %3, 1
  %23 = icmp eq i64 %22, 17
  br i1 %23, label %24, label %2

24:                                               ; preds = %20
  ret i64 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink8FreeList12FreeListSizeEv(%"class.blink::FreeList"* nocapture readonly) local_unnamed_addr #2 align 2 {
  br label %3

2:                                                ; preds = %21
  ret i64 %22

3:                                                ; preds = %21, %1
  %4 = phi i64 [ 0, %1 ], [ %23, %21 ]
  %5 = phi i64 [ 0, %1 ], [ %22, %21 ]
  %6 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 %4
  %7 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %6, align 8
  %8 = icmp eq %"class.blink::FreeListEntry"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %3, %9
  %10 = phi %"class.blink::FreeListEntry"* [ %19, %9 ], [ %7, %3 ]
  %11 = phi i64 [ %17, %9 ], [ %5, %3 ]
  %12 = getelementptr inbounds %"class.blink::FreeListEntry", %"class.blink::FreeListEntry"* %10, i64 0, i32 0, i32 2
  %13 = load i16, i16* %12, align 2
  %14 = lshr i16 %13, 2
  %15 = zext i16 %14 to i64
  %16 = shl nuw nsw i64 %15, 3
  %17 = add i64 %16, %11
  %18 = getelementptr inbounds %"class.blink::FreeListEntry", %"class.blink::FreeListEntry"* %10, i64 0, i32 1
  %19 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %18, align 8
  %20 = icmp eq %"class.blink::FreeListEntry"* %19, null
  br i1 %20, label %21, label %9

21:                                               ; preds = %9, %3
  %22 = phi i64 [ %5, %3 ], [ %17, %9 ]
  %23 = add nuw nsw i64 %4, 1
  %24 = icmp eq i64 %23, 17
  br i1 %24, label %2, label %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NormalPageArena15SweepAndCompactEv(%"class.blink::NormalPageArena"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::BasePage"*, align 8
  %3 = alloca %"class.blink::BasePage"*, align 8
  %4 = alloca %"class.blink::BasePage"*, align 8
  %5 = alloca %"class.blink::NormalPage::CompactionContext", align 8
  %6 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 5
  %7 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %10 = tail call %"class.blink::HeapCompact"* @_ZN5blink10ThreadHeap10CompactionEv(%"class.blink::ThreadHeap"* %9) #16
  %11 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %10, i64 0, i32 2
  %12 = load i8, i8* %11, align 8, !range !6
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %225, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 6
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %10, i64 0, i32 6
  %18 = load i32, i32* %17, align 8
  %19 = shl i32 1, %16
  %20 = and i32 %18, %19
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %225, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %23) #16
  %24 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %23) #16
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  %28 = tail call %"class.blink::HeapCompact"* @_ZN5blink10ThreadHeap10CompactionEv(%"class.blink::ThreadHeap"* %9) #16
  tail call void @_ZN5blink11HeapCompact23FinishedArenaCompactionEPNS_15NormalPageArenaEmm(%"class.blink::HeapCompact"* %28, %"class.blink::NormalPageArena"* %0, i64 0, i64 0) #16
  br label %225

29:                                               ; preds = %22
  %30 = bitcast %"class.blink::NormalPage::CompactionContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #16
  %31 = getelementptr inbounds %"class.blink::NormalPage::CompactionContext", %"class.blink::NormalPage::CompactionContext"* %5, i64 0, i32 0
  %32 = getelementptr inbounds %"class.blink::NormalPage::CompactionContext", %"class.blink::NormalPage::CompactionContext"* %5, i64 0, i32 1
  %33 = getelementptr inbounds %"class.blink::NormalPage::CompactionContext", %"class.blink::NormalPage::CompactionContext"* %5, i64 0, i32 2
  %34 = getelementptr inbounds %"class.blink::PageStack", %"class.blink::PageStack"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::NormalPage::CompactionContext", %"class.blink::NormalPage::CompactionContext"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.blink::NormalPage::CompactionContext", %"class.blink::NormalPage::CompactionContext"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.blink::NormalPage::CompactionContext", %"class.blink::NormalPage::CompactionContext"* %5, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 32, i1 false) #16
  %38 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PageStack"* %38, %"class.blink::PageStack"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = load i32, i32* %24, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %80, label %42

42:                                               ; preds = %29
  %43 = bitcast %"class.blink::BasePage"** %3 to i8*
  %44 = getelementptr inbounds %"class.blink::PageStack", %"class.blink::PageStack"* %33, i64 0, i32 0
  %45 = bitcast %"class.blink::NormalPage::CompactionContext"* %5 to %"class.blink::BasePage"**
  br label %46

46:                                               ; preds = %42, %74
  %47 = phi i32 [ %40, %42 ], [ %75, %74 ]
  %48 = add i32 %47, -1
  %49 = call dereferenceable(8) %"class.blink::BasePage"** @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.129"* %39, i32 %48) #16
  %50 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %49, align 8
  %51 = load i32, i32* %24, align 4
  %52 = add i32 %51, -1
  store i32 %52, i32* %24, align 4
  %53 = icmp eq %"class.blink::BasePage"* %50, null
  br i1 %53, label %77, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.blink::BasePage"* %50 to %"class.blink::NormalPage"*
  %56 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %50, i64 0, i32 5
  store i8 1, i8* %56, align 8
  %57 = load %"class.blink::NormalPage"*, %"class.blink::NormalPage"** %31, align 8
  %58 = icmp eq %"class.blink::NormalPage"* %57, null
  br i1 %58, label %59, label %60

59:                                               ; preds = %54
  store %"class.blink::BasePage"* %50, %"class.blink::BasePage"** %45, align 8
  br label %74

60:                                               ; preds = %54
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  store %"class.blink::BasePage"* %50, %"class.blink::BasePage"** %3, align 8
  %61 = load i32, i32* %36, align 4
  %62 = load i32, i32* %35, align 8
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %72, label %64, !prof !2

64:                                               ; preds = %60
  %65 = ptrtoint %"class.blink::BasePage"* %50 to i64
  %66 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %34, align 8
  %67 = zext i32 %61 to i64
  %68 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %66, i64 %67
  %69 = bitcast %"class.blink::BasePage"** %68 to i64*
  store i64 %65, i64* %69, align 8
  %70 = load i32, i32* %36, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %36, align 4
  br label %73

72:                                               ; preds = %60
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %44, %"class.blink::BasePage"** nonnull dereferenceable(8) %3) #16
  br label %73

73:                                               ; preds = %64, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  br label %74

74:                                               ; preds = %73, %59
  call void @_ZN5blink10NormalPage15SweepAndCompactERNS0_17CompactionContextE(%"class.blink::NormalPage"* nonnull %55, %"class.blink::NormalPage::CompactionContext"* nonnull dereferenceable(40) %5)
  %75 = load i32, i32* %24, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %46

77:                                               ; preds = %46, %74
  %78 = load %"class.blink::NormalPage"*, %"class.blink::NormalPage"** %31, align 8
  %79 = icmp eq %"class.blink::NormalPage"* %78, null
  br i1 %79, label %80, label %82

80:                                               ; preds = %29, %77
  %81 = call %"class.blink::HeapCompact"* @_ZN5blink10ThreadHeap10CompactionEv(%"class.blink::ThreadHeap"* %9) #16
  call void @_ZN5blink11HeapCompact23FinishedArenaCompactionEPNS_15NormalPageArenaEmm(%"class.blink::HeapCompact"* %81, %"class.blink::NormalPageArena"* %0, i64 0, i64 0) #16
  br label %214

82:                                               ; preds = %77
  %83 = load i64, i64* %32, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %102

85:                                               ; preds = %82
  %86 = bitcast %"class.blink::BasePage"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86)
  %87 = bitcast %"class.blink::BasePage"** %2 to %"class.blink::NormalPage"**
  store %"class.blink::NormalPage"* %78, %"class.blink::NormalPage"** %87, align 8
  %88 = load i32, i32* %36, align 4
  %89 = load i32, i32* %35, align 8
  %90 = icmp eq i32 %88, %89
  br i1 %90, label %99, label %91, !prof !2

91:                                               ; preds = %85
  %92 = ptrtoint %"class.blink::NormalPage"* %78 to i64
  %93 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %34, align 8
  %94 = zext i32 %88 to i64
  %95 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %93, i64 %94
  %96 = bitcast %"class.blink::BasePage"** %95 to i64*
  store i64 %92, i64* %96, align 8
  %97 = load i32, i32* %36, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %36, align 4
  br label %101

99:                                               ; preds = %85
  %100 = getelementptr inbounds %"class.blink::PageStack", %"class.blink::PageStack"* %33, i64 0, i32 0
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %100, %"class.blink::BasePage"** nonnull dereferenceable(8) %2) #16
  br label %101

101:                                              ; preds = %91, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86)
  br label %179

102:                                              ; preds = %82
  %103 = bitcast %"class.blink::BasePage"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103)
  %104 = bitcast %"class.blink::BasePage"** %4 to %"class.blink::NormalPage"**
  store %"class.blink::NormalPage"* %78, %"class.blink::NormalPage"** %104, align 8
  %105 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %106, %108
  br i1 %109, label %119, label %110, !prof !2

110:                                              ; preds = %102
  %111 = ptrtoint %"class.blink::NormalPage"* %78 to i64
  %112 = getelementptr inbounds %"class.blink::PageStack", %"class.blink::PageStack"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %112, align 8
  %114 = zext i32 %106 to i64
  %115 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %113, i64 %114
  %116 = bitcast %"class.blink::BasePage"** %115 to i64*
  store i64 %111, i64* %116, align 8
  %117 = load i32, i32* %105, align 4
  %118 = add i32 %117, 1
  store i32 %118, i32* %105, align 4
  br label %121

119:                                              ; preds = %102
  %120 = getelementptr inbounds %"class.blink::PageStack", %"class.blink::PageStack"* %38, i64 0, i32 0
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %120, %"class.blink::BasePage"** nonnull dereferenceable(8) %4) #16
  br label %121

121:                                              ; preds = %110, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103)
  %122 = icmp eq i64 %83, 120208
  br i1 %122, label %179, label %123

123:                                              ; preds = %121
  %124 = sub i64 120208, %83
  %125 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %78, i64 1
  %126 = bitcast %"class.blink::NormalPage"* %125 to i8*
  %127 = getelementptr inbounds i8, i8* %126, i64 %83
  call void @llvm.memset.p0i8.i64(i8* align 1 %127, i8 0, i64 %124, i1 false)
  %128 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %78, i64 0, i32 0, i32 2
  %129 = bitcast %"class.blink::BaseArena"** %128 to %"class.blink::NormalPageArena"**
  %130 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %129, align 8
  %131 = icmp ult i64 %124, 16
  %132 = bitcast i8* %127 to i32*
  store i32 0, i32* %132, align 4
  %133 = getelementptr inbounds i8, i8* %127, i64 4
  %134 = bitcast i8* %133 to i16*
  store atomic i16 0, i16* %134 monotonic, align 2
  %135 = lshr i64 %124, 1
  %136 = trunc i64 %135 to i16
  %137 = getelementptr inbounds i8, i8* %127, i64 6
  %138 = bitcast i8* %137 to i16*
  store i16 %136, i16* %138, align 2
  br i1 %131, label %161, label %139

139:                                              ; preds = %123
  %140 = getelementptr inbounds i8, i8* %127, i64 8
  %141 = bitcast i8* %140 to %"class.blink::FreeListEntry"**
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %141, align 8
  %142 = call i64 @llvm.ctlz.i64(i64 %124, i1 true) #16, !range !8
  %143 = trunc i64 %142 to i32
  %144 = xor i32 %143, 63
  %145 = zext i32 %144 to i64
  %146 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %130, i64 0, i32 2, i32 0, i64 %145
  %147 = bitcast %"class.blink::FreeListEntry"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast i8* %140 to i64*
  store i64 %148, i64* %149, align 8
  %150 = bitcast %"class.blink::FreeListEntry"** %146 to i8**
  store i8* %127, i8** %150, align 8
  %151 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %130, i64 0, i32 2, i32 2
  %152 = load i32, i32* %151, align 8
  %153 = icmp sgt i32 %144, %152
  br i1 %153, label %154, label %155

154:                                              ; preds = %139
  store i32 %144, i32* %151, align 8
  br label %155

155:                                              ; preds = %154, %139
  %156 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %141, align 8
  %157 = icmp eq %"class.blink::FreeListEntry"* %156, null
  br i1 %157, label %158, label %161

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %130, i64 0, i32 2, i32 1, i64 %145
  %160 = bitcast %"class.blink::FreeListEntry"** %159 to i8**
  store i8* %127, i8** %160, align 8
  br label %161

161:                                              ; preds = %123, %155, %158
  %162 = ptrtoint i8* %127 to i64
  %163 = and i64 %162, -131072
  %164 = inttoptr i64 %163 to i8*
  %165 = getelementptr inbounds i8, i8* %164, i64 4400
  %166 = bitcast i8* %165 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %167 = bitcast i8* %165 to i64*
  %168 = load i64, i64* %167, align 16
  %169 = sub i64 %162, %168
  %170 = lshr i64 %169, 3
  %171 = lshr i64 %169, 6
  %172 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %166, i64 0, i32 0, i32 1, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = trunc i64 %170 to i32
  %175 = and i32 %174, 7
  %176 = shl i32 1, %175
  %177 = trunc i32 %176 to i8
  %178 = or i8 %173, %177
  store atomic i8 %178, i8* %172 release, align 1
  br label %179

179:                                              ; preds = %161, %121, %101
  %180 = phi i64 [ 0, %101 ], [ %124, %161 ], [ 0, %121 ]
  %181 = getelementptr inbounds %"class.blink::PageStack", %"class.blink::PageStack"* %33, i64 0, i32 0
  %182 = load i32, i32* %36, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %210, label %184

184:                                              ; preds = %179, %194
  %185 = phi i32 [ %208, %194 ], [ %182, %179 ]
  %186 = phi i64 [ %201, %194 ], [ 0, %179 ]
  %187 = phi i64 [ %200, %194 ], [ %180, %179 ]
  %188 = add i32 %185, -1
  %189 = call dereferenceable(8) %"class.blink::BasePage"** @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.129"* %181, i32 %188) #16
  %190 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %189, align 8
  %191 = load i32, i32* %36, align 4
  %192 = add i32 %191, -1
  store i32 %192, i32* %36, align 4
  %193 = icmp eq %"class.blink::BasePage"* %190, null
  br i1 %193, label %210, label %194

194:                                              ; preds = %184
  %195 = bitcast %"class.blink::BasePage"* %190 to i64 (%"class.blink::BasePage"*)***
  %196 = load i64 (%"class.blink::BasePage"*)**, i64 (%"class.blink::BasePage"*)*** %195, align 8
  %197 = getelementptr inbounds i64 (%"class.blink::BasePage"*)*, i64 (%"class.blink::BasePage"*)** %196, i64 9
  %198 = load i64 (%"class.blink::BasePage"*)*, i64 (%"class.blink::BasePage"*)** %197, align 8
  %199 = call i64 %198(%"class.blink::BasePage"* nonnull %190) #16
  %200 = add i64 %199, %187
  %201 = add i64 %186, 1
  %202 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %190, i64 55, i32 4
  %203 = bitcast i64* %202 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %203, i8 0, i64 120208, i1 false)
  %204 = bitcast %"class.blink::BasePage"* %190 to void (%"class.blink::BasePage"*)***
  %205 = load void (%"class.blink::BasePage"*)**, void (%"class.blink::BasePage"*)*** %204, align 8
  %206 = getelementptr inbounds void (%"class.blink::BasePage"*)*, void (%"class.blink::BasePage"*)** %205, i64 3
  %207 = load void (%"class.blink::BasePage"*)*, void (%"class.blink::BasePage"*)** %206, align 8
  call void %207(%"class.blink::BasePage"* nonnull %190) #16
  %208 = load i32, i32* %36, align 4
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %184

210:                                              ; preds = %184, %194, %179
  %211 = phi i64 [ %180, %179 ], [ %200, %194 ], [ %187, %184 ]
  %212 = phi i64 [ 0, %179 ], [ %201, %194 ], [ %186, %184 ]
  %213 = call %"class.blink::HeapCompact"* @_ZN5blink10ThreadHeap10CompactionEv(%"class.blink::ThreadHeap"* %9) #16
  call void @_ZN5blink11HeapCompact23FinishedArenaCompactionEPNS_15NormalPageArenaEmm(%"class.blink::HeapCompact"* %213, %"class.blink::NormalPageArena"* %0, i64 %212, i64 %211) #16
  br label %214

214:                                              ; preds = %210, %80
  %215 = getelementptr inbounds %"class.blink::NormalPage::CompactionContext", %"class.blink::NormalPage::CompactionContext"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %216 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %215, align 8
  %217 = icmp eq %"class.blink::BasePage"** %216, null
  %218 = bitcast %"class.blink::BasePage"** %216 to i8*
  br i1 %217, label %224, label %219, !prof !3

219:                                              ; preds = %214
  %220 = load i32, i32* %36, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %223, label %222, !prof !2

222:                                              ; preds = %219
  store i32 0, i32* %36, align 4
  br label %223

223:                                              ; preds = %222, %219
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %218) #16
  store %"class.blink::BasePage"** null, %"class.blink::BasePage"*** %215, align 8
  br label %224

224:                                              ; preds = %214, %223
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #16
  br label %225

225:                                              ; preds = %14, %1, %224, %27
  ret void
}

declare void @_ZN5blink11HeapCompact23FinishedArenaCompactionEPNS_15NormalPageArenaEmm(%"class.blink::HeapCompact"*, %"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10NormalPage15SweepAndCompactERNS0_17CompactionContextE(%"class.blink::NormalPage"*, %"class.blink::NormalPage::CompactionContext"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::BasePage"*, align 8
  %4 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 2048, i1 false) #16
  %5 = getelementptr inbounds %"class.blink::NormalPage::CompactionContext", %"class.blink::NormalPage::CompactionContext"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::NormalPage::CompactionContext", %"class.blink::NormalPage::CompactionContext"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 4
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::BaseArena"*, %"class.blink::BaseArena"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %9, i64 0, i32 5
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = tail call %"class.blink::HeapCompact"* @_ZN5blink10ThreadHeap10CompactionEv(%"class.blink::ThreadHeap"* %13) #16
  %15 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 1
  %16 = bitcast %"class.blink::NormalPage"* %15 to i8*
  %17 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 45, i32 4, i32 1, i64 16
  %18 = bitcast %"class.blink::FreeListEntry"** %17 to i8*
  %19 = getelementptr inbounds %"class.blink::NormalPage::CompactionContext", %"class.blink::NormalPage::CompactionContext"* %1, i64 0, i32 3
  %20 = bitcast %"class.blink::NormalPage::CompactionContext"* %1 to %"class.blink::BasePage"**
  %21 = bitcast %"class.blink::BasePage"** %3 to i8*
  %22 = getelementptr inbounds %"class.blink::NormalPage::CompactionContext", %"class.blink::NormalPage::CompactionContext"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %23 = getelementptr inbounds %"class.blink::NormalPage::CompactionContext", %"class.blink::NormalPage::CompactionContext"* %1, i64 0, i32 2, i32 0
  %24 = bitcast %"class.blink::BasePage"** %3 to %"class.blink::NormalPage"**
  br label %26

25:                                               ; preds = %188
  ret void

26:                                               ; preds = %2, %188
  %27 = phi i8* [ %16, %2 ], [ %189, %188 ]
  %28 = getelementptr inbounds i8, i8* %27, i64 6
  %29 = bitcast i8* %28 to i16*
  %30 = load i16, i16* %29, align 2
  %31 = lshr i16 %30, 2
  %32 = zext i16 %31 to i64
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %27, i64 4
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp ult i16 %36, 4
  br i1 %37, label %188, label %38

38:                                               ; preds = %26
  %39 = getelementptr inbounds i8, i8* %27, i64 8
  %40 = and i16 %30, 1
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %38
  %43 = lshr i16 %36, 2
  %44 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %45 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %44, i64 0, i32 0
  %46 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %45, align 8
  %47 = zext i16 %43 to i64
  %48 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %46, i64 %47
  %49 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %48, align 8
  %50 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %49, i64 0, i32 1
  %51 = load void (i8*)*, void (i8*)** %50, align 8
  %52 = icmp eq void (i8*)* %51, null
  br i1 %52, label %188, label %53

53:                                               ; preds = %42
  call void %51(i8* %39) #16
  br label %188

54:                                               ; preds = %38
  %55 = and i16 %30, -2
  store i16 %55, i16* %29, align 2
  %56 = load %"class.blink::NormalPage"*, %"class.blink::NormalPage"** %5, align 8
  %57 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %56, i64 1
  %58 = bitcast %"class.blink::NormalPage"* %57 to i8*
  %59 = load i64, i64* %6, align 8
  %60 = getelementptr inbounds i8, i8* %58, i64 %59
  %61 = getelementptr inbounds i8, i8* %60, i64 %33
  %62 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %56, i64 45, i32 4, i32 1, i64 16
  %63 = bitcast %"class.blink::FreeListEntry"** %62 to i8*
  %64 = icmp ugt i8* %61, %63
  br i1 %64, label %65, label %155

65:                                               ; preds = %54
  %66 = load %"class.blink::PageStack"*, %"class.blink::PageStack"** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  store %"class.blink::NormalPage"* %56, %"class.blink::NormalPage"** %24, align 8
  %67 = getelementptr inbounds %"class.blink::PageStack", %"class.blink::PageStack"* %66, i64 0, i32 0, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.blink::PageStack", %"class.blink::PageStack"* %66, i64 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %68, %70
  br i1 %71, label %81, label %72, !prof !2

72:                                               ; preds = %65
  %73 = ptrtoint %"class.blink::NormalPage"* %56 to i64
  %74 = getelementptr inbounds %"class.blink::PageStack", %"class.blink::PageStack"* %66, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %74, align 8
  %76 = zext i32 %68 to i64
  %77 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %75, i64 %76
  %78 = bitcast %"class.blink::BasePage"** %77 to i64*
  store i64 %73, i64* %78, align 8
  %79 = load i32, i32* %67, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %67, align 4
  br label %83

81:                                               ; preds = %65
  %82 = getelementptr inbounds %"class.blink::PageStack", %"class.blink::PageStack"* %66, i64 0, i32 0
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %82, %"class.blink::BasePage"** nonnull dereferenceable(8) %3) #16
  br label %83

83:                                               ; preds = %72, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  %84 = load i64, i64* %6, align 8
  %85 = sub i64 120208, %84
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %140, label %87

87:                                               ; preds = %83
  call void @llvm.memset.p0i8.i64(i8* align 1 %60, i8 0, i64 %85, i1 false)
  %88 = load %"class.blink::NormalPage"*, %"class.blink::NormalPage"** %5, align 8
  %89 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %88, i64 0, i32 0, i32 2
  %90 = bitcast %"class.blink::BaseArena"** %89 to %"class.blink::NormalPageArena"**
  %91 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %90, align 8
  %92 = icmp ult i64 %85, 16
  %93 = bitcast i8* %60 to i32*
  store i32 0, i32* %93, align 4
  %94 = getelementptr inbounds i8, i8* %60, i64 4
  %95 = bitcast i8* %94 to i16*
  store atomic i16 0, i16* %95 monotonic, align 2
  %96 = lshr i64 %85, 1
  %97 = trunc i64 %96 to i16
  %98 = getelementptr inbounds i8, i8* %60, i64 6
  %99 = bitcast i8* %98 to i16*
  store i16 %97, i16* %99, align 2
  br i1 %92, label %122, label %100

100:                                              ; preds = %87
  %101 = getelementptr inbounds i8, i8* %60, i64 8
  %102 = bitcast i8* %101 to %"class.blink::FreeListEntry"**
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %102, align 8
  %103 = call i64 @llvm.ctlz.i64(i64 %85, i1 true) #16, !range !8
  %104 = trunc i64 %103 to i32
  %105 = xor i32 %104, 63
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %91, i64 0, i32 2, i32 0, i64 %106
  %108 = bitcast %"class.blink::FreeListEntry"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i8* %101 to i64*
  store i64 %109, i64* %110, align 8
  %111 = bitcast %"class.blink::FreeListEntry"** %107 to i8**
  store i8* %60, i8** %111, align 8
  %112 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %91, i64 0, i32 2, i32 2
  %113 = load i32, i32* %112, align 8
  %114 = icmp sgt i32 %105, %113
  br i1 %114, label %115, label %116

115:                                              ; preds = %100
  store i32 %105, i32* %112, align 8
  br label %116

116:                                              ; preds = %115, %100
  %117 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %102, align 8
  %118 = icmp eq %"class.blink::FreeListEntry"* %117, null
  br i1 %118, label %119, label %122

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %91, i64 0, i32 2, i32 1, i64 %106
  %121 = bitcast %"class.blink::FreeListEntry"** %120 to i8**
  store i8* %60, i8** %121, align 8
  br label %122

122:                                              ; preds = %87, %116, %119
  %123 = ptrtoint i8* %60 to i64
  %124 = and i64 %123, -131072
  %125 = inttoptr i64 %124 to i8*
  %126 = getelementptr inbounds i8, i8* %125, i64 4400
  %127 = bitcast i8* %126 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %128 = bitcast i8* %126 to i64*
  %129 = load i64, i64* %128, align 16
  %130 = sub i64 %123, %129
  %131 = lshr i64 %130, 3
  %132 = lshr i64 %130, 6
  %133 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %127, i64 0, i32 0, i32 1, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = trunc i64 %131 to i32
  %136 = and i32 %135, 7
  %137 = shl i32 1, %136
  %138 = trunc i32 %137 to i8
  %139 = or i8 %134, %138
  store atomic i8 %139, i8* %133 release, align 1
  br label %140

140:                                              ; preds = %83, %122
  %141 = load i32, i32* %22, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %150, label %143

143:                                              ; preds = %140
  %144 = add i32 %141, -1
  %145 = call dereferenceable(8) %"class.blink::BasePage"** @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.129"* %23, i32 %144) #16
  %146 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %145, align 8
  %147 = bitcast %"class.blink::BasePage"* %146 to %"class.blink::NormalPage"*
  %148 = load i32, i32* %22, align 4
  %149 = add i32 %148, -1
  store i32 %149, i32* %22, align 4
  br label %150

150:                                              ; preds = %140, %143
  %151 = phi %"class.blink::NormalPage"* [ %147, %143 ], [ null, %140 ]
  %152 = phi %"class.blink::BasePage"* [ %146, %143 ], [ null, %140 ]
  store %"class.blink::NormalPage"* %151, %"class.blink::NormalPage"** %5, align 8
  store i64 0, i64* %6, align 8
  %153 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %152, i64 55, i32 4
  %154 = bitcast i64* %153 to i8*
  br label %155

155:                                              ; preds = %150, %54
  %156 = phi %"class.blink::NormalPage"* [ %151, %150 ], [ %56, %54 ]
  %157 = phi i8* [ %154, %150 ], [ %60, %54 ]
  %158 = icmp eq i8* %157, %27
  br i1 %158, label %166, label %159, !prof !2

159:                                              ; preds = %155
  %160 = icmp eq %"class.blink::NormalPage"* %156, %0
  br i1 %160, label %161, label %162

161:                                              ; preds = %159
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %157, i8* align 1 %27, i64 %33, i1 false)
  br label %163

162:                                              ; preds = %159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %157, i8* align 1 %27, i64 %33, i1 false)
  br label %163

163:                                              ; preds = %162, %161
  %164 = getelementptr inbounds i8, i8* %157, i64 8
  call void @_ZN5blink11HeapCompact8RelocateEPhS1_(%"class.blink::HeapCompact"* %14, i8* %39, i8* %164) #16
  %165 = load %"class.blink::NormalPage"*, %"class.blink::NormalPage"** %5, align 8
  br label %166

166:                                              ; preds = %155, %163
  %167 = phi %"class.blink::NormalPage"* [ %156, %155 ], [ %165, %163 ]
  %168 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %167, i64 0, i32 2
  %169 = bitcast %"class.blink::PlatformAwareObjectStartBitmap"* %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = ptrtoint i8* %157 to i64
  %172 = sub i64 %171, %170
  %173 = lshr i64 %172, 3
  %174 = lshr i64 %172, 6
  %175 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %167, i64 0, i32 2, i32 0, i32 1, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = trunc i64 %173 to i32
  %178 = and i32 %177, 7
  %179 = shl i32 1, %178
  %180 = trunc i32 %179 to i8
  %181 = or i8 %176, %180
  store i8 %181, i8* %175, align 1
  %182 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %20, align 8
  %183 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %182, i64 0, i32 4
  %184 = load i64, i64* %183, align 8
  %185 = add i64 %184, %33
  store i64 %185, i64* %183, align 8
  %186 = load i64, i64* %6, align 8
  %187 = add i64 %186, %33
  store i64 %187, i64* %6, align 8
  br label %188

188:                                              ; preds = %53, %42, %166, %26
  %189 = getelementptr inbounds i8, i8* %27, i64 %33
  %190 = icmp ult i8* %189, %18
  br i1 %190, label %26, label %25
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink15NormalPageArena23VerifyObjectStartBitmapEv(%"class.blink::NormalPageArena"* nocapture) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9BaseArena13VerifyMarkingEv(%"class.blink::BaseArena"* nocapture) local_unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NormalPageArena12AllocatePageEv(%"class.blink::NormalPageArena"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::BasePage"*, align 8
  %3 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 5
  %4 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.blink::PagePool"*, %"class.blink::PagePool"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 6
  %10 = load i32, i32* %9, align 8
  %11 = tail call %"class.blink::PageMemory"* @_ZN5blink8PagePool4TakeEi(%"class.blink::PagePool"* %8, i32 %10) #16
  %12 = icmp eq %"class.blink::PageMemory"* %11, null
  br i1 %12, label %13, label %57

13:                                               ; preds = %1
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %3, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = load %"class.blink::RegionTree"*, %"class.blink::RegionTree"** %17, align 8
  %19 = tail call %"class.blink::PageMemoryRegion"* @_ZN5blink16PageMemoryRegion8AllocateEmjPNS_10RegionTreeE(i64 1310720, i32 10, %"class.blink::RegionTree"* %18) #16
  br label %20

20:                                               ; preds = %53, %13
  %21 = phi %"class.blink::PageMemory"* [ null, %13 ], [ %54, %53 ]
  %22 = phi i64 [ 0, %13 ], [ %55, %53 ]
  %23 = shl i64 %22, 17
  %24 = tail call %"class.blink::PageMemory"* @_ZN5blink10PageMemory23SetupPageMemoryInRegionEPNS_16PageMemoryRegionEmm(%"class.blink::PageMemoryRegion"* %19, i64 %23, i64 122880) #16
  %25 = icmp eq %"class.blink::PageMemory"* %21, null
  br i1 %25, label %26, label %46

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::PageMemory", %"class.blink::PageMemory"* %24, i64 0, i32 0
  %28 = load %"class.blink::PageMemoryRegion"*, %"class.blink::PageMemoryRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PageMemoryRegion", %"class.blink::PageMemoryRegion"* %28, i64 0, i32 1
  %30 = load i8, i8* %29, align 8, !range !6
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %42

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::PageMemory", %"class.blink::PageMemory"* %24, i64 0, i32 1, i32 0
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 562949953290240
  %37 = bitcast %"class.blink::PageMemoryRegion"* %28 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = lshr i64 %39, 17
  %41 = and i64 %40, 4294967295
  br label %42

42:                                               ; preds = %26, %32
  %43 = phi i64 [ %41, %32 ], [ 0, %26 ]
  %44 = getelementptr inbounds %"class.blink::PageMemoryRegion", %"class.blink::PageMemoryRegion"* %28, i64 0, i32 2, i64 %43
  store i8 1, i8* %44, align 1
  %45 = getelementptr inbounds %"class.blink::PageMemory", %"class.blink::PageMemory"* %24, i64 0, i32 1
  tail call void @_ZN5blink12MemoryRegion6CommitEv(%"class.blink::MemoryRegion"* %45) #16
  br label %53

46:                                               ; preds = %20
  %47 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %3, align 8
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %49, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PagePool"*, %"class.blink::PagePool"** %50, align 8
  %52 = load i32, i32* %9, align 8
  tail call void @_ZN5blink8PagePool3AddEiPNS_10PageMemoryE(%"class.blink::PagePool"* %51, i32 %52, %"class.blink::PageMemory"* %24) #16
  br label %53

53:                                               ; preds = %46, %42
  %54 = phi %"class.blink::PageMemory"* [ %21, %46 ], [ %24, %42 ]
  %55 = add nuw nsw i64 %22, 1
  %56 = icmp eq i64 %55, 10
  br i1 %56, label %57, label %20

57:                                               ; preds = %53, %1
  %58 = phi %"class.blink::PageMemory"* [ %11, %1 ], [ %54, %53 ]
  %59 = getelementptr inbounds %"class.blink::PageMemory", %"class.blink::PageMemory"* %58, i64 0, i32 1, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast i8* %60 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink8BasePageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 8
  %63 = bitcast i8* %62 to %"class.blink::PageMemory"**
  store %"class.blink::PageMemory"* %58, %"class.blink::PageMemory"** %63, align 8
  %64 = getelementptr inbounds i8, i8* %60, i64 16
  %65 = bitcast i8* %64 to %"class.blink::NormalPageArena"**
  store %"class.blink::NormalPageArena"* %0, %"class.blink::NormalPageArena"** %65, align 8
  %66 = getelementptr inbounds i8, i8* %60, i64 24
  %67 = bitcast %"class.blink::ThreadState"** %3 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast i8* %66 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds i8, i8* %60, i64 32
  %71 = bitcast i8* %70 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds i8, i8* %60, i64 40
  store i8 1, i8* %72, align 8
  %73 = getelementptr inbounds i8, i8* %60, i64 41
  store i8 0, i8* %73, align 1
  %74 = getelementptr inbounds i8, i8* %60, i64 42
  store i8 0, i8* %74, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink10NormalPageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %75 = getelementptr inbounds i8, i8* %60, i64 43
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %75, i8 0, i64 256, i1 false) #16
  %76 = getelementptr inbounds i8, i8* %60, i64 304
  %77 = getelementptr inbounds i8, i8* %60, i64 2672
  %78 = bitcast i8* %76 to i8**
  store i8* %77, i8** %78, align 8
  %79 = getelementptr inbounds i8, i8* %60, i64 312
  %80 = getelementptr inbounds i8, i8* %60, i64 2656
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 2340, i1 false) #16
  %81 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %82) #16
  %83 = bitcast %"class.blink::BasePage"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #16
  %84 = bitcast %"class.blink::BasePage"** %2 to i8**
  store i8* %60, i8** %84, align 8
  %85 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %86, %88
  br i1 %89, label %99, label %90, !prof !2

90:                                               ; preds = %57
  %91 = ptrtoint i8* %60 to i64
  %92 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %92, align 8
  %94 = zext i32 %86 to i64
  %95 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %93, i64 %94
  %96 = bitcast %"class.blink::BasePage"** %95 to i64*
  store i64 %91, i64* %96, align 8
  %97 = load i32, i32* %85, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %85, align 4
  br label %102

99:                                               ; preds = %57
  %100 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %81, i64 0, i32 0, i32 0
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %100, %"class.blink::BasePage"** nonnull dereferenceable(8) %2) #16
  %101 = ptrtoint i8* %60 to i64
  br label %102

102:                                              ; preds = %90, %99
  %103 = phi i64 [ %91, %90 ], [ %101, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #16
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %82) #16
  %104 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %3, align 8
  %105 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %106, i64 0, i32 1, i32 0, i32 0, i32 0
  %108 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %107, align 8
  call void @_ZN5blink24ThreadHeapStatsCollector22IncreaseAllocatedSpaceEm(%"class.blink::ThreadHeapStatsCollector"* %108, i64 131072) #16
  %109 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %106, i64 0, i32 3, i32 0, i32 0, i32 0
  %110 = load %"class.blink::PageBloomFilter"*, %"class.blink::PageBloomFilter"** %109, align 8
  %111 = lshr i64 %103, 17
  %112 = lshr i64 %103, 29
  %113 = xor i64 %111, %112
  %114 = lshr i64 %113, 24
  %115 = xor i64 %114, %113
  %116 = and i64 %115, 4095
  %117 = getelementptr inbounds %"class.blink::PageBloomFilter", %"class.blink::PageBloomFilter"* %110, i64 0, i32 0, i32 0, i64 %116
  %118 = getelementptr inbounds %"class.blink::PageBloomFilter", %"class.blink::PageBloomFilter"* %110, i64 0, i32 0, i32 0, i64 0
  %119 = load i8, i8* %117, align 1
  %120 = icmp eq i8 %119, -1
  br i1 %120, label %123, label %121, !prof !2

121:                                              ; preds = %102
  %122 = add nuw i8 %119, 1
  store i8 %122, i8* %117, align 1
  br label %123

123:                                              ; preds = %121, %102
  %124 = load i8, i8* %118, align 1
  %125 = icmp eq i8 %124, -1
  br i1 %125, label %128, label %126, !prof !2

126:                                              ; preds = %123
  %127 = add nuw i8 %124, 1
  store i8 %127, i8* %118, align 1
  br label %128

128:                                              ; preds = %126, %123
  %129 = bitcast i8* %77 to i32*
  store i32 0, i32* %129, align 4
  %130 = getelementptr inbounds i8, i8* %60, i64 2676
  %131 = bitcast i8* %130 to i16*
  store atomic i16 0, i16* %131 monotonic, align 2
  %132 = getelementptr inbounds i8, i8* %60, i64 2678
  %133 = bitcast i8* %132 to i16*
  store i16 -5432, i16* %133, align 2
  %134 = getelementptr inbounds i8, i8* %60, i64 2680
  %135 = bitcast i8* %134 to %"class.blink::FreeListEntry"**
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %135, align 8
  %136 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 0, i64 16
  %137 = bitcast %"class.blink::FreeListEntry"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %134 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"class.blink::FreeListEntry"** %136 to i8**
  store i8* %77, i8** %140, align 8
  %141 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 2
  %142 = load i32, i32* %141, align 8
  %143 = icmp slt i32 %142, 16
  br i1 %143, label %144, label %145

144:                                              ; preds = %128
  store i32 16, i32* %141, align 8
  br label %145

145:                                              ; preds = %144, %128
  %146 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %135, align 8
  %147 = icmp eq %"class.blink::FreeListEntry"* %146, null
  br i1 %147, label %148, label %151

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 1, i64 16
  %150 = bitcast %"class.blink::FreeListEntry"** %149 to i8**
  store i8* %77, i8** %150, align 8
  br label %151

151:                                              ; preds = %145, %148
  %152 = ptrtoint i8* %77 to i64
  %153 = and i64 %152, -131072
  %154 = inttoptr i64 %153 to i8*
  %155 = getelementptr inbounds i8, i8* %154, i64 4400
  %156 = bitcast i8* %155 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %157 = bitcast i8* %155 to i64*
  %158 = load i64, i64* %157, align 16
  %159 = sub i64 %152, %158
  %160 = lshr i64 %159, 3
  %161 = lshr i64 %159, 6
  %162 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %156, i64 0, i32 0, i32 1, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = trunc i64 %160 to i32
  %165 = and i32 %164, 7
  %166 = shl i32 1, %165
  %167 = trunc i32 %166 to i8
  %168 = or i8 %163, %167
  store atomic i8 %168, i8* %162 release, align 1
  fence seq_cst
  ret void
}

declare %"class.blink::PageMemory"* @_ZN5blink8PagePool4TakeEi(%"class.blink::PagePool"*, i32) local_unnamed_addr #6

declare %"class.blink::PageMemory"* @_ZN5blink10PageMemory23SetupPageMemoryInRegionEPNS_16PageMemoryRegionEmm(%"class.blink::PageMemoryRegion"*, i64, i64) local_unnamed_addr #6

declare void @_ZN5blink8PagePool3AddEiPNS_10PageMemoryE(%"class.blink::PagePool"*, i32, %"class.blink::PageMemory"*) local_unnamed_addr #6

declare void @_ZN5blink24ThreadHeapStatsCollector22IncreaseAllocatedSpaceEm(%"class.blink::ThreadHeapStatsCollector"*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink10NormalPage4sizeEv(%"class.blink::NormalPage"*) unnamed_addr #0 comdat align 2 {
  ret i64 131072
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NormalPageArena8FreePageEPNS_10NormalPageE(%"class.blink::NormalPageArena"* nocapture readonly, %"class.blink::NormalPage"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 5
  %4 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %7, align 8
  tail call void @_ZN5blink24ThreadHeapStatsCollector22DecreaseAllocatedSpaceEm(%"class.blink::ThreadHeapStatsCollector"* %8, i64 131072) #16
  %9 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.blink::PageBloomFilter"*, %"class.blink::PageBloomFilter"** %9, align 8
  %11 = ptrtoint %"class.blink::NormalPage"* %1 to i64
  %12 = lshr i64 %11, 17
  %13 = lshr i64 %11, 29
  %14 = xor i64 %12, %13
  %15 = lshr i64 %14, 24
  %16 = xor i64 %15, %14
  %17 = and i64 %16, 4095
  %18 = getelementptr inbounds %"class.blink::PageBloomFilter", %"class.blink::PageBloomFilter"* %10, i64 0, i32 0, i32 0, i64 %17
  %19 = getelementptr inbounds %"class.blink::PageBloomFilter", %"class.blink::PageBloomFilter"* %10, i64 0, i32 0, i32 0, i64 0
  %20 = load i8, i8* %18, align 1
  %21 = icmp eq i8 %20, -1
  br i1 %21, label %24, label %22, !prof !2

22:                                               ; preds = %2
  %23 = add i8 %20, -1
  store i8 %23, i8* %18, align 1
  br label %24

24:                                               ; preds = %22, %2
  %25 = load i8, i8* %19, align 1
  %26 = icmp eq i8 %25, -1
  br i1 %26, label %29, label %27, !prof !2

27:                                               ; preds = %24
  %28 = add i8 %25, -1
  store i8 %28, i8* %19, align 1
  br label %29

29:                                               ; preds = %24, %27
  %30 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %1, i64 0, i32 0, i32 1
  %31 = load %"class.blink::PageMemory"*, %"class.blink::PageMemory"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %1, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink10NormalPageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %34 = load %"struct.blink::NormalPage::FutureFreelistEntry"*, %"struct.blink::NormalPage::FutureFreelistEntry"** %33, align 8
  %35 = icmp eq %"struct.blink::NormalPage::FutureFreelistEntry"* %34, null
  %36 = bitcast %"struct.blink::NormalPage::FutureFreelistEntry"* %34 to i8*
  br i1 %35, label %43, label %37, !prof !3

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %1, i64 0, i32 5, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %42, label %41, !prof !2

41:                                               ; preds = %37
  store i32 0, i32* %38, align 4
  br label %42

42:                                               ; preds = %41, %37
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %36) #16
  store %"struct.blink::NormalPage::FutureFreelistEntry"* null, %"struct.blink::NormalPage::FutureFreelistEntry"** %33, align 8
  br label %43

43:                                               ; preds = %42, %29
  %44 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"struct.blink::NormalPage::ToBeFinalizedObject"*, %"struct.blink::NormalPage::ToBeFinalizedObject"** %44, align 8
  %46 = icmp eq %"struct.blink::NormalPage::ToBeFinalizedObject"* %45, null
  %47 = bitcast %"struct.blink::NormalPage::ToBeFinalizedObject"* %45 to i8*
  br i1 %46, label %54, label %48, !prof !3

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %1, i64 0, i32 3, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52, !prof !2

52:                                               ; preds = %48
  store i32 0, i32* %49, align 4
  br label %53

53:                                               ; preds = %52, %48
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %47) #16
  store %"struct.blink::NormalPage::ToBeFinalizedObject"* null, %"struct.blink::NormalPage::ToBeFinalizedObject"** %44, align 8
  br label %54

54:                                               ; preds = %43, %53
  %55 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %3, align 8
  %56 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %57, i64 0, i32 4, i32 0, i32 0, i32 0
  %59 = load %"class.blink::PagePool"*, %"class.blink::PagePool"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 6
  %61 = load i32, i32* %60, align 8
  tail call void @_ZN5blink8PagePool3AddEiPNS_10PageMemoryE(%"class.blink::PagePool"* %59, i32 %61, %"class.blink::PageMemory"* %31) #16
  ret void
}

declare void @_ZN5blink24ThreadHeapStatsCollector22DecreaseAllocatedSpaceEm(%"class.blink::ThreadHeapStatsCollector"*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30PlatformAwareObjectStartBitmapC2EPh(%"class.blink::PlatformAwareObjectStartBitmap"* nocapture, i8*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %0, i64 0, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %0, i64 0, i32 0, i32 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 2048, i1 false) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ObjectStartBitmapC2EPh(%"class.blink::ObjectStartBitmap"* nocapture, i8*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %0, i64 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %0, i64 0, i32 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 2048, i1 false) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ObjectStartBitmap5ClearEv(%"class.blink::ObjectStartBitmap"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %0, i64 0, i32 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 2048, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NormalPageArena18PromptlyFreeObjectEPNS_16HeapObjectHeaderE(%"class.blink::NormalPageArena"* nocapture, %"class.blink::HeapObjectHeader"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HeapObjectHeader"* %1 to i8*
  %4 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %1, i64 0, i32 2
  %5 = load i16, i16* %4, align 2
  %6 = lshr i16 %5, 2
  %7 = zext i16 %6 to i64
  %8 = shl nuw nsw i64 %7, 3
  %9 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 5
  %10 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %10, i64 0, i32 7
  store i8 1, i8* %11, align 1
  %12 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %1, i64 0, i32 1
  %13 = load i16, i16* %12, align 2
  %14 = lshr i16 %13, 2
  %15 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %16 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %15, i64 0, i32 0
  %17 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %16, align 8
  %18 = zext i16 %14 to i64
  %19 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %17, i64 %18
  %20 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %19, align 8
  %21 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %20, i64 0, i32 1
  %22 = load void (i8*)*, void (i8*)** %21, align 8
  %23 = icmp eq void (i8*)* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %1, i64 1
  %26 = bitcast %"class.blink::HeapObjectHeader"* %25 to i8*
  tail call void %22(i8* %26) #16
  br label %27

27:                                               ; preds = %2, %24
  %28 = load i16, i16* %4, align 2
  %29 = lshr i16 %28, 2
  %30 = zext i16 %29 to i64
  %31 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %1, i64 %30
  %32 = bitcast %"class.blink::HeapObjectHeader"* %31 to i8*
  %33 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 3
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, %32
  br i1 %35, label %36, label %60

36:                                               ; preds = %27
  %37 = sub nsw i64 0, %8
  %38 = getelementptr inbounds i8, i8* %32, i64 %37
  store i8* %38, i8** %33, align 8
  %39 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 4
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %8
  store i64 %41, i64* %39, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 %8, i1 false)
  %42 = ptrtoint %"class.blink::HeapObjectHeader"* %1 to i64
  %43 = and i64 %42, -131072
  %44 = inttoptr i64 %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 4400
  %46 = bitcast i8* %45 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %47 = bitcast i8* %45 to i64*
  %48 = load i64, i64* %47, align 16
  %49 = sub i64 %42, %48
  %50 = lshr i64 %49, 3
  %51 = lshr i64 %49, 6
  %52 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %46, i64 0, i32 0, i32 1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = trunc i64 %50 to i32
  %55 = and i32 %54, 7
  %56 = shl i32 1, %55
  %57 = trunc i32 %56 to i8
  %58 = xor i8 %57, -1
  %59 = and i8 %53, %58
  store i8 %59, i8* %52, align 1
  br label %61

60:                                               ; preds = %27
  tail call void @_ZN5blink15NormalPageArena28PromptlyFreeObjectInFreeListEPNS_16HeapObjectHeaderEm(%"class.blink::NormalPageArena"* %0, %"class.blink::HeapObjectHeader"* %1, i64 %8)
  br label %61

61:                                               ; preds = %36, %60
  store i8 0, i8* %11, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NormalPageArena28PromptlyFreeObjectInFreeListEPNS_16HeapObjectHeaderEm(%"class.blink::NormalPageArena"* nocapture, %"class.blink::HeapObjectHeader"*, i64) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::HeapObjectHeader"* %1 to i64
  %5 = and i64 %4, -131072
  %6 = inttoptr i64 %5 to i8*
  %7 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %1, i64 1
  %8 = bitcast %"class.blink::HeapObjectHeader"* %7 to i8*
  %9 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %1, i64 0, i32 2
  %10 = load i16, i16* %9, align 2
  %11 = lshr i16 %10, 2
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %13, label %17, !prof !2

13:                                               ; preds = %3
  %14 = getelementptr inbounds i8, i8* %6, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %3
  %18 = zext i16 %11 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %13, %17
  %21 = phi i64 [ %16, %13 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 %22, i1 false)
  %23 = icmp ult i64 %2, 16
  %24 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %1, i64 0, i32 0
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %1, i64 0, i32 1
  store atomic i16 0, i16* %25 monotonic, align 2
  %26 = lshr i64 %2, 1
  %27 = trunc i64 %26 to i16
  store i16 %27, i16* %9, align 2
  br i1 %23, label %49, label %28

28:                                               ; preds = %20
  %29 = bitcast %"class.blink::HeapObjectHeader"* %7 to %"class.blink::FreeListEntry"**
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %29, align 8
  %30 = tail call i64 @llvm.ctlz.i64(i64 %2, i1 true) #16, !range !8
  %31 = trunc i64 %30 to i32
  %32 = xor i32 %31, 63
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 0, i64 %33
  %35 = bitcast %"class.blink::FreeListEntry"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::HeapObjectHeader"* %7 to i64*
  store i64 %36, i64* %37, align 8
  %38 = bitcast %"class.blink::FreeListEntry"** %34 to %"class.blink::HeapObjectHeader"**
  store %"class.blink::HeapObjectHeader"* %1, %"class.blink::HeapObjectHeader"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = icmp sgt i32 %32, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %28
  store i32 %32, i32* %39, align 8
  br label %43

43:                                               ; preds = %42, %28
  %44 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %29, align 8
  %45 = icmp eq %"class.blink::FreeListEntry"* %44, null
  br i1 %45, label %46, label %49

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 1, i64 %33
  %48 = bitcast %"class.blink::FreeListEntry"** %47 to %"class.blink::HeapObjectHeader"**
  store %"class.blink::HeapObjectHeader"* %1, %"class.blink::HeapObjectHeader"** %48, align 8
  br label %49

49:                                               ; preds = %20, %43, %46
  %50 = getelementptr inbounds i8, i8* %6, i64 4400
  %51 = bitcast i8* %50 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %52 = bitcast i8* %50 to i64*
  %53 = load i64, i64* %52, align 16
  %54 = sub i64 %4, %53
  %55 = lshr i64 %54, 3
  %56 = lshr i64 %54, 6
  %57 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %51, i64 0, i32 0, i32 1, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = trunc i64 %55 to i32
  %60 = and i32 %59, 7
  %61 = shl i32 1, %60
  %62 = trunc i32 %61 to i8
  %63 = or i8 %58, %62
  store atomic i8 %63, i8* %57 release, align 1
  %64 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 5
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, %2
  store i64 %66, i64* %64, align 8
  %67 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 5
  %68 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %70, i64 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %71, align 8
  tail call void @_ZN5blink24ThreadHeapStatsCollector27DecreaseAllocatedObjectSizeEm(%"class.blink::ThreadHeapStatsCollector"* %72, i64 %2) #16
  %73 = getelementptr inbounds i8, i8* %6, i64 4128
  %74 = bitcast i8* %73 to i64*
  %75 = load i64, i64* %74, align 32
  %76 = sub i64 %75, %2
  store i64 %76, i64* %74, align 32
  ret void
}

declare void @_ZN5blink24ThreadHeapStatsCollector27DecreaseAllocatedObjectSizeEm(%"class.blink::ThreadHeapStatsCollector"*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15NormalPageArena12ExpandObjectEPNS_16HeapObjectHeaderEm(%"class.blink::NormalPageArena"* nocapture, %"class.blink::HeapObjectHeader"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %1, i64 0, i32 2
  %8 = load i16, i16* %7, align 2
  %9 = lshr i16 %8, 2
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %11, label %18, !prof !2

11:                                               ; preds = %3
  %12 = ptrtoint %"class.blink::HeapObjectHeader"* %1 to i64
  %13 = and i64 %12, -131072
  %14 = inttoptr i64 %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 4144
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 16
  br label %21

18:                                               ; preds = %3
  %19 = zext i16 %9 to i64
  %20 = shl nuw nsw i64 %19, 3
  br label %21

21:                                               ; preds = %11, %18
  %22 = phi i64 [ %17, %11 ], [ %20, %18 ]
  %23 = add i64 %22, -8
  %24 = icmp ult i64 %23, %2
  br i1 %24, label %25, label %66

25:                                               ; preds = %21
  %26 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #16
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %27, align 8
  %28 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  %29 = icmp ult i64 %2, -8
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  store i8* null, i8** %27, align 8
  br label %41

31:                                               ; preds = %25
  %32 = add nsw i64 %2, 8
  %33 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %32) #16
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %33, i8* %34) #16
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  store i8* %36, i8** %27, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %5) #16
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  br label %41

41:                                               ; preds = %30, %31, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #16
  %42 = add i64 %2, 15
  %43 = and i64 %42, -8
  %44 = load i16, i16* %7, align 2
  %45 = lshr i16 %44, 2
  %46 = zext i16 %45 to i64
  %47 = shl nuw nsw i64 %46, 3
  %48 = sub i64 %43, %47
  %49 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %1, i64 %46
  %50 = bitcast %"class.blink::HeapObjectHeader"* %49 to i8*
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 3
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, %50
  br i1 %53, label %54, label %66

54:                                               ; preds = %41
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 4
  %56 = load i64, i64* %55, align 8
  %57 = icmp ult i64 %56, %48
  br i1 %57, label %66, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds i8, i8* %50, i64 %48
  store i8* %59, i8** %51, align 8
  %60 = sub i64 %56, %48
  store i64 %60, i64* %55, align 8
  %61 = lshr exact i64 %43, 1
  %62 = trunc i64 %61 to i16
  %63 = load i16, i16* %7, align 2
  %64 = and i16 %63, 3
  %65 = or i16 %64, %62
  store i16 %65, i16* %7, align 2
  br label %66

66:                                               ; preds = %58, %54, %41, %21
  %67 = phi i1 [ true, %21 ], [ true, %58 ], [ false, %54 ], [ false, %41 ]
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15NormalPageArena12ShrinkObjectEPNS_16HeapObjectHeaderEm(%"class.blink::NormalPageArena"* nocapture, %"class.blink::HeapObjectHeader"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = icmp ult i64 %2, -8
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  store i8* null, i8** %8, align 8
  br label %22

12:                                               ; preds = %3
  %13 = add nsw i64 %2, 8
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %13) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  store i8* %17, i8** %8, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %5) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %11, %12, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  %23 = add i64 %2, 15
  %24 = and i64 %23, -8
  %25 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %1, i64 0, i32 2
  %26 = load i16, i16* %25, align 2
  %27 = lshr i16 %26, 2
  %28 = zext i16 %27 to i64
  %29 = shl nuw nsw i64 %28, 3
  %30 = sub i64 %29, %24
  %31 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %1, i64 %28
  %32 = bitcast %"class.blink::HeapObjectHeader"* %31 to i8*
  %33 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 3
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, %32
  %36 = sub i64 0, %30
  %37 = getelementptr inbounds i8, i8* %32, i64 %36
  br i1 %35, label %38, label %42

38:                                               ; preds = %22
  store i8* %37, i8** %33, align 8
  %39 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 4
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %30
  store i64 %41, i64* %39, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %37, i8 0, i64 %30, i1 false)
  br label %54

42:                                               ; preds = %22
  %43 = bitcast i8* %37 to %"class.blink::HeapObjectHeader"*
  %44 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %1, i64 0, i32 1
  %45 = load i16, i16* %44, align 2
  %46 = and i16 %45, -4
  %47 = bitcast i8* %37 to i32*
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds i8, i8* %37, i64 4
  %49 = bitcast i8* %48 to i16*
  store atomic i16 %46, i16* %49 monotonic, align 2
  %50 = lshr exact i64 %30, 1
  %51 = trunc i64 %50 to i16
  %52 = getelementptr inbounds i8, i8* %37, i64 6
  %53 = bitcast i8* %52 to i16*
  store i16 %51, i16* %53, align 2
  call void @_ZN5blink15NormalPageArena28PromptlyFreeObjectInFreeListEPNS_16HeapObjectHeaderEm(%"class.blink::NormalPageArena"* %0, %"class.blink::HeapObjectHeader"* %43, i64 %30)
  br label %54

54:                                               ; preds = %42, %38
  %55 = phi i1 [ false, %42 ], [ true, %38 ]
  %56 = lshr exact i64 %24, 1
  %57 = trunc i64 %56 to i16
  %58 = load i16, i16* %25, align 2
  %59 = and i16 %58, 3
  %60 = or i16 %59, %57
  store i16 %60, i16* %25, align 2
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5blink15NormalPageArena20AllocateFromFreeListEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %48

7:                                                ; preds = %3
  %8 = zext i32 %5 to i64
  %9 = shl i64 1, %8
  %10 = sext i32 %5 to i64
  br label %11

11:                                               ; preds = %42, %7
  %12 = phi i64 [ %10, %7 ], [ %43, %42 ]
  %13 = phi i64 [ %9, %7 ], [ %44, %42 ]
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 0, i64 %12
  %15 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %14, align 8
  %16 = icmp ult i64 %13, %1
  %17 = icmp eq %"class.blink::FreeListEntry"* %15, null
  br i1 %16, label %18, label %27

18:                                               ; preds = %11
  %19 = trunc i64 %12 to i32
  br i1 %17, label %48, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.blink::FreeListEntry", %"class.blink::FreeListEntry"* %15, i64 0, i32 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = lshr i16 %22, 2
  %24 = zext i16 %23 to i64
  %25 = shl nuw nsw i64 %24, 3
  %26 = icmp ult i64 %25, %1
  br i1 %26, label %48, label %30

27:                                               ; preds = %11
  br i1 %17, label %42, label %28

28:                                               ; preds = %27
  %29 = trunc i64 %12 to i32
  br label %30

30:                                               ; preds = %28, %20
  %31 = phi i32 [ %29, %28 ], [ %19, %20 ]
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 0, i64 %12
  %33 = getelementptr inbounds %"class.blink::FreeListEntry", %"class.blink::FreeListEntry"* %15, i64 0, i32 1
  %34 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %33, align 8
  %35 = icmp eq %"class.blink::FreeListEntry"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  %37 = ptrtoint %"class.blink::FreeListEntry"* %34 to i64
  br label %50

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 1, i64 %12
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %39, align 8
  %40 = bitcast %"class.blink::FreeListEntry"** %33 to i64*
  %41 = load i64, i64* %40, align 8
  br label %50

42:                                               ; preds = %27
  %43 = add nsw i64 %12, -1
  %44 = lshr i64 %13, 1
  %45 = icmp sgt i64 %43, 0
  br i1 %45, label %11, label %46

46:                                               ; preds = %42
  %47 = trunc i64 %43 to i32
  br label %48

48:                                               ; preds = %20, %18, %3, %46
  %49 = phi i32 [ %47, %46 ], [ %5, %3 ], [ %19, %18 ], [ %19, %20 ]
  store i32 %49, i32* %4, align 8
  br label %102

50:                                               ; preds = %38, %36
  %51 = phi i64 [ %41, %38 ], [ %37, %36 ]
  %52 = bitcast %"class.blink::FreeListEntry"** %32 to i64*
  store i64 %51, i64* %52, align 8
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %33, align 8
  store i32 %31, i32* %4, align 8
  %53 = bitcast %"class.blink::FreeListEntry"* %15 to i8*
  %54 = getelementptr inbounds %"class.blink::FreeListEntry", %"class.blink::FreeListEntry"* %15, i64 0, i32 0, i32 2
  %55 = load i16, i16* %54, align 2
  %56 = lshr i16 %55, 2
  %57 = zext i16 %56 to i64
  %58 = shl nuw nsw i64 %57, 3
  tail call void @_ZN5blink15NormalPageArena18SetAllocationPointEPhm(%"class.blink::NormalPageArena"* %0, i8* %53, i64 %58)
  %59 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 4
  %60 = load i64, i64* %59, align 8
  %61 = icmp ult i64 %60, %1
  br i1 %61, label %94, label %62, !prof !2

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 3
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 %1
  store i8* %65, i8** %63, align 8
  %66 = sub i64 %60, %1
  store i64 %66, i64* %59, align 8
  %67 = bitcast i8* %64 to i32*
  store i32 0, i32* %67, align 4
  %68 = getelementptr inbounds i8, i8* %64, i64 4
  %69 = bitcast i8* %68 to i16*
  %70 = trunc i64 %2 to i16
  %71 = shl i16 %70, 2
  store atomic i16 %71, i16* %69 monotonic, align 2
  %72 = lshr i64 %1, 1
  %73 = trunc i64 %72 to i16
  %74 = getelementptr inbounds i8, i8* %64, i64 6
  %75 = bitcast i8* %74 to i16*
  store i16 %73, i16* %75, align 2
  %76 = ptrtoint i8* %64 to i64
  %77 = and i64 %76, -131072
  %78 = inttoptr i64 %77 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 4400
  %80 = bitcast i8* %79 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %81 = bitcast i8* %79 to i64*
  %82 = load i64, i64* %81, align 16
  %83 = sub i64 %76, %82
  %84 = lshr i64 %83, 3
  %85 = lshr i64 %83, 6
  %86 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %80, i64 0, i32 0, i32 1, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = trunc i64 %84 to i32
  %89 = and i32 %88, 7
  %90 = shl i32 1, %89
  %91 = trunc i32 %90 to i8
  %92 = or i8 %87, %91
  store atomic i8 %92, i8* %86 release, align 1
  %93 = getelementptr inbounds i8, i8* %64, i64 8
  br label %102

94:                                               ; preds = %50
  %95 = tail call i8* @_ZN5blink15NormalPageArena21OutOfLineAllocateImplEmm(%"class.blink::NormalPageArena"* %0, i64 %1, i64 %2) #16
  %96 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 5
  %97 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %99, i64 0, i32 1, i32 0, i32 0, i32 0
  %101 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %100, align 8
  tail call void @_ZN5blink24ThreadHeapStatsCollector28AllocatedObjectSizeSafepointEv(%"class.blink::ThreadHeapStatsCollector"* %101) #16
  br label %102

102:                                              ; preds = %94, %62, %48
  %103 = phi i8* [ null, %48 ], [ %93, %62 ], [ %95, %94 ]
  ret i8* %103
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.blink::FreeListEntry"* @_ZN5blink8FreeList8AllocateEm(%"class.blink::FreeList"* nocapture, i64) local_unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %50

6:                                                ; preds = %2
  %7 = zext i32 %4 to i64
  %8 = shl i64 1, %7
  %9 = sext i32 %4 to i64
  br label %10

10:                                               ; preds = %6, %44
  %11 = phi i64 [ %9, %6 ], [ %45, %44 ]
  %12 = phi i64 [ %8, %6 ], [ %46, %44 ]
  %13 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 %11
  %14 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %13, align 8
  %15 = icmp ult i64 %12, %1
  %16 = icmp eq %"class.blink::FreeListEntry"* %14, null
  br i1 %15, label %17, label %26

17:                                               ; preds = %10
  %18 = trunc i64 %11 to i32
  br i1 %16, label %50, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.blink::FreeListEntry", %"class.blink::FreeListEntry"* %14, i64 0, i32 0, i32 2
  %21 = load i16, i16* %20, align 2
  %22 = lshr i16 %21, 2
  %23 = zext i16 %22 to i64
  %24 = shl nuw nsw i64 %23, 3
  %25 = icmp ult i64 %24, %1
  br i1 %25, label %50, label %29

26:                                               ; preds = %10
  br i1 %16, label %44, label %27

27:                                               ; preds = %26
  %28 = trunc i64 %11 to i32
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %18, %19 ]
  %31 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 %11
  %32 = getelementptr inbounds %"class.blink::FreeListEntry", %"class.blink::FreeListEntry"* %14, i64 0, i32 1
  %33 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %32, align 8
  %34 = icmp eq %"class.blink::FreeListEntry"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.blink::FreeListEntry"* %33 to i64
  br label %41

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 1, i64 %11
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %38, align 8
  %39 = bitcast %"class.blink::FreeListEntry"** %32 to i64*
  %40 = load i64, i64* %39, align 8
  br label %41

41:                                               ; preds = %35, %37
  %42 = phi i64 [ %40, %37 ], [ %36, %35 ]
  %43 = bitcast %"class.blink::FreeListEntry"** %31 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %32, align 8
  br label %50

44:                                               ; preds = %26
  %45 = add nsw i64 %11, -1
  %46 = lshr i64 %12, 1
  %47 = icmp sgt i64 %45, 0
  br i1 %47, label %10, label %48

48:                                               ; preds = %44
  %49 = trunc i64 %45 to i32
  br label %50

50:                                               ; preds = %48, %2, %17, %19, %41
  %51 = phi i32 [ %30, %41 ], [ %18, %19 ], [ %18, %17 ], [ %4, %2 ], [ %49, %48 ]
  %52 = phi %"class.blink::FreeListEntry"* [ %14, %41 ], [ null, %19 ], [ null, %17 ], [ null, %2 ], [ null, %48 ]
  store i32 %51, i32* %3, align 8
  ret %"class.blink::FreeListEntry"* %52
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5blink15NormalPageArena14LazySweepPagesEmm(%"class.blink::NormalPageArena"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::BasePage"*, align 8
  %5 = alloca %"class.blink::BasePage"*, align 8
  %6 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %7 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %11 = bitcast %"class.blink::BasePage"** %5 to i8*
  %12 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %9, i64 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %40, %3
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #16
  %17 = load i32, i32* %7, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #16
  br label %47

20:                                               ; preds = %16
  %21 = add i32 %17, -1
  %22 = call dereferenceable(8) %"class.blink::BasePage"** @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.129"* %8, i32 %21) #16
  %23 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %22, align 8
  %24 = load i32, i32* %7, align 4
  %25 = add i32 %24, -1
  store i32 %25, i32* %7, align 4
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #16
  %26 = icmp eq %"class.blink::BasePage"* %23, null
  br i1 %26, label %47, label %27

27:                                               ; preds = %20
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  store %"class.blink::BasePage"* %23, %"class.blink::BasePage"** %5, align 8
  %28 = load i32, i32* %12, align 4
  %29 = load i32, i32* %13, align 8
  %30 = icmp eq i32 %28, %29
  br i1 %30, label %39, label %31, !prof !2

31:                                               ; preds = %27
  %32 = ptrtoint %"class.blink::BasePage"* %23 to i64
  %33 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %14, align 8
  %34 = zext i32 %28 to i64
  %35 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %33, i64 %34
  %36 = bitcast %"class.blink::BasePage"** %35 to i64*
  store i64 %32, i64* %36, align 8
  %37 = load i32, i32* %12, align 4
  %38 = add i32 %37, 1
  store i32 %38, i32* %12, align 4
  br label %40

39:                                               ; preds = %27
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %15, %"class.blink::BasePage"** nonnull dereferenceable(8) %5) #16
  br label %40

40:                                               ; preds = %31, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #16
  %41 = bitcast %"class.blink::BasePage"* %23 to void (%"class.blink::BasePage"*, i8)***
  %42 = load void (%"class.blink::BasePage"*, i8)**, void (%"class.blink::BasePage"*, i8)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %42, i64 7
  %44 = load void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %43, align 8
  call void %44(%"class.blink::BasePage"* nonnull %23, i8 zeroext 1) #16
  %45 = call i8* @_ZN5blink15NormalPageArena20AllocateFromFreeListEmm(%"class.blink::NormalPageArena"* %0, i64 %1, i64 %2)
  %46 = icmp eq i8* %45, null
  br i1 %46, label %16, label %98

47:                                               ; preds = %20, %19
  %48 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %48) #16
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %"class.blink::BasePage"** %4 to i8*
  br label %56

55:                                               ; preds = %95, %47
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %48) #16
  br label %98

56:                                               ; preds = %52, %95
  %57 = phi i32 [ %50, %52 ], [ %96, %95 ]
  %58 = add i32 %57, -1
  %59 = call dereferenceable(8) %"class.blink::BasePage"** @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.129"* %53, i32 %58) #16
  %60 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %59, align 8
  %61 = load i32, i32* %49, align 4
  %62 = add i32 %61, -1
  store i32 %62, i32* %49, align 4
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %48) #16
  %63 = icmp eq %"class.blink::BasePage"* %60, null
  br i1 %63, label %98, label %64

64:                                               ; preds = %56
  %65 = bitcast %"class.blink::BasePage"* %60 to i1 (%"class.blink::BasePage"*, i8)***
  %66 = load i1 (%"class.blink::BasePage"*, i8)**, i1 (%"class.blink::BasePage"*, i8)*** %65, align 8
  %67 = getelementptr inbounds i1 (%"class.blink::BasePage"*, i8)*, i1 (%"class.blink::BasePage"*, i8)** %66, i64 4
  %68 = load i1 (%"class.blink::BasePage"*, i8)*, i1 (%"class.blink::BasePage"*, i8)** %67, align 8
  %69 = call zeroext i1 %68(%"class.blink::BasePage"* nonnull %60, i8 zeroext 0) #16
  br i1 %69, label %70, label %75

70:                                               ; preds = %64
  %71 = bitcast %"class.blink::BasePage"* %60 to void (%"class.blink::BasePage"*, i8)***
  %72 = load void (%"class.blink::BasePage"*, i8)**, void (%"class.blink::BasePage"*, i8)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %72, i64 7
  %74 = load void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %73, align 8
  call void %74(%"class.blink::BasePage"* nonnull %60, i8 zeroext 0) #16
  br label %95

75:                                               ; preds = %64
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #16
  store %"class.blink::BasePage"* %60, %"class.blink::BasePage"** %4, align 8
  %76 = load i32, i32* %12, align 4
  %77 = load i32, i32* %13, align 8
  %78 = icmp eq i32 %76, %77
  br i1 %78, label %87, label %79, !prof !2

79:                                               ; preds = %75
  %80 = ptrtoint %"class.blink::BasePage"* %60 to i64
  %81 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %14, align 8
  %82 = zext i32 %76 to i64
  %83 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %81, i64 %82
  %84 = bitcast %"class.blink::BasePage"** %83 to i64*
  store i64 %80, i64* %84, align 8
  %85 = load i32, i32* %12, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %12, align 4
  br label %88

87:                                               ; preds = %75
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %15, %"class.blink::BasePage"** nonnull dereferenceable(8) %4) #16
  br label %88

88:                                               ; preds = %87, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #16
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #16
  %89 = bitcast %"class.blink::BasePage"* %60 to void (%"class.blink::BasePage"*, i8)***
  %90 = load void (%"class.blink::BasePage"*, i8)**, void (%"class.blink::BasePage"*, i8)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %90, i64 7
  %92 = load void (%"class.blink::BasePage"*, i8)*, void (%"class.blink::BasePage"*, i8)** %91, align 8
  call void %92(%"class.blink::BasePage"* nonnull %60, i8 zeroext 1) #16
  %93 = call i8* @_ZN5blink15NormalPageArena20AllocateFromFreeListEmm(%"class.blink::NormalPageArena"* %0, i64 %1, i64 %2)
  %94 = icmp eq i8* %93, null
  br i1 %94, label %95, label %98

95:                                               ; preds = %88, %70
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %48) #16
  %96 = load i32, i32* %49, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %55, label %56

98:                                               ; preds = %40, %88, %56, %55
  %99 = phi i8* [ null, %55 ], [ %93, %88 ], [ null, %56 ], [ %45, %40 ]
  ret i8* %99
}

declare void @_ZN5blink24ThreadHeapStatsCollector27IncreaseAllocatedObjectSizeEm(%"class.blink::ThreadHeapStatsCollector"*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink15NormalPageArena21OutOfLineAllocateImplEmm(%"class.blink::NormalPageArena"* %0, i64 %1, i64 %2)
  %5 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 5
  %6 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %9, align 8
  tail call void @_ZN5blink24ThreadHeapStatsCollector28AllocatedObjectSizeSafepointEv(%"class.blink::ThreadHeapStatsCollector"* %10) #16
  ret i8* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5blink15NormalPageArena21OutOfLineAllocateImplEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp ugt i64 %1, 65535
  br i1 %5, label %6, label %21

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 5
  %8 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %10, i64 0, i32 19, i64 8
  %12 = load %"class.blink::BaseArena"*, %"class.blink::BaseArena"** %11, align 8
  %13 = tail call i8* @_ZN5blink9BaseArena9LazySweepEmm(%"class.blink::BaseArena"* %12, i64 %1, i64 %2) #16
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %135

15:                                               ; preds = %6
  %16 = bitcast %"class.blink::BaseArena"* %12 to %"class.blink::LargeObjectArena"*
  %17 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %12, i64 0, i32 5
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  tail call void @_ZN5blink11ThreadState13CompleteSweepEv(%"class.blink::ThreadState"* %18) #16
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  tail call void @_ZN5blink11ThreadState18ScheduleGCIfNeededEv(%"class.blink::ThreadState"* %19) #16
  %20 = tail call i8* @_ZN5blink16LargeObjectArena25DoAllocateLargeObjectPageEmm(%"class.blink::LargeObjectArena"* %16, i64 %1, i64 %2) #16
  br label %135

21:                                               ; preds = %3
  %22 = tail call i8* @_ZN5blink15NormalPageArena20AllocateFromFreeListEmm(%"class.blink::NormalPageArena"* %0, i64 %1, i64 %2)
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %135

24:                                               ; preds = %21
  tail call void @_ZN5blink15NormalPageArena18SetAllocationPointEPhm(%"class.blink::NormalPageArena"* %0, i8* null, i64 0)
  %25 = bitcast %"class.blink::NormalPageArena"* %0 to %"class.blink::BaseArena"*
  %26 = tail call i8* @_ZN5blink9BaseArena9LazySweepEmm(%"class.blink::BaseArena"* %25, i64 %1, i64 %2)
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %135

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 0, i32 5
  %30 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %29, align 8
  tail call void @_ZN5blink11ThreadState13CompleteSweepEv(%"class.blink::ThreadState"* %30) #16
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %29, align 8
  tail call void @_ZN5blink11ThreadState18ScheduleGCIfNeededEv(%"class.blink::ThreadState"* %31) #16
  tail call void @_ZN5blink15NormalPageArena12AllocatePageEv(%"class.blink::NormalPageArena"* %0)
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %76

35:                                               ; preds = %28
  %36 = zext i32 %33 to i64
  %37 = shl i64 1, %36
  %38 = sext i32 %33 to i64
  br label %39

39:                                               ; preds = %70, %35
  %40 = phi i64 [ %38, %35 ], [ %71, %70 ]
  %41 = phi i64 [ %37, %35 ], [ %72, %70 ]
  %42 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 0, i64 %40
  %43 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %42, align 8
  %44 = icmp ult i64 %41, %1
  %45 = icmp eq %"class.blink::FreeListEntry"* %43, null
  br i1 %44, label %46, label %55

46:                                               ; preds = %39
  %47 = trunc i64 %40 to i32
  br i1 %45, label %76, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.blink::FreeListEntry", %"class.blink::FreeListEntry"* %43, i64 0, i32 0, i32 2
  %50 = load i16, i16* %49, align 2
  %51 = lshr i16 %50, 2
  %52 = zext i16 %51 to i64
  %53 = shl nuw nsw i64 %52, 3
  %54 = icmp ult i64 %53, %1
  br i1 %54, label %76, label %58

55:                                               ; preds = %39
  br i1 %45, label %70, label %56

56:                                               ; preds = %55
  %57 = trunc i64 %40 to i32
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %47, %48 ]
  %60 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 0, i64 %40
  %61 = getelementptr inbounds %"class.blink::FreeListEntry", %"class.blink::FreeListEntry"* %43, i64 0, i32 1
  %62 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %61, align 8
  %63 = icmp eq %"class.blink::FreeListEntry"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %58
  %65 = ptrtoint %"class.blink::FreeListEntry"* %62 to i64
  br label %78

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 2, i32 1, i64 %40
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %67, align 8
  %68 = bitcast %"class.blink::FreeListEntry"** %61 to i64*
  %69 = load i64, i64* %68, align 8
  br label %78

70:                                               ; preds = %55
  %71 = add nsw i64 %40, -1
  %72 = lshr i64 %41, 1
  %73 = icmp sgt i64 %71, 0
  br i1 %73, label %39, label %74

74:                                               ; preds = %70
  %75 = trunc i64 %71 to i32
  br label %76

76:                                               ; preds = %74, %28, %46, %48
  %77 = phi i32 [ %75, %74 ], [ %33, %28 ], [ %47, %46 ], [ %47, %48 ]
  store i32 %77, i32* %32, align 8
  br label %132

78:                                               ; preds = %66, %64
  %79 = phi i64 [ %69, %66 ], [ %65, %64 ]
  %80 = bitcast %"class.blink::FreeListEntry"** %60 to i64*
  store i64 %79, i64* %80, align 8
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %61, align 8
  store i32 %59, i32* %32, align 8
  %81 = bitcast %"class.blink::FreeListEntry"* %43 to i8*
  %82 = getelementptr inbounds %"class.blink::FreeListEntry", %"class.blink::FreeListEntry"* %43, i64 0, i32 0, i32 2
  %83 = load i16, i16* %82, align 2
  %84 = lshr i16 %83, 2
  %85 = zext i16 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN5blink15NormalPageArena18SetAllocationPointEPhm(%"class.blink::NormalPageArena"* %0, i8* %81, i64 %86) #16
  %87 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 4
  %88 = load i64, i64* %87, align 8
  %89 = icmp ult i64 %88, %1
  br i1 %89, label %122, label %90, !prof !2

90:                                               ; preds = %78
  %91 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %0, i64 0, i32 3
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 %1
  store i8* %93, i8** %91, align 8
  %94 = sub i64 %88, %1
  store i64 %94, i64* %87, align 8
  %95 = bitcast i8* %92 to i32*
  store i32 0, i32* %95, align 4
  %96 = getelementptr inbounds i8, i8* %92, i64 4
  %97 = bitcast i8* %96 to i16*
  %98 = trunc i64 %2 to i16
  %99 = shl i16 %98, 2
  store atomic i16 %99, i16* %97 monotonic, align 2
  %100 = lshr i64 %1, 1
  %101 = trunc i64 %100 to i16
  %102 = getelementptr inbounds i8, i8* %92, i64 6
  %103 = bitcast i8* %102 to i16*
  store i16 %101, i16* %103, align 2
  %104 = ptrtoint i8* %92 to i64
  %105 = and i64 %104, -131072
  %106 = inttoptr i64 %105 to i8*
  %107 = getelementptr inbounds i8, i8* %106, i64 4400
  %108 = bitcast i8* %107 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %109 = bitcast i8* %107 to i64*
  %110 = load i64, i64* %109, align 16
  %111 = sub i64 %104, %110
  %112 = lshr i64 %111, 3
  %113 = lshr i64 %111, 6
  %114 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %108, i64 0, i32 0, i32 1, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = trunc i64 %112 to i32
  %117 = and i32 %116, 7
  %118 = shl i32 1, %117
  %119 = trunc i32 %118 to i8
  %120 = or i8 %115, %119
  store atomic i8 %120, i8* %114 release, align 1
  %121 = getelementptr inbounds i8, i8* %92, i64 8
  br label %129

122:                                              ; preds = %78
  %123 = tail call i8* @_ZN5blink15NormalPageArena21OutOfLineAllocateImplEmm(%"class.blink::NormalPageArena"* %0, i64 %1, i64 %2) #16
  %124 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %29, align 8
  %125 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %124, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %126, i64 0, i32 1, i32 0, i32 0, i32 0
  %128 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %127, align 8
  tail call void @_ZN5blink24ThreadHeapStatsCollector28AllocatedObjectSizeSafepointEv(%"class.blink::ThreadHeapStatsCollector"* %128) #16
  br label %129

129:                                              ; preds = %122, %90
  %130 = phi i8* [ %121, %90 ], [ %123, %122 ]
  %131 = icmp eq i8* %130, null
  br i1 %131, label %132, label %135

132:                                              ; preds = %76, %129
  %133 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0), i32 963, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)) #16
  %134 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #16
  br label %135

135:                                              ; preds = %132, %129, %15, %6, %21, %24
  %136 = phi i8* [ %22, %21 ], [ %26, %24 ], [ %20, %15 ], [ %13, %6 ], [ %130, %129 ], [ null, %132 ]
  ret i8* %136
}

declare void @_ZN5blink24ThreadHeapStatsCollector28AllocatedObjectSizeSafepointEv(%"class.blink::ThreadHeapStatsCollector"*) local_unnamed_addr #6

declare void @_ZN5blink11ThreadState13CompleteSweepEv(%"class.blink::ThreadState"*) local_unnamed_addr #6

declare void @_ZN5blink11ThreadState18ScheduleGCIfNeededEv(%"class.blink::ThreadState"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16LargeObjectArenaC2EPNS_11ThreadStateEi(%"class.blink::LargeObjectArena"*, %"class.blink::ThreadState"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9BaseArenaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.blink::PageStackThreadSafe"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #16
  %7 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %7, i1 zeroext false) #16
  %8 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 2
  %9 = bitcast %"class.blink::PageStackThreadSafe"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #16
  %10 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %10, i1 zeroext false) #16
  %11 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 3
  %12 = bitcast %"class.blink::PageStackThreadSafe"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #16
  %13 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %13, i1 zeroext false) #16
  %14 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 4
  %15 = bitcast %"class.blink::PageStackThreadSafe"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #16
  %16 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 4, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %16, i1 zeroext false) #16
  %17 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 5
  store %"class.blink::ThreadState"* %1, %"class.blink::ThreadState"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 6
  store i32 %2, i32* %18, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink16LargeObjectArenaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5blink16LargeObjectArena25DoAllocateLargeObjectPageEmm(%"class.blink::LargeObjectArena"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::BasePage"*, align 8
  %5 = add i64 %1, 64
  %6 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 5
  %7 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.blink::RegionTree"*, %"class.blink::RegionTree"** %10, align 8
  %12 = tail call %"class.blink::PageMemory"* @_ZN5blink10PageMemory8AllocateEmPNS_10RegionTreeE(i64 %5, %"class.blink::RegionTree"* %11) #16
  %13 = getelementptr inbounds %"class.blink::PageMemory", %"class.blink::PageMemory"* %12, i64 0, i32 1, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 64
  %16 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink8BasePageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds i8, i8* %14, i64 8
  %18 = bitcast i8* %17 to %"class.blink::PageMemory"**
  store %"class.blink::PageMemory"* %12, %"class.blink::PageMemory"** %18, align 8
  %19 = getelementptr inbounds i8, i8* %14, i64 16
  %20 = bitcast i8* %19 to %"class.blink::LargeObjectArena"**
  store %"class.blink::LargeObjectArena"* %0, %"class.blink::LargeObjectArena"** %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 24
  %22 = bitcast %"class.blink::ThreadState"** %6 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast i8* %21 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %14, i64 32
  %26 = bitcast i8* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %14, i64 40
  store i8 1, i8* %27, align 8
  %28 = getelementptr inbounds i8, i8* %14, i64 41
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds i8, i8* %14, i64 42
  store i8 1, i8* %29, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink15LargeObjectPageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %30 = getelementptr inbounds i8, i8* %14, i64 48
  %31 = bitcast i8* %30 to i64*
  store i64 %1, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %14, i64 56
  store i8 0, i8* %32, align 8
  %33 = bitcast i8* %15 to i32*
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %14, i64 68
  %35 = bitcast i8* %34 to i16*
  %36 = trunc i64 %2 to i16
  %37 = shl i16 %36, 2
  store atomic i16 %37, i16* %35 monotonic, align 2
  %38 = getelementptr inbounds i8, i8* %14, i64 70
  %39 = bitcast i8* %38 to i16*
  store i16 0, i16* %39, align 2
  %40 = getelementptr inbounds i8, i8* %14, i64 72
  %41 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %42) #16
  %43 = bitcast %"class.blink::BasePage"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #16
  %44 = bitcast %"class.blink::BasePage"** %4 to i8**
  store i8* %14, i8** %44, align 8
  %45 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %59, label %50, !prof !2

50:                                               ; preds = %3
  %51 = ptrtoint i8* %14 to i64
  %52 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %52, align 8
  %54 = zext i32 %46 to i64
  %55 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %53, i64 %54
  %56 = bitcast %"class.blink::BasePage"** %55 to i64*
  store i64 %51, i64* %56, align 8
  %57 = load i32, i32* %45, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %45, align 4
  br label %62

59:                                               ; preds = %3
  %60 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %41, i64 0, i32 0, i32 0
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %60, %"class.blink::BasePage"** nonnull dereferenceable(8) %4) #16
  %61 = ptrtoint i8* %14 to i64
  br label %62

62:                                               ; preds = %50, %59
  %63 = phi i64 [ %51, %50 ], [ %61, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #16
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %42) #16
  %64 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %6, align 8
  %65 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %65, align 8
  %67 = load i64, i64* %31, align 8
  %68 = add i64 %67, -8
  %69 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %66, i64 0, i32 18, i32 0
  store i8* %40, i8** %69, align 8
  %70 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %66, i64 0, i32 18, i32 1
  store i64 %68, i64* %70, align 8
  %71 = and i64 %63, -131072
  %72 = inttoptr i64 %71 to i8*
  %73 = load i64, i64* %31, align 8
  %74 = add i64 %73, -8
  %75 = getelementptr inbounds i8, i8* %40, i64 %74
  %76 = icmp ugt i8* %75, %72
  %77 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %6, align 8
  %78 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %78, align 8
  br i1 %76, label %95, label %80

80:                                               ; preds = %118, %62
  %81 = phi i64 [ %73, %62 ], [ %120, %118 ]
  %82 = phi %"class.blink::ThreadHeap"* [ %79, %62 ], [ %126, %118 ]
  %83 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %82, i64 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %83, align 8
  %85 = add i64 %81, 64
  call void @_ZN5blink24ThreadHeapStatsCollector22IncreaseAllocatedSpaceEm(%"class.blink::ThreadHeapStatsCollector"* %84, i64 %85) #16
  %86 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %6, align 8
  %87 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %88, i64 0, i32 1, i32 0, i32 0, i32 0
  %90 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %89, align 8
  %91 = load i64, i64* %31, align 8
  call void @_ZN5blink24ThreadHeapStatsCollector27IncreaseAllocatedObjectSizeEm(%"class.blink::ThreadHeapStatsCollector"* %90, i64 %91) #16
  %92 = load i64, i64* %31, align 8
  %93 = load i64, i64* %26, align 8
  %94 = add i64 %93, %92
  store i64 %94, i64* %26, align 8
  store i8 1, i8* %28, align 1
  fence seq_cst
  ret i8* %40

95:                                               ; preds = %62, %118
  %96 = phi %"class.blink::ThreadHeap"* [ %126, %118 ], [ %79, %62 ]
  %97 = phi i8* [ %119, %118 ], [ %72, %62 ]
  %98 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %96, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"class.blink::PageBloomFilter"*, %"class.blink::PageBloomFilter"** %98, align 8
  %100 = ptrtoint i8* %97 to i64
  %101 = lshr i64 %100, 17
  %102 = lshr i64 %100, 29
  %103 = xor i64 %101, %102
  %104 = lshr i64 %103, 24
  %105 = xor i64 %104, %103
  %106 = and i64 %105, 4095
  %107 = getelementptr inbounds %"class.blink::PageBloomFilter", %"class.blink::PageBloomFilter"* %99, i64 0, i32 0, i32 0, i64 %106
  %108 = getelementptr inbounds %"class.blink::PageBloomFilter", %"class.blink::PageBloomFilter"* %99, i64 0, i32 0, i32 0, i64 0
  %109 = load i8, i8* %107, align 1
  %110 = icmp eq i8 %109, -1
  br i1 %110, label %113, label %111, !prof !2

111:                                              ; preds = %95
  %112 = add nuw i8 %109, 1
  store i8 %112, i8* %107, align 1
  br label %113

113:                                              ; preds = %111, %95
  %114 = load i8, i8* %108, align 1
  %115 = icmp eq i8 %114, -1
  br i1 %115, label %118, label %116, !prof !2

116:                                              ; preds = %113
  %117 = add nuw i8 %114, 1
  store i8 %117, i8* %108, align 1
  br label %118

118:                                              ; preds = %113, %116
  %119 = getelementptr inbounds i8, i8* %97, i64 131072
  %120 = load i64, i64* %31, align 8
  %121 = add i64 %120, -8
  %122 = getelementptr inbounds i8, i8* %40, i64 %121
  %123 = icmp ult i8* %119, %122
  %124 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %6, align 8
  %125 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %124, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %125, align 8
  br i1 %123, label %95, label %80
}

declare %"class.blink::PageMemory"* @_ZN5blink10PageMemory8AllocateEmPNS_10RegionTreeE(i64, %"class.blink::RegionTree"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink15LargeObjectPage4sizeEv(%"class.blink::LargeObjectPage"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 64
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16LargeObjectArena19FreeLargeObjectPageEPNS_15LargeObjectPageE(%"class.blink::LargeObjectArena"* nocapture readonly, %"class.blink::LargeObjectPage"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %1, i64 1
  %5 = bitcast %"class.blink::LargeObjectPage"* %4 to %"class.blink::HeapObjectHeader"*
  %6 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %5, i64 0, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = lshr i16 %7, 2
  %9 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %10 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %9, i64 0, i32 0
  %11 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %10, align 8
  %12 = zext i16 %8 to i64
  %13 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %11, i64 %12
  %14 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %13, align 8
  %15 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %14, i64 0, i32 1
  %16 = load void (i8*)*, void (i8*)** %15, align 8
  %17 = icmp eq void (i8*)* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %1, i64 1, i32 0, i32 1
  %20 = bitcast %"class.blink::PageMemory"** %19 to i8*
  tail call void %16(i8* %20) #16
  br label %21

21:                                               ; preds = %2, %18
  %22 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 5
  %23 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %25, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %26, align 8
  %28 = load i64, i64* %3, align 8
  %29 = add i64 %28, 64
  tail call void @_ZN5blink24ThreadHeapStatsCollector22DecreaseAllocatedSpaceEm(%"class.blink::ThreadHeapStatsCollector"* %27, i64 %29) #16
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %25, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.blink::PageBloomFilter"*, %"class.blink::PageBloomFilter"** %30, align 8
  %32 = ptrtoint %"class.blink::LargeObjectPage"* %1 to i64
  %33 = lshr i64 %32, 17
  %34 = lshr i64 %32, 29
  %35 = xor i64 %33, %34
  %36 = lshr i64 %35, 24
  %37 = xor i64 %36, %35
  %38 = and i64 %37, 4095
  %39 = getelementptr inbounds %"class.blink::PageBloomFilter", %"class.blink::PageBloomFilter"* %31, i64 0, i32 0, i32 0, i64 %38
  %40 = getelementptr inbounds %"class.blink::PageBloomFilter", %"class.blink::PageBloomFilter"* %31, i64 0, i32 0, i32 0, i64 0
  %41 = load i8, i8* %39, align 1
  %42 = icmp eq i8 %41, -1
  br i1 %42, label %45, label %43, !prof !2

43:                                               ; preds = %21
  %44 = add i8 %41, -1
  store i8 %44, i8* %39, align 1
  br label %45

45:                                               ; preds = %43, %21
  %46 = load i8, i8* %40, align 1
  %47 = icmp eq i8 %46, -1
  br i1 %47, label %50, label %48, !prof !2

48:                                               ; preds = %45
  %49 = add i8 %46, -1
  store i8 %49, i8* %40, align 1
  br label %50

50:                                               ; preds = %45, %48
  %51 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %1, i64 0, i32 0, i32 1
  %52 = load %"class.blink::PageMemory"*, %"class.blink::PageMemory"** %51, align 8
  %53 = icmp eq %"class.blink::PageMemory"* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::PageMemory", %"class.blink::PageMemory"* %52, i64 0, i32 0
  %56 = load %"class.blink::PageMemoryRegion"*, %"class.blink::PageMemoryRegion"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::PageMemory", %"class.blink::PageMemory"* %52, i64 0, i32 1, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void @_ZN5blink16PageMemoryRegion11PageDeletedEPh(%"class.blink::PageMemoryRegion"* %56, i8* %58) #16
  %59 = bitcast %"class.blink::PageMemory"* %52 to i8*
  tail call void @free(i8* %59) #16
  br label %60

60:                                               ; preds = %54, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5blink16LargeObjectArena14LazySweepPagesEmm(%"class.blink::LargeObjectArena"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::BasePage"*, align 8
  %5 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %5) #16
  %6 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %13 = bitcast %"class.blink::BasePage"** %4 to i8*
  %14 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::LargeObjectArena", %"class.blink::LargeObjectArena"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe"* %11, i64 0, i32 0, i32 0
  br label %19

18:                                               ; preds = %61, %3
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %5) #16
  br label %65

19:                                               ; preds = %9, %61
  %20 = phi i32 [ %7, %9 ], [ %63, %61 ]
  %21 = phi i64 [ 0, %9 ], [ %62, %61 ]
  %22 = add i32 %20, -1
  %23 = call dereferenceable(8) %"class.blink::BasePage"** @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.129"* %10, i32 %22) #16
  %24 = load %"class.blink::BasePage"*, %"class.blink::BasePage"** %23, align 8
  %25 = load i32, i32* %6, align 4
  %26 = add i32 %25, -1
  store i32 %26, i32* %6, align 4
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %5) #16
  %27 = icmp eq %"class.blink::BasePage"* %24, null
  br i1 %27, label %65, label %28

28:                                               ; preds = %19
  %29 = bitcast %"class.blink::BasePage"* %24 to i1 (%"class.blink::BasePage"*, i8)***
  %30 = load i1 (%"class.blink::BasePage"*, i8)**, i1 (%"class.blink::BasePage"*, i8)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::BasePage"*, i8)*, i1 (%"class.blink::BasePage"*, i8)** %30, i64 4
  %32 = load i1 (%"class.blink::BasePage"*, i8)*, i1 (%"class.blink::BasePage"*, i8)** %31, align 8
  %33 = call zeroext i1 %32(%"class.blink::BasePage"* nonnull %24, i8 zeroext 0) #16
  br i1 %33, label %34, label %46

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %24, i64 1
  %36 = bitcast %"class.blink::BasePage"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, %21
  %39 = bitcast %"class.blink::BasePage"* %24 to void (%"class.blink::BasePage"*)***
  %40 = load void (%"class.blink::BasePage"*)**, void (%"class.blink::BasePage"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::BasePage"*)*, void (%"class.blink::BasePage"*)** %40, i64 3
  %42 = load void (%"class.blink::BasePage"*)*, void (%"class.blink::BasePage"*)** %41, align 8
  call void %42(%"class.blink::BasePage"* nonnull %24) #16
  %43 = icmp ult i64 %38, %1
  br i1 %43, label %61, label %44

44:                                               ; preds = %34
  %45 = call i8* @_ZN5blink16LargeObjectArena25DoAllocateLargeObjectPageEmm(%"class.blink::LargeObjectArena"* %0, i64 %1, i64 %2)
  br label %65

46:                                               ; preds = %28
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  store %"class.blink::BasePage"* %24, %"class.blink::BasePage"** %4, align 8
  %47 = load i32, i32* %14, align 4
  %48 = load i32, i32* %15, align 8
  %49 = icmp eq i32 %47, %48
  br i1 %49, label %58, label %50, !prof !2

50:                                               ; preds = %46
  %51 = ptrtoint %"class.blink::BasePage"* %24 to i64
  %52 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %16, align 8
  %53 = zext i32 %47 to i64
  %54 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %52, i64 %53
  %55 = bitcast %"class.blink::BasePage"** %54 to i64*
  store i64 %51, i64* %55, align 8
  %56 = load i32, i32* %14, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %14, align 4
  br label %59

58:                                               ; preds = %46
  call void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"* %17, %"class.blink::BasePage"** nonnull dereferenceable(8) %4) #16
  br label %59

59:                                               ; preds = %50, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #16
  %60 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %24, i64 0, i32 5
  store i8 1, i8* %60, align 8
  br label %61

61:                                               ; preds = %59, %34
  %62 = phi i64 [ %38, %34 ], [ %21, %59 ]
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %5) #16
  %63 = load i32, i32* %6, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %18, label %19

65:                                               ; preds = %19, %44, %18
  %66 = phi i8* [ null, %18 ], [ %45, %44 ], [ null, %19 ]
  ret i8* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FreeListC2Ev(%"class.blink::FreeList"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::FreeList"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 276, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink8FreeList18BucketIndexForSizeEm(i64) local_unnamed_addr #10 align 2 {
  %2 = icmp eq i64 %0, 0
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = call i64 @llvm.ctlz.i64(i64 %0, i1 true), !range !8
  %5 = trunc i64 %4 to i32
  %6 = xor i32 %5, 63
  br label %7

7:                                                ; preds = %3, %1
  %8 = phi i32 [ -1, %1 ], [ %6, %3 ]
  ret i32 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink8FreeList8MoveFromEPS0_(%"class.blink::FreeList"* nocapture, %"class.blink::FreeList"* nocapture) local_unnamed_addr #11 align 2 {
  br label %10

3:                                                ; preds = %29
  %4 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %1, i64 0, i32 2
  %6 = load i32, i32* %4, align 4
  %7 = load i32, i32* %5, align 4
  %8 = icmp slt i32 %6, %7
  %9 = select i1 %8, i32 %7, i32 %6
  store i32 %9, i32* %4, align 8
  store i32 0, i32* %5, align 8
  ret void

10:                                               ; preds = %29, %2
  %11 = phi i64 [ 0, %2 ], [ %30, %29 ]
  %12 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %1, i64 0, i32 1, i64 %11
  %13 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 %11
  %15 = icmp eq %"class.blink::FreeListEntry"* %13, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.blink::FreeListEntry"** %14 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.blink::FreeListEntry", %"class.blink::FreeListEntry"* %13, i64 0, i32 1
  %20 = bitcast %"class.blink::FreeListEntry"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %14, align 8
  %22 = icmp eq %"class.blink::FreeListEntry"* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 1, i64 %11
  store %"class.blink::FreeListEntry"* %13, %"class.blink::FreeListEntry"** %24, align 8
  br label %25

25:                                               ; preds = %16, %23
  %26 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %1, i64 0, i32 0, i64 %11
  %27 = bitcast %"class.blink::FreeListEntry"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %17, align 8
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %26, align 8
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %12, align 8
  br label %29

29:                                               ; preds = %10, %25
  %30 = add nuw nsw i64 %11, 1
  %31 = icmp eq i64 %30, 17
  br i1 %31, label %3, label %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8FreeList7IsEmptyEv(%"class.blink::FreeList"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 0
  %7 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %6, align 8
  %8 = icmp eq %"class.blink::FreeListEntry"* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 1
  %11 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %10, align 8
  %12 = icmp eq %"class.blink::FreeListEntry"* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %5, %9, %14, %18, %22, %26, %30, %34, %38, %42, %46, %50, %54, %58, %62, %66, %1
  ret i1 false

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 2
  %16 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %15, align 8
  %17 = icmp eq %"class.blink::FreeListEntry"* %16, null
  br i1 %17, label %18, label %13

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 3
  %20 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %19, align 8
  %21 = icmp eq %"class.blink::FreeListEntry"* %20, null
  br i1 %21, label %22, label %13

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 4
  %24 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %23, align 8
  %25 = icmp eq %"class.blink::FreeListEntry"* %24, null
  br i1 %25, label %26, label %13

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 5
  %28 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %27, align 8
  %29 = icmp eq %"class.blink::FreeListEntry"* %28, null
  br i1 %29, label %30, label %13

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 6
  %32 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %31, align 8
  %33 = icmp eq %"class.blink::FreeListEntry"* %32, null
  br i1 %33, label %34, label %13

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 7
  %36 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %35, align 8
  %37 = icmp eq %"class.blink::FreeListEntry"* %36, null
  br i1 %37, label %38, label %13

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 8
  %40 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %39, align 8
  %41 = icmp eq %"class.blink::FreeListEntry"* %40, null
  br i1 %41, label %42, label %13

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 9
  %44 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %43, align 8
  %45 = icmp eq %"class.blink::FreeListEntry"* %44, null
  br i1 %45, label %46, label %13

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 10
  %48 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %47, align 8
  %49 = icmp eq %"class.blink::FreeListEntry"* %48, null
  br i1 %49, label %50, label %13

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 11
  %52 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %51, align 8
  %53 = icmp eq %"class.blink::FreeListEntry"* %52, null
  br i1 %53, label %54, label %13

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 12
  %56 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %55, align 8
  %57 = icmp eq %"class.blink::FreeListEntry"* %56, null
  br i1 %57, label %58, label %13

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 13
  %60 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %59, align 8
  %61 = icmp eq %"class.blink::FreeListEntry"* %60, null
  br i1 %61, label %62, label %13

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 14
  %64 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %63, align 8
  %65 = icmp eq %"class.blink::FreeListEntry"* %64, null
  br i1 %65, label %66, label %13

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 15
  %68 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %67, align 8
  %69 = icmp eq %"class.blink::FreeListEntry"* %68, null
  br i1 %69, label %70, label %13

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::FreeList", %"class.blink::FreeList"* %0, i64 0, i32 0, i64 16
  %72 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %71, align 8
  %73 = icmp eq %"class.blink::FreeListEntry"* %72, null
  ret i1 %73
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink8BasePageC2EPNS_10PageMemoryEPNS_9BaseArenaENS_8PageTypeE(%"class.blink::BasePage"* nocapture, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, i8 zeroext) unnamed_addr #11 align 2 {
  %5 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink8BasePageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %0, i64 0, i32 1
  store %"class.blink::PageMemory"* %1, %"class.blink::PageMemory"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %0, i64 0, i32 2
  store %"class.blink::BaseArena"* %2, %"class.blink::BaseArena"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %2, i64 0, i32 5
  %10 = bitcast %"class.blink::ThreadState"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::ThreadState"** %8 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %0, i64 0, i32 4
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %0, i64 0, i32 5
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %0, i64 0, i32 6
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %0, i64 0, i32 7
  store i8 %3, i8* %16, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10NormalPageC2EPNS_10PageMemoryEPNS_9BaseArenaE(%"class.blink::NormalPage"*, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink8BasePageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 1
  store %"class.blink::PageMemory"* %1, %"class.blink::PageMemory"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 2
  store %"class.blink::BaseArena"* %2, %"class.blink::BaseArena"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 3
  %8 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %2, i64 0, i32 5
  %9 = bitcast %"class.blink::ThreadState"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::ThreadState"** %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 4
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 5
  store i8 1, i8* %13, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 6
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 7
  store i8 0, i8* %15, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink10NormalPageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %16 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 1, i32 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %16, i8 0, i64 256, i1 false) #16
  %17 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 1
  %19 = bitcast %"class.blink::PlatformAwareObjectStartBitmap"* %17 to %"class.blink::NormalPage"**
  store %"class.blink::NormalPage"* %18, %"class.blink::NormalPage"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  %21 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 5
  %22 = bitcast %"class.WTF::Vector.219"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 2340, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10NormalPageD2Ev(%"class.blink::NormalPage"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink10NormalPageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::NormalPage::FutureFreelistEntry"*, %"struct.blink::NormalPage::FutureFreelistEntry"** %3, align 8
  %5 = icmp eq %"struct.blink::NormalPage::FutureFreelistEntry"* %4, null
  %6 = bitcast %"struct.blink::NormalPage::FutureFreelistEntry"* %4 to i8*
  br i1 %5, label %13, label %7, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #16
  store %"struct.blink::NormalPage::FutureFreelistEntry"* null, %"struct.blink::NormalPage::FutureFreelistEntry"** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  %14 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %"struct.blink::NormalPage::ToBeFinalizedObject"*, %"struct.blink::NormalPage::ToBeFinalizedObject"** %14, align 8
  %16 = icmp eq %"struct.blink::NormalPage::ToBeFinalizedObject"* %15, null
  %17 = bitcast %"struct.blink::NormalPage::ToBeFinalizedObject"* %15 to i8*
  br i1 %16, label %24, label %18, !prof !3

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !2

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #16
  store %"struct.blink::NormalPage::ToBeFinalizedObject"* null, %"struct.blink::NormalPage::ToBeFinalizedObject"** %14, align 8
  br label %24

24:                                               ; preds = %13, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10NormalPageD0Ev(%"class.blink::NormalPage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink10NormalPageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::NormalPage::FutureFreelistEntry"*, %"struct.blink::NormalPage::FutureFreelistEntry"** %3, align 8
  %5 = icmp eq %"struct.blink::NormalPage::FutureFreelistEntry"* %4, null
  %6 = bitcast %"struct.blink::NormalPage::FutureFreelistEntry"* %4 to i8*
  br i1 %5, label %13, label %7, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #16
  store %"struct.blink::NormalPage::FutureFreelistEntry"* null, %"struct.blink::NormalPage::FutureFreelistEntry"** %3, align 8
  br label %13

13:                                               ; preds = %12, %1
  %14 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %"struct.blink::NormalPage::ToBeFinalizedObject"*, %"struct.blink::NormalPage::ToBeFinalizedObject"** %14, align 8
  %16 = icmp eq %"struct.blink::NormalPage::ToBeFinalizedObject"* %15, null
  %17 = bitcast %"struct.blink::NormalPage::ToBeFinalizedObject"* %15 to i8*
  br i1 %16, label %24, label %18, !prof !3

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !2

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #16
  br label %24

24:                                               ; preds = %13, %23
  %25 = bitcast %"class.blink::NormalPage"* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5blink10NormalPage27ObjectPayloadSizeForTestingEv(%"class.blink::NormalPage"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 1
  %3 = bitcast %"class.blink::NormalPage"* %2 to i8*
  %4 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 45, i32 4, i32 1, i64 16
  %5 = bitcast %"class.blink::FreeListEntry"** %4 to i8*
  br label %6

6:                                                ; preds = %33, %1
  %7 = phi i64 [ 0, %1 ], [ %34, %33 ]
  %8 = phi i8* [ %3, %1 ], [ %37, %33 ]
  %9 = getelementptr inbounds i8, i8* %8, i64 4
  %10 = bitcast i8* %9 to i16*
  %11 = load i16, i16* %10, align 2
  %12 = icmp ult i16 %11, 4
  %13 = getelementptr inbounds i8, i8* %8, i64 6
  %14 = bitcast i8* %13 to i16*
  %15 = load i16, i16* %14, align 2
  %16 = lshr i16 %15, 2
  br i1 %12, label %33, label %17

17:                                               ; preds = %6
  %18 = icmp eq i16 %16, 0
  br i1 %18, label %19, label %26, !prof !2

19:                                               ; preds = %17
  %20 = ptrtoint i8* %8 to i64
  %21 = and i64 %20, -131072
  %22 = inttoptr i64 %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 4144
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 16
  br label %29

26:                                               ; preds = %17
  %27 = zext i16 %16 to i64
  %28 = shl nuw nsw i64 %27, 3
  br label %29

29:                                               ; preds = %19, %26
  %30 = phi i64 [ %25, %19 ], [ %28, %26 ]
  %31 = add i64 %7, -8
  %32 = add i64 %31, %30
  br label %33

33:                                               ; preds = %6, %29
  %34 = phi i64 [ %32, %29 ], [ %7, %6 ]
  %35 = zext i16 %16 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = getelementptr inbounds i8, i8* %8, i64 %36
  %38 = icmp ult i8* %37, %5
  br i1 %38, label %6, label %39

39:                                               ; preds = %33
  ret i64 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10NormalPage14RemoveFromHeapEv(%"class.blink::NormalPage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 2
  %3 = bitcast %"class.blink::BaseArena"** %2 to %"class.blink::NormalPageArena"**
  %4 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %3, align 8
  tail call void @_ZN5blink15NormalPageArena8FreePageEPNS_10NormalPageE(%"class.blink::NormalPageArena"* %4, %"class.blink::NormalPage"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10NormalPage19ToBeFinalizedObject8FinalizeEv(%"struct.blink::NormalPage::ToBeFinalizedObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::NormalPage::ToBeFinalizedObject", %"struct.blink::NormalPage::ToBeFinalizedObject"* %0, i64 0, i32 0
  %3 = load %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %3, i64 0, i32 2
  %5 = load i16, i16* %4, align 2
  %6 = lshr i16 %5, 2
  %7 = zext i16 %6 to i64
  %8 = shl nuw nsw i64 %7, 3
  %9 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %3, i64 0, i32 1
  %10 = load i16, i16* %9, align 2
  %11 = lshr i16 %10, 2
  %12 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %13 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %12, i64 0, i32 0
  %14 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %13, align 8
  %15 = zext i16 %11 to i64
  %16 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %14, i64 %15
  %17 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %16, align 8
  %18 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %17, i64 0, i32 1
  %19 = load void (i8*)*, void (i8*)** %18, align 8
  %20 = icmp eq void (i8*)* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %1
  %22 = bitcast %"class.blink::HeapObjectHeader"* %3 to i8*
  br label %28

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %3, i64 1
  %25 = bitcast %"class.blink::HeapObjectHeader"* %24 to i8*
  tail call void %19(i8* %25) #16
  %26 = bitcast %"struct.blink::NormalPage::ToBeFinalizedObject"* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %21, %23
  %29 = phi i8* [ %22, %21 ], [ %27, %23 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %8, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10NormalPage13FinalizeSweepENS_11SweepResultE(%"class.blink::NormalPage"*, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::NormalPage::ToBeFinalizedObject"*, %"struct.blink::NormalPage::ToBeFinalizedObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.blink::NormalPage::ToBeFinalizedObject", %"struct.blink::NormalPage::ToBeFinalizedObject"* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %25

11:                                               ; preds = %53, %2
  %12 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %11
  %16 = load i32, i32* %6, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  store i32 0, i32* %6, align 4
  br label %19

19:                                               ; preds = %18, %15
  %20 = bitcast %"class.WTF::Vector.214"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %"class.WTF::Vector.214"* %3 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #16
  br label %23

23:                                               ; preds = %11, %19
  %24 = icmp eq i8 %1, 1
  br i1 %24, label %57, label %59

25:                                               ; preds = %2, %53
  %26 = phi %"struct.blink::NormalPage::ToBeFinalizedObject"* [ %55, %53 ], [ %5, %2 ]
  %27 = getelementptr inbounds %"struct.blink::NormalPage::ToBeFinalizedObject", %"struct.blink::NormalPage::ToBeFinalizedObject"* %26, i64 0, i32 0
  %28 = load %"class.blink::HeapObjectHeader"*, %"class.blink::HeapObjectHeader"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %28, i64 0, i32 2
  %30 = load i16, i16* %29, align 2
  %31 = lshr i16 %30, 2
  %32 = zext i16 %31 to i64
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %28, i64 0, i32 1
  %35 = load i16, i16* %34, align 2
  %36 = lshr i16 %35, 2
  %37 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %38 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %37, i64 0, i32 0
  %39 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %38, align 8
  %40 = zext i16 %36 to i64
  %41 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %39, i64 %40
  %42 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %41, align 8
  %43 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %42, i64 0, i32 1
  %44 = load void (i8*)*, void (i8*)** %43, align 8
  %45 = icmp eq void (i8*)* %44, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %25
  %47 = bitcast %"class.blink::HeapObjectHeader"* %28 to i8*
  br label %53

48:                                               ; preds = %25
  %49 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %28, i64 1
  %50 = bitcast %"class.blink::HeapObjectHeader"* %49 to i8*
  tail call void %44(i8* %50) #16
  %51 = bitcast %"struct.blink::NormalPage::ToBeFinalizedObject"* %26 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %46, %48
  %54 = phi i8* [ %47, %46 ], [ %52, %48 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %54, i8 0, i64 %33, i1 false) #16
  %55 = getelementptr inbounds %"struct.blink::NormalPage::ToBeFinalizedObject", %"struct.blink::NormalPage::ToBeFinalizedObject"* %26, i64 1
  %56 = icmp eq %"struct.blink::NormalPage::ToBeFinalizedObject"* %55, %9
  br i1 %56, label %11, label %25

57:                                               ; preds = %23
  tail call void @_ZN5blink10NormalPage14MergeFreeListsEv(%"class.blink::NormalPage"* %0)
  %58 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 5
  store i8 1, i8* %58, align 8
  br label %63

59:                                               ; preds = %23
  %60 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 2
  %61 = bitcast %"class.blink::BaseArena"** %60 to %"class.blink::NormalPageArena"**
  %62 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %61, align 8
  tail call void @_ZN5blink15NormalPageArena8FreePageEPNS_10NormalPageE(%"class.blink::NormalPageArena"* %62, %"class.blink::NormalPage"* %0) #16
  br label %63

63:                                               ; preds = %59, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10NormalPage14MergeFreeListsEv(%"class.blink::NormalPage"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 2
  %3 = bitcast %"class.blink::BaseArena"** %2 to %"class.blink::NormalPageArena"**
  %4 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %3, align 8
  br label %5

5:                                                ; preds = %24, %1
  %6 = phi i64 [ 0, %1 ], [ %25, %24 ]
  %7 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 4, i32 1, i64 %6
  %8 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %4, i64 0, i32 2, i32 0, i64 %6
  %10 = icmp eq %"class.blink::FreeListEntry"* %8, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.blink::FreeListEntry"** %9 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.blink::FreeListEntry", %"class.blink::FreeListEntry"* %8, i64 0, i32 1
  %15 = bitcast %"class.blink::FreeListEntry"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %9, align 8
  %17 = icmp eq %"class.blink::FreeListEntry"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %4, i64 0, i32 2, i32 1, i64 %6
  store %"class.blink::FreeListEntry"* %8, %"class.blink::FreeListEntry"** %19, align 8
  br label %20

20:                                               ; preds = %18, %11
  %21 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 4, i32 0, i64 %6
  %22 = bitcast %"class.blink::FreeListEntry"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %12, align 8
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %21, align 8
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %7, align 8
  br label %24

24:                                               ; preds = %20, %5
  %25 = add nuw nsw i64 %6, 1
  %26 = icmp eq i64 %25, 17
  br i1 %26, label %27, label %5

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %4, i64 0, i32 2, i32 2
  %29 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 4, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  %32 = icmp slt i32 %30, %31
  %33 = select i1 %32, i32 %31, i32 %30
  store i32 %33, i32* %28, align 8
  store i32 0, i32* %29, align 8
  %34 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.WTF::Vector.219", %"class.WTF::Vector.219"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.blink::NormalPage::FutureFreelistEntry"*, %"struct.blink::NormalPage::FutureFreelistEntry"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.blink::NormalPage::FutureFreelistEntry", %"struct.blink::NormalPage::FutureFreelistEntry"* %36, i64 %39
  %41 = icmp eq i32 %38, 0
  br i1 %41, label %42, label %55

42:                                               ; preds = %129, %27
  %43 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %42
  %47 = load i32, i32* %37, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %46
  store i32 0, i32* %37, align 4
  br label %50

50:                                               ; preds = %49, %46
  %51 = bitcast %"class.WTF::Vector.219"* %34 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.WTF::Vector.219"* %34 to i64*
  store atomic i64 0, i64* %53 monotonic, align 8
  store i32 0, i32* %43, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #16
  br label %54

54:                                               ; preds = %42, %50
  ret void

55:                                               ; preds = %27, %129
  %56 = phi %"struct.blink::NormalPage::FutureFreelistEntry"* [ %130, %129 ], [ %36, %27 ]
  %57 = getelementptr inbounds %"struct.blink::NormalPage::FutureFreelistEntry", %"struct.blink::NormalPage::FutureFreelistEntry"* %56, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %"struct.blink::NormalPage::FutureFreelistEntry", %"struct.blink::NormalPage::FutureFreelistEntry"* %56, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = icmp ult i64 %60, 16
  %62 = bitcast i8* %58 to i32*
  store i32 0, i32* %62, align 4
  %63 = getelementptr inbounds i8, i8* %58, i64 4
  %64 = bitcast i8* %63 to i16*
  store atomic i16 0, i16* %64 monotonic, align 2
  %65 = lshr i64 %60, 1
  %66 = trunc i64 %65 to i16
  %67 = getelementptr inbounds i8, i8* %58, i64 6
  %68 = bitcast i8* %67 to i16*
  store i16 %66, i16* %68, align 2
  br i1 %61, label %90, label %69

69:                                               ; preds = %55
  %70 = getelementptr inbounds i8, i8* %58, i64 8
  %71 = bitcast i8* %70 to %"class.blink::FreeListEntry"**
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %71, align 8
  %72 = tail call i64 @llvm.ctlz.i64(i64 %60, i1 true) #16, !range !8
  %73 = trunc i64 %72 to i32
  %74 = xor i32 %73, 63
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %4, i64 0, i32 2, i32 0, i64 %75
  %77 = bitcast %"class.blink::FreeListEntry"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast i8* %70 to i64*
  store i64 %78, i64* %79, align 8
  %80 = bitcast %"class.blink::FreeListEntry"** %76 to i8**
  store i8* %58, i8** %80, align 8
  %81 = load i32, i32* %28, align 8
  %82 = icmp sgt i32 %74, %81
  br i1 %82, label %83, label %84

83:                                               ; preds = %69
  store i32 %74, i32* %28, align 8
  br label %84

84:                                               ; preds = %83, %69
  %85 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %71, align 8
  %86 = icmp eq %"class.blink::FreeListEntry"* %85, null
  br i1 %86, label %87, label %90

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %4, i64 0, i32 2, i32 1, i64 %75
  %89 = bitcast %"class.blink::FreeListEntry"** %88 to i8**
  store i8* %58, i8** %89, align 8
  br label %90

90:                                               ; preds = %55, %84, %87
  %91 = ptrtoint i8* %58 to i64
  %92 = and i64 %91, -131072
  %93 = inttoptr i64 %92 to i8*
  %94 = getelementptr inbounds i8, i8* %93, i64 4400
  %95 = bitcast i8* %94 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %96 = bitcast i8* %94 to i64*
  %97 = load i64, i64* %96, align 16
  %98 = sub i64 %91, %97
  %99 = lshr i64 %98, 3
  %100 = lshr i64 %98, 6
  %101 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %95, i64 0, i32 0, i32 1, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = trunc i64 %99 to i32
  %104 = and i32 %103, 7
  %105 = shl i32 1, %104
  %106 = trunc i32 %105 to i8
  %107 = or i8 %102, %106
  store atomic i8 %107, i8* %101 release, align 1
  %108 = load %"class.blink::BaseArena"*, %"class.blink::BaseArena"** %2, align 8
  %109 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %108, i64 0, i32 5
  %110 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %110, i64 0, i32 24, i32 3
  %112 = load i32, i32* %111, align 4
  %113 = add i32 %112, -11
  %114 = icmp ult i32 %113, 2
  br i1 %114, label %115, label %129

115:                                              ; preds = %90
  %116 = load i8*, i8** %57, align 8
  %117 = getelementptr inbounds i8, i8* %116, i64 16
  %118 = load i64, i64* %59, align 8
  %119 = getelementptr inbounds i8, i8* %116, i64 %118
  %120 = ptrtoint i8* %117 to i64
  %121 = add i64 %120, 4095
  %122 = and i64 %121, -4096
  %123 = ptrtoint i8* %119 to i64
  %124 = and i64 %123, -4096
  %125 = icmp ugt i64 %124, %122
  br i1 %125, label %126, label %129

126:                                              ; preds = %115
  %127 = inttoptr i64 %122 to i8*
  %128 = sub i64 %124, %122
  tail call void @_ZN4base18DiscardSystemPagesEPvm(i8* %127, i64 %128) #16
  br label %129

129:                                              ; preds = %126, %115, %90
  %130 = getelementptr inbounds %"struct.blink::NormalPage::FutureFreelistEntry", %"struct.blink::NormalPage::FutureFreelistEntry"* %56, i64 1
  %131 = icmp eq %"struct.blink::NormalPage::FutureFreelistEntry"* %130, %40
  br i1 %131, label %42, label %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10NormalPage13AddToFreeListEPhmNS_12FinalizeTypeEb(%"class.blink::NormalPage"*, i8*, i64, i8 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.blink::NormalPage::FutureFreelistEntry", align 8
  %7 = icmp eq i8 %3, 1
  %8 = and i1 %7, %4
  br i1 %8, label %9, label %29

9:                                                ; preds = %5
  %10 = bitcast %"struct.blink::NormalPage::FutureFreelistEntry"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"struct.blink::NormalPage::FutureFreelistEntry", %"struct.blink::NormalPage::FutureFreelistEntry"* %6, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::NormalPage::FutureFreelistEntry", %"struct.blink::NormalPage::FutureFreelistEntry"* %6, i64 0, i32 1
  store i8* %1, i8** %11, align 8
  store i64 %2, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 5
  %14 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %27, label %19, !prof !2

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.WTF::Vector.219", %"class.WTF::Vector.219"* %13, i64 0, i32 0, i32 0, i32 0
  %21 = load %"struct.blink::NormalPage::FutureFreelistEntry"*, %"struct.blink::NormalPage::FutureFreelistEntry"** %20, align 8
  %22 = zext i32 %15 to i64
  %23 = getelementptr inbounds %"struct.blink::NormalPage::FutureFreelistEntry", %"struct.blink::NormalPage::FutureFreelistEntry"* %21, i64 %22
  %24 = bitcast %"struct.blink::NormalPage::FutureFreelistEntry"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* nonnull align 8 %10, i64 16, i1 false) #16
  %25 = load i32, i32* %14, align 4
  %26 = add i32 %25, 1
  store i32 %26, i32* %14, align 4
  br label %28

27:                                               ; preds = %9
  call void @_ZN3WTF6VectorIN5blink10NormalPage19FutureFreelistEntryELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.219"* %13, %"struct.blink::NormalPage::FutureFreelistEntry"* nonnull dereferenceable(16) %6) #16
  br label %28

28:                                               ; preds = %19, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  br label %95

29:                                               ; preds = %5
  %30 = icmp ult i64 %2, 16
  %31 = bitcast i8* %1 to i32*
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds i8, i8* %1, i64 4
  %33 = bitcast i8* %32 to i16*
  store atomic i16 0, i16* %33 monotonic, align 2
  %34 = lshr i64 %2, 1
  %35 = trunc i64 %34 to i16
  %36 = getelementptr inbounds i8, i8* %1, i64 6
  %37 = bitcast i8* %36 to i16*
  store i16 %35, i16* %37, align 2
  br i1 %30, label %60, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds i8, i8* %1, i64 8
  %40 = bitcast i8* %39 to %"class.blink::FreeListEntry"**
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %40, align 8
  %41 = tail call i64 @llvm.ctlz.i64(i64 %2, i1 true) #16, !range !8
  %42 = trunc i64 %41 to i32
  %43 = xor i32 %42, 63
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 4, i32 0, i64 %44
  %46 = bitcast %"class.blink::FreeListEntry"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast i8* %39 to i64*
  store i64 %47, i64* %48, align 8
  %49 = bitcast %"class.blink::FreeListEntry"** %45 to i8**
  store i8* %1, i8** %49, align 8
  %50 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 4, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = icmp sgt i32 %43, %51
  br i1 %52, label %53, label %54

53:                                               ; preds = %38
  store i32 %43, i32* %50, align 8
  br label %54

54:                                               ; preds = %53, %38
  %55 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %40, align 8
  %56 = icmp eq %"class.blink::FreeListEntry"* %55, null
  br i1 %56, label %57, label %60

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 4, i32 1, i64 %44
  %59 = bitcast %"class.blink::FreeListEntry"** %58 to i8**
  store i8* %1, i8** %59, align 8
  br label %60

60:                                               ; preds = %29, %54, %57
  %61 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 2
  %62 = bitcast %"class.blink::PlatformAwareObjectStartBitmap"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = ptrtoint i8* %1 to i64
  %65 = sub i64 %64, %63
  %66 = lshr i64 %65, 3
  %67 = lshr i64 %65, 6
  %68 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 2, i32 0, i32 1, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = trunc i64 %66 to i32
  %71 = and i32 %70, 7
  %72 = shl i32 1, %71
  %73 = trunc i32 %72 to i8
  %74 = or i8 %69, %73
  store i8 %74, i8* %68, align 1
  %75 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 2
  %76 = load %"class.blink::BaseArena"*, %"class.blink::BaseArena"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %76, i64 0, i32 5
  %78 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %78, i64 0, i32 24, i32 3
  %80 = load i32, i32* %79, align 4
  %81 = add i32 %80, -11
  %82 = icmp ult i32 %81, 2
  br i1 %82, label %83, label %95

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %1, i64 16
  %85 = getelementptr inbounds i8, i8* %1, i64 %2
  %86 = ptrtoint i8* %84 to i64
  %87 = add i64 %86, 4095
  %88 = and i64 %87, -4096
  %89 = ptrtoint i8* %85 to i64
  %90 = and i64 %89, -4096
  %91 = icmp ugt i64 %90, %88
  br i1 %91, label %92, label %95

92:                                               ; preds = %83
  %93 = inttoptr i64 %88 to i8*
  %94 = sub i64 %90, %88
  tail call void @_ZN4base18DiscardSystemPagesEPvm(i8* %93, i64 %94) #16
  br label %95

95:                                               ; preds = %92, %83, %60, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10NormalPage5SweepENS_12FinalizeTypeE(%"class.blink::NormalPage"*, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::NormalPage::ToBeFinalizedObject", align 8
  %4 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 2048, i1 false) #16
  %6 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 4
  %7 = bitcast %"class.blink::FreeList"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 276, i1 false) #16
  %8 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  store i32 0, i32* %13, align 4
  br label %17

17:                                               ; preds = %16, %12
  %18 = bitcast %"class.WTF::Vector.219"* %8 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.WTF::Vector.219"* %8 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store i32 0, i32* %9, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %19) #16
  br label %21

21:                                               ; preds = %2, %17
  %22 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 1
  %23 = bitcast %"class.blink::NormalPage"* %22 to i8*
  %24 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 45, i32 4, i32 1, i64 16
  %25 = bitcast %"class.blink::FreeListEntry"** %24 to i8*
  %26 = bitcast %"class.blink::PlatformAwareObjectStartBitmap"* %4 to i64*
  %27 = bitcast %"struct.blink::NormalPage::ToBeFinalizedObject"* %3 to i8*
  %28 = bitcast %"struct.blink::NormalPage::ToBeFinalizedObject"* %3 to i8**
  %29 = icmp eq i8 %1, 0
  %30 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 3
  %31 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %30, i64 0, i32 0, i32 0, i32 0
  br label %39

34:                                               ; preds = %144
  %35 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 4
  store i64 %146, i64* %35, align 8
  %36 = icmp eq i8* %145, %23
  %37 = icmp eq i8* %145, %25
  %38 = or i1 %36, %37
  br i1 %38, label %156, label %150

39:                                               ; preds = %21, %144
  %40 = phi i8* [ %23, %21 ], [ %148, %144 ]
  %41 = phi i8 [ 0, %21 ], [ %147, %144 ]
  %42 = phi i64 [ 0, %21 ], [ %146, %144 ]
  %43 = phi i8* [ %23, %21 ], [ %145, %144 ]
  %44 = getelementptr inbounds i8, i8* %40, i64 6
  %45 = bitcast i8* %44 to i16*
  %46 = load i16, i16* %45, align 2
  %47 = lshr i16 %46, 2
  %48 = zext i16 %47 to i64
  %49 = shl nuw nsw i64 %48, 3
  %50 = getelementptr inbounds i8, i8* %40, i64 4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 acquire, align 2
  %53 = icmp ult i16 %52, 4
  br i1 %53, label %54, label %58

54:                                               ; preds = %39
  %55 = icmp ult i64 %49, 16
  %56 = select i1 %55, i64 %49, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 1 %40, i8 0, i64 %56, i1 false)
  %57 = getelementptr inbounds i8, i8* %40, i64 %49
  br label %144

58:                                               ; preds = %39
  %59 = load atomic i16, i16* %45 monotonic, align 2
  %60 = and i16 %59, 1
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %62, label %119

62:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  store i8* %40, i8** %28, align 8
  %63 = ptrtoint i8* %40 to i64
  br i1 %29, label %64, label %73

64:                                               ; preds = %62
  %65 = getelementptr inbounds i8, i8* %40, i64 4
  %66 = bitcast i8* %65 to i16*
  %67 = load i16, i16* %66, align 2
  %68 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %69 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %68, i64 0, i32 0
  %70 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %69, align 8
  %71 = lshr i16 %67, 2
  %72 = zext i16 %71 to i64
  br label %85

73:                                               ; preds = %62
  %74 = load i16, i16* %51, align 2
  %75 = lshr i16 %74, 2
  %76 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %77 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %76, i64 0, i32 0
  %78 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %77, align 8
  %79 = zext i16 %75 to i64
  %80 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %78, i64 %79
  %81 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %80, align 8
  %82 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %81, i64 0, i32 1
  %83 = load void (i8*)*, void (i8*)** %82, align 8
  %84 = icmp eq void (i8*)* %83, null
  br i1 %84, label %85, label %104

85:                                               ; preds = %64, %73
  %86 = phi i64 [ %72, %64 ], [ %79, %73 ]
  %87 = phi %"struct.blink::GCInfo"** [ %70, %64 ], [ %78, %73 ]
  %88 = getelementptr inbounds i8, i8* %40, i64 6
  %89 = bitcast i8* %88 to i16*
  %90 = load i16, i16* %89, align 2
  %91 = lshr i16 %90, 2
  %92 = zext i16 %91 to i64
  %93 = shl nuw nsw i64 %92, 3
  %94 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %87, i64 %86
  %95 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %94, align 8
  %96 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %95, i64 0, i32 1
  %97 = load void (i8*)*, void (i8*)** %96, align 8
  %98 = icmp eq void (i8*)* %97, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %85
  %100 = getelementptr inbounds i8, i8* %40, i64 8
  call void %97(i8* %100) #16
  %101 = load i8*, i8** %28, align 8
  br label %102

102:                                              ; preds = %85, %99
  %103 = phi i8* [ %101, %99 ], [ %40, %85 ]
  call void @llvm.memset.p0i8.i64(i8* align 1 %103, i8 0, i64 %93, i1 false) #16
  br label %116

104:                                              ; preds = %73
  %105 = load i32, i32* %31, align 4
  %106 = load i32, i32* %32, align 8
  %107 = icmp eq i32 %105, %106
  br i1 %107, label %115, label %108, !prof !2

108:                                              ; preds = %104
  %109 = load %"struct.blink::NormalPage::ToBeFinalizedObject"*, %"struct.blink::NormalPage::ToBeFinalizedObject"** %33, align 8
  %110 = zext i32 %105 to i64
  %111 = getelementptr inbounds %"struct.blink::NormalPage::ToBeFinalizedObject", %"struct.blink::NormalPage::ToBeFinalizedObject"* %109, i64 %110
  %112 = bitcast %"struct.blink::NormalPage::ToBeFinalizedObject"* %111 to i64*
  store i64 %63, i64* %112, align 8
  %113 = load i32, i32* %31, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %31, align 4
  br label %116

115:                                              ; preds = %104
  call void @_ZN3WTF6VectorIN5blink10NormalPage19ToBeFinalizedObjectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.214"* %30, %"struct.blink::NormalPage::ToBeFinalizedObject"* nonnull dereferenceable(8) %3) #16
  br label %116

116:                                              ; preds = %115, %108, %102
  %117 = phi i8 [ %41, %102 ], [ 1, %108 ], [ 1, %115 ]
  %118 = getelementptr inbounds i8, i8* %40, i64 %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  br label %144

119:                                              ; preds = %58
  %120 = icmp eq i8* %43, %40
  %121 = ptrtoint i8* %40 to i64
  br i1 %120, label %127, label %122

122:                                              ; preds = %119
  %123 = ptrtoint i8* %43 to i64
  %124 = sub i64 %121, %123
  %125 = and i8 %41, 1
  %126 = icmp ne i8 %125, 0
  call void @_ZN5blink10NormalPage13AddToFreeListEPhmNS_12FinalizeTypeEb(%"class.blink::NormalPage"* %0, i8* %43, i64 %124, i8 zeroext %1, i1 zeroext %126)
  br label %127

127:                                              ; preds = %119, %122
  %128 = phi i8 [ 0, %122 ], [ %41, %119 ]
  %129 = load i64, i64* %26, align 8
  %130 = sub i64 %121, %129
  %131 = lshr i64 %130, 3
  %132 = lshr i64 %130, 6
  %133 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 2, i32 0, i32 1, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = trunc i64 %131 to i32
  %136 = and i32 %135, 7
  %137 = shl i32 1, %136
  %138 = trunc i32 %137 to i8
  %139 = or i8 %134, %138
  store i8 %139, i8* %133, align 1
  %140 = load atomic i16, i16* %45 monotonic, align 2
  %141 = and i16 %140, -2
  store atomic i16 %141, i16* %45 monotonic, align 2
  %142 = add i64 %49, %42
  %143 = getelementptr inbounds i8, i8* %40, i64 %49
  br label %144

144:                                              ; preds = %127, %116, %54
  %145 = phi i8* [ %43, %54 ], [ %143, %127 ], [ %43, %116 ]
  %146 = phi i64 [ %42, %54 ], [ %142, %127 ], [ %42, %116 ]
  %147 = phi i8 [ %41, %54 ], [ %128, %127 ], [ %117, %116 ]
  %148 = phi i8* [ %57, %54 ], [ %143, %127 ], [ %118, %116 ]
  %149 = icmp ult i8* %148, %25
  br i1 %149, label %39, label %34

150:                                              ; preds = %34
  %151 = ptrtoint %"class.blink::FreeListEntry"** %24 to i64
  %152 = ptrtoint i8* %145 to i64
  %153 = sub i64 %151, %152
  %154 = and i8 %147, 1
  %155 = icmp ne i8 %154, 0
  call void @_ZN5blink10NormalPage13AddToFreeListEPhmNS_12FinalizeTypeEb(%"class.blink::NormalPage"* %0, i8* %145, i64 %153, i8 zeroext %1, i1 zeroext %155)
  br label %156

156:                                              ; preds = %34, %150
  ret i1 %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink11HeapCompact8RelocateEPhS1_(%"class.blink::HeapCompact"*, i8*, i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10NormalPage24MakeConsistentForMutatorEv(%"class.blink::NormalPage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 2048, i1 false) #16
  %4 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 1
  %5 = bitcast %"class.blink::NormalPage"* %4 to i8*
  %6 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 2
  %7 = bitcast %"class.blink::BaseArena"** %6 to %"class.blink::NormalPageArena"**
  %8 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 45, i32 4, i32 1, i64 16
  %10 = bitcast %"class.blink::FreeListEntry"** %9 to i8*
  %11 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %8, i64 0, i32 2, i32 2
  %12 = bitcast %"class.blink::PlatformAwareObjectStartBitmap"* %2 to i64*
  br label %16

13:                                               ; preds = %108
  %14 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 4
  store i64 %110, i64* %14, align 8
  %15 = icmp eq i8* %109, %10
  br i1 %15, label %163, label %113

16:                                               ; preds = %1, %108
  %17 = phi i8* [ %5, %1 ], [ %111, %108 ]
  %18 = phi i64 [ 0, %1 ], [ %110, %108 ]
  %19 = phi i8* [ %5, %1 ], [ %109, %108 ]
  %20 = getelementptr inbounds i8, i8* %17, i64 6
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = lshr i16 %22, 2
  %24 = zext i16 %23 to i64
  %25 = shl nuw nsw i64 %24, 3
  %26 = getelementptr inbounds i8, i8* %17, i64 4
  %27 = bitcast i8* %26 to i16*
  %28 = load i16, i16* %27, align 2
  %29 = icmp ult i16 %28, 4
  br i1 %29, label %30, label %34

30:                                               ; preds = %16
  %31 = icmp ult i64 %25, 16
  %32 = select i1 %31, i64 %25, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %17, i8 0, i64 %32, i1 false)
  %33 = getelementptr inbounds i8, i8* %17, i64 %25
  br label %108

34:                                               ; preds = %16
  %35 = icmp eq i8* %19, %17
  br i1 %35, label %87, label %36

36:                                               ; preds = %34
  %37 = ptrtoint i8* %17 to i64
  %38 = ptrtoint i8* %19 to i64
  %39 = sub i64 %37, %38
  %40 = icmp ult i64 %39, 16
  %41 = bitcast i8* %19 to i32*
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %19, i64 4
  %43 = bitcast i8* %42 to i16*
  store atomic i16 0, i16* %43 monotonic, align 2
  %44 = lshr i64 %39, 1
  %45 = trunc i64 %44 to i16
  %46 = getelementptr inbounds i8, i8* %19, i64 6
  %47 = bitcast i8* %46 to i16*
  store i16 %45, i16* %47, align 2
  br i1 %40, label %69, label %48

48:                                               ; preds = %36
  %49 = getelementptr inbounds i8, i8* %19, i64 8
  %50 = bitcast i8* %49 to %"class.blink::FreeListEntry"**
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %50, align 8
  %51 = tail call i64 @llvm.ctlz.i64(i64 %39, i1 true) #16, !range !8
  %52 = trunc i64 %51 to i32
  %53 = xor i32 %52, 63
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %8, i64 0, i32 2, i32 0, i64 %54
  %56 = bitcast %"class.blink::FreeListEntry"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8* %49 to i64*
  store i64 %57, i64* %58, align 8
  %59 = bitcast %"class.blink::FreeListEntry"** %55 to i8**
  store i8* %19, i8** %59, align 8
  %60 = load i32, i32* %11, align 8
  %61 = icmp sgt i32 %53, %60
  br i1 %61, label %62, label %63

62:                                               ; preds = %48
  store i32 %53, i32* %11, align 8
  br label %63

63:                                               ; preds = %62, %48
  %64 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %50, align 8
  %65 = icmp eq %"class.blink::FreeListEntry"* %64, null
  br i1 %65, label %66, label %69

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %8, i64 0, i32 2, i32 1, i64 %54
  %68 = bitcast %"class.blink::FreeListEntry"** %67 to i8**
  store i8* %19, i8** %68, align 8
  br label %69

69:                                               ; preds = %36, %63, %66
  %70 = and i64 %38, -131072
  %71 = inttoptr i64 %70 to i8*
  %72 = getelementptr inbounds i8, i8* %71, i64 4400
  %73 = bitcast i8* %72 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %74 = bitcast i8* %72 to i64*
  %75 = load i64, i64* %74, align 16
  %76 = sub i64 %38, %75
  %77 = lshr i64 %76, 3
  %78 = lshr i64 %76, 6
  %79 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %73, i64 0, i32 0, i32 1, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = trunc i64 %77 to i32
  %82 = and i32 %81, 7
  %83 = shl i32 1, %82
  %84 = trunc i32 %83 to i8
  %85 = or i8 %80, %84
  store atomic i8 %85, i8* %79 release, align 1
  %86 = load i16, i16* %21, align 2
  br label %87

87:                                               ; preds = %34, %69
  %88 = phi i16 [ %22, %34 ], [ %86, %69 ]
  %89 = and i16 %88, 1
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  %92 = and i16 %88, -2
  store i16 %92, i16* %21, align 2
  br label %93

93:                                               ; preds = %87, %91
  %94 = load i64, i64* %12, align 8
  %95 = ptrtoint i8* %17 to i64
  %96 = sub i64 %95, %94
  %97 = lshr i64 %96, 3
  %98 = lshr i64 %96, 6
  %99 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 2, i32 0, i32 1, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = trunc i64 %97 to i32
  %102 = and i32 %101, 7
  %103 = shl i32 1, %102
  %104 = trunc i32 %103 to i8
  %105 = or i8 %100, %104
  store i8 %105, i8* %99, align 1
  %106 = add i64 %25, %18
  %107 = getelementptr inbounds i8, i8* %17, i64 %25
  br label %108

108:                                              ; preds = %93, %30
  %109 = phi i8* [ %19, %30 ], [ %107, %93 ]
  %110 = phi i64 [ %18, %30 ], [ %106, %93 ]
  %111 = phi i8* [ %33, %30 ], [ %107, %93 ]
  %112 = icmp ult i8* %111, %10
  br i1 %112, label %16, label %13

113:                                              ; preds = %13
  %114 = ptrtoint %"class.blink::FreeListEntry"** %9 to i64
  %115 = ptrtoint i8* %109 to i64
  %116 = sub i64 %114, %115
  %117 = icmp ult i64 %116, 16
  %118 = bitcast i8* %109 to i32*
  store i32 0, i32* %118, align 4
  %119 = getelementptr inbounds i8, i8* %109, i64 4
  %120 = bitcast i8* %119 to i16*
  store atomic i16 0, i16* %120 monotonic, align 2
  %121 = lshr i64 %116, 1
  %122 = trunc i64 %121 to i16
  %123 = getelementptr inbounds i8, i8* %109, i64 6
  %124 = bitcast i8* %123 to i16*
  store i16 %122, i16* %124, align 2
  br i1 %117, label %146, label %125

125:                                              ; preds = %113
  %126 = getelementptr inbounds i8, i8* %109, i64 8
  %127 = bitcast i8* %126 to %"class.blink::FreeListEntry"**
  store %"class.blink::FreeListEntry"* null, %"class.blink::FreeListEntry"** %127, align 8
  %128 = tail call i64 @llvm.ctlz.i64(i64 %116, i1 true) #16, !range !8
  %129 = trunc i64 %128 to i32
  %130 = xor i32 %129, 63
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %8, i64 0, i32 2, i32 0, i64 %131
  %133 = bitcast %"class.blink::FreeListEntry"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast i8* %126 to i64*
  store i64 %134, i64* %135, align 8
  %136 = bitcast %"class.blink::FreeListEntry"** %132 to i8**
  store i8* %109, i8** %136, align 8
  %137 = load i32, i32* %11, align 8
  %138 = icmp sgt i32 %130, %137
  br i1 %138, label %139, label %140

139:                                              ; preds = %125
  store i32 %130, i32* %11, align 8
  br label %140

140:                                              ; preds = %139, %125
  %141 = load %"class.blink::FreeListEntry"*, %"class.blink::FreeListEntry"** %127, align 8
  %142 = icmp eq %"class.blink::FreeListEntry"* %141, null
  br i1 %142, label %143, label %146

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %8, i64 0, i32 2, i32 1, i64 %131
  %145 = bitcast %"class.blink::FreeListEntry"** %144 to i8**
  store i8* %109, i8** %145, align 8
  br label %146

146:                                              ; preds = %113, %140, %143
  %147 = and i64 %115, -131072
  %148 = inttoptr i64 %147 to i8*
  %149 = getelementptr inbounds i8, i8* %148, i64 4400
  %150 = bitcast i8* %149 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %151 = bitcast i8* %149 to i64*
  %152 = load i64, i64* %151, align 16
  %153 = sub i64 %115, %152
  %154 = lshr i64 %153, 3
  %155 = lshr i64 %153, 6
  %156 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %150, i64 0, i32 0, i32 1, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = trunc i64 %154 to i32
  %159 = and i32 %158, 7
  %160 = shl i32 1, %159
  %161 = trunc i32 %160 to i8
  %162 = or i8 %157, %161
  store atomic i8 %162, i8* %156 release, align 1
  br label %163

163:                                              ; preds = %13, %146
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink10NormalPage46VerifyObjectStartBitmapIsConsistentWithPayloadEv(%"class.blink::NormalPage"* nocapture) local_unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10NormalPage6UnmarkEv(%"class.blink::NormalPage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 2
  %3 = bitcast %"class.blink::BaseArena"** %2 to %"class.blink::NormalPageArena"**
  %4 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %4, i64 0, i32 3
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %4, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 1
  %10 = bitcast %"class.blink::NormalPage"* %9 to i8*
  %11 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 45, i32 4, i32 1, i64 16
  %12 = bitcast %"class.blink::FreeListEntry"** %11 to i8*
  %13 = icmp ne i64 %8, 0
  br label %16

14:                                               ; preds = %20
  %15 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 1, i32 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 0, i64 256, i1 false) #16
  ret void

16:                                               ; preds = %1, %20
  %17 = phi i8* [ %10, %1 ], [ %22, %20 ]
  %18 = icmp eq i8* %17, %6
  %19 = and i1 %13, %18
  br i1 %19, label %20, label %24

20:                                               ; preds = %16, %32
  %21 = phi i64 [ %36, %32 ], [ %8, %16 ]
  %22 = getelementptr inbounds i8, i8* %17, i64 %21
  %23 = icmp ult i8* %22, %12
  br i1 %23, label %16, label %14

24:                                               ; preds = %16
  %25 = getelementptr inbounds i8, i8* %17, i64 6
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 2
  %28 = and i16 %27, 1
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = and i16 %27, -2
  store i16 %31, i16* %26, align 2
  br label %32

32:                                               ; preds = %24, %30
  %33 = phi i16 [ %27, %24 ], [ %31, %30 ]
  %34 = lshr i16 %33, 2
  %35 = zext i16 %34 to i64
  %36 = shl nuw nsw i64 %35, 3
  br label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10NormalPage13VerifyMarkingEv(%"class.blink::NormalPage"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::MarkingVerifier", align 8
  %3 = bitcast %"class.blink::MarkingVerifier"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #16
  %4 = getelementptr inbounds %"class.blink::MarkingVerifier", %"class.blink::MarkingVerifier"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::MarkingVerifier", %"class.blink::MarkingVerifier"* %2, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.blink::MarkingVerifier", %"class.blink::MarkingVerifier"* %2, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 2
  %8 = load %"class.blink::BaseArena"*, %"class.blink::BaseArena"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %8, i64 0, i32 5
  %10 = bitcast %"class.blink::ThreadState"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::ThreadState"** %5 to i64*
  store i64 %11, i64* %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink15MarkingVerifierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  store %"class.blink::HeapObjectHeader"* null, %"class.blink::HeapObjectHeader"** %6, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 1
  %14 = bitcast %"class.blink::NormalPage"* %13 to i8*
  %15 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 45, i32 4, i32 1, i64 16
  %16 = bitcast %"class.blink::FreeListEntry"** %15 to i8*
  br label %18

17:                                               ; preds = %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #16
  ret void

18:                                               ; preds = %1, %18
  %19 = phi i8* [ %14, %1 ], [ %27, %18 ]
  %20 = bitcast i8* %19 to %"class.blink::HeapObjectHeader"*
  call void @_ZN5blink15MarkingVerifier12VerifyObjectEPNS_16HeapObjectHeaderE(%"class.blink::MarkingVerifier"* nonnull %2, %"class.blink::HeapObjectHeader"* %20) #16
  %21 = getelementptr inbounds i8, i8* %19, i64 6
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = lshr i16 %23, 2
  %25 = zext i16 %24 to i64
  %26 = shl nuw nsw i64 %25, 3
  %27 = getelementptr inbounds i8, i8* %19, i64 %26
  %28 = icmp ult i8* %27, %16
  br i1 %28, label %18, label %17
}

declare void @_ZN5blink15MarkingVerifier12VerifyObjectEPNS_16HeapObjectHeaderE(%"class.blink::MarkingVerifier"*, %"class.blink::HeapObjectHeader"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LargeObjectPage13VerifyMarkingEv(%"class.blink::LargeObjectPage"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::MarkingVerifier", align 8
  %3 = bitcast %"class.blink::MarkingVerifier"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #16
  %4 = getelementptr inbounds %"class.blink::MarkingVerifier", %"class.blink::MarkingVerifier"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::MarkingVerifier", %"class.blink::MarkingVerifier"* %2, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.blink::MarkingVerifier", %"class.blink::MarkingVerifier"* %2, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 0, i32 2
  %8 = load %"class.blink::BaseArena"*, %"class.blink::BaseArena"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %8, i64 0, i32 5
  %10 = bitcast %"class.blink::ThreadState"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::ThreadState"** %5 to i64*
  store i64 %11, i64* %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink15MarkingVerifierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  store %"class.blink::HeapObjectHeader"* null, %"class.blink::HeapObjectHeader"** %6, align 8
  %13 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 1
  %14 = bitcast %"class.blink::LargeObjectPage"* %13 to %"class.blink::HeapObjectHeader"*
  call void @_ZN5blink15MarkingVerifier12VerifyObjectEPNS_16HeapObjectHeaderE(%"class.blink::MarkingVerifier"* nonnull %2, %"class.blink::HeapObjectHeader"* %14) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #16
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.blink::HeapObjectHeader"* @_ZNK5blink10NormalPage35ConservativelyFindHeaderFromAddressEPKh(%"class.blink::NormalPage"* readonly, i8*) local_unnamed_addr #13 align 2 {
  %3 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 1
  %4 = bitcast %"class.blink::NormalPage"* %3 to i8*
  %5 = icmp ule i8* %4, %1
  %6 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 45, i32 4, i32 1, i64 16
  %7 = bitcast %"class.blink::FreeListEntry"** %6 to i8*
  %8 = icmp ugt i8* %7, %1
  %9 = and i1 %8, %5
  br i1 %9, label %10, label %68

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 0, i32 2
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = icmp ne i64 %19, 0
  %21 = icmp ule i8* %15, %1
  %22 = and i1 %21, %20
  %23 = getelementptr inbounds i8, i8* %15, i64 %19
  %24 = icmp ugt i8* %23, %1
  %25 = and i1 %22, %24
  br i1 %25, label %68, label %26

26:                                               ; preds = %17, %10
  %27 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 2, i32 0
  %28 = bitcast %"class.blink::ObjectStartBitmap"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = ptrtoint i8* %1 to i64
  %31 = sub i64 %30, %29
  %32 = lshr i64 %31, 3
  %33 = lshr i64 %31, 6
  %34 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 2, i32 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = trunc i64 %32 to i32
  %37 = and i32 %36, 7
  %38 = shl i32 2, %37
  %39 = trunc i32 %38 to i8
  %40 = add i8 %39, -1
  %41 = and i8 %40, %35
  %42 = icmp eq i8 %41, 0
  %43 = inttoptr i64 %29 to i8*
  br i1 %42, label %44, label %50

44:                                               ; preds = %26, %44
  %45 = phi i64 [ %46, %44 ], [ %33, %26 ]
  %46 = add i64 %45, -1
  %47 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 0, i32 2, i32 0, i32 1, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %44, label %50

50:                                               ; preds = %44, %26
  %51 = phi i64 [ %33, %26 ], [ %46, %44 ]
  %52 = phi i8 [ %41, %26 ], [ %48, %44 ]
  %53 = zext i8 %52 to i32
  %54 = tail call i32 @llvm.ctlz.i32(i32 %53, i1 true) #16, !range !9
  %55 = add nsw i32 %54, -24
  %56 = shl i64 %51, 3
  %57 = or i64 %56, 7
  %58 = sext i32 %55 to i64
  %59 = sub i64 %57, %58
  %60 = shl i64 %59, 3
  %61 = getelementptr inbounds i8, i8* %43, i64 %60
  %62 = bitcast i8* %61 to %"class.blink::HeapObjectHeader"*
  %63 = getelementptr inbounds i8, i8* %61, i64 4
  %64 = bitcast i8* %63 to i16*
  %65 = load i16, i16* %64, align 2
  %66 = icmp ult i16 %65, 4
  %67 = select i1 %66, %"class.blink::HeapObjectHeader"* null, %"class.blink::HeapObjectHeader"* %62
  br label %68

68:                                               ; preds = %17, %2, %50
  %69 = phi %"class.blink::HeapObjectHeader"* [ %67, %50 ], [ null, %2 ], [ null, %17 ]
  ret %"class.blink::HeapObjectHeader"* %69
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10NormalPage17CollectStatisticsEPNS_11ThreadState10Statistics15ArenaStatisticsE(%"class.blink::NormalPage"* readonly, %"struct.blink::ThreadState::Statistics::ArenaStatistics"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 1
  %4 = bitcast %"class.blink::NormalPage"* %3 to i8*
  %5 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %0, i64 45, i32 4, i32 1, i64 16
  %6 = bitcast %"class.blink::FreeListEntry"** %5 to i8*
  br label %68

7:                                                ; preds = %68
  %8 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %1, i64 0, i32 1
  %9 = bitcast i64* %8 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  %11 = insertelement <2 x i64> <i64 131072, i64 undef>, i64 %82, i32 1
  %12 = add <2 x i64> %10, %11
  %13 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %13, align 8
  %14 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %1, i64 0, i32 3
  %15 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %1, i64 0, i32 3, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %59, !prof !2

20:                                               ; preds = %7
  %21 = add i32 %16, 1
  %22 = lshr i32 %16, 2
  %23 = add i32 %21, %22
  %24 = icmp ugt i32 %23, 4
  %25 = select i1 %24, i32 %23, i32 4
  %26 = icmp ugt i32 %25, %21
  %27 = select i1 %26, i32 %25, i32 %21
  %28 = icmp ult i32 %16, %27
  br i1 %28, label %29, label %59, !prof !3

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %14, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.blink::ThreadState::Statistics::PageStatistics"*, %"struct.blink::ThreadState::Statistics::PageStatistics"** %30, align 8
  %32 = icmp eq %"struct.blink::ThreadState::Statistics::PageStatistics"* %31, null
  %33 = zext i32 %27 to i64
  %34 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11ThreadState10Statistics14PageStatisticsEEEmm(i64 %33) #16
  %35 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11ThreadState10Statistics14PageStatisticsEEEPKcv, i64 0, i64 0)) #16
  br i1 %32, label %36, label %41

36:                                               ; preds = %29
  %37 = ptrtoint i8* %35 to i64
  %38 = bitcast %"class.WTF::Vector.197"* %14 to i64*
  store atomic i64 %37, i64* %38 monotonic, align 8
  %39 = lshr i64 %34, 4
  %40 = trunc i64 %39 to i32
  store i32 %40, i32* %17, align 8
  br label %59

41:                                               ; preds = %29
  %42 = lshr i64 %34, 4
  %43 = ptrtoint i8* %35 to i64
  %44 = load %"struct.blink::ThreadState::Statistics::PageStatistics"*, %"struct.blink::ThreadState::Statistics::PageStatistics"** %30, align 8
  %45 = icmp ne i8* %35, null
  %46 = icmp ne %"struct.blink::ThreadState::Statistics::PageStatistics"* %44, null
  %47 = and i1 %45, %46
  %48 = bitcast %"struct.blink::ThreadState::Statistics::PageStatistics"* %44 to i8*
  br i1 %47, label %49, label %55, !prof !3

49:                                               ; preds = %41
  %50 = load i32, i32* %15, align 4
  %51 = zext i32 %50 to i64
  %52 = shl nuw nsw i64 %51, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* nonnull align 8 %48, i64 %52, i1 false) #16
  %53 = bitcast %"class.WTF::Vector.197"* %14 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %49, %41
  %56 = phi i8* [ %54, %49 ], [ %48, %41 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #16
  %57 = bitcast %"class.WTF::Vector.197"* %14 to i64*
  store atomic i64 %43, i64* %57 monotonic, align 8
  %58 = trunc i64 %42 to i32
  store i32 %58, i32* %17, align 8
  br label %59

59:                                               ; preds = %7, %20, %36, %55
  %60 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %14, i64 0, i32 0, i32 0, i32 0
  %61 = load %"struct.blink::ThreadState::Statistics::PageStatistics"*, %"struct.blink::ThreadState::Statistics::PageStatistics"** %60, align 8
  %62 = load i32, i32* %15, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::PageStatistics", %"struct.blink::ThreadState::Statistics::PageStatistics"* %61, i64 %63, i32 0
  store i64 131072, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::PageStatistics", %"struct.blink::ThreadState::Statistics::PageStatistics"* %61, i64 %63, i32 1
  store i64 %82, i64* %65, align 8
  %66 = load i32, i32* %15, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %15, align 4
  ret void

68:                                               ; preds = %2, %68
  %69 = phi i8* [ %4, %2 ], [ %83, %68 ]
  %70 = phi i64 [ 0, %2 ], [ %82, %68 ]
  %71 = getelementptr inbounds i8, i8* %69, i64 4
  %72 = bitcast i8* %71 to i16*
  %73 = load i16, i16* %72, align 2
  %74 = icmp ult i16 %73, 4
  %75 = getelementptr inbounds i8, i8* %69, i64 6
  %76 = bitcast i8* %75 to i16*
  %77 = load i16, i16* %76, align 2
  %78 = lshr i16 %77, 2
  %79 = zext i16 %78 to i64
  %80 = shl nuw nsw i64 %79, 3
  %81 = select i1 %74, i64 0, i64 %80
  %82 = add i64 %70, %81
  %83 = getelementptr inbounds i8, i8* %69, i64 %80
  %84 = icmp ult i8* %83, %6
  br i1 %84, label %68, label %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink15LargeObjectPageC2EPNS_10PageMemoryEPNS_9BaseArenaEm(%"class.blink::LargeObjectPage"* nocapture, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, i64) unnamed_addr #11 align 2 {
  %5 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink8BasePageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 0, i32 1
  store %"class.blink::PageMemory"* %1, %"class.blink::PageMemory"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 0, i32 2
  store %"class.blink::BaseArena"* %2, %"class.blink::BaseArena"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 0, i32 3
  %9 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %2, i64 0, i32 5
  %10 = bitcast %"class.blink::ThreadState"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::ThreadState"** %8 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 0, i32 4
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 0, i32 5
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 0, i32 6
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 0, i32 7
  store i8 1, i8* %16, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink15LargeObjectPageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %17 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 2
  store i64 %3, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 3
  store i8 0, i8* %18, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5blink15LargeObjectPage27ObjectPayloadSizeForTestingEv(%"class.blink::LargeObjectPage"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, -8
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LargeObjectPage14RemoveFromHeapEv(%"class.blink::LargeObjectPage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 0, i32 2
  %3 = bitcast %"class.blink::BaseArena"** %2 to %"class.blink::LargeObjectArena"**
  %4 = load %"class.blink::LargeObjectArena"*, %"class.blink::LargeObjectArena"** %3, align 8
  tail call void @_ZN5blink16LargeObjectArena19FreeLargeObjectPageEPNS_15LargeObjectPageE(%"class.blink::LargeObjectArena"* %4, %"class.blink::LargeObjectPage"* %0)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15LargeObjectPage5SweepENS_12FinalizeTypeE(%"class.blink::LargeObjectPage"* nocapture, i8 zeroext) unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 1
  %4 = bitcast %"class.blink::LargeObjectPage"* %3 to %"class.blink::HeapObjectHeader"*
  %5 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %4, i64 0, i32 2
  %6 = load i16, i16* %5, align 2
  %7 = and i16 %6, 1
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 0, i32 4
  store i64 0, i64* %10, align 8
  br label %13

11:                                               ; preds = %2
  %12 = and i16 %6, -2
  store i16 %12, i16* %5, align 2
  br label %13

13:                                               ; preds = %11, %9
  %14 = phi i1 [ false, %11 ], [ true, %9 ]
  ret i1 %14
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink15LargeObjectPage6UnmarkEv(%"class.blink::LargeObjectPage"* nocapture) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 1
  %3 = bitcast %"class.blink::LargeObjectPage"* %2 to %"class.blink::HeapObjectHeader"*
  %4 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %3, i64 0, i32 2
  %5 = load i16, i16* %4, align 2
  %6 = and i16 %5, 1
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = and i16 %5, -2
  store i16 %9, i16* %4, align 2
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 3
  store i8 0, i8* %11, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink15LargeObjectPage24MakeConsistentForMutatorEv(%"class.blink::LargeObjectPage"* nocapture) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 1
  %3 = bitcast %"class.blink::LargeObjectPage"* %2 to %"class.blink::HeapObjectHeader"*
  %4 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %3, i64 0, i32 2
  %5 = load i16, i16* %4, align 2
  %6 = and i16 %5, 1
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = and i16 %5, -2
  store i16 %9, i16* %4, align 2
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 3
  store i8 0, i8* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LargeObjectPage13FinalizeSweepENS_11SweepResultE(%"class.blink::LargeObjectPage"*, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = icmp eq i8 %1, 1
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 0, i32 5
  store i8 1, i8* %5, align 8
  br label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 0, i32 2
  %8 = bitcast %"class.blink::BaseArena"** %7 to %"class.blink::LargeObjectArena"**
  %9 = load %"class.blink::LargeObjectArena"*, %"class.blink::LargeObjectArena"** %8, align 8
  tail call void @_ZN5blink16LargeObjectArena19FreeLargeObjectPageEPNS_15LargeObjectPageE(%"class.blink::LargeObjectArena"* %9, %"class.blink::LargeObjectPage"* %0) #16
  br label %10

10:                                               ; preds = %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LargeObjectPage17CollectStatisticsEPNS_11ThreadState10Statistics15ArenaStatisticsE(%"class.blink::LargeObjectPage"* nocapture readonly, %"struct.blink::ThreadState::Statistics::ArenaStatistics"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LargeObjectPage", %"class.blink::LargeObjectPage"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 64
  %6 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %1, i64 0, i32 1
  %7 = bitcast i64* %6 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 8
  %9 = insertelement <2 x i64> undef, i64 %5, i32 0
  %10 = insertelement <2 x i64> %9, i64 %4, i32 1
  %11 = add <2 x i64> %10, %8
  %12 = bitcast i64* %6 to <2 x i64>*
  store <2 x i64> %11, <2 x i64>* %12, align 8
  %13 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %1, i64 0, i32 3
  %14 = load i64, i64* %3, align 8
  %15 = add i64 %14, 64
  %16 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %1, i64 0, i32 3, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %21, label %60, !prof !2

21:                                               ; preds = %2
  %22 = add i32 %17, 1
  %23 = lshr i32 %17, 2
  %24 = add i32 %22, %23
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %22
  %28 = select i1 %27, i32 %26, i32 %22
  %29 = icmp ult i32 %17, %28
  br i1 %29, label %30, label %60, !prof !3

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %13, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::ThreadState::Statistics::PageStatistics"*, %"struct.blink::ThreadState::Statistics::PageStatistics"** %31, align 8
  %33 = icmp eq %"struct.blink::ThreadState::Statistics::PageStatistics"* %32, null
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11ThreadState10Statistics14PageStatisticsEEEmm(i64 %34) #16
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11ThreadState10Statistics14PageStatisticsEEEPKcv, i64 0, i64 0)) #16
  br i1 %33, label %37, label %42

37:                                               ; preds = %30
  %38 = ptrtoint i8* %36 to i64
  %39 = bitcast %"class.WTF::Vector.197"* %13 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = lshr i64 %35, 4
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %18, align 8
  br label %60

42:                                               ; preds = %30
  %43 = lshr i64 %35, 4
  %44 = ptrtoint i8* %36 to i64
  %45 = load %"struct.blink::ThreadState::Statistics::PageStatistics"*, %"struct.blink::ThreadState::Statistics::PageStatistics"** %31, align 8
  %46 = icmp ne i8* %36, null
  %47 = icmp ne %"struct.blink::ThreadState::Statistics::PageStatistics"* %45, null
  %48 = and i1 %46, %47
  %49 = bitcast %"struct.blink::ThreadState::Statistics::PageStatistics"* %45 to i8*
  br i1 %48, label %50, label %56, !prof !3

50:                                               ; preds = %42
  %51 = load i32, i32* %16, align 4
  %52 = zext i32 %51 to i64
  %53 = shl nuw nsw i64 %52, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 8 %49, i64 %53, i1 false) #16
  %54 = bitcast %"class.WTF::Vector.197"* %13 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %50, %42
  %57 = phi i8* [ %55, %50 ], [ %49, %42 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #16
  %58 = bitcast %"class.WTF::Vector.197"* %13 to i64*
  store atomic i64 %44, i64* %58 monotonic, align 8
  %59 = trunc i64 %43 to i32
  store i32 %59, i32* %18, align 8
  br label %60

60:                                               ; preds = %2, %21, %37, %56
  %61 = getelementptr inbounds %"class.WTF::Vector.197", %"class.WTF::Vector.197"* %13, i64 0, i32 0, i32 0, i32 0
  %62 = load %"struct.blink::ThreadState::Statistics::PageStatistics"*, %"struct.blink::ThreadState::Statistics::PageStatistics"** %61, align 8
  %63 = load i32, i32* %16, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::PageStatistics", %"struct.blink::ThreadState::Statistics::PageStatistics"* %62, i64 %64, i32 0
  store i64 %15, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::PageStatistics", %"struct.blink::ThreadState::Statistics::PageStatistics"* %62, i64 %64, i32 1
  store i64 %4, i64* %66, align 8
  %67 = load i32, i32* %16, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %16, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9BaseArena25CollectFreeListStatisticsEPNS_11ThreadState10Statistics18FreeListStatisticsE(%"class.blink::BaseArena"*, %"struct.blink::ThreadState::Statistics::FreeListStatistics"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9BaseArena14ClearFreeListsEv(%"class.blink::BaseArena"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9BaseArena12MakeIterableEv(%"class.blink::BaseArena"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9BaseArena20ResetAllocationPointEv(%"class.blink::BaseArena"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9BaseArena23VerifyObjectStartBitmapEv(%"class.blink::BaseArena"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15NormalPageArenaD0Ev(%"class.blink::NormalPageArena"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.blink::NormalPageArena"* %0 to %"class.blink::BaseArena"*
  tail call void @_ZN5blink9BaseArenaD2Ev(%"class.blink::BaseArena"* %2) #16
  %3 = bitcast %"class.blink::NormalPageArena"* %0 to i8*
  tail call void @free(i8* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15NormalPageArena20ResetAllocationPointEv(%"class.blink::NormalPageArena"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink15NormalPageArena18SetAllocationPointEPhm(%"class.blink::NormalPageArena"* %0, i8* null, i64 0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9BaseArenaD2Ev(%"class.blink::BaseArena"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9BaseArenaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %3) #16
  %4 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %4, align 8
  %6 = icmp eq %"class.blink::BasePage"** %5, null
  %7 = bitcast %"class.blink::BasePage"** %5 to i8*
  br i1 %6, label %14, label %8, !prof !3

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12, !prof !2

12:                                               ; preds = %8
  store i32 0, i32* %9, align 4
  br label %13

13:                                               ; preds = %12, %8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %7) #16
  store %"class.blink::BasePage"** null, %"class.blink::BasePage"*** %4, align 8
  br label %14

14:                                               ; preds = %1, %13
  %15 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %15) #16
  %16 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %16, align 8
  %18 = icmp eq %"class.blink::BasePage"** %17, null
  %19 = bitcast %"class.blink::BasePage"** %17 to i8*
  br i1 %18, label %26, label %20, !prof !3

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24, !prof !2

24:                                               ; preds = %20
  store i32 0, i32* %21, align 4
  br label %25

25:                                               ; preds = %24, %20
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %19) #16
  store %"class.blink::BasePage"** null, %"class.blink::BasePage"*** %16, align 8
  br label %26

26:                                               ; preds = %14, %25
  %27 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %27) #16
  %28 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %28, align 8
  %30 = icmp eq %"class.blink::BasePage"** %29, null
  %31 = bitcast %"class.blink::BasePage"** %29 to i8*
  br i1 %30, label %38, label %32, !prof !3

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36, !prof !2

36:                                               ; preds = %32
  store i32 0, i32* %33, align 4
  br label %37

37:                                               ; preds = %36, %32
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #16
  store %"class.blink::BasePage"** null, %"class.blink::BasePage"*** %28, align 8
  br label %38

38:                                               ; preds = %26, %37
  %39 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %39) #16
  %40 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %40, align 8
  %42 = icmp eq %"class.blink::BasePage"** %41, null
  %43 = bitcast %"class.blink::BasePage"** %41 to i8*
  br i1 %42, label %50, label %44, !prof !3

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48, !prof !2

48:                                               ; preds = %44
  store i32 0, i32* %45, align 4
  br label %49

49:                                               ; preds = %48, %44
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #16
  store %"class.blink::BasePage"** null, %"class.blink::BasePage"*** %40, align 8
  br label %50

50:                                               ; preds = %38, %49
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16LargeObjectArenaD0Ev(%"class.blink::LargeObjectArena"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.blink::LargeObjectArena"* %0 to %"class.blink::BaseArena"*
  tail call void @_ZN5blink9BaseArenaD2Ev(%"class.blink::BaseArena"* %2) #16
  %3 = bitcast %"class.blink::LargeObjectArena"* %0 to i8*
  tail call void @free(i8* %3) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LargeObjectPageD0Ev(%"class.blink::LargeObjectPage"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.blink::LargeObjectPage"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8BasePageD2Ev(%"class.blink::BasePage"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8BasePageD0Ev(%"class.blink::BasePage"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

declare void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"*, i1 zeroext) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"*) unnamed_addr #7

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::BasePage"** @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.129"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.129", %"class.WTF::Vector.129"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.129", %"class.WTF::Vector.129"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %24, i64 %25
  ret %"class.blink::BasePage"** %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #6

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #6

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #6

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.129"*, %"class.blink::BasePage"** dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.129", %"class.WTF::Vector.129"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.129", %"class.WTF::Vector.129"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %6, align 8
  %8 = icmp ugt %"class.blink::BasePage"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %7, i64 %10
  %12 = icmp ugt %"class.blink::BasePage"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.129", %"class.WTF::Vector.129"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::BasePage"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink8BasePageEEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink8BasePageEEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.129"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::BasePage"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::BasePage"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::BasePage"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #16
  %47 = bitcast %"class.WTF::Vector.129"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector.129"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::BasePage"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::BasePage"** %1 to i64
  %56 = ptrtoint %"class.blink::BasePage"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.129", %"class.WTF::Vector.129"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::BasePage"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink8BasePageEEEmm(i64 %71) #16
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink8BasePageEEEPKcv, i64 0, i64 0)) #16
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.129"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::BasePage"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::BasePage"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #16
  %87 = bitcast %"class.WTF::Vector.129"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #16
  %91 = bitcast %"class.WTF::Vector.129"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::BasePage"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::BasePage"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::BasePage"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::BasePage"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %100, i64 %103
  %105 = bitcast %"class.blink::BasePage"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::BasePage"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink8BasePageEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #6

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #6

declare dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() local_unnamed_addr #6

declare %"class.blink::PageMemoryRegion"* @_ZN5blink16PageMemoryRegion8AllocateEmjPNS_10RegionTreeE(i64, i32, %"class.blink::RegionTree"*) local_unnamed_addr #6

declare void @_ZN5blink12MemoryRegion6CommitEv(%"class.blink::MemoryRegion"*) local_unnamed_addr #6

declare void @_ZN5blink16PageMemoryRegion11PageDeletedEPh(%"class.blink::PageMemoryRegion"*, i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

declare void @_ZN4base18DiscardSystemPagesEPvm(i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11ThreadState10Statistics15ArenaStatisticsELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.189"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %129

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.189", %"class.WTF::Vector.189"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::ThreadState::Statistics::ArenaStatistics"*, %"struct.blink::ThreadState::Statistics::ArenaStatistics"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.189", %"class.WTF::Vector.189"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.189"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.189", %"class.WTF::Vector.189"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %127, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"struct.blink::ThreadState::Statistics::ArenaStatistics"* [ %125, %14 ], [ %6, %4 ]
  %16 = phi %"struct.blink::ThreadState::Statistics::ArenaStatistics"* [ %124, %14 ], [ null, %4 ]
  %17 = bitcast %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16 to i8*
  %18 = bitcast %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #16
  %19 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 1
  %21 = bitcast i64* %19 to i8*
  %22 = bitcast i64* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false) #16
  %23 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 3
  %24 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 3
  %25 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 3, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 3, i32 0, i32 0, i32 2
  %27 = bitcast %"class.WTF::Vector.197"* %24 to i64*
  %28 = bitcast %"class.WTF::Vector.197"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #16
  %29 = load i64, i64* %27, align 8
  %30 = bitcast %"class.WTF::Vector.197"* %23 to i64*
  store atomic i64 0, i64* %27 monotonic, align 8
  store atomic i64 %29, i64* %30 monotonic, align 8
  %31 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 3, i32 0, i32 0, i32 1
  %32 = load i32, i32* %25, align 4
  %33 = load i32, i32* %31, align 4
  store i32 %33, i32* %25, align 4
  store i32 %32, i32* %31, align 4
  %34 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 3, i32 0, i32 0, i32 2
  %35 = load i32, i32* %26, align 4
  %36 = load i32, i32* %34, align 4
  store i32 %36, i32* %26, align 4
  store i32 %35, i32* %34, align 4
  %37 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 4
  %38 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 4
  %39 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %41 = bitcast %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %38 to i64*
  %42 = bitcast %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #16
  %43 = load i64, i64* %41, align 8
  %44 = bitcast %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %37 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  store atomic i64 %43, i64* %44 monotonic, align 8
  %45 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %39, align 4
  %47 = load i32, i32* %45, align 4
  store i32 %47, i32* %39, align 4
  store i32 %46, i32* %45, align 4
  %48 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %49 = load i32, i32* %40, align 4
  %50 = load i32, i32* %48, align 4
  store i32 %50, i32* %40, align 4
  store i32 %49, i32* %48, align 4
  %51 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 4, i32 1
  %52 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 4, i32 1
  %53 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 4, i32 1, i32 0, i32 0, i32 2
  %55 = bitcast %"class.WTF::Vector.202"* %52 to i64*
  %56 = bitcast %"class.WTF::Vector.202"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false) #16
  %57 = load i64, i64* %55, align 8
  %58 = bitcast %"class.WTF::Vector.202"* %51 to i64*
  store atomic i64 0, i64* %55 monotonic, align 8
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1
  %60 = load i32, i32* %53, align 4
  %61 = load i32, i32* %59, align 4
  store i32 %61, i32* %53, align 4
  store i32 %60, i32* %59, align 4
  %62 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 4, i32 1, i32 0, i32 0, i32 2
  %63 = load i32, i32* %54, align 4
  %64 = load i32, i32* %62, align 4
  store i32 %64, i32* %54, align 4
  store i32 %63, i32* %62, align 4
  %65 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 4, i32 2
  %66 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 4, i32 2
  %67 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 4, i32 2, i32 0, i32 0, i32 1
  %68 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 4, i32 2, i32 0, i32 0, i32 2
  %69 = bitcast %"class.WTF::Vector.202"* %66 to i64*
  %70 = bitcast %"class.WTF::Vector.202"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #16
  %71 = load i64, i64* %69, align 8
  %72 = bitcast %"class.WTF::Vector.202"* %65 to i64*
  store atomic i64 0, i64* %69 monotonic, align 8
  store atomic i64 %71, i64* %72 monotonic, align 8
  %73 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 4, i32 2, i32 0, i32 0, i32 1
  %74 = load i32, i32* %67, align 4
  %75 = load i32, i32* %73, align 4
  store i32 %75, i32* %67, align 4
  store i32 %74, i32* %73, align 4
  %76 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 4, i32 2, i32 0, i32 0, i32 2
  %77 = load i32, i32* %68, align 4
  %78 = load i32, i32* %76, align 4
  store i32 %78, i32* %68, align 4
  store i32 %77, i32* %76, align 4
  %79 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 5, i32 0
  %80 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 5, i32 0
  %81 = load i64, i64* %80, align 8
  store i64 %81, i64* %79, align 8
  %82 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 5, i32 1
  %83 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 5, i32 1
  %84 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  %85 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 5, i32 1, i32 0, i32 0, i32 2
  %86 = bitcast %"class.WTF::Vector.207"* %83 to i64*
  %87 = bitcast %"class.WTF::Vector.207"* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 16, i1 false) #16
  %88 = load i64, i64* %86, align 8
  %89 = bitcast %"class.WTF::Vector.207"* %82 to i64*
  store atomic i64 0, i64* %86 monotonic, align 8
  store atomic i64 %88, i64* %89 monotonic, align 8
  %90 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  %91 = load i32, i32* %84, align 4
  %92 = load i32, i32* %90, align 4
  store i32 %92, i32* %84, align 4
  store i32 %91, i32* %90, align 4
  %93 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 5, i32 1, i32 0, i32 0, i32 2
  %94 = load i32, i32* %85, align 4
  %95 = load i32, i32* %93, align 4
  store i32 %95, i32* %85, align 4
  store i32 %94, i32* %93, align 4
  %96 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 5, i32 2
  %97 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 5, i32 2
  %98 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %99 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 5, i32 2, i32 0, i32 0, i32 2
  %100 = bitcast %"class.WTF::Vector.202"* %97 to i64*
  %101 = bitcast %"class.WTF::Vector.202"* %96 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #16
  %102 = load i64, i64* %100, align 8
  %103 = bitcast %"class.WTF::Vector.202"* %96 to i64*
  store atomic i64 0, i64* %100 monotonic, align 8
  store atomic i64 %102, i64* %103 monotonic, align 8
  %104 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %105 = load i32, i32* %98, align 4
  %106 = load i32, i32* %104, align 4
  store i32 %106, i32* %98, align 4
  store i32 %105, i32* %104, align 4
  %107 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 5, i32 2, i32 0, i32 0, i32 2
  %108 = load i32, i32* %99, align 4
  %109 = load i32, i32* %107, align 4
  store i32 %109, i32* %99, align 4
  store i32 %108, i32* %107, align 4
  %110 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 5, i32 3
  %111 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 5, i32 3
  %112 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 5, i32 3, i32 0, i32 0, i32 1
  %113 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 0, i32 5, i32 3, i32 0, i32 0, i32 2
  %114 = bitcast %"class.WTF::Vector.202"* %111 to i64*
  %115 = bitcast %"class.WTF::Vector.202"* %110 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 16, i1 false) #16
  %116 = load i64, i64* %114, align 8
  %117 = bitcast %"class.WTF::Vector.202"* %110 to i64*
  store atomic i64 0, i64* %114 monotonic, align 8
  store atomic i64 %116, i64* %117 monotonic, align 8
  %118 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 5, i32 3, i32 0, i32 0, i32 1
  %119 = load i32, i32* %112, align 4
  %120 = load i32, i32* %118, align 4
  store i32 %120, i32* %112, align 4
  store i32 %119, i32* %118, align 4
  %121 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 0, i32 5, i32 3, i32 0, i32 0, i32 2
  %122 = load i32, i32* %113, align 4
  %123 = load i32, i32* %121, align 4
  store i32 %123, i32* %113, align 4
  store i32 %122, i32* %121, align 4
  tail call void @_ZN5blink11ThreadState10Statistics15ArenaStatisticsD2Ev(%"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15) #16
  %124 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %16, i64 1
  %125 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %15, i64 1
  %126 = icmp eq %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %125, %10
  br i1 %126, label %127, label %14

127:                                              ; preds = %14, %4
  %128 = bitcast %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %128) #16
  br label %267

129:                                              ; preds = %2
  %130 = zext i32 %1 to i64
  %131 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11ThreadState10Statistics15ArenaStatisticsEEEmm(i64 %130) #16
  %132 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %131, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11ThreadState10Statistics15ArenaStatisticsEEEPKcv, i64 0, i64 0)) #16
  %133 = udiv i64 %131, 160
  %134 = ptrtoint i8* %132 to i64
  %135 = getelementptr inbounds %"class.WTF::Vector.189", %"class.WTF::Vector.189"* %0, i64 0, i32 0, i32 0, i32 0
  %136 = load %"struct.blink::ThreadState::Statistics::ArenaStatistics"*, %"struct.blink::ThreadState::Statistics::ArenaStatistics"** %135, align 8
  %137 = getelementptr inbounds %"class.WTF::Vector.189", %"class.WTF::Vector.189"* %0, i64 0, i32 0, i32 0, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %136, i64 %139
  %141 = icmp eq i32 %138, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %129
  %143 = bitcast %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %136 to i8*
  br label %262

144:                                              ; preds = %129
  %145 = bitcast i8* %132 to %"struct.blink::ThreadState::Statistics::ArenaStatistics"*
  br label %146

146:                                              ; preds = %144, %146
  %147 = phi %"struct.blink::ThreadState::Statistics::ArenaStatistics"* [ %257, %146 ], [ %136, %144 ]
  %148 = phi %"struct.blink::ThreadState::Statistics::ArenaStatistics"* [ %256, %146 ], [ %145, %144 ]
  %149 = bitcast %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148 to i8*
  %150 = bitcast %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %150, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 24, i1 false) #16
  %151 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 1
  %152 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 1
  %153 = bitcast i64* %151 to i8*
  %154 = bitcast i64* %152 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 16, i1 false) #16
  %155 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 3
  %156 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 3
  %157 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 3, i32 0, i32 0, i32 1
  %158 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 3, i32 0, i32 0, i32 2
  %159 = bitcast %"class.WTF::Vector.197"* %156 to i64*
  %160 = bitcast %"class.WTF::Vector.197"* %155 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %160, i8 0, i64 16, i1 false) #16
  %161 = load i64, i64* %159, align 8
  %162 = bitcast %"class.WTF::Vector.197"* %155 to i64*
  store atomic i64 0, i64* %159 monotonic, align 8
  store atomic i64 %161, i64* %162 monotonic, align 8
  %163 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 3, i32 0, i32 0, i32 1
  %164 = load i32, i32* %157, align 4
  %165 = load i32, i32* %163, align 4
  store i32 %165, i32* %157, align 4
  store i32 %164, i32* %163, align 4
  %166 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 3, i32 0, i32 0, i32 2
  %167 = load i32, i32* %158, align 4
  %168 = load i32, i32* %166, align 4
  store i32 %168, i32* %158, align 4
  store i32 %167, i32* %166, align 4
  %169 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 4
  %170 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 4
  %171 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %172 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %173 = bitcast %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %170 to i64*
  %174 = bitcast %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %169 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %174, i8 0, i64 16, i1 false) #16
  %175 = load i64, i64* %173, align 8
  %176 = bitcast %"struct.blink::ThreadState::Statistics::FreeListStatistics"* %169 to i64*
  store atomic i64 0, i64* %173 monotonic, align 8
  store atomic i64 %175, i64* %176 monotonic, align 8
  %177 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %178 = load i32, i32* %171, align 4
  %179 = load i32, i32* %177, align 4
  store i32 %179, i32* %171, align 4
  store i32 %178, i32* %177, align 4
  %180 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %181 = load i32, i32* %172, align 4
  %182 = load i32, i32* %180, align 4
  store i32 %182, i32* %172, align 4
  store i32 %181, i32* %180, align 4
  %183 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 4, i32 1
  %184 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 4, i32 1
  %185 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1
  %186 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 4, i32 1, i32 0, i32 0, i32 2
  %187 = bitcast %"class.WTF::Vector.202"* %184 to i64*
  %188 = bitcast %"class.WTF::Vector.202"* %183 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 16, i1 false) #16
  %189 = load i64, i64* %187, align 8
  %190 = bitcast %"class.WTF::Vector.202"* %183 to i64*
  store atomic i64 0, i64* %187 monotonic, align 8
  store atomic i64 %189, i64* %190 monotonic, align 8
  %191 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1
  %192 = load i32, i32* %185, align 4
  %193 = load i32, i32* %191, align 4
  store i32 %193, i32* %185, align 4
  store i32 %192, i32* %191, align 4
  %194 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 4, i32 1, i32 0, i32 0, i32 2
  %195 = load i32, i32* %186, align 4
  %196 = load i32, i32* %194, align 4
  store i32 %196, i32* %186, align 4
  store i32 %195, i32* %194, align 4
  %197 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 4, i32 2
  %198 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 4, i32 2
  %199 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 4, i32 2, i32 0, i32 0, i32 1
  %200 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 4, i32 2, i32 0, i32 0, i32 2
  %201 = bitcast %"class.WTF::Vector.202"* %198 to i64*
  %202 = bitcast %"class.WTF::Vector.202"* %197 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %202, i8 0, i64 16, i1 false) #16
  %203 = load i64, i64* %201, align 8
  %204 = bitcast %"class.WTF::Vector.202"* %197 to i64*
  store atomic i64 0, i64* %201 monotonic, align 8
  store atomic i64 %203, i64* %204 monotonic, align 8
  %205 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 4, i32 2, i32 0, i32 0, i32 1
  %206 = load i32, i32* %199, align 4
  %207 = load i32, i32* %205, align 4
  store i32 %207, i32* %199, align 4
  store i32 %206, i32* %205, align 4
  %208 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 4, i32 2, i32 0, i32 0, i32 2
  %209 = load i32, i32* %200, align 4
  %210 = load i32, i32* %208, align 4
  store i32 %210, i32* %200, align 4
  store i32 %209, i32* %208, align 4
  %211 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 5, i32 0
  %212 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 5, i32 0
  %213 = load i64, i64* %212, align 8
  store i64 %213, i64* %211, align 8
  %214 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 5, i32 1
  %215 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 5, i32 1
  %216 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  %217 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 5, i32 1, i32 0, i32 0, i32 2
  %218 = bitcast %"class.WTF::Vector.207"* %215 to i64*
  %219 = bitcast %"class.WTF::Vector.207"* %214 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %219, i8 0, i64 16, i1 false) #16
  %220 = load i64, i64* %218, align 8
  %221 = bitcast %"class.WTF::Vector.207"* %214 to i64*
  store atomic i64 0, i64* %218 monotonic, align 8
  store atomic i64 %220, i64* %221 monotonic, align 8
  %222 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  %223 = load i32, i32* %216, align 4
  %224 = load i32, i32* %222, align 4
  store i32 %224, i32* %216, align 4
  store i32 %223, i32* %222, align 4
  %225 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 5, i32 1, i32 0, i32 0, i32 2
  %226 = load i32, i32* %217, align 4
  %227 = load i32, i32* %225, align 4
  store i32 %227, i32* %217, align 4
  store i32 %226, i32* %225, align 4
  %228 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 5, i32 2
  %229 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 5, i32 2
  %230 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %231 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 5, i32 2, i32 0, i32 0, i32 2
  %232 = bitcast %"class.WTF::Vector.202"* %229 to i64*
  %233 = bitcast %"class.WTF::Vector.202"* %228 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 16, i1 false) #16
  %234 = load i64, i64* %232, align 8
  %235 = bitcast %"class.WTF::Vector.202"* %228 to i64*
  store atomic i64 0, i64* %232 monotonic, align 8
  store atomic i64 %234, i64* %235 monotonic, align 8
  %236 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %237 = load i32, i32* %230, align 4
  %238 = load i32, i32* %236, align 4
  store i32 %238, i32* %230, align 4
  store i32 %237, i32* %236, align 4
  %239 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 5, i32 2, i32 0, i32 0, i32 2
  %240 = load i32, i32* %231, align 4
  %241 = load i32, i32* %239, align 4
  store i32 %241, i32* %231, align 4
  store i32 %240, i32* %239, align 4
  %242 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 5, i32 3
  %243 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 5, i32 3
  %244 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 5, i32 3, i32 0, i32 0, i32 1
  %245 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 0, i32 5, i32 3, i32 0, i32 0, i32 2
  %246 = bitcast %"class.WTF::Vector.202"* %243 to i64*
  %247 = bitcast %"class.WTF::Vector.202"* %242 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %247, i8 0, i64 16, i1 false) #16
  %248 = load i64, i64* %246, align 8
  %249 = bitcast %"class.WTF::Vector.202"* %242 to i64*
  store atomic i64 0, i64* %246 monotonic, align 8
  store atomic i64 %248, i64* %249 monotonic, align 8
  %250 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 5, i32 3, i32 0, i32 0, i32 1
  %251 = load i32, i32* %244, align 4
  %252 = load i32, i32* %250, align 4
  store i32 %252, i32* %244, align 4
  store i32 %251, i32* %250, align 4
  %253 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 0, i32 5, i32 3, i32 0, i32 0, i32 2
  %254 = load i32, i32* %245, align 4
  %255 = load i32, i32* %253, align 4
  store i32 %255, i32* %245, align 4
  store i32 %254, i32* %253, align 4
  tail call void @_ZN5blink11ThreadState10Statistics15ArenaStatisticsD2Ev(%"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147) #16
  %256 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %148, i64 1
  %257 = getelementptr inbounds %"struct.blink::ThreadState::Statistics::ArenaStatistics", %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %147, i64 1
  %258 = icmp eq %"struct.blink::ThreadState::Statistics::ArenaStatistics"* %257, %140
  br i1 %258, label %259, label %146

259:                                              ; preds = %146
  %260 = bitcast %"class.WTF::Vector.189"* %0 to i8**
  %261 = load i8*, i8** %260, align 8
  br label %262

262:                                              ; preds = %142, %259
  %263 = phi i8* [ %261, %259 ], [ %143, %142 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %263) #16
  %264 = bitcast %"class.WTF::Vector.189"* %0 to i64*
  store atomic i64 %134, i64* %264 monotonic, align 8
  %265 = trunc i64 %133 to i32
  %266 = getelementptr inbounds %"class.WTF::Vector.189", %"class.WTF::Vector.189"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %265, i32* %266, align 8
  br label %267

267:                                              ; preds = %262, %127
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11ThreadState10Statistics15ArenaStatisticsEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 13408665
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 13408665) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = mul i64 %0, 160
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink8BasePageELj0ENS_18PartitionAllocatorEE7EraseAtEjj(%"class.WTF::Vector.129"*, i32, i32) local_unnamed_addr #5 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %48, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = add i32 %2, %1
  %12 = getelementptr inbounds %"class.WTF::Vector.129", %"class.WTF::Vector.129"* %0, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = icmp ugt i32 %11, %13
  br i1 %15, label %17, label %16

16:                                               ; preds = %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* null, i8** %10, align 8
  br label %26

17:                                               ; preds = %8
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %11) #16
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0), i8* %18, i8* %19) #16
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* %21, i8** %10, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 2085, %"class.logging::CheckOpResult"* nonnull %5) #16
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #16
  br label %26

26:                                               ; preds = %16, %17, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %27 = getelementptr inbounds %"class.WTF::Vector.129", %"class.WTF::Vector.129"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::BasePage"**, %"class.blink::BasePage"*** %27, align 8
  %29 = zext i32 %1 to i64
  %30 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %28, i64 %29
  %31 = zext i32 %2 to i64
  %32 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %30, i64 %31
  %33 = icmp ne %"class.blink::BasePage"** %30, null
  %34 = icmp ne %"class.blink::BasePage"** %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %45, !prof !3

36:                                               ; preds = %26
  %37 = load i32, i32* %12, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::BasePage"*, %"class.blink::BasePage"** %28, i64 %38
  %40 = bitcast %"class.blink::BasePage"** %30 to i8*
  %41 = bitcast %"class.blink::BasePage"** %32 to i8*
  %42 = ptrtoint %"class.blink::BasePage"** %39 to i64
  %43 = ptrtoint %"class.blink::BasePage"** %32 to i64
  %44 = sub i64 %42, %43
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* nonnull align 8 %41, i64 %44, i1 false) #16
  br label %45

45:                                               ; preds = %26, %36
  %46 = load i32, i32* %12, align 4
  %47 = sub i32 %46, %2
  store i32 %47, i32* %12, align 4
  br label %48

48:                                               ; preds = %3, %45
  ret void
}

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink24ThreadHeapStatsCollector8ToStringENS0_2IdENS_7BlinkGC14CollectionTypeE(i32, i32) local_unnamed_addr #0 comdat align 2 {
  switch i32 %0, label %96 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
    i32 4, label %15
    i32 5, label %18
    i32 6, label %21
    i32 7, label %24
    i32 8, label %27
    i32 9, label %30
    i32 10, label %33
    i32 11, label %36
    i32 12, label %39
    i32 13, label %42
    i32 14, label %45
    i32 15, label %48
    i32 16, label %51
    i32 17, label %54
    i32 18, label %57
    i32 19, label %60
    i32 20, label %63
    i32 21, label %66
    i32 22, label %69
    i32 23, label %72
    i32 24, label %75
    i32 25, label %78
    i32 26, label %81
    i32 27, label %84
    i32 28, label %87
    i32 29, label %90
    i32 30, label %93
  ]

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 1
  %5 = select i1 %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.14, i64 0, i64 0)
  br label %96

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 1
  %8 = select i1 %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i64 0, i64 0)
  br label %96

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 1
  %11 = select i1 %10, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0)
  br label %96

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 1
  %14 = select i1 %13, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i64 0, i64 0)
  br label %96

15:                                               ; preds = %2
  %16 = icmp eq i32 %1, 1
  %17 = select i1 %16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.22, i64 0, i64 0)
  br label %96

18:                                               ; preds = %2
  %19 = icmp eq i32 %1, 1
  %20 = select i1 %19, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.24, i64 0, i64 0)
  br label %96

21:                                               ; preds = %2
  %22 = icmp eq i32 %1, 1
  %23 = select i1 %22, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.26, i64 0, i64 0)
  br label %96

24:                                               ; preds = %2
  %25 = icmp eq i32 %1, 1
  %26 = select i1 %25, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28, i64 0, i64 0)
  br label %96

27:                                               ; preds = %2
  %28 = icmp eq i32 %1, 1
  %29 = select i1 %28, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.30, i64 0, i64 0)
  br label %96

30:                                               ; preds = %2
  %31 = icmp eq i32 %1, 1
  %32 = select i1 %31, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.32, i64 0, i64 0)
  br label %96

33:                                               ; preds = %2
  %34 = icmp eq i32 %1, 1
  %35 = select i1 %34, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.34, i64 0, i64 0)
  br label %96

36:                                               ; preds = %2
  %37 = icmp eq i32 %1, 1
  %38 = select i1 %37, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.36, i64 0, i64 0)
  br label %96

39:                                               ; preds = %2
  %40 = icmp eq i32 %1, 1
  %41 = select i1 %40, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.38, i64 0, i64 0)
  br label %96

42:                                               ; preds = %2
  %43 = icmp eq i32 %1, 1
  %44 = select i1 %43, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.40, i64 0, i64 0)
  br label %96

45:                                               ; preds = %2
  %46 = icmp eq i32 %1, 1
  %47 = select i1 %46, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.42, i64 0, i64 0)
  br label %96

48:                                               ; preds = %2
  %49 = icmp eq i32 %1, 1
  %50 = select i1 %49, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.44, i64 0, i64 0)
  br label %96

51:                                               ; preds = %2
  %52 = icmp eq i32 %1, 1
  %53 = select i1 %52, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46, i64 0, i64 0)
  br label %96

54:                                               ; preds = %2
  %55 = icmp eq i32 %1, 1
  %56 = select i1 %55, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.48, i64 0, i64 0)
  br label %96

57:                                               ; preds = %2
  %58 = icmp eq i32 %1, 1
  %59 = select i1 %58, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.50, i64 0, i64 0)
  br label %96

60:                                               ; preds = %2
  %61 = icmp eq i32 %1, 1
  %62 = select i1 %61, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.52, i64 0, i64 0)
  br label %96

63:                                               ; preds = %2
  %64 = icmp eq i32 %1, 1
  %65 = select i1 %64, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.54, i64 0, i64 0)
  br label %96

66:                                               ; preds = %2
  %67 = icmp eq i32 %1, 1
  %68 = select i1 %67, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.56, i64 0, i64 0)
  br label %96

69:                                               ; preds = %2
  %70 = icmp eq i32 %1, 1
  %71 = select i1 %70, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.58, i64 0, i64 0)
  br label %96

72:                                               ; preds = %2
  %73 = icmp eq i32 %1, 1
  %74 = select i1 %73, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0)
  br label %96

75:                                               ; preds = %2
  %76 = icmp eq i32 %1, 1
  %77 = select i1 %76, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.62, i64 0, i64 0)
  br label %96

78:                                               ; preds = %2
  %79 = icmp eq i32 %1, 1
  %80 = select i1 %79, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.64, i64 0, i64 0)
  br label %96

81:                                               ; preds = %2
  %82 = icmp eq i32 %1, 1
  %83 = select i1 %82, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.66, i64 0, i64 0)
  br label %96

84:                                               ; preds = %2
  %85 = icmp eq i32 %1, 1
  %86 = select i1 %85, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.68, i64 0, i64 0)
  br label %96

87:                                               ; preds = %2
  %88 = icmp eq i32 %1, 1
  %89 = select i1 %88, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.70, i64 0, i64 0)
  br label %96

90:                                               ; preds = %2
  %91 = icmp eq i32 %1, 1
  %92 = select i1 %91, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.72, i64 0, i64 0)
  br label %96

93:                                               ; preds = %2
  %94 = icmp eq i32 %1, 1
  %95 = select i1 %94, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.74, i64 0, i64 0)
  br label %96

96:                                               ; preds = %2, %93, %90, %87, %84, %81, %78, %75, %72, %69, %66, %63, %60, %57, %54, %51, %48, %45, %42, %39, %36, %33, %30, %27, %24, %21, %18, %15, %12, %9, %6, %3
  %97 = phi i8* [ %95, %93 ], [ %92, %90 ], [ %89, %87 ], [ %86, %84 ], [ %83, %81 ], [ %80, %78 ], [ %77, %75 ], [ %74, %72 ], [ %71, %69 ], [ %68, %66 ], [ %65, %63 ], [ %62, %60 ], [ %59, %57 ], [ %56, %54 ], [ %53, %51 ], [ %50, %48 ], [ %47, %45 ], [ %44, %42 ], [ %41, %39 ], [ %38, %36 ], [ %35, %33 ], [ %32, %30 ], [ %29, %27 ], [ %26, %24 ], [ %23, %21 ], [ %20, %18 ], [ %17, %15 ], [ %14, %12 ], [ %11, %9 ], [ %8, %6 ], [ %5, %3 ], [ null, %2 ]
  ret i8* %97
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #6

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #6

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRmRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i64* dereferenceable(8), i8*, i8* dereferenceable(1)) local_unnamed_addr #5 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 40, i1 false) #16
  store i8 2, i8* %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 0
  store i8 2, i8* %19, align 1
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 1
  store i8 1, i8* %20, align 1
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %22, align 8
  %23 = load i64, i64* %8, align 8
  %24 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1
  %26 = load i8, i8* %10, align 1, !range !6
  %27 = bitcast %"union.base::trace_event::TraceValue"* %25 to i8*
  store i8 %26, i8* %27, align 8
  %28 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #16
  %29 = load i8, i8* %18, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %65, label %31

31:                                               ; preds = %11, %60
  %32 = phi i64 [ %61, %60 ], [ 0, %11 ]
  %33 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 8
  br i1 %35, label %36, label %47

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %38 = bitcast %"union.base::trace_event::TraceValue"* %37 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %39 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %38, align 8
  %40 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %39, null
  br i1 %40, label %60, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %39 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %43 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %43, i64 1
  %45 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, align 8
  call void %45(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %39) #16
  %46 = load i8, i8* %33, align 1
  br label %47

47:                                               ; preds = %41, %31
  %48 = phi i8 [ %34, %31 ], [ %46, %41 ]
  %49 = icmp eq i8 %48, 9
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %52 = bitcast %"union.base::trace_event::TraceValue"* %51 to %"class.protozero::HeapBuffered"**
  %53 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %52, align 8
  %54 = icmp eq %"class.protozero::HeapBuffered"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %56) #16
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %57) #16
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %58) #16
  %59 = bitcast %"class.protozero::HeapBuffered"* %53 to i8*
  call void @_ZdlPv(i8* %59) #18
  br label %60

60:                                               ; preds = %55, %50, %47, %36
  %61 = add nuw nsw i64 %32, 1
  %62 = load i8, i8* %18, align 8
  %63 = zext i8 %62 to i64
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %31, label %65

65:                                               ; preds = %60, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  ret i64 %28
}

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #15

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_(%"class.WTF::Vector.202"*, i32* dereferenceable(4)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  br i1 %15, label %18, label %45, !prof !3

18:                                               ; preds = %2
  %19 = icmp eq i64* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64 %20) #16
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #16
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.202"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load i64*, i64** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne i64* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast i64* %27 to i8*
  br i1 %30, label %32, label %38, !prof !3

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #16
  %36 = bitcast %"class.WTF::Vector.202"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #16
  %40 = bitcast %"class.WTF::Vector.202"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to i64*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi i64* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i64, i64* %46, i64 %48
  %50 = load i32, i32* %1, align 4
  %51 = sext i32 %50 to i64
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %3, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRmEEvOT_(%"class.WTF::Vector.202"*, i64* dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp ugt i64* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i64, i64* %7, i64 %10
  %12 = icmp ugt i64* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq i64* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.202"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i64*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load i64*, i64** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i64* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i64* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #16
  %47 = bitcast %"class.WTF::Vector.202"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector.202"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i64*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i64* %1 to i64
  %56 = ptrtoint i64* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq i64* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64 %71) #16
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #16
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.202"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i64*, i64** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i64* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i64* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #16
  %87 = bitcast %"class.WTF::Vector.202"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #16
  %91 = bitcast %"class.WTF::Vector.202"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i64*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i64* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i64, i64* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i64* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i64* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i64, i64* %100, i64 %103
  %105 = load i64, i64* %101, align 8
  store i64 %105, i64* %104, align 8
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10NormalPage19ToBeFinalizedObjectEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NormalPage19FutureFreelistEntryELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.219"*, %"struct.blink::NormalPage::FutureFreelistEntry"* dereferenceable(16)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.219", %"class.WTF::Vector.219"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.219", %"class.WTF::Vector.219"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::NormalPage::FutureFreelistEntry"*, %"struct.blink::NormalPage::FutureFreelistEntry"** %6, align 8
  %8 = icmp ugt %"struct.blink::NormalPage::FutureFreelistEntry"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::NormalPage::FutureFreelistEntry", %"struct.blink::NormalPage::FutureFreelistEntry"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::NormalPage::FutureFreelistEntry"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.219", %"class.WTF::Vector.219"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::NormalPage::FutureFreelistEntry"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10NormalPage19FutureFreelistEntryEEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10NormalPage19FutureFreelistEntryEEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.219"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::NormalPage::FutureFreelistEntry"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::NormalPage::FutureFreelistEntry"*, %"struct.blink::NormalPage::FutureFreelistEntry"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::NormalPage::FutureFreelistEntry"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::NormalPage::FutureFreelistEntry"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #16
  %47 = bitcast %"class.WTF::Vector.219"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector.219"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::NormalPage::FutureFreelistEntry"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::NormalPage::FutureFreelistEntry"* %1 to i64
  %56 = ptrtoint %"struct.blink::NormalPage::FutureFreelistEntry"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.219", %"class.WTF::Vector.219"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::NormalPage::FutureFreelistEntry"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10NormalPage19FutureFreelistEntryEEEmm(i64 %71) #16
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10NormalPage19FutureFreelistEntryEEEPKcv, i64 0, i64 0)) #16
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.219"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::NormalPage::FutureFreelistEntry"*, %"struct.blink::NormalPage::FutureFreelistEntry"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::NormalPage::FutureFreelistEntry"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::NormalPage::FutureFreelistEntry"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #16
  %87 = bitcast %"class.WTF::Vector.219"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #16
  %91 = bitcast %"class.WTF::Vector.219"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::NormalPage::FutureFreelistEntry"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::NormalPage::FutureFreelistEntry"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::NormalPage::FutureFreelistEntry", %"struct.blink::NormalPage::FutureFreelistEntry"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::NormalPage::FutureFreelistEntry"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::NormalPage::FutureFreelistEntry"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::NormalPage::FutureFreelistEntry", %"struct.blink::NormalPage::FutureFreelistEntry"* %100, i64 %103
  %105 = bitcast %"struct.blink::NormalPage::FutureFreelistEntry"* %104 to i8*
  %106 = bitcast %"struct.blink::NormalPage::FutureFreelistEntry"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 16, i1 false) #16
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10NormalPage19FutureFreelistEntryEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NormalPage19ToBeFinalizedObjectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.214"*, %"struct.blink::NormalPage::ToBeFinalizedObject"* dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::NormalPage::ToBeFinalizedObject"*, %"struct.blink::NormalPage::ToBeFinalizedObject"** %6, align 8
  %8 = icmp ugt %"struct.blink::NormalPage::ToBeFinalizedObject"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::NormalPage::ToBeFinalizedObject", %"struct.blink::NormalPage::ToBeFinalizedObject"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::NormalPage::ToBeFinalizedObject"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::NormalPage::ToBeFinalizedObject"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10NormalPage19ToBeFinalizedObjectEEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10NormalPage19ToBeFinalizedObjectEEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::NormalPage::ToBeFinalizedObject"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::NormalPage::ToBeFinalizedObject"*, %"struct.blink::NormalPage::ToBeFinalizedObject"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::NormalPage::ToBeFinalizedObject"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::NormalPage::ToBeFinalizedObject"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #16
  %47 = bitcast %"class.WTF::Vector.214"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::NormalPage::ToBeFinalizedObject"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::NormalPage::ToBeFinalizedObject"* %1 to i64
  %56 = ptrtoint %"struct.blink::NormalPage::ToBeFinalizedObject"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::NormalPage::ToBeFinalizedObject"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10NormalPage19ToBeFinalizedObjectEEEmm(i64 %71) #16
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10NormalPage19ToBeFinalizedObjectEEEPKcv, i64 0, i64 0)) #16
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::NormalPage::ToBeFinalizedObject"*, %"struct.blink::NormalPage::ToBeFinalizedObject"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::NormalPage::ToBeFinalizedObject"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::NormalPage::ToBeFinalizedObject"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #16
  %87 = bitcast %"class.WTF::Vector.214"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #16
  %91 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::NormalPage::ToBeFinalizedObject"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::NormalPage::ToBeFinalizedObject"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::NormalPage::ToBeFinalizedObject", %"struct.blink::NormalPage::ToBeFinalizedObject"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::NormalPage::ToBeFinalizedObject"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::NormalPage::ToBeFinalizedObject"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::NormalPage::ToBeFinalizedObject", %"struct.blink::NormalPage::ToBeFinalizedObject"* %100, i64 %103
  %105 = bitcast %"struct.blink::NormalPage::ToBeFinalizedObject"* %101 to i64*
  %106 = bitcast %"struct.blink::NormalPage::ToBeFinalizedObject"* %104 to i64*
  %107 = load i64, i64* %105, align 8
  store i64 %107, i64* %106, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11ThreadState10Statistics14PageStatisticsEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{i8 0, i8 2}
!7 = distinct !{!7, !5}
!8 = !{i64 0, i64 65}
!9 = !{i32 24, i32 33}
