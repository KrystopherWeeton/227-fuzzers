; ModuleID = '../../third_party/skia/src/gpu/effects/GrSkSLFP.cpp'
source_filename = "../../third_party/skia/src/gpu/effects/GrSkSLFP.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.GrSkSLFP = type { %class.GrFragmentProcessor.base, %class.sk_sp, i8*, %class.sk_sp.166 }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.0"*, i64 }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp = type { %class.SkRuntimeEffect* }
%class.SkRuntimeEffect = type <{ %class.SkRefCnt.base, i32, %class.SkString, %"class.std::__1::unique_ptr.6", %"class.SkSL::FunctionDefinition"*, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.std::__1::unique_ptr.146", i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkString = type { %class.sk_sp.5 }
%class.sk_sp.5 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.SkSL::Program"* }
%"struct.SkSL::Program" = type { %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.18", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.62", %"class.std::__1::unique_ptr.63", %"struct.SkSL::Program::Inputs", %"class.std::__1::vector.75", %"class.std::__1::vector.88", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.SkSL::String"* }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.SkSL::ProgramConfig"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector"* }
%"class.std::__1::vector" = type opaque
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector.27", i32, i32, %"class.std::__1::vector.33", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.35" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.SkSL::Type::Field"* }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.43", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.59", [4 x i8] }>
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45", %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i64 }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { float }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.62" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.62", %"class.std::__1::vector.170", i8, %"class.std::__1::vector.178", %"class.std::__1::forward_list", %class.SkTHashMap.191, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.170" = type { %"class.std::__1::__vector_base.171" }
%"class.std::__1::__vector_base.171" = type { %"class.std::__1::unique_ptr.172"*, %"class.std::__1::unique_ptr.172"*, %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.std::__1::unique_ptr.172"* }
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"*, %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.std::__1::unique_ptr.180"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.191 = type { %class.SkTHashTable.192 }
%class.SkTHashTable.192 = type { i32, i32, %class.SkAutoTArray.193 }
%class.SkAutoTArray.193 = type { %"class.std::__1::unique_ptr.194" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.SkSL::Pool"* }
%"class.SkSL::Pool" = type { %"class.std::__1::unique_ptr.66" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.GrMemoryPool* }
%class.GrMemoryPool = type { %class.GrBlockAllocator }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"struct.SkSL::Program::Inputs" = type { i8, i8 }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.SkSL::ProgramElement"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::unique_ptr.77"* }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"**, %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.SkSL::ProgramElement"** }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.SkSL::ModifiersPool"* }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.SkSL::ProgramUsage"* }
%"class.SkSL::ProgramUsage" = type { %class.SkTHashMap, %class.SkTHashMap.110 }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.104" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base", [4 x i8] }
%"struct.std::__1::pair.base" = type <{ %"class.SkSL::Variable"*, %"struct.SkSL::ProgramUsage::VariableCounts" }>
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::VarDeclaration" = type { %"class.SkSL::Statement", %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.std::__1::unique_ptr.241" }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"struct.SkSL::ProgramUsage::VariableCounts" = type { i32, i32, i32 }
%class.SkTHashMap.110 = type { %class.SkTHashTable.111 }
%class.SkTHashTable.111 = type { i32, i32, %class.SkAutoTArray.112 }
%class.SkAutoTArray.112 = type { %"class.std::__1::unique_ptr.113" }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base.248", [4 x i8] }
%"struct.std::__1::pair.base.248" = type <{ %"class.SkSL::FunctionDeclaration"*, i32 }>
%"class.SkSL::FunctionDeclaration" = type opaque
%"class.SkSL::FunctionDefinition" = type opaque
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"*, %"class.std::__1::__compressed_pair.127" }
%"struct.SkRuntimeEffect::Uniform" = type <{ %class.SkString, i64, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.SkRuntimeEffect::Uniform"* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"*, %"class.std::__1::__compressed_pair.134" }
%"struct.SkRuntimeEffect::Child" = type { %class.SkString, i32, i32 }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.SkRuntimeEffect::Child"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.SkSL::SampleUsage"*, %"struct.SkSL::SampleUsage"*, %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.SkSL::SampleUsage"* }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %class.SkFilterColorProgram* }
%class.SkFilterColorProgram = type <{ %"class.skvm::Program", %"class.std::__1::vector.155", i8, [7 x i8] }>
%"class.skvm::Program" = type { %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.skvm::Program::Impl"* }
%"struct.skvm::Program::Impl" = type opaque
%"class.std::__1::vector.155" = type { %"class.std::__1::__vector_base.156" }
%"class.std::__1::__vector_base.156" = type { %"struct.SkFilterColorProgram::SampleCall"*, %"struct.SkFilterColorProgram::SampleCall"*, %"class.std::__1::__compressed_pair.158" }
%"struct.SkFilterColorProgram::SampleCall" = type { i32, i32, %union.anon.157 }
%union.anon.157 = type { %struct.SkRGBA4f }
%struct.SkRGBA4f = type { float, float, float, float }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.SkFilterColorProgram::SampleCall"* }
%class.sk_sp.166 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.GrRuntimeFPBuilder = type { %class.SkRuntimeEffectBuilder }
%class.SkRuntimeEffectBuilder = type { %class.sk_sp, %class.sk_sp.166, %"class.std::__1::vector.223" }
%"class.std::__1::vector.223" = type { %"class.std::__1::__vector_base.224" }
%"class.std::__1::__vector_base.224" = type { %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"*, %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.std::__1::unique_ptr.0"* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.203, %class.SkTArray.204 }
%class.SkTArray.203 = type { %class.SkString*, i64 }
%class.SkTArray.204 = type { %"class.std::__1::unique_ptr.200"*, i64 }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %class.GrGLSLFragmentProcessor* }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.221*, i32, i32 }
%class.SkTArray.221 = type { i32*, i64 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { { <2 x float>, <2 x float> } (%"union.std::__1::__function::__policy_storage"*, i32, %struct.SkRGBA4f*)* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.GrGLSLSkSLFP = type { %class.GrGLSLFragmentProcessor, %"class.std::__1::vector.211" }
%"class.std::__1::vector.211" = type { %"class.std::__1::__vector_base.212" }
%"class.std::__1::__vector_base.212" = type { %class.GrResourceHandle*, %class.GrResourceHandle*, %"class.std::__1::__compressed_pair.213" }
%class.GrResourceHandle = type { i32 }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %class.GrResourceHandle* }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.249, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.251, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.260], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.331", %"class.std::__1::unique_ptr.338", %"class.std::__1::vector.344", i32, %class.SkSTArray.351 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.262, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.262 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrProgramDesc = type <{ %class.SkSTArray.263, i32, [4 x i8] }>
%class.SkSTArray.263 = type { %class.SkAlignedSTStorage.264, %class.SkTArray.221 }
%class.SkAlignedSTStorage.264 = type { [132 x i8] }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.265, i32, [4 x i8] }
%union.anon.265 = type { %struct.anon.266 }
%struct.anon.266 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.322, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.268, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.268 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.269, %class.sk_sp.270, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function.274", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.316" }
%class.SkNVRefCnt.269 = type { %"struct.std::__1::atomic" }
%class.sk_sp.270 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.272 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.271, [4 x i8] }>
%union.anon.271 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.166, i8* }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.272 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.273, void (i8*)*, i8* }
%class.SkNVRefCnt.273 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function.274" = type { %"class.std::__1::__function::__policy_func.278" }
%"class.std::__1::__function::__policy_func.278" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.279", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.279" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.270, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.313, %class.sk_sp.315, %class.sk_sp.315 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.288, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.304, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.280 }
%class.SkTHashTable.280 = type { i32, i32, %class.SkAutoTArray.281 }
%class.SkAutoTArray.281 = type { %"class.std::__1::unique_ptr.282" }
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.288 = type { %class.SkTHashTable.289 }
%class.SkTHashTable.289 = type { i32, i32, %class.SkAutoTArray.290 }
%class.SkAutoTArray.290 = type { %"class.std::__1::unique_ptr.291" }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.297, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.297 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.298" }
%"struct.std::__1::atomic.298" = type { %"struct.std::__1::__atomic_base.299" }
%"struct.std::__1::__atomic_base.299" = type { %"struct.std::__1::__atomic_base.300" }
%"struct.std::__1::__atomic_base.300" = type { %"struct.std::__1::__cxx_atomic_impl.301" }
%"struct.std::__1::__cxx_atomic_impl.301" = type { %"struct.std::__1::__cxx_atomic_base_impl.302" }
%"struct.std::__1::__cxx_atomic_base_impl.302" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.303, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.303 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.304 = type { %class.SkTHashTable.305 }
%class.SkTHashTable.305 = type { i32, i32, %class.SkAutoTArray.306 }
%class.SkAutoTArray.306 = type { %"class.std::__1::unique_ptr.307" }
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.313 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.314, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.314 = type { %class.GrShaderCaps* }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.315 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.316" = type { %"struct.std::__1::__atomic_base.317" }
%"struct.std::__1::__atomic_base.317" = type { %"struct.std::__1::__atomic_base.318" }
%"struct.std::__1::__atomic_base.318" = type { %"struct.std::__1::__cxx_atomic_impl.319" }
%"struct.std::__1::__cxx_atomic_impl.319" = type { %"struct.std::__1::__cxx_atomic_base_impl.320" }
%"struct.std::__1::__cxx_atomic_base_impl.320" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.321 }
%union.anon.321 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.322 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.323, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.323 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.324"*, [24 x i8] }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %class.GrFragmentProcessor* }
%class.GrSwizzle = type { i16 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.330, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.330 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.334 }
%class.SkTArray.334 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector.344" = type { %"class.std::__1::__vector_base.345" }
%"class.std::__1::__vector_base.345" = type { %"class.std::__1::unique_ptr.200"*, %"class.std::__1::unique_ptr.200"*, %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.std::__1::unique_ptr.200"* }
%class.SkSTArray.351 = type { %class.SkAlignedSTStorage.352, %class.SkTArray.353 }
%class.SkAlignedSTStorage.352 = type { [160 x i8] }
%class.SkTArray.353 = type { %class.GrShaderVar*, i64 }
%class.SkSTArray.249 = type { %class.SkAlignedSTStorage.250, %class.SkTArray.203 }
%class.SkAlignedSTStorage.250 = type { [120 x i8] }
%class.SkSTArray.251 = type { %class.SkAlignedSTStorage.252, %class.SkTArray.253 }
%class.SkAlignedSTStorage.252 = type { [16 x i8] }
%class.SkTArray.253 = type { %"class.std::__1::unique_ptr.254"*, i64 }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.SkSL::Statement"* }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.260 = type { %class.SkAlignedSTStorage.261, %class.SkTArray.203 }
%class.SkAlignedSTStorage.261 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%class.FPCallbacks = type { %"class.SkSL::PipelineStage::Callbacks", %class.GrGLSLSkSLFP*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*, i8*, %"class.SkSL::Context"* }
%"class.SkSL::PipelineStage::Callbacks" = type { i32 (...)** }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.249, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.251, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.260], i32, i8, [3 x i8], i32, [12 x i8] }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.anon.357 = type { i8*, %"struct.SkRuntimeEffect::Uniform" }
%class.anon.358 = type { i8*, %"struct.SkRuntimeEffect::Uniform" }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN8GrSkSLFPD2Ev = comdat any

$_ZN8GrSkSLFPD0Ev = comdat any

$_ZN19GrFragmentProcessorD2Ev = comdat any

$_ZN19GrFragmentProcessorD0Ev = comdat any

$_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZN12GrGLSLSkSLFPD2Ev = comdat any

$_ZN12GrGLSLSkSLFPD0Ev = comdat any

$_ZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE = comdat any

$_ZN12GrGLSLSkSLFP9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN23GrGLSLFragmentProcessorD2Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacksD0Ev = comdat any

$_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks14getMangledNameEPKc = comdat any

$_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks14defineFunctionEPKcS5_b = comdat any

$_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks12defineStructEPKc = comdat any

$_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks13declareGlobalEPKc = comdat any

$_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks14declareUniformEPKN4SkSL14VarDeclarationE = comdat any

$_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks11sampleChildEiN4SkSL6StringES5_ = comdat any

$_ZN4SkSL13PipelineStage9CallbacksD2Ev = comdat any

$_ZTV19GrFragmentProcessor = comdat any

$_ZTV12GrGLSLSkSLFP = comdat any

$_ZTV23GrGLSLFragmentProcessor = comdat any

$_ZTVZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEE11FPCallbacks = comdat any

@_ZTV8GrSkSLFP = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrSkSLFP*)* @_ZN8GrSkSLFPD2Ev to i8*), i8* bitcast (void (%class.GrSkSLFP*)* @_ZN8GrSkSLFPD0Ev to i8*), i8* bitcast (i8* (%class.GrSkSLFP*)* @_ZNK8GrSkSLFP4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.GrSkSLFP*)* @_ZNK8GrSkSLFP5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrSkSLFP*, %struct.SkRGBA4f*)* @_ZNK8GrSkSLFP30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%class.GrSkSLFP*)* @_ZNK8GrSkSLFP17onMakeProgramImplEv to i8*), i8* bitcast (void (%class.GrSkSLFP*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK8GrSkSLFP21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.GrSkSLFP*, %class.GrFragmentProcessor*)* @_ZNK8GrSkSLFP9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@.str = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@_ZTV19GrFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrFragmentProcessor.h\00", align 1
@.str.2 = private unnamed_addr constant [62 x i8] c"Subclass must override this if advertising this optimization.\00", align 1
@_ZTV12GrGLSLSkSLFP = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLSkSLFP*)* @_ZN12GrGLSLSkSLFPD2Ev to i8*), i8* bitcast (void (%class.GrGLSLSkSLFP*)* @_ZN12GrGLSLSkSLFPD0Ev to i8*), i8* bitcast (void (%class.GrGLSLSkSLFP*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%class.GrGLSLSkSLFP*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN12GrGLSLSkSLFP9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@_ZTV23GrGLSLFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [8 x i8] c"inColor\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"%s = %s;\0A\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"coords\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"float2 %s = %s;\0A\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"_tmp_%d_%s\00", align 1
@_ZTVZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEE11FPCallbacks = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::PipelineStage::Callbacks"*)* @_ZN4SkSL13PipelineStage9CallbacksD2Ev to i8*), i8* bitcast (void (%class.FPCallbacks*)* @_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacksD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %class.FPCallbacks*, i8*)* @_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks14getMangledNameEPKc to i8*), i8* bitcast (void (%class.FPCallbacks*, i8*, i8*, i1)* @_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks14defineFunctionEPKcS5_b to i8*), i8* bitcast (void (%class.FPCallbacks*, i8*)* @_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks12defineStructEPKc to i8*), i8* bitcast (void (%class.FPCallbacks*, i8*)* @_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks13declareGlobalEPKc to i8*), i8* bitcast (void (%"class.SkSL::String"*, %class.FPCallbacks*, %"class.SkSL::VarDeclaration"*)* @_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks14declareUniformEPKN4SkSL14VarDeclarationE to i8*), i8* bitcast (void (%"class.SkSL::String"*, %class.FPCallbacks*, i32, %"class.SkSL::String"*, %"class.SkSL::String"*)* @_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks11sampleChildEiN4SkSL6StringES5_ to i8*)] }, comdat, align 8
@.str.9 = private unnamed_addr constant [4 x i8] c"sk_\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8GrSkSLFP30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EEE3$_0FS7_iS7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

@_ZN8GrSkSLFPC1E5sk_spI15SkRuntimeEffectEPKcS0_I6SkDataE = hidden unnamed_addr alias void (%class.GrSkSLFP*, %class.sk_sp*, i8*, %class.sk_sp.166*), void (%class.GrSkSLFP*, %class.sk_sp*, i8*, %class.sk_sp.166*)* @_ZN8GrSkSLFPC2E5sk_spI15SkRuntimeEffectEPKcS0_I6SkDataE
@_ZN8GrSkSLFPC1ERKS_ = hidden unnamed_addr alias void (%class.GrSkSLFP*, %class.GrSkSLFP*), void (%class.GrSkSLFP*, %class.GrSkSLFP*)* @_ZN8GrSkSLFPC2ERKS_
@_ZN18GrRuntimeFPBuilderC1E5sk_spI15SkRuntimeEffectE = hidden unnamed_addr alias void (%class.GrRuntimeFPBuilder*, %class.sk_sp*), void (%class.GrRuntimeFPBuilder*, %class.sk_sp*)* @_ZN18GrRuntimeFPBuilderC2E5sk_spI15SkRuntimeEffectE
@_ZN18GrRuntimeFPBuilderD1Ev = hidden unnamed_addr alias void (%class.GrRuntimeFPBuilder*), void (%class.GrRuntimeFPBuilder*)* @_ZN18GrRuntimeFPBuilderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrSkSLFP* @_ZN8GrSkSLFP4MakeE5sk_spI15SkRuntimeEffectEPKcS0_I6SkDataE(%class.sk_sp* nocapture, i8*, %class.sk_sp.166* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.sk_sp.166, %class.sk_sp.166* %2, i64 0, i32 0
  %5 = load %class.SkData*, %class.SkData** %4, align 8
  %6 = getelementptr inbounds %class.SkData, %class.SkData* %5, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %9 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %8, align 8
  %10 = tail call i64 @_ZNK15SkRuntimeEffect11uniformSizeEv(%class.SkRuntimeEffect* %9) #10
  %11 = icmp eq i64 %7, %10
  br i1 %11, label %12, label %52

12:                                               ; preds = %3
  %13 = tail call i8* @_ZN11GrProcessornwEm(i64 88) #10
  %14 = bitcast i8* %13 to %class.GrSkSLFP*
  %15 = bitcast %class.sk_sp* %0 to i64*
  %16 = load i64, i64* %15, align 8
  store %class.SkRuntimeEffect* null, %class.SkRuntimeEffect** %8, align 8
  %17 = bitcast %class.sk_sp.166* %2 to i64*
  %18 = load i64, i64* %17, align 8
  store %class.SkData* null, %class.SkData** %4, align 8
  %19 = inttoptr i64 %16 to %class.SkRuntimeEffect*
  %20 = tail call %class.SkFilterColorProgram* @_ZN15SkRuntimeEffect21getFilterColorProgramEv(%class.SkRuntimeEffect* %19) #10
  %21 = icmp eq %class.SkFilterColorProgram* %20, null
  %22 = select i1 %21, i32 0, i32 4
  %23 = bitcast i8* %13 to i32 (...)***
  %24 = getelementptr inbounds i8, i8* %13, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 76, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %13, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %13, i64 24
  %29 = getelementptr inbounds i8, i8* %13, i64 16
  %30 = getelementptr inbounds i8, i8* %13, i64 32
  %31 = bitcast i8* %30 to i64*
  %32 = bitcast i8* %28 to i8**
  store i8* %29, i8** %32, align 8
  store i64 8589934592, i64* %31, align 8
  %33 = getelementptr inbounds i8, i8* %13, i64 40
  %34 = bitcast i8* %33 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %34, align 8
  %35 = getelementptr inbounds i8, i8* %13, i64 48
  %36 = bitcast i8* %35 to i32*
  store i32 %22, i32* %36, align 8
  %37 = getelementptr inbounds i8, i8* %13, i64 52
  %38 = bitcast i8* %37 to i32*
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %13, i64 56
  store i8 0, i8* %39, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV8GrSkSLFP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %40 = getelementptr inbounds i8, i8* %13, i64 64
  %41 = bitcast i8* %40 to i64*
  store i64 %16, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %13, i64 72
  %43 = bitcast i8* %42 to i8**
  store i8* %1, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %13, i64 80
  %45 = bitcast i8* %44 to i64*
  store i64 %18, i64* %45, align 8
  %46 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %19, i64 0, i32 9
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %12
  %51 = or i32 %22, 16
  store i32 %51, i32* %36, align 8
  br label %52

52:                                               ; preds = %50, %12, %3
  %53 = phi %class.GrSkSLFP* [ null, %3 ], [ %14, %12 ], [ %14, %50 ]
  ret %class.GrSkSLFP* %53
}

declare i64 @_ZNK15SkRuntimeEffect11uniformSizeEv(%class.SkRuntimeEffect*) local_unnamed_addr #1

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8GrSkSLFPC2E5sk_spI15SkRuntimeEffectEPKcS0_I6SkDataE(%class.GrSkSLFP*, %class.sk_sp* nocapture, i8*, %class.sk_sp.166* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %6 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %5, align 8
  %7 = tail call %class.SkFilterColorProgram* @_ZN15SkRuntimeEffect21getFilterColorProgramEv(%class.SkRuntimeEffect* %6) #10
  %8 = icmp eq %class.SkFilterColorProgram* %7, null
  %9 = select i1 %8, i32 0, i32 4
  %10 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 0, i32 1
  store i32 76, i32* %11, align 8
  %12 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 1, i32 1
  %14 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %15 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %16 = bitcast %class.SkTArray* %13 to i8**
  store i8* %14, i8** %16, align 8
  store i64 8589934592, i64* %15, align 8
  %17 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %18 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 3
  store i32 %9, i32* %18, align 8
  %19 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %20, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV8GrSkSLFP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %21 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 1
  %22 = bitcast %class.sk_sp* %1 to i64*
  %23 = load i64, i64* %22, align 8
  store %class.SkRuntimeEffect* null, %class.SkRuntimeEffect** %5, align 8
  %24 = bitcast %class.sk_sp* %21 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 2
  store i8* %2, i8** %25, align 8
  %26 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 3
  %27 = getelementptr inbounds %class.sk_sp.166, %class.sk_sp.166* %3, i64 0, i32 0
  %28 = bitcast %class.sk_sp.166* %3 to i64*
  %29 = load i64, i64* %28, align 8
  store %class.SkData* null, %class.SkData** %27, align 8
  %30 = bitcast %class.sk_sp.166* %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %21, i64 0, i32 0
  %32 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %31, align 8
  %33 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %32, i64 0, i32 9
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %4
  %38 = load i32, i32* %18, align 8
  %39 = or i32 %38, 16
  store i32 %39, i32* %18, align 8
  br label %40

40:                                               ; preds = %4, %37
  ret void
}

declare %class.SkFilterColorProgram* @_ZN15SkRuntimeEffect21getFilterColorProgramEv(%class.SkRuntimeEffect*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8GrSkSLFPC2ERKS_(%class.GrSkSLFP*, %class.GrSkSLFP* dereferenceable(88)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrSkSLFP* %0 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrSkSLFP* %1 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %1, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 0, i32 1
  store i32 76, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 1, i32 1
  %12 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %14 = bitcast %class.SkTArray* %11 to i8**
  store i8* %12, i8** %14, align 8
  store i64 8589934592, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %15, align 8
  %16 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 3
  store i32 %7, i32* %16, align 8
  %17 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %18, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV8GrSkSLFP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %19 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %1, i64 0, i32 1, i32 0
  %21 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %20, align 8
  %22 = icmp eq %class.SkRuntimeEffect* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic
  br label %26

26:                                               ; preds = %2, %23
  store %class.SkRuntimeEffect* %21, %class.SkRuntimeEffect** %19, align 8
  %27 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 2
  %28 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %1, i64 0, i32 2
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast i8** %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 3, i32 0
  %33 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %1, i64 0, i32 3, i32 0
  %34 = load %class.SkData*, %class.SkData** %33, align 8
  %35 = icmp eq %class.SkData* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %class.SkData, %class.SkData* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic
  %39 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %19, align 8
  br label %40

40:                                               ; preds = %26, %36
  %41 = phi %class.SkRuntimeEffect* [ %21, %26 ], [ %39, %36 ]
  store %class.SkData* %34, %class.SkData** %32, align 8
  %42 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %41, i64 0, i32 9
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = load i32, i32* %16, align 8
  %48 = or i32 %47, 16
  store i32 %48, i32* %16, align 8
  br label %49

49:                                               ; preds = %40, %46
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #10
  ret void
}

declare void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK8GrSkSLFP4nameEv(%class.GrSkSLFP* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8GrSkSLFP8addChildENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE(%class.GrSkSLFP*, %class.GrFragmentProcessor*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrSkSLFP* %0 to %class.GrFragmentProcessor*
  %4 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = and i64 %6, 2147483647
  %8 = icmp eq %class.GrFragmentProcessor* %1, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = or i32 %11, -8
  br label %13

13:                                               ; preds = %9, %2
  %14 = phi i32 [ %12, %9 ], [ -1, %2 ]
  %15 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, %14
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 1, i32 0
  %19 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %18, align 8
  %20 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %19, i64 0, i32 7, i32 0, i32 0
  %21 = load %"struct.SkSL::SampleUsage"*, %"struct.SkSL::SampleUsage"** %20, align 8
  %22 = getelementptr inbounds %"struct.SkSL::SampleUsage", %"struct.SkSL::SampleUsage"* %21, i64 %7
  %23 = bitcast %"struct.SkSL::SampleUsage"* %22 to i64*
  %24 = load i64, i64* %23, align 4
  tail call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* %1, i64 %24) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLSLFragmentProcessor* @_ZNK8GrSkSLFP17onMakeProgramImplEv(%class.GrSkSLFP* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 64) #15
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2, i8 0, i64 16, i1 false) #10
  store i64 1, i64* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 32
  %7 = bitcast i8* %6 to i64*
  %8 = getelementptr inbounds i8, i8* %2, i64 24
  %9 = bitcast i8* %8 to %"class.std::__1::unique_ptr.200"**
  store %"class.std::__1::unique_ptr.200"* null, %"class.std::__1::unique_ptr.200"** %9, align 8
  store i64 1, i64* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV12GrGLSLSkSLFP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #10
  %11 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8GrSkSLFP21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrSkSLFP* nocapture readonly, %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 1, i32 0
  %5 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %4, align 8
  %6 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %9 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %9, i64 2
  %11 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %10, align 8
  tail call void %11(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #10
  %12 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 3, i32 0
  %13 = load %class.SkData*, %class.SkData** %12, align 8
  %14 = getelementptr inbounds %class.SkData, %class.SkData* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  %17 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %18 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %17, i64 2
  %19 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %18, align 8
  tail call void %19(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8GrSkSLFP9onIsEqualERK19GrFragmentProcessor(%class.GrSkSLFP* nocapture readonly, %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %3, align 8
  %5 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1
  %8 = bitcast %class.GrFragmentProcessor* %7 to %class.SkRuntimeEffect**
  %9 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %8, align 8
  %10 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %6, %11
  br i1 %12, label %13, label %20

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 3, i32 0
  %15 = load %class.SkData*, %class.SkData** %14, align 8
  %16 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 1
  %17 = bitcast %class.SkSTArray* %16 to %class.SkData**
  %18 = load %class.SkData*, %class.SkData** %17, align 8
  %19 = tail call zeroext i1 @_ZNK6SkData6equalsEPKS_(%class.SkData* %15, %class.SkData* %18) #10
  br label %20

20:                                               ; preds = %13, %2
  %21 = phi i1 [ false, %2 ], [ %19, %13 ]
  ret i1 %21
}

declare zeroext i1 @_ZNK6SkData6equalsEPKS_(%class.SkData*, %class.SkData*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK8GrSkSLFP5cloneEv(%class.GrSkSLFP*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 88) #10
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrSkSLFP* %0 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = bitcast i8* %2 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 76, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 8589934592, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 40
  %19 = bitcast i8* %18 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 48
  %21 = bitcast i8* %20 to i32*
  store i32 %7, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 52
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV8GrSkSLFP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 64
  %26 = bitcast i8* %25 to %class.SkRuntimeEffect**
  %27 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 1, i32 0
  %28 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %27, align 8
  %29 = icmp eq %class.SkRuntimeEffect* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %1
  %31 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %28, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 1 monotonic
  br label %33

33:                                               ; preds = %30, %1
  store %class.SkRuntimeEffect* %28, %class.SkRuntimeEffect** %26, align 8
  %34 = getelementptr inbounds i8, i8* %2, i64 72
  %35 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 2
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast i8* %34 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds i8, i8* %2, i64 80
  %40 = bitcast i8* %39 to %class.SkData**
  %41 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 3, i32 0
  %42 = load %class.SkData*, %class.SkData** %41, align 8
  %43 = icmp eq %class.SkData* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %33
  %45 = getelementptr inbounds %class.SkData, %class.SkData* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic
  %47 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %26, align 8
  br label %48

48:                                               ; preds = %44, %33
  %49 = phi %class.SkRuntimeEffect* [ %28, %33 ], [ %47, %44 ]
  store %class.SkData* %42, %class.SkData** %40, align 8
  %50 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %49, i64 0, i32 9
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %48
  %55 = load i32, i32* %21, align 8
  %56 = or i32 %55, 16
  store i32 %56, i32* %21, align 8
  br label %57

57:                                               ; preds = %48, %54
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #10
  ret %class.GrFragmentProcessor* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK8GrSkSLFP30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrSkSLFP*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function", align 8
  %4 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 1, i32 0
  %5 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %4, align 8
  %6 = tail call %class.SkFilterColorProgram* @_ZN15SkRuntimeEffect21getFilterColorProgramEv(%class.SkRuntimeEffect* %5) #10
  %7 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 3, i32 0
  %8 = load %class.SkData*, %class.SkData** %7, align 8
  %9 = getelementptr inbounds %class.SkData, %class.SkData* %8, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = ptrtoint %class.GrSkSLFP* %0 to i64
  %12 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 2
  store { <2 x float>, <2 x float> } (%"union.std::__1::__function::__policy_storage"*, i32, %struct.SkRGBA4f*)* @"_ZNSt3__110__function16__policy_invokerIF8SkRGBA4fIL11SkAlphaType2EEiS4_EE11__call_implINS0_20__default_alloc_funcIZNK8GrSkSLFP30constantOutputForConstantInputERKS4_E3$_0S5_EEEES4_PKNS0_16__policy_storageEiOS4_", { <2 x float>, <2 x float> } (%"union.std::__1::__function::__policy_storage"*, i32, %struct.SkRGBA4f*)** %12, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8GrSkSLFP30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EEE3$_0FS7_iS7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %13, align 8
  %14 = bitcast %"class.std::__1::function"* %3 to i64*
  store i64 %11, i64* %14, align 8
  %15 = call { <2 x float>, <2 x float> } @_ZNK20SkFilterColorProgram4evalERK8SkRGBA4fIL11SkAlphaType2EEPKvNSt3__18functionIFS2_iS2_EEE(%class.SkFilterColorProgram* %6, %struct.SkRGBA4f* dereferenceable(16) %1, i8* %10, %"class.std::__1::function"* nonnull %3) #10
  %16 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %13, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %16, i64 0, i32 1
  %18 = load void (i8*)*, void (i8*)** %17, align 8
  %19 = icmp eq void (i8*)* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void %18(i8* %22) #10
  br label %23

23:                                               ; preds = %2, %20
  ret { <2 x float>, <2 x float> } %15
}

declare { <2 x float>, <2 x float> } @_ZNK20SkFilterColorProgram4evalERK8SkRGBA4fIL11SkAlphaType2EEPKvNSt3__18functionIFS2_iS2_EEE(%class.SkFilterColorProgram*, %struct.SkRGBA4f* dereferenceable(16), i8*, %"class.std::__1::function"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18GrRuntimeFPBuilderC2E5sk_spI15SkRuntimeEffectE(%class.GrRuntimeFPBuilder*, %class.sk_sp* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %4 = bitcast %class.sk_sp* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %class.SkRuntimeEffect* null, %class.SkRuntimeEffect** %3, align 8
  %6 = bitcast %class.GrRuntimeFPBuilder* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %class.GrRuntimeFPBuilder, %class.GrRuntimeFPBuilder* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %class.GrRuntimeFPBuilder, %class.GrRuntimeFPBuilder* %0, i64 0, i32 0, i32 0, i32 0
  %9 = inttoptr i64 %5 to %class.SkRuntimeEffect*
  %10 = tail call i64 @_ZNK15SkRuntimeEffect11uniformSizeEv(%class.SkRuntimeEffect* %9) #10
  tail call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.166* sret %7, i64 %10) #10
  %11 = getelementptr inbounds %class.GrRuntimeFPBuilder, %class.GrRuntimeFPBuilder* %0, i64 0, i32 0, i32 2
  %12 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %8, align 8
  %13 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %12, i64 0, i32 6
  %14 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %12, i64 0, i32 6, i32 0, i32 1
  %15 = bitcast %"struct.SkRuntimeEffect::Child"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.132"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 4
  %21 = bitcast %"class.std::__1::vector.223"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #10
  %22 = icmp eq i64 %19, 0
  br i1 %22, label %44, label %23

23:                                               ; preds = %2
  %24 = icmp ugt i64 %20, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.223"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #16
  unreachable

27:                                               ; preds = %23
  %28 = ashr exact i64 %19, 1
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"class.std::__1::unique_ptr.0"*
  %31 = getelementptr inbounds %class.GrRuntimeFPBuilder, %class.GrRuntimeFPBuilder* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %32 = bitcast %"class.std::__1::vector.223"* %11 to i8**
  store i8* %29, i8** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %30, i64 %20
  %34 = getelementptr inbounds %class.GrRuntimeFPBuilder, %class.GrRuntimeFPBuilder* %0, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::unique_ptr.0"* %33, %"class.std::__1::unique_ptr.0"** %34, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.0"** %31 to i64*
  %36 = ptrtoint i8* %29 to i64
  %37 = add nsw i64 %20, -1
  %38 = getelementptr %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %30, i64 %37, i32 0, i32 0, i32 0
  %39 = ptrtoint %class.GrFragmentProcessor** %38 to i64
  %40 = sub i64 8, %36
  %41 = add i64 %40, %39
  %42 = and i64 %41, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 %42, i1 false) #10
  %43 = ptrtoint %"class.std::__1::unique_ptr.0"* %33 to i64
  store i64 %43, i64* %35, align 8
  br label %44

44:                                               ; preds = %27, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18GrRuntimeFPBuilderD2Ev(%class.GrRuntimeFPBuilder* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrRuntimeFPBuilder, %class.GrRuntimeFPBuilder* %0, i64 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector.223", %"class.std::__1::vector.223"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.0"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.0"* %4 to i8*
  %8 = getelementptr inbounds %class.GrRuntimeFPBuilder, %class.GrRuntimeFPBuilder* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.0"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.0"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %14, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %14, align 8
  %16 = icmp eq %class.GrFragmentProcessor* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %class.GrFragmentProcessor* %15 to void (%class.GrFragmentProcessor*)***
  %19 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %19, i64 1
  %21 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %20, align 8
  tail call void %21(%class.GrFragmentProcessor* nonnull %15) #10
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.0"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.223"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.0"* %4, %"class.std::__1::unique_ptr.0"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %27, %1
  %30 = getelementptr inbounds %class.GrRuntimeFPBuilder, %class.GrRuntimeFPBuilder* %0, i64 0, i32 0, i32 1, i32 0
  %31 = load %class.SkData*, %class.SkData** %30, align 8
  %32 = icmp eq %class.SkData* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.SkData, %class.SkData* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %31) #10
  %38 = bitcast %class.SkData* %31 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %38) #10
  br label %39

39:                                               ; preds = %37, %33, %29
  %40 = getelementptr inbounds %class.GrRuntimeFPBuilder, %class.GrRuntimeFPBuilder* %0, i64 0, i32 0, i32 0, i32 0
  %41 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %40, align 8
  %42 = icmp eq %class.SkRuntimeEffect* %41, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %41, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = bitcast %class.SkRuntimeEffect* %41 to %class.SkRefCntBase*
  %49 = bitcast %class.SkRuntimeEffect* %41 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8
  tail call void %52(%class.SkRefCntBase* nonnull %48) #10
  br label %53

53:                                               ; preds = %39, %43, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZN18GrRuntimeFPBuilder6makeFPEv(%class.GrRuntimeFPBuilder* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.166, align 8
  %3 = getelementptr inbounds %class.GrRuntimeFPBuilder, %class.GrRuntimeFPBuilder* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %3, align 8
  %5 = getelementptr inbounds %class.sk_sp.166, %class.sk_sp.166* %2, i64 0, i32 0
  %6 = getelementptr inbounds %class.GrRuntimeFPBuilder, %class.GrRuntimeFPBuilder* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load %class.SkData*, %class.SkData** %6, align 8, !noalias !2
  %8 = icmp eq %class.SkData* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.SkData, %class.SkData* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic, !noalias !2
  br label %12

12:                                               ; preds = %1, %9
  store %class.SkData* %7, %class.SkData** %5, align 8, !alias.scope !2
  %13 = getelementptr inbounds %class.GrRuntimeFPBuilder, %class.GrRuntimeFPBuilder* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %13, align 8
  %15 = getelementptr inbounds %class.GrRuntimeFPBuilder, %class.GrRuntimeFPBuilder* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %16 = bitcast %"class.std::__1::unique_ptr.0"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint %"class.std::__1::unique_ptr.0"* %14 to i64
  %19 = sub i64 %17, %18
  %20 = ashr exact i64 %19, 3
  %21 = call %class.GrFragmentProcessor* @_ZNK15SkRuntimeEffect6makeFPE5sk_spI6SkDataEPNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEEm(%class.SkRuntimeEffect* %4, %class.sk_sp.166* nonnull %2, %"class.std::__1::unique_ptr.0"* %14, i64 %20) #10
  %22 = load %class.SkData*, %class.SkData** %5, align 8
  %23 = icmp eq %class.SkData* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %class.SkData, %class.SkData* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %22) #10
  %29 = bitcast %class.SkData* %22 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %29) #10
  br label %30

30:                                               ; preds = %12, %24, %28
  ret %class.GrFragmentProcessor* %21
}

declare %class.GrFragmentProcessor* @_ZNK15SkRuntimeEffect6makeFPE5sk_spI6SkDataEPNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEEm(%class.SkRuntimeEffect*, %class.sk_sp.166*, %"class.std::__1::unique_ptr.0"*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8GrSkSLFPD2Ev(%class.GrSkSLFP*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV8GrSkSLFP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 3, i32 0
  %4 = load %class.SkData*, %class.SkData** %3, align 8
  %5 = icmp eq %class.SkData* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %4) #10
  %11 = bitcast %class.SkData* %4 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 1, i32 0
  %14 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %13, align 8
  %15 = icmp eq %class.SkRuntimeEffect* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %class.SkRuntimeEffect* %14 to %class.SkRefCntBase*
  %22 = bitcast %class.SkRuntimeEffect* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  tail call void %25(%class.SkRefCntBase* nonnull %21) #10
  br label %26

26:                                               ; preds = %12, %16, %20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %27 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 1, i32 1
  %28 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 4294967294
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %27, i64 0, i32 0
  br label %38

34:                                               ; preds = %49, %26
  %35 = phi i64 [ %29, %26 ], [ %51, %49 ]
  %36 = and i64 %35, 1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %58, label %55

38:                                               ; preds = %49, %32
  %39 = phi i64 [ 0, %32 ], [ %50, %49 ]
  %40 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %33, align 8
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %40, i64 %39, i32 0, i32 0, i32 0
  %42 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %41, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %41, align 8
  %43 = icmp eq %class.GrFragmentProcessor* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %38
  %45 = bitcast %class.GrFragmentProcessor* %42 to void (%class.GrFragmentProcessor*)***
  %46 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %46, i64 1
  %48 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %47, align 8
  tail call void %48(%class.GrFragmentProcessor* nonnull %42) #10
  br label %49

49:                                               ; preds = %44, %38
  %50 = add nuw nsw i64 %39, 1
  %51 = load i64, i64* %28, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %38, label %34

55:                                               ; preds = %34
  %56 = bitcast %class.SkTArray* %27 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #10
  br label %58

58:                                               ; preds = %34, %55
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8GrSkSLFPD0Ev(%class.GrSkSLFP*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV8GrSkSLFP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 3, i32 0
  %4 = load %class.SkData*, %class.SkData** %3, align 8
  %5 = icmp eq %class.SkData* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %4) #10
  %11 = bitcast %class.SkData* %4 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %11) #10
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 1, i32 0
  %14 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %13, align 8
  %15 = icmp eq %class.SkRuntimeEffect* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %class.SkRuntimeEffect* %14 to %class.SkRefCntBase*
  %22 = bitcast %class.SkRuntimeEffect* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  tail call void %25(%class.SkRefCntBase* nonnull %21) #10
  br label %26

26:                                               ; preds = %20, %16, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %27 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 1, i32 1
  %28 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 4294967294
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %27, i64 0, i32 0
  br label %38

34:                                               ; preds = %49, %26
  %35 = phi i64 [ %29, %26 ], [ %51, %49 ]
  %36 = and i64 %35, 1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %58, label %55

38:                                               ; preds = %49, %32
  %39 = phi i64 [ 0, %32 ], [ %50, %49 ]
  %40 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %33, align 8
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %40, i64 %39, i32 0, i32 0, i32 0
  %42 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %41, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %41, align 8
  %43 = icmp eq %class.GrFragmentProcessor* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %38
  %45 = bitcast %class.GrFragmentProcessor* %42 to void (%class.GrFragmentProcessor*)***
  %46 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %46, i64 1
  %48 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %47, align 8
  tail call void %48(%class.GrFragmentProcessor* nonnull %42) #10
  br label %49

49:                                               ; preds = %44, %38
  %50 = add nuw nsw i64 %39, 1
  %51 = load i64, i64* %28, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %38, label %34

55:                                               ; preds = %34
  %56 = bitcast %class.SkTArray* %27 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #10
  br label %58

58:                                               ; preds = %34, %55
  %59 = bitcast %class.GrSkSLFP* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %59) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD2Ev(%class.GrFragmentProcessor*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.0"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp eq %class.GrFragmentProcessor* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrFragmentProcessor* %19 to void (%class.GrFragmentProcessor*)***
  %23 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, i64 1
  %25 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %24, align 8
  tail call void %25(%class.GrFragmentProcessor* nonnull %19) #10
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #10
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD0Ev(%class.GrFragmentProcessor*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrGLSLSkSLFPD2Ev(%class.GrGLSLSkSLFP*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLSkSLFP, %class.GrGLSLSkSLFP* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV12GrGLSLSkSLFP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLSkSLFP, %class.GrGLSLSkSLFP* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %class.GrResourceHandle*, %class.GrResourceHandle** %3, align 8
  %5 = icmp eq %class.GrResourceHandle* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %class.GrResourceHandle* %4 to i64
  %8 = getelementptr inbounds %class.GrGLSLSkSLFP, %class.GrGLSLSkSLFP* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %class.GrResourceHandle** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %class.GrResourceHandle* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.GrGLSLSkSLFP, %class.GrGLSLSkSLFP* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %12) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrGLSLSkSLFPD0Ev(%class.GrGLSLSkSLFP*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLSkSLFP, %class.GrGLSLSkSLFP* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV12GrGLSLSkSLFP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLSkSLFP, %class.GrGLSLSkSLFP* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %class.GrResourceHandle*, %class.GrResourceHandle** %3, align 8
  %5 = icmp eq %class.GrResourceHandle* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %class.GrResourceHandle* %4 to i64
  %8 = getelementptr inbounds %class.GrGLSLSkSLFP, %class.GrGLSLSkSLFP* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %class.GrResourceHandle** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %class.GrResourceHandle* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.GrGLSLSkSLFP, %class.GrGLSLSkSLFP* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %12) #10
  %13 = bitcast %class.GrGLSLSkSLFP* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE(%class.GrGLSLSkSLFP*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.GrShaderVar, align 8
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %class.FPCallbacks, align 8
  %7 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 3
  %8 = bitcast %class.GrFragmentProcessor** %7 to %class.GrSkSLFP**
  %9 = load %class.GrSkSLFP*, %class.GrSkSLFP** %8, align 8
  %10 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %9, i64 0, i32 1, i32 0
  %11 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %10, align 8
  %12 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %12, align 8
  %14 = getelementptr inbounds %class.GrGLSLSkSLFP, %class.GrGLSLSkSLFP* %0, i64 0, i32 0
  %15 = getelementptr inbounds %class.GrGLSLSkSLFP, %class.GrGLSLSkSLFP* %0, i64 0, i32 0, i32 2, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 4294967294
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %class.GrGLSLSkSLFP, %class.GrGLSLSkSLFP* %0, i64 0, i32 0, i32 2, i32 0
  br label %82

21:                                               ; preds = %92, %2
  %22 = bitcast %class.GrShaderVar* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 40, i1 false)
  %23 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 0
  %24 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %23, align 8
  %25 = bitcast %class.GrGLSLFPFragmentBuilder* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr i8, i8* %26, i64 -24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %class.GrGLSLFPFragmentBuilder* %24 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 %29
  %32 = bitcast i8* %31 to %class.GrGLSLShaderBuilder*
  call void @_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc(%class.SkString* nonnull sret %4, %class.GrGLSLShaderBuilder* %32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)) #10
  %33 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %3, i64 0, i32 0
  store i32 31, i32* %33, align 8
  %34 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %3, i64 0, i32 1
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %3, i64 0, i32 2
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %3, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %36, %class.SkString* nonnull dereferenceable(8) %4) #10
  %37 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %3, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %37) #10
  %38 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %3, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %38) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #10
  %39 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %23, align 8
  %40 = bitcast %class.GrGLSLFPFragmentBuilder* %39 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr i8, i8* %41, i64 -24
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %class.GrGLSLFPFragmentBuilder* %39 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = bitcast i8* %46 to %class.GrGLSLShaderBuilder*
  call void @_ZN19GrGLSLShaderBuilder13declareGlobalERK11GrShaderVar(%class.GrGLSLShaderBuilder* %47, %class.GrShaderVar* nonnull dereferenceable(40) %3) #10
  %48 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %23, align 8
  %49 = bitcast %class.GrGLSLFPFragmentBuilder* %48 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr i8, i8* %50, i64 -24
  %52 = bitcast i8* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %class.GrGLSLFPFragmentBuilder* %48 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  %56 = bitcast i8* %55 to %class.GrGLSLShaderBuilder*
  %57 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %3, i64 0, i32 3, i32 0, i32 0
  %58 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %57, align 8
  %59 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %58, i64 0, i32 2
  %60 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 4
  %61 = load i8*, i8** %60, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %56, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8* %59, i8* %61)
  %62 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #10
  %63 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %63, align 8
  %64 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %23, align 8
  %65 = bitcast %class.GrGLSLFPFragmentBuilder* %64 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr i8, i8* %66, i64 -24
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %class.GrGLSLFPFragmentBuilder* %64 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 %69
  %72 = getelementptr inbounds i8, i8* %71, i64 496
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 16, !noalias !5
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %73, align 16, !noalias !5
  call void (%class.SkString*, i8*, ...) @_Z14SkStringPrintfPKcz(%class.SkString* nonnull sret %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 %74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0)) #10
  %76 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %63, align 8
  %77 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %76, i64 0, i32 2
  %78 = getelementptr inbounds %class.GrSkSLFP, %class.GrSkSLFP* %9, i64 0, i32 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 16
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %110, label %98

82:                                               ; preds = %19, %92
  %83 = phi i64 [ %16, %19 ], [ %93, %92 ]
  %84 = phi i64 [ 0, %19 ], [ %94, %92 ]
  %85 = load %"class.std::__1::unique_ptr.200"*, %"class.std::__1::unique_ptr.200"** %20, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.200"* %85, i64 %84, i32 0, i32 0, i32 0
  %87 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %86, align 8
  %88 = icmp eq %class.GrGLSLFragmentProcessor* %87, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %82
  %90 = trunc i64 %84 to i32
  tail call void @_ZN23GrGLSLFragmentProcessor17emitChildFunctionEiRNS_8EmitArgsE(%class.GrGLSLFragmentProcessor* %14, i32 %90, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1) #10
  %91 = load i64, i64* %15, align 8
  br label %92

92:                                               ; preds = %82, %89
  %93 = phi i64 [ %83, %82 ], [ %91, %89 ]
  %94 = add nuw nsw i64 %84, 1
  %95 = lshr i64 %93, 1
  %96 = and i64 %95, 2147483647
  %97 = icmp ult i64 %94, %96
  br i1 %97, label %82, label %21

98:                                               ; preds = %21
  %99 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %23, align 8
  %100 = bitcast %class.GrGLSLFPFragmentBuilder* %99 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = getelementptr i8, i8* %101, i64 -24
  %103 = bitcast i8* %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %class.GrGLSLFPFragmentBuilder* %99 to i8*
  %106 = getelementptr inbounds i8, i8* %105, i64 %104
  %107 = bitcast i8* %106 to %class.GrGLSLShaderBuilder*
  %108 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 5
  %109 = load i8*, i8** %108, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %107, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* %77, i8* %109)
  br label %110

110:                                              ; preds = %21, %98
  %111 = bitcast %class.FPCallbacks* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %111) #10
  %112 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %6, i64 0, i32 0, i32 0
  %113 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %6, i64 0, i32 1
  %114 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %6, i64 0, i32 2
  %115 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %6, i64 0, i32 3
  %116 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %6, i64 0, i32 4
  %117 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %6, i64 0, i32 2
  %118 = bitcast %"struct.GrGLSLFragmentProcessor::EmitArgs"** %117 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 24, i1 false)
  %119 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %57, align 8
  %120 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %119, i64 0, i32 2
  %121 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %13, i64 0, i32 2, i32 0
  %122 = bitcast %"class.SkSL::Context"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEE11FPCallbacks, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  store %class.GrGLSLSkSLFP* %0, %class.GrGLSLSkSLFP** %113, align 8
  store %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, %"struct.GrGLSLFragmentProcessor::EmitArgs"** %114, align 8
  store i8* %120, i8** %115, align 8
  %124 = bitcast %"class.SkSL::Context"** %116 to i64*
  store i64 %123, i64* %124, align 8
  %125 = load i8*, i8** %60, align 8
  %126 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %6, i64 0, i32 0
  call void @_ZN4SkSL13PipelineStage14ConvertProgramERKNS_7ProgramEPKcS5_PNS0_9CallbacksE(%"struct.SkSL::Program"* dereferenceable(128) %13, i8* %77, i8* %125, %"class.SkSL::PipelineStage::Callbacks"* nonnull %126) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %111) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* %38) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* %37) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* %36) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrGLSLSkSLFP9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLSkSLFP*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.anon.357, align 8
  %5 = alloca %class.anon.358, align 8
  %6 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 1
  %7 = bitcast %class.SkSTArray* %6 to %class.SkData**
  %8 = load %class.SkData*, %class.SkData** %7, align 8
  %9 = getelementptr inbounds %class.SkData, %class.SkData* %8, i64 0, i32 3
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1
  %13 = bitcast %class.GrFragmentProcessor* %12 to %class.SkRuntimeEffect**
  %14 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %13, align 8
  %15 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %14, i64 0, i32 5, i32 0, i32 0
  %16 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %15, align 8
  %17 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %14, i64 0, i32 5, i32 0, i32 1
  %18 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %17, align 8
  %19 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %16, %18
  br i1 %19, label %40, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %class.GrGLSLSkSLFP, %class.GrGLSLSkSLFP* %0, i64 0, i32 1, i32 0, i32 0
  %22 = bitcast %class.anon.357* %4 to i8*
  %23 = getelementptr inbounds %class.anon.357, %class.anon.357* %4, i64 0, i32 0
  %24 = bitcast %class.anon.357* %4 to i64*
  %25 = getelementptr inbounds %class.anon.357, %class.anon.357* %4, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %class.anon.357, %class.anon.357* %4, i64 0, i32 1, i32 1
  %27 = bitcast i64* %26 to i8*
  %28 = bitcast %class.anon.358* %5 to i8*
  %29 = getelementptr inbounds %class.anon.358, %class.anon.358* %5, i64 0, i32 0
  %30 = bitcast %class.anon.358* %5 to i64*
  %31 = getelementptr inbounds %class.anon.358, %class.anon.358* %5, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %class.anon.358, %class.anon.358* %5, i64 0, i32 1, i32 1
  %33 = bitcast i64* %32 to i8*
  %34 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)***
  %35 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %36 = getelementptr inbounds %class.anon.357, %class.anon.357* %4, i64 0, i32 1
  %37 = bitcast %"struct.SkRuntimeEffect::Uniform"* %36 to i8*
  %38 = getelementptr inbounds %class.anon.358, %class.anon.358* %5, i64 0, i32 1
  %39 = bitcast %"struct.SkRuntimeEffect::Uniform"* %38 to i8*
  br label %41

40:                                               ; preds = %163, %3
  ret void

41:                                               ; preds = %20, %163
  %42 = phi i64 [ 0, %20 ], [ %44, %163 ]
  %43 = phi %"struct.SkRuntimeEffect::Uniform"* [ %16, %20 ], [ %164, %163 ]
  %44 = add i64 %42, 1
  %45 = load %class.GrResourceHandle*, %class.GrResourceHandle** %21, align 8
  %46 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %45, i64 %42, i32 0
  %47 = load i32, i32* %46, align 4
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 32, i1 false)
  store i64 %11, i64* %24, align 8
  %48 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %43, i64 0, i32 0
  call void @_ZN8SkStringC1ERKS_(%class.SkString* %25, %class.SkString* dereferenceable(8) %48) #10
  %49 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %43, i64 0, i32 1
  %50 = bitcast i64* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %50, i64 20, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 32, i1 false)
  store i64 %11, i64* %30, align 8
  call void @_ZN8SkStringC1ERKS_(%class.SkString* %31, %class.SkString* dereferenceable(8) %48) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %50, i64 20, i1 false) #10
  %51 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %43, i64 0, i32 2
  %52 = load i32, i32* %51, align 8
  switch i32 %52, label %163 [
    i32 0, label %53
    i32 1, label %63
    i32 2, label %73
    i32 3, label %83
    i32 4, label %93
    i32 5, label %103
    i32 6, label %113
    i32 7, label %123
    i32 8, label %133
    i32 9, label %143
    i32 10, label %153
  ]

53:                                               ; preds = %41
  %54 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %43, i64 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = load i8*, i8** %23, align 8
  %57 = load i64, i64* %26, align 8
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  %59 = bitcast i8* %58 to float*
  %60 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %35, align 8
  %61 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %60, i64 5
  %62 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %61, align 8
  call void %62(%class.GrGLSLProgramDataManager* %1, i32 %47, i32 %55, float* %59) #10
  br label %163

63:                                               ; preds = %41
  %64 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %43, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = load i8*, i8** %23, align 8
  %67 = load i64, i64* %26, align 8
  %68 = getelementptr inbounds i8, i8* %66, i64 %67
  %69 = bitcast i8* %68 to float*
  %70 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %35, align 8
  %71 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %70, i64 9
  %72 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %71, align 8
  call void %72(%class.GrGLSLProgramDataManager* %1, i32 %47, i32 %65, float* %69) #10
  br label %163

73:                                               ; preds = %41
  %74 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %43, i64 0, i32 3
  %75 = load i32, i32* %74, align 4
  %76 = load i8*, i8** %23, align 8
  %77 = load i64, i64* %26, align 8
  %78 = getelementptr inbounds i8, i8* %76, i64 %77
  %79 = bitcast i8* %78 to float*
  %80 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %35, align 8
  %81 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %80, i64 13
  %82 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %81, align 8
  call void %82(%class.GrGLSLProgramDataManager* %1, i32 %47, i32 %75, float* %79) #10
  br label %163

83:                                               ; preds = %41
  %84 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %43, i64 0, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = load i8*, i8** %23, align 8
  %87 = load i64, i64* %26, align 8
  %88 = getelementptr inbounds i8, i8* %86, i64 %87
  %89 = bitcast i8* %88 to float*
  %90 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %35, align 8
  %91 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %90, i64 17
  %92 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %91, align 8
  call void %92(%class.GrGLSLProgramDataManager* %1, i32 %47, i32 %85, float* %89) #10
  br label %163

93:                                               ; preds = %41
  %94 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %43, i64 0, i32 3
  %95 = load i32, i32* %94, align 4
  %96 = load i8*, i8** %23, align 8
  %97 = load i64, i64* %26, align 8
  %98 = getelementptr inbounds i8, i8* %96, i64 %97
  %99 = bitcast i8* %98 to float*
  %100 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %35, align 8
  %101 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %100, i64 21
  %102 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %101, align 8
  call void %102(%class.GrGLSLProgramDataManager* %1, i32 %47, i32 %95, float* %99) #10
  br label %163

103:                                              ; preds = %41
  %104 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %43, i64 0, i32 3
  %105 = load i32, i32* %104, align 4
  %106 = load i8*, i8** %23, align 8
  %107 = load i64, i64* %26, align 8
  %108 = getelementptr inbounds i8, i8* %106, i64 %107
  %109 = bitcast i8* %108 to float*
  %110 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %35, align 8
  %111 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %110, i64 22
  %112 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %111, align 8
  call void %112(%class.GrGLSLProgramDataManager* %1, i32 %47, i32 %105, float* %109) #10
  br label %163

113:                                              ; preds = %41
  %114 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %43, i64 0, i32 3
  %115 = load i32, i32* %114, align 4
  %116 = load i8*, i8** %23, align 8
  %117 = load i64, i64* %26, align 8
  %118 = getelementptr inbounds i8, i8* %116, i64 %117
  %119 = bitcast i8* %118 to float*
  %120 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %35, align 8
  %121 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %120, i64 23
  %122 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %121, align 8
  call void %122(%class.GrGLSLProgramDataManager* %1, i32 %47, i32 %115, float* %119) #10
  br label %163

123:                                              ; preds = %41
  %124 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %43, i64 0, i32 3
  %125 = load i32, i32* %124, align 4
  %126 = load i8*, i8** %29, align 8
  %127 = load i64, i64* %32, align 8
  %128 = getelementptr inbounds i8, i8* %126, i64 %127
  %129 = bitcast i8* %128 to i32*
  %130 = load void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)*** %34, align 8
  %131 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)** %130, i64 3
  %132 = load void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)** %131, align 8
  call void %132(%class.GrGLSLProgramDataManager* %1, i32 %47, i32 %125, i32* %129) #10
  br label %163

133:                                              ; preds = %41
  %134 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %43, i64 0, i32 3
  %135 = load i32, i32* %134, align 4
  %136 = load i8*, i8** %29, align 8
  %137 = load i64, i64* %32, align 8
  %138 = getelementptr inbounds i8, i8* %136, i64 %137
  %139 = bitcast i8* %138 to i32*
  %140 = load void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)*** %34, align 8
  %141 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)** %140, i64 7
  %142 = load void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)** %141, align 8
  call void %142(%class.GrGLSLProgramDataManager* %1, i32 %47, i32 %135, i32* %139) #10
  br label %163

143:                                              ; preds = %41
  %144 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %43, i64 0, i32 3
  %145 = load i32, i32* %144, align 4
  %146 = load i8*, i8** %29, align 8
  %147 = load i64, i64* %32, align 8
  %148 = getelementptr inbounds i8, i8* %146, i64 %147
  %149 = bitcast i8* %148 to i32*
  %150 = load void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)*** %34, align 8
  %151 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)** %150, i64 11
  %152 = load void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)** %151, align 8
  call void %152(%class.GrGLSLProgramDataManager* %1, i32 %47, i32 %145, i32* %149) #10
  br label %163

153:                                              ; preds = %41
  %154 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %43, i64 0, i32 3
  %155 = load i32, i32* %154, align 4
  %156 = load i8*, i8** %29, align 8
  %157 = load i64, i64* %32, align 8
  %158 = getelementptr inbounds i8, i8* %156, i64 %157
  %159 = bitcast i8* %158 to i32*
  %160 = load void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)*** %34, align 8
  %161 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)** %160, i64 15
  %162 = load void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, i32*)** %161, align 8
  call void %162(%class.GrGLSLProgramDataManager* %1, i32 %47, i32 %155, i32* %159) #10
  br label %163

163:                                              ; preds = %41, %153, %143, %133, %123, %113, %103, %93, %83, %73, %63, %53
  call void @_ZN8SkStringD1Ev(%class.SkString* %31) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* %25) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #10
  %164 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %43, i64 1
  %165 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %164, %18
  br i1 %165, label %40, label %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23GrGLSLFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.204, %class.SkTArray.204* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.200"*, %"class.std::__1::unique_ptr.200"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.200"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %17, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrGLSLFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrGLSLFragmentProcessor* %18 to void (%class.GrGLSLFragmentProcessor*)***
  %22 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrGLSLFragmentProcessor* nonnull %18) #10
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.204* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #10
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkTArray.203, %class.SkTArray.203* %35, i64 0, i32 0
  br label %46

42:                                               ; preds = %46, %34
  %43 = phi i64 [ %37, %34 ], [ %51, %46 ]
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %55

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %50, %46 ]
  %48 = load %class.SkString*, %class.SkString** %41, align 8
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %48, i64 %47
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %49) #10
  %50 = add nuw nsw i64 %47, 1
  %51 = load i64, i64* %36, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %46, label %42

55:                                               ; preds = %42
  %56 = bitcast %class.SkTArray.203* %35 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #10
  br label %58

58:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD0Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #8

declare void @_ZN23GrGLSLFragmentProcessor17emitChildFunctionEiRNS_8EmitArgsE(%class.GrGLSLFragmentProcessor*, i32, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) local_unnamed_addr #1

declare void @_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc(%class.SkString* sret, %class.GrGLSLShaderBuilder*, i8*) local_unnamed_addr #1

declare void @_ZN19GrGLSLShaderBuilder13declareGlobalERK11GrShaderVar(%class.GrGLSLShaderBuilder*, %class.GrShaderVar* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #10
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

declare void @_ZN4SkSL13PipelineStage14ConvertProgramERKNS_7ProgramEPKcS5_PNS0_9CallbacksE(%"struct.SkSL::Program"* dereferenceable(128), i8*, i8*, %"class.SkSL::PipelineStage::Callbacks"*) local_unnamed_addr #1

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

declare void @_Z14SkStringPrintfPKcz(%class.SkString* sret, i8*, ...) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacksD0Ev(%class.FPCallbacks*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %class.FPCallbacks* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks14getMangledNameEPKc(%"class.SkSL::String"* noalias sret, %class.FPCallbacks*, i8*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %1, i64 0, i32 2
  %7 = load %"struct.GrGLSLFragmentProcessor::EmitArgs"*, %"struct.GrGLSLFragmentProcessor::EmitArgs"** %6, align 8
  %8 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %7, i64 0, i32 0
  %9 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %8, align 8
  %10 = bitcast %class.GrGLSLFPFragmentBuilder* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %class.GrGLSLFPFragmentBuilder* %9 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = bitcast i8* %16 to %class.GrGLSLShaderBuilder*
  call void @_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc(%class.SkString* nonnull sret %4, %class.GrGLSLShaderBuilder* %17, i8* %2) #10
  %18 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  %19 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %18, align 8
  %20 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %19, i64 0, i32 2
  %21 = call i64 @strlen(i8* %20) #10
  %22 = icmp ugt i64 %21, -17
  br i1 %22, label %23, label %25

23:                                               ; preds = %3
  %24 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #16
  unreachable

25:                                               ; preds = %3
  %26 = icmp ult i64 %21, 23
  br i1 %26, label %35, label %27

27:                                               ; preds = %25
  %28 = add nuw i64 %21, 16
  %29 = and i64 %28, -16
  %30 = call i8* @_Znwm(i64 %29) #15
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %30, i8** %31, align 8
  %32 = or i64 %29, -9223372036854775808
  %33 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %21, i64* %34, align 8
  br label %41

35:                                               ; preds = %25
  %36 = trunc i64 %21 to i8
  %37 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 %36, i8* %38, align 1
  %39 = bitcast %"class.SkSL::String"* %0 to i8*
  %40 = icmp eq i64 %21, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %35, %27
  %42 = phi i8* [ %30, %27 ], [ %39, %35 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %20, i64 %21, i1 false) #10
  br label %43

43:                                               ; preds = %35, %41
  %44 = phi i8* [ %39, %35 ], [ %42, %41 ]
  %45 = getelementptr inbounds i8, i8* %44, i64 %21
  store i8 0, i8* %45, align 1
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks14defineFunctionEPKcS5_b(%class.FPCallbacks*, i8*, i8*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %0, i64 0, i32 2
  %6 = load %"struct.GrGLSLFragmentProcessor::EmitArgs"*, %"struct.GrGLSLFragmentProcessor::EmitArgs"** %5, align 8
  %7 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %6, i64 0, i32 0
  %8 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %7, align 8
  %9 = bitcast %class.GrGLSLFPFragmentBuilder* %8 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr i8, i8* %10, i64 -24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %class.GrGLSLFPFragmentBuilder* %8 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 %13
  br i1 %3, label %16, label %25

16:                                               ; preds = %4
  %17 = getelementptr inbounds i8, i8* %15, i64 160
  %18 = getelementptr inbounds i8, i8* %15, i64 488
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = bitcast i8* %17 to %class.SkString**
  %22 = load %class.SkString*, %class.SkString** %21, align 8
  %23 = sext i32 %20 to i64
  %24 = getelementptr inbounds %class.SkString, %class.SkString* %22, i64 %23
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %24, i64 -1, i8* %2) #10
  br label %27

25:                                               ; preds = %4
  %26 = bitcast i8* %15 to %class.GrGLSLShaderBuilder*
  tail call void @_ZN19GrGLSLShaderBuilder12emitFunctionEPKcS1_(%class.GrGLSLShaderBuilder* %26, i8* %1, i8* %2) #10
  br label %27

27:                                               ; preds = %25, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks12defineStructEPKc(%class.FPCallbacks*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %0, i64 0, i32 2
  %4 = load %"struct.GrGLSLFragmentProcessor::EmitArgs"*, %"struct.GrGLSLFragmentProcessor::EmitArgs"** %3, align 8
  %5 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %4, i64 0, i32 0
  %6 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %5, align 8
  %7 = bitcast %class.GrGLSLFPFragmentBuilder* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr i8, i8* %8, i64 -24
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %class.GrGLSLFPFragmentBuilder* %6 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 %11
  %14 = getelementptr inbounds i8, i8* %13, i64 160
  %15 = bitcast i8* %14 to %class.SkString**
  %16 = load %class.SkString*, %class.SkString** %15, align 8
  %17 = getelementptr inbounds %class.SkString, %class.SkString* %16, i64 1
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %17, i64 -1, i8* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks13declareGlobalEPKc(%class.FPCallbacks*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %0, i64 0, i32 2
  %4 = load %"struct.GrGLSLFragmentProcessor::EmitArgs"*, %"struct.GrGLSLFragmentProcessor::EmitArgs"** %3, align 8
  %5 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %4, i64 0, i32 0
  %6 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %5, align 8
  %7 = bitcast %class.GrGLSLFPFragmentBuilder* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr i8, i8* %8, i64 -24
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %class.GrGLSLFPFragmentBuilder* %6 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 %11
  %14 = getelementptr inbounds i8, i8* %13, i64 160
  %15 = bitcast i8* %14 to %class.SkString**
  %16 = load %class.SkString*, %class.SkString** %15, align 8
  %17 = getelementptr inbounds %class.SkString, %class.SkString* %16, i64 1
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %17, i64 -1, i8* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks14declareUniformEPKN4SkSL14VarDeclarationE(%"class.SkSL::String"* noalias sret, %class.FPCallbacks*, %"class.SkSL::VarDeclaration"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca %class.SkString, align 8
  %7 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %2, i64 0, i32 1
  %8 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %8, i64 0, i32 0, i32 2
  %10 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %10, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %47 [
    i32 13, label %13
    i32 2, label %13
    i32 5, label %13
    i32 6, label %13
    i32 7, label %13
    i32 14, label %13
    i32 10, label %13
    i32 12, label %13
    i32 0, label %42
  ]

13:                                               ; preds = %3, %3, %3, %3, %3, %3, %3, %3
  %14 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %8, i64 0, i32 0, i32 1, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %8, i64 0, i32 0, i32 1, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %17, -17
  br i1 %18, label %19, label %21

19:                                               ; preds = %13
  %20 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %20) #16
  unreachable

21:                                               ; preds = %13
  %22 = icmp ult i64 %17, 23
  br i1 %22, label %31, label %23

23:                                               ; preds = %21
  %24 = add nuw i64 %17, 16
  %25 = and i64 %24, -16
  %26 = tail call i8* @_Znwm(i64 %25) #15
  %27 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = or i64 %25, -9223372036854775808
  %29 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %30, align 8
  br label %37

31:                                               ; preds = %21
  %32 = trunc i64 %17 to i8
  %33 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 %32, i8* %34, align 1
  %35 = bitcast %"class.SkSL::String"* %0 to i8*
  %36 = icmp eq i64 %17, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %31, %23
  %38 = phi i8* [ %26, %23 ], [ %35, %31 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %15, i64 %17, i1 false) #10
  br label %39

39:                                               ; preds = %31, %37
  %40 = phi i8* [ %35, %31 ], [ %38, %37 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %17
  store i8 0, i8* %41, align 1
  br label %181

42:                                               ; preds = %3
  %43 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %10, i64 0, i32 6
  %44 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %43, align 8
  %45 = icmp eq %"class.SkSL::Type"* %44, null
  %46 = select i1 %45, %"class.SkSL::Type"* %10, %"class.SkSL::Type"* %44
  br label %47

47:                                               ; preds = %3, %42
  %48 = phi %"class.SkSL::Type"* [ %46, %42 ], [ %10, %3 ]
  %49 = phi i1 [ true, %42 ], [ false, %3 ]
  %50 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #10
  store i32 -1431655766, i32* %4, align 4
  %51 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %1, i64 0, i32 4
  %52 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %51, align 8
  %53 = call zeroext i1 @_ZN4SkSL16type_to_grsltypeERKNS_7ContextERKNS_4TypeEP8GrSLType(%"class.SkSL::Context"* dereferenceable(744) %52, %"class.SkSL::Type"* dereferenceable(184) %48, i32* nonnull %4) #10
  %54 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  store i8* null, i8** %5, align 8
  %55 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %1, i64 0, i32 2
  %56 = load %"struct.GrGLSLFragmentProcessor::EmitArgs"*, %"struct.GrGLSLFragmentProcessor::EmitArgs"** %55, align 8
  %57 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %56, i64 0, i32 1
  %58 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %57, align 8
  %59 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %56, i64 0, i32 3
  %60 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %59, align 8
  %61 = load i32, i32* %4, align 4
  %62 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #10
  %63 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %8, i64 0, i32 0, i32 1, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %8, i64 0, i32 0, i32 1, i32 1
  %66 = load i64, i64* %65, align 8
  call void @_ZN8SkStringC1EPKcm(%class.SkString* nonnull %6, i8* %64, i64 %66) #10
  %67 = getelementptr inbounds %class.SkString, %class.SkString* %6, i64 0, i32 0, i32 0
  %68 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %67, align 8
  %69 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %68, i64 0, i32 2
  br i1 %49, label %70, label %74

70:                                               ; preds = %47
  %71 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %9, align 8
  %72 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %71, i64 0, i32 8
  %73 = load i32, i32* %72, align 8
  br label %74

74:                                               ; preds = %47, %70
  %75 = phi i32 [ %73, %70 ], [ 0, %47 ]
  %76 = call i32 @strncmp(i8* %69, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i64 3) #17
  %77 = icmp ne i32 %76, 0
  %78 = bitcast %class.GrGLSLUniformHandler* %58 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %79 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %78, align 8
  %80 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %79, i64 13
  %81 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %80, align 8
  %82 = call i32 %81(%class.GrGLSLUniformHandler* %58, %class.GrFragmentProcessor* %60, i32 16, i32 %61, i8* %69, i1 zeroext %77, i32 %75, i8** nonnull %5) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #10
  %83 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %1, i64 0, i32 1
  %84 = load %class.GrGLSLSkSLFP*, %class.GrGLSLSkSLFP** %83, align 8
  %85 = getelementptr inbounds %class.GrGLSLSkSLFP, %class.GrGLSLSkSLFP* %84, i64 0, i32 1
  %86 = getelementptr inbounds %class.GrGLSLSkSLFP, %class.GrGLSLSkSLFP* %84, i64 0, i32 1, i32 0, i32 1
  %87 = load %class.GrResourceHandle*, %class.GrResourceHandle** %86, align 8
  %88 = getelementptr inbounds %class.GrGLSLSkSLFP, %class.GrGLSLSkSLFP* %84, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %89 = load %class.GrResourceHandle*, %class.GrResourceHandle** %88, align 8
  %90 = icmp eq %class.GrResourceHandle* %87, %89
  %91 = ptrtoint %class.GrResourceHandle* %89 to i64
  br i1 %90, label %97, label %92

92:                                               ; preds = %74
  %93 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %87, i64 0, i32 0
  store i32 %82, i32* %93, align 4
  %94 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %87, i64 1
  %95 = ptrtoint %class.GrResourceHandle* %94 to i64
  %96 = bitcast %class.GrResourceHandle** %86 to i64*
  store i64 %95, i64* %96, align 8
  br label %154

97:                                               ; preds = %74
  %98 = ptrtoint %class.GrResourceHandle* %87 to i64
  %99 = bitcast %class.GrResourceHandle** %86 to i64*
  %100 = bitcast %"class.std::__1::vector.211"* %85 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = sub i64 %98, %101
  %103 = ashr exact i64 %102, 2
  %104 = add nsw i64 %103, 1
  %105 = icmp ugt i64 %104, 4611686018427387903
  br i1 %105, label %106, label %108

106:                                              ; preds = %97
  %107 = bitcast %"class.std::__1::vector.211"* %85 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %107) #16
  unreachable

108:                                              ; preds = %97
  %109 = bitcast %class.GrResourceHandle** %88 to i64*
  %110 = sub i64 %91, %101
  %111 = ashr exact i64 %110, 2
  %112 = icmp ult i64 %111, 2305843009213693951
  br i1 %112, label %113, label %121

113:                                              ; preds = %108
  %114 = ashr exact i64 %110, 1
  %115 = icmp ult i64 %114, %104
  %116 = select i1 %115, i64 %104, i64 %114
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %126, label %118

118:                                              ; preds = %113
  %119 = icmp ugt i64 %116, 4611686018427387903
  br i1 %119, label %120, label %121

120:                                              ; preds = %118
  call void @abort() #16
  unreachable

121:                                              ; preds = %118, %108
  %122 = phi i64 [ %116, %118 ], [ 4611686018427387903, %108 ]
  %123 = shl i64 %122, 2
  %124 = call i8* @_Znwm(i64 %123) #15
  %125 = bitcast i8* %124 to %class.GrResourceHandle*
  br label %126

126:                                              ; preds = %121, %113
  %127 = phi i64 [ %122, %121 ], [ 0, %113 ]
  %128 = phi %class.GrResourceHandle* [ %125, %121 ], [ null, %113 ]
  %129 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %128, i64 %103
  %130 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %128, i64 %127
  %131 = ptrtoint %class.GrResourceHandle* %130 to i64
  %132 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %129, i64 0, i32 0
  store i32 %82, i32* %132, align 4
  %133 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %129, i64 1
  %134 = ptrtoint %class.GrResourceHandle* %133 to i64
  %135 = getelementptr inbounds %"class.std::__1::vector.211", %"class.std::__1::vector.211"* %85, i64 0, i32 0, i32 0
  %136 = load %class.GrResourceHandle*, %class.GrResourceHandle** %135, align 8
  %137 = load i64, i64* %99, align 8
  %138 = ptrtoint %class.GrResourceHandle* %136 to i64
  %139 = sub i64 %137, %138
  %140 = ashr exact i64 %139, 2
  %141 = sub nsw i64 0, %140
  %142 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %129, i64 %141
  %143 = ptrtoint %class.GrResourceHandle* %142 to i64
  %144 = icmp sgt i64 %139, 0
  br i1 %144, label %145, label %149

145:                                              ; preds = %126
  %146 = bitcast %class.GrResourceHandle* %142 to i8*
  %147 = bitcast %class.GrResourceHandle* %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %146, i8* align 4 %147, i64 %139, i1 false) #10
  %148 = load %class.GrResourceHandle*, %class.GrResourceHandle** %135, align 8
  br label %149

149:                                              ; preds = %145, %126
  %150 = phi %class.GrResourceHandle* [ %136, %126 ], [ %148, %145 ]
  store i64 %143, i64* %100, align 8
  store i64 %134, i64* %99, align 8
  store i64 %131, i64* %109, align 8
  %151 = icmp eq %class.GrResourceHandle* %150, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %149
  %153 = bitcast %class.GrResourceHandle* %150 to i8*
  call void @_ZdlPv(i8* %153) #15
  br label %154

154:                                              ; preds = %92, %149, %152
  %155 = load i8*, i8** %5, align 8
  %156 = call i64 @strlen(i8* %155) #10
  %157 = icmp ugt i64 %156, -17
  br i1 %157, label %158, label %160

158:                                              ; preds = %154
  %159 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %159) #16
  unreachable

160:                                              ; preds = %154
  %161 = icmp ult i64 %156, 23
  br i1 %161, label %170, label %162

162:                                              ; preds = %160
  %163 = add nuw i64 %156, 16
  %164 = and i64 %163, -16
  %165 = call i8* @_Znwm(i64 %164) #15
  %166 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %165, i8** %166, align 8
  %167 = or i64 %164, -9223372036854775808
  %168 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %167, i64* %168, align 8
  %169 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %156, i64* %169, align 8
  br label %176

170:                                              ; preds = %160
  %171 = trunc i64 %156 to i8
  %172 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  store i8 %171, i8* %173, align 1
  %174 = bitcast %"class.SkSL::String"* %0 to i8*
  %175 = icmp eq i64 %156, 0
  br i1 %175, label %178, label %176

176:                                              ; preds = %170, %162
  %177 = phi i8* [ %165, %162 ], [ %174, %170 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %177, i8* align 1 %155, i64 %156, i1 false) #10
  br label %178

178:                                              ; preds = %170, %176
  %179 = phi i8* [ %174, %170 ], [ %177, %176 ]
  %180 = getelementptr inbounds i8, i8* %179, i64 %156
  store i8 0, i8* %180, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #10
  br label %181

181:                                              ; preds = %178, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN12GrGLSLSkSLFP8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsEEN11FPCallbacks11sampleChildEiN4SkSL6StringES5_(%"class.SkSL::String"* noalias sret, %class.FPCallbacks*, i32, %"class.SkSL::String"*, %"class.SkSL::String"*) unnamed_addr #0 comdat align 2 {
  %6 = alloca %class.SkString, align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %1, i64 0, i32 2
  %9 = load %"struct.GrGLSLFragmentProcessor::EmitArgs"*, %"struct.GrGLSLFragmentProcessor::EmitArgs"** %8, align 8
  %10 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %9, i64 0, i32 3
  %11 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %10, align 8
  %12 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %11, i64 0, i32 1, i32 0, i32 0, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::unique_ptr.0"**
  %14 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %13, align 8
  %15 = sext i32 %2 to i64
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %14, i64 %15, i32 0, i32 0, i32 0
  %17 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %16, align 8
  %18 = icmp eq %class.GrFragmentProcessor* %17, null
  br i1 %18, label %35, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %17, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 32
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %35

24:                                               ; preds = %19
  %25 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %32, align 8
  br label %35

33:                                               ; preds = %24
  %34 = bitcast %"class.SkSL::String"* %3 to i8*
  store i8 0, i8* %34, align 1
  store i8 0, i8* %26, align 1
  br label %35

35:                                               ; preds = %19, %33, %29, %5
  %36 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  %37 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %1, i64 0, i32 1
  %38 = bitcast %class.GrGLSLSkSLFP** %37 to %class.GrGLSLFragmentProcessor**
  %39 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %38, align 8
  %40 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  br label %49

47:                                               ; preds = %35
  %48 = zext i8 %42 to i64
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i64 [ %46, %44 ], [ %48, %47 ]
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %49
  %53 = getelementptr inbounds %class.FPCallbacks, %class.FPCallbacks* %1, i64 0, i32 3
  %54 = load i8*, i8** %53, align 8
  br label %61

55:                                               ; preds = %49
  br i1 %43, label %56, label %59

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  br label %61

59:                                               ; preds = %55
  %60 = bitcast %"class.SkSL::String"* %4 to i8*
  br label %61

61:                                               ; preds = %59, %56, %52
  %62 = phi i8* [ %54, %52 ], [ %58, %56 ], [ %60, %59 ]
  %63 = load %"struct.GrGLSLFragmentProcessor::EmitArgs"*, %"struct.GrGLSLFragmentProcessor::EmitArgs"** %8, align 8
  %64 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %61
  %69 = bitcast %"class.SkSL::String"* %7 to i8*
  %70 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 8 %70, i64 24, i1 false) #10
  br label %77

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0
  %73 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %72, i8* %74, i64 %76) #10
  br label %77

77:                                               ; preds = %68, %71
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %6, %class.GrGLSLFragmentProcessor* %39, i32 %2, i8* %62, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %63, %"class.SkSL::String"* nonnull %7) #10
  %78 = getelementptr inbounds %class.SkString, %class.SkString* %6, i64 0, i32 0, i32 0
  %79 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %78, align 8
  %80 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %79, i64 0, i32 2
  %81 = call i64 @strlen(i8* %80) #10
  %82 = icmp ugt i64 %81, -17
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %84) #16
  unreachable

85:                                               ; preds = %77
  %86 = icmp ult i64 %81, 23
  br i1 %86, label %95, label %87

87:                                               ; preds = %85
  %88 = add nuw i64 %81, 16
  %89 = and i64 %88, -16
  %90 = call i8* @_Znwm(i64 %89) #15
  %91 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %90, i8** %91, align 8
  %92 = or i64 %89, -9223372036854775808
  %93 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %81, i64* %94, align 8
  br label %101

95:                                               ; preds = %85
  %96 = trunc i64 %81 to i8
  %97 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  store i8 %96, i8* %98, align 1
  %99 = bitcast %"class.SkSL::String"* %0 to i8*
  %100 = icmp eq i64 %81, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %95, %87
  %102 = phi i8* [ %90, %87 ], [ %99, %95 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %102, i8* align 1 %80, i64 %81, i1 false) #10
  br label %103

103:                                              ; preds = %95, %101
  %104 = phi i8* [ %99, %95 ], [ %102, %101 ]
  %105 = getelementptr inbounds i8, i8* %104, i64 %81
  store i8 0, i8* %105, align 1
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #10
  %106 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  call void @_ZdlPv(i8* %112) #15
  br label %113

113:                                              ; preds = %103, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL13PipelineStage9CallbacksD2Ev(%"class.SkSL::PipelineStage::Callbacks"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare void @_ZN19GrGLSLShaderBuilder12emitFunctionEPKcS1_(%class.GrGLSLShaderBuilder*, i8*, i8*) local_unnamed_addr #1

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN4SkSL16type_to_grsltypeERKNS_7ContextERKNS_4TypeEP8GrSLType(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Type"* dereferenceable(184), i32*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

declare void @_ZN8SkStringC1EPKcm(%class.SkString*, i8*, i64) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

declare void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* sret, %class.GrGLSLFragmentProcessor*, i32, i8*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56), %"class.SkSL::String"*) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN8SkStringC1ERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal { <2 x float>, <2 x float> } @"_ZNSt3__110__function16__policy_invokerIF8SkRGBA4fIL11SkAlphaType2EEiS4_EE11__call_implINS0_20__default_alloc_funcIZNK8GrSkSLFP30constantOutputForConstantInputERKS4_E3$_0S5_EEEES4_PKNS0_16__policy_storageEiOS4_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32, %struct.SkRGBA4f* nocapture readonly dereferenceable(16)) #14 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast %struct.SkRGBA4f* %2 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 4
  %7 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %2, i64 0, i32 2
  %8 = bitcast float* %7 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 4
  %10 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %6, <2 x float>* %11, align 8
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %9, <2 x float>* %12, align 8
  %13 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %class.GrFragmentProcessor**
  %14 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %13, align 8
  %15 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %14, i64 0, i32 1, i32 0, i32 0, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::unique_ptr.0"**
  %17 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %16, align 8
  %18 = sext i32 %1 to i64
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %17, i64 %18, i32 0, i32 0, i32 0
  %20 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %19, align 8
  %21 = icmp eq %class.GrFragmentProcessor* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %3
  %23 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRGBA4f*
  %24 = bitcast %class.GrFragmentProcessor* %20 to { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)***
  %25 = load { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)**, { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)*** %24, align 8
  %26 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)*, { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)** %25, i64 4
  %27 = load { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)*, { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)** %26, align 8
  %28 = call { <2 x float>, <2 x float> } %27(%class.GrFragmentProcessor* nonnull %20, %struct.SkRGBA4f* nonnull dereferenceable(16) %23) #10
  %29 = extractvalue { <2 x float>, <2 x float> } %28, 0
  %30 = extractvalue { <2 x float>, <2 x float> } %28, 1
  br label %31

31:                                               ; preds = %3, %22
  %32 = phi <2 x float> [ %29, %22 ], [ %6, %3 ]
  %33 = phi <2 x float> [ %30, %22 ], [ %9, %3 ]
  %34 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %32, 0
  %35 = insertvalue { <2 x float>, <2 x float> } %34, <2 x float> %33, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret { <2 x float>, <2 x float> } %35
}

declare void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.166* sret, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN22SkRuntimeEffectBuilderINSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEE8uniformsEv: argument 0"}
!4 = distinct !{!4, !"_ZN22SkRuntimeEffectBuilderINSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEE8uniformsEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN19GrGLSLShaderBuilder13newTmpVarNameEPKc: argument 0"}
!7 = distinct !{!7, !"_ZN19GrGLSLShaderBuilder13newTmpVarNameEPKc"}
