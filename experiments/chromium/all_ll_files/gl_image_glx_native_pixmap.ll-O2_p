; ModuleID = '../../ui/gl/gl_image_glx_native_pixmap.cc'
source_filename = "../../ui/gl/gl_image_glx_native_pixmap.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gl::GLImageGLXNativePixmap" = type { %"class.gl::GLImageGLX", %class.scoped_refptr }
%"class.gl::GLImageGLX" = type { %"class.gl::GLImage", i32, %"class.gfx::Size", i32 }
%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted", %"class.gfx::ColorSpace" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gfx::Size" = type { i32, i32 }
%class.scoped_refptr = type { %"class.gfx::NativePixmap"* }
%"class.gfx::NativePixmap" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.x11::RefCountedFD" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.x11::RefCountedFD::Impl"* }
%"class.x11::RefCountedFD::Impl" = type { %"class.base::RefCounted.8", [4 x i8], %"class.base::ScopedGeneric" }
%"class.base::RefCounted.8" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"struct.x11::Drawable" = type { i32 }
%"class.gfx::NativePixmapDmaBuf" = type { %"class.gfx::NativePixmap.base", %"class.gfx::Size", i32, %"struct.gfx::NativePixmapHandle" }
%"class.gfx::NativePixmap.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"struct.gfx::NativePixmapHandle" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"*, %"class.std::__1::__compressed_pair" }
%"struct.gfx::NativePixmapPlane" = type { i32, i64, i64, %"class.base::ScopedGeneric" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.gfx::NativePixmapPlane"* }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.186", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.203", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.244", %"class.base::circular_deque", %"class.base::ObserverList.250", %"class.x11::Event"*, %"class.base::circular_deque.254", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.267" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.196" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.189", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.191" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.196" = type <{ %"class.std::__1::vector.189", %"class.base::LinkedList.197", i64, i32, [4 x i8] }>
%"class.base::LinkedList.197" = type { %"class.base::LinkNode.198" }
%"class.base::LinkNode.198" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.209", %"class.std::__1::vector.216" }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.211" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.218" }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.220" }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.237" }
%"class.std::__1::vector.237" = type { %"class.std::__1::__vector_base.238" }
%"class.std::__1::__vector_base.238" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.239" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.250" = type <{ %"class.std::__1::vector.189", %"class.base::LinkedList.251", i64, i32, [4 x i8] }>
%"class.base::LinkedList.251" = type { %"class.base::LinkNode.252" }
%"class.base::LinkNode.252" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type opaque
%"class.base::circular_deque.254" = type { %"class.base::internal::VectorBuffer.255", i64, i64 }
%"class.base::internal::VectorBuffer.255" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.258, %"class.std::__1::unique_ptr.260" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.256 }
%class.scoped_refptr.256 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.257", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.257" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.258 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.259", [4 x i8] }>
%"class.base::RefCountedThreadSafe.259" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.266 }
%union.anon.266 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.267" = type { %"class.base::internal::CallbackBase" }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.base::trace_event::ProcessMemoryDump" = type opaque

$_ZN2gl10GLImageGLX5FlushEv = comdat any

@_ZTVN2gl22GLImageGLXNativePixmapE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (i64 (%"class.gl::GLImageGLX"*)* @_ZN2gl10GLImageGLX7GetSizeEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageGLX"*)* @_ZN2gl10GLImageGLX17GetInternalFormatEv to i8*), i8* bitcast (i32 (%"class.gl::GLImage"*)* @_ZN2gl7GLImage13GetDataFormatEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageGLX"*)* @_ZN2gl10GLImageGLX11GetDataTypeEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageGLX"*)* @_ZN2gl10GLImageGLX16ShouldBindOrCopyEv to i8*), i8* bitcast (i1 (%"class.gl::GLImageGLX"*, i32)* @_ZN2gl10GLImageGLX12BindTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*, i32, i32)* @_ZN2gl7GLImage30BindTexImageWithInternalformatEjj to i8*), i8* bitcast (void (%"class.gl::GLImageGLX"*, i32)* @_ZN2gl10GLImageGLX15ReleaseTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImageGLX"*, i32)* @_ZN2gl10GLImageGLX12CopyTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImageGLX"*, i32, %"class.gfx::Point"*, %"class.gfx::Rect"*)* @_ZN2gl10GLImageGLX15CopyTexSubImageEjRKN3gfx5PointERKNS1_4RectE to i8*), i8* bitcast (void ()* @_ZN2gl10GLImageGLX20ScheduleOverlayPlaneEjiN3gfx16OverlayTransformERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENS9_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.gl::GLImage"*, %"class.gfx::ColorSpace"*)* @_ZN2gl7GLImage13SetColorSpaceERKN3gfx10ColorSpaceE to i8*), i8* bitcast (void (%"class.gl::GLImageGLX"*)* @_ZN2gl10GLImageGLX5FlushEv to i8*), i8* bitcast (void (%"class.gl::GLImageGLX"*, %"class.base::trace_event::ProcessMemoryDump"*, i64, %"class.std::__1::basic_string"*)* @_ZN2gl10GLImageGLX12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEmRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage12EmulatingRGBEv to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage21IsInUseByWindowServerEv to i8*), i8* bitcast (void (%"class.gl::GLImage"*)* @_ZN2gl7GLImage26DisableInUseByWindowServerEv to i8*), i8* bitcast (i32 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage7GetTypeEv to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage15HasMutableStateEv to i8*), i8* bitcast (%"class.gfx::NativePixmap"* (%"class.gl::GLImage"*)* @_ZN2gl7GLImage15GetNativePixmapEv to i8*), i8* bitcast (void (%"class.gl::GLImageGLXNativePixmap"*)* @_ZN2gl22GLImageGLXNativePixmapD2Ev to i8*), i8* bitcast (void (%"class.gl::GLImageGLXNativePixmap"*)* @_ZN2gl22GLImageGLXNativePixmapD0Ev to i8*)] }, align 8

@_ZN2gl22GLImageGLXNativePixmapC1ERKN3gfx4SizeENS1_12BufferFormatE = hidden unnamed_addr alias void (%"class.gl::GLImageGLXNativePixmap"*, %"class.gfx::Size"*, i32), void (%"class.gl::GLImageGLXNativePixmap"*, %"class.gfx::Size"*, i32)* @_ZN2gl22GLImageGLXNativePixmapC2ERKN3gfx4SizeENS1_12BufferFormatE
@_ZN2gl22GLImageGLXNativePixmapD1Ev = hidden unnamed_addr alias void (%"class.gl::GLImageGLXNativePixmap"*), void (%"class.gl::GLImageGLXNativePixmap"*)* @_ZN2gl22GLImageGLXNativePixmapD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl22GLImageGLXNativePixmapC2ERKN3gfx4SizeENS1_12BufferFormatE(%"class.gl::GLImageGLXNativePixmap"*, %"class.gfx::Size"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::GLImageGLXNativePixmap", %"class.gl::GLImageGLXNativePixmap"* %0, i64 0, i32 0
  tail call void @_ZN2gl10GLImageGLXC2ERKN3gfx4SizeENS1_12BufferFormatE(%"class.gl::GLImageGLX"* %4, %"class.gfx::Size"* dereferenceable(8) %1, i32 %2) #6
  %5 = getelementptr inbounds %"class.gl::GLImageGLXNativePixmap", %"class.gl::GLImageGLXNativePixmap"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl22GLImageGLXNativePixmapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.gl::GLImageGLXNativePixmap", %"class.gl::GLImageGLXNativePixmap"* %0, i64 0, i32 1, i32 0
  store %"class.gfx::NativePixmap"* null, %"class.gfx::NativePixmap"** %6, align 8
  ret void
}

declare void @_ZN2gl10GLImageGLXC2ERKN3gfx4SizeENS1_12BufferFormatE(%"class.gl::GLImageGLX"*, %"class.gfx::Size"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl22GLImageGLXNativePixmapD2Ev(%"class.gl::GLImageGLXNativePixmap"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageGLXNativePixmap", %"class.gl::GLImageGLXNativePixmap"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl22GLImageGLXNativePixmapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::GLImageGLXNativePixmap", %"class.gl::GLImageGLXNativePixmap"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %3, align 8
  %5 = icmp eq %"class.gfx::NativePixmap"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.gfx::NativePixmap"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.gfx::NativePixmap"*)***
  %15 = load void (%"class.gfx::NativePixmap"*)**, void (%"class.gfx::NativePixmap"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %15, i64 13
  %17 = load void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %16, align 8
  tail call void %17(%"class.gfx::NativePixmap"* nonnull %13) #6
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = getelementptr inbounds %"class.gl::GLImageGLXNativePixmap", %"class.gl::GLImageGLXNativePixmap"* %0, i64 0, i32 0
  tail call void @_ZN2gl10GLImageGLXD2Ev(%"class.gl::GLImageGLX"* %19) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2gl10GLImageGLXD2Ev(%"class.gl::GLImageGLX"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl22GLImageGLXNativePixmapD0Ev(%"class.gl::GLImageGLXNativePixmap"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageGLXNativePixmap", %"class.gl::GLImageGLXNativePixmap"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl22GLImageGLXNativePixmapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::GLImageGLXNativePixmap", %"class.gl::GLImageGLXNativePixmap"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %3, align 8
  %5 = icmp eq %"class.gfx::NativePixmap"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.gfx::NativePixmap"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.gfx::NativePixmap"*)***
  %15 = load void (%"class.gfx::NativePixmap"*)**, void (%"class.gfx::NativePixmap"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %15, i64 13
  %17 = load void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %16, align 8
  tail call void %17(%"class.gfx::NativePixmap"* nonnull %13) #6
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = getelementptr inbounds %"class.gl::GLImageGLXNativePixmap", %"class.gl::GLImageGLXNativePixmap"* %0, i64 0, i32 0
  tail call void @_ZN2gl10GLImageGLXD2Ev(%"class.gl::GLImageGLX"* %19) #6
  %20 = bitcast %"class.gl::GLImageGLXNativePixmap"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl22GLImageGLXNativePixmap10InitializeE13scoped_refptrIN3gfx12NativePixmapEE(%"class.gl::GLImageGLXNativePixmap"*, %"class.gfx::NativePixmap"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.x11::RefCountedFD", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"struct.x11::Drawable", align 4
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = icmp eq %"class.gfx::NativePixmap"* %1, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  br label %16

16:                                               ; preds = %2, %13
  %17 = getelementptr inbounds %"class.gl::GLImageGLXNativePixmap", %"class.gl::GLImageGLXNativePixmap"* %0, i64 0, i32 1
  %18 = ptrtoint %"class.gfx::NativePixmap"* %1 to i64
  %19 = bitcast %class.scoped_refptr* %17 to i64*
  %20 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %17, i64 0, i32 0
  %21 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %20, align 8
  store i64 %18, i64* %19, align 8
  %22 = icmp eq %"class.gfx::NativePixmap"* %21, null
  br i1 %22, label %35, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %21, i64 0, i32 1
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %35

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 -2
  %30 = bitcast %"class.base::RefCountedThreadSafe"* %29 to %"class.gfx::NativePixmap"*
  %31 = bitcast %"class.base::RefCountedThreadSafe"* %29 to void (%"class.gfx::NativePixmap"*)***
  %32 = load void (%"class.gfx::NativePixmap"*)**, void (%"class.gfx::NativePixmap"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %32, i64 13
  %34 = load void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %33, align 8
  tail call void %34(%"class.gfx::NativePixmap"* nonnull %30) #6
  br label %35

35:                                               ; preds = %16, %23, %28
  %36 = getelementptr inbounds %"class.gl::GLImageGLXNativePixmap", %"class.gl::GLImageGLXNativePixmap"* %0, i64 0, i32 0
  %37 = bitcast %class.scoped_refptr* %17 to %"class.gfx::NativePixmapDmaBuf"**
  %38 = load %"class.gfx::NativePixmapDmaBuf"*, %"class.gfx::NativePixmapDmaBuf"** %37, align 8
  %39 = getelementptr inbounds %"class.gl::GLImageGLXNativePixmap", %"class.gl::GLImageGLXNativePixmap"* %0, i64 0, i32 0, i32 3
  %40 = load i32, i32* %39, align 4
  switch i32 %40, label %45 [
    i32 3, label %46
    i32 7, label %43
    i32 8, label %41
    i32 10, label %42
  ]

41:                                               ; preds = %35
  br label %43

42:                                               ; preds = %35
  br label %43

43:                                               ; preds = %35, %42, %41
  %44 = phi i8 [ 32, %41 ], [ 32, %42 ], [ 24, %35 ]
  br label %46

45:                                               ; preds = %35
  br label %46

46:                                               ; preds = %35, %43, %45
  %47 = phi i8 [ 0, %45 ], [ %44, %43 ], [ 16, %35 ]
  %48 = phi i8 [ 0, %45 ], [ 32, %43 ], [ 16, %35 ]
  %49 = bitcast %"class.gfx::NativePixmapDmaBuf"* %38 to i32 (%"class.gfx::NativePixmapDmaBuf"*, i64)***
  br label %50

50:                                               ; preds = %57, %46
  %51 = load i32 (%"class.gfx::NativePixmapDmaBuf"*, i64)**, i32 (%"class.gfx::NativePixmapDmaBuf"*, i64)*** %49, align 8
  %52 = getelementptr inbounds i32 (%"class.gfx::NativePixmapDmaBuf"*, i64)*, i32 (%"class.gfx::NativePixmapDmaBuf"*, i64)** %51, i64 1
  %53 = load i32 (%"class.gfx::NativePixmapDmaBuf"*, i64)*, i32 (%"class.gfx::NativePixmapDmaBuf"*, i64)** %52, align 8
  %54 = tail call i32 %53(%"class.gfx::NativePixmapDmaBuf"* %38, i64 0) #6
  %55 = tail call i32 @dup(i32 %54) #6
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %57, label %61

57:                                               ; preds = %50
  %58 = tail call i32* @__errno_location() #8
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 4
  br i1 %60, label %50, label %110

61:                                               ; preds = %50
  %62 = icmp slt i32 %55, 0
  br i1 %62, label %110, label %63

63:                                               ; preds = %61
  %64 = bitcast %"class.x11::RefCountedFD"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #6
  %65 = getelementptr inbounds %"class.x11::RefCountedFD", %"class.x11::RefCountedFD"* %3, i64 0, i32 0, i32 0
  store %"class.x11::RefCountedFD::Impl"* inttoptr (i64 -6148914691236517206 to %"class.x11::RefCountedFD::Impl"*), %"class.x11::RefCountedFD::Impl"** %65, align 8
  call void @_ZN3x1112RefCountedFDC1Ei(%"class.x11::RefCountedFD"* nonnull %3, i32 %55) #6
  %66 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #6
  %67 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #6
  %68 = call i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"* %66) #6
  store i32 %68, i32* %4, align 4
  %69 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %66, i64 0, i32 1, i32 5, i32 0, i32 0, i32 0
  %70 = load %"class.x11::Dri3"*, %"class.x11::Dri3"** %69, align 8
  %71 = bitcast %"struct.x11::Drawable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #6
  %72 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %66, i64 0, i32 11
  %73 = load %"struct.x11::Screen"*, %"struct.x11::Screen"** %72, align 8
  %74 = getelementptr inbounds %"struct.x11::Screen", %"struct.x11::Screen"* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %"struct.x11::Drawable", %"struct.x11::Drawable"* %5, i64 0, i32 0
  store i32 %75, i32* %76, align 4
  %77 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #6
  %78 = bitcast %"class.gfx::NativePixmapDmaBuf"* %38 to i64 (%"class.gfx::NativePixmapDmaBuf"*, i64)***
  %79 = load i64 (%"class.gfx::NativePixmapDmaBuf"*, i64)**, i64 (%"class.gfx::NativePixmapDmaBuf"*, i64)*** %78, align 8
  %80 = getelementptr inbounds i64 (%"class.gfx::NativePixmapDmaBuf"*, i64)*, i64 (%"class.gfx::NativePixmapDmaBuf"*, i64)** %79, i64 4
  %81 = load i64 (%"class.gfx::NativePixmapDmaBuf"*, i64)*, i64 (%"class.gfx::NativePixmapDmaBuf"*, i64)** %80, align 8
  %82 = call i64 %81(%"class.gfx::NativePixmapDmaBuf"* %38, i64 0) #6
  %83 = trunc i64 %82 to i32
  store i32 %83, i32* %6, align 4
  %84 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %84) #6
  %85 = bitcast %"class.gfx::NativePixmapDmaBuf"* %38 to i64 (%"class.gfx::NativePixmapDmaBuf"*)***
  %86 = load i64 (%"class.gfx::NativePixmapDmaBuf"*)**, i64 (%"class.gfx::NativePixmapDmaBuf"*)*** %85, align 8
  %87 = getelementptr inbounds i64 (%"class.gfx::NativePixmapDmaBuf"*)*, i64 (%"class.gfx::NativePixmapDmaBuf"*)** %86, i64 8
  %88 = load i64 (%"class.gfx::NativePixmapDmaBuf"*)*, i64 (%"class.gfx::NativePixmapDmaBuf"*)** %87, align 8
  %89 = call i64 %88(%"class.gfx::NativePixmapDmaBuf"* %38) #6
  %90 = trunc i64 %89 to i16
  store i16 %90, i16* %7, align 2
  %91 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %91) #6
  %92 = load i64 (%"class.gfx::NativePixmapDmaBuf"*)**, i64 (%"class.gfx::NativePixmapDmaBuf"*)*** %85, align 8
  %93 = getelementptr inbounds i64 (%"class.gfx::NativePixmapDmaBuf"*)*, i64 (%"class.gfx::NativePixmapDmaBuf"*)** %92, i64 8
  %94 = load i64 (%"class.gfx::NativePixmapDmaBuf"*)*, i64 (%"class.gfx::NativePixmapDmaBuf"*)** %93, align 8
  %95 = call i64 %94(%"class.gfx::NativePixmapDmaBuf"* %38) #6
  %96 = lshr i64 %95, 32
  %97 = trunc i64 %96 to i16
  store i16 %97, i16* %8, align 2
  %98 = bitcast i16* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %98) #6
  %99 = load i32 (%"class.gfx::NativePixmapDmaBuf"*, i64)**, i32 (%"class.gfx::NativePixmapDmaBuf"*, i64)*** %49, align 8
  %100 = getelementptr inbounds i32 (%"class.gfx::NativePixmapDmaBuf"*, i64)*, i32 (%"class.gfx::NativePixmapDmaBuf"*, i64)** %99, i64 2
  %101 = load i32 (%"class.gfx::NativePixmapDmaBuf"*, i64)*, i32 (%"class.gfx::NativePixmapDmaBuf"*, i64)** %100, align 8
  %102 = call i32 %101(%"class.gfx::NativePixmapDmaBuf"* %38, i64 0) #6
  %103 = trunc i32 %102 to i16
  store i16 %103, i16* %9, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #6
  store i8 %47, i8* %10, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #6
  store i8 %48, i8* %11, align 1
  %104 = call %"class.x11::Connection::FutureImpl"* @_ZN3x114Dri316PixmapFromBufferERKNS_6PixmapERKNS_8DrawableERKjRKtSA_SA_RKhSC_RKNS_12RefCountedFDE(%"class.x11::Dri3"* %70, i32* nonnull dereferenceable(4) %4, %"struct.x11::Drawable"* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %6, i16* nonnull dereferenceable(2) %7, i16* nonnull dereferenceable(2) %8, i16* nonnull dereferenceable(2) %9, i8* nonnull dereferenceable(1) %10, i8* nonnull dereferenceable(1) %11, %"class.x11::RefCountedFD"* nonnull dereferenceable(8) %3) #6
  %105 = icmp eq %"class.x11::Connection::FutureImpl"* %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %63
  %107 = bitcast %"class.x11::Connection::FutureImpl"* %104 to i8*
  call void @_ZdlPv(i8* %107) #7
  br label %108

108:                                              ; preds = %106, %63
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %98) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %91) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %84) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #6
  %109 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #6
  call void @_ZN3x1112RefCountedFDD1Ev(%"class.x11::RefCountedFD"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #6
  br label %110

110:                                              ; preds = %57, %61, %108
  %111 = phi i32 [ %109, %108 ], [ 0, %61 ], [ 0, %57 ]
  %112 = call zeroext i1 @_ZN2gl10GLImageGLX10InitializeEN3x116PixmapE(%"class.gl::GLImageGLX"* %36, i32 %111) #6
  br i1 %12, label %125, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %1, i64 0, i32 1
  %115 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = atomicrmw sub i32* %115, i32 1 acq_rel
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %125

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %114, i64 -2
  %120 = bitcast %"class.base::RefCountedThreadSafe"* %119 to %"class.gfx::NativePixmap"*
  %121 = bitcast %"class.base::RefCountedThreadSafe"* %119 to void (%"class.gfx::NativePixmap"*)***
  %122 = load void (%"class.gfx::NativePixmap"*)**, void (%"class.gfx::NativePixmap"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %122, i64 13
  %124 = load void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %123, align 8
  call void %124(%"class.gfx::NativePixmap"* nonnull %120) #6
  br label %125

125:                                              ; preds = %110, %113, %118
  ret i1 %112
}

declare zeroext i1 @_ZN2gl10GLImageGLX10InitializeEN3x116PixmapE(%"class.gl::GLImageGLX"*, i32) local_unnamed_addr #1

declare i64 @_ZN2gl10GLImageGLX7GetSizeEv(%"class.gl::GLImageGLX"*) unnamed_addr #1

declare i32 @_ZN2gl10GLImageGLX17GetInternalFormatEv(%"class.gl::GLImageGLX"*) unnamed_addr #1

declare i32 @_ZN2gl7GLImage13GetDataFormatEv(%"class.gl::GLImage"*) unnamed_addr #1

declare i32 @_ZN2gl10GLImageGLX11GetDataTypeEv(%"class.gl::GLImageGLX"*) unnamed_addr #1

declare i32 @_ZN2gl10GLImageGLX16ShouldBindOrCopyEv(%"class.gl::GLImageGLX"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl10GLImageGLX12BindTexImageEj(%"class.gl::GLImageGLX"*, i32) unnamed_addr #1

declare zeroext i1 @_ZN2gl7GLImage30BindTexImageWithInternalformatEjj(%"class.gl::GLImage"*, i32, i32) unnamed_addr #1

declare void @_ZN2gl10GLImageGLX15ReleaseTexImageEj(%"class.gl::GLImageGLX"*, i32) unnamed_addr #1

declare zeroext i1 @_ZN2gl10GLImageGLX12CopyTexImageEj(%"class.gl::GLImageGLX"*, i32) unnamed_addr #1

declare zeroext i1 @_ZN2gl10GLImageGLX15CopyTexSubImageEjRKN3gfx5PointERKNS1_4RectE(%"class.gl::GLImageGLX"*, i32, %"class.gfx::Point"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN2gl10GLImageGLX20ScheduleOverlayPlaneEjiN3gfx16OverlayTransformERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENS9_14default_deleteISB_EEEE() unnamed_addr

declare void @_ZN2gl7GLImage13SetColorSpaceERKN3gfx10ColorSpaceE(%"class.gl::GLImage"*, %"class.gfx::ColorSpace"* dereferenceable(68)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl10GLImageGLX5FlushEv(%"class.gl::GLImageGLX"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2gl10GLImageGLX12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEmRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.gl::GLImageGLX"*, %"class.base::trace_event::ProcessMemoryDump"*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZNK2gl7GLImage12EmulatingRGBEv(%"class.gl::GLImage"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl7GLImage21IsInUseByWindowServerEv(%"class.gl::GLImage"*) unnamed_addr #1

declare void @_ZN2gl7GLImage26DisableInUseByWindowServerEv(%"class.gl::GLImage"*) unnamed_addr #1

declare i32 @_ZNK2gl7GLImage7GetTypeEv(%"class.gl::GLImage"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl7GLImage15HasMutableStateEv(%"class.gl::GLImage"*) unnamed_addr #1

declare %"class.gfx::NativePixmap"* @_ZN2gl7GLImage15GetNativePixmapEv(%"class.gl::GLImage"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
declare i32 @dup(i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN3x1112RefCountedFDC1Ei(%"class.x11::RefCountedFD"*, i32) unnamed_addr #1

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x114Dri316PixmapFromBufferERKNS_6PixmapERKNS_8DrawableERKjRKtSA_SA_RKhSC_RKNS_12RefCountedFDE(%"class.x11::Dri3"*, i32* dereferenceable(4), %"struct.x11::Drawable"* dereferenceable(4), i32* dereferenceable(4), i16* dereferenceable(2), i16* dereferenceable(2), i16* dereferenceable(2), i8* dereferenceable(1), i8* dereferenceable(1), %"class.x11::RefCountedFD"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3x1112RefCountedFDD1Ev(%"class.x11::RefCountedFD"*) unnamed_addr #2

declare i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
