; ModuleID = '../../net/dns/dns_response_result_extractor.cc'
source_filename = "../../net/dns/dns_response_result_extractor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon.54 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.net::DnsResponseResultExtractor" = type { %"class.net::DnsResponse"* }
%"class.net::DnsResponse" = type { %class.scoped_refptr, i64, %"class.net::DnsRecordParser", i8, %"class.std::__1::vector", %"class.std::__1::vector.7" }
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.net::DnsRecordParser" = type { i8*, i64, i64, i64, i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { i16*, i16*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i16* }
%"class.net::HostCache::Entry" = type <{ i32, [4 x i8], %"class.absl::optional", %"class.absl::optional.22", %"class.absl::optional.27", %"class.absl::optional.39", i32, i8, [3 x i8], %"class.base::TimeDelta", %"class.base::TimeTicks", i32, %"class.base::internal::ClampedNumeric", %"class.base::internal::ClampedNumeric", [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.14 }
%union.anon.14 = type { %"class.net::AddressList" }
%"class.net::AddressList" = type { %"class.std::__1::vector.15", %"class.std::__1::vector" }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair.17" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.net::IPEndPoint"* }
%"class.absl::optional.22" = type { %"class.absl::optional_internal::optional_data.23" }
%"class.absl::optional_internal::optional_data.23" = type { %"class.absl::optional_internal::optional_data_base.24" }
%"class.absl::optional_internal::optional_data_base.24" = type { %"class.absl::optional_internal::optional_data_dtor_base.25" }
%"class.absl::optional_internal::optional_data_dtor_base.25" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"class.std::__1::vector" }
%"class.absl::optional.27" = type { %"class.absl::optional_internal::optional_data.28" }
%"class.absl::optional_internal::optional_data.28" = type { %"class.absl::optional_internal::optional_data_base.29" }
%"class.absl::optional_internal::optional_data_base.29" = type { %"class.absl::optional_internal::optional_data_dtor_base.30" }
%"class.absl::optional_internal::optional_data_dtor_base.30" = type { i8, %union.anon.31 }
%union.anon.31 = type { %"class.std::__1::vector.32" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.net::HostPortPair"*, %"class.net::HostPortPair"*, %"class.std::__1::__compressed_pair.34" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.net::HostPortPair"* }
%"class.absl::optional.39" = type { %"class.absl::optional_internal::optional_data.40" }
%"class.absl::optional_internal::optional_data.40" = type { %"class.absl::optional_internal::optional_data_base.41" }
%"class.absl::optional_internal::optional_data_base.41" = type { %"class.absl::optional_internal::optional_data_dtor_base.42" }
%"class.absl::optional_internal::optional_data_dtor_base.42" = type { i8, %union.anon.43 }
%union.anon.43 = type { %"class.std::__1::vector.44" }
%"class.std::__1::vector.44" = type { i64*, i64, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::internal::ClampedNumeric" = type { i32 }
%"class.absl::optional.50" = type { %"class.absl::optional_internal::optional_data.51" }
%"class.absl::optional_internal::optional_data.51" = type { %"class.absl::optional_internal::optional_data_base.52" }
%"class.absl::optional_internal::optional_data_base.52" = type { %"class.absl::optional_internal::optional_data_dtor_base.53" }
%"class.absl::optional_internal::optional_data_dtor_base.53" = type { i8, %union.anon.54 }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.net::RecordParsed"* }
%"class.net::RecordParsed" = type { i32 (...)**, %"class.std::__1::basic_string", i16, i16, i32, %"class.std::__1::unique_ptr.59", %"class.base::Time" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.net::RecordRdata"* }
%"class.net::RecordRdata" = type { i32 (...)** }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.63" }
%"class.base::time_internal::TimeBase.63" = type { i64 }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174", %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"class.net::SrvRecordRdata"* }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"class.net::SrvRecordRdata" = type { %"class.net::RecordRdata", i16, i16, i16, %"class.std::__1::basic_string" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.144"*, i8, [7 x i8] }>
%"class.std::__1::allocator.144" = type { i8 }
%"class.std::__1::map.123" = type { %"class.std::__1::__tree.124" }
%"class.std::__1::__tree.124" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"class.net::SrvRecordRdata"**, %"class.net::SrvRecordRdata"**, %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.net::SrvRecordRdata"** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::ARecordRdata" = type <{ %"class.net::RecordRdata", %"class.net::IPAddress", [7 x i8] }>
%"class.net::AAAARecordRdata" = type <{ %"class.net::RecordRdata", %"class.net::IPAddress", [7 x i8] }>
%"class.net::TxtRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::vector" }
%"class.net::PtrRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node.161" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type.160" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.160" = type { %"struct.std::__1::pair.156" }
%"struct.std::__1::pair.156" = type { i16, [6 x i8], %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.133", %"class.std::__1::__compressed_pair.141", %"class.std::__1::__compressed_pair.146", %"class.std::__1::__compressed_pair.148", [4 x i8] }>
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135", %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { float }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.net::IntegrityRecordRdata" = type <{ %"class.net::RecordRdata", %"class.std::__1::vector.178", %"struct.std::__1::array.185", i8, [7 x i8] }>
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { i8*, i8*, %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { i8* }
%"struct.std::__1::array.185" = type { [32 x i8] }
%"class.net::HttpsRecordRdata" = type { %"class.net::RecordRdata" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.72", %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.net::DnsResourceRecord" = type { %"class.std::__1::basic_string", i16, i16, i32, %"class.base::BasicStringPiece", %"class.std::__1::basic_string" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.net::CnameRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::basic_string" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.102", [4 x i8] }>
%"struct.std::__1::atomic.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__cxx_atomic_impl.105" }
%"struct.std::__1::__cxx_atomic_impl.105" = type { %"struct.std::__1::__cxx_atomic_base_impl.106" }
%"struct.std::__1::__cxx_atomic_base_impl.106" = type { i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.79" }
%"struct.std::__1::pair.79" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKS7_SH_EEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIKN3net12RecordParsedENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_13move_iteratorINS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISI_E9referenceEEE5valueESE_E4typeENSC_IPKS6_EESI_SI_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRKS6_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_11__wrap_iterIPKS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueENSA_IPS6_EEE4typeESD_SF_SF_ = comdat any

$_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEiEEEvDpOT_ = comdat any

$_ZNSt3__112__hash_tableIPKN3net14SrvRecordRdataENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPKN3net14SrvRecordRdataENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN3net14SrvRecordRdataENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEtEEEvDpOT_ = comdat any

$_ZNSt3__112__hash_tableIPKN3net14SrvRecordRdataENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeItNS_13unordered_setIPKN3net14SrvRecordRdataENS_4hashIS6_EENS_8equal_toIS6_EENS_9allocatorIS6_EEEEEENS_19__map_value_compareItSE_NS_4lessItEELb1EEENSB_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_ = comdat any

@__const._ZN3net12_GLOBAL__N_122ExtractResponseRecordsERKNS_11DnsResponseEtPNSt3__16vectorINS4_10unique_ptrIKNS_12RecordParsedENS4_14default_deleteIS8_EEEENS4_9allocatorISB_EEEEPN4absl8optionalIN4base9TimeDeltaEEEPNS5_INS4_12basic_stringIcNS4_11char_traitsIcEENSC_IcEEEENSC_ISQ_EEEE.response_ttl = private unnamed_addr constant { { { { i8, [7 x i8], %union.anon.54 } } } } { { { { i8, [7 x i8], %union.anon.54 } } } { { { i8, [7 x i8], %union.anon.54 } } { { i8, [7 x i8], %union.anon.54 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.54 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } }, align 8
@.str.1 = private unnamed_addr constant [44 x i8] c"Net.DNS.DnsTask.AdditionalHttps.Unsolicited\00", align 1
@.str.2 = private unnamed_addr constant [42 x i8] c"Net.DNS.DnsTask.AdditionalHttps.Requested\00", align 1
@_ZZN3net12_GLOBAL__N_135SaveMetricsForAdditionalHttpsRecordERKNS_12RecordParsedEbE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net12_GLOBAL__N_135SaveMetricsForAdditionalHttpsRecordERKNS_12RecordParsedEbE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3net26DnsResponseResultExtractorC1EPKNS_11DnsResponseE = hidden unnamed_addr alias void (%"class.net::DnsResponseResultExtractor"*, %"class.net::DnsResponse"*), void (%"class.net::DnsResponseResultExtractor"*, %"class.net::DnsResponse"*)* @_ZN3net26DnsResponseResultExtractorC2EPKNS_11DnsResponseE
@_ZN3net26DnsResponseResultExtractorD1Ev = hidden unnamed_addr alias void (%"class.net::DnsResponseResultExtractor"*), void (%"class.net::DnsResponseResultExtractor"*)* @_ZN3net26DnsResponseResultExtractorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net26DnsResponseResultExtractorC2EPKNS_11DnsResponseE(%"class.net::DnsResponseResultExtractor"* nocapture, %"class.net::DnsResponse"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::DnsResponseResultExtractor", %"class.net::DnsResponseResultExtractor"* %0, i64 0, i32 0
  store %"class.net::DnsResponse"* %1, %"class.net::DnsResponse"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net26DnsResponseResultExtractorD2Ev(%"class.net::DnsResponseResultExtractor"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net26DnsResponseResultExtractor17ExtractDnsResultsENS_12DnsQueryTypeEPNS_9HostCache5EntryE(%"class.net::DnsResponseResultExtractor"* nocapture readonly, i32, %"class.net::HostCache::Entry"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.absl::optional.50", align 8
  %5 = alloca %"class.std::__1::vector.55", align 8
  %6 = alloca %"class.net::HostCache::Entry", align 8
  %7 = alloca %"class.std::__1::vector.44", align 16
  %8 = alloca %"class.net::HostCache::Entry", align 8
  %9 = alloca %"class.absl::optional.50", align 8
  %10 = alloca %"class.std::__1::vector.55", align 8
  %11 = alloca %"class.net::HostCache::Entry", align 8
  %12 = alloca %"class.std::__1::vector.44", align 16
  %13 = alloca %"class.net::HostCache::Entry", align 8
  %14 = alloca %"class.std::__1::unique_ptr.172", align 8
  %15 = alloca %"class.std::__1::map.123", align 8
  %16 = alloca %"class.net::SrvRecordRdata"*, align 8
  %17 = alloca i16, align 2
  %18 = alloca i16, align 2
  %19 = alloca %"class.std::__1::vector.55", align 8
  %20 = alloca %"class.absl::optional.50", align 8
  %21 = alloca %"class.net::HostCache::Entry", align 8
  %22 = alloca %"class.std::__1::vector.113", align 8
  %23 = alloca %"class.std::__1::vector.32", align 8
  %24 = alloca %"class.net::HostCache::Entry", align 8
  %25 = alloca %"class.std::__1::vector.55", align 8
  %26 = alloca %"class.absl::optional.50", align 8
  %27 = alloca %"class.net::HostCache::Entry", align 8
  %28 = alloca %"class.std::__1::vector.32", align 8
  %29 = alloca %"class.std::__1::basic_string", align 8
  %30 = alloca i32, align 4
  %31 = alloca %"class.net::HostCache::Entry", align 8
  %32 = alloca %"class.std::__1::vector.55", align 8
  %33 = alloca %"class.absl::optional.50", align 8
  %34 = alloca %"class.net::HostCache::Entry", align 8
  %35 = alloca %"class.std::__1::vector", align 8
  %36 = alloca %"class.net::HostCache::Entry", align 8
  %37 = alloca %"class.net::AddressList", align 8
  %38 = alloca %"class.std::__1::vector.55", align 8
  %39 = alloca %"class.absl::optional.50", align 8
  %40 = alloca %"class.std::__1::vector", align 16
  %41 = alloca %"class.net::HostCache::Entry", align 8
  %42 = alloca %"class.net::AddressList", align 8
  %43 = alloca %"class.std::__1::basic_string", align 8
  %44 = alloca %"class.net::IPAddress", align 1
  %45 = alloca %"class.net::IPEndPoint", align 2
  %46 = alloca %"class.std::__1::vector", align 16
  %47 = alloca %"class.net::HostCache::Entry", align 8
  switch i32 %1, label %1470 [
    i32 0, label %1471
    i32 1, label %48
    i32 2, label %48
    i32 3, label %283
    i32 4, label %423
    i32 5, label %600
    i32 6, label %1151
    i32 7, label %1309
  ]

48:                                               ; preds = %3, %3
  %49 = getelementptr inbounds %"class.net::DnsResponseResultExtractor", %"class.net::DnsResponseResultExtractor"* %0, i64 0, i32 0
  %50 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %49, align 8
  %51 = tail call zeroext i16 @_ZN3net19DnsQueryTypeToQtypeENS_12DnsQueryTypeE(i32 %1) #13
  %52 = bitcast %"class.std::__1::vector"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::vector.55"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #13
  %54 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %38, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %38, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #13
  %56 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 16, i1 false) #13
  store i8 0, i8* %56, align 8
  %57 = bitcast %"class.std::__1::vector"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #13
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %40, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %40, i64 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %40, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %57, i8 0, i64 24, i1 false) #13
  %61 = call fastcc i32 @_ZN3net12_GLOBAL__N_122ExtractResponseRecordsERKNS_11DnsResponseEtPNSt3__16vectorINS4_10unique_ptrIKNS_12RecordParsedENS4_14default_deleteIS8_EEEENS4_9allocatorISB_EEEEPN4absl8optionalIN4base9TimeDeltaEEEPNS5_INS4_12basic_stringIcNS4_11char_traitsIcEENSC_IcEEEENSC_ISQ_EEEE(%"class.net::DnsResponse"* dereferenceable(112) %50, i16 zeroext %51, %"class.std::__1::vector.55"* nonnull %38, %"class.absl::optional.50"* nonnull %39, %"class.std::__1::vector"* nonnull %40) #13
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %48
  %64 = bitcast %"class.net::HostCache::Entry"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %64) #13
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %41, i32 -800, i32 1, i8 0, i64 undef) #13
  %65 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %2, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %41) #13
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %41) #13
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %64) #13
  br label %232

66:                                               ; preds = %48
  %67 = bitcast %"class.net::AddressList"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %67) #13
  %68 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %42, i64 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %42, i64 0, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %42, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 48, i1 false) #13
  call void @_ZN3net11AddressListC1Ev(%"class.net::AddressList"* nonnull %42) #13
  %71 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #13
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 24, i1 false) #13
  %73 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %54, align 8
  %74 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %55, align 8
  %75 = icmp eq %"class.std::__1::unique_ptr"* %73, %74
  %76 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %68, align 8
  %77 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %69, align 8
  %78 = icmp eq %"class.net::IPEndPoint"* %76, %77
  br i1 %75, label %87, label %79

79:                                               ; preds = %66
  %80 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %44, i64 0, i32 0, i32 0, i32 0, i64 0
  %83 = icmp eq i16 %51, 1
  %84 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %85 = bitcast %"class.net::IPEndPoint"** %69 to i64*
  %86 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %42, i64 0, i32 0
  br label %89

87:                                               ; preds = %155, %66
  %88 = phi i1 [ %78, %66 ], [ %160, %155 ]
  br i1 %88, label %194, label %161

89:                                               ; preds = %155, %79
  %90 = phi i1 [ %78, %79 ], [ %160, %155 ]
  %91 = phi %"class.std::__1::unique_ptr"* [ %73, %79 ], [ %156, %155 ]
  br i1 %90, label %92, label %123

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %91, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %93, align 8
  %95 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %94, i64 0, i32 1
  %96 = icmp eq %"class.std::__1::basic_string"* %43, %95
  br i1 %96, label %123, label %97

97:                                               ; preds = %92
  %98 = load i8, i8* %81, align 1
  %99 = icmp slt i8 %98, 0
  %100 = bitcast %"class.std::__1::basic_string"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %99, label %113, label %104

104:                                              ; preds = %97
  br i1 %103, label %107, label %105

105:                                              ; preds = %104
  %106 = bitcast %"class.std::__1::basic_string"* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* align 8 %106, i64 24, i1 false) #13
  br label %123

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %94, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %43, i8* %109, i64 %111) #13
  br label %123

113:                                              ; preds = %97
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %94, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.std::__1::basic_string"* %95 to i8*
  %119 = zext i8 %102 to i64
  %120 = select i1 %103, i8* %115, i8* %118
  %121 = select i1 %103, i64 %117, i64 %119
  %122 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %43, i8* %120, i64 %121) #13
  br label %123

123:                                              ; preds = %113, %107, %105, %92, %89
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %82) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %82, i8 -86, i64 17, i1 false) #13
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %44) #13
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %91, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %124, align 8
  %126 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %125, i64 0, i32 2
  %127 = load i16, i16* %126, align 8
  br i1 %83, label %128, label %137

128:                                              ; preds = %123
  %129 = icmp eq i16 %127, 1
  br i1 %129, label %130, label %134

130:                                              ; preds = %128
  %131 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %125, i64 0, i32 5, i32 0, i32 0, i32 0
  %132 = bitcast %"class.net::RecordRdata"** %131 to %"class.net::ARecordRdata"**
  %133 = load %"class.net::ARecordRdata"*, %"class.net::ARecordRdata"** %132, align 8
  br label %134

134:                                              ; preds = %130, %128
  %135 = phi %"class.net::ARecordRdata"* [ %133, %130 ], [ null, %128 ]
  %136 = getelementptr inbounds %"class.net::ARecordRdata", %"class.net::ARecordRdata"* %135, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  br label %146

137:                                              ; preds = %123
  %138 = icmp eq i16 %127, 28
  br i1 %138, label %139, label %143

139:                                              ; preds = %137
  %140 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %125, i64 0, i32 5, i32 0, i32 0, i32 0
  %141 = bitcast %"class.net::RecordRdata"** %140 to %"class.net::AAAARecordRdata"**
  %142 = load %"class.net::AAAARecordRdata"*, %"class.net::AAAARecordRdata"** %141, align 8
  br label %143

143:                                              ; preds = %139, %137
  %144 = phi %"class.net::AAAARecordRdata"* [ %142, %139 ], [ null, %137 ]
  %145 = getelementptr inbounds %"class.net::AAAARecordRdata", %"class.net::AAAARecordRdata"* %144, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  br label %146

146:                                              ; preds = %143, %134
  %147 = phi i8* [ %145, %143 ], [ %136, %134 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %82, i8* align 1 %147, i64 17, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %84) #13
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %45, %"class.net::IPAddress"* nonnull dereferenceable(17) %44, i16 zeroext 0) #13
  %148 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %69, align 8
  %149 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %70, align 8
  %150 = icmp eq %"class.net::IPEndPoint"* %148, %149
  br i1 %150, label %154, label %151

151:                                              ; preds = %146
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %148, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %45) #13
  %152 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %148, i64 1
  %153 = ptrtoint %"class.net::IPEndPoint"* %152 to i64
  store i64 %153, i64* %85, align 8
  br label %155

154:                                              ; preds = %146
  call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.15"* nonnull %86, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %45) #13
  br label %155

155:                                              ; preds = %154, %151
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %45) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %84) #13
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %82) #13
  %156 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %91, i64 1
  %157 = icmp eq %"class.std::__1::unique_ptr"* %156, %74
  %158 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %68, align 8
  %159 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %69, align 8
  %160 = icmp eq %"class.net::IPEndPoint"* %158, %159
  br i1 %157, label %87, label %89

161:                                              ; preds = %87
  %162 = bitcast %"class.std::__1::vector"* %40 to <2 x i64>*
  %163 = load <2 x i64>, <2 x i64>* %162, align 16
  %164 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %46, i64 0, i32 0, i32 1
  %165 = bitcast %"class.std::__1::vector"* %46 to <2 x i64>*
  store <2 x i64> %163, <2 x i64>* %165, align 16
  %166 = bitcast %"class.std::__1::basic_string"** %60 to i64*
  %167 = load i64, i64* %166, align 16
  %168 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %46, i64 0, i32 0, i32 2, i32 0, i32 0
  %169 = bitcast %"class.std::__1::basic_string"** %168 to i64*
  store i64 %167, i64* %169, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %57, i8 0, i64 24, i1 false) #13
  call void @_ZN3net11AddressList13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::AddressList"* nonnull %42, %"class.std::__1::vector"* nonnull %46) #13
  %170 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %46, i64 0, i32 0, i32 0
  %171 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %170, align 16
  %172 = icmp eq %"class.std::__1::basic_string"* %171, null
  br i1 %172, label %194, label %173

173:                                              ; preds = %161
  %174 = bitcast %"class.std::__1::basic_string"* %171 to i8*
  %175 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %164, align 8
  %176 = icmp eq %"class.std::__1::basic_string"* %175, %171
  br i1 %176, label %192, label %177

177:                                              ; preds = %173, %187
  %178 = phi %"class.std::__1::basic_string"* [ %179, %187 ], [ %175, %173 ]
  %179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %178, i64 -1
  %180 = bitcast %"class.std::__1::basic_string"* %179 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %180, i64 0, i32 1, i32 0
  %182 = load i8, i8* %181, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %187

184:                                              ; preds = %177
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %179, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  call void @_ZdlPv(i8* %186) #14
  br label %187

187:                                              ; preds = %184, %177
  %188 = icmp eq %"class.std::__1::basic_string"* %179, %171
  br i1 %188, label %189, label %177

189:                                              ; preds = %187
  %190 = bitcast %"class.std::__1::vector"* %46 to i8**
  %191 = load i8*, i8** %190, align 16
  br label %192

192:                                              ; preds = %189, %173
  %193 = phi i8* [ %191, %189 ], [ %174, %173 ]
  store %"class.std::__1::basic_string"* %171, %"class.std::__1::basic_string"** %164, align 8
  call void @_ZdlPv(i8* %193) #14
  br label %194

194:                                              ; preds = %192, %161, %87
  %195 = bitcast %"class.net::HostCache::Entry"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %195) #13
  %196 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %68, align 8
  %197 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %69, align 8
  %198 = icmp eq %"class.net::IPEndPoint"* %196, %197
  %199 = select i1 %198, i32 -105, i32 0
  %200 = load i8, i8* %56, align 8
  %201 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %39, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %"class.net::AddressList"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %203) #13
  %204 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %47, i64 0, i32 0
  store i32 %199, i32* %204, align 8
  %205 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %205, align 8
  %206 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %207 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %47, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %208 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %47, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %209 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %47, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %210 = bitcast %union.anon.43* %209 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %210, i8 0, i64 24, i1 false) #13
  %211 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %47, i64 0, i32 6
  %212 = bitcast %union.anon.14* %206 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %212, i8 0, i64 49, i1 false) #13
  %213 = bitcast %union.anon.26* %207 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %213, i8 0, i64 25, i1 false) #13
  %214 = bitcast %union.anon.31* %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %214, i8 0, i64 25, i1 false) #13
  store i32 1, i32* %211, align 8
  %215 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %47, i64 0, i32 7
  store i8 0, i8* %215, align 4
  %216 = icmp eq i8 %200, 0
  %217 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %47, i64 0, i32 9, i32 0
  %218 = select i1 %216, i64 -1000000, i64 %202
  store i64 %218, i64* %217, align 8
  %219 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %47, i64 0, i32 10, i32 0, i32 0
  store i64 0, i64* %219, align 8
  %220 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %47, i64 0, i32 11
  store i32 -1, i32* %220, align 8
  %221 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %47, i64 0, i32 12, i32 0
  store i32 0, i32* %221, align 4
  %222 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %47, i64 0, i32 13, i32 0
  store i32 0, i32* %222, align 8
  call void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"* nonnull %37, %"class.net::AddressList"* nonnull dereferenceable(48) %42) #13
  %223 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"* %223, %"class.net::AddressList"* nonnull dereferenceable(48) %37) #13
  store i8 1, i8* %205, align 8
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %37) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %203) #13
  %224 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %2, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %47) #13
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %47) #13
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %195) #13
  %225 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %225, i64 0, i32 1, i32 0
  %227 = load i8, i8* %226, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %229, label %231

229:                                              ; preds = %194
  %230 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %230) #14
  br label %231

231:                                              ; preds = %229, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #13
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %67) #13
  br label %232

232:                                              ; preds = %231, %63
  %233 = phi i32 [ %61, %63 ], [ 0, %231 ]
  %234 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %58, align 16
  %235 = icmp eq %"class.std::__1::basic_string"* %234, null
  br i1 %235, label %257, label %236

236:                                              ; preds = %232
  %237 = bitcast %"class.std::__1::basic_string"* %234 to i8*
  %238 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %59, align 8
  %239 = icmp eq %"class.std::__1::basic_string"* %238, %234
  br i1 %239, label %255, label %240

240:                                              ; preds = %236, %250
  %241 = phi %"class.std::__1::basic_string"* [ %242, %250 ], [ %238, %236 ]
  %242 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %241, i64 -1
  %243 = bitcast %"class.std::__1::basic_string"* %242 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %244 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %243, i64 0, i32 1, i32 0
  %245 = load i8, i8* %244, align 1
  %246 = icmp slt i8 %245, 0
  br i1 %246, label %247, label %250

247:                                              ; preds = %240
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %242, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i8*, i8** %248, align 8
  call void @_ZdlPv(i8* %249) #14
  br label %250

250:                                              ; preds = %247, %240
  %251 = icmp eq %"class.std::__1::basic_string"* %242, %234
  br i1 %251, label %252, label %240

252:                                              ; preds = %250
  %253 = bitcast %"class.std::__1::vector"* %40 to i8**
  %254 = load i8*, i8** %253, align 16
  br label %255

255:                                              ; preds = %252, %236
  %256 = phi i8* [ %254, %252 ], [ %237, %236 ]
  store %"class.std::__1::basic_string"* %234, %"class.std::__1::basic_string"** %59, align 8
  call void @_ZdlPv(i8* %256) #14
  br label %257

257:                                              ; preds = %255, %232
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #13
  %258 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %54, align 8
  %259 = icmp eq %"class.std::__1::unique_ptr"* %258, null
  br i1 %259, label %282, label %260

260:                                              ; preds = %257
  %261 = bitcast %"class.std::__1::unique_ptr"* %258 to i8*
  %262 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %55, align 8
  %263 = icmp eq %"class.std::__1::unique_ptr"* %262, %258
  br i1 %263, label %280, label %264

264:                                              ; preds = %260, %275
  %265 = phi %"class.std::__1::unique_ptr"* [ %266, %275 ], [ %262, %260 ]
  %266 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %265, i64 -1
  %267 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %266, i64 0, i32 0, i32 0, i32 0
  %268 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %267, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %267, align 8
  %269 = icmp eq %"class.net::RecordParsed"* %268, null
  br i1 %269, label %275, label %270

270:                                              ; preds = %264
  %271 = bitcast %"class.net::RecordParsed"* %268 to void (%"class.net::RecordParsed"*)***
  %272 = load void (%"class.net::RecordParsed"*)**, void (%"class.net::RecordParsed"*)*** %271, align 8
  %273 = getelementptr inbounds void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %272, i64 1
  %274 = load void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %273, align 8
  call void %274(%"class.net::RecordParsed"* nonnull %268) #13
  br label %275

275:                                              ; preds = %270, %264
  %276 = icmp eq %"class.std::__1::unique_ptr"* %266, %258
  br i1 %276, label %277, label %264

277:                                              ; preds = %275
  %278 = bitcast %"class.std::__1::vector.55"* %38 to i8**
  %279 = load i8*, i8** %278, align 8
  br label %280

280:                                              ; preds = %277, %260
  %281 = phi i8* [ %279, %277 ], [ %261, %260 ]
  store %"class.std::__1::unique_ptr"* %258, %"class.std::__1::unique_ptr"** %55, align 8
  call void @_ZdlPv(i8* %281) #14
  br label %282

282:                                              ; preds = %257, %280
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52)
  br label %1471

283:                                              ; preds = %3
  %284 = getelementptr inbounds %"class.net::DnsResponseResultExtractor", %"class.net::DnsResponseResultExtractor"* %0, i64 0, i32 0
  %285 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %284, align 8
  %286 = bitcast %"class.std::__1::vector.55"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %286) #13
  %287 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %32, i64 0, i32 0, i32 0
  %288 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %32, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %286, i8 0, i64 24, i1 false) #13
  %289 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %289) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %289, i8 -86, i64 16, i1 false) #13
  store i8 0, i8* %289, align 8
  %290 = call fastcc i32 @_ZN3net12_GLOBAL__N_122ExtractResponseRecordsERKNS_11DnsResponseEtPNSt3__16vectorINS4_10unique_ptrIKNS_12RecordParsedENS4_14default_deleteIS8_EEEENS4_9allocatorISB_EEEEPN4absl8optionalIN4base9TimeDeltaEEEPNS5_INS4_12basic_stringIcNS4_11char_traitsIcEENSC_IcEEEENSC_ISQ_EEEE(%"class.net::DnsResponse"* dereferenceable(112) %285, i16 zeroext 16, %"class.std::__1::vector.55"* nonnull %32, %"class.absl::optional.50"* nonnull %33, %"class.std::__1::vector"* null) #13
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %296, label %292

292:                                              ; preds = %283
  %293 = bitcast %"class.net::HostCache::Entry"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %293) #13
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %34, i32 -800, i32 1, i8 0, i64 undef) #13
  %294 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %2, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %34) #13
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %34) #13
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %293) #13
  %295 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %287, align 8
  br label %396

296:                                              ; preds = %283
  %297 = bitcast %"class.std::__1::vector"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %297) #13
  %298 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %35, i64 0, i32 0, i32 0
  %299 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %35, i64 0, i32 0, i32 1
  %300 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %35, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %297, i8 0, i64 24, i1 false) #13
  %301 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %287, align 8
  %302 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %288, align 8
  %303 = icmp eq %"class.std::__1::unique_ptr"* %301, %302
  br i1 %303, label %311, label %375

304:                                              ; preds = %386
  %305 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %298, align 8
  %306 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %299, align 8
  %307 = ptrtoint %"class.std::__1::basic_string"* %305 to i64
  %308 = ptrtoint %"class.std::__1::basic_string"* %306 to i64
  %309 = bitcast %"class.std::__1::basic_string"** %300 to i64*
  %310 = load i64, i64* %309, align 8
  br label %311

311:                                              ; preds = %304, %296
  %312 = phi i64 [ %310, %304 ], [ 0, %296 ]
  %313 = phi i64 [ %308, %304 ], [ 0, %296 ]
  %314 = phi i64 [ %307, %304 ], [ 0, %296 ]
  %315 = phi %"class.std::__1::basic_string"* [ %306, %304 ], [ null, %296 ]
  %316 = phi %"class.std::__1::basic_string"* [ %305, %304 ], [ null, %296 ]
  %317 = bitcast %"class.net::HostCache::Entry"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %317) #13
  %318 = icmp eq %"class.std::__1::basic_string"* %316, %315
  %319 = select i1 %318, i32 -105, i32 0
  %320 = load i8, i8* %289, align 8
  %321 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %33, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %322 = load i64, i64* %321, align 8
  %323 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 0
  store i32 %319, i32* %323, align 8
  %324 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %324, align 8
  %325 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %326 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %327 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %328 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %329 = bitcast %union.anon.43* %328 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %329, i8 0, i64 24, i1 false) #13
  %330 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 6
  %331 = bitcast %union.anon.14* %325 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %331, i8 0, i64 48, i1 false) #13
  %332 = getelementptr inbounds %union.anon.26, %union.anon.26* %326, i64 1
  %333 = bitcast %union.anon.26* %332 to i8*
  store i8 0, i8* %333, align 8
  %334 = bitcast %union.anon.31* %327 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %334, i8 0, i64 25, i1 false) #13
  store i32 1, i32* %330, align 8
  %335 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 7
  store i8 0, i8* %335, align 4
  %336 = icmp eq i8 %320, 0
  %337 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 9, i32 0
  %338 = select i1 %336, i64 -1000000, i64 %322
  store i64 %338, i64* %337, align 8
  %339 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 10, i32 0, i32 0
  store i64 0, i64* %339, align 8
  %340 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 11
  store i32 -1, i32* %340, align 8
  %341 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 12, i32 0
  store i32 0, i32* %341, align 4
  %342 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 13, i32 0
  store i32 0, i32* %342, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %297, i8 0, i64 24, i1 false) #13
  %343 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %344 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %345 = bitcast %"class.std::__1::vector"* %343 to i64*
  store i64 %314, i64* %345, align 8
  %346 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %347 = bitcast %"class.std::__1::basic_string"** %346 to i64*
  store i64 %313, i64* %347, align 8
  %348 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %36, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %349 = bitcast %"class.std::__1::basic_string"** %348 to i64*
  store i64 %312, i64* %349, align 8
  store i8 1, i8* %344, align 8
  %350 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %2, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %36) #13
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %36) #13
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %317) #13
  %351 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %298, align 8
  %352 = icmp eq %"class.std::__1::basic_string"* %351, null
  br i1 %352, label %374, label %353

353:                                              ; preds = %311
  %354 = bitcast %"class.std::__1::basic_string"* %351 to i8*
  %355 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %299, align 8
  %356 = icmp eq %"class.std::__1::basic_string"* %355, %351
  br i1 %356, label %372, label %357

357:                                              ; preds = %353, %367
  %358 = phi %"class.std::__1::basic_string"* [ %359, %367 ], [ %355, %353 ]
  %359 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %358, i64 -1
  %360 = bitcast %"class.std::__1::basic_string"* %359 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %361 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %360, i64 0, i32 1, i32 0
  %362 = load i8, i8* %361, align 1
  %363 = icmp slt i8 %362, 0
  br i1 %363, label %364, label %367

364:                                              ; preds = %357
  %365 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %359, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = load i8*, i8** %365, align 8
  call void @_ZdlPv(i8* %366) #14
  br label %367

367:                                              ; preds = %364, %357
  %368 = icmp eq %"class.std::__1::basic_string"* %359, %351
  br i1 %368, label %369, label %357

369:                                              ; preds = %367
  %370 = bitcast %"class.std::__1::vector"* %35 to i8**
  %371 = load i8*, i8** %370, align 8
  br label %372

372:                                              ; preds = %369, %353
  %373 = phi i8* [ %371, %369 ], [ %354, %353 ]
  store %"class.std::__1::basic_string"* %351, %"class.std::__1::basic_string"** %299, align 8
  call void @_ZdlPv(i8* %373) #14
  br label %374

374:                                              ; preds = %372, %311
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %297) #13
  br label %396

375:                                              ; preds = %296, %386
  %376 = phi %"class.std::__1::unique_ptr"* [ %394, %386 ], [ %301, %296 ]
  %377 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %376, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %377, align 8
  %379 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %378, i64 0, i32 2
  %380 = load i16, i16* %379, align 8
  %381 = icmp eq i16 %380, 16
  br i1 %381, label %382, label %386

382:                                              ; preds = %375
  %383 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %378, i64 0, i32 5, i32 0, i32 0, i32 0
  %384 = bitcast %"class.net::RecordRdata"** %383 to %"class.net::TxtRecordRdata"**
  %385 = load %"class.net::TxtRecordRdata"*, %"class.net::TxtRecordRdata"** %384, align 8
  br label %386

386:                                              ; preds = %382, %375
  %387 = phi %"class.net::TxtRecordRdata"* [ %385, %382 ], [ null, %375 ]
  %388 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %299, align 8
  %389 = getelementptr inbounds %"class.net::TxtRecordRdata", %"class.net::TxtRecordRdata"* %387, i64 0, i32 1, i32 0, i32 0
  %390 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %389, align 8
  %391 = getelementptr inbounds %"class.net::TxtRecordRdata", %"class.net::TxtRecordRdata"* %387, i64 0, i32 1, i32 0, i32 1
  %392 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %391, align 8
  %393 = call %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_11__wrap_iterIPKS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueENSA_IPS6_EEE4typeESD_SF_SF_(%"class.std::__1::vector"* nonnull %35, %"class.std::__1::basic_string"* %388, %"class.std::__1::basic_string"* %390, %"class.std::__1::basic_string"* %392) #13
  %394 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %376, i64 1
  %395 = icmp eq %"class.std::__1::unique_ptr"* %394, %302
  br i1 %395, label %304, label %375

396:                                              ; preds = %374, %292
  %397 = phi %"class.std::__1::unique_ptr"* [ %295, %292 ], [ %301, %374 ]
  %398 = phi i32 [ %290, %292 ], [ 0, %374 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %289) #13
  %399 = icmp eq %"class.std::__1::unique_ptr"* %397, null
  br i1 %399, label %422, label %400

400:                                              ; preds = %396
  %401 = bitcast %"class.std::__1::unique_ptr"* %397 to i8*
  %402 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %288, align 8
  %403 = icmp eq %"class.std::__1::unique_ptr"* %402, %397
  br i1 %403, label %420, label %404

404:                                              ; preds = %400, %415
  %405 = phi %"class.std::__1::unique_ptr"* [ %406, %415 ], [ %402, %400 ]
  %406 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %405, i64 -1
  %407 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %406, i64 0, i32 0, i32 0, i32 0
  %408 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %407, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %407, align 8
  %409 = icmp eq %"class.net::RecordParsed"* %408, null
  br i1 %409, label %415, label %410

410:                                              ; preds = %404
  %411 = bitcast %"class.net::RecordParsed"* %408 to void (%"class.net::RecordParsed"*)***
  %412 = load void (%"class.net::RecordParsed"*)**, void (%"class.net::RecordParsed"*)*** %411, align 8
  %413 = getelementptr inbounds void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %412, i64 1
  %414 = load void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %413, align 8
  call void %414(%"class.net::RecordParsed"* nonnull %408) #13
  br label %415

415:                                              ; preds = %410, %404
  %416 = icmp eq %"class.std::__1::unique_ptr"* %406, %397
  br i1 %416, label %417, label %404

417:                                              ; preds = %415
  %418 = bitcast %"class.std::__1::vector.55"* %32 to i8**
  %419 = load i8*, i8** %418, align 8
  br label %420

420:                                              ; preds = %417, %400
  %421 = phi i8* [ %419, %417 ], [ %401, %400 ]
  store %"class.std::__1::unique_ptr"* %397, %"class.std::__1::unique_ptr"** %288, align 8
  call void @_ZdlPv(i8* %421) #14
  br label %422

422:                                              ; preds = %396, %420
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %286) #13
  br label %1471

423:                                              ; preds = %3
  %424 = getelementptr inbounds %"class.net::DnsResponseResultExtractor", %"class.net::DnsResponseResultExtractor"* %0, i64 0, i32 0
  %425 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %424, align 8
  %426 = bitcast %"class.std::__1::vector.55"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %426) #13
  %427 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %25, i64 0, i32 0, i32 0
  %428 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %25, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %426, i8 0, i64 24, i1 false) #13
  %429 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %429) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %429, i8 -86, i64 16, i1 false) #13
  store i8 0, i8* %429, align 8
  %430 = call fastcc i32 @_ZN3net12_GLOBAL__N_122ExtractResponseRecordsERKNS_11DnsResponseEtPNSt3__16vectorINS4_10unique_ptrIKNS_12RecordParsedENS4_14default_deleteIS8_EEEENS4_9allocatorISB_EEEEPN4absl8optionalIN4base9TimeDeltaEEEPNS5_INS4_12basic_stringIcNS4_11char_traitsIcEENSC_IcEEEENSC_ISQ_EEEE(%"class.net::DnsResponse"* dereferenceable(112) %425, i16 zeroext 12, %"class.std::__1::vector.55"* nonnull %25, %"class.absl::optional.50"* nonnull %26, %"class.std::__1::vector"* null) #13
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %436, label %432

432:                                              ; preds = %423
  %433 = bitcast %"class.net::HostCache::Entry"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %433) #13
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %27, i32 -800, i32 1, i8 0, i64 undef) #13
  %434 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %2, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %27) #13
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %27) #13
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %433) #13
  %435 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %427, align 8
  br label %573

436:                                              ; preds = %423
  %437 = bitcast %"class.std::__1::vector.32"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %437) #13
  %438 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %28, i64 0, i32 0, i32 0
  %439 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %28, i64 0, i32 0, i32 1
  %440 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %28, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %437, i8 0, i64 24, i1 false) #13
  %441 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %427, align 8
  %442 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %428, align 8
  %443 = icmp eq %"class.std::__1::unique_ptr"* %441, %442
  br i1 %443, label %459, label %444

444:                                              ; preds = %436
  %445 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %446 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %447 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %448 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %449 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %448, i64 0, i32 1, i32 0
  %450 = bitcast i32* %30 to i8*
  %451 = bitcast %"class.net::HostPortPair"** %439 to i64*
  br label %523

452:                                              ; preds = %570
  %453 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %438, align 8
  %454 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %439, align 8
  %455 = ptrtoint %"class.net::HostPortPair"* %453 to i64
  %456 = ptrtoint %"class.net::HostPortPair"* %454 to i64
  %457 = bitcast %"class.net::HostPortPair"** %440 to i64*
  %458 = load i64, i64* %457, align 8
  br label %459

459:                                              ; preds = %452, %436
  %460 = phi i64 [ %458, %452 ], [ 0, %436 ]
  %461 = phi i64 [ %456, %452 ], [ 0, %436 ]
  %462 = phi i64 [ %455, %452 ], [ 0, %436 ]
  %463 = phi %"class.net::HostPortPair"* [ %454, %452 ], [ null, %436 ]
  %464 = phi %"class.net::HostPortPair"* [ %453, %452 ], [ null, %436 ]
  %465 = bitcast %"class.net::HostCache::Entry"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %465) #13
  %466 = icmp eq %"class.net::HostPortPair"* %464, %463
  %467 = select i1 %466, i32 -105, i32 0
  %468 = load i8, i8* %429, align 8
  %469 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %470 = load i64, i64* %469, align 8
  %471 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 0
  store i32 %467, i32* %471, align 8
  %472 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %472, align 8
  %473 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %474 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %475 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %476 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %477 = bitcast %union.anon.43* %476 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %477, i8 0, i64 24, i1 false) #13
  %478 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 6
  %479 = bitcast %union.anon.14* %473 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %479, i8 0, i64 49, i1 false) #13
  %480 = bitcast %union.anon.26* %474 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %480, i8 0, i64 24, i1 false) #13
  %481 = getelementptr inbounds %union.anon.31, %union.anon.31* %475, i64 1
  %482 = bitcast %union.anon.31* %481 to i8*
  store i8 0, i8* %482, align 8
  store i32 1, i32* %478, align 8
  %483 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 7
  store i8 0, i8* %483, align 4
  %484 = icmp eq i8 %468, 0
  %485 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 9, i32 0
  %486 = select i1 %484, i64 -1000000, i64 %470
  store i64 %486, i64* %485, align 8
  %487 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 10, i32 0, i32 0
  store i64 0, i64* %487, align 8
  %488 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 11
  store i32 -1, i32* %488, align 8
  %489 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 12, i32 0
  store i32 0, i32* %489, align 4
  %490 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 13, i32 0
  store i32 0, i32* %490, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %437, i8 0, i64 24, i1 false) #13
  %491 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %492 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %493 = bitcast %"class.std::__1::vector.32"* %491 to i64*
  store i64 %462, i64* %493, align 8
  %494 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %495 = bitcast %"class.net::HostPortPair"** %494 to i64*
  store i64 %461, i64* %495, align 8
  %496 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %31, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %497 = bitcast %"class.net::HostPortPair"** %496 to i64*
  store i64 %460, i64* %497, align 8
  store i8 1, i8* %492, align 8
  %498 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %2, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %31) #13
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %465) #13
  %499 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %438, align 8
  %500 = icmp eq %"class.net::HostPortPair"* %499, null
  br i1 %500, label %522, label %501

501:                                              ; preds = %459
  %502 = bitcast %"class.net::HostPortPair"* %499 to i8*
  %503 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %439, align 8
  %504 = icmp eq %"class.net::HostPortPair"* %503, %499
  br i1 %504, label %520, label %505

505:                                              ; preds = %501, %515
  %506 = phi %"class.net::HostPortPair"* [ %507, %515 ], [ %503, %501 ]
  %507 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %506, i64 -1
  %508 = bitcast %"class.net::HostPortPair"* %507 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %509 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %508, i64 0, i32 1, i32 0
  %510 = load i8, i8* %509, align 1
  %511 = icmp slt i8 %510, 0
  br i1 %511, label %512, label %515

512:                                              ; preds = %505
  %513 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %507, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %514 = load i8*, i8** %513, align 8
  call void @_ZdlPv(i8* %514) #14
  br label %515

515:                                              ; preds = %512, %505
  %516 = icmp eq %"class.net::HostPortPair"* %507, %499
  br i1 %516, label %517, label %505

517:                                              ; preds = %515
  %518 = bitcast %"class.std::__1::vector.32"* %28 to i8**
  %519 = load i8*, i8** %518, align 8
  br label %520

520:                                              ; preds = %517, %501
  %521 = phi i8* [ %519, %517 ], [ %502, %501 ]
  store %"class.net::HostPortPair"* %499, %"class.net::HostPortPair"** %439, align 8
  call void @_ZdlPv(i8* %521) #14
  br label %522

522:                                              ; preds = %520, %459
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %437) #13
  br label %573

523:                                              ; preds = %570, %444
  %524 = phi %"class.std::__1::unique_ptr"* [ %441, %444 ], [ %571, %570 ]
  %525 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %524, i64 0, i32 0, i32 0, i32 0
  %526 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %525, align 8
  %527 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %526, i64 0, i32 2
  %528 = load i16, i16* %527, align 8
  %529 = icmp eq i16 %528, 12
  br i1 %529, label %530, label %534

530:                                              ; preds = %523
  %531 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %526, i64 0, i32 5, i32 0, i32 0, i32 0
  %532 = bitcast %"class.net::RecordRdata"** %531 to %"class.net::PtrRecordRdata"**
  %533 = load %"class.net::PtrRecordRdata"*, %"class.net::PtrRecordRdata"** %532, align 8
  br label %534

534:                                              ; preds = %530, %523
  %535 = phi %"class.net::PtrRecordRdata"* [ %533, %530 ], [ null, %523 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %445) #13
  %536 = getelementptr inbounds %"class.net::PtrRecordRdata", %"class.net::PtrRecordRdata"* %535, i64 0, i32 1
  %537 = bitcast %"class.std::__1::basic_string"* %536 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %538 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %537, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %445, i8 -86, i64 24, i1 false) #13
  %539 = load i8, i8* %538, align 1, !noalias !2
  %540 = icmp slt i8 %539, 0
  br i1 %540, label %543, label %541

541:                                              ; preds = %534
  %542 = bitcast %"class.std::__1::basic_string"* %536 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %445, i8* align 8 %542, i64 24, i1 false) #13
  br label %548

543:                                              ; preds = %534
  %544 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %536, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %545 = load i8*, i8** %544, align 8, !noalias !2
  %546 = getelementptr inbounds %"class.net::PtrRecordRdata", %"class.net::PtrRecordRdata"* %535, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %547 = load i64, i64* %546, align 8, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %29, i8* %545, i64 %547) #13
  br label %548

548:                                              ; preds = %543, %541
  %549 = load i8, i8* %449, align 1
  %550 = icmp slt i8 %549, 0
  %551 = load i64, i64* %447, align 8
  %552 = zext i8 %549 to i64
  %553 = select i1 %550, i64 %551, i64 %552
  %554 = icmp eq i64 %553, 0
  br i1 %554, label %565, label %555

555:                                              ; preds = %548
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %450) #13
  store i32 0, i32* %30, align 4
  %556 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %439, align 8
  %557 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %440, align 8
  %558 = icmp ult %"class.net::HostPortPair"* %556, %557
  br i1 %558, label %559, label %562

559:                                              ; preds = %555
  call void @_ZN3net12HostPortPairC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostPortPair"* %556, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %29, i16 zeroext 0) #13
  %560 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %556, i64 1
  %561 = ptrtoint %"class.net::HostPortPair"* %560 to i64
  store i64 %561, i64* %451, align 8
  br label %563

562:                                              ; preds = %555
  call void @_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEiEEEvDpOT_(%"class.std::__1::vector.32"* nonnull %28, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %29, i32* nonnull dereferenceable(4) %30) #13
  br label %563

563:                                              ; preds = %562, %559
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %450) #13
  %564 = load i8, i8* %449, align 1
  br label %565

565:                                              ; preds = %563, %548
  %566 = phi i8 [ %564, %563 ], [ %549, %548 ]
  %567 = icmp slt i8 %566, 0
  br i1 %567, label %568, label %570

568:                                              ; preds = %565
  %569 = load i8*, i8** %446, align 8
  call void @_ZdlPv(i8* %569) #14
  br label %570

570:                                              ; preds = %568, %565
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %445) #13
  %571 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %524, i64 1
  %572 = icmp eq %"class.std::__1::unique_ptr"* %571, %442
  br i1 %572, label %452, label %523

573:                                              ; preds = %522, %432
  %574 = phi %"class.std::__1::unique_ptr"* [ %435, %432 ], [ %441, %522 ]
  %575 = phi i32 [ %430, %432 ], [ 0, %522 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %429) #13
  %576 = icmp eq %"class.std::__1::unique_ptr"* %574, null
  br i1 %576, label %599, label %577

577:                                              ; preds = %573
  %578 = bitcast %"class.std::__1::unique_ptr"* %574 to i8*
  %579 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %428, align 8
  %580 = icmp eq %"class.std::__1::unique_ptr"* %579, %574
  br i1 %580, label %597, label %581

581:                                              ; preds = %577, %592
  %582 = phi %"class.std::__1::unique_ptr"* [ %583, %592 ], [ %579, %577 ]
  %583 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %582, i64 -1
  %584 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %583, i64 0, i32 0, i32 0, i32 0
  %585 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %584, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %584, align 8
  %586 = icmp eq %"class.net::RecordParsed"* %585, null
  br i1 %586, label %592, label %587

587:                                              ; preds = %581
  %588 = bitcast %"class.net::RecordParsed"* %585 to void (%"class.net::RecordParsed"*)***
  %589 = load void (%"class.net::RecordParsed"*)**, void (%"class.net::RecordParsed"*)*** %588, align 8
  %590 = getelementptr inbounds void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %589, i64 1
  %591 = load void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %590, align 8
  call void %591(%"class.net::RecordParsed"* nonnull %585) #13
  br label %592

592:                                              ; preds = %587, %581
  %593 = icmp eq %"class.std::__1::unique_ptr"* %583, %574
  br i1 %593, label %594, label %581

594:                                              ; preds = %592
  %595 = bitcast %"class.std::__1::vector.55"* %25 to i8**
  %596 = load i8*, i8** %595, align 8
  br label %597

597:                                              ; preds = %594, %577
  %598 = phi i8* [ %596, %594 ], [ %578, %577 ]
  store %"class.std::__1::unique_ptr"* %574, %"class.std::__1::unique_ptr"** %428, align 8
  call void @_ZdlPv(i8* %598) #14
  br label %599

599:                                              ; preds = %573, %597
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %426) #13
  br label %1471

600:                                              ; preds = %3
  %601 = getelementptr inbounds %"class.net::DnsResponseResultExtractor", %"class.net::DnsResponseResultExtractor"* %0, i64 0, i32 0
  %602 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %601, align 8
  %603 = bitcast %"class.std::__1::vector.55"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %603) #13
  %604 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %19, i64 0, i32 0, i32 0
  %605 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %19, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %603, i8 0, i64 24, i1 false) #13
  %606 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %606) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %606, i8 -86, i64 16, i1 false) #13
  store i8 0, i8* %606, align 8
  %607 = call fastcc i32 @_ZN3net12_GLOBAL__N_122ExtractResponseRecordsERKNS_11DnsResponseEtPNSt3__16vectorINS4_10unique_ptrIKNS_12RecordParsedENS4_14default_deleteIS8_EEEENS4_9allocatorISB_EEEEPN4absl8optionalIN4base9TimeDeltaEEEPNS5_INS4_12basic_stringIcNS4_11char_traitsIcEENSC_IcEEEENSC_ISQ_EEEE(%"class.net::DnsResponse"* dereferenceable(112) %602, i16 zeroext 33, %"class.std::__1::vector.55"* nonnull %19, %"class.absl::optional.50"* nonnull %20, %"class.std::__1::vector"* null) #13
  %608 = icmp eq i32 %607, 0
  br i1 %608, label %613, label %609

609:                                              ; preds = %600
  %610 = bitcast %"class.net::HostCache::Entry"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %610) #13
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %21, i32 -800, i32 1, i8 0, i64 undef) #13
  %611 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %2, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %21) #13
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %610) #13
  %612 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %604, align 8
  br label %1124

613:                                              ; preds = %600
  %614 = bitcast %"class.std::__1::vector.113"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %614) #13
  %615 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %22, i64 0, i32 0, i32 0
  %616 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %22, i64 0, i32 0, i32 1
  %617 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %22, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %614, i8 0, i64 24, i1 false) #13
  %618 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %604, align 8
  %619 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %605, align 8
  %620 = icmp eq %"class.std::__1::unique_ptr"* %618, %619
  br i1 %620, label %625, label %621

621:                                              ; preds = %613
  %622 = bitcast %"class.net::SrvRecordRdata"*** %616 to i64*
  %623 = bitcast %"class.std::__1::vector.113"* %22 to i64*
  %624 = bitcast %"class.net::SrvRecordRdata"*** %617 to i64*
  br label %1032

625:                                              ; preds = %1116, %613
  %626 = phi %"class.net::SrvRecordRdata"** [ null, %613 ], [ %1118, %1116 ]
  %627 = phi %"class.net::SrvRecordRdata"** [ null, %613 ], [ %1119, %1116 ]
  %628 = bitcast %"class.std::__1::vector.32"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %628) #13
  %629 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %23, i64 0, i32 0, i32 0
  %630 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %23, i64 0, i32 0, i32 1
  %631 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %23, i64 0, i32 0, i32 2, i32 0, i32 0
  %632 = bitcast %"class.std::__1::map.123"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %628, i8 -86, i64 24, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %632) #13, !noalias !5
  %633 = getelementptr inbounds %"class.std::__1::map.123", %"class.std::__1::map.123"* %15, i64 0, i32 0, i32 0
  %634 = getelementptr inbounds %"class.std::__1::map.123", %"class.std::__1::map.123"* %15, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %635 = getelementptr inbounds %"class.std::__1::map.123", %"class.std::__1::map.123"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %636 = getelementptr inbounds %"class.std::__1::map.123", %"class.std::__1::map.123"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  %637 = bitcast %"class.std::__1::__tree_node_base"** %634 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %637, i8 0, i64 16, i1 false) #13, !noalias !5
  store %"class.std::__1::__tree_end_node"* %636, %"class.std::__1::__tree_end_node"** %633, align 8, !noalias !5
  %638 = icmp eq %"class.net::SrvRecordRdata"** %627, %626
  br i1 %638, label %639, label %641

639:                                              ; preds = %625
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %628, i8 0, i64 24, i1 false) #13, !alias.scope !5
  %640 = bitcast %"class.std::__1::__tree_end_node"* %636 to %"class.std::__1::__tree_node.161"**
  br label %957

641:                                              ; preds = %625
  %642 = bitcast %"class.net::SrvRecordRdata"** %16 to i8*
  %643 = bitcast %"class.net::SrvRecordRdata"** %16 to i64*
  %644 = bitcast %"class.std::__1::__tree_end_node"* %636 to %"class.std::__1::__tree_node.161"**
  %645 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %636, i64 0, i32 0
  %646 = bitcast %"class.std::__1::map.123"* %15 to i64*
  br label %656

647:                                              ; preds = %721
  %648 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %633, align 8, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %628, i8 0, i64 24, i1 false) #13, !alias.scope !5
  %649 = icmp eq %"class.std::__1::__tree_end_node"* %648, %636
  br i1 %649, label %957, label %650

650:                                              ; preds = %647
  %651 = bitcast i16* %17 to i8*
  %652 = bitcast %"class.net::HostPortPair"** %630 to i64*
  %653 = bitcast %"class.std::__1::unique_ptr.172"* %14 to i8*
  %654 = getelementptr inbounds %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.172"* %14, i64 0, i32 0, i32 0, i32 0
  %655 = bitcast i16* %18 to i8*
  br label %729

656:                                              ; preds = %727, %641
  %657 = phi %"class.std::__1::__tree_node.161"* [ null, %641 ], [ %728, %727 ]
  %658 = phi %"class.net::SrvRecordRdata"** [ %627, %641 ], [ %725, %727 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %642) #13, !noalias !5
  store %"class.net::SrvRecordRdata"* inttoptr (i64 -6148914691236517206 to %"class.net::SrvRecordRdata"*), %"class.net::SrvRecordRdata"** %16, align 8, !noalias !5
  %659 = bitcast %"class.net::SrvRecordRdata"** %658 to i64*
  %660 = load i64, i64* %659, align 8
  store i64 %660, i64* %643, align 8, !noalias !5
  %661 = inttoptr i64 %660 to %"class.net::SrvRecordRdata"*
  %662 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %661, i64 0, i32 1
  %663 = load i16, i16* %662, align 8
  %664 = icmp eq %"class.std::__1::__tree_node.161"* %657, null
  br i1 %664, label %691, label %665

665:                                              ; preds = %656, %687
  %666 = phi %"class.std::__1::__tree_node.161"* [ %690, %687 ], [ %657, %656 ]
  %667 = phi %"class.std::__1::__tree_node_base"** [ %689, %687 ], [ %634, %656 ]
  %668 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %666, i64 0, i32 2, i32 0, i32 0
  %669 = load i16, i16* %668, align 2
  %670 = icmp ult i16 %663, %669
  br i1 %670, label %671, label %677

671:                                              ; preds = %665
  %672 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %666, i64 0, i32 0, i32 0, i32 0
  %673 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %672, align 8
  %674 = icmp eq %"class.std::__1::__tree_node_base"* %673, null
  br i1 %674, label %675, label %687

675:                                              ; preds = %671
  %676 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %666, i64 0, i32 0, i32 0
  br label %691

677:                                              ; preds = %665
  %678 = icmp ult i16 %669, %663
  br i1 %678, label %679, label %685

679:                                              ; preds = %677
  %680 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %666, i64 0, i32 0, i32 1
  %681 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %680, align 8
  %682 = icmp eq %"class.std::__1::__tree_node_base"* %681, null
  br i1 %682, label %683, label %687

683:                                              ; preds = %679
  %684 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %666, i64 0, i32 0, i32 0
  br label %691

685:                                              ; preds = %677
  %686 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %666, i64 0, i32 0, i32 0
  br label %691

687:                                              ; preds = %679, %671
  %688 = phi %"class.std::__1::__tree_node_base"* [ %673, %671 ], [ %681, %679 ]
  %689 = phi %"class.std::__1::__tree_node_base"** [ %672, %671 ], [ %680, %679 ]
  %690 = bitcast %"class.std::__1::__tree_node_base"* %688 to %"class.std::__1::__tree_node.161"*
  br label %665

691:                                              ; preds = %685, %683, %675, %656
  %692 = phi %"class.std::__1::__tree_end_node"* [ %676, %675 ], [ %684, %683 ], [ %686, %685 ], [ %636, %656 ]
  %693 = phi %"class.std::__1::__tree_node_base"** [ %672, %675 ], [ %680, %683 ], [ %667, %685 ], [ %645, %656 ]
  %694 = bitcast %"class.std::__1::__tree_node_base"** %693 to %"class.std::__1::__tree_node.161"**
  %695 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %694, align 8
  %696 = icmp eq %"class.std::__1::__tree_node.161"* %695, null
  br i1 %696, label %697, label %721

697:                                              ; preds = %691
  %698 = call i8* @_Znwm(i64 80) #14, !noalias !8
  %699 = getelementptr inbounds i8, i8* %698, i64 32
  %700 = bitcast i8* %699 to i16*
  store i16 %663, i16* %700, align 8, !noalias !11
  %701 = getelementptr inbounds i8, i8* %698, i64 40
  %702 = getelementptr inbounds i8, i8* %698, i64 72
  %703 = bitcast i8* %702 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %701, i8 0, i64 32, i1 false) #13, !noalias !11
  store i32 1065353216, i32* %703, align 4, !noalias !11
  %704 = bitcast i8* %698 to %"class.std::__1::__tree_node.161"*
  %705 = bitcast i8* %698 to %"class.std::__1::__tree_node_base"*
  %706 = getelementptr inbounds i8, i8* %698, i64 16
  %707 = bitcast i8* %706 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %698, i8 0, i64 16, i1 false) #13, !noalias !5
  store %"class.std::__1::__tree_end_node"* %692, %"class.std::__1::__tree_end_node"** %707, align 8, !noalias !5
  %708 = bitcast %"class.std::__1::__tree_node_base"** %693 to i8**
  store i8* %698, i8** %708, align 8
  %709 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %633, align 8, !noalias !5
  %710 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %709, i64 0, i32 0
  %711 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %710, align 8
  %712 = icmp eq %"class.std::__1::__tree_node_base"* %711, null
  br i1 %712, label %716, label %713

713:                                              ; preds = %697
  %714 = ptrtoint %"class.std::__1::__tree_node_base"* %711 to i64
  store i64 %714, i64* %646, align 8, !noalias !5
  %715 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %693, align 8
  br label %716

716:                                              ; preds = %713, %697
  %717 = phi %"class.std::__1::__tree_node_base"* [ %705, %697 ], [ %715, %713 ]
  %718 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %634, align 8, !noalias !5
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %718, %"class.std::__1::__tree_node_base"* %717) #13
  %719 = load i64, i64* %635, align 8, !noalias !5
  %720 = add i64 %719, 1
  store i64 %720, i64* %635, align 8, !noalias !5
  br label %721

721:                                              ; preds = %716, %691
  %722 = phi %"class.std::__1::__tree_node.161"* [ %704, %716 ], [ %695, %691 ]
  %723 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %722, i64 0, i32 2, i32 0, i32 2, i32 0
  %724 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPKN3net14SrvRecordRdataENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %723, %"class.net::SrvRecordRdata"** nonnull dereferenceable(8) %16, %"class.net::SrvRecordRdata"** nonnull dereferenceable(8) %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %642) #13, !noalias !5
  %725 = getelementptr inbounds %"class.net::SrvRecordRdata"*, %"class.net::SrvRecordRdata"** %658, i64 1
  %726 = icmp eq %"class.net::SrvRecordRdata"** %725, %626
  br i1 %726, label %647, label %727

727:                                              ; preds = %721
  %728 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %644, align 8, !noalias !5
  br label %656

729:                                              ; preds = %954, %650
  %730 = phi %"class.std::__1::__tree_end_node"* [ %648, %650 ], [ %955, %954 ]
  %731 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %730, i64 5
  %732 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %730, i64 7
  %733 = bitcast %"class.std::__1::__tree_end_node"* %732 to i64*
  %734 = load i64, i64* %733, align 8
  %735 = icmp eq i64 %734, 0
  %736 = inttoptr i64 %734 to %"struct.std::__1::__hash_node"*
  br i1 %735, label %738, label %762

737:                                              ; preds = %778
  br i1 %784, label %750, label %738

738:                                              ; preds = %737, %729
  %739 = phi i32 [ %779, %737 ], [ 0, %729 ]
  %740 = zext i32 %739 to i33
  %741 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %740, i33 1) #13
  %742 = extractvalue { i33, i1 } %741, 1
  %743 = extractvalue { i33, i1 } %741, 0
  %744 = icmp slt i33 %743, 0
  %745 = or i1 %742, %744
  %746 = xor i1 %745, true
  %747 = and i33 %743, 4294967295
  %748 = zext i33 %747 to i64
  %749 = zext i1 %746 to i64
  br label %750

750:                                              ; preds = %738, %737
  %751 = phi i64 [ %748, %738 ], [ 0, %737 ]
  %752 = phi i64 [ %749, %738 ], [ 0, %737 ]
  %753 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %730, i64 8
  %754 = bitcast %"class.std::__1::__tree_end_node"* %753 to i64*
  %755 = load i64, i64* %754, align 8
  %756 = icmp ugt i64 %755, 1
  br i1 %756, label %757, label %912

757:                                              ; preds = %750
  %758 = bitcast %"class.std::__1::__tree_end_node"* %731 to %"class.std::__1::__hash_table"*
  %759 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %730, i64 6
  %760 = bitcast %"class.std::__1::__tree_end_node"* %759 to i64*
  %761 = bitcast %"class.std::__1::__tree_end_node"* %731 to %"struct.std::__1::__hash_node_base"***
  br label %785

762:                                              ; preds = %729, %778
  %763 = phi i1 [ %784, %778 ], [ false, %729 ]
  %764 = phi i64 [ %782, %778 ], [ %734, %729 ]
  %765 = phi i32 [ %779, %778 ], [ 0, %729 ]
  br i1 %763, label %778, label %766

766:                                              ; preds = %762
  %767 = inttoptr i64 %764 to %"struct.std::__1::__hash_node"*
  %768 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %767, i64 0, i32 2
  %769 = load %"class.net::SrvRecordRdata"*, %"class.net::SrvRecordRdata"** %768, align 8
  %770 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %769, i64 0, i32 2
  %771 = load i16, i16* %770, align 2
  %772 = zext i16 %771 to i32
  %773 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %765, i32 %772) #13
  %774 = extractvalue { i32, i1 } %773, 1
  %775 = extractvalue { i32, i1 } %773, 0
  %776 = xor i1 %774, true
  %777 = zext i1 %776 to i8
  br label %778

778:                                              ; preds = %766, %762
  %779 = phi i32 [ %775, %766 ], [ 0, %762 ]
  %780 = phi i8 [ %777, %766 ], [ 0, %762 ]
  %781 = inttoptr i64 %764 to i64*
  %782 = load i64, i64* %781, align 8
  %783 = icmp eq i64 %782, 0
  %784 = icmp eq i8 %780, 0
  br i1 %783, label %737, label %762

785:                                              ; preds = %906, %757
  %786 = phi i64 [ %751, %757 ], [ %833, %906 ]
  %787 = phi i64 [ %752, %757 ], [ %836, %906 ]
  %788 = trunc i64 %786 to i32
  %789 = trunc i64 %787 to i8
  %790 = icmp eq i8 %789, 0
  br i1 %790, label %791, label %792, !prof !12

791:                                              ; preds = %785
  call void @llvm.trap() #13
  unreachable

792:                                              ; preds = %785
  %793 = call i64 @_ZN4base13RandGeneratorEm(i64 %786) #13
  %794 = load i64, i64* %733, align 8
  %795 = icmp eq i64 %794, 0
  br i1 %795, label %813, label %796

796:                                              ; preds = %792
  %797 = trunc i64 %793 to i32
  br label %798

798:                                              ; preds = %808, %796
  %799 = phi i64 [ %811, %808 ], [ %794, %796 ]
  %800 = phi i32 [ %809, %808 ], [ %797, %796 ]
  %801 = inttoptr i64 %799 to %"struct.std::__1::__hash_node"*
  %802 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %801, i64 0, i32 2
  %803 = load %"class.net::SrvRecordRdata"*, %"class.net::SrvRecordRdata"** %802, align 8
  %804 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %803, i64 0, i32 2
  %805 = load i16, i16* %804, align 2
  %806 = zext i16 %805 to i32
  %807 = icmp ugt i32 %800, %806
  br i1 %807, label %808, label %813

808:                                              ; preds = %798
  %809 = sub i32 %800, %806
  %810 = inttoptr i64 %799 to i64*
  %811 = load i64, i64* %810, align 8
  %812 = icmp eq i64 %811, 0
  br i1 %812, label %813, label %798

813:                                              ; preds = %808, %798, %792
  %814 = phi %"class.net::SrvRecordRdata"* [ null, %792 ], [ null, %808 ], [ %803, %798 ]
  %815 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %814, i64 0, i32 4
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %651) #13, !noalias !5
  %816 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %814, i64 0, i32 3
  %817 = load i16, i16* %816, align 4
  store i16 %817, i16* %17, align 2, !noalias !5
  %818 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %630, align 8, !alias.scope !5
  %819 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %631, align 8, !alias.scope !5
  %820 = icmp ult %"class.net::HostPortPair"* %818, %819
  br i1 %820, label %821, label %824

821:                                              ; preds = %813
  call void @_ZN3net12HostPortPairC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostPortPair"* %818, %"class.std::__1::basic_string"* dereferenceable(24) %815, i16 zeroext %817) #13
  %822 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %818, i64 1
  %823 = ptrtoint %"class.net::HostPortPair"* %822 to i64
  store i64 %823, i64* %652, align 8, !alias.scope !5
  br label %825

824:                                              ; preds = %813
  call void @_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEtEEEvDpOT_(%"class.std::__1::vector.32"* nonnull %23, %"class.std::__1::basic_string"* dereferenceable(24) %815, i16* nonnull dereferenceable(2) %17) #13
  br label %825

825:                                              ; preds = %824, %821
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %651) #13, !noalias !5
  %826 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %814, i64 0, i32 2
  %827 = load i16, i16* %826, align 2
  %828 = zext i16 %827 to i32
  %829 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 %788, i32 %828) #13
  %830 = extractvalue { i32, i1 } %829, 1
  %831 = extractvalue { i32, i1 } %829, 0
  %832 = xor i1 %830, true
  %833 = zext i32 %831 to i64
  %834 = shl nuw i64 %833, 32
  %835 = zext i1 %832 to i64
  %836 = or i64 %834, %835
  %837 = ptrtoint %"class.net::SrvRecordRdata"* %814 to i64
  %838 = lshr i64 %837, 32
  %839 = shl i64 %837, 3
  %840 = and i64 %839, 4294967288
  %841 = add nuw nsw i64 %840, 8
  %842 = xor i64 %841, %838
  %843 = mul i64 %842, -7070675565921424023
  %844 = lshr i64 %843, 47
  %845 = xor i64 %843, %838
  %846 = xor i64 %845, %844
  %847 = mul i64 %846, -7070675565921424023
  %848 = lshr i64 %847, 47
  %849 = xor i64 %848, %847
  %850 = mul i64 %849, -7070675565921424023
  %851 = load i64, i64* %760, align 8
  %852 = icmp eq i64 %851, 0
  br i1 %852, label %906, label %853

853:                                              ; preds = %825
  %854 = call i64 @llvm.ctpop.i64(i64 %851) #13, !range !13
  %855 = icmp ugt i64 %854, 1
  br i1 %855, label %859, label %856

856:                                              ; preds = %853
  %857 = add i64 %851, -1
  %858 = and i64 %857, %850
  br label %863

859:                                              ; preds = %853
  %860 = icmp ult i64 %850, %851
  br i1 %860, label %863, label %861

861:                                              ; preds = %859
  %862 = urem i64 %850, %851
  br label %863

863:                                              ; preds = %861, %859, %856
  %864 = phi i64 [ %858, %856 ], [ %862, %861 ], [ %850, %859 ]
  %865 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %761, align 8
  %866 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %865, i64 %864
  %867 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %866, align 8
  %868 = icmp eq %"struct.std::__1::__hash_node_base"* %867, null
  br i1 %868, label %906, label %869

869:                                              ; preds = %863
  %870 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %867, i64 0, i32 0
  %871 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %870, align 8
  %872 = icmp eq %"struct.std::__1::__hash_node_base"* %871, null
  br i1 %872, label %906, label %873

873:                                              ; preds = %869
  %874 = add i64 %851, -1
  br label %875

875:                                              ; preds = %896, %873
  %876 = phi %"struct.std::__1::__hash_node_base"* [ %871, %873 ], [ %898, %896 ]
  %877 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %876, i64 1
  %878 = bitcast %"struct.std::__1::__hash_node_base"* %877 to i64*
  %879 = load i64, i64* %878, align 8
  %880 = icmp eq i64 %879, %850
  br i1 %880, label %891, label %881

881:                                              ; preds = %875
  br i1 %855, label %884, label %882

882:                                              ; preds = %881
  %883 = and i64 %879, %874
  br label %888

884:                                              ; preds = %881
  %885 = icmp ult i64 %879, %851
  br i1 %885, label %888, label %886

886:                                              ; preds = %884
  %887 = urem i64 %879, %851
  br label %888

888:                                              ; preds = %886, %884, %882
  %889 = phi i64 [ %883, %882 ], [ %887, %886 ], [ %879, %884 ]
  %890 = icmp eq i64 %889, %864
  br i1 %890, label %896, label %906

891:                                              ; preds = %875
  %892 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %876, i64 2
  %893 = bitcast %"struct.std::__1::__hash_node_base"* %892 to %"class.net::SrvRecordRdata"**
  %894 = load %"class.net::SrvRecordRdata"*, %"class.net::SrvRecordRdata"** %893, align 8
  %895 = icmp eq %"class.net::SrvRecordRdata"* %894, %814
  br i1 %895, label %900, label %896

896:                                              ; preds = %891, %888
  %897 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %876, i64 0, i32 0
  %898 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %897, align 8
  %899 = icmp eq %"struct.std::__1::__hash_node_base"* %898, null
  br i1 %899, label %906, label %875

900:                                              ; preds = %891
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %653) #13, !noalias !5
  call void @_ZNSt3__112__hash_tableIPKN3net14SrvRecordRdataENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE(%"class.std::__1::unique_ptr.172"* nonnull sret %14, %"class.std::__1::__hash_table"* %758, %"struct.std::__1::__hash_node_base"* nonnull %876) #13
  %901 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %654, align 8, !noalias !5
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %654, align 8, !noalias !5
  %902 = icmp eq %"struct.std::__1::__hash_node"* %901, null
  br i1 %902, label %905, label %903

903:                                              ; preds = %900
  %904 = bitcast %"struct.std::__1::__hash_node"* %901 to i8*
  call void @_ZdlPv(i8* %904) #14
  br label %905

905:                                              ; preds = %903, %900
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %653) #13, !noalias !5
  br label %906

906:                                              ; preds = %896, %888, %905, %869, %863, %825
  %907 = load i64, i64* %754, align 8
  %908 = icmp ugt i64 %907, 1
  br i1 %908, label %785, label %909

909:                                              ; preds = %906
  %910 = bitcast %"class.std::__1::__tree_end_node"* %732 to %"struct.std::__1::__hash_node"**
  %911 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %910, align 8
  br label %912

912:                                              ; preds = %909, %750
  %913 = phi %"struct.std::__1::__hash_node"* [ %911, %909 ], [ %736, %750 ]
  %914 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %913, i64 0, i32 2
  %915 = load %"class.net::SrvRecordRdata"*, %"class.net::SrvRecordRdata"** %914, align 8
  %916 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %915, i64 0, i32 4
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %655) #13, !noalias !5
  %917 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %915, i64 0, i32 3
  %918 = load i16, i16* %917, align 4
  store i16 %918, i16* %18, align 2, !noalias !5
  %919 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %630, align 8, !alias.scope !5
  %920 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %631, align 8, !alias.scope !5
  %921 = icmp ult %"class.net::HostPortPair"* %919, %920
  br i1 %921, label %922, label %925

922:                                              ; preds = %912
  call void @_ZN3net12HostPortPairC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostPortPair"* %919, %"class.std::__1::basic_string"* dereferenceable(24) %916, i16 zeroext %918) #13
  %923 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %919, i64 1
  %924 = ptrtoint %"class.net::HostPortPair"* %923 to i64
  store i64 %924, i64* %652, align 8, !alias.scope !5
  br label %926

925:                                              ; preds = %912
  call void @_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEtEEEvDpOT_(%"class.std::__1::vector.32"* nonnull %23, %"class.std::__1::basic_string"* dereferenceable(24) %916, i16* nonnull dereferenceable(2) %18) #13
  br label %926

926:                                              ; preds = %925, %922
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %655) #13, !noalias !5
  %927 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %730, i64 1, i32 0
  %928 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %927, align 8
  %929 = icmp eq %"class.std::__1::__tree_node_base"* %928, null
  br i1 %929, label %930, label %938

930:                                              ; preds = %926
  %931 = bitcast %"class.std::__1::__tree_end_node"* %730 to %"class.std::__1::__tree_node_base"*
  %932 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %730, i64 2
  %933 = bitcast %"class.std::__1::__tree_end_node"* %932 to %"class.std::__1::__tree_end_node"**
  %934 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %933, align 8
  %935 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %934, i64 0, i32 0
  %936 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %935, align 8
  %937 = icmp eq %"class.std::__1::__tree_node_base"* %936, %931
  br i1 %937, label %954, label %945

938:                                              ; preds = %926, %938
  %939 = phi %"class.std::__1::__tree_node_base"* [ %941, %938 ], [ %928, %926 ]
  %940 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %939, i64 0, i32 0, i32 0
  %941 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %940, align 8
  %942 = icmp eq %"class.std::__1::__tree_node_base"* %941, null
  br i1 %942, label %943, label %938

943:                                              ; preds = %938
  %944 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %939, i64 0, i32 0
  br label %954

945:                                              ; preds = %930, %945
  %946 = phi %"class.std::__1::__tree_end_node"** [ %949, %945 ], [ %933, %930 ]
  %947 = bitcast %"class.std::__1::__tree_end_node"** %946 to %"class.std::__1::__tree_node_base"**
  %948 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %947, align 8
  %949 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %948, i64 0, i32 2
  %950 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %949, align 8
  %951 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %950, i64 0, i32 0
  %952 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %951, align 8
  %953 = icmp eq %"class.std::__1::__tree_node_base"* %952, %948
  br i1 %953, label %954, label %945

954:                                              ; preds = %945, %943, %930
  %955 = phi %"class.std::__1::__tree_end_node"* [ %944, %943 ], [ %934, %930 ], [ %950, %945 ]
  %956 = icmp eq %"class.std::__1::__tree_end_node"* %955, %636
  br i1 %956, label %957, label %729

957:                                              ; preds = %954, %647, %639
  %958 = phi %"class.std::__1::__tree_node.161"** [ %640, %639 ], [ %644, %647 ], [ %644, %954 ]
  %959 = getelementptr inbounds %"class.std::__1::map.123", %"class.std::__1::map.123"* %15, i64 0, i32 0
  %960 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %958, align 8, !noalias !5
  call void @_ZNSt3__16__treeINS_12__value_typeItNS_13unordered_setIPKN3net14SrvRecordRdataENS_4hashIS6_EENS_8equal_toIS6_EENS_9allocatorIS6_EEEEEENS_19__map_value_compareItSE_NS_4lessItEELb1EEENSB_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.124"* nonnull %959, %"class.std::__1::__tree_node.161"* %960) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %632) #13, !noalias !5
  %961 = bitcast %"class.net::HostCache::Entry"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %961) #13
  %962 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %629, align 8
  %963 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %630, align 8
  %964 = icmp eq %"class.net::HostPortPair"* %962, %963
  %965 = select i1 %964, i32 -105, i32 0
  %966 = load i8, i8* %606, align 8
  %967 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %968 = load i64, i64* %967, align 8
  %969 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 0
  store i32 %965, i32* %969, align 8
  %970 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %970, align 8
  %971 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %972 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %973 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %974 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %975 = bitcast %union.anon.43* %974 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %975, i8 0, i64 24, i1 false) #13
  %976 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 6
  %977 = bitcast %union.anon.14* %971 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %977, i8 0, i64 49, i1 false) #13
  %978 = bitcast %union.anon.26* %972 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %978, i8 0, i64 24, i1 false) #13
  %979 = getelementptr inbounds %union.anon.31, %union.anon.31* %973, i64 1
  %980 = bitcast %union.anon.31* %979 to i8*
  store i8 0, i8* %980, align 8
  store i32 1, i32* %976, align 8
  %981 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 7
  store i8 0, i8* %981, align 4
  %982 = icmp eq i8 %966, 0
  %983 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 9, i32 0
  %984 = select i1 %982, i64 -1000000, i64 %968
  store i64 %984, i64* %983, align 8
  %985 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 10, i32 0, i32 0
  store i64 0, i64* %985, align 8
  %986 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 11
  store i32 -1, i32* %986, align 8
  %987 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 12, i32 0
  store i32 0, i32* %987, align 4
  %988 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 13, i32 0
  store i32 0, i32* %988, align 8
  %989 = bitcast %"class.net::HostPortPair"** %631 to i64*
  %990 = load i64, i64* %989, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %628, i8 0, i64 24, i1 false) #13
  %991 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %992 = ptrtoint %"class.net::HostPortPair"* %963 to i64
  %993 = ptrtoint %"class.net::HostPortPair"* %962 to i64
  %994 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %995 = bitcast %"class.std::__1::vector.32"* %991 to i64*
  store i64 %993, i64* %995, align 8
  %996 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %997 = bitcast %"class.net::HostPortPair"** %996 to i64*
  store i64 %992, i64* %997, align 8
  %998 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %24, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %999 = bitcast %"class.net::HostPortPair"** %998 to i64*
  store i64 %990, i64* %999, align 8
  store i8 1, i8* %994, align 8
  %1000 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %2, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %24) #13
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %961) #13
  %1001 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %629, align 8
  %1002 = icmp eq %"class.net::HostPortPair"* %1001, null
  br i1 %1002, label %1024, label %1003

1003:                                             ; preds = %957
  %1004 = bitcast %"class.net::HostPortPair"* %1001 to i8*
  %1005 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %630, align 8
  %1006 = icmp eq %"class.net::HostPortPair"* %1005, %1001
  br i1 %1006, label %1022, label %1007

1007:                                             ; preds = %1003, %1017
  %1008 = phi %"class.net::HostPortPair"* [ %1009, %1017 ], [ %1005, %1003 ]
  %1009 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1008, i64 -1
  %1010 = bitcast %"class.net::HostPortPair"* %1009 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1011 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1010, i64 0, i32 1, i32 0
  %1012 = load i8, i8* %1011, align 1
  %1013 = icmp slt i8 %1012, 0
  br i1 %1013, label %1014, label %1017

1014:                                             ; preds = %1007
  %1015 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1009, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1016 = load i8*, i8** %1015, align 8
  call void @_ZdlPv(i8* %1016) #14
  br label %1017

1017:                                             ; preds = %1014, %1007
  %1018 = icmp eq %"class.net::HostPortPair"* %1009, %1001
  br i1 %1018, label %1019, label %1007

1019:                                             ; preds = %1017
  %1020 = bitcast %"class.std::__1::vector.32"* %23 to i8**
  %1021 = load i8*, i8** %1020, align 8
  br label %1022

1022:                                             ; preds = %1019, %1003
  %1023 = phi i8* [ %1021, %1019 ], [ %1004, %1003 ]
  store %"class.net::HostPortPair"* %1001, %"class.net::HostPortPair"** %630, align 8
  call void @_ZdlPv(i8* %1023) #14
  br label %1024

1024:                                             ; preds = %1022, %957
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %628) #13
  %1025 = load %"class.net::SrvRecordRdata"**, %"class.net::SrvRecordRdata"*** %615, align 8
  %1026 = icmp eq %"class.net::SrvRecordRdata"** %1025, null
  br i1 %1026, label %1031, label %1027

1027:                                             ; preds = %1024
  %1028 = ptrtoint %"class.net::SrvRecordRdata"** %1025 to i64
  %1029 = bitcast %"class.net::SrvRecordRdata"*** %616 to i64*
  store i64 %1028, i64* %1029, align 8
  %1030 = bitcast %"class.net::SrvRecordRdata"** %1025 to i8*
  call void @_ZdlPv(i8* %1030) #14
  br label %1031

1031:                                             ; preds = %1027, %1024
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %614) #13
  br label %1124

1032:                                             ; preds = %1116, %621
  %1033 = phi i64 [ 0, %621 ], [ %1117, %1116 ]
  %1034 = phi %"class.net::SrvRecordRdata"** [ null, %621 ], [ %1118, %1116 ]
  %1035 = phi %"class.net::SrvRecordRdata"** [ null, %621 ], [ %1119, %1116 ]
  %1036 = phi i64 [ 0, %621 ], [ %1120, %1116 ]
  %1037 = phi %"class.net::SrvRecordRdata"** [ null, %621 ], [ %1121, %1116 ]
  %1038 = phi %"class.std::__1::unique_ptr"* [ %618, %621 ], [ %1122, %1116 ]
  %1039 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1038, i64 0, i32 0, i32 0, i32 0
  %1040 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %1039, align 8
  %1041 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1040, i64 0, i32 2
  %1042 = load i16, i16* %1041, align 8
  %1043 = icmp eq i16 %1042, 33
  br i1 %1043, label %1044, label %1048

1044:                                             ; preds = %1032
  %1045 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1040, i64 0, i32 5, i32 0, i32 0, i32 0
  %1046 = bitcast %"class.net::RecordRdata"** %1045 to %"class.net::SrvRecordRdata"**
  %1047 = load %"class.net::SrvRecordRdata"*, %"class.net::SrvRecordRdata"** %1046, align 8
  br label %1048

1048:                                             ; preds = %1044, %1032
  %1049 = phi %"class.net::SrvRecordRdata"* [ %1047, %1044 ], [ null, %1032 ]
  %1050 = ptrtoint %"class.net::SrvRecordRdata"* %1049 to i64
  %1051 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %1049, i64 0, i32 4
  %1052 = bitcast %"class.std::__1::basic_string"* %1051 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1053 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1052, i64 0, i32 1, i32 0
  %1054 = load i8, i8* %1053, align 1
  %1055 = icmp slt i8 %1054, 0
  br i1 %1055, label %1056, label %1059

1056:                                             ; preds = %1048
  %1057 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %1049, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1058 = load i64, i64* %1057, align 8
  br label %1061

1059:                                             ; preds = %1048
  %1060 = zext i8 %1054 to i64
  br label %1061

1061:                                             ; preds = %1059, %1056
  %1062 = phi i64 [ %1058, %1056 ], [ %1060, %1059 ]
  %1063 = icmp eq i64 %1062, 0
  br i1 %1063, label %1116, label %1064

1064:                                             ; preds = %1061
  %1065 = load %"class.net::SrvRecordRdata"**, %"class.net::SrvRecordRdata"*** %617, align 8
  %1066 = icmp eq %"class.net::SrvRecordRdata"** %1037, %1065
  br i1 %1066, label %1071, label %1067

1067:                                             ; preds = %1064
  %1068 = bitcast %"class.net::SrvRecordRdata"** %1037 to i64*
  store i64 %1050, i64* %1068, align 8
  %1069 = getelementptr inbounds %"class.net::SrvRecordRdata"*, %"class.net::SrvRecordRdata"** %1037, i64 1
  %1070 = ptrtoint %"class.net::SrvRecordRdata"** %1069 to i64
  store i64 %1070, i64* %622, align 8
  br label %1116

1071:                                             ; preds = %1064
  %1072 = ptrtoint %"class.net::SrvRecordRdata"** %1037 to i64
  %1073 = sub i64 %1072, %1033
  %1074 = ashr exact i64 %1073, 3
  %1075 = add nsw i64 %1074, 1
  %1076 = icmp ugt i64 %1075, 2305843009213693951
  br i1 %1076, label %1077, label %1079

1077:                                             ; preds = %1071
  %1078 = bitcast %"class.std::__1::vector.113"* %22 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1078) #15
  unreachable

1079:                                             ; preds = %1071
  %1080 = icmp ult i64 %1074, 1152921504606846975
  br i1 %1080, label %1081, label %1089

1081:                                             ; preds = %1079
  %1082 = ashr exact i64 %1073, 2
  %1083 = icmp ult i64 %1082, %1075
  %1084 = select i1 %1083, i64 %1075, i64 %1082
  %1085 = icmp eq i64 %1084, 0
  br i1 %1085, label %1094, label %1086

1086:                                             ; preds = %1081
  %1087 = icmp ugt i64 %1084, 2305843009213693951
  br i1 %1087, label %1088, label %1089

1088:                                             ; preds = %1086
  tail call void @abort() #15
  unreachable

1089:                                             ; preds = %1086, %1079
  %1090 = phi i64 [ %1084, %1086 ], [ 2305843009213693951, %1079 ]
  %1091 = shl i64 %1090, 3
  %1092 = tail call i8* @_Znwm(i64 %1091) #14
  %1093 = bitcast i8* %1092 to %"class.net::SrvRecordRdata"**
  br label %1094

1094:                                             ; preds = %1089, %1081
  %1095 = phi i64 [ %1090, %1089 ], [ 0, %1081 ]
  %1096 = phi %"class.net::SrvRecordRdata"** [ %1093, %1089 ], [ null, %1081 ]
  %1097 = getelementptr inbounds %"class.net::SrvRecordRdata"*, %"class.net::SrvRecordRdata"** %1096, i64 %1074
  %1098 = getelementptr inbounds %"class.net::SrvRecordRdata"*, %"class.net::SrvRecordRdata"** %1096, i64 %1095
  %1099 = ptrtoint %"class.net::SrvRecordRdata"** %1098 to i64
  %1100 = bitcast %"class.net::SrvRecordRdata"** %1097 to i64*
  store i64 %1050, i64* %1100, align 8
  %1101 = getelementptr inbounds %"class.net::SrvRecordRdata"*, %"class.net::SrvRecordRdata"** %1097, i64 1
  %1102 = ptrtoint %"class.net::SrvRecordRdata"** %1101 to i64
  %1103 = sub i64 %1036, %1033
  %1104 = ashr exact i64 %1103, 3
  %1105 = sub nsw i64 0, %1104
  %1106 = getelementptr inbounds %"class.net::SrvRecordRdata"*, %"class.net::SrvRecordRdata"** %1097, i64 %1105
  %1107 = ptrtoint %"class.net::SrvRecordRdata"** %1106 to i64
  %1108 = icmp sgt i64 %1103, 0
  br i1 %1108, label %1109, label %1112

1109:                                             ; preds = %1094
  %1110 = bitcast %"class.net::SrvRecordRdata"** %1106 to i8*
  %1111 = inttoptr i64 %1033 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1110, i8* align 8 %1111, i64 %1103, i1 false) #13
  br label %1112

1112:                                             ; preds = %1109, %1094
  store i64 %1107, i64* %623, align 8
  store i64 %1102, i64* %622, align 8
  store i64 %1099, i64* %624, align 8
  %1113 = icmp eq i64 %1033, 0
  br i1 %1113, label %1116, label %1114

1114:                                             ; preds = %1112
  %1115 = inttoptr i64 %1033 to i8*
  tail call void @_ZdlPv(i8* %1115) #14
  br label %1116

1116:                                             ; preds = %1114, %1112, %1067, %1061
  %1117 = phi i64 [ %1107, %1114 ], [ %1107, %1112 ], [ %1033, %1067 ], [ %1033, %1061 ]
  %1118 = phi %"class.net::SrvRecordRdata"** [ %1101, %1114 ], [ %1101, %1112 ], [ %1069, %1067 ], [ %1034, %1061 ]
  %1119 = phi %"class.net::SrvRecordRdata"** [ %1106, %1114 ], [ %1106, %1112 ], [ %1035, %1067 ], [ %1035, %1061 ]
  %1120 = phi i64 [ %1102, %1114 ], [ %1102, %1112 ], [ %1070, %1067 ], [ %1036, %1061 ]
  %1121 = phi %"class.net::SrvRecordRdata"** [ %1101, %1114 ], [ %1101, %1112 ], [ %1069, %1067 ], [ %1037, %1061 ]
  %1122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1038, i64 1
  %1123 = icmp eq %"class.std::__1::unique_ptr"* %1122, %619
  br i1 %1123, label %625, label %1032

1124:                                             ; preds = %1031, %609
  %1125 = phi %"class.std::__1::unique_ptr"* [ %612, %609 ], [ %618, %1031 ]
  %1126 = phi i32 [ %607, %609 ], [ 0, %1031 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %606) #13
  %1127 = icmp eq %"class.std::__1::unique_ptr"* %1125, null
  br i1 %1127, label %1150, label %1128

1128:                                             ; preds = %1124
  %1129 = bitcast %"class.std::__1::unique_ptr"* %1125 to i8*
  %1130 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %605, align 8
  %1131 = icmp eq %"class.std::__1::unique_ptr"* %1130, %1125
  br i1 %1131, label %1148, label %1132

1132:                                             ; preds = %1128, %1143
  %1133 = phi %"class.std::__1::unique_ptr"* [ %1134, %1143 ], [ %1130, %1128 ]
  %1134 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1133, i64 -1
  %1135 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1134, i64 0, i32 0, i32 0, i32 0
  %1136 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %1135, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %1135, align 8
  %1137 = icmp eq %"class.net::RecordParsed"* %1136, null
  br i1 %1137, label %1143, label %1138

1138:                                             ; preds = %1132
  %1139 = bitcast %"class.net::RecordParsed"* %1136 to void (%"class.net::RecordParsed"*)***
  %1140 = load void (%"class.net::RecordParsed"*)**, void (%"class.net::RecordParsed"*)*** %1139, align 8
  %1141 = getelementptr inbounds void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %1140, i64 1
  %1142 = load void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %1141, align 8
  call void %1142(%"class.net::RecordParsed"* nonnull %1136) #13
  br label %1143

1143:                                             ; preds = %1138, %1132
  %1144 = icmp eq %"class.std::__1::unique_ptr"* %1134, %1125
  br i1 %1144, label %1145, label %1132

1145:                                             ; preds = %1143
  %1146 = bitcast %"class.std::__1::vector.55"* %19 to i8**
  %1147 = load i8*, i8** %1146, align 8
  br label %1148

1148:                                             ; preds = %1145, %1128
  %1149 = phi i8* [ %1147, %1145 ], [ %1129, %1128 ]
  store %"class.std::__1::unique_ptr"* %1125, %"class.std::__1::unique_ptr"** %605, align 8
  call void @_ZdlPv(i8* %1149) #14
  br label %1150

1150:                                             ; preds = %1124, %1148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %603) #13
  br label %1471

1151:                                             ; preds = %3
  %1152 = getelementptr inbounds %"class.net::DnsResponseResultExtractor", %"class.net::DnsResponseResultExtractor"* %0, i64 0, i32 0
  %1153 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %1152, align 8
  %1154 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1154) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1154, i8 -86, i64 16, i1 false) #13
  store i8 0, i8* %1154, align 8
  %1155 = bitcast %"class.std::__1::vector.55"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1155) #13
  %1156 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %10, i64 0, i32 0, i32 0
  %1157 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %10, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1155, i8 0, i64 24, i1 false) #13
  %1158 = call fastcc i32 @_ZN3net12_GLOBAL__N_122ExtractResponseRecordsERKNS_11DnsResponseEtPNSt3__16vectorINS4_10unique_ptrIKNS_12RecordParsedENS4_14default_deleteIS8_EEEENS4_9allocatorISB_EEEEPN4absl8optionalIN4base9TimeDeltaEEEPNS5_INS4_12basic_stringIcNS4_11char_traitsIcEENSC_IcEEEENSC_ISQ_EEEE(%"class.net::DnsResponse"* dereferenceable(112) %1153, i16 zeroext -15, %"class.std::__1::vector.55"* nonnull %10, %"class.absl::optional.50"* nonnull %9, %"class.std::__1::vector"* null) #13
  %1159 = icmp eq i32 %1158, 0
  br i1 %1159, label %1182, label %1160

1160:                                             ; preds = %1151
  %1161 = bitcast %"class.net::HostCache::Entry"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %1161) #13
  %1162 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %11, i64 0, i32 0
  store i32 -105, i32* %1162, align 8, !alias.scope !14
  %1163 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %1163, align 8, !alias.scope !14
  %1164 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %1165 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %1166 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %11, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %1167 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %11, i64 0, i32 6
  %1168 = bitcast %union.anon.14* %1164 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1168, i8 0, i64 49, i1 false) #13, !alias.scope !14
  %1169 = bitcast %union.anon.26* %1165 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1169, i8 0, i64 25, i1 false) #13, !alias.scope !14
  %1170 = bitcast %union.anon.31* %1166 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1170, i8 0, i64 24, i1 false) #13, !alias.scope !14
  store i32 1, i32* %1167, align 8, !alias.scope !14
  %1171 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %11, i64 0, i32 7
  store i8 0, i8* %1171, align 4, !alias.scope !14
  %1172 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %11, i64 0, i32 9, i32 0
  %1173 = bitcast i64* %1172 to <2 x i64>*
  store <2 x i64> <i64 -1000000, i64 0>, <2 x i64>* %1173, align 8, !alias.scope !14
  %1174 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %11, i64 0, i32 11
  store i32 -1, i32* %1174, align 8, !alias.scope !14
  %1175 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %11, i64 0, i32 12, i32 0
  store i32 0, i32* %1175, align 4, !alias.scope !14
  %1176 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %11, i64 0, i32 13, i32 0
  store i32 0, i32* %1176, align 8, !alias.scope !14
  %1177 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %11, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %1178 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %11, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %1179 = bitcast %"class.std::__1::vector.44"* %1177 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1179, i8 0, i64 24, i1 false) #13, !alias.scope !14
  store i8 1, i8* %1178, align 8, !alias.scope !14
  %1180 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %2, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %11) #13
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %1161) #13
  %1181 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %1156, align 8
  br label %1283

1182:                                             ; preds = %1151
  %1183 = bitcast %"class.std::__1::vector.44"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1183) #13
  %1184 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %12, i64 0, i32 0
  %1185 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %12, i64 0, i32 1
  %1186 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %12, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1183, i8 0, i64 24, i1 false) #13
  %1187 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %1156, align 8
  %1188 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %1157, align 8
  %1189 = icmp eq %"class.std::__1::unique_ptr"* %1187, %1188
  br i1 %1189, label %1194, label %1228

1190:                                             ; preds = %1279
  %1191 = bitcast %"class.std::__1::vector.44"* %12 to <2 x i64>*
  %1192 = load <2 x i64>, <2 x i64>* %1191, align 16
  %1193 = load i64, i64* %1186, align 16
  br label %1194

1194:                                             ; preds = %1190, %1182
  %1195 = phi i64 [ %1193, %1190 ], [ 0, %1182 ]
  %1196 = phi <2 x i64> [ %1192, %1190 ], [ zeroinitializer, %1182 ]
  %1197 = bitcast %"class.net::HostCache::Entry"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %1197) #13
  %1198 = load i8, i8* %1154, align 8
  %1199 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1200 = load i64, i64* %1199, align 8
  %1201 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %13, i64 0, i32 0
  store i32 -105, i32* %1201, align 8
  %1202 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %1202, align 8
  %1203 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %1204 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %13, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %1205 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %13, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %1206 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %13, i64 0, i32 6
  %1207 = bitcast %union.anon.14* %1203 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1207, i8 0, i64 49, i1 false) #13
  %1208 = bitcast %union.anon.26* %1204 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1208, i8 0, i64 25, i1 false) #13
  %1209 = bitcast %union.anon.31* %1205 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1209, i8 0, i64 24, i1 false) #13
  store i32 1, i32* %1206, align 8
  %1210 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %13, i64 0, i32 7
  store i8 0, i8* %1210, align 4
  %1211 = icmp eq i8 %1198, 0
  %1212 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %13, i64 0, i32 9, i32 0
  %1213 = select i1 %1211, i64 -1000000, i64 %1200
  store i64 %1213, i64* %1212, align 8
  %1214 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %13, i64 0, i32 10, i32 0, i32 0
  store i64 0, i64* %1214, align 8
  %1215 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %13, i64 0, i32 11
  store i32 -1, i32* %1215, align 8
  %1216 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %13, i64 0, i32 12, i32 0
  store i32 0, i32* %1216, align 4
  %1217 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %13, i64 0, i32 13, i32 0
  store i32 0, i32* %1217, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1183, i8 0, i64 24, i1 false) #13
  %1218 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %13, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %1219 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %13, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %1220 = bitcast %"class.std::__1::vector.44"* %1218 to <2 x i64>*
  store <2 x i64> %1196, <2 x i64>* %1220, align 8
  %1221 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %13, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i64 %1195, i64* %1221, align 8
  store i8 1, i8* %1219, align 8
  %1222 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %2, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %13) #13
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %1197) #13
  %1223 = load i64*, i64** %1184, align 16
  %1224 = icmp eq i64* %1223, null
  br i1 %1224, label %1227, label %1225

1225:                                             ; preds = %1194
  %1226 = bitcast i64* %1223 to i8*
  call void @_ZdlPv(i8* %1226) #14
  br label %1227

1227:                                             ; preds = %1225, %1194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1183) #13
  br label %1283

1228:                                             ; preds = %1182, %1279
  %1229 = phi %"class.std::__1::unique_ptr"* [ %1281, %1279 ], [ %1187, %1182 ]
  %1230 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1229, i64 0, i32 0, i32 0, i32 0
  %1231 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %1230, align 8
  %1232 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1231, i64 0, i32 2
  %1233 = load i16, i16* %1232, align 8
  %1234 = icmp eq i16 %1233, -15
  br i1 %1234, label %1235, label %1239

1235:                                             ; preds = %1228
  %1236 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1231, i64 0, i32 5, i32 0, i32 0, i32 0
  %1237 = bitcast %"class.net::RecordRdata"** %1236 to %"class.net::IntegrityRecordRdata"**
  %1238 = load %"class.net::IntegrityRecordRdata"*, %"class.net::IntegrityRecordRdata"** %1237, align 8
  br label %1239

1239:                                             ; preds = %1235, %1228
  %1240 = phi %"class.net::IntegrityRecordRdata"* [ %1238, %1235 ], [ null, %1228 ]
  %1241 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %1240, i64 0, i32 3
  %1242 = load i8, i8* %1241, align 8, !range !17
  %1243 = load i64, i64* %1185, align 8
  %1244 = load i64, i64* %1186, align 16
  %1245 = shl i64 %1244, 6
  %1246 = icmp eq i64 %1243, %1245
  br i1 %1246, label %1247, label %1263

1247:                                             ; preds = %1239
  %1248 = add i64 %1243, 1
  %1249 = icmp slt i64 %1248, 0
  br i1 %1249, label %1250, label %1252

1250:                                             ; preds = %1247
  %1251 = bitcast %"class.std::__1::vector.44"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1251) #15
  unreachable

1252:                                             ; preds = %1247
  %1253 = icmp ult i64 %1243, 4611686018427387903
  br i1 %1253, label %1254, label %1260

1254:                                             ; preds = %1252
  %1255 = shl i64 %1244, 7
  %1256 = add nuw nsw i64 %1243, 64
  %1257 = and i64 %1256, -64
  %1258 = icmp ult i64 %1255, %1257
  %1259 = select i1 %1258, i64 %1257, i64 %1255
  br label %1260

1260:                                             ; preds = %1254, %1252
  %1261 = phi i64 [ %1259, %1254 ], [ 9223372036854775807, %1252 ]
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.44"* nonnull %12, i64 %1261) #13
  %1262 = load i64, i64* %1185, align 8
  br label %1263

1263:                                             ; preds = %1260, %1239
  %1264 = phi i64 [ %1262, %1260 ], [ %1243, %1239 ]
  %1265 = add i64 %1264, 1
  store i64 %1265, i64* %1185, align 8
  %1266 = icmp eq i8 %1242, 0
  %1267 = load i64*, i64** %1184, align 16
  %1268 = lshr i64 %1264, 6
  %1269 = getelementptr inbounds i64, i64* %1267, i64 %1268
  %1270 = and i64 %1264, 63
  %1271 = shl i64 1, %1270
  br i1 %1266, label %1275, label %1272

1272:                                             ; preds = %1263
  %1273 = load i64, i64* %1269, align 8
  %1274 = or i64 %1273, %1271
  br label %1279

1275:                                             ; preds = %1263
  %1276 = xor i64 %1271, -1
  %1277 = load i64, i64* %1269, align 8
  %1278 = and i64 %1277, %1276
  br label %1279

1279:                                             ; preds = %1275, %1272
  %1280 = phi i64 [ %1278, %1275 ], [ %1274, %1272 ]
  store i64 %1280, i64* %1269, align 8
  %1281 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1229, i64 1
  %1282 = icmp eq %"class.std::__1::unique_ptr"* %1281, %1188
  br i1 %1282, label %1190, label %1228

1283:                                             ; preds = %1227, %1160
  %1284 = phi %"class.std::__1::unique_ptr"* [ %1187, %1227 ], [ %1181, %1160 ]
  %1285 = icmp eq %"class.std::__1::unique_ptr"* %1284, null
  br i1 %1285, label %1308, label %1286

1286:                                             ; preds = %1283
  %1287 = bitcast %"class.std::__1::unique_ptr"* %1284 to i8*
  %1288 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %1157, align 8
  %1289 = icmp eq %"class.std::__1::unique_ptr"* %1288, %1284
  br i1 %1289, label %1306, label %1290

1290:                                             ; preds = %1286, %1301
  %1291 = phi %"class.std::__1::unique_ptr"* [ %1292, %1301 ], [ %1288, %1286 ]
  %1292 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1291, i64 -1
  %1293 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1292, i64 0, i32 0, i32 0, i32 0
  %1294 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %1293, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %1293, align 8
  %1295 = icmp eq %"class.net::RecordParsed"* %1294, null
  br i1 %1295, label %1301, label %1296

1296:                                             ; preds = %1290
  %1297 = bitcast %"class.net::RecordParsed"* %1294 to void (%"class.net::RecordParsed"*)***
  %1298 = load void (%"class.net::RecordParsed"*)**, void (%"class.net::RecordParsed"*)*** %1297, align 8
  %1299 = getelementptr inbounds void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %1298, i64 1
  %1300 = load void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %1299, align 8
  call void %1300(%"class.net::RecordParsed"* nonnull %1294) #13
  br label %1301

1301:                                             ; preds = %1296, %1290
  %1302 = icmp eq %"class.std::__1::unique_ptr"* %1292, %1284
  br i1 %1302, label %1303, label %1290

1303:                                             ; preds = %1301
  %1304 = bitcast %"class.std::__1::vector.55"* %10 to i8**
  %1305 = load i8*, i8** %1304, align 8
  br label %1306

1306:                                             ; preds = %1303, %1286
  %1307 = phi i8* [ %1305, %1303 ], [ %1287, %1286 ]
  store %"class.std::__1::unique_ptr"* %1284, %"class.std::__1::unique_ptr"** %1157, align 8
  call void @_ZdlPv(i8* %1307) #14
  br label %1308

1308:                                             ; preds = %1283, %1306
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1155) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1154) #13
  br label %1471

1309:                                             ; preds = %3
  %1310 = getelementptr inbounds %"class.net::DnsResponseResultExtractor", %"class.net::DnsResponseResultExtractor"* %0, i64 0, i32 0
  %1311 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %1310, align 8
  %1312 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1312) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1312, i8 -86, i64 16, i1 false) #13
  store i8 0, i8* %1312, align 8
  %1313 = bitcast %"class.std::__1::vector.55"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1313) #13
  %1314 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %5, i64 0, i32 0, i32 0
  %1315 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1313, i8 0, i64 24, i1 false) #13
  %1316 = call fastcc i32 @_ZN3net12_GLOBAL__N_122ExtractResponseRecordsERKNS_11DnsResponseEtPNSt3__16vectorINS4_10unique_ptrIKNS_12RecordParsedENS4_14default_deleteIS8_EEEENS4_9allocatorISB_EEEEPN4absl8optionalIN4base9TimeDeltaEEEPNS5_INS4_12basic_stringIcNS4_11char_traitsIcEENSC_IcEEEENSC_ISQ_EEEE(%"class.net::DnsResponse"* dereferenceable(112) %1311, i16 zeroext 65, %"class.std::__1::vector.55"* nonnull %5, %"class.absl::optional.50"* nonnull %4, %"class.std::__1::vector"* null) #13
  %1317 = icmp eq i32 %1316, 0
  br i1 %1317, label %1340, label %1318

1318:                                             ; preds = %1309
  %1319 = bitcast %"class.net::HostCache::Entry"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %1319) #13
  %1320 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %6, i64 0, i32 0
  store i32 -105, i32* %1320, align 8, !alias.scope !18
  %1321 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %1321, align 8, !alias.scope !18
  %1322 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %1323 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %1324 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %1325 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %6, i64 0, i32 6
  %1326 = bitcast %union.anon.14* %1322 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1326, i8 0, i64 49, i1 false) #13, !alias.scope !18
  %1327 = bitcast %union.anon.26* %1323 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1327, i8 0, i64 25, i1 false) #13, !alias.scope !18
  %1328 = bitcast %union.anon.31* %1324 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1328, i8 0, i64 24, i1 false) #13, !alias.scope !18
  store i32 1, i32* %1325, align 8, !alias.scope !18
  %1329 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %6, i64 0, i32 7
  store i8 0, i8* %1329, align 4, !alias.scope !18
  %1330 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %6, i64 0, i32 9, i32 0
  %1331 = bitcast i64* %1330 to <2 x i64>*
  store <2 x i64> <i64 -1000000, i64 0>, <2 x i64>* %1331, align 8, !alias.scope !18
  %1332 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %6, i64 0, i32 11
  store i32 -1, i32* %1332, align 8, !alias.scope !18
  %1333 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %6, i64 0, i32 12, i32 0
  store i32 0, i32* %1333, align 4, !alias.scope !18
  %1334 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %6, i64 0, i32 13, i32 0
  store i32 0, i32* %1334, align 8, !alias.scope !18
  %1335 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %6, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %1336 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %6, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %1337 = bitcast %"class.std::__1::vector.44"* %1335 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1337, i8 0, i64 24, i1 false) #13, !alias.scope !18
  store i8 1, i8* %1336, align 8, !alias.scope !18
  %1338 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %2, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %6) #13
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %1319) #13
  %1339 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %1314, align 8
  br label %1444

1340:                                             ; preds = %1309
  %1341 = bitcast %"class.std::__1::vector.44"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1341) #13
  %1342 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %7, i64 0, i32 0
  %1343 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %7, i64 0, i32 1
  %1344 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %7, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1341, i8 0, i64 24, i1 false) #13
  %1345 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %1314, align 8
  %1346 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %1315, align 8
  %1347 = icmp eq %"class.std::__1::unique_ptr"* %1345, %1346
  br i1 %1347, label %1352, label %1386

1348:                                             ; preds = %1440
  %1349 = bitcast %"class.std::__1::vector.44"* %7 to <2 x i64>*
  %1350 = load <2 x i64>, <2 x i64>* %1349, align 16
  %1351 = load i64, i64* %1344, align 16
  br label %1352

1352:                                             ; preds = %1348, %1340
  %1353 = phi i64 [ %1351, %1348 ], [ 0, %1340 ]
  %1354 = phi <2 x i64> [ %1350, %1348 ], [ zeroinitializer, %1340 ]
  %1355 = bitcast %"class.net::HostCache::Entry"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %1355) #13
  %1356 = load i8, i8* %1312, align 8
  %1357 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1358 = load i64, i64* %1357, align 8
  %1359 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 0
  store i32 -105, i32* %1359, align 8
  %1360 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %1360, align 8
  %1361 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %1362 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %1363 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %1364 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 6
  %1365 = bitcast %union.anon.14* %1361 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1365, i8 0, i64 49, i1 false) #13
  %1366 = bitcast %union.anon.26* %1362 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1366, i8 0, i64 25, i1 false) #13
  %1367 = bitcast %union.anon.31* %1363 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1367, i8 0, i64 24, i1 false) #13
  store i32 1, i32* %1364, align 8
  %1368 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 7
  store i8 0, i8* %1368, align 4
  %1369 = icmp eq i8 %1356, 0
  %1370 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 9, i32 0
  %1371 = select i1 %1369, i64 -1000000, i64 %1358
  store i64 %1371, i64* %1370, align 8
  %1372 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 10, i32 0, i32 0
  store i64 0, i64* %1372, align 8
  %1373 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 11
  store i32 -1, i32* %1373, align 8
  %1374 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 12, i32 0
  store i32 0, i32* %1374, align 4
  %1375 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 13, i32 0
  store i32 0, i32* %1375, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1341, i8 0, i64 24, i1 false) #13
  %1376 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %1377 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %1378 = bitcast %"class.std::__1::vector.44"* %1376 to <2 x i64>*
  store <2 x i64> %1354, <2 x i64>* %1378, align 8
  %1379 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i64 %1353, i64* %1379, align 8
  store i8 1, i8* %1377, align 8
  %1380 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %2, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %8) #13
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %1355) #13
  %1381 = load i64*, i64** %1342, align 16
  %1382 = icmp eq i64* %1381, null
  br i1 %1382, label %1385, label %1383

1383:                                             ; preds = %1352
  %1384 = bitcast i64* %1381 to i8*
  call void @_ZdlPv(i8* %1384) #14
  br label %1385

1385:                                             ; preds = %1383, %1352
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1341) #13
  br label %1444

1386:                                             ; preds = %1340, %1440
  %1387 = phi %"class.std::__1::unique_ptr"* [ %1442, %1440 ], [ %1345, %1340 ]
  %1388 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1387, i64 0, i32 0, i32 0, i32 0
  %1389 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %1388, align 8
  %1390 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1389, i64 0, i32 2
  %1391 = load i16, i16* %1390, align 8
  %1392 = icmp eq i16 %1391, 65
  br i1 %1392, label %1393, label %1398

1393:                                             ; preds = %1386
  %1394 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1389, i64 0, i32 5, i32 0, i32 0, i32 0
  %1395 = bitcast %"class.net::RecordRdata"** %1394 to %"class.net::HttpsRecordRdata"**
  %1396 = load %"class.net::HttpsRecordRdata"*, %"class.net::HttpsRecordRdata"** %1395, align 8
  %1397 = bitcast %"class.net::HttpsRecordRdata"* %1396 to i1 (%"class.net::HttpsRecordRdata"*)***
  br label %1398

1398:                                             ; preds = %1393, %1386
  %1399 = phi i1 (%"class.net::HttpsRecordRdata"*)*** [ %1397, %1393 ], [ null, %1386 ]
  %1400 = phi %"class.net::HttpsRecordRdata"* [ %1396, %1393 ], [ null, %1386 ]
  %1401 = load i1 (%"class.net::HttpsRecordRdata"*)**, i1 (%"class.net::HttpsRecordRdata"*)*** %1399, align 8
  %1402 = getelementptr inbounds i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %1401, i64 6
  %1403 = load i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %1402, align 8
  %1404 = call zeroext i1 %1403(%"class.net::HttpsRecordRdata"* %1400) #13
  %1405 = load i64, i64* %1343, align 8
  %1406 = load i64, i64* %1344, align 16
  %1407 = shl i64 %1406, 6
  %1408 = icmp eq i64 %1405, %1407
  br i1 %1408, label %1409, label %1425

1409:                                             ; preds = %1398
  %1410 = add i64 %1405, 1
  %1411 = icmp slt i64 %1410, 0
  br i1 %1411, label %1412, label %1414

1412:                                             ; preds = %1409
  %1413 = bitcast %"class.std::__1::vector.44"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1413) #15
  unreachable

1414:                                             ; preds = %1409
  %1415 = icmp ult i64 %1405, 4611686018427387903
  br i1 %1415, label %1416, label %1422

1416:                                             ; preds = %1414
  %1417 = shl i64 %1406, 7
  %1418 = add nuw nsw i64 %1405, 64
  %1419 = and i64 %1418, -64
  %1420 = icmp ult i64 %1417, %1419
  %1421 = select i1 %1420, i64 %1419, i64 %1417
  br label %1422

1422:                                             ; preds = %1416, %1414
  %1423 = phi i64 [ %1421, %1416 ], [ 9223372036854775807, %1414 ]
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.44"* nonnull %7, i64 %1423) #13
  %1424 = load i64, i64* %1343, align 8
  br label %1425

1425:                                             ; preds = %1422, %1398
  %1426 = phi i64 [ %1424, %1422 ], [ %1405, %1398 ]
  %1427 = add i64 %1426, 1
  store i64 %1427, i64* %1343, align 8
  %1428 = load i64*, i64** %1342, align 16
  %1429 = lshr i64 %1426, 6
  %1430 = getelementptr inbounds i64, i64* %1428, i64 %1429
  %1431 = and i64 %1426, 63
  %1432 = shl i64 1, %1431
  br i1 %1404, label %1436, label %1433

1433:                                             ; preds = %1425
  %1434 = load i64, i64* %1430, align 8
  %1435 = or i64 %1434, %1432
  br label %1440

1436:                                             ; preds = %1425
  %1437 = xor i64 %1432, -1
  %1438 = load i64, i64* %1430, align 8
  %1439 = and i64 %1438, %1437
  br label %1440

1440:                                             ; preds = %1436, %1433
  %1441 = phi i64 [ %1439, %1436 ], [ %1435, %1433 ]
  store i64 %1441, i64* %1430, align 8
  %1442 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1387, i64 1
  %1443 = icmp eq %"class.std::__1::unique_ptr"* %1442, %1346
  br i1 %1443, label %1348, label %1386

1444:                                             ; preds = %1385, %1318
  %1445 = phi %"class.std::__1::unique_ptr"* [ %1345, %1385 ], [ %1339, %1318 ]
  %1446 = icmp eq %"class.std::__1::unique_ptr"* %1445, null
  br i1 %1446, label %1469, label %1447

1447:                                             ; preds = %1444
  %1448 = bitcast %"class.std::__1::unique_ptr"* %1445 to i8*
  %1449 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %1315, align 8
  %1450 = icmp eq %"class.std::__1::unique_ptr"* %1449, %1445
  br i1 %1450, label %1467, label %1451

1451:                                             ; preds = %1447, %1462
  %1452 = phi %"class.std::__1::unique_ptr"* [ %1453, %1462 ], [ %1449, %1447 ]
  %1453 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1452, i64 -1
  %1454 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1453, i64 0, i32 0, i32 0, i32 0
  %1455 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %1454, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %1454, align 8
  %1456 = icmp eq %"class.net::RecordParsed"* %1455, null
  br i1 %1456, label %1462, label %1457

1457:                                             ; preds = %1451
  %1458 = bitcast %"class.net::RecordParsed"* %1455 to void (%"class.net::RecordParsed"*)***
  %1459 = load void (%"class.net::RecordParsed"*)**, void (%"class.net::RecordParsed"*)*** %1458, align 8
  %1460 = getelementptr inbounds void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %1459, i64 1
  %1461 = load void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %1460, align 8
  call void %1461(%"class.net::RecordParsed"* nonnull %1455) #13
  br label %1462

1462:                                             ; preds = %1457, %1451
  %1463 = icmp eq %"class.std::__1::unique_ptr"* %1453, %1445
  br i1 %1463, label %1464, label %1451

1464:                                             ; preds = %1462
  %1465 = bitcast %"class.std::__1::vector.55"* %5 to i8**
  %1466 = load i8*, i8** %1465, align 8
  br label %1467

1467:                                             ; preds = %1464, %1447
  %1468 = phi i8* [ %1466, %1464 ], [ %1448, %1447 ]
  store %"class.std::__1::unique_ptr"* %1445, %"class.std::__1::unique_ptr"** %1315, align 8
  call void @_ZdlPv(i8* %1468) #14
  br label %1469

1469:                                             ; preds = %1444, %1467
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1313) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1312) #13
  br label %1471

1470:                                             ; preds = %3
  unreachable

1471:                                             ; preds = %3, %1469, %1308, %1150, %599, %422, %282
  %1472 = phi i32 [ 0, %1469 ], [ 0, %1308 ], [ %1126, %1150 ], [ %575, %599 ], [ %398, %422 ], [ %233, %282 ], [ 8, %3 ]
  ret i32 %1472
}

declare zeroext i16 @_ZN3net19DnsQueryTypeToQtypeENS_12DnsQueryTypeE(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net26DnsResponseResultExtractor17CreateEmptyResultENS_12DnsQueryTypeE(%"class.net::HostCache::Entry"* noalias sret, i32) local_unnamed_addr #2 align 2 {
  %3 = or i32 %1, 1
  %4 = icmp eq i32 %3, 7
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* %0, i32 -2, i32 0, i8 0, i64 undef) #13
  br label %25

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 0
  store i32 -105, i32* %7, align 8
  %8 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 6
  %13 = bitcast %union.anon.14* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 49, i1 false) #13
  %14 = bitcast %union.anon.26* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 25, i1 false) #13
  %15 = bitcast %union.anon.31* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #13
  store i32 1, i32* %12, align 8
  %16 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 7
  store i8 0, i8* %16, align 4
  %17 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 9, i32 0
  %18 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 -1000000, i64 0>, <2 x i64>* %18, align 8
  %19 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 11
  store i32 -1, i32* %19, align 8
  %20 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 12, i32 0
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 13, i32 0
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::vector.44"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false)
  store i8 1, i8* %23, align 8
  br label %25

25:                                               ; preds = %6, %5
  ret void
}

declare void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"*, i32, i32, i8, i64) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN3net12_GLOBAL__N_122ExtractResponseRecordsERKNS_11DnsResponseEtPNSt3__16vectorINS4_10unique_ptrIKNS_12RecordParsedENS4_14default_deleteIS8_EEEENS4_9allocatorISB_EEEEPN4absl8optionalIN4base9TimeDeltaEEEPNS5_INS4_12basic_stringIcNS4_11char_traitsIcEENSC_IcEEEENSC_ISQ_EEEE(%"class.net::DnsResponse"* dereferenceable(112), i16 zeroext, %"class.std::__1::vector.55"* nocapture, %"class.absl::optional.50"* nocapture, %"class.std::__1::vector"*) unnamed_addr #2 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca %"class.std::__1::vector.55", align 16
  %11 = alloca i64, align 8
  %12 = alloca %"class.net::DnsRecordParser", align 8
  %13 = alloca %"class.std::__1::map", align 8
  %14 = alloca %"class.std::__1::unique_ptr", align 8
  %15 = alloca %"class.std::__1::vector", align 16
  %16 = alloca %"struct.net::DnsResourceRecord", align 8
  %17 = bitcast %"class.std::__1::vector.55"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %10, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %10, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 0, i64 24, i1 false) #13
  %21 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  store i64 -6148914691236517206, i64* %11, align 8
  %22 = bitcast %"class.net::DnsRecordParser"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #13
  %23 = bitcast %"class.net::DnsRecordParser"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 40, i1 false)
  call void @_ZNK3net11DnsResponse6ParserEv(%"class.net::DnsRecordParser"* nonnull sret %12, %"class.net::DnsResponse"* %0) #13
  %24 = bitcast %"class.std::__1::map"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %13, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_node_base"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %28, %"class.std::__1::__tree_end_node"** %25, align 8
  %30 = call i32 @_ZNK3net11DnsResponse12answer_countEv(%"class.net::DnsResponse"* %0) #13
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %127, label %32

32:                                               ; preds = %5
  %33 = bitcast %"class.std::__1::unique_ptr"* %14 to i8*
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::unique_ptr"** %19 to i64*
  %36 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %13, i64 0, i32 0
  br label %40

37:                                               ; preds = %123
  %38 = call i32 @_ZNK3net11DnsResponse12answer_countEv(%"class.net::DnsResponse"* %0) #13
  %39 = icmp ult i32 %125, %38
  br i1 %39, label %40, label %126

40:                                               ; preds = %32, %37
  %41 = phi i64 [ -6148914691236517206, %32 ], [ %112, %37 ]
  %42 = phi i32 [ undef, %32 ], [ %116, %37 ]
  %43 = phi i32 [ 0, %32 ], [ %125, %37 ]
  %44 = phi i8 [ 0, %32 ], [ %114, %37 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  store %"class.net::RecordParsed"* inttoptr (i64 -6148914691236517206 to %"class.net::RecordParsed"*), %"class.net::RecordParsed"** %34, align 8
  %45 = call i64 @_ZN4base4Time3NowEv() #13
  %46 = call %"class.net::RecordParsed"* @_ZN3net12RecordParsed10CreateFromEPNS_15DnsRecordParserEN4base4TimeE(%"class.net::DnsRecordParser"* nonnull %12, i64 %45) #13
  store %"class.net::RecordParsed"* %46, %"class.net::RecordParsed"** %34, align 8
  %47 = icmp eq %"class.net::RecordParsed"* %46, null
  %48 = ptrtoint %"class.net::RecordParsed"* %46 to i64
  br i1 %47, label %49, label %50

49:                                               ; preds = %40
  store i64 %41, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  br label %562

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %46, i64 0, i32 3
  %52 = load i16, i16* %51, align 2
  %53 = icmp eq i16 %52, 1
  br i1 %53, label %54, label %105

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %46, i64 0, i32 2
  %56 = load i16, i16* %55, align 8
  %57 = icmp eq i16 %56, 5
  br i1 %57, label %58, label %85

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %46, i64 0, i32 1
  %60 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"* nonnull %36, %"class.std::__1::basic_string"* dereferenceable(24) %59) #13
  %61 = icmp eq %"class.std::__1::__tree_end_node"* %60, %28
  br i1 %61, label %62, label %105

62:                                               ; preds = %58
  %63 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %34, align 8
  %64 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %63, i64 0, i32 2
  %65 = load i16, i16* %64, align 8
  %66 = icmp eq i16 %65, 5
  br i1 %66, label %67, label %111

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %63, i64 0, i32 5, i32 0, i32 0, i32 0
  %69 = bitcast %"class.net::RecordRdata"** %68 to %"class.net::CnameRecordRdata"**
  %70 = load %"class.net::CnameRecordRdata"*, %"class.net::CnameRecordRdata"** %69, align 8
  %71 = icmp eq %"class.net::CnameRecordRdata"* %70, null
  br i1 %71, label %105, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %63, i64 0, i32 4
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i64
  %76 = mul nuw nsw i64 %75, 1000000
  %77 = icmp eq i8 %44, 0
  %78 = select i1 %77, i64 9223372036854775807, i64 %41
  %79 = icmp slt i64 %76, %78
  %80 = select i1 %79, i64 %76, i64 %78
  %81 = select i1 %77, i8 1, i8 %44
  %82 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %63, i64 0, i32 1
  %83 = getelementptr inbounds %"class.net::CnameRecordRdata", %"class.net::CnameRecordRdata"* %70, i64 0, i32 1
  %84 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKS7_SH_EEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* nonnull %36, %"class.std::__1::basic_string"* dereferenceable(24) %82, %"class.std::__1::basic_string"* dereferenceable(24) %82, %"class.std::__1::basic_string"* dereferenceable(24) %83) #13
  br label %105

85:                                               ; preds = %54
  %86 = icmp eq i16 %56, %1
  br i1 %86, label %87, label %105

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %46, i64 0, i32 4
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i64
  %91 = mul nuw nsw i64 %90, 1000000
  %92 = icmp eq i8 %44, 0
  %93 = select i1 %92, i64 9223372036854775807, i64 %41
  %94 = icmp slt i64 %91, %93
  %95 = select i1 %94, i64 %91, i64 %93
  %96 = select i1 %92, i8 1, i8 %44
  %97 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %19, align 8
  %98 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 16
  %99 = icmp ult %"class.std::__1::unique_ptr"* %97, %98
  br i1 %99, label %100, label %104

100:                                              ; preds = %87
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %34, align 8
  %101 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %48, i64* %101, align 8
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %97, i64 1
  %103 = ptrtoint %"class.std::__1::unique_ptr"* %102 to i64
  store i64 %103, i64* %35, align 8
  br label %105

104:                                              ; preds = %87
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN3net12RecordParsedENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.55"* nonnull %10, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %14) #13
  br label %105

105:                                              ; preds = %104, %100, %58, %50, %72, %85, %67
  %106 = phi i64 [ %41, %67 ], [ %41, %58 ], [ %80, %72 ], [ %41, %85 ], [ %41, %50 ], [ %95, %100 ], [ %95, %104 ]
  %107 = phi i8 [ %44, %67 ], [ %44, %58 ], [ %81, %72 ], [ %44, %85 ], [ %44, %50 ], [ %96, %100 ], [ %96, %104 ]
  %108 = phi i32 [ 1, %67 ], [ 1, %58 ], [ 0, %72 ], [ 0, %85 ], [ 0, %50 ], [ 0, %100 ], [ 0, %104 ]
  %109 = phi i32 [ 2, %67 ], [ 6, %58 ], [ %42, %72 ], [ %42, %85 ], [ %42, %50 ], [ %42, %100 ], [ %42, %104 ]
  %110 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %34, align 8
  br label %111

111:                                              ; preds = %105, %62
  %112 = phi i64 [ %106, %105 ], [ %41, %62 ]
  %113 = phi %"class.net::RecordParsed"* [ %110, %105 ], [ %63, %62 ]
  %114 = phi i8 [ %107, %105 ], [ %44, %62 ]
  %115 = phi i32 [ %108, %105 ], [ 1, %62 ]
  %116 = phi i32 [ %109, %105 ], [ 2, %62 ]
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %34, align 8
  %117 = icmp eq %"class.net::RecordParsed"* %113, null
  br i1 %117, label %123, label %118

118:                                              ; preds = %111
  %119 = bitcast %"class.net::RecordParsed"* %113 to void (%"class.net::RecordParsed"*)***
  %120 = load void (%"class.net::RecordParsed"*)**, void (%"class.net::RecordParsed"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %120, i64 1
  %122 = load void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %121, align 8
  call void %122(%"class.net::RecordParsed"* nonnull %113) #13
  br label %123

123:                                              ; preds = %111, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %124 = icmp eq i32 %115, 0
  %125 = add nuw i32 %43, 1
  br i1 %124, label %37, label %561

126:                                              ; preds = %37
  store i64 %112, i64* %11, align 8
  br label %127

127:                                              ; preds = %5, %126
  %128 = phi i64 [ %112, %126 ], [ -6148914691236517206, %5 ]
  %129 = phi i8 [ %114, %126 ], [ 0, %5 ]
  %130 = bitcast %"class.std::__1::vector"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #13
  %131 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 0
  %132 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 1
  %133 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %130, i8 0, i64 24, i1 false) #13
  %134 = call { i8*, i64 } @_ZNK3net11DnsResponse19GetSingleDottedNameEv(%"class.net::DnsResponse"* %0) #13
  %135 = extractvalue { i8*, i64 } %134, 0
  %136 = extractvalue { i8*, i64 } %134, 1
  %137 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #13
  %138 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %140 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 0, i64 24, i1 false) #13
  %141 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #13
  %142 = icmp ugt i64 %136, -17
  br i1 %142, label %143, label %145

143:                                              ; preds = %127
  %144 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %144) #15
  unreachable

145:                                              ; preds = %127
  %146 = icmp ult i64 %136, 23
  br i1 %146, label %156, label %147

147:                                              ; preds = %145
  %148 = add nuw i64 %136, 16
  %149 = and i64 %148, -16
  %150 = call i8* @_Znwm(i64 %149) #14
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %150, i8** %151, align 8, !alias.scope !21
  %152 = or i64 %149, -9223372036854775808
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %152, i64* %153, align 8, !alias.scope !21
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %136, i64* %154, align 8, !alias.scope !21
  %155 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %161

156:                                              ; preds = %145
  %157 = trunc i64 %136 to i8
  %158 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %159 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %158, i64 0, i32 1, i32 0
  store i8 %157, i8* %159, align 1, !alias.scope !21
  %160 = icmp eq i64 %136, 0
  br i1 %160, label %164, label %161

161:                                              ; preds = %156, %147
  %162 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %158, %156 ], [ %155, %147 ]
  %163 = phi i8* [ %141, %156 ], [ %150, %147 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %163, i8* align 1 %135, i64 %136, i1 false) #13
  br label %164

164:                                              ; preds = %161, %156
  %165 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %162, %161 ], [ %158, %156 ]
  %166 = phi i8* [ %163, %161 ], [ %141, %156 ]
  %167 = getelementptr inbounds i8, i8* %166, i64 %136
  store i8 0, i8* %167, align 1
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #13
  %168 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %165, i64 0, i32 1, i32 0
  %169 = load i8, i8* %168, align 1
  %170 = icmp slt i8 %169, 0
  br i1 %170, label %171, label %174

171:                                              ; preds = %164
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load i8*, i8** %172, align 8
  call void @_ZdlPv(i8* %173) #14
  br label %174

174:                                              ; preds = %171, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #13
  %175 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %175) #13
  br i1 %146, label %185, label %176

176:                                              ; preds = %174
  %177 = add nuw i64 %136, 16
  %178 = and i64 %177, -16
  %179 = call i8* @_Znwm(i64 %178) #14
  %180 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %179, i8** %180, align 8, !alias.scope !24
  %181 = or i64 %178, -9223372036854775808
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %181, i64* %182, align 8, !alias.scope !24
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %136, i64* %183, align 8, !alias.scope !24
  %184 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %190

185:                                              ; preds = %174
  %186 = trunc i64 %136 to i8
  %187 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %188 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %187, i64 0, i32 1, i32 0
  store i8 %186, i8* %188, align 1, !alias.scope !24
  %189 = icmp eq i64 %136, 0
  br i1 %189, label %193, label %190

190:                                              ; preds = %185, %176
  %191 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %187, %185 ], [ %184, %176 ]
  %192 = phi i8* [ %175, %185 ], [ %179, %176 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %192, i8* align 1 %135, i64 %136, i1 false) #13
  br label %193

193:                                              ; preds = %190, %185
  %194 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %187, %185 ], [ %191, %190 ]
  %195 = phi i8* [ %175, %185 ], [ %192, %190 ]
  %196 = getelementptr inbounds i8, i8* %195, i64 %136
  store i8 0, i8* %196, align 1
  %197 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %13, i64 0, i32 0
  %198 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"* nonnull %197, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #13
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %194, i64 0, i32 1, i32 0
  %200 = load i8, i8* %199, align 1
  %201 = icmp slt i8 %200, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %193
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load i8*, i8** %203, align 8
  call void @_ZdlPv(i8* %204) #14
  br label %205

205:                                              ; preds = %202, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %175) #13
  %206 = icmp eq %"class.std::__1::__tree_end_node"* %198, %28
  br i1 %206, label %247, label %207

207:                                              ; preds = %205
  %208 = bitcast %"class.std::__1::basic_string"** %139 to i64*
  br label %209

209:                                              ; preds = %236, %207
  %210 = phi %"class.std::__1::__tree_end_node"* [ %198, %207 ], [ %237, %236 ]
  %211 = phi i64 [ 0, %207 ], [ %212, %236 ]
  %212 = add i64 %211, 1
  %213 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %210, i64 7
  %214 = bitcast %"class.std::__1::__tree_end_node"* %213 to %"class.std::__1::basic_string"*
  %215 = bitcast %"class.std::__1::__tree_end_node"* %213 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %215, i64 0, i32 1, i32 0
  %217 = load i8, i8* %216, align 1
  %218 = icmp slt i8 %217, 0
  %219 = bitcast %"class.std::__1::__tree_end_node"* %213 to i8**
  %220 = load i8*, i8** %219, align 8
  %221 = bitcast %"class.std::__1::__tree_end_node"* %213 to i8*
  %222 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %210, i64 8
  %223 = bitcast %"class.std::__1::__tree_end_node"* %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %139, align 8
  %226 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %140, align 8
  %227 = icmp ult %"class.std::__1::basic_string"* %225, %226
  br i1 %227, label %228, label %235

228:                                              ; preds = %209
  br i1 %218, label %231, label %229

229:                                              ; preds = %228
  %230 = bitcast %"class.std::__1::basic_string"* %225 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %230, i8* align 8 %221, i64 24, i1 false) #13
  br label %232

231:                                              ; preds = %228
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %225, i8* %220, i64 %224) #13
  br label %232

232:                                              ; preds = %231, %229
  %233 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %225, i64 1
  %234 = ptrtoint %"class.std::__1::basic_string"* %233 to i64
  store i64 %234, i64* %208, align 8
  br label %236

235:                                              ; preds = %209
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRKS6_EEEvDpOT_(%"class.std::__1::vector"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %214) #13
  br label %236

236:                                              ; preds = %235, %232
  %237 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"* nonnull %197, %"class.std::__1::basic_string"* dereferenceable(24) %214) #13
  %238 = icmp eq %"class.std::__1::__tree_end_node"* %237, %28
  %239 = load i64, i64* %27, align 8
  %240 = icmp ugt i64 %212, %239
  %241 = or i1 %238, %240
  br i1 %241, label %242, label %209

242:                                              ; preds = %236
  %243 = bitcast %"class.std::__1::__tree_end_node"* %213 to i8*
  %244 = select i1 %218, i8* %220, i8* %243
  %245 = zext i8 %217 to i64
  %246 = select i1 %218, i64 %224, i64 %245
  br label %247

247:                                              ; preds = %242, %205
  %248 = phi i8* [ %135, %205 ], [ %244, %242 ]
  %249 = phi i64 [ %136, %205 ], [ %246, %242 ]
  %250 = phi i64 [ 0, %205 ], [ %212, %242 ]
  %251 = load i64, i64* %27, align 8
  %252 = icmp eq i64 %250, %251
  br i1 %252, label %253, label %311

253:                                              ; preds = %247
  %254 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %18, align 16
  %255 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %19, align 8
  %256 = icmp eq %"class.std::__1::unique_ptr"* %254, %255
  br i1 %256, label %278, label %259

257:                                              ; preds = %259
  %258 = icmp eq %"class.std::__1::unique_ptr"* %277, %255
  br i1 %258, label %278, label %259

259:                                              ; preds = %253, %257
  %260 = phi %"class.std::__1::unique_ptr"* [ %277, %257 ], [ %254, %253 ]
  %261 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %260, i64 0, i32 0, i32 0, i32 0
  %262 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %261, align 8
  %263 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %262, i64 0, i32 1
  %264 = bitcast %"class.std::__1::basic_string"* %263 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %265 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %264, i64 0, i32 1, i32 0
  %266 = load i8, i8* %265, align 1
  %267 = icmp slt i8 %266, 0
  %268 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %263, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load i8*, i8** %268, align 8
  %270 = bitcast %"class.std::__1::basic_string"* %263 to i8*
  %271 = select i1 %267, i8* %269, i8* %270
  %272 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %262, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %273 = load i64, i64* %272, align 8
  %274 = zext i8 %266 to i64
  %275 = select i1 %267, i64 %273, i64 %274
  %276 = call zeroext i1 @_ZN4base26EqualsCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %248, i64 %249, i8* %271, i64 %275) #13
  %277 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %260, i64 1
  br i1 %276, label %257, label %311

278:                                              ; preds = %257, %253
  %279 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %279) #13
  %280 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %281 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %279, i8 0, i64 24, i1 false) #13
  %282 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %139, align 8
  %283 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %138, align 8
  %284 = call %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_13move_iteratorINS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISI_E9referenceEEE5valueESE_E4typeENSC_IPKS6_EESI_SI_(%"class.std::__1::vector"* nonnull %9, %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"* %282, %"class.std::__1::basic_string"* %282, %"class.std::__1::basic_string"* %283, %"class.std::__1::basic_string"* %283) #13
  %285 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %280, align 8
  %286 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %281, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* nonnull %15, %"class.std::__1::basic_string"* %285, %"class.std::__1::basic_string"* %286) #13
  %287 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %280, align 8
  %288 = icmp eq %"class.std::__1::basic_string"* %287, null
  br i1 %288, label %310, label %289

289:                                              ; preds = %278
  %290 = bitcast %"class.std::__1::basic_string"* %287 to i8*
  %291 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %281, align 8
  %292 = icmp eq %"class.std::__1::basic_string"* %291, %287
  br i1 %292, label %308, label %293

293:                                              ; preds = %289, %303
  %294 = phi %"class.std::__1::basic_string"* [ %295, %303 ], [ %291, %289 ]
  %295 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %294, i64 -1
  %296 = bitcast %"class.std::__1::basic_string"* %295 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %297 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %296, i64 0, i32 1, i32 0
  %298 = load i8, i8* %297, align 1
  %299 = icmp slt i8 %298, 0
  br i1 %299, label %300, label %303

300:                                              ; preds = %293
  %301 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %295, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = load i8*, i8** %301, align 8
  call void @_ZdlPv(i8* %302) #14
  br label %303

303:                                              ; preds = %300, %293
  %304 = icmp eq %"class.std::__1::basic_string"* %295, %287
  br i1 %304, label %305, label %293

305:                                              ; preds = %303
  %306 = bitcast %"class.std::__1::vector"* %9 to i8**
  %307 = load i8*, i8** %306, align 8
  br label %308

308:                                              ; preds = %305, %289
  %309 = phi i8* [ %307, %305 ], [ %290, %289 ]
  store %"class.std::__1::basic_string"* %287, %"class.std::__1::basic_string"** %281, align 8
  call void @_ZdlPv(i8* %309) #14
  br label %310

310:                                              ; preds = %308, %278
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %279) #13
  br label %311

311:                                              ; preds = %259, %310, %247
  %312 = phi i32 [ 0, %310 ], [ 7, %247 ], [ 3, %259 ]
  %313 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %138, align 8
  %314 = icmp eq %"class.std::__1::basic_string"* %313, null
  br i1 %314, label %336, label %315

315:                                              ; preds = %311
  %316 = bitcast %"class.std::__1::basic_string"* %313 to i8*
  %317 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %139, align 8
  %318 = icmp eq %"class.std::__1::basic_string"* %317, %313
  br i1 %318, label %334, label %319

319:                                              ; preds = %315, %329
  %320 = phi %"class.std::__1::basic_string"* [ %321, %329 ], [ %317, %315 ]
  %321 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %320, i64 -1
  %322 = bitcast %"class.std::__1::basic_string"* %321 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %323 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %322, i64 0, i32 1, i32 0
  %324 = load i8, i8* %323, align 1
  %325 = icmp slt i8 %324, 0
  br i1 %325, label %326, label %329

326:                                              ; preds = %319
  %327 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %321, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %328 = load i8*, i8** %327, align 8
  call void @_ZdlPv(i8* %328) #14
  br label %329

329:                                              ; preds = %326, %319
  %330 = icmp eq %"class.std::__1::basic_string"* %321, %313
  br i1 %330, label %331, label %319

331:                                              ; preds = %329
  %332 = bitcast %"class.std::__1::vector"* %6 to i8**
  %333 = load i8*, i8** %332, align 8
  br label %334

334:                                              ; preds = %331, %315
  %335 = phi i8* [ %333, %331 ], [ %316, %315 ]
  store %"class.std::__1::basic_string"* %313, %"class.std::__1::basic_string"** %139, align 8
  call void @_ZdlPv(i8* %335) #14
  br label %336

336:                                              ; preds = %311, %334
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #13
  %337 = icmp eq i32 %312, 0
  br i1 %337, label %338, label %535

338:                                              ; preds = %336
  %339 = call zeroext i8 @_ZNK3net11DnsResponse5rcodeEv(%"class.net::DnsResponse"* %0) #13
  %340 = icmp eq i8 %339, 3
  br i1 %340, label %347, label %341

341:                                              ; preds = %338
  %342 = call i32 @_ZNK3net11DnsResponse12answer_countEv(%"class.net::DnsResponse"* %0) #13
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %386

344:                                              ; preds = %341
  %345 = call zeroext i8 @_ZNK3net11DnsResponse5rcodeEv(%"class.net::DnsResponse"* %0) #13
  %346 = icmp eq i8 %345, 0
  br i1 %346, label %347, label %386

347:                                              ; preds = %344, %338
  %348 = call i32 @_ZNK3net11DnsResponse15authority_countEv(%"class.net::DnsResponse"* %0) #13
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %355, label %350

350:                                              ; preds = %347
  %351 = bitcast %"struct.net::DnsResourceRecord"* %16 to i8*
  %352 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %16, i64 0, i32 1
  %353 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %16, i64 0, i32 3
  br label %361

354:                                              ; preds = %379
  store i64 %380, i64* %11, align 8
  br label %355

355:                                              ; preds = %347, %354
  %356 = phi i8 [ %381, %354 ], [ %129, %347 ]
  %357 = phi i8 [ %382, %354 ], [ 0, %347 ]
  %358 = and i8 %357, 1
  %359 = icmp eq i8 %358, 0
  %360 = select i1 %359, i8 0, i8 %356
  br label %386

361:                                              ; preds = %350, %379
  %362 = phi i64 [ %128, %350 ], [ %380, %379 ]
  %363 = phi i32 [ 0, %350 ], [ %383, %379 ]
  %364 = phi i8 [ 0, %350 ], [ %382, %379 ]
  %365 = phi i8 [ %129, %350 ], [ %381, %379 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %351) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %351, i8 -86, i64 72, i1 false)
  call void @_ZN3net17DnsResourceRecordC1Ev(%"struct.net::DnsResourceRecord"* nonnull %16) #13
  %366 = call zeroext i1 @_ZN3net15DnsRecordParser10ReadRecordEPNS_17DnsResourceRecordE(%"class.net::DnsRecordParser"* nonnull %12, %"struct.net::DnsResourceRecord"* nonnull %16) #13
  %367 = load i16, i16* %352, align 8
  %368 = icmp eq i16 %367, 6
  %369 = and i1 %366, %368
  br i1 %369, label %370, label %379

370:                                              ; preds = %361
  %371 = load i32, i32* %353, align 4
  %372 = zext i32 %371 to i64
  %373 = mul nuw nsw i64 %372, 1000000
  %374 = icmp eq i8 %365, 0
  %375 = select i1 %374, i64 9223372036854775807, i64 %362
  %376 = icmp slt i64 %373, %375
  %377 = select i1 %376, i64 %373, i64 %375
  %378 = select i1 %374, i8 1, i8 %365
  br label %379

379:                                              ; preds = %370, %361
  %380 = phi i64 [ %377, %370 ], [ %362, %361 ]
  %381 = phi i8 [ %378, %370 ], [ %365, %361 ]
  %382 = phi i8 [ 1, %370 ], [ %364, %361 ]
  call void @_ZN3net17DnsResourceRecordD1Ev(%"struct.net::DnsResourceRecord"* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %351) #13
  %383 = add nuw i32 %363, 1
  %384 = call i32 @_ZNK3net11DnsResponse15authority_countEv(%"class.net::DnsResponse"* %0) #13
  %385 = icmp ult i32 %383, %384
  br i1 %385, label %361, label %354

386:                                              ; preds = %355, %344, %341
  %387 = phi i8 [ %129, %344 ], [ %129, %341 ], [ %360, %355 ]
  %388 = call i32 @_ZNK3net11DnsResponse23additional_answer_countEv(%"class.net::DnsResponse"* %0) #13
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %392, label %390

390:                                              ; preds = %386
  %391 = icmp eq i16 %1, 65
  br label %433

392:                                              ; preds = %496, %386
  %393 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %2, i64 0, i32 0, i32 0
  %394 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %393, align 8
  %395 = icmp eq %"class.std::__1::unique_ptr"* %394, null
  br i1 %395, label %420, label %396

396:                                              ; preds = %392
  %397 = bitcast %"class.std::__1::unique_ptr"* %394 to i8*
  %398 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %2, i64 0, i32 0, i32 1
  %399 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %398, align 8
  %400 = icmp eq %"class.std::__1::unique_ptr"* %399, %394
  br i1 %400, label %417, label %401

401:                                              ; preds = %396, %412
  %402 = phi %"class.std::__1::unique_ptr"* [ %403, %412 ], [ %399, %396 ]
  %403 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %402, i64 -1
  %404 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 0, i32 0, i32 0, i32 0
  %405 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %404, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %404, align 8
  %406 = icmp eq %"class.net::RecordParsed"* %405, null
  br i1 %406, label %412, label %407

407:                                              ; preds = %401
  %408 = bitcast %"class.net::RecordParsed"* %405 to void (%"class.net::RecordParsed"*)***
  %409 = load void (%"class.net::RecordParsed"*)**, void (%"class.net::RecordParsed"*)*** %408, align 8
  %410 = getelementptr inbounds void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %409, i64 1
  %411 = load void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %410, align 8
  call void %411(%"class.net::RecordParsed"* nonnull %405) #13
  br label %412

412:                                              ; preds = %407, %401
  %413 = icmp eq %"class.std::__1::unique_ptr"* %403, %394
  br i1 %413, label %414, label %401

414:                                              ; preds = %412
  %415 = bitcast %"class.std::__1::vector.55"* %2 to i8**
  %416 = load i8*, i8** %415, align 8
  br label %417

417:                                              ; preds = %414, %396
  %418 = phi i8* [ %416, %414 ], [ %397, %396 ]
  store %"class.std::__1::unique_ptr"* %394, %"class.std::__1::unique_ptr"** %398, align 8
  call void @_ZdlPv(i8* %418) #14
  %419 = bitcast %"class.std::__1::vector.55"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %419, i8 0, i64 24, i1 false) #13
  br label %420

420:                                              ; preds = %392, %417
  %421 = bitcast %"class.std::__1::vector.55"* %10 to <2 x i64>*
  %422 = load <2 x i64>, <2 x i64>* %421, align 16
  %423 = bitcast %"class.std::__1::vector.55"* %2 to <2 x i64>*
  store <2 x i64> %422, <2 x i64>* %423, align 8
  %424 = bitcast %"class.std::__1::unique_ptr"** %20 to i64*
  %425 = load i64, i64* %424, align 16
  %426 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %427 = bitcast %"class.std::__1::unique_ptr"** %426 to i64*
  store i64 %425, i64* %427, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 0, i64 24, i1 false) #13
  %428 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %387, i8* %428, align 8
  %429 = getelementptr inbounds i8, i8* %428, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %429, i8* nonnull align 1 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.54 } } } }, { { { { i8, [7 x i8], %union.anon.54 } } } }* @__const._ZN3net12_GLOBAL__N_122ExtractResponseRecordsERKNS_11DnsResponseEtPNSt3__16vectorINS4_10unique_ptrIKNS_12RecordParsedENS4_14default_deleteIS8_EEEENS4_9allocatorISB_EEEEPN4absl8optionalIN4base9TimeDeltaEEEPNS5_INS4_12basic_stringIcNS4_11char_traitsIcEENSC_IcEEEENSC_ISQ_EEEE.response_ttl, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  %430 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %431 = load i64, i64* %11, align 8
  store i64 %431, i64* %430, align 8
  %432 = icmp eq %"class.std::__1::vector"* %4, null
  br i1 %432, label %535, label %500

433:                                              ; preds = %390, %496
  %434 = phi i32 [ 0, %390 ], [ %497, %496 ]
  %435 = call i64 @_ZN4base4Time3NowEv() #13
  %436 = call %"class.net::RecordParsed"* @_ZN3net12RecordParsed10CreateFromEPNS_15DnsRecordParserEN4base4TimeE(%"class.net::DnsRecordParser"* nonnull %12, i64 %435) #13
  %437 = icmp eq %"class.net::RecordParsed"* %436, null
  br i1 %437, label %496, label %438

438:                                              ; preds = %433
  %439 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %436, i64 0, i32 3
  %440 = load i16, i16* %439, align 2
  %441 = icmp eq i16 %440, 1
  br i1 %441, label %442, label %491

442:                                              ; preds = %438
  %443 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %436, i64 0, i32 2
  %444 = load i16, i16* %443, align 8
  %445 = icmp eq i16 %444, 65
  br i1 %445, label %446, label %491

446:                                              ; preds = %442
  %447 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %436, i64 0, i32 5, i32 0, i32 0, i32 0
  %448 = bitcast %"class.net::RecordRdata"** %447 to %"class.net::HttpsRecordRdata"**
  %449 = load %"class.net::HttpsRecordRdata"*, %"class.net::HttpsRecordRdata"** %448, align 8
  %450 = icmp eq %"class.net::HttpsRecordRdata"* %449, null
  br i1 %450, label %463, label %451

451:                                              ; preds = %446
  %452 = bitcast %"class.net::HttpsRecordRdata"* %449 to i1 (%"class.net::HttpsRecordRdata"*)***
  %453 = load i1 (%"class.net::HttpsRecordRdata"*)**, i1 (%"class.net::HttpsRecordRdata"*)*** %452, align 8
  %454 = getelementptr inbounds i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %453, i64 6
  %455 = load i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %454, align 8
  %456 = call zeroext i1 %455(%"class.net::HttpsRecordRdata"* nonnull %449) #13
  br i1 %456, label %463, label %457

457:                                              ; preds = %451
  %458 = load i1 (%"class.net::HttpsRecordRdata"*)**, i1 (%"class.net::HttpsRecordRdata"*)*** %452, align 8
  %459 = getelementptr inbounds i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %458, i64 5
  %460 = load i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %459, align 8
  %461 = call zeroext i1 %460(%"class.net::HttpsRecordRdata"* nonnull %449) #13
  %462 = select i1 %461, i32 1, i32 2
  br label %463

463:                                              ; preds = %457, %451, %446
  %464 = phi i32 [ 0, %446 ], [ 0, %451 ], [ %462, %457 ]
  br i1 %391, label %478, label %465

465:                                              ; preds = %463
  %466 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_135SaveMetricsForAdditionalHttpsRecordERKNS_12RecordParsedEbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %467 = inttoptr i64 %466 to %"class.base::HistogramBase"*
  %468 = icmp eq i64 %466, 0
  br i1 %468, label %469, label %472

469:                                              ; preds = %465
  %470 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1) #13
  %471 = ptrtoint %"class.base::HistogramBase"* %470 to i64
  store atomic i64 %471, i64* @_ZZN3net12_GLOBAL__N_135SaveMetricsForAdditionalHttpsRecordERKNS_12RecordParsedEbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %472

472:                                              ; preds = %469, %465
  %473 = phi %"class.base::HistogramBase"* [ %467, %465 ], [ %470, %469 ]
  %474 = bitcast %"class.base::HistogramBase"* %473 to void (%"class.base::HistogramBase"*, i32)***
  %475 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %474, align 8
  %476 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %475, i64 6
  %477 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %476, align 8
  call void %477(%"class.base::HistogramBase"* %473, i32 %464) #13
  br label %491

478:                                              ; preds = %463
  %479 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_135SaveMetricsForAdditionalHttpsRecordERKNS_12RecordParsedEbE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %480 = inttoptr i64 %479 to %"class.base::HistogramBase"*
  %481 = icmp eq i64 %479, 0
  br i1 %481, label %482, label %485

482:                                              ; preds = %478
  %483 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1) #13
  %484 = ptrtoint %"class.base::HistogramBase"* %483 to i64
  store atomic i64 %484, i64* @_ZZN3net12_GLOBAL__N_135SaveMetricsForAdditionalHttpsRecordERKNS_12RecordParsedEbE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %485

485:                                              ; preds = %482, %478
  %486 = phi %"class.base::HistogramBase"* [ %480, %478 ], [ %483, %482 ]
  %487 = bitcast %"class.base::HistogramBase"* %486 to void (%"class.base::HistogramBase"*, i32)***
  %488 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %487, align 8
  %489 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %488, i64 6
  %490 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %489, align 8
  call void %490(%"class.base::HistogramBase"* %486, i32 %464) #13
  br label %491

491:                                              ; preds = %485, %472, %442, %438
  %492 = bitcast %"class.net::RecordParsed"* %436 to void (%"class.net::RecordParsed"*)***
  %493 = load void (%"class.net::RecordParsed"*)**, void (%"class.net::RecordParsed"*)*** %492, align 8
  %494 = getelementptr inbounds void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %493, i64 1
  %495 = load void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %494, align 8
  call void %495(%"class.net::RecordParsed"* nonnull %436) #13
  br label %496

496:                                              ; preds = %433, %491
  %497 = add nuw i32 %434, 1
  %498 = call i32 @_ZNK3net11DnsResponse23additional_answer_countEv(%"class.net::DnsResponse"* %0) #13
  %499 = icmp ult i32 %497, %498
  br i1 %499, label %433, label %392

500:                                              ; preds = %420
  %501 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %502 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %501, align 8
  %503 = icmp eq %"class.std::__1::basic_string"* %502, null
  br i1 %503, label %527, label %504

504:                                              ; preds = %500
  %505 = bitcast %"class.std::__1::basic_string"* %502 to i8*
  %506 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %507 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %506, align 8
  %508 = icmp eq %"class.std::__1::basic_string"* %507, %502
  br i1 %508, label %524, label %509

509:                                              ; preds = %504, %519
  %510 = phi %"class.std::__1::basic_string"* [ %511, %519 ], [ %507, %504 ]
  %511 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %510, i64 -1
  %512 = bitcast %"class.std::__1::basic_string"* %511 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %513 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %512, i64 0, i32 1, i32 0
  %514 = load i8, i8* %513, align 1
  %515 = icmp slt i8 %514, 0
  br i1 %515, label %516, label %519

516:                                              ; preds = %509
  %517 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %511, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %518 = load i8*, i8** %517, align 8
  call void @_ZdlPv(i8* %518) #14
  br label %519

519:                                              ; preds = %516, %509
  %520 = icmp eq %"class.std::__1::basic_string"* %511, %502
  br i1 %520, label %521, label %509

521:                                              ; preds = %519
  %522 = bitcast %"class.std::__1::vector"* %4 to i8**
  %523 = load i8*, i8** %522, align 8
  br label %524

524:                                              ; preds = %521, %504
  %525 = phi i8* [ %523, %521 ], [ %505, %504 ]
  store %"class.std::__1::basic_string"* %502, %"class.std::__1::basic_string"** %506, align 8
  call void @_ZdlPv(i8* %525) #14
  %526 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %526, i8 0, i64 24, i1 false) #13
  br label %527

527:                                              ; preds = %500, %524
  %528 = bitcast %"class.std::__1::vector"* %15 to <2 x i64>*
  %529 = load <2 x i64>, <2 x i64>* %528, align 16
  %530 = bitcast %"class.std::__1::vector"* %4 to <2 x i64>*
  store <2 x i64> %529, <2 x i64>* %530, align 8
  %531 = bitcast %"class.std::__1::basic_string"** %133 to i64*
  %532 = load i64, i64* %531, align 16
  %533 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %534 = bitcast %"class.std::__1::basic_string"** %533 to i64*
  store i64 %532, i64* %534, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %130, i8 0, i64 24, i1 false) #13
  br label %535

535:                                              ; preds = %527, %420, %336
  %536 = phi i32 [ %312, %336 ], [ 0, %420 ], [ 0, %527 ]
  %537 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %131, align 16
  %538 = icmp eq %"class.std::__1::basic_string"* %537, null
  br i1 %538, label %560, label %539

539:                                              ; preds = %535
  %540 = bitcast %"class.std::__1::basic_string"* %537 to i8*
  %541 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %132, align 8
  %542 = icmp eq %"class.std::__1::basic_string"* %541, %537
  br i1 %542, label %558, label %543

543:                                              ; preds = %539, %553
  %544 = phi %"class.std::__1::basic_string"* [ %545, %553 ], [ %541, %539 ]
  %545 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %544, i64 -1
  %546 = bitcast %"class.std::__1::basic_string"* %545 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %547 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %546, i64 0, i32 1, i32 0
  %548 = load i8, i8* %547, align 1
  %549 = icmp slt i8 %548, 0
  br i1 %549, label %550, label %553

550:                                              ; preds = %543
  %551 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %545, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %552 = load i8*, i8** %551, align 8
  call void @_ZdlPv(i8* %552) #14
  br label %553

553:                                              ; preds = %550, %543
  %554 = icmp eq %"class.std::__1::basic_string"* %545, %537
  br i1 %554, label %555, label %543

555:                                              ; preds = %553
  %556 = bitcast %"class.std::__1::vector"* %15 to i8**
  %557 = load i8*, i8** %556, align 16
  br label %558

558:                                              ; preds = %555, %539
  %559 = phi i8* [ %557, %555 ], [ %540, %539 ]
  store %"class.std::__1::basic_string"* %537, %"class.std::__1::basic_string"** %132, align 8
  call void @_ZdlPv(i8* %559) #14
  br label %560

560:                                              ; preds = %535, %558
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #13
  br label %562

561:                                              ; preds = %123
  store i64 %112, i64* %11, align 8
  br label %562

562:                                              ; preds = %561, %49, %560
  %563 = phi i32 [ %536, %560 ], [ 1, %49 ], [ %116, %561 ]
  %564 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %13, i64 0, i32 0
  %565 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node"**
  %566 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %565, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* nonnull %564, %"class.std::__1::__tree_node"* %566) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  %567 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %18, align 16
  %568 = icmp eq %"class.std::__1::unique_ptr"* %567, null
  br i1 %568, label %591, label %569

569:                                              ; preds = %562
  %570 = bitcast %"class.std::__1::unique_ptr"* %567 to i8*
  %571 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %19, align 8
  %572 = icmp eq %"class.std::__1::unique_ptr"* %571, %567
  br i1 %572, label %589, label %573

573:                                              ; preds = %569, %584
  %574 = phi %"class.std::__1::unique_ptr"* [ %575, %584 ], [ %571, %569 ]
  %575 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %574, i64 -1
  %576 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %575, i64 0, i32 0, i32 0, i32 0
  %577 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %576, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %576, align 8
  %578 = icmp eq %"class.net::RecordParsed"* %577, null
  br i1 %578, label %584, label %579

579:                                              ; preds = %573
  %580 = bitcast %"class.net::RecordParsed"* %577 to void (%"class.net::RecordParsed"*)***
  %581 = load void (%"class.net::RecordParsed"*)**, void (%"class.net::RecordParsed"*)*** %580, align 8
  %582 = getelementptr inbounds void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %581, i64 1
  %583 = load void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %582, align 8
  call void %583(%"class.net::RecordParsed"* nonnull %577) #13
  br label %584

584:                                              ; preds = %579, %573
  %585 = icmp eq %"class.std::__1::unique_ptr"* %575, %567
  br i1 %585, label %586, label %573

586:                                              ; preds = %584
  %587 = bitcast %"class.std::__1::vector.55"* %10 to i8**
  %588 = load i8*, i8** %587, align 16
  br label %589

589:                                              ; preds = %586, %569
  %590 = phi i8* [ %588, %586 ], [ %570, %569 ]
  store %"class.std::__1::unique_ptr"* %567, %"class.std::__1::unique_ptr"** %19, align 8
  call void @_ZdlPv(i8* %590) #14
  br label %591

591:                                              ; preds = %562, %589
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #13
  ret i32 %563
}

declare dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"* dereferenceable(200)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN3net11AddressListC1Ev(%"class.net::AddressList"*) unnamed_addr #3

declare void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"*) unnamed_addr #3

declare void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"*, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #5

declare void @_ZN3net11AddressList13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::AddressList"*, %"class.std::__1::vector"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"*) unnamed_addr #5

declare void @_ZNK3net11DnsResponse6ParserEv(%"class.net::DnsRecordParser"* sret, %"class.net::DnsResponse"*) local_unnamed_addr #3

declare i32 @_ZNK3net11DnsResponse12answer_countEv(%"class.net::DnsResponse"*) local_unnamed_addr #3

declare %"class.net::RecordParsed"* @_ZN3net12RecordParsed10CreateFromEPNS_15DnsRecordParserEN4base4TimeE(%"class.net::DnsRecordParser"*, i64) local_unnamed_addr #3

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #3

declare { i8*, i64 } @_ZNK3net11DnsResponse19GetSingleDottedNameEv(%"class.net::DnsResponse"*) local_unnamed_addr #3

declare zeroext i8 @_ZNK3net11DnsResponse5rcodeEv(%"class.net::DnsResponse"*) local_unnamed_addr #3

declare i32 @_ZNK3net11DnsResponse15authority_countEv(%"class.net::DnsResponse"*) local_unnamed_addr #3

declare void @_ZN3net17DnsResourceRecordC1Ev(%"struct.net::DnsResourceRecord"*) unnamed_addr #3

declare zeroext i1 @_ZN3net15DnsRecordParser10ReadRecordEPNS_17DnsResourceRecordE(%"class.net::DnsRecordParser"*, %"struct.net::DnsResourceRecord"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net17DnsResourceRecordD1Ev(%"struct.net::DnsResourceRecord"*) unnamed_addr #5

declare i32 @_ZNK3net11DnsResponse23additional_answer_countEv(%"class.net::DnsResponse"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %72, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %13

13:                                               ; preds = %13, %7
  %14 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %43, %13 ]
  %15 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %44, %13 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1
  %17 = bitcast %"struct.std::__1::__value_type"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"struct.std::__1::__value_type"* %16 to i8*
  %24 = select i1 %20, i8* %22, i8* %23
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %19 to i64
  %28 = select i1 %20, i64 %26, i64 %27
  %29 = load i8, i8* %9, align 1
  %30 = icmp slt i8 %29, 0
  %31 = load i8*, i8** %10, align 8
  %32 = select i1 %30, i8* %31, i8* %11
  %33 = load i64, i64* %12, align 8
  %34 = zext i8 %29 to i64
  %35 = select i1 %30, i64 %33, i64 %34
  %36 = tail call i32 @_ZN4base27CompareCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %24, i64 %28, i8* %32, i64 %35) #13
  %37 = icmp slt i32 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::__tree_node_base"** %38 to %"class.std::__1::__tree_node"**
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::__tree_node"* %15 to %"class.std::__1::__tree_node"**
  %42 = select i1 %37, %"class.std::__1::__tree_node"** %39, %"class.std::__1::__tree_node"** %41
  %43 = select i1 %37, %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"* %40
  %44 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %45 = icmp eq %"class.std::__1::__tree_node"* %44, null
  br i1 %45, label %46, label %13

46:                                               ; preds = %13
  %47 = icmp eq %"class.std::__1::__tree_end_node"* %43, %3
  br i1 %47, label %72, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 4
  %50 = load i8, i8* %9, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i8*, i8** %10, align 8
  %53 = select i1 %51, i8* %52, i8* %11
  %54 = load i64, i64* %12, align 8
  %55 = zext i8 %50 to i64
  %56 = select i1 %51, i64 %54, i64 %55
  %57 = bitcast %"class.std::__1::__tree_end_node"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  %61 = bitcast %"class.std::__1::__tree_end_node"* %49 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = bitcast %"class.std::__1::__tree_end_node"* %49 to i8*
  %64 = select i1 %60, i8* %62, i8* %63
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %59 to i64
  %69 = select i1 %60, i64 %67, i64 %68
  %70 = tail call i32 @_ZN4base27CompareCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %53, i64 %56, i8* %64, i64 %69) #13
  %71 = icmp slt i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %46, %2, %48
  br label %73

73:                                               ; preds = %48, %72
  %74 = phi %"class.std::__1::__tree_end_node"* [ %3, %72 ], [ %43, %48 ]
  ret %"class.std::__1::__tree_end_node"* %74
}

declare i32 @_ZN4base27CompareCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKS7_SH_EEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %11, label %64

11:                                               ; preds = %4
  %12 = call i8* @_Znwm(i64 80) #14, !noalias !27
  %13 = getelementptr inbounds i8, i8* %12, i64 32
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1, !noalias !27
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  %19 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %19, i64 24, i1 false) #13, !noalias !27
  br label %26

20:                                               ; preds = %11
  %21 = bitcast i8* %13 to %"class.std::__1::basic_string"*
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !noalias !27
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8, !noalias !27
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %23, i64 %25) #13, !noalias !27
  br label %26

26:                                               ; preds = %20, %18
  %27 = getelementptr inbounds i8, i8* %12, i64 56
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1, !noalias !27
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %26
  %33 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %33, i64 24, i1 false) #13, !noalias !27
  br label %40

34:                                               ; preds = %26
  %35 = bitcast i8* %27 to %"class.std::__1::basic_string"*
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8, !noalias !27
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8, !noalias !27
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %35, i8* %37, i64 %39) #13, !noalias !27
  br label %40

40:                                               ; preds = %32, %34
  %41 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast i8* %12 to %"class.std::__1::__tree_node"*
  %44 = bitcast i8* %12 to %"class.std::__1::__tree_node_base"*
  %45 = getelementptr inbounds i8, i8* %12, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #13
  %46 = bitcast i8* %45 to i64*
  store i64 %42, i64* %46, align 8
  %47 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8**
  store i8* %12, i8** %47, align 8
  %48 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %49 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %40
  %54 = ptrtoint %"class.std::__1::__tree_node_base"* %51 to i64
  %55 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %54, i64* %55, align 8
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  br label %57

57:                                               ; preds = %53, %40
  %58 = phi %"class.std::__1::__tree_node_base"* [ %44, %40 ], [ %56, %53 ]
  %59 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %60, %"class.std::__1::__tree_node_base"* %58) #13
  %61 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %61, align 8
  br label %64

64:                                               ; preds = %57, %4
  %65 = phi i8 [ 1, %57 ], [ 0, %4 ]
  %66 = phi %"class.std::__1::__tree_node"* [ %43, %57 ], [ %9, %4 ]
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %68 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %67, 0
  %69 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %68, i8 %65, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %75, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %15

15:                                               ; preds = %8, %71
  %16 = phi %"class.std::__1::__tree_node"* [ %74, %71 ], [ %6, %8 ]
  %17 = phi %"class.std::__1::__tree_node_base"** [ %73, %71 ], [ %9, %8 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 1
  %19 = load i8, i8* %11, align 1
  %20 = icmp slt i8 %19, 0
  %21 = load i8*, i8** %12, align 8
  %22 = select i1 %20, i8* %21, i8* %13
  %23 = load i64, i64* %14, align 8
  %24 = zext i8 %19 to i64
  %25 = select i1 %20, i64 %23, i64 %24
  %26 = bitcast %"struct.std::__1::__value_type"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"struct.std::__1::__value_type"* %18 to i8*
  %33 = select i1 %29, i8* %31, i8* %32
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %28 to i64
  %37 = select i1 %29, i64 %35, i64 %36
  %38 = tail call i32 @_ZN4base27CompareCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %22, i64 %25, i8* %33, i64 %37) #13
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %15
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %44, label %71

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %45, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %77

46:                                               ; preds = %15
  %47 = load i8, i8* %27, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i8*, i8** %30, align 8
  %50 = select i1 %48, i8* %49, i8* %32
  %51 = load i64, i64* %34, align 8
  %52 = zext i8 %47 to i64
  %53 = select i1 %48, i64 %51, i64 %52
  %54 = load i8, i8* %11, align 1
  %55 = icmp slt i8 %54, 0
  %56 = load i8*, i8** %12, align 8
  %57 = select i1 %55, i8* %56, i8* %13
  %58 = load i64, i64* %14, align 8
  %59 = zext i8 %54 to i64
  %60 = select i1 %55, i64 %58, i64 %59
  %61 = tail call i32 @_ZN4base27CompareCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %50, i64 %53, i8* %57, i64 %60) #13
  %62 = icmp slt i32 %61, 0
  br i1 %62, label %63, label %69

63:                                               ; preds = %46
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 1
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node_base"* %65, null
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %68, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %77

69:                                               ; preds = %46
  %70 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %70, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %77

71:                                               ; preds = %63, %40
  %72 = phi %"class.std::__1::__tree_node_base"* [ %42, %40 ], [ %65, %63 ]
  %73 = phi %"class.std::__1::__tree_node_base"** [ %41, %40 ], [ %64, %63 ]
  %74 = bitcast %"class.std::__1::__tree_node_base"* %72 to %"class.std::__1::__tree_node"*
  br label %15

75:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %77

77:                                               ; preds = %75, %69, %67, %44
  %78 = phi %"class.std::__1::__tree_node_base"** [ %41, %44 ], [ %64, %67 ], [ %17, %69 ], [ %76, %75 ]
  ret %"class.std::__1::__tree_node_base"** %78
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !17
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !17
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !17
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIKN3net12RecordParsedENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.55"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.55"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.55"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.net::RecordParsed"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !30

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %142, align 8
  store %"class.net::RecordParsed"* null, %"class.net::RecordParsed"** %142, align 8
  %144 = icmp eq %"class.net::RecordParsed"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.net::RecordParsed"* %143 to void (%"class.net::RecordParsed"*)***
  %147 = load void (%"class.net::RecordParsed"*)**, void (%"class.net::RecordParsed"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %147, i64 1
  %149 = load void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %148, align 8
  tail call void %149(%"class.net::RecordParsed"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

declare zeroext i1 @_ZN4base26EqualsCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_13move_iteratorINS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISI_E9referenceEEE5valueESE_E4typeENSC_IPKS6_EESI_SI_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2 comdat align 2 {
  %7 = ptrtoint %"class.std::__1::basic_string"* %5 to i64
  %8 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint %"class.std::__1::basic_string"* %3 to i64
  %11 = sub i64 %10, %7
  %12 = sdiv exact i64 %11, 24
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %210

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %20 = ptrtoint %"class.std::__1::basic_string"* %19 to i64
  %21 = sub i64 %17, %20
  %22 = sdiv exact i64 %21, 24
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  br i1 %23, label %109, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %8
  %27 = sdiv exact i64 %26, 24
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %48

29:                                               ; preds = %25
  %30 = sub nsw i64 0, %27
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 %30
  %32 = icmp eq %"class.std::__1::basic_string"* %31, %5
  br i1 %32, label %43, label %33

33:                                               ; preds = %29, %33
  %34 = phi %"class.std::__1::basic_string"* [ %39, %33 ], [ %19, %29 ]
  %35 = phi %"class.std::__1::basic_string"* [ %37, %33 ], [ %31, %29 ]
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 -1
  %38 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %38, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #13
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = icmp eq %"class.std::__1::basic_string"* %37, %5
  br i1 %40, label %41, label %33

41:                                               ; preds = %33
  %42 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  br label %43

43:                                               ; preds = %41, %29
  %44 = phi i64 [ %20, %29 ], [ %42, %41 ]
  store i64 %44, i64* %24, align 8
  %45 = icmp sgt i64 %26, 0
  br i1 %45, label %46, label %210

46:                                               ; preds = %43
  %47 = inttoptr i64 %44 to %"class.std::__1::basic_string"*
  br label %48

48:                                               ; preds = %46, %25
  %49 = phi i64 [ %44, %46 ], [ %20, %25 ]
  %50 = phi %"class.std::__1::basic_string"* [ %47, %46 ], [ %19, %25 ]
  %51 = phi %"class.std::__1::basic_string"* [ %31, %46 ], [ %5, %25 ]
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %12
  %53 = ptrtoint %"class.std::__1::basic_string"* %52 to i64
  %54 = sub i64 %49, %53
  %55 = sdiv exact i64 %54, 24
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %55
  %57 = icmp ult %"class.std::__1::basic_string"* %56, %19
  br i1 %57, label %81, label %60

58:                                               ; preds = %81
  %59 = ptrtoint %"class.std::__1::basic_string"* %87 to i64
  br label %60

60:                                               ; preds = %58, %48
  %61 = phi i64 [ %59, %58 ], [ %49, %48 ]
  store i64 %61, i64* %24, align 8
  %62 = icmp eq i64 %54, 0
  br i1 %62, label %89, label %63

63:                                               ; preds = %60, %75
  %64 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %50, %60 ]
  %65 = phi %"class.std::__1::basic_string"* [ %66, %75 ], [ %56, %60 ]
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 -1
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %72, %63
  %76 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  %77 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 24, i1 false) #13
  %78 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  store i8 0, i8* %79, align 1
  store i8 0, i8* %77, align 1
  %80 = icmp eq %"class.std::__1::basic_string"* %66, %1
  br i1 %80, label %89, label %63

81:                                               ; preds = %48, %81
  %82 = phi %"class.std::__1::basic_string"* [ %87, %81 ], [ %50, %48 ]
  %83 = phi %"class.std::__1::basic_string"* [ %86, %81 ], [ %56, %48 ]
  %84 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  %85 = bitcast %"class.std::__1::basic_string"* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #13
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 1
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 1
  %88 = icmp ult %"class.std::__1::basic_string"* %86, %19
  br i1 %88, label %81, label %58

89:                                               ; preds = %75, %60
  %90 = icmp eq %"class.std::__1::basic_string"* %51, %3
  br i1 %90, label %210, label %91

91:                                               ; preds = %89, %102
  %92 = phi %"class.std::__1::basic_string"* [ %107, %102 ], [ %1, %89 ]
  %93 = phi %"class.std::__1::basic_string"* [ %94, %102 ], [ %3, %89 ]
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 -1
  %95 = bitcast %"class.std::__1::basic_string"* %92 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  tail call void @_ZdlPv(i8* %101) #14
  br label %102

102:                                              ; preds = %99, %91
  %103 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  %104 = bitcast %"class.std::__1::basic_string"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 24, i1 false) #13
  %105 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  store i8 0, i8* %106, align 1
  store i8 0, i8* %104, align 1
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 1
  %108 = icmp eq %"class.std::__1::basic_string"* %94, %51
  br i1 %108, label %210, label %91

109:                                              ; preds = %14
  %110 = bitcast %"class.std::__1::vector"* %0 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = sub i64 %20, %111
  %113 = sdiv exact i64 %112, 24
  %114 = add nsw i64 %113, %12
  %115 = icmp ugt i64 %114, 768614336404564650
  br i1 %115, label %116, label %118

116:                                              ; preds = %109
  %117 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %117) #15
  unreachable

118:                                              ; preds = %109
  %119 = sub i64 %17, %111
  %120 = sdiv exact i64 %119, 24
  %121 = icmp ult i64 %120, 384307168202282325
  br i1 %121, label %125, label %122

122:                                              ; preds = %118
  %123 = sub i64 %8, %111
  %124 = sdiv exact i64 %123, 24
  br label %132

125:                                              ; preds = %118
  %126 = shl nsw i64 %120, 1
  %127 = icmp ult i64 %126, %114
  %128 = select i1 %127, i64 %114, i64 %126
  %129 = sub i64 %8, %111
  %130 = sdiv exact i64 %129, 24
  %131 = icmp eq i64 %128, 0
  br i1 %131, label %138, label %132

132:                                              ; preds = %125, %122
  %133 = phi i64 [ %124, %122 ], [ %130, %125 ]
  %134 = phi i64 [ 768614336404564650, %122 ], [ %128, %125 ]
  %135 = mul i64 %134, 24
  %136 = tail call i8* @_Znwm(i64 %135) #14
  %137 = bitcast i8* %136 to %"class.std::__1::basic_string"*
  br label %138

138:                                              ; preds = %132, %125
  %139 = phi i64 [ %133, %132 ], [ %130, %125 ]
  %140 = phi i64 [ %134, %132 ], [ 0, %125 ]
  %141 = phi %"class.std::__1::basic_string"* [ %137, %132 ], [ null, %125 ]
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %141, i64 %139
  %143 = ptrtoint %"class.std::__1::basic_string"* %142 to i64
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %141, i64 %140
  %145 = ptrtoint %"class.std::__1::basic_string"* %144 to i64
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %142, i64 %12
  br label %147

147:                                              ; preds = %138, %147
  %148 = phi %"class.std::__1::basic_string"* [ %154, %147 ], [ %142, %138 ]
  %149 = phi i64 [ %155, %147 ], [ %143, %138 ]
  %150 = phi %"class.std::__1::basic_string"* [ %151, %147 ], [ %3, %138 ]
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %150, i64 -1
  %152 = inttoptr i64 %149 to i8*
  %153 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 24, i1 false) #13
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %148, i64 1
  %155 = ptrtoint %"class.std::__1::basic_string"* %154 to i64
  %156 = icmp eq %"class.std::__1::basic_string"* %146, %154
  br i1 %156, label %157, label %147

157:                                              ; preds = %147
  %158 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %159 = icmp eq %"class.std::__1::basic_string"* %158, %1
  br i1 %159, label %170, label %160

160:                                              ; preds = %157, %160
  %161 = phi %"class.std::__1::basic_string"* [ %163, %160 ], [ %142, %157 ]
  %162 = phi %"class.std::__1::basic_string"* [ %164, %160 ], [ %1, %157 ]
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 -1
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %162, i64 -1
  %165 = bitcast %"class.std::__1::basic_string"* %163 to i8*
  %166 = bitcast %"class.std::__1::basic_string"* %164 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 24, i1 false) #13
  %167 = icmp eq %"class.std::__1::basic_string"* %164, %158
  br i1 %167, label %168, label %160

168:                                              ; preds = %160
  %169 = ptrtoint %"class.std::__1::basic_string"* %163 to i64
  br label %170

170:                                              ; preds = %168, %157
  %171 = phi i64 [ %143, %157 ], [ %169, %168 ]
  %172 = phi %"class.std::__1::basic_string"* [ %142, %157 ], [ %163, %168 ]
  %173 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %174 = icmp eq %"class.std::__1::basic_string"* %173, %1
  br i1 %174, label %175, label %177

175:                                              ; preds = %170
  %176 = ptrtoint %"class.std::__1::basic_string"* %172 to i64
  br label %187

177:                                              ; preds = %170, %177
  %178 = phi %"class.std::__1::basic_string"* [ %183, %177 ], [ %146, %170 ]
  %179 = phi %"class.std::__1::basic_string"* [ %182, %177 ], [ %1, %170 ]
  %180 = bitcast %"class.std::__1::basic_string"* %178 to i8*
  %181 = bitcast %"class.std::__1::basic_string"* %179 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 %181, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %181, i8 0, i64 24, i1 false) #13
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %179, i64 1
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %178, i64 1
  %184 = icmp eq %"class.std::__1::basic_string"* %182, %173
  br i1 %184, label %185, label %177

185:                                              ; preds = %177
  %186 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  br label %187

187:                                              ; preds = %185, %175
  %188 = phi %"class.std::__1::basic_string"* [ %1, %175 ], [ %186, %185 ]
  %189 = phi %"class.std::__1::basic_string"* [ %146, %175 ], [ %183, %185 ]
  %190 = phi i64 [ %176, %175 ], [ %171, %185 ]
  %191 = ptrtoint %"class.std::__1::basic_string"* %189 to i64
  %192 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  store i64 %190, i64* %110, align 8
  store i64 %191, i64* %24, align 8
  store i64 %145, i64* %16, align 8
  %193 = icmp eq %"class.std::__1::basic_string"* %188, %192
  br i1 %193, label %206, label %194

194:                                              ; preds = %187, %204
  %195 = phi %"class.std::__1::basic_string"* [ %196, %204 ], [ %188, %187 ]
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %195, i64 -1
  %197 = bitcast %"class.std::__1::basic_string"* %196 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %194
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  tail call void @_ZdlPv(i8* %203) #14
  br label %204

204:                                              ; preds = %201, %194
  %205 = icmp eq %"class.std::__1::basic_string"* %196, %192
  br i1 %205, label %206, label %194

206:                                              ; preds = %204, %187
  %207 = icmp eq %"class.std::__1::basic_string"* %192, null
  br i1 %207, label %210, label %208

208:                                              ; preds = %206
  %209 = bitcast %"class.std::__1::basic_string"* %192 to i8*
  tail call void @_ZdlPv(i8* %209) #14
  br label %210

210:                                              ; preds = %102, %208, %206, %43, %89, %6
  %211 = phi %"class.std::__1::basic_string"* [ %1, %6 ], [ %1, %89 ], [ %1, %43 ], [ %142, %206 ], [ %142, %208 ], [ %1, %102 ]
  ret %"class.std::__1::basic_string"* %211
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #13
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #13
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #14
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %72, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %13

13:                                               ; preds = %13, %7
  %14 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %43, %13 ]
  %15 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %44, %13 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1
  %17 = bitcast %"struct.std::__1::__value_type"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"struct.std::__1::__value_type"* %16 to i8*
  %24 = select i1 %20, i8* %22, i8* %23
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %19 to i64
  %28 = select i1 %20, i64 %26, i64 %27
  %29 = load i8, i8* %9, align 1
  %30 = icmp slt i8 %29, 0
  %31 = load i8*, i8** %10, align 8
  %32 = select i1 %30, i8* %31, i8* %11
  %33 = load i64, i64* %12, align 8
  %34 = zext i8 %29 to i64
  %35 = select i1 %30, i64 %33, i64 %34
  %36 = tail call i32 @_ZN4base27CompareCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %24, i64 %28, i8* %32, i64 %35) #13
  %37 = icmp slt i32 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::__tree_node_base"** %38 to %"class.std::__1::__tree_node"**
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::__tree_node"* %15 to %"class.std::__1::__tree_node"**
  %42 = select i1 %37, %"class.std::__1::__tree_node"** %39, %"class.std::__1::__tree_node"** %41
  %43 = select i1 %37, %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"* %40
  %44 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %45 = icmp eq %"class.std::__1::__tree_node"* %44, null
  br i1 %45, label %46, label %13

46:                                               ; preds = %13
  %47 = icmp eq %"class.std::__1::__tree_end_node"* %43, %3
  br i1 %47, label %72, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 4
  %50 = load i8, i8* %9, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i8*, i8** %10, align 8
  %53 = select i1 %51, i8* %52, i8* %11
  %54 = load i64, i64* %12, align 8
  %55 = zext i8 %50 to i64
  %56 = select i1 %51, i64 %54, i64 %55
  %57 = bitcast %"class.std::__1::__tree_end_node"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  %61 = bitcast %"class.std::__1::__tree_end_node"* %49 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = bitcast %"class.std::__1::__tree_end_node"* %49 to i8*
  %64 = select i1 %60, i8* %62, i8* %63
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %59 to i64
  %69 = select i1 %60, i64 %67, i64 %68
  %70 = tail call i32 @_ZN4base27CompareCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %53, i64 %56, i8* %64, i64 %69) #13
  %71 = icmp slt i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %46, %2, %48
  br label %73

73:                                               ; preds = %48, %72
  %74 = phi %"class.std::__1::__tree_end_node"* [ %3, %72 ], [ %43, %48 ]
  ret %"class.std::__1::__tree_end_node"* %74
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRKS6_EEEvDpOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #13
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #13
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #13
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #14
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #14
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %110, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %64, label %27

27:                                               ; preds = %17, %60
  %28 = phi %"class.std::__1::basic_string"* [ %62, %60 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %61, %60 ], [ %1, %17 ]
  %30 = icmp eq %"class.std::__1::basic_string"* %28, %29
  br i1 %30, label %60, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %35, label %50, label %40

40:                                               ; preds = %31
  br i1 %39, label %44, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #13
  br label %60

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %46, i64 %48) #13
  br label %60

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %56 = zext i8 %38 to i64
  %57 = select i1 %39, i8* %52, i8* %55
  %58 = select i1 %39, i64 %54, i64 %56
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %57, i64 %58) #13
  br label %60

60:                                               ; preds = %50, %44, %41, %27
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %63 = icmp eq %"class.std::__1::basic_string"* %61, %25
  br i1 %63, label %64, label %27

64:                                               ; preds = %60, %17
  %65 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %62, %60 ]
  br i1 %23, label %66, label %94

66:                                               ; preds = %64
  %67 = load i64, i64* %19, align 8
  %68 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %68, label %92, label %69

69:                                               ; preds = %66
  %70 = inttoptr i64 %67 to %"class.std::__1::basic_string"*
  br label %71

71:                                               ; preds = %86, %69
  %72 = phi %"class.std::__1::basic_string"* [ %88, %86 ], [ %70, %69 ]
  %73 = phi %"class.std::__1::basic_string"* [ %87, %86 ], [ %24, %69 ]
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #13
  br label %86

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %72, i8* %83, i64 %85) #13
  br label %86

86:                                               ; preds = %81, %78
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %89 = icmp eq %"class.std::__1::basic_string"* %87, %2
  br i1 %89, label %90, label %71

90:                                               ; preds = %86
  %91 = ptrtoint %"class.std::__1::basic_string"* %88 to i64
  br label %92

92:                                               ; preds = %66, %90
  %93 = phi i64 [ %67, %66 ], [ %91, %90 ]
  store i64 %93, i64* %19, align 8
  br label %182

94:                                               ; preds = %64
  %95 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %96 = icmp eq %"class.std::__1::basic_string"* %95, %65
  br i1 %96, label %109, label %97

97:                                               ; preds = %94, %107
  %98 = phi %"class.std::__1::basic_string"* [ %99, %107 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #14
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.std::__1::basic_string"* %99, %65
  br i1 %108, label %109, label %97

109:                                              ; preds = %107, %94
  store %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"** %18, align 8
  br label %182

110:                                              ; preds = %3
  %111 = icmp eq i64 %12, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %12 to i8*
  %114 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %114, align 8
  %116 = icmp eq %"class.std::__1::basic_string"* %115, %16
  br i1 %116, label %132, label %117

117:                                              ; preds = %112, %127
  %118 = phi %"class.std::__1::basic_string"* [ %119, %127 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 -1
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #14
  br label %127

127:                                              ; preds = %124, %117
  %128 = icmp eq %"class.std::__1::basic_string"* %119, %16
  br i1 %128, label %129, label %117

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector"* %0 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %112
  %133 = phi i8* [ %131, %129 ], [ %113, %112 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %114, align 8
  tail call void @_ZdlPv(i8* %133) #14
  %134 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #13
  br label %135

135:                                              ; preds = %110, %132
  %136 = phi i64 [ %10, %110 ], [ 0, %132 ]
  %137 = icmp ugt i64 %7, 768614336404564650
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %139) #15
  unreachable

140:                                              ; preds = %135
  %141 = sdiv exact i64 %136, 24
  %142 = icmp ult i64 %141, 384307168202282325
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = shl nsw i64 %141, 1
  %145 = icmp ult i64 %144, %7
  %146 = select i1 %145, i64 %7, i64 %144
  br label %147

147:                                              ; preds = %143, %140
  %148 = phi i64 [ %146, %143 ], [ 768614336404564650, %140 ]
  %149 = mul i64 %148, 24
  %150 = tail call i8* @_Znwm(i64 %149) #14
  %151 = bitcast i8* %150 to %"class.std::__1::basic_string"*
  %152 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string"** %152 to i8**
  store i8* %150, i8** %153, align 8
  %154 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %150, i8** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 %148
  store %"class.std::__1::basic_string"* %155, %"class.std::__1::basic_string"** %8, align 8
  %156 = bitcast %"class.std::__1::basic_string"** %152 to i64*
  %157 = ptrtoint i8* %150 to i64
  %158 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %158, label %180, label %159

159:                                              ; preds = %147, %174
  %160 = phi %"class.std::__1::basic_string"* [ %176, %174 ], [ %151, %147 ]
  %161 = phi %"class.std::__1::basic_string"* [ %175, %174 ], [ %1, %147 ]
  %162 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  %168 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 24, i1 false) #13
  br label %174

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %160, i8* %171, i64 %173) #13
  br label %174

174:                                              ; preds = %169, %166
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 1
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %160, i64 1
  %177 = icmp eq %"class.std::__1::basic_string"* %175, %2
  br i1 %177, label %178, label %159

178:                                              ; preds = %174
  %179 = ptrtoint %"class.std::__1::basic_string"* %176 to i64
  br label %180

180:                                              ; preds = %147, %178
  %181 = phi i64 [ %157, %147 ], [ %179, %178 ]
  store i64 %181, i64* %156, align 8
  br label %182

182:                                              ; preds = %92, %109, %180
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %16, %4
  %20 = bitcast %"struct.std::__1::pair.79"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.std::__1::pair.79", %"struct.std::__1::pair.79"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %19, %24
  %28 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %2, %27
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.15"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.net::IPEndPoint"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.15"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 20
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 922337203685477580
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.15"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::IPEndPoint"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 20
  %20 = icmp ult i64 %19, 461168601842738790
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 922337203685477580, %14 ]
  %28 = mul i64 %27, 20
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.net::IPEndPoint"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.net::IPEndPoint"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %33, i64 %9
  %35 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %33, i64 %32
  %36 = ptrtoint %"class.net::IPEndPoint"* %35 to i64
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %34, %"class.net::IPEndPoint"* dereferenceable(20) %1) #13
  %37 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %34, i64 1
  %38 = ptrtoint %"class.net::IPEndPoint"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %39, align 8
  %41 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %3, align 8
  %42 = icmp eq %"class.net::IPEndPoint"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.net::IPEndPoint"* %34 to i64
  store i64 %44, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  br label %60

45:                                               ; preds = %31, %45
  %46 = phi %"class.net::IPEndPoint"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.net::IPEndPoint"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %46, i64 -1
  %49 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %47, i64 -1
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %48, %"class.net::IPEndPoint"* dereferenceable(20) %49) #13
  %50 = icmp eq %"class.net::IPEndPoint"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %39, align 8
  %53 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %3, align 8
  %54 = ptrtoint %"class.net::IPEndPoint"* %48 to i64
  store i64 %54, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %55 = icmp eq %"class.net::IPEndPoint"* %53, %52
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"class.net::IPEndPoint"* [ %58, %56 ], [ %53, %51 ]
  %58 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %57, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %58) #13
  %59 = icmp eq %"class.net::IPEndPoint"* %58, %52
  br i1 %59, label %60, label %56

60:                                               ; preds = %56, %43, %51
  %61 = phi %"class.net::IPEndPoint"* [ %40, %43 ], [ %52, %51 ], [ %52, %56 ]
  %62 = icmp eq %"class.net::IPEndPoint"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %64) #14
  br label %65

65:                                               ; preds = %60, %63
  ret void
}

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #3

declare void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"*, %"class.net::AddressList"* dereferenceable(48)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_11__wrap_iterIPKS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueENSA_IPS6_EEE4typeESD_SF_SF_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2 comdat align 2 {
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %8 = ptrtoint %"class.std::__1::basic_string"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 24
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %248

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = ptrtoint %"class.std::__1::basic_string"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 24
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.std::__1::basic_string"** %16 to i64*
  br i1 %21, label %136, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 24
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %56

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 %25
  %29 = icmp eq %"class.std::__1::basic_string"* %28, %3
  br i1 %29, label %51, label %30

30:                                               ; preds = %27, %45
  %31 = phi %"class.std::__1::basic_string"* [ %47, %45 ], [ %17, %27 ]
  %32 = phi %"class.std::__1::basic_string"* [ %46, %45 ], [ %28, %27 ]
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %39 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #13
  br label %45

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %31, i8* %42, i64 %44) #13
  br label %45

45:                                               ; preds = %40, %37
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 1
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 1
  %48 = icmp eq %"class.std::__1::basic_string"* %46, %3
  br i1 %48, label %49, label %30

49:                                               ; preds = %45
  %50 = ptrtoint %"class.std::__1::basic_string"* %47 to i64
  br label %51

51:                                               ; preds = %49, %27
  %52 = phi i64 [ %18, %27 ], [ %50, %49 ]
  store i64 %52, i64* %22, align 8
  %53 = icmp sgt i64 %24, 0
  br i1 %53, label %54, label %248

54:                                               ; preds = %51
  %55 = inttoptr i64 %52 to %"class.std::__1::basic_string"*
  br label %56

56:                                               ; preds = %54, %23
  %57 = phi i64 [ %52, %54 ], [ %18, %23 ]
  %58 = phi %"class.std::__1::basic_string"* [ %55, %54 ], [ %17, %23 ]
  %59 = phi %"class.std::__1::basic_string"* [ %28, %54 ], [ %3, %23 ]
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %10
  %61 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  %62 = sub i64 %57, %61
  %63 = sdiv exact i64 %62, 24
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %63
  %65 = icmp ult %"class.std::__1::basic_string"* %64, %17
  br i1 %65, label %89, label %68

66:                                               ; preds = %89
  %67 = ptrtoint %"class.std::__1::basic_string"* %95 to i64
  br label %68

68:                                               ; preds = %66, %56
  %69 = phi i64 [ %67, %66 ], [ %57, %56 ]
  store i64 %69, i64* %22, align 8
  %70 = icmp eq i64 %62, 0
  br i1 %70, label %97, label %71

71:                                               ; preds = %68, %83
  %72 = phi %"class.std::__1::basic_string"* [ %75, %83 ], [ %58, %68 ]
  %73 = phi %"class.std::__1::basic_string"* [ %74, %83 ], [ %64, %68 ]
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 -1
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 -1
  %76 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  tail call void @_ZdlPv(i8* %82) #14
  br label %83

83:                                               ; preds = %80, %71
  %84 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %85 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 24, i1 false) #13
  %86 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  store i8 0, i8* %87, align 1
  store i8 0, i8* %85, align 1
  %88 = icmp eq %"class.std::__1::basic_string"* %74, %1
  br i1 %88, label %97, label %71

89:                                               ; preds = %56, %89
  %90 = phi %"class.std::__1::basic_string"* [ %95, %89 ], [ %58, %56 ]
  %91 = phi %"class.std::__1::basic_string"* [ %94, %89 ], [ %64, %56 ]
  %92 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  %93 = bitcast %"class.std::__1::basic_string"* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #13
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 1
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 1
  %96 = icmp ult %"class.std::__1::basic_string"* %94, %17
  br i1 %96, label %89, label %66

97:                                               ; preds = %83, %68
  %98 = icmp eq %"class.std::__1::basic_string"* %59, %2
  br i1 %98, label %248, label %99

99:                                               ; preds = %97, %132
  %100 = phi %"class.std::__1::basic_string"* [ %134, %132 ], [ %1, %97 ]
  %101 = phi %"class.std::__1::basic_string"* [ %133, %132 ], [ %2, %97 ]
  %102 = icmp eq %"class.std::__1::basic_string"* %100, %101
  br i1 %102, label %132, label %103

103:                                              ; preds = %99
  %104 = bitcast %"class.std::__1::basic_string"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  %108 = bitcast %"class.std::__1::basic_string"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %107, label %122, label %112

112:                                              ; preds = %103
  br i1 %111, label %116, label %113

113:                                              ; preds = %112
  %114 = bitcast %"class.std::__1::basic_string"* %100 to i8*
  %115 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 24, i1 false) #13
  br label %132

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %100, i8* %118, i64 %120) #13
  br label %132

122:                                              ; preds = %103
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  %128 = zext i8 %110 to i64
  %129 = select i1 %111, i8* %124, i8* %127
  %130 = select i1 %111, i64 %126, i64 %128
  %131 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %100, i8* %129, i64 %130) #13
  br label %132

132:                                              ; preds = %122, %116, %113, %99
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 1
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %100, i64 1
  %135 = icmp eq %"class.std::__1::basic_string"* %133, %59
  br i1 %135, label %248, label %99

136:                                              ; preds = %12
  %137 = bitcast %"class.std::__1::vector"* %0 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 %18, %138
  %140 = sdiv exact i64 %139, 24
  %141 = add nsw i64 %140, %10
  %142 = icmp ugt i64 %141, 768614336404564650
  br i1 %142, label %143, label %145

143:                                              ; preds = %136
  %144 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %144) #15
  unreachable

145:                                              ; preds = %136
  %146 = sub i64 %15, %138
  %147 = sdiv exact i64 %146, 24
  %148 = icmp ult i64 %147, 384307168202282325
  br i1 %148, label %152, label %149

149:                                              ; preds = %145
  %150 = sub i64 %5, %138
  %151 = sdiv exact i64 %150, 24
  br label %159

152:                                              ; preds = %145
  %153 = shl nsw i64 %147, 1
  %154 = icmp ult i64 %153, %141
  %155 = select i1 %154, i64 %141, i64 %153
  %156 = sub i64 %5, %138
  %157 = sdiv exact i64 %156, 24
  %158 = icmp eq i64 %155, 0
  br i1 %158, label %165, label %159

159:                                              ; preds = %152, %149
  %160 = phi i64 [ %151, %149 ], [ %157, %152 ]
  %161 = phi i64 [ 768614336404564650, %149 ], [ %155, %152 ]
  %162 = mul i64 %161, 24
  %163 = tail call i8* @_Znwm(i64 %162) #14
  %164 = bitcast i8* %163 to %"class.std::__1::basic_string"*
  br label %165

165:                                              ; preds = %159, %152
  %166 = phi i64 [ %160, %159 ], [ %157, %152 ]
  %167 = phi i64 [ %161, %159 ], [ 0, %152 ]
  %168 = phi %"class.std::__1::basic_string"* [ %164, %159 ], [ null, %152 ]
  %169 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 %166
  %170 = ptrtoint %"class.std::__1::basic_string"* %169 to i64
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 %167
  %172 = ptrtoint %"class.std::__1::basic_string"* %171 to i64
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %169, i64 %10
  br label %174

174:                                              ; preds = %165, %190
  %175 = phi %"class.std::__1::basic_string"* [ %191, %190 ], [ %169, %165 ]
  %176 = phi i64 [ %192, %190 ], [ %170, %165 ]
  %177 = phi %"class.std::__1::basic_string"* [ %193, %190 ], [ %2, %165 ]
  %178 = bitcast %"class.std::__1::basic_string"* %177 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %185, label %182

182:                                              ; preds = %174
  %183 = inttoptr i64 %176 to i8*
  %184 = bitcast %"class.std::__1::basic_string"* %177 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %184, i64 24, i1 false) #13
  br label %190

185:                                              ; preds = %174
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %189 = load i64, i64* %188, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %175, i8* %187, i64 %189) #13
  br label %190

190:                                              ; preds = %185, %182
  %191 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %175, i64 1
  %192 = ptrtoint %"class.std::__1::basic_string"* %191 to i64
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %177, i64 1
  %194 = icmp eq %"class.std::__1::basic_string"* %173, %191
  br i1 %194, label %195, label %174

195:                                              ; preds = %190
  %196 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %197 = icmp eq %"class.std::__1::basic_string"* %196, %1
  br i1 %197, label %208, label %198

198:                                              ; preds = %195, %198
  %199 = phi %"class.std::__1::basic_string"* [ %201, %198 ], [ %169, %195 ]
  %200 = phi %"class.std::__1::basic_string"* [ %202, %198 ], [ %1, %195 ]
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %199, i64 -1
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %200, i64 -1
  %203 = bitcast %"class.std::__1::basic_string"* %201 to i8*
  %204 = bitcast %"class.std::__1::basic_string"* %202 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 24, i1 false) #13
  %205 = icmp eq %"class.std::__1::basic_string"* %202, %196
  br i1 %205, label %206, label %198

206:                                              ; preds = %198
  %207 = ptrtoint %"class.std::__1::basic_string"* %201 to i64
  br label %208

208:                                              ; preds = %206, %195
  %209 = phi i64 [ %170, %195 ], [ %207, %206 ]
  %210 = phi %"class.std::__1::basic_string"* [ %169, %195 ], [ %201, %206 ]
  %211 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %212 = icmp eq %"class.std::__1::basic_string"* %211, %1
  br i1 %212, label %213, label %215

213:                                              ; preds = %208
  %214 = ptrtoint %"class.std::__1::basic_string"* %210 to i64
  br label %225

215:                                              ; preds = %208, %215
  %216 = phi %"class.std::__1::basic_string"* [ %221, %215 ], [ %173, %208 ]
  %217 = phi %"class.std::__1::basic_string"* [ %220, %215 ], [ %1, %208 ]
  %218 = bitcast %"class.std::__1::basic_string"* %216 to i8*
  %219 = bitcast %"class.std::__1::basic_string"* %217 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %219, i8 0, i64 24, i1 false) #13
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %217, i64 1
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %216, i64 1
  %222 = icmp eq %"class.std::__1::basic_string"* %220, %211
  br i1 %222, label %223, label %215

223:                                              ; preds = %215
  %224 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  br label %225

225:                                              ; preds = %223, %213
  %226 = phi %"class.std::__1::basic_string"* [ %1, %213 ], [ %224, %223 ]
  %227 = phi %"class.std::__1::basic_string"* [ %173, %213 ], [ %221, %223 ]
  %228 = phi i64 [ %214, %213 ], [ %209, %223 ]
  %229 = ptrtoint %"class.std::__1::basic_string"* %227 to i64
  %230 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  store i64 %228, i64* %137, align 8
  store i64 %229, i64* %22, align 8
  store i64 %172, i64* %14, align 8
  %231 = icmp eq %"class.std::__1::basic_string"* %226, %230
  br i1 %231, label %244, label %232

232:                                              ; preds = %225, %242
  %233 = phi %"class.std::__1::basic_string"* [ %234, %242 ], [ %226, %225 ]
  %234 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %233, i64 -1
  %235 = bitcast %"class.std::__1::basic_string"* %234 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %236 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %235, i64 0, i32 1, i32 0
  %237 = load i8, i8* %236, align 1
  %238 = icmp slt i8 %237, 0
  br i1 %238, label %239, label %242

239:                                              ; preds = %232
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load i8*, i8** %240, align 8
  tail call void @_ZdlPv(i8* %241) #14
  br label %242

242:                                              ; preds = %239, %232
  %243 = icmp eq %"class.std::__1::basic_string"* %234, %230
  br i1 %243, label %244, label %232

244:                                              ; preds = %242, %225
  %245 = icmp eq %"class.std::__1::basic_string"* %230, null
  br i1 %245, label %248, label %246

246:                                              ; preds = %244
  %247 = bitcast %"class.std::__1::basic_string"* %230 to i8*
  tail call void @_ZdlPv(i8* %247) #14
  br label %248

248:                                              ; preds = %132, %246, %244, %51, %97, %4
  %249 = phi %"class.std::__1::basic_string"* [ %1, %4 ], [ %1, %97 ], [ %1, %51 ], [ %169, %244 ], [ %169, %246 ], [ %1, %132 ]
  ret %"class.std::__1::basic_string"* %249
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEiEEEvDpOT_(%"class.std::__1::vector.32"*, %"class.std::__1::basic_string"* dereferenceable(24), i32* dereferenceable(4)) local_unnamed_addr #10 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.net::HostPortPair"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.32"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 576460752303423487
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.32"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #15
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.net::HostPortPair"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 5
  %21 = icmp ult i64 %20, 288230376151711743
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 4
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 576460752303423487
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #15
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 576460752303423487, %15 ]
  %32 = shl i64 %31, 5
  %33 = tail call i8* @_Znwm(i64 %32) #14
  %34 = bitcast i8* %33 to %"class.net::HostPortPair"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"class.net::HostPortPair"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %37, i64 %10
  %39 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %37, i64 %36
  %40 = ptrtoint %"class.net::HostPortPair"* %39 to i64
  %41 = load i32, i32* %2, align 4
  %42 = trunc i32 %41 to i16
  tail call void @_ZN3net12HostPortPairC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostPortPair"* %38, %"class.std::__1::basic_string"* dereferenceable(24) %1, i16 zeroext %42) #13
  %43 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %38, i64 1
  %44 = ptrtoint %"class.net::HostPortPair"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 0
  %46 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %45, align 8
  %47 = ptrtoint %"class.net::HostPortPair"* %46 to i64
  %48 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %4, align 8
  %49 = icmp eq %"class.net::HostPortPair"* %48, %46
  br i1 %49, label %91, label %50

50:                                               ; preds = %35
  %51 = getelementptr %"class.net::HostPortPair", %"class.net::HostPortPair"* %48, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = ptrtoint i8** %51 to i64
  %53 = sub i64 %52, %47
  %54 = and i64 %53, 32
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %64

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %38, i64 -1
  %58 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %48, i64 -1
  %59 = bitcast %"class.net::HostPortPair"* %57 to i8*
  %60 = bitcast %"class.net::HostPortPair"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #13
  %61 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %38, i64 -1, i32 1
  %62 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %48, i64 -1, i32 1
  %63 = load i16, i16* %62, align 8
  store i16 %63, i16* %61, align 8
  br label %64

64:                                               ; preds = %56, %50
  %65 = phi %"class.net::HostPortPair"* [ undef, %50 ], [ %57, %56 ]
  %66 = phi %"class.net::HostPortPair"* [ %38, %50 ], [ %57, %56 ]
  %67 = phi %"class.net::HostPortPair"* [ %48, %50 ], [ %58, %56 ]
  %68 = icmp ult i64 %53, 32
  br i1 %68, label %87, label %69

69:                                               ; preds = %64, %69
  %70 = phi %"class.net::HostPortPair"* [ %79, %69 ], [ %66, %64 ]
  %71 = phi %"class.net::HostPortPair"* [ %80, %69 ], [ %67, %64 ]
  %72 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %70, i64 -1
  %73 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %71, i64 -1
  %74 = bitcast %"class.net::HostPortPair"* %72 to i8*
  %75 = bitcast %"class.net::HostPortPair"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #13
  %76 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %70, i64 -1, i32 1
  %77 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %71, i64 -1, i32 1
  %78 = load i16, i16* %77, align 8
  store i16 %78, i16* %76, align 8
  %79 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %70, i64 -2
  %80 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %71, i64 -2
  %81 = bitcast %"class.net::HostPortPair"* %79 to i8*
  %82 = bitcast %"class.net::HostPortPair"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #13
  %83 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %70, i64 -2, i32 1
  %84 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %71, i64 -2, i32 1
  %85 = load i16, i16* %84, align 8
  store i16 %85, i16* %83, align 8
  %86 = icmp eq %"class.net::HostPortPair"* %80, %46
  br i1 %86, label %87, label %69

87:                                               ; preds = %69, %64
  %88 = phi %"class.net::HostPortPair"* [ %65, %64 ], [ %79, %69 ]
  %89 = load i64, i64* %7, align 8
  %90 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %4, align 8
  br label %91

91:                                               ; preds = %35, %87
  %92 = phi %"class.net::HostPortPair"* [ %90, %87 ], [ %46, %35 ]
  %93 = phi %"class.net::HostPortPair"* [ %88, %87 ], [ %38, %35 ]
  %94 = phi i64 [ %89, %87 ], [ %47, %35 ]
  %95 = ptrtoint %"class.net::HostPortPair"* %93 to i64
  store i64 %95, i64* %7, align 8
  store i64 %44, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %96 = inttoptr i64 %94 to %"class.net::HostPortPair"*
  %97 = icmp eq %"class.net::HostPortPair"* %92, %96
  br i1 %97, label %110, label %98

98:                                               ; preds = %91, %108
  %99 = phi %"class.net::HostPortPair"* [ %100, %108 ], [ %92, %91 ]
  %100 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %99, i64 -1
  %101 = bitcast %"class.net::HostPortPair"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  tail call void @_ZdlPv(i8* %107) #14
  br label %108

108:                                              ; preds = %105, %98
  %109 = icmp eq %"class.net::HostPortPair"* %100, %96
  br i1 %109, label %110, label %98

110:                                              ; preds = %108, %91
  %111 = icmp eq i64 %94, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %94 to i8*
  tail call void @_ZdlPv(i8* %113) #14
  br label %114

114:                                              ; preds = %110, %112
  ret void
}

declare void @_ZN3net12HostPortPairC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostPortPair"*, %"class.std::__1::basic_string"* dereferenceable(24), i16 zeroext) unnamed_addr #3

declare i64 @_ZN4base13RandGeneratorEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPKN3net14SrvRecordRdataENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.net::SrvRecordRdata"** dereferenceable(8), %"class.net::SrvRecordRdata"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = load %"class.net::SrvRecordRdata"*, %"class.net::SrvRecordRdata"** %1, align 8
  %5 = ptrtoint %"class.net::SrvRecordRdata"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !13
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to %"class.net::SrvRecordRdata"**
  %64 = load %"class.net::SrvRecordRdata"*, %"class.net::SrvRecordRdata"** %63, align 8
  %65 = icmp eq %"class.net::SrvRecordRdata"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #14, !noalias !32
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.net::SrvRecordRdata"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !32
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !32
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !32
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %75, align 8, !noalias !32
  %76 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !13
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #13
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPKN3net14SrvRecordRdataENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #13, !range !13
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base"* %118, %"struct.std::__1::__hash_node_base"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #13, !range !13
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN3net14SrvRecordRdataENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !13
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPKN3net14SrvRecordRdataENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !13
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !13
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPKN3net14SrvRecordRdataENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN3net14SrvRecordRdataENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !35

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !13
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to %"class.net::SrvRecordRdata"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to %"class.net::SrvRecordRdata"**
  %112 = load %"class.net::SrvRecordRdata"*, %"class.net::SrvRecordRdata"** %102, align 8
  %113 = load %"class.net::SrvRecordRdata"*, %"class.net::SrvRecordRdata"** %111, align 8
  %114 = icmp eq %"class.net::SrvRecordRdata"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #12

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #12

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #12

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #12

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEtEEEvDpOT_(%"class.std::__1::vector.32"*, %"class.std::__1::basic_string"* dereferenceable(24), i16* dereferenceable(2)) local_unnamed_addr #10 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.net::HostPortPair"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.32"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 576460752303423487
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.32"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #15
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.net::HostPortPair"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 5
  %21 = icmp ult i64 %20, 288230376151711743
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 4
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 576460752303423487
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #15
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 576460752303423487, %15 ]
  %32 = shl i64 %31, 5
  %33 = tail call i8* @_Znwm(i64 %32) #14
  %34 = bitcast i8* %33 to %"class.net::HostPortPair"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"class.net::HostPortPair"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %37, i64 %10
  %39 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %37, i64 %36
  %40 = ptrtoint %"class.net::HostPortPair"* %39 to i64
  %41 = load i16, i16* %2, align 2
  tail call void @_ZN3net12HostPortPairC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostPortPair"* %38, %"class.std::__1::basic_string"* dereferenceable(24) %1, i16 zeroext %41) #13
  %42 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %38, i64 1
  %43 = ptrtoint %"class.net::HostPortPair"* %42 to i64
  %44 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 0
  %45 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %44, align 8
  %46 = ptrtoint %"class.net::HostPortPair"* %45 to i64
  %47 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %4, align 8
  %48 = icmp eq %"class.net::HostPortPair"* %47, %45
  br i1 %48, label %90, label %49

49:                                               ; preds = %35
  %50 = getelementptr %"class.net::HostPortPair", %"class.net::HostPortPair"* %47, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = ptrtoint i8** %50 to i64
  %52 = sub i64 %51, %46
  %53 = and i64 %52, 32
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %63

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %38, i64 -1
  %57 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %47, i64 -1
  %58 = bitcast %"class.net::HostPortPair"* %56 to i8*
  %59 = bitcast %"class.net::HostPortPair"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #13
  %60 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %38, i64 -1, i32 1
  %61 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %47, i64 -1, i32 1
  %62 = load i16, i16* %61, align 8
  store i16 %62, i16* %60, align 8
  br label %63

63:                                               ; preds = %55, %49
  %64 = phi %"class.net::HostPortPair"* [ undef, %49 ], [ %56, %55 ]
  %65 = phi %"class.net::HostPortPair"* [ %38, %49 ], [ %56, %55 ]
  %66 = phi %"class.net::HostPortPair"* [ %47, %49 ], [ %57, %55 ]
  %67 = icmp ult i64 %52, 32
  br i1 %67, label %86, label %68

68:                                               ; preds = %63, %68
  %69 = phi %"class.net::HostPortPair"* [ %78, %68 ], [ %65, %63 ]
  %70 = phi %"class.net::HostPortPair"* [ %79, %68 ], [ %66, %63 ]
  %71 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %69, i64 -1
  %72 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %70, i64 -1
  %73 = bitcast %"class.net::HostPortPair"* %71 to i8*
  %74 = bitcast %"class.net::HostPortPair"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #13
  %75 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %69, i64 -1, i32 1
  %76 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %70, i64 -1, i32 1
  %77 = load i16, i16* %76, align 8
  store i16 %77, i16* %75, align 8
  %78 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %69, i64 -2
  %79 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %70, i64 -2
  %80 = bitcast %"class.net::HostPortPair"* %78 to i8*
  %81 = bitcast %"class.net::HostPortPair"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #13
  %82 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %69, i64 -2, i32 1
  %83 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %70, i64 -2, i32 1
  %84 = load i16, i16* %83, align 8
  store i16 %84, i16* %82, align 8
  %85 = icmp eq %"class.net::HostPortPair"* %79, %45
  br i1 %85, label %86, label %68

86:                                               ; preds = %68, %63
  %87 = phi %"class.net::HostPortPair"* [ %64, %63 ], [ %78, %68 ]
  %88 = load i64, i64* %7, align 8
  %89 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %4, align 8
  br label %90

90:                                               ; preds = %35, %86
  %91 = phi %"class.net::HostPortPair"* [ %89, %86 ], [ %45, %35 ]
  %92 = phi %"class.net::HostPortPair"* [ %87, %86 ], [ %38, %35 ]
  %93 = phi i64 [ %88, %86 ], [ %46, %35 ]
  %94 = ptrtoint %"class.net::HostPortPair"* %92 to i64
  store i64 %94, i64* %7, align 8
  store i64 %43, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %95 = inttoptr i64 %93 to %"class.net::HostPortPair"*
  %96 = icmp eq %"class.net::HostPortPair"* %91, %95
  br i1 %96, label %109, label %97

97:                                               ; preds = %90, %107
  %98 = phi %"class.net::HostPortPair"* [ %99, %107 ], [ %91, %90 ]
  %99 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %98, i64 -1
  %100 = bitcast %"class.net::HostPortPair"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #14
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.net::HostPortPair"* %99, %95
  br i1 %108, label %109, label %97

109:                                              ; preds = %107, %90
  %110 = icmp eq i64 %93, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = inttoptr i64 %93 to i8*
  tail call void @_ZdlPv(i8* %112) #14
  br label %113

113:                                              ; preds = %109, %111
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.usub.with.overflow.i32(i32, i32) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN3net14SrvRecordRdataENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE(%"class.std::__1::unique_ptr.172"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #13, !range !13
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.141", %"class.std::__1::__compressed_pair.141"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.172"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.172"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.144"** %98 to %"class.std::__1::__compressed_pair.141"**
  store %"class.std::__1::__compressed_pair.141"* %30, %"class.std::__1::__compressed_pair.141"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.172"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeItNS_13unordered_setIPKN3net14SrvRecordRdataENS_4hashIS6_EENS_8equal_toIS6_EENS_9allocatorIS6_EEEEEENS_19__map_value_compareItSE_NS_4lessItEELb1EEENSB_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.124"*, %"class.std::__1::__tree_node.161"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.161"* %1, null
  br i1 %3, label %27, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.161"* %1 to %"class.std::__1::__tree_node.161"**
  %6 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeItNS_13unordered_setIPKN3net14SrvRecordRdataENS_4hashIS6_EENS_8equal_toIS6_EENS_9allocatorIS6_EEEEEENS_19__map_value_compareItSE_NS_4lessItEELb1EEENSB_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.124"* %0, %"class.std::__1::__tree_node.161"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.161"**
  %9 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeItNS_13unordered_setIPKN3net14SrvRecordRdataENS_4hashIS6_EENS_8equal_toIS6_EENS_9allocatorIS6_EEEEEENS_19__map_value_compareItSE_NS_4lessItEELb1EEENSB_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree.124"* %0, %"class.std::__1::__tree_node.161"* %9) #13
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %10, align 8
  %12 = icmp eq %"struct.std::__1::__hash_node_base"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %4, %13
  %14 = phi %"struct.std::__1::__hash_node_base"* [ %16, %13 ], [ %11, %4 ]
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %14, i64 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %15, align 8
  %17 = bitcast %"struct.std::__1::__hash_node_base"* %14 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  %18 = icmp eq %"struct.std::__1::__hash_node_base"* %16, null
  br i1 %18, label %19, label %13

19:                                               ; preds = %13, %4
  %20 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base"** %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast %"struct.std::__1::__hash_node_base"** %21 to i8*
  tail call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %19, %23
  %26 = bitcast %"class.std::__1::__tree_node.161"* %1 to i8*
  tail call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %2, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.44"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.44", align 16
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 6
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %49

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.44"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %3, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 24, i1 false) #13
  %14 = icmp slt i64 %1, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::vector.44"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %16) #15
  unreachable

17:                                               ; preds = %10
  %18 = add nsw i64 %1, -1
  %19 = lshr i64 %18, 6
  %20 = add nuw nsw i64 %19, 1
  %21 = shl nuw nsw i64 %20, 3
  %22 = tail call i8* @_Znwm(i64 %21) #14
  %23 = bitcast %"class.std::__1::vector.44"* %3 to i8**
  store i8* %22, i8** %23, align 16
  store i64 0, i64* %12, align 8
  store i64 %20, i64* %13, align 16
  %24 = bitcast %"class.std::__1::vector.44"* %0 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !36
  %26 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %25, i64* %26, align 8, !alias.scope !36
  %27 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 0, i32* %27, align 8, !alias.scope !36
  %28 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 1
  %29 = load i64, i64* %28, align 8, !noalias !41
  %30 = inttoptr i64 %25 to i64*
  %31 = lshr i64 %29, 6
  %32 = getelementptr inbounds i64, i64* %30, i64 %31
  %33 = trunc i64 %29 to i32
  %34 = and i32 %33, 63
  %35 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 0
  store i64* %32, i64** %35, align 8, !alias.scope !44
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %34, i32* %36, align 8, !alias.scope !44
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.44"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5)
  %37 = load i64, i64* %24, align 8
  %38 = bitcast %"class.std::__1::vector.44"* %3 to i64*
  %39 = bitcast %"class.std::__1::vector.44"* %3 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 16
  store i64 %37, i64* %38, align 16
  %41 = load i64, i64* %28, align 8
  %42 = bitcast %"class.std::__1::vector.44"* %0 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %42, align 8
  store i64 %41, i64* %12, align 8
  %43 = load i64, i64* %6, align 8
  %44 = load i64, i64* %13, align 16
  store i64 %44, i64* %6, align 8
  store i64 %43, i64* %13, align 16
  %45 = icmp eq i64 %37, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %17
  %47 = inttoptr i64 %37 to i8*
  call void @_ZdlPv(i8* %47) #14
  br label %48

48:                                               ; preds = %17, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  br label %49

49:                                               ; preds = %48, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.44"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i64 %15, %11
  %19 = shl i64 %18, 3
  %20 = zext i32 %17 to i64
  %21 = zext i32 %13 to i64
  %22 = sub i64 %9, %21
  %23 = add i64 %22, %20
  %24 = add i64 %23, %19
  store i64 %24, i64* %8, align 8
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = add i64 %9, -1
  %28 = add i64 %24, -1
  %29 = xor i64 %28, %27
  %30 = icmp ugt i64 %29, 63
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %3
  %32 = icmp ult i64 %24, 65
  %33 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = add i64 %24, -1
  %36 = lshr i64 %35, 6
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = select i1 %32, i64* %34, i64* %37
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %26
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %12, align 8
  %42 = load i64, i64* %14, align 8
  %43 = load i32, i32* %16, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !47
  %46 = lshr i64 %9, 6
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = trunc i64 %9 to i32
  %49 = and i32 %48, 63
  %50 = ptrtoint i64* %47 to i64
  %51 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #13
  %52 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  %54 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = icmp eq i32 %41, %49
  br i1 %55, label %56, label %123

56:                                               ; preds = %39
  %57 = sub i64 %42, %40
  %58 = shl i64 %57, 3
  %59 = zext i32 %43 to i64
  %60 = zext i32 %41 to i64
  %61 = sub nsw i64 %59, %60
  %62 = add i64 %61, %58
  %63 = icmp sgt i64 %62, 0
  %64 = inttoptr i64 %40 to i64*
  br i1 %63, label %65, label %118

65:                                               ; preds = %56
  %66 = inttoptr i64 %40 to i8*
  %67 = icmp eq i32 %41, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = sub i32 64, %41
  %70 = zext i32 %69 to i64
  %71 = icmp slt i64 %62, %70
  %72 = select i1 %71, i64 %62, i64 %70
  %73 = sub nsw i64 %62, %72
  %74 = shl i64 -1, %60
  %75 = sub nsw i64 %70, %72
  %76 = lshr i64 -1, %75
  %77 = and i64 %76, %74
  %78 = load i64, i64* %64, align 8, !noalias !50
  %79 = and i64 %78, %77
  %80 = xor i64 %77, -1
  %81 = load i64, i64* %47, align 8, !noalias !50
  %82 = and i64 %81, %80
  %83 = or i64 %82, %79
  store i64 %83, i64* %47, align 8, !noalias !50
  %84 = add nuw nsw i64 %72, %60
  %85 = sdiv i64 %84, 64
  %86 = getelementptr inbounds i64, i64* %47, i64 %85
  %87 = ptrtoint i64* %86 to i64
  %88 = srem i64 %84, 64
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i64, i64* %64, i64 1
  %91 = bitcast i64* %90 to i8*
  br label %92

92:                                               ; preds = %68, %65
  %93 = phi i64* [ %64, %65 ], [ %90, %68 ]
  %94 = phi i32 [ 0, %65 ], [ %89, %68 ]
  %95 = phi i64 [ %50, %65 ], [ %87, %68 ]
  %96 = phi i8* [ %66, %65 ], [ %91, %68 ]
  %97 = phi i64 [ %62, %65 ], [ %73, %68 ]
  %98 = sdiv i64 %97, 64
  %99 = inttoptr i64 %95 to i8*
  %100 = shl nsw i64 %98, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %96, i64 %100, i1 false) #13, !noalias !50
  %101 = shl nsw i64 %98, 6
  %102 = sub i64 %97, %101
  %103 = inttoptr i64 %95 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %98
  %105 = ptrtoint i64* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %92
  %108 = getelementptr inbounds i64, i64* %93, i64 %98
  %109 = sub nsw i64 64, %102
  %110 = lshr i64 -1, %109
  %111 = load i64, i64* %108, align 8, !noalias !50
  %112 = and i64 %111, %110
  %113 = xor i64 %110, -1
  %114 = load i64, i64* %104, align 8, !noalias !50
  %115 = and i64 %114, %113
  %116 = or i64 %115, %112
  store i64 %116, i64* %104, align 8, !noalias !50
  %117 = trunc i64 %102 to i32
  br label %118

118:                                              ; preds = %107, %92, %56
  %119 = phi i32 [ %117, %107 ], [ %94, %92 ], [ %41, %56 ]
  %120 = phi i64 [ %105, %107 ], [ %105, %92 ], [ %50, %56 ]
  %121 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  store i64 %120, i64* %121, align 8, !alias.scope !53
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  store i32 %119, i32* %122, align 8, !alias.scope !53
  br label %130

123:                                              ; preds = %39
  %124 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %40, i64* %124, align 8, !noalias !56
  %125 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 %41, i32* %125, align 8, !noalias !56
  %126 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  store i64 %42, i64* %126, align 8, !noalias !56
  %127 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %43, i32* %127, align 8, !noalias !56
  %128 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  store i64 %50, i64* %128, align 8, !noalias !56
  %129 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  store i32 %49, i32* %129, align 8, !noalias !56
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #13
  br label %130

130:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #2 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #12

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK3net14PtrRecordRdata9ptrdomainEv: argument 0"}
!4 = distinct !{!4, !"_ZNK3net14PtrRecordRdata9ptrdomainEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3net12_GLOBAL__N_118SortServiceTargetsERKNSt3__16vectorIPKNS_14SrvRecordRdataENS1_9allocatorIS5_EEEE: argument 0"}
!7 = distinct !{!7, !"_ZN3net12_GLOBAL__N_118SortServiceTargetsERKNSt3__16vectorIPKNS_14SrvRecordRdataENS1_9allocatorIS5_EEEE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeINS_12__value_typeItNS_13unordered_setIPKN3net14SrvRecordRdataENS_4hashIS6_EENS_8equal_toIS6_EENS_9allocatorIS6_EEEEEENS_19__map_value_compareItSE_NS_4lessItEELb1EEENSB_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOtEEENSP_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINSB_ISW_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeINS_12__value_typeItNS_13unordered_setIPKN3net14SrvRecordRdataENS_4hashIS6_EENS_8equal_toIS6_EENS_9allocatorIS6_EEEEEENS_19__map_value_compareItSE_NS_4lessItEELb1EEENSB_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOtEEENSP_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINSB_ISW_EEEEEEDpOT_"}
!11 = !{!9, !6}
!12 = !{!"branch_weights", i32 1, i32 2000}
!13 = !{i64 0, i64 65}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3net26DnsResponseResultExtractor17CreateEmptyResultENS_12DnsQueryTypeE: argument 0"}
!16 = distinct !{!16, !"_ZN3net26DnsResponseResultExtractor17CreateEmptyResultENS_12DnsQueryTypeE"}
!17 = !{i8 0, i8 2}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN3net26DnsResponseResultExtractor17CreateEmptyResultENS_12DnsQueryTypeE: argument 0"}
!20 = distinct !{!20, !"_ZN3net26DnsResponseResultExtractor17CreateEmptyResultENS_12DnsQueryTypeE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!23 = distinct !{!23, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!26 = distinct !{!26, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE16__construct_nodeIJRKS7_SH_EEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISL_EEEEEEDpOT_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_N3net20DomainNameComparatorELb1EEENS5_IS8_EEE16__construct_nodeIJRKS7_SH_EEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISL_EEEEEEDpOT_"}
!30 = distinct !{!30, !31}
!31 = !{!"llvm.loop.unroll.disable"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNSt3__112__hash_tableIPKN3net14SrvRecordRdataENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__112__hash_tableIPKN3net14SrvRecordRdataENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!35 = distinct !{!35, !31}
!36 = !{!37, !39}
!37 = distinct !{!37, !38, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!39 = distinct !{!39, !40, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!44 = !{!45, !42}
!45 = distinct !{!45, !46, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!53 = !{!51, !54}
!54 = distinct !{!54, !55, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!55 = distinct !{!55, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!56 = !{!54}
