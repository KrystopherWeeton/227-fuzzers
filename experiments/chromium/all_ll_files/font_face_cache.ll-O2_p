; ModuleID = '../../third_party/blink/renderer/core/css/font_face_cache.cc'
source_filename = "../../third_party/blink/renderer/core/css/font_face_cache.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" = type { [2 x i8] }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.164" }
%"struct.std::__1::atomic.164" = type { %"struct.std::__1::__atomic_base.165" }
%"struct.std::__1::__atomic_base.165" = type { %"struct.std::__1::__atomic_base.166" }
%"struct.std::__1::__atomic_base.166" = type { %"struct.std::__1::__cxx_atomic_impl.167" }
%"struct.std::__1::__cxx_atomic_impl.167" = type { %"struct.std::__1::__cxx_atomic_base_impl.168" }
%"struct.std::__1::__cxx_atomic_base_impl.168" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.203", i32, [4 x i8], %"class.std::__1::unique_ptr.341", %"class.std::__1::unique_ptr.341", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.357", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.369", %"class.std::__1::unique_ptr.375", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.382", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.282", %"class.std::__1::unique_ptr.289", %"class.std::__1::unique_ptr.296", %"class.std::__1::unique_ptr.321", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.239" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.239" = type { %"struct.std::__1::__atomic_base.240" }
%"struct.std::__1::__atomic_base.240" = type { %"struct.std::__1::__atomic_base.241" }
%"struct.std::__1::__atomic_base.241" = type { %"struct.std::__1::__cxx_atomic_impl.242" }
%"struct.std::__1::__cxx_atomic_impl.242" = type { %"struct.std::__1::__cxx_atomic_base_impl.243" }
%"struct.std::__1::__cxx_atomic_base_impl.243" = type { i64 }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::Worklist.250"* }
%"class.blink::Worklist.250" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.239" }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::Worklist.257"* }
%"class.blink::Worklist.257" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.239" }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::Worklist.264"* }
%"class.blink::Worklist.264" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.239" }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::Worklist.271"* }
%"class.blink::Worklist.271" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.239" }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::Worklist.278"* }
%"class.blink::Worklist.278" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.239" }
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.blink::Worklist.285"* }
%"class.blink::Worklist.285" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.239" }
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.blink::Worklist.292"* }
%"class.blink::Worklist.292" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.239" }
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.299", %"class.std::__1::__compressed_pair.308", %"class.std::__1::__compressed_pair.313", %"class.std::__1::__compressed_pair.315", [4 x i8] }>
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301", %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { i64 }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { float }
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.324", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.333" }
%"class.WTF::Vector.333" = type { %"class.WTF::VectorBuffer.334" }
%"class.WTF::VectorBuffer.334" = type { %"class.WTF::VectorBufferBase.335" }
%"class.WTF::VectorBufferBase.335" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.349" }
%"class.WTF::VectorBuffer.349" = type { %"class.WTF::VectorBufferBase.350" }
%"class.WTF::VectorBufferBase.350" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.363" }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.250"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.257"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.264"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.271"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.278"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.386" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.381 }
%class.scoped_refptr.381 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.382" = type { %"struct.std::__1::__atomic_base.383" }
%"struct.std::__1::__atomic_base.383" = type { %"struct.std::__1::__cxx_atomic_impl.384" }
%"struct.std::__1::__cxx_atomic_impl.384" = type { %"struct.std::__1::__cxx_atomic_base_impl.385" }
%"struct.std::__1::__cxx_atomic_base_impl.385" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::FontFaceCache" = type <{ %"class.blink::HeapHashMap", %"class.blink::HeapHashMap.29", %"class.blink::HeapHashMap.45", %"class.blink::HeapLinkedHashSet", i32, [4 x i8] }>
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapHashMap.3"* }
%"class.blink::HeapHashMap.3" = type { %"class.WTF::HashMap.6" }
%"class.WTF::HashMap.6" = type { %"class.WTF::HashTable.7" }
%"class.WTF::HashTable.7" = type <{ %"struct.WTF::KeyValuePair.9"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.9" = type { %"struct.blink::FontSelectionCapabilities", %"class.blink::Member.10" }
%"struct.blink::FontSelectionCapabilities" = type <{ %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", i8, i8 }>
%"struct.blink::FontSelectionRange" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::CSSSegmentedFontFace"* }
%"class.blink::CSSSegmentedFontFace" = type { %"struct.blink::FontSelectionCapabilities", %"class.WTF::LruCache", %"class.blink::Member.18", i64 }
%"class.WTF::LruCache" = type { %"class.WTF::HashMap.14", %"class.WTF::DoublyLinkedList", i64 }
%"class.WTF::HashMap.14" = type { %"class.WTF::HashTable.15" }
%"class.WTF::HashTable.15" = type <{ %"struct.WTF::KeyValuePair.17"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.17" = type opaque
%"class.WTF::DoublyLinkedList" = type { %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* }
%"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey" = type opaque
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::FontFaceList"* }
%"class.blink::FontFaceList" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.25", %"class.blink::Member.27", %"class.blink::Member.27", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.25" = type <{ %"class.blink::Member.27"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.60", %"class.blink::Member.27", %"class.blink::Member.27" }
%"class.blink::Member.60" = type { %"class.blink::MemberBase.61" }
%"class.blink::MemberBase.61" = type { %"class.blink::FontFace"* }
%"class.blink::FontFace" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextClient", %"class.WTF::AtomicString", %"class.WTF::String", %"class.blink::Member.65", %"class.blink::Member.65", %"class.blink::Member.65", %"class.blink::Member.65", %"class.blink::Member.65", %"class.blink::Member.65", %"class.blink::Member.65", %"class.blink::Member.65", %"class.blink::Member.65", %"class.blink::Member.65", %"class.blink::Member.65", %"class.blink::Member.65", i32, %"class.blink::Member.69", %"class.blink::Member.71", %"class.blink::Member.73", %"class.blink::HeapVector" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.123", i32, i8, [3 x i8], %"class.blink::HeapVector.125", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.133", %"class.blink::Member.135", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.144", %"class.blink::Member.150", %"class.blink::Member.152", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.89" }
%"class.blink::HeapHashMap.89" = type { %"class.WTF::HashMap.92" }
%"class.WTF::HashMap.92" = type { %"class.WTF::HashTable.93" }
%"class.WTF::HashTable.93" = type <{ %"struct.WTF::KeyValuePair.95"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.95" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.101" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.98" }
%"class.WTF::HashTable.98" = type <{ %"class.blink::WeakMember.100"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.100" = type opaque
%"class.blink::Supplementable.101" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.102" }
%"class.blink::HeapHashMap.102" = type { %"class.WTF::HashMap.105" }
%"class.WTF::HashMap.105" = type { %"class.WTF::HashTable.106" }
%"class.WTF::HashTable.106" = type <{ %"struct.WTF::KeyValuePair.108"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.108" = type { i8*, %"class.blink::Member.391" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.393" }
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.109, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.112", %"class.blink::Member.118", i32, [4 x i8], %"class.WTF::HashSet.119", i32, i32 }
%class.scoped_refptr.109 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.110 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.110 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.118" = type { %"class.blink::MemberBase.64" }
%"class.WTF::HashSet.119" = type { %"class.WTF::HashTable.120" }
%"class.WTF::HashTable.120" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.125" = type { %"class.WTF::Vector.128" }
%"class.WTF::Vector.128" = type { %"class.WTF::VectorBuffer.129" }
%"class.WTF::VectorBuffer.129" = type { %"class.WTF::VectorBufferBase.130" }
%"class.WTF::VectorBufferBase.130" = type { %"class.blink::Member.131"*, i32, i32 }
%"class.blink::Member.131" = type opaque
%"class.blink::Member.133" = type { %"class.blink::MemberBase.134" }
%"class.blink::MemberBase.134" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.137", i32, i32 }
%"class.blink::HeapHashMap.137" = type { %"class.WTF::HashMap.140" }
%"class.WTF::HashMap.140" = type { %"class.WTF::HashTable.141" }
%"class.WTF::HashTable.141" = type <{ %"struct.WTF::KeyValuePair.143"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.143" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::DOMException"* }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::CSSFontFace"* }
%"class.blink::CSSFontFace" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.77"*, i32, i32 }
%"class.blink::Member.77" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapHashMap.29" = type { %"class.WTF::HashMap.32" }
%"class.WTF::HashMap.32" = type { %"class.WTF::HashTable.33" }
%"class.WTF::HashTable.33" = type <{ %"struct.WTF::KeyValuePair.35"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.35" = type { %"class.WTF::String", %"class.blink::Member.36" }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::HeapHashMap.38"* }
%"class.blink::HeapHashMap.38" = type { %"class.WTF::HashMap.41" }
%"class.WTF::HashMap.41" = type { %"class.WTF::HashTable.42" }
%"class.WTF::HashTable.42" = type <{ %"struct.WTF::KeyValuePair.44"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.44" = type { %"struct.blink::FontSelectionRequestKey", %"class.blink::Member.10" }
%"struct.blink::FontSelectionRequestKey" = type <{ %"struct.blink::FontSelectionRequest", i8, i8 }>
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::HeapHashMap.45" = type { %"class.WTF::HashMap.48" }
%"class.WTF::HashMap.48" = type { %"class.WTF::HashTable.49" }
%"class.WTF::HashTable.49" = type <{ %"struct.WTF::KeyValuePair.51"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.51" = type { %"class.blink::Member.52", %"class.blink::Member.60" }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.56" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.81", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.81" = type { %"class.WTF::HashTable.82" }
%"class.WTF::HashTable.82" = type <{ %"struct.WTF::KeyValuePair.84"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.84" = type <{ %"class.blink::Member.60", i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.85", i32, i32 }
%"class.WTF::Vector.85" = type { %"class.WTF::VectorBuffer.86" }
%"class.WTF::VectorBuffer.86" = type { %"class.WTF::VectorBufferBase.87" }
%"class.WTF::VectorBufferBase.87" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type { i32, i32, %"class.blink::Member.60" }
%"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper" = type { %"class.WTF::VectorBackedLinkedListConstIterator", %"struct.WTF::HashTableConstIteratorAdapter" }
%"class.WTF::VectorBackedLinkedListConstIterator" = type { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* }
%"struct.WTF::HashTableConstIteratorAdapter" = type { %"class.WTF::HashTableConstIterator.485" }
%"class.WTF::HashTableConstIterator.485" = type { %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"* }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.170, %class.scoped_refptr.178, %class.scoped_refptr.188, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.198 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.169 }
%class.scoped_refptr.169 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.199", [4 x i8] }>
%"class.WTF::RefCounted.199" = type { %"class.base::RefCounted.200" }
%"class.base::RefCounted.200" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.170 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.176", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.171" }
%"class.WTF::Vector.171" = type { %"class.WTF::VectorBuffer.172" }
%"class.WTF::VectorBuffer.172" = type { %"class.WTF::VectorBufferBase.173" }
%"class.WTF::VectorBufferBase.173" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.176" = type { %"class.base::RefCounted.177" }
%"class.base::RefCounted.177" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.178 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.179", %"class.WTF::RefCounted.186", [4 x i8] }>
%"class.blink::FontSettings.179" = type { %"class.WTF::Vector.180" }
%"class.WTF::Vector.180" = type { %"class.WTF::VectorBuffer.181" }
%"class.WTF::VectorBuffer.181" = type { %"class.WTF::VectorBufferBase.182" }
%"class.WTF::VectorBufferBase.182" = type { %"class.blink::FontTagValuePair.183"*, i32, i32 }
%"class.blink::FontTagValuePair.183" = type { i32, float }
%"class.WTF::RefCounted.186" = type { %"class.base::RefCounted.187" }
%"class.base::RefCounted.187" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.188 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.189", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.195, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.189" = type { %"class.base::RefCounted.190" }
%"class.base::RefCounted.190" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.193 }
%union.anon.193 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.195 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.196", [4 x i8] }>
%"class.WTF::RefCounted.196" = type { %"class.base::RefCounted.197" }
%"class.base::RefCounted.197" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%union.anon.198 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.blink::FontSelectionAlgorithm" = type { %"struct.blink::FontSelectionRequest", %"struct.blink::FontSelectionCapabilities" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HeapHashTableBacking.447" = type { i8 }
%"class.WTF::internal::ConcurrentBucket.465" = type { [14 x i8], %"class.blink::Member.10"* }
%"class.WTF::StringHasher" = type { i32, i8, i16 }
%"class.blink::HeapHashTableBacking.461" = type { i8 }
%"class.blink::HeapHashTableBacking.487" = type { i8 }
%"class.blink::HeapHashTableBacking.503" = type { i8 }
%"class.blink::HeapHashTableBacking.517" = type { i8 }

$_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5clearEv = comdat any

$_ZN5blink25FontSelectionCapabilitiesC2Ev = comdat any

$_ZN3WTF15ConstructTraitsINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEENS_12VectorTraitsIS7_EES6_E25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEES0_EEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERPS4_RPS7_EENS_18HashTableAddResultISJ_S9_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS9_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS9_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS9_jSK_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS1_12KeyValuePairIS6_NS3_INS_8FontFaceEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS5_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberIKNS3_17StyleRuleFontFaceEEENS_12KeyValuePairIS7_NS4_INS3_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17StyleRuleFontFaceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingERKS5_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberIKNS_17StyleRuleFontFaceEEENS4_INS_8FontFaceEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSC_IS9_EEEEEEvPT_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISL_SH_SM_EERKNS_12AtomicStringEDnEENS_18HashTableAddResultISN_SF_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE6ExpandEPSF_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE12ExpandBufferEjPSF_Rb = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE8RehashToEPSF_jSO_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS5_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS1_10HashTraitsIS7_EENSB_IS9_EEEEEEEENS1_24KeyValuePairKeyExtractorENS1_15CaseFoldingHashENS1_18HashMapValueTraitsINSB_IS3_EENSB_ISF_EEEESK_NS_13HeapAllocatorEEEE14AllocateObjectISP_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS7_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS3_10HashTraitsIS9_EENSD_ISB_EEEEEEEENS3_24KeyValuePairKeyExtractorENS3_15CaseFoldingHashENS3_18HashMapValueTraitsINSD_IS5_EENSD_ISH_EEEESM_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_11HeapHashMapINS5_25FontSelectionCapabilitiesENS6_INS5_20CSSSegmentedFontFaceEEENS5_29FontSelectionCapabilitiesHashENS_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS3_EENSC_ISG_EEEESL_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS2_EENS8_IS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS4_NS3_6MemberINS3_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS3_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20CSSSegmentedFontFaceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS3_EENS9_IS6_EEEEEEPhm = comdat any

$_ZN5blink9NameTraitINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS2_EENS8_IS5_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES2_DnEENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS1_12KeyValuePairIS3_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS1_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EENSt3__14pairIPS7_bEERKT0_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20CSSSegmentedFontFaceEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20CSSSegmentedFontFaceEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20CSSSegmentedFontFaceEE7GetNameEPKv = comdat any

$_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_8FontFaceEEENS1_13HeapAllocatorEE6insertIRPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_ = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_8FontFaceEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj = comdat any

$_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE5eraseEPKSG_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE12ExpandBufferEjPSG_Rb = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE8RehashToEPSG_jSP_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS5_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS1_21SimpleClassHashTraitsIS7_EENS1_10HashTraitsIS9_EEEEEEEENS1_24KeyValuePairKeyExtractorENS1_15CaseFoldingHashENS1_18HashMapValueTraitsINSD_IS3_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEE14AllocateObjectISQ_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS7_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS3_21SimpleClassHashTraitsIS9_EENS3_10HashTraitsISB_EEEEEEEENS3_24KeyValuePairKeyExtractorENS3_15CaseFoldingHashENS3_18HashMapValueTraitsINSF_IS5_EENSF_ISI_EEEESN_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_11HeapHashMapINS5_23FontSelectionRequestKeyENS6_INS5_20CSSSegmentedFontFaceEEENS5_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS8_EENS_10HashTraitsISA_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSE_IS3_EENSE_ISH_EEEESM_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS2_EENS7_10HashTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS4_NS3_6MemberINS3_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS3_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS4_EENS_10HashTraitsIS8_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE5eraseEPKS9_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE4findERKS1_ = comdat any

$_ZNK3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EEPKS7_RKT0_ = comdat any

$_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE5eraseEPKS7_ = comdat any

$_ZN5blink25FontSelectionCapabilitiesC2EN3WTF25HashTableDeletedValueTypeE = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE5eraseEPKSF_ = comdat any

$_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5eraseENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEE = comdat any

$_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_8FontFaceEEENS1_13HeapAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E14ShrinkCapacityEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS3_EENS8_10HashTraitsIS6_EEEEEEPhm = comdat any

$_ZN5blink9NameTraitINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS2_EENS7_10HashTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISM_SI_SN_EERKNS_12AtomicStringEPSE_EENS_18HashTableAddResultISO_SG_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE6ExpandEPSG_ = comdat any

$_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_S9_SG_EERKNS1_20FontSelectionRequestEDnEENS_18HashTableAddResultISH_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS1_12KeyValuePairIS3_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS1_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS1_18HashMapValueTraitsINS1_21SimpleClassHashTraitsIS3_EENS1_10HashTraitsIS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS2_EENS8_IS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS2_EENS8_IS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20CSSSegmentedFontFaceEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20CSSSegmentedFontFaceEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS2_EENS7_10HashTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS2_EENS7_10HashTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZZN5blink13FontFaceCache16IncrementVersionEvE9g_version = internal global { { { i32 } } } zeroinitializer, align 4
@_ZN5blink17font_family_names9kSystemUiE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue = internal global i64 0, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.5 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS_26VectorBackedLinkedListNodeINS1_6MemberINS1_8FontFaceEEENS1_13HeapAllocatorEEENS_12VectorTraitsIS8_EEEEEEPKcv = private unnamed_addr constant [267 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<WTF::VectorBackedLinkedListNode<blink::Member<blink::FontFace>, blink::HeapAllocator>, WTF::VectorTraits<WTF::VectorBackedLinkedListNode<blink::Member<blink::FontFace>, blink::HeapAllocator> > >]\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.11 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS7_NS4_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [546 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<const blink::StyleRuleFontFace>, WTF::KeyValuePair<blink::Member<const blink::StyleRuleFontFace>, blink::Member<blink::FontFace> >, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<const blink::StyleRuleFontFace>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<const blink::StyleRuleFontFace> >, WTF::HashTraits<blink::Member<blink::FontFace> > >, WTF::HashTraits<blink::Member<const blink::StyleRuleFontFace> >, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS7_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS3_10HashTraitsIS9_EENSD_ISB_EEEEEEEENS3_24KeyValuePairKeyExtractorENS3_15CaseFoldingHashENS3_18HashMapValueTraitsINSD_IS5_EENSD_ISH_EEEESM_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_11HeapHashMapINS1_25FontSelectionCapabilitiesENS6_INS1_20CSSSegmentedFontFaceEEENS1_29FontSelectionCapabilitiesHashENS_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [849 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::String, WTF::KeyValuePair<WTF::String, blink::Member<blink::HeapHashMap<blink::FontSelectionCapabilities, blink::Member<blink::CSSSegmentedFontFace>, blink::FontSelectionCapabilitiesHash, WTF::HashTraits<blink::FontSelectionCapabilities>, WTF::HashTraits<blink::Member<blink::CSSSegmentedFontFace> > > > >, WTF::KeyValuePairKeyExtractor, WTF::CaseFoldingHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::HeapHashMap<blink::FontSelectionCapabilities, blink::Member<blink::CSSSegmentedFontFace>, blink::FontSelectionCapabilitiesHash, WTF::HashTraits<blink::FontSelectionCapabilities>, WTF::HashTraits<blink::Member<blink::CSSSegmentedFontFace> > > > > >, WTF::HashTraits<WTF::String>, blink::HeapAllocator> >]\00", align 1
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashMapINS1_25FontSelectionCapabilitiesENS1_6MemberINS1_20CSSSegmentedFontFaceEEENS1_29FontSelectionCapabilitiesHashENS_10HashTraitsIS3_EENS8_IS6_EEEEEEPKcv = private unnamed_addr constant [296 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashMap<blink::FontSelectionCapabilities, blink::Member<blink::CSSSegmentedFontFace>, blink::FontSelectionCapabilitiesHash, WTF::HashTraits<blink::FontSelectionCapabilities>, WTF::HashTraits<blink::Member<blink::CSSSegmentedFontFace> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS2_EENS8_IS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS2_EENS8_IS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS2_EENS8_IS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS2_EENS8_IS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_25FontSelectionCapabilitiesENS_12KeyValuePairIS4_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [505 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::FontSelectionCapabilities, WTF::KeyValuePair<blink::FontSelectionCapabilities, blink::Member<blink::CSSSegmentedFontFace> >, WTF::KeyValuePairKeyExtractor, blink::FontSelectionCapabilitiesHash, WTF::HashMapValueTraits<WTF::HashTraits<blink::FontSelectionCapabilities>, WTF::HashTraits<blink::Member<blink::CSSSegmentedFontFace> > >, WTF::HashTraits<blink::FontSelectionCapabilities>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20CSSSegmentedFontFaceEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSSegmentedFontFace]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20CSSSegmentedFontFaceEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20CSSSegmentedFontFaceEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20CSSSegmentedFontFaceEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20CSSSegmentedFontFaceEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20CSSSegmentedFontFaceEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN3WTFL9kNotFoundE = internal constant i32 -1, align 4
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_8FontFaceEEENS_12KeyValuePairIS6_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IjEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [433 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::FontFace>, WTF::KeyValuePair<blink::Member<blink::FontFace>, unsigned int>, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::FontFace>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<blink::FontFace> >, WTF::HashTraits<unsigned int> >, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator> >]\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS7_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS3_21SimpleClassHashTraitsIS9_EENS3_10HashTraitsISB_EEEEEEEENS3_24KeyValuePairKeyExtractorENS3_15CaseFoldingHashENS3_18HashMapValueTraitsINSF_IS5_EENSF_ISI_EEEESN_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_11HeapHashMapINS1_23FontSelectionRequestKeyENS6_INS1_20CSSSegmentedFontFaceEEENS1_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS8_EENS_10HashTraitsISA_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [859 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::String, WTF::KeyValuePair<WTF::String, blink::Member<blink::HeapHashMap<blink::FontSelectionRequestKey, blink::Member<blink::CSSSegmentedFontFace>, blink::FontSelectionRequestKeyHash, WTF::SimpleClassHashTraits<blink::FontSelectionRequestKey>, WTF::HashTraits<blink::Member<blink::CSSSegmentedFontFace> > > > >, WTF::KeyValuePairKeyExtractor, WTF::CaseFoldingHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::HeapHashMap<blink::FontSelectionRequestKey, blink::Member<blink::CSSSegmentedFontFace>, blink::FontSelectionRequestKeyHash, WTF::SimpleClassHashTraits<blink::FontSelectionRequestKey>, WTF::HashTraits<blink::Member<blink::CSSSegmentedFontFace> > > > > >, WTF::HashTraits<WTF::String>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashMapINS1_23FontSelectionRequestKeyENS1_6MemberINS1_20CSSSegmentedFontFaceEEENS1_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS3_EENS_10HashTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [301 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashMap<blink::FontSelectionRequestKey, blink::Member<blink::CSSSegmentedFontFace>, blink::FontSelectionRequestKeyHash, WTF::SimpleClassHashTraits<blink::FontSelectionRequestKey>, WTF::HashTraits<blink::Member<blink::CSSSegmentedFontFace> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS2_EENS7_10HashTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS2_EENS7_10HashTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS2_EENS7_10HashTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS2_EENS7_10HashTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_23FontSelectionRequestKeyENS_12KeyValuePairIS4_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS4_EENS_10HashTraitsIS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [517 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::FontSelectionRequestKey, WTF::KeyValuePair<blink::FontSelectionRequestKey, blink::Member<blink::CSSSegmentedFontFace> >, WTF::KeyValuePairKeyExtractor, blink::FontSelectionRequestKeyHash, WTF::HashMapValueTraits<WTF::SimpleClassHashTraits<blink::FontSelectionRequestKey>, WTF::HashTraits<blink::Member<blink::CSSSegmentedFontFace> > >, WTF::SimpleClassHashTraits<blink::FontSelectionRequestKey>, blink::HeapAllocator> >]\00", align 1

@_ZN5blink13FontFaceCacheC1Ev = hidden unnamed_addr alias void (%"class.blink::FontFaceCache"*), void (%"class.blink::FontFaceCache"*)* @_ZN5blink13FontFaceCacheC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13FontFaceCacheC2Ev(%"class.blink::FontFaceCache"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %3 = bitcast %"class.blink::FontFaceCache"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 20, i1 false) #11
  %4 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::HeapHashMap.29"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #11
  %6 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 2
  %7 = bitcast %"class.blink::HeapHashMap.45"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #11
  %8 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 3
  %9 = bitcast %"class.blink::HeapLinkedHashSet"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #11
  %10 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 3, i32 0, i32 1
  %11 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %2 to i8*
  %12 = bitcast %"class.WTF::VectorBackedLinkedList"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #11
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %10, i64 0, i32 0
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.85"* %13, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %2) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %14 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 4
  store i32 0, i32* %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13FontFaceCache3AddEPKNS_17StyleRuleFontFaceEPNS_8FontFaceE(%"class.blink::FontFaceCache"*, %"class.blink::StyleRuleFontFace"*, %"class.blink::FontFace"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::StyleRuleFontFace"*, align 8
  %5 = alloca %"class.blink::FontFace"*, align 8
  store %"class.blink::StyleRuleFontFace"* %1, %"class.blink::StyleRuleFontFace"** %4, align 8
  store %"class.blink::FontFace"* %2, %"class.blink::FontFace"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = call { %"struct.WTF::KeyValuePair.51"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERPS4_RPS7_EENS_18HashTableAddResultISJ_S9_EEOT0_OT1_(%"class.WTF::HashTable.49"* %6, %"class.blink::StyleRuleFontFace"** nonnull dereferenceable(8) %4, %"class.blink::FontFace"** nonnull dereferenceable(8) %5) #11
  %8 = extractvalue { %"struct.WTF::KeyValuePair.51"*, i8 } %7, 1
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %5, align 8
  call void @_ZN5blink13FontFaceCache11AddFontFaceEPNS_8FontFaceEb(%"class.blink::FontFaceCache"* %0, %"class.blink::FontFace"* %12, i1 zeroext true)
  br label %13

13:                                               ; preds = %3, %11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13FontFaceCache11AddFontFaceEPNS_8FontFaceEb(%"class.blink::FontFaceCache"*, %"class.blink::FontFace"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %5 = alloca %"class.blink::FontFace"*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"struct.blink::FontSelectionCapabilities", align 8
  %8 = alloca i8*, align 8
  store %"class.blink::FontFace"* %1, %"class.blink::FontFace"** %5, align 8
  %9 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %1, i64 0, i32 3
  %10 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  store i8* null, i8** %6, align 8
  %11 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISL_SH_SM_EERKNS_12AtomicStringEDnEENS_18HashTableAddResultISN_SF_EEOT0_OT1_(%"class.WTF::HashTable"* %11, %"class.WTF::AtomicString"* dereferenceable(8) %9, i8** nonnull dereferenceable(8) %6) #11
  %13 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %12, 0
  %14 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %12, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %3
  %18 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS3_EENS9_IS6_EEEEEEPhm(i64 24) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #11
  %19 = getelementptr inbounds i8, i8* %18, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 0, i32 1
  %24 = ptrtoint i8* %18 to i64
  %25 = bitcast %"class.blink::Member"* %23 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %18) #11
  br label %30

30:                                               ; preds = %28, %17, %3
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.blink::HeapHashMap.3"*, %"class.blink::HeapHashMap.3"** %31, align 8
  %33 = bitcast %"struct.blink::FontSelectionCapabilities"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %33) #11
  %34 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %5, align 8
  %35 = call { i64, i48 } @_ZNK5blink8FontFace28GetFontSelectionCapabilitiesEv(%"class.blink::FontFace"* %34) #11
  %36 = extractvalue { i64, i48 } %35, 0
  %37 = extractvalue { i64, i48 } %35, 1
  %38 = bitcast %"struct.blink::FontSelectionCapabilities"* %7 to i64*
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %7, i64 0, i32 2
  %40 = bitcast %"struct.blink::FontSelectionRange"* %39 to i48*
  store i48 %37, i48* %40, align 8
  %41 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11
  store i8* null, i8** %8, align 8
  %42 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %32, i64 0, i32 0, i32 0
  %43 = call { %"struct.WTF::KeyValuePair.9"*, i8 } @_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES2_DnEENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.7"* %42, %"struct.blink::FontSelectionCapabilities"* nonnull dereferenceable(14) %7, i8** nonnull dereferenceable(8) %8) #11
  %44 = extractvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %43, 0
  %45 = extractvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %43, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %33) #11
  %46 = and i8 %45, 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %65, label %48

48:                                               ; preds = %30
  %49 = call { i64, i48 } @_ZNK5blink8FontFace28GetFontSelectionCapabilitiesEv(%"class.blink::FontFace"* %34) #11
  %50 = extractvalue { i64, i48 } %49, 0
  %51 = extractvalue { i64, i48 } %49, 1
  %52 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CSSSegmentedFontFaceEEEPhm(i64 80) #11
  %53 = bitcast i8* %52 to %"class.blink::CSSSegmentedFontFace"*
  call void @_ZN5blink20CSSSegmentedFontFaceC1ENS_25FontSelectionCapabilitiesE(%"class.blink::CSSSegmentedFontFace"* %53, i64 %50, i48 %51) #11
  %54 = getelementptr inbounds i8, i8* %52, i64 -4
  %55 = bitcast i8* %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %44, i64 0, i32 1
  %59 = ptrtoint i8* %52 to i64
  %60 = bitcast %"class.blink::Member.10"* %58 to i64*
  store atomic i64 %59, i64* %60 monotonic, align 8
  %61 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %48
  %64 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #11
  br label %65

65:                                               ; preds = %63, %48, %30
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %44, i64 0, i32 1, i32 0, i32 0
  %67 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %66, align 8
  %68 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %5, align 8
  call void @_ZN5blink20CSSSegmentedFontFace11AddFontFaceEPNS_8FontFaceEb(%"class.blink::CSSSegmentedFontFace"* %67, %"class.blink::FontFace"* %68, i1 zeroext %2) #11
  br i1 %2, label %69, label %101

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 3, i32 0
  %71 = bitcast %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %71)
  %72 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 3, i32 0, i32 1
  %73 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %72, i64 0, i32 0
  %74 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %73, i32 0) #11, !noalias !2
  %75 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode"* %74, %"class.WTF::VectorBackedLinkedListNode"** %75, align 8, !alias.scope !2
  %76 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %4, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList"* %72, %"class.WTF::VectorBackedLinkedList"** %76, align 8, !alias.scope !2
  %77 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4, !noalias !5
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %70, i64 0, i32 0, i32 0, i32 0
  %81 = load %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"** %80, align 8, !noalias !5
  %82 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %83 = load i32, i32* %82, align 8, !noalias !5
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %81, i64 %84
  br i1 %79, label %95, label %86

86:                                               ; preds = %69
  %87 = icmp eq i32 %83, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %86, %92
  %89 = phi %"struct.WTF::KeyValuePair.84"* [ %93, %92 ], [ %81, %86 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.84"* %89 to i64*
  %91 = load i64, i64* %90, align 8, !noalias !5
  switch i64 %91, label %95 [
    i64 -1, label %92
    i64 0, label %92
  ]

92:                                               ; preds = %88, %88
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %89, i64 1
  %94 = icmp eq %"struct.WTF::KeyValuePair.84"* %93, %85
  br i1 %94, label %95, label %88

95:                                               ; preds = %88, %92, %69, %86
  %96 = phi %"struct.WTF::KeyValuePair.84"* [ %85, %69 ], [ %81, %86 ], [ %89, %88 ], [ %85, %92 ]
  %97 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %4, i64 0, i32 1, i32 0, i32 0
  store %"struct.WTF::KeyValuePair.84"* %96, %"struct.WTF::KeyValuePair.84"** %97, align 8, !alias.scope !5
  %98 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %4, i64 0, i32 1, i32 0, i32 1
  store %"struct.WTF::KeyValuePair.84"* %85, %"struct.WTF::KeyValuePair.84"** %98, align 8, !alias.scope !5
  %99 = call { %"class.blink::Member.60"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet"* %70, %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper") align 8 %4, %"class.blink::FontFace"** nonnull dereferenceable(8) %5, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %71)
  %100 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %5, align 8
  br label %101

101:                                              ; preds = %95, %65
  %102 = phi %"class.blink::FontFace"* [ %100, %95 ], [ %68, %65 ]
  %103 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 1, i32 0
  %104 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %102, i64 0, i32 3, i32 0
  %105 = getelementptr inbounds %"class.WTF::HashMap.32", %"class.WTF::HashMap.32"* %103, i64 0, i32 0
  %106 = call { %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.33"* %105, %"class.WTF::String"* dereferenceable(8) %104) #11
  %107 = extractvalue { %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"* } %106, 0
  %108 = getelementptr inbounds %"class.WTF::HashMap.32", %"class.WTF::HashMap.32"* %103, i64 0, i32 0, i32 0
  %109 = load %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %109, i64 %112
  %114 = icmp eq %"struct.WTF::KeyValuePair.35"* %113, %107
  br i1 %114, label %116, label %115

115:                                              ; preds = %101
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE5eraseEPKSG_(%"class.WTF::HashTable.33"* %105, %"struct.WTF::KeyValuePair.35"* %107) #11
  br label %116

116:                                              ; preds = %101, %115
  %117 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZZN5blink13FontFaceCache16IncrementVersionEvE9g_version, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %118 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 4
  store i32 %117, i32* %118, align 8
  ret void
}

declare { i64, i48 } @_ZNK5blink8FontFace28GetFontSelectionCapabilitiesEv(%"class.blink::FontFace"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink20CSSSegmentedFontFace11AddFontFaceEPNS_8FontFaceEb(%"class.blink::CSSSegmentedFontFace"*, %"class.blink::FontFace"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink13FontFaceCache16IncrementVersionEv(%"class.blink::FontFaceCache"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZZN5blink13FontFaceCache16IncrementVersionEvE9g_version, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %3 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 4
  store i32 %2, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13FontFaceCache6RemoveEPKNS_17StyleRuleFontFaceE(%"class.blink::FontFaceCache"*, %"class.blink::StyleRuleFontFace"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.WTF::HashMap.48", %"class.WTF::HashMap.48"* %3, i64 0, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"* } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.49"* %4, %"class.blink::StyleRuleFontFace"* %1) #11
  %6 = extractvalue { %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"* } %5, 0
  %7 = getelementptr inbounds %"class.WTF::HashMap.48", %"class.WTF::HashMap.48"* %3, i64 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %8, i64 %11
  %13 = icmp eq %"struct.WTF::KeyValuePair.51"* %6, %12
  br i1 %13, label %23, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %6, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %15, align 8
  tail call void @_ZN5blink13FontFaceCache14RemoveFontFaceEPNS_8FontFaceEb(%"class.blink::FontFaceCache"* %0, %"class.blink::FontFace"* %16, i1 zeroext true)
  %17 = load %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"** %7, align 8
  %18 = load i32, i32* %9, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %17, i64 %19
  %21 = icmp eq %"struct.WTF::KeyValuePair.51"* %20, %6
  br i1 %21, label %23, label %22

22:                                               ; preds = %14
  tail call void @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE5eraseEPKS9_(%"class.WTF::HashTable.49"* %4, %"struct.WTF::KeyValuePair.51"* %6) #11
  br label %23

23:                                               ; preds = %2, %22, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13FontFaceCache14RemoveFontFaceEPNS_8FontFaceEb(%"class.blink::FontFaceCache"*, %"class.blink::FontFace"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %5 = alloca %"struct.blink::FontSelectionCapabilities", align 8
  %6 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %1, i64 0, i32 3, i32 0
  %7 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %7, %"class.WTF::String"* dereferenceable(8) %6) #11
  %9 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %8, 0
  %10 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %14
  %16 = icmp eq %"struct.WTF::KeyValuePair"* %9, %15
  br i1 %16, label %82, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::HeapHashMap.3"*, %"class.blink::HeapHashMap.3"** %18, align 8
  %20 = bitcast %"struct.blink::FontSelectionCapabilities"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %20) #11
  %21 = tail call { i64, i48 } @_ZNK5blink8FontFace28GetFontSelectionCapabilitiesEv(%"class.blink::FontFace"* %1) #11
  %22 = extractvalue { i64, i48 } %21, 0
  %23 = extractvalue { i64, i48 } %21, 1
  %24 = bitcast %"struct.blink::FontSelectionCapabilities"* %5 to i64*
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %5, i64 0, i32 2
  %26 = bitcast %"struct.blink::FontSelectionRange"* %25 to i48*
  store i48 %23, i48* %26, align 8
  %27 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %19, i64 0, i32 0, i32 0
  %28 = call %"struct.WTF::KeyValuePair.9"* @_ZNK3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EEPKS7_RKT0_(%"class.WTF::HashTable.7"* %27, %"struct.blink::FontSelectionCapabilities"* nonnull dereferenceable(14) %5) #11
  %29 = icmp eq %"struct.WTF::KeyValuePair.9"* %28, null
  %30 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %19, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %19, i64 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %31, i64 %34
  %36 = select i1 %29, %"struct.WTF::KeyValuePair.9"* %35, %"struct.WTF::KeyValuePair.9"* %28
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %20) #11
  %37 = icmp eq %"struct.WTF::KeyValuePair.9"* %36, %35
  br i1 %37, label %82, label %38

38:                                               ; preds = %17
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %36, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %39, align 8
  call void @_ZN5blink20CSSSegmentedFontFace14RemoveFontFaceEPNS_8FontFaceE(%"class.blink::CSSSegmentedFontFace"* %40, %"class.blink::FontFace"* %1) #11
  %41 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::FontFaceList"*, %"class.blink::FontFaceList"** %41, align 8
  %43 = call zeroext i1 @_ZNK5blink12FontFaceList7IsEmptyEv(%"class.blink::FontFaceList"* %42) #11
  br i1 %43, label %44, label %62

44:                                               ; preds = %38
  %45 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %30, align 8
  %46 = load i32, i32* %32, align 8
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %45, i64 %47
  %49 = icmp eq %"struct.WTF::KeyValuePair.9"* %48, %36
  br i1 %49, label %51, label %50

50:                                               ; preds = %44
  call void @_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.7"* %27, %"struct.WTF::KeyValuePair.9"* %36) #11
  br label %51

51:                                               ; preds = %44, %50
  %52 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %19, i64 0, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %51
  %56 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %57 = load i32, i32* %12, align 8
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 %58
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %59, %9
  br i1 %60, label %62, label %61

61:                                               ; preds = %55
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE5eraseEPKSF_(%"class.WTF::HashTable"* %7, %"struct.WTF::KeyValuePair"* %9) #11
  br label %62

62:                                               ; preds = %61, %55, %51, %38
  %63 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.WTF::HashMap.32", %"class.WTF::HashMap.32"* %63, i64 0, i32 0
  %65 = call { %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.33"* %64, %"class.WTF::String"* dereferenceable(8) %6) #11
  %66 = extractvalue { %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"* } %65, 0
  %67 = getelementptr inbounds %"class.WTF::HashMap.32", %"class.WTF::HashMap.32"* %63, i64 0, i32 0, i32 0
  %68 = load %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %68, i64 %71
  %73 = icmp eq %"struct.WTF::KeyValuePair.35"* %72, %66
  br i1 %73, label %75, label %74

74:                                               ; preds = %62
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE5eraseEPKSG_(%"class.WTF::HashTable.33"* %64, %"struct.WTF::KeyValuePair.35"* %66) #11
  br label %75

75:                                               ; preds = %62, %74
  br i1 %2, label %76, label %79

76:                                               ; preds = %75
  %77 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 3, i32 0
  %78 = bitcast %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %78)
  call void @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* nonnull sret %4, %"class.WTF::LinkedHashSet"* %77, %"class.blink::FontFace"* %1) #11
  call void @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5eraseENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEE(%"class.WTF::LinkedHashSet"* %77, %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper") align 8 %4) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %78)
  br label %79

79:                                               ; preds = %76, %75
  %80 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZZN5blink13FontFaceCache16IncrementVersionEvE9g_version, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %81 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 4
  store i32 %80, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %17, %3
  ret void
}

declare void @_ZN5blink20CSSSegmentedFontFace14RemoveFontFaceEPNS_8FontFaceE(%"class.blink::CSSSegmentedFontFace"*, %"class.blink::FontFace"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13FontFaceCache17ClearCSSConnectedEv(%"class.blink::FontFaceCache"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 2, i32 0
  %3 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %47, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::HashMap.48", %"class.WTF::HashMap.48"* %2, i64 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %6, %18
  %15 = phi %"struct.WTF::KeyValuePair.51"* [ %19, %18 ], [ %8, %6 ]
  %16 = bitcast %"struct.WTF::KeyValuePair.51"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %14, %14
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %15, i64 1
  %20 = icmp eq %"struct.WTF::KeyValuePair.51"* %19, %12
  br i1 %20, label %26, label %14

21:                                               ; preds = %14, %6
  %22 = phi %"struct.WTF::KeyValuePair.51"* [ %8, %6 ], [ %15, %14 ]
  %23 = icmp eq %"struct.WTF::KeyValuePair.51"* %22, %12
  br i1 %23, label %26, label %32

24:                                               ; preds = %32, %45, %42
  %25 = load %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"** %7, align 8
  br label %26

26:                                               ; preds = %18, %24, %21
  %27 = phi %"struct.WTF::KeyValuePair.51"* [ %25, %24 ], [ %8, %21 ], [ %8, %18 ]
  %28 = icmp eq %"struct.WTF::KeyValuePair.51"* %27, null
  br i1 %28, label %47, label %29

29:                                               ; preds = %26
  %30 = bitcast %"struct.WTF::KeyValuePair.51"* %27 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %30) #11
  %31 = bitcast %"class.WTF::HashMap.48"* %2 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %3, align 4
  br label %47

32:                                               ; preds = %21, %45
  %33 = phi %"struct.WTF::KeyValuePair.51"* [ %39, %45 ], [ %22, %21 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %33, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %34, align 8
  tail call void @_ZN5blink13FontFaceCache14RemoveFontFaceEPNS_8FontFaceEb(%"class.blink::FontFaceCache"* %0, %"class.blink::FontFace"* %35, i1 zeroext true)
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %33, i64 1
  %37 = icmp eq %"struct.WTF::KeyValuePair.51"* %36, %12
  br i1 %37, label %24, label %38

38:                                               ; preds = %32, %42
  %39 = phi %"struct.WTF::KeyValuePair.51"* [ %43, %42 ], [ %36, %32 ]
  %40 = bitcast %"struct.WTF::KeyValuePair.51"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  switch i64 %41, label %45 [
    i64 -1, label %42
    i64 0, label %42
  ]

42:                                               ; preds = %38, %38
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %39, i64 1
  %44 = icmp eq %"struct.WTF::KeyValuePair.51"* %43, %12
  br i1 %44, label %24, label %38

45:                                               ; preds = %38
  %46 = icmp eq %"struct.WTF::KeyValuePair.51"* %39, %12
  br i1 %46, label %24, label %32

47:                                               ; preds = %29, %26, %1
  %48 = phi i1 [ false, %1 ], [ true, %26 ], [ true, %29 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13FontFaceCache8ClearAllEv(%"class.blink::FontFaceCache"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %99, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %7, null
  br i1 %8, label %44, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %41, label %13

13:                                               ; preds = %9
  %14 = zext i32 %11 to i64
  br label %15

15:                                               ; preds = %38, %13
  %16 = phi i64 [ 0, %13 ], [ %39, %38 ]
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %16
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  switch i64 %20, label %21 [
    i64 -1, label %38
    i64 0, label %38
  ]

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #11
  br label %34

34:                                               ; preds = %33, %30
  %35 = bitcast %"struct.WTF::KeyValuePair"* %17 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %35, align 8
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %16, i32 1
  %37 = bitcast %"class.blink::Member"* %36 to i64*
  store atomic i64 0, i64* %37 monotonic, align 8
  br label %38

38:                                               ; preds = %34, %15, %15
  %39 = add nuw nsw i64 %16, 1
  %40 = icmp eq i64 %39, %14
  br i1 %40, label %41, label %15

41:                                               ; preds = %38, %9
  %42 = bitcast %"struct.WTF::KeyValuePair"* %7 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %42) #11
  %43 = bitcast %"class.blink::FontFaceCache"* %0 to i64*
  store atomic i64 0, i64* %43 monotonic, align 8
  store i32 0, i32* %10, align 8
  store i32 0, i32* %2, align 4
  br label %44

44:                                               ; preds = %5, %41
  %45 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.WTF::HashMap.32", %"class.WTF::HashMap.32"* %45, i64 0, i32 0, i32 0
  %47 = load %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"** %46, align 8
  %48 = icmp eq %"struct.WTF::KeyValuePair.35"* %47, null
  br i1 %48, label %85, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %81, label %53

53:                                               ; preds = %49
  %54 = zext i32 %51 to i64
  br label %55

55:                                               ; preds = %78, %53
  %56 = phi i64 [ 0, %53 ], [ %79, %78 ]
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %47, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = ptrtoint %"class.WTF::StringImpl"* %59 to i64
  switch i64 %60, label %61 [
    i64 -1, label %78
    i64 0, label %78
  ]

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #11
  br label %74

74:                                               ; preds = %73, %70
  %75 = bitcast %"struct.WTF::KeyValuePair.35"* %57 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %75, align 8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %47, i64 %56, i32 1
  %77 = bitcast %"class.blink::Member.36"* %76 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  br label %78

78:                                               ; preds = %74, %55, %55
  %79 = add nuw nsw i64 %56, 1
  %80 = icmp eq i64 %79, %54
  br i1 %80, label %81, label %55

81:                                               ; preds = %78, %49
  %82 = bitcast %"struct.WTF::KeyValuePair.35"* %47 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %82) #11
  %83 = bitcast %"class.WTF::HashMap.32"* %45 to i64*
  store atomic i64 0, i64* %83 monotonic, align 8
  store i32 0, i32* %50, align 8
  %84 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 0, i32* %84, align 4
  br label %85

85:                                               ; preds = %44, %81
  %86 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 2, i32 0
  %87 = getelementptr inbounds %"class.WTF::HashMap.48", %"class.WTF::HashMap.48"* %86, i64 0, i32 0, i32 0
  %88 = load %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"** %87, align 8
  %89 = icmp eq %"struct.WTF::KeyValuePair.51"* %88, null
  br i1 %89, label %95, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %92 = bitcast %"struct.WTF::KeyValuePair.51"* %88 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %92) #11
  %93 = bitcast %"class.WTF::HashMap.48"* %86 to i64*
  store atomic i64 0, i64* %93 monotonic, align 8
  store i32 0, i32* %91, align 8
  %94 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  store i32 0, i32* %94, align 4
  br label %95

95:                                               ; preds = %85, %90
  %96 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5clearEv(%"class.WTF::LinkedHashSet"* %96)
  %97 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZZN5blink13FontFaceCache16IncrementVersionEvE9g_version, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %98 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 4
  store i32 %97, i32* %98, align 8
  br label %99

99:                                               ; preds = %1, %95
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5clearEv(%"class.WTF::LinkedHashSet"*) local_unnamed_addr #4 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 14
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, 1
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"** %15, align 8
  %17 = icmp eq %"struct.WTF::KeyValuePair.84"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"struct.WTF::KeyValuePair.84"* %16 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %20) #11
  %21 = bitcast %"class.WTF::LinkedHashSet"* %0 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store i32 0, i32* %19, align 8
  %22 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %22, align 4
  br label %23

23:                                               ; preds = %8, %18
  %24 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E14ShrinkCapacityEj(%"class.WTF::Vector.85"* %24, i32 1) #11
  %25 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %24, i32 0) #11
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %25, i64 0, i32 0
  store i32 0, i32* %26, align 8
  %27 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %24, i32 0) #11
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %27, i64 0, i32 1
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1, i32 1
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1, i32 2
  store i32 0, i32* %30, align 4
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #11
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !8

35:                                               ; preds = %23
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #11
  br label %37

37:                                               ; preds = %23, %35
  %38 = phi i8* [ %36, %35 ], [ %33, %23 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 14
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, -1
  store i64 %43, i64* %41, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSSegmentedFontFace"* @_ZN5blink13FontFaceCache3GetERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::FontFaceCache"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::FontSelectionCapabilities", align 8
  %5 = alloca %"struct.blink::FontSelectionCapabilities", align 8
  %6 = alloca %"struct.blink::FontSelectionCapabilities", align 8
  %7 = alloca %"struct.blink::FontSelectionCapabilities", align 8
  %8 = alloca %"class.blink::HeapHashMap.38"*, align 8
  %9 = alloca %"struct.blink::FontSelectionRequest", align 8
  %10 = alloca i8*, align 8
  %11 = alloca %"struct.blink::FontSelectionCapabilities", align 2
  %12 = alloca i16, align 8
  %13 = alloca i16, align 2
  %14 = alloca i16, align 4
  %15 = alloca i16, align 2
  %16 = alloca i16, align 8
  %17 = alloca i16, align 2
  %18 = alloca %"class.blink::FontSelectionAlgorithm", align 8
  %19 = alloca %"struct.blink::FontSelectionCapabilities", align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %483, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %483, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  %29 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %29, %"class.WTF::String"* dereferenceable(8) %28) #11
  %31 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %30, 0
  %32 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 %36
  %38 = icmp eq %"struct.WTF::KeyValuePair"* %31, %37
  br i1 %38, label %483, label %39

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.blink::HeapHashMap.3"*, %"class.blink::HeapHashMap.3"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %41, i64 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %483, label %45

45:                                               ; preds = %39
  %46 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names9kSystemUiE, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %48 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %46, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %47, %49
  br i1 %50, label %483, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.blink::HeapHashMap.38"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  %53 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS3_EENS8_10HashTraitsIS6_EEEEEEPhm(i64 24) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 20, i1 false) #11
  %54 = getelementptr inbounds i8, i8* %53, i64 -4
  %55 = bitcast i8* %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  %58 = bitcast %"class.blink::HeapHashMap.38"** %8 to i8**
  store i8* %53, i8** %58, align 8
  %59 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 1, i32 0, i32 0
  %60 = call { %"struct.WTF::KeyValuePair.35"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISM_SI_SN_EERKNS_12AtomicStringEPSE_EENS_18HashTableAddResultISO_SG_EEOT0_OT1_(%"class.WTF::HashTable.33"* %59, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::HeapHashMap.38"** nonnull dereferenceable(8) %8) #11
  %61 = extractvalue { %"struct.WTF::KeyValuePair.35"*, i8 } %60, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %61, i64 0, i32 1, i32 0, i32 0
  %63 = load %"class.blink::HeapHashMap.38"*, %"class.blink::HeapHashMap.38"** %62, align 8
  %64 = bitcast %"struct.blink::FontSelectionRequest"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %64) #11
  %65 = call i48 @_ZNK5blink15FontDescription23GetFontSelectionRequestEv(%"class.blink::FontDescription"* %1) #11
  %66 = bitcast %"struct.blink::FontSelectionRequest"* %9 to i48*
  store i48 %65, i48* %66, align 8
  %67 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #11
  store i8* null, i8** %10, align 8
  %68 = getelementptr inbounds %"class.blink::HeapHashMap.38", %"class.blink::HeapHashMap.38"* %63, i64 0, i32 0, i32 0
  %69 = call { %"struct.WTF::KeyValuePair.44"*, i8 } @_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_S9_SG_EERKNS1_20FontSelectionRequestEDnEENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.42"* %68, %"struct.blink::FontSelectionRequest"* nonnull dereferenceable(6) %9, i8** nonnull dereferenceable(8) %10) #11
  %70 = extractvalue { %"struct.WTF::KeyValuePair.44"*, i8 } %69, 0
  %71 = extractvalue { %"struct.WTF::KeyValuePair.44"*, i8 } %69, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #11
  %72 = and i8 %71, 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %51
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %70, i64 0, i32 1, i32 0, i32 0
  %76 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %75, align 8
  br label %481

77:                                               ; preds = %51
  %78 = bitcast %"struct.blink::FontSelectionCapabilities"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %78) #11
  %79 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %11, i64 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %11, i64 0, i32 0, i32 1, i32 0
  %81 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %11, i64 0, i32 1, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %11, i64 0, i32 1, i32 1, i32 0
  %83 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %11, i64 0, i32 2, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %11, i64 0, i32 2, i32 1, i32 0
  %85 = bitcast %"struct.blink::FontSelectionCapabilities"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %85, i8 -86, i64 14, i1 false)
  call void @_ZN5blink25FontSelectionCapabilitiesC2Ev(%"struct.blink::FontSelectionCapabilities"* nonnull %11)
  %86 = load i32, i32* %42, align 4
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %41, i64 0, i32 0, i32 0, i32 0
  %89 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %41, i64 0, i32 0, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %89, i64 %92
  br i1 %87, label %155, label %94

94:                                               ; preds = %77
  %95 = icmp eq i32 %91, 0
  br i1 %95, label %155, label %96

96:                                               ; preds = %94
  %97 = bitcast %"struct.blink::FontSelectionCapabilities"* %4 to i8*
  %98 = bitcast %"struct.blink::FontSelectionCapabilities"* %4 to i64*
  %99 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %4, i64 0, i32 2
  %100 = bitcast %"struct.blink::FontSelectionRange"* %99 to i48*
  br label %101

101:                                              ; preds = %148, %96
  %102 = phi %"struct.WTF::KeyValuePair.9"* [ %89, %96 ], [ %149, %148 ]
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %97) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 0, i64 14, i1 false) #11
  call void @_ZN5blink25FontSelectionCapabilitiesC2Ev(%"struct.blink::FontSelectionCapabilities"* nonnull %4) #11
  %103 = load i64, i64* %98, align 8
  %104 = load i48, i48* %100, align 8
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %97) #11
  %105 = trunc i64 %103 to i16
  %106 = lshr i64 %103, 32
  %107 = trunc i64 %106 to i16
  %108 = lshr i64 %103, 48
  %109 = trunc i64 %108 to i16
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %102, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i16, i16* %110, align 2
  %112 = icmp eq i16 %111, %105
  br i1 %112, label %113, label %144

113:                                              ; preds = %101
  %114 = lshr i64 %103, 16
  %115 = trunc i64 %114 to i16
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %102, i64 0, i32 0, i32 0, i32 1, i32 0
  %117 = load i16, i16* %116, align 2
  %118 = icmp eq i16 %117, %115
  br i1 %118, label %119, label %144

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %102, i64 0, i32 0, i32 1, i32 0, i32 0
  %121 = load i16, i16* %120, align 2
  %122 = icmp eq i16 %121, %107
  br i1 %122, label %123, label %144

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %102, i64 0, i32 0, i32 1, i32 1, i32 0
  %125 = load i16, i16* %124, align 2
  %126 = icmp eq i16 %125, %109
  br i1 %126, label %127, label %144

127:                                              ; preds = %123
  %128 = trunc i48 %104 to i16
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %102, i64 0, i32 0, i32 2, i32 0, i32 0
  %130 = load i16, i16* %129, align 2
  %131 = icmp eq i16 %130, %128
  br i1 %131, label %132, label %144

132:                                              ; preds = %127
  %133 = lshr i48 %104, 16
  %134 = trunc i48 %133 to i16
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %102, i64 0, i32 0, i32 2, i32 1, i32 0
  %136 = load i16, i16* %135, align 2
  %137 = icmp eq i16 %136, %134
  br i1 %137, label %138, label %144

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %102, i64 0, i32 0, i32 3
  %140 = load i8, i8* %139, align 2, !range !9
  %141 = lshr i48 %104, 32
  %142 = trunc i48 %141 to i8
  %143 = icmp eq i8 %140, %142
  br i1 %143, label %148, label %144

144:                                              ; preds = %138, %132, %127, %123, %119, %113, %101
  %145 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %102, i64 0, i32 0, i32 3
  %146 = load i8, i8* %145, align 2, !range !9
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %144, %138
  %149 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %102, i64 1
  %150 = icmp eq %"struct.WTF::KeyValuePair.9"* %149, %93
  br i1 %150, label %151, label %101

151:                                              ; preds = %148, %144
  %152 = phi %"struct.WTF::KeyValuePair.9"* [ %93, %148 ], [ %102, %144 ]
  %153 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %88, align 8
  %154 = load i32, i32* %90, align 8
  br label %155

155:                                              ; preds = %151, %77, %94
  %156 = phi i32 [ %91, %77 ], [ 0, %94 ], [ %154, %151 ]
  %157 = phi %"struct.WTF::KeyValuePair.9"* [ %89, %77 ], [ %89, %94 ], [ %153, %151 ]
  %158 = phi %"struct.WTF::KeyValuePair.9"* [ %93, %77 ], [ %89, %94 ], [ %152, %151 ]
  %159 = zext i32 %156 to i64
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %157, i64 %159
  %161 = icmp eq %"struct.WTF::KeyValuePair.9"* %158, %160
  br i1 %161, label %192, label %162

162:                                              ; preds = %155
  %163 = bitcast i16* %12 to i8*
  %164 = bitcast i16* %13 to i8*
  %165 = bitcast i16* %14 to i8*
  %166 = bitcast i16* %15 to i8*
  %167 = bitcast i16* %16 to i8*
  %168 = bitcast i16* %17 to i8*
  %169 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %11, i64 0, i32 0, i32 0
  %170 = bitcast i16* %12 to %"class.blink::FontSelectionValue"*
  %171 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %11, i64 0, i32 0, i32 1
  %172 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %171, i64 0, i32 0
  %173 = bitcast i16* %13 to %"class.blink::FontSelectionValue"*
  %174 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %11, i64 0, i32 1
  %175 = getelementptr inbounds %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange"* %174, i64 0, i32 0, i32 0
  %176 = getelementptr inbounds %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange"* %174, i64 0, i32 0
  %177 = bitcast i16* %14 to %"class.blink::FontSelectionValue"*
  %178 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %11, i64 0, i32 1, i32 1
  %179 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %178, i64 0, i32 0
  %180 = bitcast i16* %15 to %"class.blink::FontSelectionValue"*
  %181 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %11, i64 0, i32 2
  %182 = getelementptr inbounds %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange"* %181, i64 0, i32 0, i32 0
  %183 = getelementptr inbounds %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange"* %181, i64 0, i32 0
  %184 = bitcast i16* %16 to %"class.blink::FontSelectionValue"*
  %185 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %11, i64 0, i32 2, i32 1
  %186 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %185, i64 0, i32 0
  %187 = bitcast i16* %17 to %"class.blink::FontSelectionValue"*
  %188 = bitcast %"struct.blink::FontSelectionCapabilities"* %6 to i8*
  %189 = bitcast %"struct.blink::FontSelectionCapabilities"* %6 to i64*
  %190 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %6, i64 0, i32 2
  %191 = bitcast %"struct.blink::FontSelectionRange"* %190 to i48*
  br label %284

192:                                              ; preds = %397, %155
  %193 = bitcast %"class.blink::FontSelectionAlgorithm"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %193) #11
  %194 = load i48, i48* %66, align 8
  %195 = bitcast %"class.blink::FontSelectionAlgorithm"* %18 to i48*
  store i48 %194, i48* %195, align 8
  %196 = getelementptr inbounds %"class.blink::FontSelectionAlgorithm", %"class.blink::FontSelectionAlgorithm"* %18, i64 0, i32 1
  %197 = bitcast %"struct.blink::FontSelectionCapabilities"* %196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %197, i8* nonnull align 2 %78, i64 14, i1 false) #11
  %198 = load i32, i32* %42, align 4
  %199 = icmp eq i32 %198, 0
  %200 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %88, align 8
  %201 = load i32, i32* %90, align 8
  %202 = zext i32 %201 to i64
  %203 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %200, i64 %202
  br i1 %199, label %265, label %204

204:                                              ; preds = %192
  %205 = icmp eq i32 %201, 0
  br i1 %205, label %265, label %206

206:                                              ; preds = %204
  %207 = bitcast %"struct.blink::FontSelectionCapabilities"* %5 to i8*
  %208 = bitcast %"struct.blink::FontSelectionCapabilities"* %5 to i64*
  %209 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %5, i64 0, i32 2
  %210 = bitcast %"struct.blink::FontSelectionRange"* %209 to i48*
  br label %211

211:                                              ; preds = %258, %206
  %212 = phi %"struct.WTF::KeyValuePair.9"* [ %200, %206 ], [ %259, %258 ]
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %207) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %207, i8 0, i64 14, i1 false) #11
  call void @_ZN5blink25FontSelectionCapabilitiesC2Ev(%"struct.blink::FontSelectionCapabilities"* nonnull %5) #11
  %213 = load i64, i64* %208, align 8
  %214 = load i48, i48* %210, align 8
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %207) #11
  %215 = trunc i64 %213 to i16
  %216 = lshr i64 %213, 32
  %217 = trunc i64 %216 to i16
  %218 = lshr i64 %213, 48
  %219 = trunc i64 %218 to i16
  %220 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %212, i64 0, i32 0, i32 0, i32 0, i32 0
  %221 = load i16, i16* %220, align 2
  %222 = icmp eq i16 %221, %215
  br i1 %222, label %223, label %254

223:                                              ; preds = %211
  %224 = lshr i64 %213, 16
  %225 = trunc i64 %224 to i16
  %226 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %212, i64 0, i32 0, i32 0, i32 1, i32 0
  %227 = load i16, i16* %226, align 2
  %228 = icmp eq i16 %227, %225
  br i1 %228, label %229, label %254

229:                                              ; preds = %223
  %230 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %212, i64 0, i32 0, i32 1, i32 0, i32 0
  %231 = load i16, i16* %230, align 2
  %232 = icmp eq i16 %231, %217
  br i1 %232, label %233, label %254

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %212, i64 0, i32 0, i32 1, i32 1, i32 0
  %235 = load i16, i16* %234, align 2
  %236 = icmp eq i16 %235, %219
  br i1 %236, label %237, label %254

237:                                              ; preds = %233
  %238 = trunc i48 %214 to i16
  %239 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %212, i64 0, i32 0, i32 2, i32 0, i32 0
  %240 = load i16, i16* %239, align 2
  %241 = icmp eq i16 %240, %238
  br i1 %241, label %242, label %254

242:                                              ; preds = %237
  %243 = lshr i48 %214, 16
  %244 = trunc i48 %243 to i16
  %245 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %212, i64 0, i32 0, i32 2, i32 1, i32 0
  %246 = load i16, i16* %245, align 2
  %247 = icmp eq i16 %246, %244
  br i1 %247, label %248, label %254

248:                                              ; preds = %242
  %249 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %212, i64 0, i32 0, i32 3
  %250 = load i8, i8* %249, align 2, !range !9
  %251 = lshr i48 %214, 32
  %252 = trunc i48 %251 to i8
  %253 = icmp eq i8 %250, %252
  br i1 %253, label %258, label %254

254:                                              ; preds = %248, %242, %237, %233, %229, %223, %211
  %255 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %212, i64 0, i32 0, i32 3
  %256 = load i8, i8* %255, align 2, !range !9
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %261, label %258

258:                                              ; preds = %254, %248
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %212, i64 1
  %260 = icmp eq %"struct.WTF::KeyValuePair.9"* %259, %203
  br i1 %260, label %261, label %211

261:                                              ; preds = %258, %254
  %262 = phi %"struct.WTF::KeyValuePair.9"* [ %203, %258 ], [ %212, %254 ]
  %263 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %88, align 8
  %264 = load i32, i32* %90, align 8
  br label %265

265:                                              ; preds = %261, %192, %204
  %266 = phi i32 [ %201, %192 ], [ 0, %204 ], [ %264, %261 ]
  %267 = phi %"struct.WTF::KeyValuePair.9"* [ %200, %192 ], [ %200, %204 ], [ %263, %261 ]
  %268 = phi %"struct.WTF::KeyValuePair.9"* [ %203, %192 ], [ %200, %204 ], [ %262, %261 ]
  %269 = zext i32 %266 to i64
  %270 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %267, i64 %269
  %271 = icmp eq %"struct.WTF::KeyValuePair.9"* %268, %270
  br i1 %271, label %400, label %272

272:                                              ; preds = %265
  %273 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %70, i64 0, i32 1
  %274 = getelementptr inbounds %"class.blink::Member.10", %"class.blink::Member.10"* %273, i64 0, i32 0, i32 0
  %275 = bitcast %"struct.blink::FontSelectionCapabilities"* %19 to i8*
  %276 = bitcast %"struct.blink::FontSelectionCapabilities"* %19 to i64*
  %277 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %19, i64 0, i32 2
  %278 = bitcast %"struct.blink::FontSelectionRange"* %277 to i48*
  %279 = bitcast %"class.blink::Member.10"* %273 to i64*
  %280 = bitcast %"struct.blink::FontSelectionCapabilities"* %7 to i8*
  %281 = bitcast %"struct.blink::FontSelectionCapabilities"* %7 to i64*
  %282 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %7, i64 0, i32 2
  %283 = bitcast %"struct.blink::FontSelectionRange"* %282 to i48*
  br label %403

284:                                              ; preds = %162, %397
  %285 = phi %"struct.WTF::KeyValuePair.9"* [ %158, %162 ], [ %398, %397 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %163)
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %164)
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %165)
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %166)
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %167)
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %168)
  %286 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %285, i64 0, i32 1, i32 0, i32 0
  %287 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %286, align 8
  %288 = bitcast %"class.blink::CSSSegmentedFontFace"* %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %287, i64 0, i32 0, i32 2
  %291 = bitcast %"struct.blink::FontSelectionRange"* %290 to i48*
  %292 = load i48, i48* %291, align 8
  %293 = trunc i64 %289 to i16
  store i16 %293, i16* %12, align 8
  %294 = lshr i64 %289, 16
  %295 = trunc i64 %294 to i16
  store i16 %295, i16* %13, align 2
  %296 = lshr i64 %289, 32
  %297 = trunc i64 %296 to i16
  store i16 %297, i16* %14, align 4
  %298 = lshr i64 %289, 48
  %299 = trunc i64 %298 to i16
  store i16 %299, i16* %15, align 2
  %300 = trunc i48 %292 to i16
  store i16 %300, i16* %16, align 8
  %301 = lshr i48 %292, 16
  %302 = trunc i48 %301 to i16
  store i16 %302, i16* %17, align 2
  %303 = load i16, i16* %80, align 2
  %304 = load i16, i16* %79, align 2
  %305 = icmp sgt i16 %304, %303
  br i1 %305, label %306, label %307

306:                                              ; preds = %284
  store i16 %293, i16* %79, align 2
  store i16 %295, i16* %80, align 2
  br label %316

307:                                              ; preds = %284
  %308 = icmp sgt i16 %304, %293
  %309 = select i1 %308, %"class.blink::FontSelectionValue"* %170, %"class.blink::FontSelectionValue"* %169
  %310 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %309, i64 0, i32 0
  %311 = load i16, i16* %310, align 2
  store i16 %311, i16* %79, align 2
  %312 = icmp slt i16 %303, %295
  %313 = select i1 %312, %"class.blink::FontSelectionValue"* %173, %"class.blink::FontSelectionValue"* %171
  %314 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %313, i64 0, i32 0
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %172, align 2
  br label %316

316:                                              ; preds = %307, %306
  %317 = load i16, i16* %82, align 2
  %318 = load i16, i16* %175, align 2
  %319 = icmp sgt i16 %318, %317
  br i1 %319, label %320, label %321

320:                                              ; preds = %316
  store i16 %297, i16* %81, align 2
  store i16 %299, i16* %82, align 2
  br label %330

321:                                              ; preds = %316
  %322 = icmp sgt i16 %318, %297
  %323 = select i1 %322, %"class.blink::FontSelectionValue"* %177, %"class.blink::FontSelectionValue"* %176
  %324 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %323, i64 0, i32 0
  %325 = load i16, i16* %324, align 2
  store i16 %325, i16* %175, align 2
  %326 = icmp slt i16 %317, %299
  %327 = select i1 %326, %"class.blink::FontSelectionValue"* %180, %"class.blink::FontSelectionValue"* %178
  %328 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %327, i64 0, i32 0
  %329 = load i16, i16* %328, align 2
  store i16 %329, i16* %179, align 2
  br label %330

330:                                              ; preds = %321, %320
  %331 = load i16, i16* %84, align 2
  %332 = load i16, i16* %182, align 2
  %333 = icmp sgt i16 %332, %331
  br i1 %333, label %334, label %335

334:                                              ; preds = %330
  store i16 %300, i16* %83, align 2
  store i16 %302, i16* %84, align 2
  br label %344

335:                                              ; preds = %330
  %336 = icmp sgt i16 %332, %300
  %337 = select i1 %336, %"class.blink::FontSelectionValue"* %184, %"class.blink::FontSelectionValue"* %183
  %338 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %337, i64 0, i32 0
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %182, align 2
  %340 = icmp slt i16 %331, %302
  %341 = select i1 %340, %"class.blink::FontSelectionValue"* %187, %"class.blink::FontSelectionValue"* %185
  %342 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %341, i64 0, i32 0
  %343 = load i16, i16* %342, align 2
  store i16 %343, i16* %186, align 2
  br label %344

344:                                              ; preds = %334, %335
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %163)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %164)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %165)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %166)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %167)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %168)
  %345 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %285, i64 1
  %346 = icmp eq %"struct.WTF::KeyValuePair.9"* %345, %93
  br i1 %346, label %397, label %347

347:                                              ; preds = %344, %394
  %348 = phi %"struct.WTF::KeyValuePair.9"* [ %395, %394 ], [ %345, %344 ]
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %188) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %188, i8 0, i64 14, i1 false) #11
  call void @_ZN5blink25FontSelectionCapabilitiesC2Ev(%"struct.blink::FontSelectionCapabilities"* nonnull %6) #11
  %349 = load i64, i64* %189, align 8
  %350 = load i48, i48* %191, align 8
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %188) #11
  %351 = trunc i64 %349 to i16
  %352 = lshr i64 %349, 32
  %353 = trunc i64 %352 to i16
  %354 = lshr i64 %349, 48
  %355 = trunc i64 %354 to i16
  %356 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %348, i64 0, i32 0, i32 0, i32 0, i32 0
  %357 = load i16, i16* %356, align 2
  %358 = icmp eq i16 %357, %351
  br i1 %358, label %359, label %390

359:                                              ; preds = %347
  %360 = lshr i64 %349, 16
  %361 = trunc i64 %360 to i16
  %362 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %348, i64 0, i32 0, i32 0, i32 1, i32 0
  %363 = load i16, i16* %362, align 2
  %364 = icmp eq i16 %363, %361
  br i1 %364, label %365, label %390

365:                                              ; preds = %359
  %366 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %348, i64 0, i32 0, i32 1, i32 0, i32 0
  %367 = load i16, i16* %366, align 2
  %368 = icmp eq i16 %367, %353
  br i1 %368, label %369, label %390

369:                                              ; preds = %365
  %370 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %348, i64 0, i32 0, i32 1, i32 1, i32 0
  %371 = load i16, i16* %370, align 2
  %372 = icmp eq i16 %371, %355
  br i1 %372, label %373, label %390

373:                                              ; preds = %369
  %374 = trunc i48 %350 to i16
  %375 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %348, i64 0, i32 0, i32 2, i32 0, i32 0
  %376 = load i16, i16* %375, align 2
  %377 = icmp eq i16 %376, %374
  br i1 %377, label %378, label %390

378:                                              ; preds = %373
  %379 = lshr i48 %350, 16
  %380 = trunc i48 %379 to i16
  %381 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %348, i64 0, i32 0, i32 2, i32 1, i32 0
  %382 = load i16, i16* %381, align 2
  %383 = icmp eq i16 %382, %380
  br i1 %383, label %384, label %390

384:                                              ; preds = %378
  %385 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %348, i64 0, i32 0, i32 3
  %386 = load i8, i8* %385, align 2, !range !9
  %387 = lshr i48 %350, 32
  %388 = trunc i48 %387 to i8
  %389 = icmp eq i8 %386, %388
  br i1 %389, label %394, label %390

390:                                              ; preds = %384, %378, %373, %369, %365, %359, %347
  %391 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %348, i64 0, i32 0, i32 3
  %392 = load i8, i8* %391, align 2, !range !9
  %393 = icmp eq i8 %392, 0
  br i1 %393, label %397, label %394

394:                                              ; preds = %390, %384
  %395 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %348, i64 1
  %396 = icmp eq %"struct.WTF::KeyValuePair.9"* %395, %93
  br i1 %396, label %397, label %347

397:                                              ; preds = %390, %394, %344
  %398 = phi %"struct.WTF::KeyValuePair.9"* [ %93, %344 ], [ %348, %390 ], [ %93, %394 ]
  %399 = icmp eq %"struct.WTF::KeyValuePair.9"* %398, %160
  br i1 %399, label %192, label %284

400:                                              ; preds = %478, %265
  %401 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %70, i64 0, i32 1, i32 0, i32 0
  %402 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %401, align 8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %193) #11
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %78) #11
  br label %481

403:                                              ; preds = %272, %478
  %404 = phi %"struct.WTF::KeyValuePair.9"* [ %268, %272 ], [ %479, %478 ]
  %405 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %404, i64 0, i32 1, i32 0, i32 0
  %406 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %405, align 8
  %407 = load %"class.blink::CSSSegmentedFontFace"*, %"class.blink::CSSSegmentedFontFace"** %274, align 8
  %408 = icmp eq %"class.blink::CSSSegmentedFontFace"* %407, null
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %275) #11
  br i1 %408, label %417, label %409

409:                                              ; preds = %403
  %410 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %404, i64 0, i32 0
  %411 = bitcast %"class.blink::CSSSegmentedFontFace"* %407 to i64*
  %412 = load i64, i64* %411, align 8
  %413 = getelementptr inbounds %"class.blink::CSSSegmentedFontFace", %"class.blink::CSSSegmentedFontFace"* %407, i64 0, i32 0, i32 2
  %414 = bitcast %"struct.blink::FontSelectionRange"* %413 to i48*
  %415 = load i48, i48* %414, align 8
  store i64 %412, i64* %276, align 8
  store i48 %415, i48* %278, align 8
  %416 = call zeroext i1 @_ZN5blink22FontSelectionAlgorithm23IsBetterMatchForRequestERKNS_25FontSelectionCapabilitiesES3_(%"class.blink::FontSelectionAlgorithm"* nonnull %18, %"struct.blink::FontSelectionCapabilities"* dereferenceable(14) %410, %"struct.blink::FontSelectionCapabilities"* nonnull dereferenceable(14) %19) #11
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %275) #11
  br i1 %416, label %418, label %425

417:                                              ; preds = %403
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %275) #11
  br label %418

418:                                              ; preds = %417, %409
  %419 = ptrtoint %"class.blink::CSSSegmentedFontFace"* %406 to i64
  store atomic i64 %419, i64* %279 monotonic, align 8
  %420 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %425, label %422

422:                                              ; preds = %418
  %423 = bitcast %"class.blink::CSSSegmentedFontFace"* %406 to i8*
  %424 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %423) #11
  br label %425

425:                                              ; preds = %422, %418, %409
  %426 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %404, i64 1
  %427 = icmp eq %"struct.WTF::KeyValuePair.9"* %426, %203
  br i1 %427, label %478, label %428

428:                                              ; preds = %425, %475
  %429 = phi %"struct.WTF::KeyValuePair.9"* [ %476, %475 ], [ %426, %425 ]
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %280) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %280, i8 0, i64 14, i1 false) #11
  call void @_ZN5blink25FontSelectionCapabilitiesC2Ev(%"struct.blink::FontSelectionCapabilities"* nonnull %7) #11
  %430 = load i64, i64* %281, align 8
  %431 = load i48, i48* %283, align 8
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %280) #11
  %432 = trunc i64 %430 to i16
  %433 = lshr i64 %430, 32
  %434 = trunc i64 %433 to i16
  %435 = lshr i64 %430, 48
  %436 = trunc i64 %435 to i16
  %437 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %429, i64 0, i32 0, i32 0, i32 0, i32 0
  %438 = load i16, i16* %437, align 2
  %439 = icmp eq i16 %438, %432
  br i1 %439, label %440, label %471

440:                                              ; preds = %428
  %441 = lshr i64 %430, 16
  %442 = trunc i64 %441 to i16
  %443 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %429, i64 0, i32 0, i32 0, i32 1, i32 0
  %444 = load i16, i16* %443, align 2
  %445 = icmp eq i16 %444, %442
  br i1 %445, label %446, label %471

446:                                              ; preds = %440
  %447 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %429, i64 0, i32 0, i32 1, i32 0, i32 0
  %448 = load i16, i16* %447, align 2
  %449 = icmp eq i16 %448, %434
  br i1 %449, label %450, label %471

450:                                              ; preds = %446
  %451 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %429, i64 0, i32 0, i32 1, i32 1, i32 0
  %452 = load i16, i16* %451, align 2
  %453 = icmp eq i16 %452, %436
  br i1 %453, label %454, label %471

454:                                              ; preds = %450
  %455 = trunc i48 %431 to i16
  %456 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %429, i64 0, i32 0, i32 2, i32 0, i32 0
  %457 = load i16, i16* %456, align 2
  %458 = icmp eq i16 %457, %455
  br i1 %458, label %459, label %471

459:                                              ; preds = %454
  %460 = lshr i48 %431, 16
  %461 = trunc i48 %460 to i16
  %462 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %429, i64 0, i32 0, i32 2, i32 1, i32 0
  %463 = load i16, i16* %462, align 2
  %464 = icmp eq i16 %463, %461
  br i1 %464, label %465, label %471

465:                                              ; preds = %459
  %466 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %429, i64 0, i32 0, i32 3
  %467 = load i8, i8* %466, align 2, !range !9
  %468 = lshr i48 %431, 32
  %469 = trunc i48 %468 to i8
  %470 = icmp eq i8 %467, %469
  br i1 %470, label %475, label %471

471:                                              ; preds = %465, %459, %454, %450, %446, %440, %428
  %472 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %429, i64 0, i32 0, i32 3
  %473 = load i8, i8* %472, align 2, !range !9
  %474 = icmp eq i8 %473, 0
  br i1 %474, label %478, label %475

475:                                              ; preds = %471, %465
  %476 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %429, i64 1
  %477 = icmp eq %"struct.WTF::KeyValuePair.9"* %476, %203
  br i1 %477, label %478, label %428

478:                                              ; preds = %471, %475, %425
  %479 = phi %"struct.WTF::KeyValuePair.9"* [ %203, %425 ], [ %429, %471 ], [ %203, %475 ]
  %480 = icmp eq %"struct.WTF::KeyValuePair.9"* %479, %270
  br i1 %480, label %400, label %403

481:                                              ; preds = %400, %74
  %482 = phi %"class.blink::CSSSegmentedFontFace"* [ %402, %400 ], [ %76, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %64) #11
  br label %483

483:                                              ; preds = %3, %481, %39, %45, %27, %23
  %484 = phi %"class.blink::CSSSegmentedFontFace"* [ null, %23 ], [ %482, %481 ], [ null, %39 ], [ null, %45 ], [ null, %27 ], [ null, %3 ]
  ret %"class.blink::CSSSegmentedFontFace"* %484
}

declare i48 @_ZNK5blink15FontDescription23GetFontSelectionRequestEv(%"class.blink::FontDescription"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25FontSelectionCapabilitiesC2Ev(%"struct.blink::FontSelectionCapabilities"*) unnamed_addr #0 comdat align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !10

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %16, !prof !10

12:                                               ; preds = %8
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  br label %16

16:                                               ; preds = %8, %12, %15
  %17 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  %18 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 0, i32 0, i32 0
  store i16 %9, i16* %18, align 2
  %19 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 0, i32 1, i32 0
  store i16 %17, i16* %19, align 2
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %26, !prof !10

22:                                               ; preds = %16
  %23 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  br label %26

26:                                               ; preds = %16, %22, %25
  %27 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  %28 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i8*) acquire, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %34, !prof !10

30:                                               ; preds = %26
  %31 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  br label %34

34:                                               ; preds = %26, %30, %33
  %35 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  %36 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 1, i32 0, i32 0
  store i16 %27, i16* %36, align 2
  %37 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 1, i32 1, i32 0
  store i16 %35, i16* %37, align 2
  %38 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i8*) acquire, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %44, !prof !10

40:                                               ; preds = %34
  %41 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  br label %44

44:                                               ; preds = %34, %40, %43
  %45 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  %46 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i8*) acquire, align 8
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %52, !prof !10

48:                                               ; preds = %44
  %49 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %48
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  br label %52

52:                                               ; preds = %44, %48, %51
  %53 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  %54 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 2, i32 0, i32 0
  store i16 %45, i16* %54, align 2
  %55 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 2, i32 1, i32 0
  store i16 %53, i16* %55, align 2
  %56 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 3
  store i8 0, i8* %56, align 2
  ret void
}

declare zeroext i1 @_ZN5blink22FontSelectionAlgorithm23IsBetterMatchForRequestERKNS_25FontSelectionCapabilitiesES3_(%"class.blink::FontSelectionAlgorithm"*, %"struct.blink::FontSelectionCapabilities"* dereferenceable(14), %"struct.blink::FontSelectionCapabilities"* dereferenceable(14)) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN5blink13FontFaceCache30GetNumSegmentedFacesForTestingEv(%"class.blink::FontFaceCache"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  %5 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %9
  br i1 %4, label %23, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %8, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %11, %17
  %14 = phi %"struct.WTF::KeyValuePair"* [ %18, %17 ], [ %6, %11 ]
  %15 = bitcast %"struct.WTF::KeyValuePair"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  switch i64 %16, label %20 [
    i64 -1, label %17
    i64 0, label %17
  ]

17:                                               ; preds = %13, %13
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 1
  %19 = icmp eq %"struct.WTF::KeyValuePair"* %18, %10
  br i1 %19, label %23, label %13

20:                                               ; preds = %13, %11
  %21 = phi %"struct.WTF::KeyValuePair"* [ %6, %11 ], [ %14, %13 ]
  %22 = icmp eq %"struct.WTF::KeyValuePair"* %21, %10
  br i1 %22, label %23, label %25

23:                                               ; preds = %17, %25, %43, %40, %1, %20
  %24 = phi i64 [ 0, %20 ], [ 0, %1 ], [ %33, %40 ], [ %33, %43 ], [ %33, %25 ], [ 0, %17 ]
  ret i64 %24

25:                                               ; preds = %20, %43
  %26 = phi i64 [ %33, %43 ], [ 0, %20 ]
  %27 = phi %"struct.WTF::KeyValuePair"* [ %37, %43 ], [ %21, %20 ]
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.blink::HeapHashMap.3"*, %"class.blink::HeapHashMap.3"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %29, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = add i64 %26, %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 1
  %35 = icmp eq %"struct.WTF::KeyValuePair"* %34, %10
  br i1 %35, label %23, label %36

36:                                               ; preds = %25, %40
  %37 = phi %"struct.WTF::KeyValuePair"* [ %41, %40 ], [ %34, %25 ]
  %38 = bitcast %"struct.WTF::KeyValuePair"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  switch i64 %39, label %43 [
    i64 -1, label %40
    i64 0, label %40
  ]

40:                                               ; preds = %36, %36
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 1
  %42 = icmp eq %"struct.WTF::KeyValuePair"* %41, %10
  br i1 %42, label %23, label %36

43:                                               ; preds = %36
  %44 = icmp eq %"struct.WTF::KeyValuePair"* %37, %10
  br i1 %44, label %23, label %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13FontFaceCache5TraceEPNS_7VisitorE(%"class.blink::FontFaceCache"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::FontFaceCache"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast %"class.blink::FontFaceCache"* %0 to i8**
  %6 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %1, i8** %5) #11
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %17

17:                                               ; preds = %2, %11
  %18 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 1
  %19 = bitcast %"class.blink::HeapHashMap.29"* %18 to i64*
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = bitcast %"class.blink::HeapHashMap.29"* %18 to i8**
  %22 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %22, i64 11
  %24 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8** %21) #11
  %25 = icmp eq i64 %20, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %17
  %27 = inttoptr i64 %20 to i8*
  %28 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %29, i64 5
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, align 8
  tail call void %31(%"class.blink::Visitor"* %1, i8* nonnull %27, i8* nonnull %27, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %32

32:                                               ; preds = %17, %26
  %33 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 2
  %34 = bitcast %"class.blink::HeapHashMap.45"* %33 to i64*
  %35 = load atomic i64, i64* %34 monotonic, align 8
  %36 = bitcast %"class.blink::HeapHashMap.45"* %33 to i8**
  %37 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %37, i64 11
  %39 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8** %36) #11
  %40 = icmp eq i64 %35, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %32
  %42 = inttoptr i64 %35 to i8*
  %43 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, i64 5
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %45, align 8
  tail call void %46(%"class.blink::Visitor"* %1, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %47

47:                                               ; preds = %32, %41
  %48 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 3
  %49 = bitcast %"class.blink::HeapLinkedHashSet"* %48 to i64*
  %50 = load atomic i64, i64* %49 monotonic, align 8
  %51 = bitcast %"class.blink::HeapLinkedHashSet"* %48 to i8**
  %52 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %53 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %52, i64 11
  %54 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %53, align 8
  tail call void %54(%"class.blink::Visitor"* %1, i8** %51) #11
  %55 = icmp eq i64 %50, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %47
  %57 = inttoptr i64 %50 to i8*
  %58 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %59 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, i64 5
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, align 8
  tail call void %61(%"class.blink::Visitor"* %1, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %62

62:                                               ; preds = %56, %47
  %63 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %0, i64 0, i32 3, i32 0, i32 1
  %64 = bitcast %"class.WTF::VectorBackedLinkedList"* %63 to i64*
  %65 = load atomic i64, i64* %64 monotonic, align 8
  %66 = icmp eq i64 %65, 0
  %67 = bitcast %"class.WTF::VectorBackedLinkedList"* %63 to i8**
  %68 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %69 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %68, i64 11
  %70 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %69, align 8
  tail call void %70(%"class.blink::Visitor"* %1, i8** %67) #11
  br i1 %66, label %77, label %71

71:                                               ; preds = %62
  %72 = inttoptr i64 %65 to i8*
  %73 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %74, i64 5
  %76 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %75, align 8
  tail call void %76(%"class.blink::Visitor"* %1, i8* nonnull %72, i8* nonnull %72, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %77

77:                                               ; preds = %62, %71
  ret void
}

declare zeroext i1 @_ZNK5blink12FontFaceList7IsEmptyEv(%"class.blink::FontFaceList"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF15ConstructTraitsINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEENS_12VectorTraitsIS7_EES6_E25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8*, %"class.WTF::VectorBackedLinkedListNode"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast i8* %0 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %1, i64 0, i32 2
  %8 = bitcast %"class.blink::Member.60"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast i8* %6 to i64*
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = bitcast i8* %0 to %"class.WTF::VectorBackedLinkedListNode"*
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %2
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #11
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !8

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #11
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 9
  %26 = load i8, i8* %25, align 1, !range !9
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 13
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %33 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %32, align 8
  %34 = load atomic i64, i64* %10 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %33, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to i8*
  %39 = bitcast %"class.blink::MarkingVisitor"* %33 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %37, i8* nonnull %38, i8* %38, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv) #11
  %43 = load i64, i64* %29, align 8
  br label %44

44:                                               ; preds = %36, %28
  %45 = phi i64 [ %31, %28 ], [ %43, %36 ]
  %46 = add i64 %45, -1
  store i64 %46, i64* %29, align 8
  br label %47

47:                                               ; preds = %2, %21, %44
  ret %"class.WTF::VectorBackedLinkedListNode"* %11
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.85"*, %"class.WTF::VectorBackedLinkedListNode"* dereferenceable(16)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %8 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.85"* %0, i32 %22) #11
  %23 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %26 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 4
  %29 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.85"* %0, i32 %37) #11
  %38 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %39 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %41, i64 %44
  %46 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %45 to i8*
  %47 = tail call %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF15ConstructTraitsINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEENS_12VectorTraitsIS7_EES6_E25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8* %46, %"class.WTF::VectorBackedLinkedListNode"* dereferenceable(16) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FontFace"*
  %4 = bitcast i8* %1 to void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)**, void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FontFace"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.85"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %8, align 8
  %10 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEES0_EEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 4
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.85"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %8, align 8
  %26 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 4
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !8

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !9
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj(%"class.WTF::Vector.85"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj(%"class.WTF::Vector.85"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.85"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.85"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEES0_EEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 4
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.WTF::VectorBackedLinkedListNode"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !11

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.85"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 4
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.85"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.85"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 8388608
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 8388608) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.3, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.5, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([267 x i8], [267 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS_26VectorBackedLinkedListNodeINS1_6MemberINS1_8FontFaceEEENS1_13HeapAllocatorEEENS_12VectorTraitsIS8_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !8

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.WTF::VectorBackedLinkedListNode"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !8

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %3, i64 %28, i32 2
  %30 = bitcast %"class.blink::Member.60"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.51"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERPS4_RPS7_EENS_18HashTableAddResultISJ_S9_EEOT0_OT1_(%"class.WTF::HashTable.49"*, %"class.blink::StyleRuleFontFace"** dereferenceable(8), %"class.blink::FontFace"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.51"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.51"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.49"* %0, %"struct.WTF::KeyValuePair.51"* null)
  %9 = load %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.51"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::StyleRuleFontFace"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::StyleRuleFontFace"*, %"class.blink::StyleRuleFontFace"** %40, align 8
  %42 = icmp eq %"class.blink::StyleRuleFontFace"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::StyleRuleFontFace"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::StyleRuleFontFace"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.51"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.51"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::StyleRuleFontFace"* %59, %43
  br i1 %64, label %119, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::StyleRuleFontFace"* %59, inttoptr (i64 -1 to %"class.blink::StyleRuleFontFace"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.51"* %60, %"struct.WTF::KeyValuePair.51"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::StyleRuleFontFace"*, %"class.blink::StyleRuleFontFace"** %73, align 8
  %75 = icmp eq %"class.blink::StyleRuleFontFace"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.51"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.51"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #11
  %80 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::StyleRuleFontFace"*, %"class.blink::StyleRuleFontFace"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::StyleRuleFontFace"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.51"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::StyleRuleFontFace"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.51"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %88, i64 0, i32 0, i32 0
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #11
  br label %97

97:                                               ; preds = %94, %87
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %89, i64 0, i32 1
  %99 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %2, align 8
  %100 = ptrtoint %"class.blink::FontFace"* %99 to i64
  %101 = bitcast %"class.blink::Member.60"* %98 to i64*
  store atomic i64 %100, i64* %101 monotonic, align 8
  %102 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %97
  %105 = bitcast %"class.blink::FontFace"* %99 to i8*
  %106 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #11
  br label %107

107:                                              ; preds = %97, %104
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberIKNS_17StyleRuleFontFaceEEENS4_INS_8FontFaceEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSC_IS9_EEEEEEvPT_(%"struct.WTF::KeyValuePair.51"* %89) #11
  %108 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %108, align 4
  %111 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, %110
  %114 = shl i32 %113, 1
  %115 = load i32, i32* %12, align 8
  %116 = icmp ult i32 %114, %115
  br i1 %116, label %119, label %117

117:                                              ; preds = %107
  %118 = tail call %"struct.WTF::KeyValuePair.51"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.49"* %0, %"struct.WTF::KeyValuePair.51"* %89)
  br label %119

119:                                              ; preds = %58, %107, %117
  %120 = phi i8 [ 1, %107 ], [ 1, %117 ], [ 0, %58 ]
  %121 = phi %"struct.WTF::KeyValuePair.51"* [ %89, %107 ], [ %118, %117 ], [ %60, %58 ]
  %122 = insertvalue { %"struct.WTF::KeyValuePair.51"*, i8 } undef, %"struct.WTF::KeyValuePair.51"* %121, 0
  %123 = insertvalue { %"struct.WTF::KeyValuePair.51"*, i8 } %122, i8 %120, 1
  ret { %"struct.WTF::KeyValuePair.51"*, i8 } %123
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.51"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.49"*, %"struct.WTF::KeyValuePair.51"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.51"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS9_Rb(%"class.WTF::HashTable.49"* %0, i32 %35, %"struct.WTF::KeyValuePair.51"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !9
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.51"*
  %44 = call %"struct.WTF::KeyValuePair.51"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.49"* %0, %"struct.WTF::KeyValuePair.51"* %43, i32 %40, %"struct.WTF::KeyValuePair.51"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.51"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.51"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.51"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS9_Rb(%"class.WTF::HashTable.49"*, i32, %"struct.WTF::KeyValuePair.51"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !8

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !9
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.51"* %32, null
  br i1 %33, label %80, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.51"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %80

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.51"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %77, %39
  %48 = phi %"struct.WTF::KeyValuePair.51"* [ null, %39 ], [ %65, %77 ]
  %49 = bitcast %"class.WTF::HashTable.49"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #11
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.51"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.51"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.49"* %0, %"struct.WTF::KeyValuePair.51"* %42, i32 %1, %"struct.WTF::KeyValuePair.51"* %48)
  br label %80

58:                                               ; preds = %39, %77
  %59 = phi i64 [ %78, %77 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.51"* [ %65, %77 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.51"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.51"* %64, %"struct.WTF::KeyValuePair.51"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.51"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.51"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %77

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.51"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %61, i64 %59, i32 1
  %74 = bitcast %"class.blink::Member.60"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.60"* %72 to i64*
  store i64 %75, i64* %76, align 8
  br label %77

77:                                               ; preds = %68, %70
  %78 = add nuw nsw i64 %59, 1
  %79 = icmp eq i64 %78, %43
  br i1 %79, label %47, label %58

80:                                               ; preds = %34, %30, %55
  %81 = phi %"struct.WTF::KeyValuePair.51"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.51"* %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.51"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.49"*, %"struct.WTF::KeyValuePair.51"*, i32, %"struct.WTF::KeyValuePair.51"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.49", align 8
  %6 = bitcast %"class.WTF::HashTable.49"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.49"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.51"* %1, %"struct.WTF::KeyValuePair.51"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.51"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.51"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"** %19, align 8
  br label %57

21:                                               ; preds = %82
  %22 = bitcast %"class.WTF::HashTable.49"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %83, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.51"* [ null, %15 ], [ %85, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.49"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #11
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.49"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.49"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #11
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #11
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.51"* %29

57:                                               ; preds = %18, %82
  %58 = phi i32 [ %13, %18 ], [ %83, %82 ]
  %59 = phi %"struct.WTF::KeyValuePair.51"* [ %20, %18 ], [ %84, %82 ]
  %60 = phi %"struct.WTF::KeyValuePair.51"* [ null, %18 ], [ %85, %82 ]
  %61 = phi i32 [ 0, %18 ], [ %86, %82 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.51"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %82
    i64 0, label %82
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.51"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable.49"* nonnull %5, %"class.blink::Member.52"* dereferenceable(8) %67) #11
  %69 = extractvalue { %"struct.WTF::KeyValuePair.51"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.51"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %59, i64 %62, i32 1
  %74 = bitcast %"class.blink::Member.60"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.60"* %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"** %19, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %77, i64 %62
  %79 = icmp eq %"struct.WTF::KeyValuePair.51"* %78, %3
  %80 = select i1 %79, %"struct.WTF::KeyValuePair.51"* %69, %"struct.WTF::KeyValuePair.51"* %60
  %81 = load i32, i32* %12, align 8
  br label %82

82:                                               ; preds = %57, %57, %66
  %83 = phi i32 [ %58, %57 ], [ %81, %66 ], [ %58, %57 ]
  %84 = phi %"struct.WTF::KeyValuePair.51"* [ %59, %57 ], [ %77, %66 ], [ %59, %57 ]
  %85 = phi %"struct.WTF::KeyValuePair.51"* [ %60, %57 ], [ %80, %66 ], [ %60, %57 ]
  %86 = add i32 %61, 1
  %87 = icmp eq i32 %86, %83
  br i1 %87, label %21, label %57
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS1_12KeyValuePairIS6_NS3_INS_8FontFaceEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS5_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS1_12KeyValuePairIS6_NS3_INS_8FontFaceEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS5_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([546 x i8], [546 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS7_NS4_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberIKNS3_17StyleRuleFontFaceEEENS_12KeyValuePairIS7_NS4_INS3_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberIKNS3_17StyleRuleFontFaceEEENS_12KeyValuePairIS7_NS4_INS3_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.51"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !8

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %75, %20
  ret void

33:                                               ; preds = %75, %30
  %34 = phi i64 [ 0, %30 ], [ %76, %75 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.51"* %35 to i64*
  br i1 %28, label %37, label %54

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %75
    i64 0, label %75
  ]

39:                                               ; preds = %37
  %40 = inttoptr i64 %38 to %"class.blink::StyleRuleFontFace"*
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %3, i64 %34, i32 1
  %42 = bitcast %"class.blink::Member.60"* %41 to i64*
  %43 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %40, i64 0, i32 0, i32 0
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %45 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, i64 5
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %45, align 8
  tail call void %46(%"class.blink::Visitor"* %0, i8* %43, i8* %43, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17StyleRuleFontFaceEE5TraceEPNS_7VisitorEPKv) #11
  %47 = load atomic i64, i64* %42 monotonic, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %75, label %49

49:                                               ; preds = %39
  %50 = inttoptr i64 %47 to i8*
  %51 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %52 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, i64 5
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %52, align 8
  tail call void %53(%"class.blink::Visitor"* %0, i8* nonnull %50, i8* nonnull %50, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv) #11
  br label %75

54:                                               ; preds = %33
  %55 = load i64, i64* %36, align 8
  switch i64 %55, label %56 [
    i64 -1, label %75
    i64 0, label %75
  ]

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %3, i64 %34, i32 1
  %58 = load atomic i64, i64* %36 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %56
  %61 = inttoptr i64 %58 to %"class.blink::StyleRuleFontFace"*
  %62 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %61, i64 0, i32 0, i32 0
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %64 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, i64 5
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %64, align 8
  tail call void %65(%"class.blink::Visitor"* %0, i8* %62, i8* %62, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17StyleRuleFontFaceEE5TraceEPNS_7VisitorEPKv) #11
  br label %66

66:                                               ; preds = %60, %56
  %67 = bitcast %"class.blink::Member.60"* %57 to i64*
  %68 = load atomic i64, i64* %67 monotonic, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = inttoptr i64 %68 to i8*
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, i64 5
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, align 8
  tail call void %74(%"class.blink::Visitor"* %0, i8* nonnull %71, i8* nonnull %71, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv) #11
  br label %75

75:                                               ; preds = %54, %54, %37, %37, %70, %66, %39, %49
  %76 = add nuw nsw i64 %34, 1
  %77 = icmp eq i64 %76, %23
  br i1 %77, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17StyleRuleFontFaceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.51"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable.49"*, %"class.blink::Member.52"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member.52"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.51"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::StyleRuleFontFace"*, %"class.blink::StyleRuleFontFace"** %34, align 8
  %36 = icmp eq %"class.blink::StyleRuleFontFace"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::StyleRuleFontFace"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.51"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.51"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.51"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.51"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.51"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::StyleRuleFontFace"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::StyleRuleFontFace"*, %"class.blink::StyleRuleFontFace"** %67, align 8
  %69 = icmp eq %"class.blink::StyleRuleFontFace"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::StyleRuleFontFace"* %63, inttoptr (i64 -1 to %"class.blink::StyleRuleFontFace"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.51"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::StyleRuleFontFace"*, %"class.blink::StyleRuleFontFace"** %79, align 8
  %81 = icmp eq %"class.blink::StyleRuleFontFace"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.51"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.51"*, i8 } undef, %"struct.WTF::KeyValuePair.51"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.51"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.51"*, i8 } %87
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberIKNS_17StyleRuleFontFaceEEENS4_INS_8FontFaceEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSC_IS9_EEEEEEvPT_(%"struct.WTF::KeyValuePair.51"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %49, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !8

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !9
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %0, i64 0, i32 1
  %26 = bitcast %"struct.WTF::KeyValuePair.51"* %0 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %18
  %30 = inttoptr i64 %27 to %"class.blink::StyleRuleFontFace"*
  %31 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %30, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %24, i8* %31, i8* %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17StyleRuleFontFaceEE5TraceEPNS_7VisitorEPKv) #11
  br label %36

36:                                               ; preds = %18, %29
  %37 = bitcast %"class.blink::Member.60"* %25 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %24, i8* nonnull %41, i8* %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv) #11
  br label %46

46:                                               ; preds = %36, %40
  %47 = load i64, i64* %19, align 8
  %48 = add i64 %47, -1
  store i64 %48, i64* %19, align 8
  br label %49

49:                                               ; preds = %1, %11, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISL_SH_SM_EERKNS_12AtomicStringEDnEENS_18HashTableAddResultISN_SF_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::AtomicString"* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE6ExpandEPSF_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %19) #11
  %21 = and i32 %20, %16
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %88, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %36 = xor i32 %20, -1
  %37 = lshr i32 %20, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.WTF::StringView"* %4 to i8**
  br label %50

50:                                               ; preds = %27, %68
  %51 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %74, %68 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ null, %27 ], [ %69, %68 ]
  %53 = phi i64 [ %22, %27 ], [ %73, %68 ]
  %54 = phi i64 [ 0, %27 ], [ %71, %68 ]
  %55 = bitcast %"struct.WTF::KeyValuePair"* %51 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %68, label %58

58:                                               ; preds = %50
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  store i8* %56, i8** %49, align 8
  %60 = getelementptr inbounds i8, i8* %56, i64 12
  store i8* %60, i8** %29, align 8
  %61 = getelementptr inbounds i8, i8* %56, i64 4
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %32, align 8
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 1
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %34, align 8
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %35, align 8
  %67 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  br i1 %67, label %178, label %68

68:                                               ; preds = %50, %58
  %69 = phi %"struct.WTF::KeyValuePair"* [ %52, %58 ], [ %51, %50 ]
  %70 = icmp eq i64 %54, 0
  %71 = select i1 %70, i64 %48, i64 %54
  %72 = add i64 %71, %53
  %73 = and i64 %72, %17
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %73
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %78, label %50

78:                                               ; preds = %68
  %79 = icmp eq %"struct.WTF::KeyValuePair"* %69, null
  br i1 %79, label %88, label %80

80:                                               ; preds = %78
  %81 = bitcast %"struct.WTF::KeyValuePair"* %69 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %81, i64 16) #11
  %82 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 2147483647
  %85 = and i32 %84, 2147483647
  %86 = and i32 %83, -2147483648
  %87 = or i32 %85, %86
  store i32 %87, i32* %82, align 8
  br label %88

88:                                               ; preds = %12, %78, %80
  %89 = phi %"struct.WTF::KeyValuePair"* [ %69, %80 ], [ %74, %78 ], [ %23, %12 ]
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %109, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %109

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i33
  %101 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #11
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !8

106:                                              ; preds = %97
  call void @llvm.trap() #11
  unreachable

107:                                              ; preds = %97
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %98, align 4
  br label %109

109:                                              ; preds = %107, %92, %88
  %110 = ptrtoint %"class.WTF::StringImpl"* %90 to i64
  %111 = bitcast %"struct.WTF::KeyValuePair"* %89 to i64*
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  store i64 %110, i64* %111, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #11
  br label %128

128:                                              ; preds = %109, %124, %127
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 1
  %130 = bitcast %"class.blink::Member"* %129 to i64*
  store atomic i64 0, i64* %130 monotonic, align 8
  %131 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %166, label %133

133:                                              ; preds = %128
  %134 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %135 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %134, i64 0, i32 1
  %136 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %135) #11
  %137 = icmp eq i8* %136, null
  br i1 %137, label %138, label %140, !prof !8

138:                                              ; preds = %133
  %139 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %135, i8* %139) #11
  br label %140

140:                                              ; preds = %138, %133
  %141 = phi i8* [ %139, %138 ], [ %136, %133 ]
  %142 = bitcast i8* %141 to %"class.blink::ThreadState"**
  %143 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %143, i64 0, i32 9
  %145 = load i8, i8* %144, align 1, !range !9
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %166, label %147

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %143, i64 0, i32 13
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 1
  store i64 %150, i64* %148, align 8
  %151 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %143, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %152 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %151, align 8
  %153 = load atomic i64, i64* %130 monotonic, align 8
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %163, label %155

155:                                              ; preds = %147
  %156 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %152, i64 0, i32 0, i32 0
  %157 = inttoptr i64 %153 to i8*
  %158 = bitcast %"class.blink::MarkingVisitor"* %152 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %159 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %159, i64 5
  %161 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %160, align 8
  call void %161(%"class.blink::Visitor"* %156, i8* nonnull %157, i8* %157, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS2_EENS8_IS5_EEEEE5TraceEPNS_7VisitorEPKv) #11
  %162 = load i64, i64* %148, align 8
  br label %163

163:                                              ; preds = %155, %147
  %164 = phi i64 [ %150, %147 ], [ %162, %155 ]
  %165 = add i64 %164, -1
  store i64 %165, i64* %148, align 8
  br label %166

166:                                              ; preds = %128, %140, %163
  %167 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %168 = load i32, i32* %167, align 4
  %169 = add i32 %168, 1
  store i32 %169, i32* %167, align 4
  %170 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %171 = load i32, i32* %170, align 8
  %172 = add i32 %171, %169
  %173 = shl i32 %172, 1
  %174 = load i32, i32* %14, align 8
  %175 = icmp ult i32 %173, %174
  br i1 %175, label %178, label %176

176:                                              ; preds = %166
  %177 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE6ExpandEPSF_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %89)
  br label %178

178:                                              ; preds = %58, %166, %176
  %179 = phi i8 [ 1, %166 ], [ 1, %176 ], [ 0, %58 ]
  %180 = phi %"struct.WTF::KeyValuePair"* [ %89, %166 ], [ %177, %176 ], [ %51, %58 ]
  %181 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %180, 0
  %182 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %181, i8 %179, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %182
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE6ExpandEPSF_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE12ExpandBufferEjPSF_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !9
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.447"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking.447"* %42 to %"struct.WTF::KeyValuePair"*
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE8RehashToEPSF_jSO_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %40, %"struct.WTF::KeyValuePair"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE12ExpandBufferEjPSF_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !8

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !9
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.447"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking.447"* %44 to %"struct.WTF::KeyValuePair"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking.447"**
  store %"class.blink::HeapHashTableBacking.447"* %44, %"class.blink::HeapHashTableBacking.447"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.447", %"class.blink::HeapHashTableBacking.447"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #11
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE8RehashToEPSF_jSO_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %42, i32 %1, %"struct.WTF::KeyValuePair"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair"* %64, %"struct.WTF::KeyValuePair"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #11
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %96, i64 %59, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE8RehashToEPSF_jSO_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  br label %88

21:                                               ; preds = %131
  %22 = bitcast %"class.WTF::HashTable"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %132, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair"* [ null, %15 ], [ %134, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #11
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #11
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %82, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %79, %54
  %57 = phi i64 [ 0, %54 ], [ %80, %79 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  switch i64 %61, label %62 [
    i64 -1, label %79
    i64 0, label %79
  ]

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #11
  br label %75

75:                                               ; preds = %74, %71
  %76 = bitcast %"struct.WTF::KeyValuePair"* %58 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 %57, i32 1
  %78 = bitcast %"class.blink::Member"* %77 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %75, %56, %56
  %80 = add nuw nsw i64 %57, 1
  %81 = icmp eq i64 %80, %55
  br i1 %81, label %82, label %56

82:                                               ; preds = %79, %52
  %83 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %83) #11
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %84

84:                                               ; preds = %49, %82
  %85 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, -2147483648
  store i32 %87, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair"* %29

88:                                               ; preds = %18, %131
  %89 = phi i32 [ %13, %18 ], [ %132, %131 ]
  %90 = phi %"struct.WTF::KeyValuePair"* [ %20, %18 ], [ %133, %131 ]
  %91 = phi %"struct.WTF::KeyValuePair"* [ null, %18 ], [ %134, %131 ]
  %92 = phi i32 [ 0, %18 ], [ %135, %131 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 %93
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"struct.WTF::KeyValuePair"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %98 [
    i64 -1, label %131
    i64 0, label %131
  ]

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 0, i32 0
  %100 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %99) #11
  %101 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #11
  br label %118

118:                                              ; preds = %98, %114, %117
  %119 = load i64, i64* %96, align 8
  %120 = bitcast %"struct.WTF::KeyValuePair"* %101 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 %93, i32 1
  %123 = bitcast %"class.blink::Member"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %126, i64 %93
  %128 = icmp eq %"struct.WTF::KeyValuePair"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair"* %101, %"struct.WTF::KeyValuePair"* %91
  %130 = load i32, i32* %12, align 8
  br label %131

131:                                              ; preds = %88, %88, %118
  %132 = phi i32 [ %89, %88 ], [ %130, %118 ], [ %89, %88 ]
  %133 = phi %"struct.WTF::KeyValuePair"* [ %90, %88 ], [ %126, %118 ], [ %90, %88 ]
  %134 = phi %"struct.WTF::KeyValuePair"* [ %91, %88 ], [ %129, %118 ], [ %91, %88 ]
  %135 = add i32 %92, 1
  %136 = icmp eq i32 %135, %132
  br i1 %136, label %21, label %88
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.447"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS5_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS1_10HashTraitsIS7_EENSB_IS9_EEEEEEEENS1_24KeyValuePairKeyExtractorENS1_15CaseFoldingHashENS1_18HashMapValueTraitsINSB_IS3_EENSB_ISF_EEEESK_NS_13HeapAllocatorEEEE14AllocateObjectISP_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.447"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.447"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS5_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS1_10HashTraitsIS7_EENSB_IS9_EEEEEEEENS1_24KeyValuePairKeyExtractorENS1_15CaseFoldingHashENS1_18HashMapValueTraitsINSB_IS3_EENSB_ISF_EEEESK_NS_13HeapAllocatorEEEE14AllocateObjectISP_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([849 x i8], [849 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_11HeapHashMapINS1_25FontSelectionCapabilitiesENS6_INS1_20CSSSegmentedFontFaceEEENS1_29FontSelectionCapabilitiesHashENS_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #11
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_11HeapHashMapINS5_25FontSelectionCapabilitiesENS6_INS5_20CSSSegmentedFontFaceEEENS5_29FontSelectionCapabilitiesHashENS_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS3_EENSC_ISG_EEEESL_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #11
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS7_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS3_10HashTraitsIS9_EENSD_ISB_EEEEEEEENS3_24KeyValuePairKeyExtractorENS3_15CaseFoldingHashENS3_18HashMapValueTraitsINSD_IS5_EENSD_ISH_EEEESM_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !8

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #11
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_11HeapHashMapINS5_25FontSelectionCapabilitiesENS6_INS5_20CSSSegmentedFontFaceEEENS5_29FontSelectionCapabilitiesHashENS_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS3_EENSC_ISG_EEEESL_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !8

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS2_EENS8_IS5_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS2_EENS8_IS5_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS2_EENS8_IS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %0, i8** %5) #11
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #11
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS4_NS3_6MemberINS3_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS3_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #11
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS4_NS3_6MemberINS3_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS3_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.blink::FontSelectionCapabilities", align 8
  %4 = alloca %"struct.blink::FontSelectionCapabilities", align 8
  %5 = alloca %"class.WTF::internal::ConcurrentBucket.465", align 8
  %6 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.9"*
  %7 = getelementptr inbounds i8, i8* %1, i64 -2
  %8 = bitcast i8* %7 to i16*
  %9 = load i16, i16* %8, align 2
  %10 = lshr i16 %9, 2
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %20, !prof !8

12:                                               ; preds = %2
  %13 = getelementptr inbounds i8, i8* %1, i64 -8
  %14 = ptrtoint i8* %13 to i64
  %15 = and i64 %14, -131072
  %16 = inttoptr i64 %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 4144
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 16
  br label %23

20:                                               ; preds = %2
  %21 = zext i16 %10 to i64
  %22 = shl nuw nsw i64 %21, 3
  br label %23

23:                                               ; preds = %12, %20
  %24 = phi i64 [ %19, %12 ], [ %22, %20 ]
  %25 = add i64 %24, -8
  %26 = udiv i64 %25, 24
  %27 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %28 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %28, i64 3
  %30 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::Visitor"* %0) #11
  %32 = icmp ugt i64 %25, 23
  br i1 %32, label %33, label %59

33:                                               ; preds = %23
  %34 = bitcast %"struct.blink::FontSelectionCapabilities"* %4 to i8*
  %35 = bitcast %"struct.blink::FontSelectionCapabilities"* %4 to i64*
  %36 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %4, i64 0, i32 2
  %37 = bitcast %"struct.blink::FontSelectionRange"* %36 to i48*
  %38 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %39 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket.465", %"class.WTF::internal::ConcurrentBucket.465"* %5, i64 0, i32 0, i64 0
  %40 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket.465", %"class.WTF::internal::ConcurrentBucket.465"* %5, i64 0, i32 1
  %41 = bitcast %"struct.blink::FontSelectionCapabilities"* %3 to i8*
  %42 = bitcast %"struct.blink::FontSelectionCapabilities"* %3 to i64*
  %43 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %3, i64 0, i32 2
  %44 = bitcast %"struct.blink::FontSelectionRange"* %43 to i48*
  %45 = bitcast %"class.WTF::internal::ConcurrentBucket.465"* %5 to i16*
  %46 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket.465", %"class.WTF::internal::ConcurrentBucket.465"* %5, i64 0, i32 0, i64 2
  %47 = bitcast i8* %46 to i16*
  %48 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket.465", %"class.WTF::internal::ConcurrentBucket.465"* %5, i64 0, i32 0, i64 4
  %49 = bitcast i8* %48 to i16*
  %50 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket.465", %"class.WTF::internal::ConcurrentBucket.465"* %5, i64 0, i32 0, i64 6
  %51 = bitcast i8* %50 to i16*
  %52 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket.465", %"class.WTF::internal::ConcurrentBucket.465"* %5, i64 0, i32 0, i64 8
  %53 = bitcast i8* %52 to i16*
  %54 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket.465", %"class.WTF::internal::ConcurrentBucket.465"* %5, i64 0, i32 0, i64 10
  %55 = bitcast i8* %54 to i16*
  %56 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket.465", %"class.WTF::internal::ConcurrentBucket.465"* %5, i64 0, i32 0, i64 12
  %57 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket.465", %"class.WTF::internal::ConcurrentBucket.465"* %5, i64 0, i32 0, i64 16
  %58 = bitcast i8* %57 to i64**
  br label %60

59:                                               ; preds = %171, %23
  ret void

60:                                               ; preds = %33, %171
  %61 = phi i64 [ 0, %33 ], [ %172, %171 ]
  br i1 %31, label %62, label %115

62:                                               ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false)
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %6, i64 %61
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %6, i64 %61, i32 1
  store %"class.blink::Member.10"* %64, %"class.blink::Member.10"** %40, align 8
  %65 = bitcast %"struct.WTF::KeyValuePair.9"* %63 to i8*
  call void @_ZN3WTF16AtomicReadMemcpyEPvPKvm(i8* nonnull %39, i8* %65, i64 14) #11
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %41) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 14, i1 false) #11
  call void @_ZN5blink25FontSelectionCapabilitiesC2Ev(%"struct.blink::FontSelectionCapabilities"* nonnull %3) #11
  %66 = load i64, i64* %42, align 8
  %67 = load i48, i48* %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %41) #11
  %68 = trunc i64 %66 to i16
  %69 = load i16, i16* %45, align 8
  %70 = icmp eq i16 %69, %68
  br i1 %70, label %71, label %100

71:                                               ; preds = %62
  %72 = lshr i64 %66, 48
  %73 = trunc i64 %72 to i16
  %74 = lshr i64 %66, 32
  %75 = trunc i64 %74 to i16
  %76 = lshr i64 %66, 16
  %77 = trunc i64 %76 to i16
  %78 = load i16, i16* %47, align 2
  %79 = icmp eq i16 %78, %77
  %80 = load i16, i16* %49, align 4
  %81 = icmp eq i16 %80, %75
  %82 = and i1 %79, %81
  %83 = load i16, i16* %51, align 2
  %84 = icmp eq i16 %83, %73
  %85 = and i1 %82, %84
  br i1 %85, label %86, label %100

86:                                               ; preds = %71
  %87 = trunc i48 %67 to i16
  %88 = load i16, i16* %53, align 8
  %89 = icmp eq i16 %88, %87
  br i1 %89, label %90, label %100

90:                                               ; preds = %86
  %91 = lshr i48 %67, 16
  %92 = trunc i48 %91 to i16
  %93 = load i16, i16* %55, align 2
  %94 = icmp eq i16 %93, %92
  br i1 %94, label %95, label %100

95:                                               ; preds = %90
  %96 = load i8, i8* %56, align 4, !range !9
  %97 = lshr i48 %67, 32
  %98 = trunc i48 %97 to i8
  %99 = icmp eq i8 %96, %98
  br i1 %99, label %114, label %102

100:                                              ; preds = %90, %86, %71, %62
  %101 = load i8, i8* %56, align 4
  br label %102

102:                                              ; preds = %100, %95
  %103 = phi i8 [ %101, %100 ], [ %96, %95 ]
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %114

105:                                              ; preds = %102
  %106 = load i64*, i64** %58, align 8
  %107 = load atomic i64, i64* %106 monotonic, align 8
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %114, label %109

109:                                              ; preds = %105
  %110 = inttoptr i64 %107 to i8*
  %111 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %38, align 8
  %112 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %111, i64 5
  %113 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %112, align 8
  call void %113(%"class.blink::Visitor"* %0, i8* nonnull %110, i8* nonnull %110, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20CSSSegmentedFontFaceEE5TraceEPNS_7VisitorEPKv) #11
  br label %114

114:                                              ; preds = %102, %95, %109, %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #11
  br label %171

115:                                              ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %34) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 14, i1 false) #11
  call void @_ZN5blink25FontSelectionCapabilitiesC2Ev(%"struct.blink::FontSelectionCapabilities"* nonnull %4) #11
  %116 = load i64, i64* %35, align 8
  %117 = load i48, i48* %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %34) #11
  %118 = trunc i64 %116 to i16
  %119 = lshr i64 %116, 32
  %120 = trunc i64 %119 to i16
  %121 = lshr i64 %116, 48
  %122 = trunc i64 %121 to i16
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %6, i64 %61, i32 0, i32 0, i32 0, i32 0
  %124 = load i16, i16* %123, align 2
  %125 = icmp eq i16 %124, %118
  br i1 %125, label %126, label %157

126:                                              ; preds = %115
  %127 = lshr i64 %116, 16
  %128 = trunc i64 %127 to i16
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %6, i64 %61, i32 0, i32 0, i32 1, i32 0
  %130 = load i16, i16* %129, align 2
  %131 = icmp eq i16 %130, %128
  br i1 %131, label %132, label %157

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %6, i64 %61, i32 0, i32 1, i32 0, i32 0
  %134 = load i16, i16* %133, align 2
  %135 = icmp eq i16 %134, %120
  br i1 %135, label %136, label %157

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %6, i64 %61, i32 0, i32 1, i32 1, i32 0
  %138 = load i16, i16* %137, align 2
  %139 = icmp eq i16 %138, %122
  br i1 %139, label %140, label %157

140:                                              ; preds = %136
  %141 = trunc i48 %117 to i16
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %6, i64 %61, i32 0, i32 2, i32 0, i32 0
  %143 = load i16, i16* %142, align 2
  %144 = icmp eq i16 %143, %141
  br i1 %144, label %145, label %157

145:                                              ; preds = %140
  %146 = lshr i48 %117, 16
  %147 = trunc i48 %146 to i16
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %6, i64 %61, i32 0, i32 2, i32 1, i32 0
  %149 = load i16, i16* %148, align 2
  %150 = icmp eq i16 %149, %147
  br i1 %150, label %151, label %157

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %6, i64 %61, i32 0, i32 3
  %153 = load i8, i8* %152, align 2, !range !9
  %154 = lshr i48 %117, 32
  %155 = trunc i48 %154 to i8
  %156 = icmp eq i8 %153, %155
  br i1 %156, label %171, label %157

157:                                              ; preds = %115, %126, %132, %136, %140, %145, %151
  %158 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %6, i64 %61, i32 0, i32 3
  %159 = load i8, i8* %158, align 2, !range !9
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %161, label %171

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %6, i64 %61, i32 1
  %163 = bitcast %"class.blink::Member.10"* %162 to i64*
  %164 = load atomic i64, i64* %163 monotonic, align 8
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %171, label %166

166:                                              ; preds = %161
  %167 = inttoptr i64 %164 to i8*
  %168 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %38, align 8
  %169 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %168, i64 5
  %170 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %169, align 8
  call void %170(%"class.blink::Visitor"* %0, i8* nonnull %167, i8* nonnull %167, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20CSSSegmentedFontFaceEE5TraceEPNS_7VisitorEPKv) #11
  br label %171

171:                                              ; preds = %157, %151, %166, %161, %114
  %172 = add nuw nsw i64 %61, 1
  %173 = icmp ult i64 %172, %26
  br i1 %173, label %60, label %59
}

declare void @_ZN3WTF16AtomicReadMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20CSSSegmentedFontFaceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSSegmentedFontFace"*
  tail call void @_ZNK5blink20CSSSegmentedFontFace5TraceEPNS_7VisitorE(%"class.blink::CSSSegmentedFontFace"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink20CSSSegmentedFontFace5TraceEPNS_7VisitorE(%"class.blink::CSSSegmentedFontFace"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %12) #11
  %14 = and i32 %13, %9
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %15
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %46, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %25 = bitcast %"class.WTF::StringView"* %4 to i8*
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %30 = xor i32 %13, -1
  %31 = lshr i32 %13, 23
  %32 = add i32 %31, %30
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  %43 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %52

44:                                               ; preds = %71
  %45 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  br label %46

46:                                               ; preds = %44, %2
  %47 = phi i64 [ %17, %2 ], [ %45, %44 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %72, %44 ]
  %49 = icmp eq %"struct.WTF::KeyValuePair"* %48, null
  %50 = ptrtoint %"struct.WTF::KeyValuePair"* %48 to i64
  %51 = select i1 %49, i64 %47, i64 %50
  br label %82

52:                                               ; preds = %71, %21
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %21 ], [ %72, %71 ]
  %54 = phi i64 [ %17, %21 ], [ %78, %71 ]
  %55 = phi %"struct.WTF::KeyValuePair"* [ %16, %21 ], [ %77, %71 ]
  %56 = phi i64 [ %15, %21 ], [ %76, %71 ]
  %57 = phi i64 [ 0, %21 ], [ %74, %71 ]
  %58 = bitcast %"struct.WTF::KeyValuePair"* %55 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, inttoptr (i64 -1 to i8*)
  br i1 %60, label %71, label %61

61:                                               ; preds = %52
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  store i8* %59, i8** %43, align 8
  %63 = getelementptr inbounds i8, i8* %59, i64 12
  store i8* %63, i8** %23, align 8
  %64 = getelementptr inbounds i8, i8* %59, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %26, align 8
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %28, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %29, align 8
  %70 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  br i1 %70, label %82, label %71

71:                                               ; preds = %61, %52
  %72 = phi %"struct.WTF::KeyValuePair"* [ %53, %61 ], [ %55, %52 ]
  %73 = icmp eq i64 %57, 0
  %74 = select i1 %73, i64 %42, i64 %57
  %75 = add i64 %74, %56
  %76 = and i64 %75, %10
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %44, label %52

82:                                               ; preds = %61, %46
  %83 = phi i64 [ %51, %46 ], [ %54, %61 ]
  %84 = phi i8 [ 0, %46 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #11
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !9
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #11
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #11
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #11
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !9
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS3_EENS9_IS6_EEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS2_EENS8_IS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS2_EENS8_IS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS2_EENS8_IS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([296 x i8], [296 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashMapINS1_25FontSelectionCapabilitiesENS1_6MemberINS1_20CSSSegmentedFontFaceEEENS1_29FontSelectionCapabilitiesHashENS_10HashTraitsIS3_EENS8_IS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS_6MemberINS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashEN3WTF10HashTraitsIS2_EENS8_IS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.9"*, i8 } @_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES2_DnEENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.7"*, %"struct.blink::FontSelectionCapabilities"* dereferenceable(14), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.blink::FontSelectionCapabilities", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.9"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.7"* %0, %"struct.WTF::KeyValuePair.9"* null)
  %10 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair.9"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = tail call i32 @_ZN5blink29FontSelectionCapabilitiesHash7GetHashERKNS_25FontSelectionCapabilitiesE(%"struct.blink::FontSelectionCapabilities"* dereferenceable(14) %1) #11
  %18 = and i32 %17, %15
  %19 = zext i32 %18 to i64
  %20 = bitcast %"struct.blink::FontSelectionCapabilities"* %4 to i8*
  %21 = bitcast %"struct.blink::FontSelectionCapabilities"* %4 to i64*
  %22 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %4, i64 0, i32 2
  %23 = bitcast %"struct.blink::FontSelectionRange"* %22 to i48*
  %24 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 0, i32 1, i32 0
  %26 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 1, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 1, i32 1, i32 0
  %28 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 2, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 2, i32 1, i32 0
  %30 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 3
  %31 = xor i32 %17, -1
  %32 = lshr i32 %17, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %123, %11
  %45 = phi i64 [ 0, %11 ], [ %129, %123 ]
  %46 = phi i64 [ %19, %11 ], [ %131, %123 ]
  %47 = phi %"struct.WTF::KeyValuePair.9"* [ null, %11 ], [ %127, %123 ]
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %46
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %20) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 14, i1 false) #11
  call void @_ZN5blink25FontSelectionCapabilitiesC2Ev(%"struct.blink::FontSelectionCapabilities"* nonnull %4) #11
  %49 = load i64, i64* %21, align 8
  %50 = load i48, i48* %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %20) #11
  %51 = trunc i64 %49 to i16
  %52 = lshr i64 %49, 32
  %53 = trunc i64 %52 to i16
  %54 = lshr i64 %49, 48
  %55 = trunc i64 %54 to i16
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i16, i16* %56, align 2
  %58 = icmp eq i16 %57, %51
  br i1 %58, label %59, label %90

59:                                               ; preds = %44
  %60 = lshr i64 %49, 16
  %61 = trunc i64 %60 to i16
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %46, i32 0, i32 0, i32 1, i32 0
  %63 = load i16, i16* %62, align 2
  %64 = icmp eq i16 %63, %61
  br i1 %64, label %65, label %90

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %46, i32 0, i32 1, i32 0, i32 0
  %67 = load i16, i16* %66, align 2
  %68 = icmp eq i16 %67, %53
  br i1 %68, label %69, label %90

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %46, i32 0, i32 1, i32 1, i32 0
  %71 = load i16, i16* %70, align 2
  %72 = icmp eq i16 %71, %55
  br i1 %72, label %73, label %90

73:                                               ; preds = %69
  %74 = trunc i48 %50 to i16
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %46, i32 0, i32 2, i32 0, i32 0
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, %74
  br i1 %77, label %78, label %90

78:                                               ; preds = %73
  %79 = lshr i48 %50, 16
  %80 = trunc i48 %79 to i16
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %46, i32 0, i32 2, i32 1, i32 0
  %82 = load i16, i16* %81, align 2
  %83 = icmp eq i16 %82, %80
  br i1 %83, label %84, label %90

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %46, i32 0, i32 3
  %86 = load i8, i8* %85, align 2, !range !9
  %87 = lshr i48 %50, 32
  %88 = trunc i48 %87 to i8
  %89 = icmp eq i8 %86, %88
  br i1 %89, label %132, label %90

90:                                               ; preds = %73, %65, %44, %59, %69, %78, %84
  %91 = load i16, i16* %24, align 2
  %92 = icmp eq i16 %57, %91
  br i1 %92, label %93, label %123

93:                                               ; preds = %90
  %94 = load i16, i16* %25, align 2
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %46, i32 0, i32 0, i32 1, i32 0
  %96 = load i16, i16* %95, align 2
  %97 = icmp eq i16 %96, %94
  br i1 %97, label %98, label %123

98:                                               ; preds = %93
  %99 = load i16, i16* %26, align 2
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %46, i32 0, i32 1, i32 0, i32 0
  %101 = load i16, i16* %100, align 2
  %102 = icmp eq i16 %101, %99
  br i1 %102, label %103, label %123

103:                                              ; preds = %98
  %104 = load i16, i16* %27, align 2
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %46, i32 0, i32 1, i32 1, i32 0
  %106 = load i16, i16* %105, align 2
  %107 = icmp eq i16 %106, %104
  br i1 %107, label %108, label %123

108:                                              ; preds = %103
  %109 = load i16, i16* %28, align 2
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %46, i32 0, i32 2, i32 0, i32 0
  %111 = load i16, i16* %110, align 2
  %112 = icmp eq i16 %111, %109
  br i1 %112, label %113, label %123

113:                                              ; preds = %108
  %114 = load i16, i16* %29, align 2
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %46, i32 0, i32 2, i32 1, i32 0
  %116 = load i16, i16* %115, align 2
  %117 = icmp eq i16 %116, %114
  br i1 %117, label %118, label %123

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %46, i32 0, i32 3
  %120 = load i8, i8* %119, align 2, !range !9
  %121 = load i8, i8* %30, align 2, !range !9
  %122 = icmp eq i8 %120, %121
  br i1 %122, label %197, label %123

123:                                              ; preds = %108, %98, %90, %93, %103, %113, %118
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %46, i32 0, i32 3
  %125 = load i8, i8* %124, align 2, !range !9
  %126 = icmp eq i8 %125, 0
  %127 = select i1 %126, %"struct.WTF::KeyValuePair.9"* %47, %"struct.WTF::KeyValuePair.9"* %48
  %128 = icmp eq i64 %45, 0
  %129 = select i1 %128, i64 %43, i64 %45
  %130 = add i64 %129, %46
  %131 = and i64 %130, %16
  br label %44

132:                                              ; preds = %84
  %133 = icmp eq %"struct.WTF::KeyValuePair.9"* %47, null
  br i1 %133, label %134, label %136

134:                                              ; preds = %132
  %135 = bitcast %"struct.WTF::KeyValuePair.9"* %48 to i8*
  br label %144

136:                                              ; preds = %132
  %137 = bitcast %"struct.WTF::KeyValuePair.9"* %47 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %137, i64 24) #11
  %138 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 3
  %139 = load i32, i32* %138, align 8
  %140 = add i32 %139, 2147483647
  %141 = and i32 %140, 2147483647
  %142 = and i32 %139, -2147483648
  %143 = or i32 %141, %142
  store i32 %143, i32* %138, align 8
  br label %144

144:                                              ; preds = %134, %136
  %145 = phi i8* [ %135, %134 ], [ %137, %136 ]
  %146 = phi %"struct.WTF::KeyValuePair.9"* [ %48, %134 ], [ %47, %136 ]
  %147 = bitcast %"struct.blink::FontSelectionCapabilities"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %145, i8* align 2 %147, i64 13, i1 false) #11
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %146, i64 0, i32 1
  %149 = bitcast %"class.blink::Member.10"* %148 to i64*
  store atomic i64 0, i64* %149 monotonic, align 8
  %150 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %185, label %152

152:                                              ; preds = %144
  %153 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %154 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %153, i64 0, i32 1
  %155 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %154) #11
  %156 = icmp eq i8* %155, null
  br i1 %156, label %157, label %159, !prof !8

157:                                              ; preds = %152
  %158 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %154, i8* %158) #11
  br label %159

159:                                              ; preds = %157, %152
  %160 = phi i8* [ %158, %157 ], [ %155, %152 ]
  %161 = bitcast i8* %160 to %"class.blink::ThreadState"**
  %162 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %162, i64 0, i32 9
  %164 = load i8, i8* %163, align 1, !range !9
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %185, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %162, i64 0, i32 13
  %168 = load i64, i64* %167, align 8
  %169 = add i64 %168, 1
  store i64 %169, i64* %167, align 8
  %170 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %162, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %171 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %170, align 8
  %172 = load atomic i64, i64* %149 monotonic, align 8
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %182, label %174

174:                                              ; preds = %166
  %175 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %171, i64 0, i32 0, i32 0
  %176 = inttoptr i64 %172 to i8*
  %177 = bitcast %"class.blink::MarkingVisitor"* %171 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %178 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %178, i64 5
  %180 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %179, align 8
  call void %180(%"class.blink::Visitor"* %175, i8* nonnull %176, i8* %176, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20CSSSegmentedFontFaceEE5TraceEPNS_7VisitorEPKv) #11
  %181 = load i64, i64* %167, align 8
  br label %182

182:                                              ; preds = %174, %166
  %183 = phi i64 [ %169, %166 ], [ %181, %174 ]
  %184 = add i64 %183, -1
  store i64 %184, i64* %167, align 8
  br label %185

185:                                              ; preds = %144, %159, %182
  %186 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 2
  %187 = load i32, i32* %186, align 4
  %188 = add i32 %187, 1
  store i32 %188, i32* %186, align 4
  %189 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 3
  %190 = load i32, i32* %189, align 8
  %191 = add i32 %190, %188
  %192 = shl i32 %191, 1
  %193 = load i32, i32* %13, align 8
  %194 = icmp ult i32 %192, %193
  br i1 %194, label %197, label %195

195:                                              ; preds = %185
  %196 = call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.7"* %0, %"struct.WTF::KeyValuePair.9"* %146)
  br label %197

197:                                              ; preds = %118, %185, %195
  %198 = phi i8 [ 1, %185 ], [ 1, %195 ], [ 0, %118 ]
  %199 = phi %"struct.WTF::KeyValuePair.9"* [ %146, %185 ], [ %196, %195 ], [ %48, %118 ]
  %200 = insertvalue { %"struct.WTF::KeyValuePair.9"*, i8 } undef, %"struct.WTF::KeyValuePair.9"* %199, 0
  %201 = insertvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %200, i8 %198, 1
  ret { %"struct.WTF::KeyValuePair.9"*, i8 } %201
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.7"*, %"struct.WTF::KeyValuePair.9"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.7"* %0, i32 %35, %"struct.WTF::KeyValuePair.9"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !9
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.461"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking.461"* %42 to %"struct.WTF::KeyValuePair.9"*
  %44 = call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.7"* %0, %"struct.WTF::KeyValuePair.9"* %43, i32 %40, %"struct.WTF::KeyValuePair.9"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.9"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.9"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.7"*, i32, %"struct.WTF::KeyValuePair.9"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.blink::FontSelectionCapabilities", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !8

11:                                               ; preds = %4
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %4
  %14 = phi i8* [ %12, %11 ], [ %9, %4 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 6
  %18 = load i8, i8* %17, align 8, !range !9
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 16
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %28, label %24

24:                                               ; preds = %13, %20
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 13
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %20, %24
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %24, %28
  %32 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 0
  %33 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %32, align 8
  %34 = icmp eq %"struct.WTF::KeyValuePair.9"* %33, null
  br i1 %34, label %132, label %35

35:                                               ; preds = %31
  %36 = zext i32 %1 to i64
  %37 = mul nuw nsw i64 %36, 24
  %38 = bitcast %"struct.WTF::KeyValuePair.9"* %33 to i8*
  %39 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %38, i64 %37) #11
  br i1 %39, label %40, label %132

40:                                               ; preds = %35
  store i8 1, i8* %3, align 1
  %41 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %32, align 8
  %44 = zext i32 %42 to i64
  %45 = call %"class.blink::HeapHashTableBacking.461"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #11
  %46 = bitcast %"class.blink::HeapHashTableBacking.461"* %45 to %"struct.WTF::KeyValuePair.9"*
  %47 = icmp eq i32 %42, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %40
  %49 = bitcast %"struct.blink::FontSelectionCapabilities"* %5 to i8*
  %50 = bitcast %"struct.blink::FontSelectionCapabilities"* %5 to i64*
  %51 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %5, i64 0, i32 2
  %52 = bitcast %"struct.blink::FontSelectionRange"* %51 to i48*
  br label %64

53:                                               ; preds = %129, %40
  %54 = phi %"struct.WTF::KeyValuePair.9"* [ null, %40 ], [ %71, %129 ]
  %55 = bitcast %"class.WTF::HashTable.7"* %0 to %"class.blink::HeapHashTableBacking.461"**
  store %"class.blink::HeapHashTableBacking.461"* %45, %"class.blink::HeapHashTableBacking.461"** %55, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::HeapHashTableBacking.461", %"class.blink::HeapHashTableBacking.461"* %45, i64 0, i32 0
  %60 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %59) #11
  br label %61

61:                                               ; preds = %53, %58
  %62 = bitcast %"struct.WTF::KeyValuePair.9"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 %37, i1 false)
  %63 = call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.7"* %0, %"struct.WTF::KeyValuePair.9"* %43, i32 %1, %"struct.WTF::KeyValuePair.9"* %54)
  br label %132

64:                                               ; preds = %129, %48
  %65 = phi i64 [ 0, %48 ], [ %130, %129 ]
  %66 = phi %"struct.WTF::KeyValuePair.9"* [ null, %48 ], [ %71, %129 ]
  %67 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %32, align 8
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %67, i64 %65
  %69 = icmp eq %"struct.WTF::KeyValuePair.9"* %68, %2
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %46, i64 %65
  %71 = select i1 %69, %"struct.WTF::KeyValuePair.9"* %70, %"struct.WTF::KeyValuePair.9"* %66
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %49) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 14, i1 false) #11
  call void @_ZN5blink25FontSelectionCapabilitiesC2Ev(%"struct.blink::FontSelectionCapabilities"* nonnull %5) #11
  %72 = load i64, i64* %50, align 8
  %73 = load i48, i48* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %49) #11
  %74 = trunc i64 %72 to i16
  %75 = lshr i64 %72, 32
  %76 = trunc i64 %75 to i16
  %77 = lshr i64 %72, 48
  %78 = trunc i64 %77 to i16
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i16, i16* %79, align 2
  %81 = icmp eq i16 %80, %74
  br i1 %81, label %82, label %113

82:                                               ; preds = %64
  %83 = lshr i64 %72, 16
  %84 = trunc i64 %83 to i16
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %67, i64 %65, i32 0, i32 0, i32 1, i32 0
  %86 = load i16, i16* %85, align 2
  %87 = icmp eq i16 %86, %84
  br i1 %87, label %88, label %113

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %67, i64 %65, i32 0, i32 1, i32 0, i32 0
  %90 = load i16, i16* %89, align 2
  %91 = icmp eq i16 %90, %76
  br i1 %91, label %92, label %113

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %67, i64 %65, i32 0, i32 1, i32 1, i32 0
  %94 = load i16, i16* %93, align 2
  %95 = icmp eq i16 %94, %78
  br i1 %95, label %96, label %113

96:                                               ; preds = %92
  %97 = trunc i48 %73 to i16
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %67, i64 %65, i32 0, i32 2, i32 0, i32 0
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, %97
  br i1 %100, label %101, label %113

101:                                              ; preds = %96
  %102 = lshr i48 %73, 16
  %103 = trunc i48 %102 to i16
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %67, i64 %65, i32 0, i32 2, i32 1, i32 0
  %105 = load i16, i16* %104, align 2
  %106 = icmp eq i16 %105, %103
  br i1 %106, label %107, label %113

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %67, i64 %65, i32 0, i32 3
  %109 = load i8, i8* %108, align 2, !range !9
  %110 = lshr i48 %73, 32
  %111 = trunc i48 %110 to i8
  %112 = icmp eq i8 %109, %111
  br i1 %112, label %117, label %113

113:                                              ; preds = %64, %82, %88, %92, %96, %101, %107
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %67, i64 %65, i32 0, i32 3
  %115 = load i8, i8* %114, align 2, !range !9
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %113, %107
  %118 = bitcast %"struct.WTF::KeyValuePair.9"* %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 24, i1 false)
  br label %129

119:                                              ; preds = %113
  %120 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %32, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %120, i64 %65
  %122 = bitcast %"struct.WTF::KeyValuePair.9"* %70 to i8*
  %123 = bitcast %"struct.WTF::KeyValuePair.9"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 14, i1 false) #11
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %46, i64 %65, i32 1
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %120, i64 %65, i32 1
  %126 = bitcast %"class.blink::Member.10"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::Member.10"* %124 to i64*
  store i64 %127, i64* %128, align 8
  br label %129

129:                                              ; preds = %117, %119
  %130 = add nuw nsw i64 %65, 1
  %131 = icmp eq i64 %130, %44
  br i1 %131, label %53, label %64

132:                                              ; preds = %35, %31, %61
  %133 = phi %"struct.WTF::KeyValuePair.9"* [ %63, %61 ], [ null, %31 ], [ null, %35 ]
  ret %"struct.WTF::KeyValuePair.9"* %133
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.7"*, %"struct.WTF::KeyValuePair.9"*, i32, %"struct.WTF::KeyValuePair.9"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.blink::FontSelectionCapabilities", align 8
  %6 = alloca %"class.WTF::HashTable.7", align 8
  %7 = bitcast %"class.WTF::HashTable.7"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %6, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashTable.7"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.9"* %1, %"struct.WTF::KeyValuePair.9"** %8, align 8
  store i32 %2, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.9"* %1 to i64
  %18 = bitcast %"struct.WTF::KeyValuePair.9"* %1 to i8*
  br label %29

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 0
  %21 = bitcast %"struct.blink::FontSelectionCapabilities"* %5 to i8*
  %22 = bitcast %"struct.blink::FontSelectionCapabilities"* %5 to i64*
  %23 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %5, i64 0, i32 2
  %24 = bitcast %"struct.blink::FontSelectionRange"* %23 to i48*
  br label %61

25:                                               ; preds = %128
  %26 = bitcast %"class.WTF::HashTable.7"* %6 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = ptrtoint i8* %27 to i64
  br label %29

29:                                               ; preds = %16, %25
  %30 = phi i64 [ %17, %16 ], [ %28, %25 ]
  %31 = phi i32 [ 0, %16 ], [ %130, %25 ]
  %32 = phi i8* [ %18, %16 ], [ %27, %25 ]
  %33 = phi %"struct.WTF::KeyValuePair.9"* [ null, %16 ], [ %129, %25 ]
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.WTF::HashTable.7"* %6 to i64*
  br label %42

38:                                               ; preds = %29
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %32) #11
  %39 = load i32, i32* %13, align 8
  %40 = bitcast %"class.WTF::HashTable.7"* %6 to i64*
  %41 = load i64, i64* %40, align 8
  br label %42

42:                                               ; preds = %36, %38
  %43 = phi i64* [ %37, %36 ], [ %40, %38 ]
  %44 = phi i64 [ %30, %36 ], [ %41, %38 ]
  %45 = phi i32 [ %31, %36 ], [ %39, %38 ]
  %46 = bitcast %"class.WTF::HashTable.7"* %0 to i64*
  %47 = load i64, i64* %46, align 8
  store atomic i64 %44, i64* %46 monotonic, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %42
  %51 = inttoptr i64 %44 to i8*
  %52 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %51) #11
  br label %53

53:                                               ; preds = %42, %50
  store i32 %2, i32* %13, align 8
  store i64 %47, i64* %43, align 8
  store i32 %45, i32* %9, align 8
  %54 = icmp eq i64 %47, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = inttoptr i64 %47 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %56) #11
  store atomic i64 0, i64* %43 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  br label %57

57:                                               ; preds = %53, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret %"struct.WTF::KeyValuePair.9"* %33

61:                                               ; preds = %19, %128
  %62 = phi %"struct.WTF::KeyValuePair.9"* [ null, %19 ], [ %129, %128 ]
  %63 = phi i32 [ 0, %19 ], [ %130, %128 ]
  %64 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %20, align 8
  %65 = zext i32 %63 to i64
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %21) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 14, i1 false) #11
  call void @_ZN5blink25FontSelectionCapabilitiesC2Ev(%"struct.blink::FontSelectionCapabilities"* nonnull %5) #11
  %66 = load i64, i64* %22, align 8
  %67 = load i48, i48* %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %21) #11
  %68 = trunc i64 %66 to i16
  %69 = lshr i64 %66, 32
  %70 = trunc i64 %69 to i16
  %71 = lshr i64 %66, 48
  %72 = trunc i64 %71 to i16
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %64, i64 %65, i32 0, i32 0, i32 0, i32 0
  %74 = load i16, i16* %73, align 2
  %75 = icmp eq i16 %74, %68
  br i1 %75, label %76, label %107

76:                                               ; preds = %61
  %77 = lshr i64 %66, 16
  %78 = trunc i64 %77 to i16
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %64, i64 %65, i32 0, i32 0, i32 1, i32 0
  %80 = load i16, i16* %79, align 2
  %81 = icmp eq i16 %80, %78
  br i1 %81, label %82, label %107

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %64, i64 %65, i32 0, i32 1, i32 0, i32 0
  %84 = load i16, i16* %83, align 2
  %85 = icmp eq i16 %84, %70
  br i1 %85, label %86, label %107

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %64, i64 %65, i32 0, i32 1, i32 1, i32 0
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, %72
  br i1 %89, label %90, label %107

90:                                               ; preds = %86
  %91 = trunc i48 %67 to i16
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %64, i64 %65, i32 0, i32 2, i32 0, i32 0
  %93 = load i16, i16* %92, align 2
  %94 = icmp eq i16 %93, %91
  br i1 %94, label %95, label %107

95:                                               ; preds = %90
  %96 = lshr i48 %67, 16
  %97 = trunc i48 %96 to i16
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %64, i64 %65, i32 0, i32 2, i32 1, i32 0
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, %97
  br i1 %100, label %101, label %107

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %64, i64 %65, i32 0, i32 3
  %103 = load i8, i8* %102, align 2, !range !9
  %104 = lshr i48 %67, 32
  %105 = trunc i48 %104 to i8
  %106 = icmp eq i8 %103, %105
  br i1 %106, label %128, label %107

107:                                              ; preds = %61, %76, %82, %86, %90, %95, %101
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %64, i64 %65, i32 0, i32 3
  %109 = load i8, i8* %108, align 2, !range !9
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %128

111:                                              ; preds = %107
  %112 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %20, align 8
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %112, i64 %65
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %113, i64 0, i32 0
  %115 = call { %"struct.WTF::KeyValuePair.9"*, i8 } @_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EENSt3__14pairIPS7_bEERKT0_(%"class.WTF::HashTable.7"* nonnull %6, %"struct.blink::FontSelectionCapabilities"* dereferenceable(14) %114) #11
  %116 = extractvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %115, 0
  %117 = bitcast %"struct.WTF::KeyValuePair.9"* %116 to i8*
  %118 = bitcast %"struct.WTF::KeyValuePair.9"* %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 14, i1 false) #11
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %116, i64 0, i32 1
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %112, i64 %65, i32 1
  %121 = bitcast %"class.blink::Member.10"* %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.blink::Member.10"* %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %20, align 8
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %124, i64 %65
  %126 = icmp eq %"struct.WTF::KeyValuePair.9"* %125, %3
  %127 = select i1 %126, %"struct.WTF::KeyValuePair.9"* %116, %"struct.WTF::KeyValuePair.9"* %62
  br label %128

128:                                              ; preds = %107, %101, %111
  %129 = phi %"struct.WTF::KeyValuePair.9"* [ %62, %107 ], [ %127, %111 ], [ %62, %101 ]
  %130 = add i32 %63, 1
  %131 = load i32, i32* %13, align 8
  %132 = icmp eq i32 %130, %131
  br i1 %132, label %25, label %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.461"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS1_12KeyValuePairIS3_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS1_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.461"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.461"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS1_12KeyValuePairIS3_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS1_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([505 x i8], [505 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_25FontSelectionCapabilitiesENS_12KeyValuePairIS4_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.9"*, i8 } @_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EENSt3__14pairIPS7_bEERKT0_(%"class.WTF::HashTable.7"*, %"struct.blink::FontSelectionCapabilities"* dereferenceable(14)) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.blink::FontSelectionCapabilities", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = tail call i32 @_ZN5blink29FontSelectionCapabilitiesHash7GetHashERKNS_25FontSelectionCapabilitiesE(%"struct.blink::FontSelectionCapabilities"* dereferenceable(14) %1) #11
  %11 = and i32 %10, %8
  %12 = zext i32 %11 to i64
  %13 = bitcast %"struct.blink::FontSelectionCapabilities"* %3 to i8*
  %14 = bitcast %"struct.blink::FontSelectionCapabilities"* %3 to i64*
  %15 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %3, i64 0, i32 2
  %16 = bitcast %"struct.blink::FontSelectionRange"* %15 to i48*
  %17 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 1, i32 1, i32 0
  %21 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 2, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 2, i32 1, i32 0
  %23 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 3
  %24 = xor i32 %10, -1
  %25 = lshr i32 %10, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %121, %2
  %38 = phi i64 [ 0, %2 ], [ %125, %121 ]
  %39 = phi i64 [ 0, %2 ], [ %127, %121 ]
  %40 = phi i64 [ %12, %2 ], [ %129, %121 ]
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %40
  %42 = ptrtoint %"struct.WTF::KeyValuePair.9"* %41 to i64
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 14, i1 false) #11
  call void @_ZN5blink25FontSelectionCapabilitiesC2Ev(%"struct.blink::FontSelectionCapabilities"* nonnull %3) #11
  %43 = load i64, i64* %14, align 8
  %44 = load i48, i48* %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %13) #11
  %45 = trunc i64 %43 to i16
  %46 = lshr i64 %43, 32
  %47 = trunc i64 %46 to i16
  %48 = lshr i64 %43, 48
  %49 = trunc i64 %48 to i16
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i16, i16* %50, align 2
  %52 = icmp eq i16 %51, %45
  br i1 %52, label %53, label %88

53:                                               ; preds = %37
  %54 = lshr i64 %43, 16
  %55 = trunc i64 %54 to i16
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %40, i32 0, i32 0, i32 1, i32 0
  %57 = load i16, i16* %56, align 2
  %58 = icmp eq i16 %57, %55
  br i1 %58, label %59, label %88

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %40, i32 0, i32 1, i32 0, i32 0
  %61 = load i16, i16* %60, align 2
  %62 = icmp eq i16 %61, %47
  br i1 %62, label %63, label %88

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %40, i32 0, i32 1, i32 1, i32 0
  %65 = load i16, i16* %64, align 2
  %66 = icmp eq i16 %65, %49
  br i1 %66, label %67, label %88

67:                                               ; preds = %63
  %68 = trunc i48 %44 to i16
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %40, i32 0, i32 2, i32 0, i32 0
  %70 = load i16, i16* %69, align 2
  %71 = icmp eq i16 %70, %68
  br i1 %71, label %72, label %88

72:                                               ; preds = %67
  %73 = lshr i48 %44, 16
  %74 = trunc i48 %73 to i16
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %40, i32 0, i32 2, i32 1, i32 0
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, %74
  br i1 %77, label %78, label %88

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %40, i32 0, i32 3
  %80 = load i8, i8* %79, align 2, !range !9
  %81 = lshr i48 %44, 32
  %82 = trunc i48 %81 to i8
  %83 = icmp eq i8 %80, %82
  br i1 %83, label %84, label %88

84:                                               ; preds = %78
  %85 = ptrtoint %"struct.WTF::KeyValuePair.9"* %41 to i64
  %86 = icmp eq i64 %38, 0
  %87 = select i1 %86, i64 %85, i64 %38
  br label %132

88:                                               ; preds = %67, %59, %37, %53, %63, %72, %78
  %89 = load i16, i16* %17, align 2
  %90 = icmp eq i16 %51, %89
  br i1 %90, label %91, label %121

91:                                               ; preds = %88
  %92 = load i16, i16* %18, align 2
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %40, i32 0, i32 0, i32 1, i32 0
  %94 = load i16, i16* %93, align 2
  %95 = icmp eq i16 %94, %92
  br i1 %95, label %96, label %121

96:                                               ; preds = %91
  %97 = load i16, i16* %19, align 2
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %40, i32 0, i32 1, i32 0, i32 0
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, %97
  br i1 %100, label %101, label %121

101:                                              ; preds = %96
  %102 = load i16, i16* %20, align 2
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %40, i32 0, i32 1, i32 1, i32 0
  %104 = load i16, i16* %103, align 2
  %105 = icmp eq i16 %104, %102
  br i1 %105, label %106, label %121

106:                                              ; preds = %101
  %107 = load i16, i16* %21, align 2
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %40, i32 0, i32 2, i32 0, i32 0
  %109 = load i16, i16* %108, align 2
  %110 = icmp eq i16 %109, %107
  br i1 %110, label %111, label %121

111:                                              ; preds = %106
  %112 = load i16, i16* %22, align 2
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %40, i32 0, i32 2, i32 1, i32 0
  %114 = load i16, i16* %113, align 2
  %115 = icmp eq i16 %114, %112
  br i1 %115, label %116, label %121

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %40, i32 0, i32 3
  %118 = load i8, i8* %117, align 2, !range !9
  %119 = load i8, i8* %23, align 2, !range !9
  %120 = icmp eq i8 %118, %119
  br i1 %120, label %130, label %121

121:                                              ; preds = %106, %96, %88, %91, %101, %111, %116
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %40, i32 0, i32 3
  %123 = load i8, i8* %122, align 2, !range !9
  %124 = icmp eq i8 %123, 0
  %125 = select i1 %124, i64 %38, i64 %42
  %126 = icmp eq i64 %39, 0
  %127 = select i1 %126, i64 %36, i64 %39
  %128 = add i64 %127, %40
  %129 = and i64 %128, %9
  br label %37

130:                                              ; preds = %116
  %131 = ptrtoint %"struct.WTF::KeyValuePair.9"* %41 to i64
  br label %132

132:                                              ; preds = %130, %84
  %133 = phi i64 [ %87, %84 ], [ %131, %130 ]
  %134 = phi i8 [ 0, %84 ], [ 1, %130 ]
  %135 = inttoptr i64 %133 to %"struct.WTF::KeyValuePair.9"*
  %136 = insertvalue { %"struct.WTF::KeyValuePair.9"*, i8 } undef, %"struct.WTF::KeyValuePair.9"* %135, 0
  %137 = insertvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %136, i8 %134, 1
  ret { %"struct.WTF::KeyValuePair.9"*, i8 } %137
}

declare i32 @_ZN5blink29FontSelectionCapabilitiesHash7GetHashERKNS_25FontSelectionCapabilitiesE(%"struct.blink::FontSelectionCapabilities"* dereferenceable(14)) local_unnamed_addr #2

declare void @_ZN5blink20CSSSegmentedFontFaceC1ENS_25FontSelectionCapabilitiesE(%"class.blink::CSSSegmentedFontFace"*, i64, i48) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20CSSSegmentedFontFaceEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CSSSegmentedFontFaceEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20CSSSegmentedFontFaceEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CSSSegmentedFontFaceEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20CSSSegmentedFontFaceEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20CSSSegmentedFontFaceEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSSegmentedFontFace"*
  tail call void @_ZN5blink20CSSSegmentedFontFaceD1Ev(%"class.blink::CSSSegmentedFontFace"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20CSSSegmentedFontFaceEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind
declare void @_ZN5blink20CSSSegmentedFontFaceD1Ev(%"class.blink::CSSSegmentedFontFace"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.60"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet"*, %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* byval(%"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper") align 8, %"class.blink::FontFace"** dereferenceable(8), i32) local_unnamed_addr #0 comdat align 2 {
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !8

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 14
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0
  %19 = tail call { %"struct.WTF::KeyValuePair.84"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.82"* %18, %"class.blink::FontFace"** dereferenceable(8) %2, i32* nonnull dereferenceable(4) @_ZN3WTFL9kNotFoundE) #11
  %20 = extractvalue { %"struct.WTF::KeyValuePair.84"*, i8 } %19, 0
  %21 = extractvalue { %"struct.WTF::KeyValuePair.84"*, i8 } %19, 1
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1
  br i1 %23, label %41, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %29 = load %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedList"** %28, align 8
  %30 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_8FontFaceEEENS1_13HeapAllocatorEE6insertIRPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList"* %24, %"class.WTF::VectorBackedLinkedListNode"* %27, %"class.WTF::VectorBackedLinkedList"* %29, %"class.blink::FontFace"** dereferenceable(8) %2)
  %31 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %30, 0
  %32 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %30, 1
  %33 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %31 to i64
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %32, i64 0, i32 0
  %35 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %34, i32 0) #11
  %36 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %35 to i64
  %37 = sub i64 %33, %36
  %38 = lshr exact i64 %37, 4
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %20, i64 0, i32 1
  store i32 %39, i32* %40, align 8
  br label %54

41:                                               ; preds = %11
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %20, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %24, i64 0, i32 0
  %45 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %44, i32 %43) #11
  %46 = icmp eq i32 %3, 1
  br i1 %46, label %54, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %51 = load %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedList"** %50, align 8
  %52 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_8FontFaceEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_(%"class.WTF::VectorBackedLinkedList"* %24, %"class.WTF::VectorBackedLinkedListNode"* %45, %"class.WTF::VectorBackedLinkedList"* %24, %"class.WTF::VectorBackedLinkedListNode"* %49, %"class.WTF::VectorBackedLinkedList"* %51)
  %53 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %52, 0
  br label %54

54:                                               ; preds = %41, %47, %25
  %55 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %53, %47 ], [ %31, %25 ], [ %45, %41 ]
  %56 = phi i8 [ 0, %47 ], [ 1, %25 ], [ 0, %41 ]
  %57 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %55, i64 0, i32 2
  %58 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %59 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %58, i64 0, i32 1
  %60 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %59) #11
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %64, !prof !8

62:                                               ; preds = %54
  %63 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %59, i8* %63) #11
  br label %64

64:                                               ; preds = %54, %62
  %65 = phi i8* [ %63, %62 ], [ %60, %54 ]
  %66 = bitcast i8* %65 to %"class.blink::ThreadState"**
  %67 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %67, i64 0, i32 14
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = insertvalue { %"class.blink::Member.60"*, i8 } undef, %"class.blink::Member.60"* %57, 0
  %72 = insertvalue { %"class.blink::Member.60"*, i8 } %71, i8 %56, 1
  ret { %"class.blink::Member.60"*, i8 } %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_8FontFaceEEENS1_13HeapAllocatorEE6insertIRPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*, %"class.blink::FontFace"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %7, i32 0) #11
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %13, i32 %12) #11
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %84

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #11
  %24 = bitcast %"class.blink::FontFace"** %3 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 0
  store i32 %16, i32* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 1
  store i32 %12, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2
  %29 = bitcast %"class.blink::Member.60"* %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %22, %31
  br i1 %32, label %82, label %33, !prof !8

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %34, align 8
  %36 = zext i32 %22 to i64
  %37 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %35, i64 %36
  %38 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %37 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %35, i64 %36, i32 2
  %42 = load i64, i64* %29, align 8
  %43 = bitcast %"class.blink::Member.60"* %41 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %79, label %46

46:                                               ; preds = %33
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #11
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !8

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #11
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 9
  %58 = load i8, i8* %57, align 1, !range !9
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %79, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 13
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %61, align 8
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %64, align 8
  %66 = load atomic i64, i64* %43 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %65, i64 0, i32 0, i32 0
  %70 = inttoptr i64 %66 to i8*
  %71 = bitcast %"class.blink::MarkingVisitor"* %65 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, i64 5
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, align 8
  tail call void %74(%"class.blink::Visitor"* %69, i8* nonnull %70, i8* %70, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv) #11
  %75 = load i64, i64* %61, align 8
  br label %76

76:                                               ; preds = %68, %60
  %77 = phi i64 [ %63, %60 ], [ %75, %68 ]
  %78 = add i64 %77, -1
  store i64 %78, i64* %61, align 8
  br label %79

79:                                               ; preds = %33, %53, %76
  %80 = load i32, i32* %21, align 4
  %81 = add i32 %80, 1
  store i32 %81, i32* %21, align 4
  br label %83

82:                                               ; preds = %20
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.85"* %13, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %5) #11
  br label %83

83:                                               ; preds = %79, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #11
  br label %101

84:                                               ; preds = %4
  %85 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %13, i32 %18) #11
  %86 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %85, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %17, align 8
  %88 = bitcast %"class.blink::FontFace"** %3 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %85 to i64*
  %91 = shl i64 %10, 28
  %92 = zext i32 %16 to i64
  %93 = or i64 %91, %92
  store i64 %93, i64* %90, align 8
  %94 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %85, i64 0, i32 2
  %95 = bitcast %"class.blink::Member.60"* %94 to i64*
  store atomic i64 %89, i64* %95 monotonic, align 8
  %96 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %84
  %99 = inttoptr i64 %89 to i8*
  %100 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %99) #11
  br label %101

101:                                              ; preds = %98, %84, %83
  %102 = phi i32 [ %22, %83 ], [ %18, %84 ], [ %18, %98 ]
  %103 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %13, i32 %16) #11
  %104 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %103, i64 0, i32 1
  store i32 %102, i32* %104, align 4
  %105 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %13, i32 %12) #11
  %106 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %105, i64 0, i32 0
  store i32 %102, i32* %106, align 8
  %107 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %107, align 4
  %110 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %13, i32 %102) #11
  %111 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %110, 0
  %112 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %111, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_8FontFaceEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %7, i32 0) #11
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %1, %3
  %14 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %15 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %14, i32 %12) #11
  br i1 %13, label %41, label %16

16:                                               ; preds = %5
  %17 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %3 to i64
  %18 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %4, i64 0, i32 0
  %19 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %18, i32 0) #11
  %20 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %19 to i64
  %21 = sub i64 %17, %20
  %22 = lshr exact i64 %21, 4
  %23 = trunc i64 %22 to i32
  %24 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %14, i32 %23) #11
  %25 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %12
  br i1 %27, label %39, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %14, i32 %30) #11
  %34 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %14, i32 %32) #11
  %35 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %33, i64 0, i32 1
  store i32 %32, i32* %35, align 4
  %36 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %34, i64 0, i32 0
  store i32 %30, i32* %36, align 8
  %37 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %14, i32 %26) #11
  %38 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %37, i64 0, i32 1
  store i32 %12, i32* %38, align 4
  store i32 %12, i32* %25, align 8
  store i32 %26, i32* %29, align 8
  store i32 %23, i32* %31, align 4
  br label %39

39:                                               ; preds = %16, %28
  %40 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %14, i32 %12) #11
  br label %41

41:                                               ; preds = %39, %5
  %42 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %15, %5 ], [ %40, %39 ]
  %43 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %42, 0
  %44 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %43, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.84"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.82"*, %"class.blink::FontFace"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.84"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.84"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.82"* %0, %"struct.WTF::KeyValuePair.84"* null)
  %9 = load %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.84"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::FontFace"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %40, align 8
  %42 = icmp eq %"class.blink::FontFace"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::FontFace"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::FontFace"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.84"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.84"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::FontFace"* %59, %43
  br i1 %64, label %147, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::FontFace"* %59, inttoptr (i64 -1 to %"class.blink::FontFace"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.84"* %60, %"struct.WTF::KeyValuePair.84"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %73, align 8
  %75 = icmp eq %"class.blink::FontFace"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.84"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.84"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #11
  %80 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::FontFace"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.84"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::FontFace"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.84"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::FontFace"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #11
  br label %97

97:                                               ; preds = %87, %94
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %89, i64 0, i32 1
  %99 = load i32, i32* %2, align 4
  store i32 %99, i32* %98, align 4
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %135, label %102

102:                                              ; preds = %97
  %103 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %104 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %103, i64 0, i32 1
  %105 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %104) #11
  %106 = icmp eq i8* %105, null
  br i1 %106, label %107, label %109, !prof !8

107:                                              ; preds = %102
  %108 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %104, i8* %108) #11
  br label %109

109:                                              ; preds = %107, %102
  %110 = phi i8* [ %108, %107 ], [ %105, %102 ]
  %111 = bitcast i8* %110 to %"class.blink::ThreadState"**
  %112 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 9
  %114 = load i8, i8* %113, align 1, !range !9
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %135, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 13
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %121 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %120, align 8
  %122 = load atomic i64, i64* %91 monotonic, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %121, i64 0, i32 0, i32 0
  %126 = inttoptr i64 %122 to i8*
  %127 = bitcast %"class.blink::MarkingVisitor"* %121 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %128 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, i64 5
  %130 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %129, align 8
  tail call void %130(%"class.blink::Visitor"* %125, i8* nonnull %126, i8* %126, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv) #11
  %131 = load i64, i64* %117, align 8
  br label %132

132:                                              ; preds = %124, %116
  %133 = phi i64 [ %119, %116 ], [ %131, %124 ]
  %134 = add i64 %133, -1
  store i64 %134, i64* %117, align 8
  br label %135

135:                                              ; preds = %97, %109, %132
  %136 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  %139 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = add i32 %140, %138
  %142 = shl i32 %141, 1
  %143 = load i32, i32* %12, align 8
  %144 = icmp ult i32 %142, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %135
  %146 = tail call %"struct.WTF::KeyValuePair.84"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.82"* %0, %"struct.WTF::KeyValuePair.84"* %89)
  br label %147

147:                                              ; preds = %58, %135, %145
  %148 = phi i8 [ 1, %135 ], [ 1, %145 ], [ 0, %58 ]
  %149 = phi %"struct.WTF::KeyValuePair.84"* [ %89, %135 ], [ %146, %145 ], [ %60, %58 ]
  %150 = insertvalue { %"struct.WTF::KeyValuePair.84"*, i8 } undef, %"struct.WTF::KeyValuePair.84"* %149, 0
  %151 = insertvalue { %"struct.WTF::KeyValuePair.84"*, i8 } %150, i8 %148, 1
  ret { %"struct.WTF::KeyValuePair.84"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.84"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.82"*, %"struct.WTF::KeyValuePair.84"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.84"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.82"* %0, i32 %35, %"struct.WTF::KeyValuePair.84"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !9
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.487"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking.487"* %42 to %"struct.WTF::KeyValuePair.84"*
  %44 = call %"struct.WTF::KeyValuePair.84"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.82"* %0, %"struct.WTF::KeyValuePair.84"* %43, i32 %40, %"struct.WTF::KeyValuePair.84"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.84"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.84"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.84"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.82"*, i32, %"struct.WTF::KeyValuePair.84"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !8

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !9
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.84"* %32, null
  br i1 %33, label %78, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.84"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %78

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.487"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking.487"* %44 to %"struct.WTF::KeyValuePair.84"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %75, %39
  %48 = phi %"struct.WTF::KeyValuePair.84"* [ null, %39 ], [ %65, %75 ]
  %49 = bitcast %"class.WTF::HashTable.82"* %0 to %"class.blink::HeapHashTableBacking.487"**
  store %"class.blink::HeapHashTableBacking.487"* %44, %"class.blink::HeapHashTableBacking.487"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.487", %"class.blink::HeapHashTableBacking.487"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #11
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.84"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.84"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.82"* %0, %"struct.WTF::KeyValuePair.84"* %42, i32 %1, %"struct.WTF::KeyValuePair.84"* %48)
  br label %78

58:                                               ; preds = %39, %75
  %59 = phi i64 [ %76, %75 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.84"* [ %65, %75 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.84"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.84"* %64, %"struct.WTF::KeyValuePair.84"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.84"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.84"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %75

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.84"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %61, i64 %59, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  br label %75

75:                                               ; preds = %68, %70
  %76 = add nuw nsw i64 %59, 1
  %77 = icmp eq i64 %76, %43
  br i1 %77, label %47, label %58

78:                                               ; preds = %34, %30, %55
  %79 = phi %"struct.WTF::KeyValuePair.84"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.84"* %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.84"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.82"*, %"struct.WTF::KeyValuePair.84"*, i32, %"struct.WTF::KeyValuePair.84"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.82", align 8
  %6 = bitcast %"class.WTF::HashTable.82"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.82"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.84"* %1, %"struct.WTF::KeyValuePair.84"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.84"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.84"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"** %19, align 8
  br label %57

21:                                               ; preds = %80
  %22 = bitcast %"class.WTF::HashTable.82"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %81, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.84"* [ null, %15 ], [ %83, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.82"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #11
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.82"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.82"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #11
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #11
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.84"* %29

57:                                               ; preds = %18, %80
  %58 = phi i32 [ %13, %18 ], [ %81, %80 ]
  %59 = phi %"struct.WTF::KeyValuePair.84"* [ %20, %18 ], [ %82, %80 ]
  %60 = phi %"struct.WTF::KeyValuePair.84"* [ null, %18 ], [ %83, %80 ]
  %61 = phi i32 [ 0, %18 ], [ %84, %80 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.84"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %80
    i64 0, label %80
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.84"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.82"* nonnull %5, %"class.blink::Member.60"* dereferenceable(8) %67) #11
  %69 = extractvalue { %"struct.WTF::KeyValuePair.84"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.84"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %59, i64 %62, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  %75 = load %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"** %19, align 8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %75, i64 %62
  %77 = icmp eq %"struct.WTF::KeyValuePair.84"* %76, %3
  %78 = select i1 %77, %"struct.WTF::KeyValuePair.84"* %69, %"struct.WTF::KeyValuePair.84"* %60
  %79 = load i32, i32* %12, align 8
  br label %80

80:                                               ; preds = %57, %57, %66
  %81 = phi i32 [ %58, %57 ], [ %79, %66 ], [ %58, %57 ]
  %82 = phi %"struct.WTF::KeyValuePair.84"* [ %59, %57 ], [ %75, %66 ], [ %59, %57 ]
  %83 = phi %"struct.WTF::KeyValuePair.84"* [ %60, %57 ], [ %78, %66 ], [ %60, %57 ]
  %84 = add i32 %61, 1
  %85 = icmp eq i32 %84, %81
  br i1 %85, label %21, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.487"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.487"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.487"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([433 x i8], [433 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_8FontFaceEEENS_12KeyValuePairIS6_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IjEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.84"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !8

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair.84"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.84"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.82"*, %"class.blink::Member.60"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member.60"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.84"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %34, align 8
  %36 = icmp eq %"class.blink::FontFace"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::FontFace"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.84"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.84"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.84"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.84"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.84"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::FontFace"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %67, align 8
  %69 = icmp eq %"class.blink::FontFace"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::FontFace"* %63, inttoptr (i64 -1 to %"class.blink::FontFace"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.84"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %79, align 8
  %81 = icmp eq %"class.blink::FontFace"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.84"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.84"*, i8 } undef, %"struct.WTF::KeyValuePair.84"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.84"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.84"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE5eraseEPKSG_(%"class.WTF::HashTable.33"*, %"struct.WTF::KeyValuePair.35"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #11
  br label %19

19:                                               ; preds = %2, %15, %18
  %20 = bitcast %"struct.WTF::KeyValuePair.35"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %20, align 8
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %1, i64 0, i32 1
  %22 = bitcast %"class.blink::Member.36"* %21 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, 1
  %26 = and i32 %25, 2147483647
  %27 = and i32 %24, -2147483648
  %28 = or i32 %26, %27
  store i32 %28, i32* %23, align 8
  %29 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, -1
  store i32 %31, i32* %29, align 4
  %32 = mul i32 %31, 6
  %33 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp ult i32 %32, %34
  %36 = icmp ugt i32 %34, 8
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %67

38:                                               ; preds = %19
  %39 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %40 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %39, i64 0, i32 1
  %41 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %40) #11
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45, !prof !8

43:                                               ; preds = %38
  %44 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %40, i8* %44) #11
  br label %45

45:                                               ; preds = %43, %38
  %46 = phi i8* [ %44, %43 ], [ %41, %38 ]
  %47 = bitcast i8* %46 to %"class.blink::ThreadState"**
  %48 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 6
  %50 = load i8, i8* %49, align 8, !range !9
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 16
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %67, label %56

56:                                               ; preds = %45, %52
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 13
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = load i32, i32* %33, align 8
  %62 = lshr i32 %61, 1
  %63 = zext i32 %62 to i64
  %64 = tail call %"class.blink::HeapHashTableBacking.503"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE4CallEm(i64 %63) #11
  %65 = bitcast %"class.blink::HeapHashTableBacking.503"* %64 to %"struct.WTF::KeyValuePair.35"*
  %66 = tail call %"struct.WTF::KeyValuePair.35"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE8RehashToEPSG_jSP_(%"class.WTF::HashTable.33"* %0, %"struct.WTF::KeyValuePair.35"* %65, i32 %62, %"struct.WTF::KeyValuePair.35"* null) #11
  br label %67

67:                                               ; preds = %52, %19, %60, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.35"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE12ExpandBufferEjPSG_Rb(%"class.WTF::HashTable.33"*, i32, %"struct.WTF::KeyValuePair.35"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !8

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !9
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.35"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.35"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.503"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking.503"* %44 to %"struct.WTF::KeyValuePair.35"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.35"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.33"* %0 to %"class.blink::HeapHashTableBacking.503"**
  store %"class.blink::HeapHashTableBacking.503"* %44, %"class.blink::HeapHashTableBacking.503"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.503", %"class.blink::HeapHashTableBacking.503"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #11
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.35"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.35"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE8RehashToEPSG_jSP_(%"class.WTF::HashTable.33"* %0, %"struct.WTF::KeyValuePair.35"* %42, i32 %1, %"struct.WTF::KeyValuePair.35"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.35"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.35"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.35"* %64, %"struct.WTF::KeyValuePair.35"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %62, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.35"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.35"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %64, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #11
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.35"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member.36"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.36"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %96, i64 %59, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.35"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.35"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.35"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE8RehashToEPSG_jSP_(%"class.WTF::HashTable.33"*, %"struct.WTF::KeyValuePair.35"*, i32, %"struct.WTF::KeyValuePair.35"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.33", align 8
  %6 = bitcast %"class.WTF::HashTable.33"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.33"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.35"* %1, %"struct.WTF::KeyValuePair.35"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.35"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.35"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"** %19, align 8
  br label %88

21:                                               ; preds = %131
  %22 = bitcast %"class.WTF::HashTable.33"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %132, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.35"* [ null, %15 ], [ %134, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.33"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #11
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.33"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.33"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #11
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.35"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %82, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %79, %54
  %57 = phi i64 [ 0, %54 ], [ %80, %79 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %50, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  switch i64 %61, label %62 [
    i64 -1, label %79
    i64 0, label %79
  ]

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #11
  br label %75

75:                                               ; preds = %74, %71
  %76 = bitcast %"struct.WTF::KeyValuePair.35"* %58 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %50, i64 %57, i32 1
  %78 = bitcast %"class.blink::Member.36"* %77 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %75, %56, %56
  %80 = add nuw nsw i64 %57, 1
  %81 = icmp eq i64 %80, %55
  br i1 %81, label %82, label %56

82:                                               ; preds = %79, %52
  %83 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %83) #11
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %84

84:                                               ; preds = %49, %82
  %85 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, -2147483648
  store i32 %87, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.35"* %29

88:                                               ; preds = %18, %131
  %89 = phi i32 [ %13, %18 ], [ %132, %131 ]
  %90 = phi %"struct.WTF::KeyValuePair.35"* [ %20, %18 ], [ %133, %131 ]
  %91 = phi %"struct.WTF::KeyValuePair.35"* [ null, %18 ], [ %134, %131 ]
  %92 = phi i32 [ 0, %18 ], [ %135, %131 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %90, i64 %93
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"struct.WTF::KeyValuePair.35"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %98 [
    i64 -1, label %131
    i64 0, label %131
  ]

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %94, i64 0, i32 0
  %100 = call { %"struct.WTF::KeyValuePair.35"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.33"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %99) #11
  %101 = extractvalue { %"struct.WTF::KeyValuePair.35"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #11
  br label %118

118:                                              ; preds = %98, %114, %117
  %119 = load i64, i64* %96, align 8
  %120 = bitcast %"struct.WTF::KeyValuePair.35"* %101 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %101, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %90, i64 %93, i32 1
  %123 = bitcast %"class.blink::Member.36"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member.36"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"** %19, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %126, i64 %93
  %128 = icmp eq %"struct.WTF::KeyValuePair.35"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair.35"* %101, %"struct.WTF::KeyValuePair.35"* %91
  %130 = load i32, i32* %12, align 8
  br label %131

131:                                              ; preds = %88, %88, %118
  %132 = phi i32 [ %89, %88 ], [ %130, %118 ], [ %89, %88 ]
  %133 = phi %"struct.WTF::KeyValuePair.35"* [ %90, %88 ], [ %126, %118 ], [ %90, %88 ]
  %134 = phi %"struct.WTF::KeyValuePair.35"* [ %91, %88 ], [ %129, %118 ], [ %91, %88 ]
  %135 = add i32 %92, 1
  %136 = icmp eq i32 %135, %132
  br i1 %136, label %21, label %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.503"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS5_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS1_21SimpleClassHashTraitsIS7_EENS1_10HashTraitsIS9_EEEEEEEENS1_24KeyValuePairKeyExtractorENS1_15CaseFoldingHashENS1_18HashMapValueTraitsINSD_IS3_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEE14AllocateObjectISQ_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.503"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.503"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS5_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS1_21SimpleClassHashTraitsIS7_EENS1_10HashTraitsIS9_EEEEEEEENS1_24KeyValuePairKeyExtractorENS1_15CaseFoldingHashENS1_18HashMapValueTraitsINSD_IS3_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEE14AllocateObjectISQ_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([859 x i8], [859 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_11HeapHashMapINS1_23FontSelectionRequestKeyENS6_INS1_20CSSSegmentedFontFaceEEENS1_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS8_EENS_10HashTraitsISA_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #11
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_11HeapHashMapINS5_23FontSelectionRequestKeyENS6_INS5_20CSSSegmentedFontFaceEEENS5_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS8_EENS_10HashTraitsISA_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSE_IS3_EENSE_ISH_EEEESM_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #11
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS7_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS3_21SimpleClassHashTraitsIS9_EENS3_10HashTraitsISB_EEEEEEEENS3_24KeyValuePairKeyExtractorENS3_15CaseFoldingHashENS3_18HashMapValueTraitsINSF_IS5_EENSF_ISI_EEEESN_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !8

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.35"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %22, i64 %25, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #11
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_11HeapHashMapINS5_23FontSelectionRequestKeyENS6_INS5_20CSSSegmentedFontFaceEEENS5_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS8_EENS_10HashTraitsISA_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSE_IS3_EENSE_ISH_EEEESM_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.35"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !8

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.35"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.36"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS2_EENS7_10HashTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.36"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS2_EENS7_10HashTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS2_EENS7_10HashTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %0, i8** %5) #11
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #11
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS4_NS3_6MemberINS3_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS3_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS4_EENS_10HashTraitsIS8_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #11
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS4_NS3_6MemberINS3_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS3_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS4_EENS_10HashTraitsIS8_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.44"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !8

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %105, %20
  ret void

33:                                               ; preds = %105, %30
  %34 = phi i64 [ 0, %30 ], [ %106, %105 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %3, i64 %34
  br i1 %28, label %36, label %75

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %3, i64 %34, i32 1
  %38 = bitcast %"struct.WTF::KeyValuePair.44"* %35 to i64*
  %39 = load atomic i64, i64* %38 monotonic, align 8
  %40 = trunc i64 %39 to i16
  %41 = lshr i64 %39, 32
  %42 = trunc i64 %41 to i16
  %43 = lshr i64 %39, 40
  %44 = lshr i64 %39, 48
  %45 = trunc i64 %44 to i8
  %46 = icmp eq i16 %40, 0
  br i1 %46, label %47, label %64

47:                                               ; preds = %36
  %48 = lshr i64 %39, 24
  %49 = lshr i64 %39, 16
  %50 = trunc i64 %49 to i16
  %51 = shl nuw nsw i64 %48, 8
  %52 = trunc i64 %51 to i16
  %53 = and i16 %50, 255
  %54 = or i16 %53, %52
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %64

56:                                               ; preds = %47
  %57 = shl nuw nsw i64 %43, 8
  %58 = trunc i64 %57 to i16
  %59 = and i16 %42, 255
  %60 = or i16 %59, %58
  %61 = icmp eq i16 %60, 0
  %62 = icmp ne i8 %45, 0
  %63 = or i1 %62, %61
  br i1 %63, label %105, label %66

64:                                               ; preds = %36, %47
  %65 = icmp eq i8 %45, 0
  br i1 %65, label %66, label %105

66:                                               ; preds = %64, %56
  %67 = bitcast %"class.blink::Member.10"* %37 to i64*
  %68 = load atomic i64, i64* %67 monotonic, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %105, label %70

70:                                               ; preds = %66
  %71 = inttoptr i64 %68 to i8*
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, i64 5
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, align 8
  tail call void %74(%"class.blink::Visitor"* %0, i8* nonnull %71, i8* nonnull %71, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20CSSSegmentedFontFaceEE5TraceEPNS_7VisitorEPKv) #11
  br label %105

75:                                               ; preds = %33
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i16, i16* %76, align 2
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %3, i64 %34, i32 0, i32 0, i32 1, i32 0
  %81 = load i16, i16* %80, align 2
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %83, label %91

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %3, i64 %34, i32 0, i32 0, i32 2, i32 0
  %85 = load i16, i16* %84, align 2
  %86 = icmp eq i16 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %3, i64 %34, i32 0, i32 1
  %89 = load i8, i8* %88, align 2, !range !9
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %105, label %91

91:                                               ; preds = %75, %79, %83, %87
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %3, i64 %34, i32 0, i32 1
  %93 = load i8, i8* %92, align 2, !range !9
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %105

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %3, i64 %34, i32 1
  %97 = bitcast %"class.blink::Member.10"* %96 to i64*
  %98 = load atomic i64, i64* %97 monotonic, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %105, label %100

100:                                              ; preds = %95
  %101 = inttoptr i64 %98 to i8*
  %102 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %103 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %102, i64 5
  %104 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %103, align 8
  tail call void %104(%"class.blink::Visitor"* %0, i8* nonnull %101, i8* nonnull %101, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20CSSSegmentedFontFaceEE5TraceEPNS_7VisitorEPKv) #11
  br label %105

105:                                              ; preds = %64, %91, %56, %87, %100, %95, %66, %70
  %106 = add nuw nsw i64 %34, 1
  %107 = icmp eq i64 %106, %23
  br i1 %107, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.35"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.33"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %12) #11
  %14 = and i32 %13, %9
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %6, i64 %15
  %17 = ptrtoint %"struct.WTF::KeyValuePair.35"* %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %16, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %46, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %25 = bitcast %"class.WTF::StringView"* %4 to i8*
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %30 = xor i32 %13, -1
  %31 = lshr i32 %13, 23
  %32 = add i32 %31, %30
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  %43 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %52

44:                                               ; preds = %71
  %45 = ptrtoint %"struct.WTF::KeyValuePair.35"* %77 to i64
  br label %46

46:                                               ; preds = %44, %2
  %47 = phi i64 [ %17, %2 ], [ %45, %44 ]
  %48 = phi %"struct.WTF::KeyValuePair.35"* [ null, %2 ], [ %72, %44 ]
  %49 = icmp eq %"struct.WTF::KeyValuePair.35"* %48, null
  %50 = ptrtoint %"struct.WTF::KeyValuePair.35"* %48 to i64
  %51 = select i1 %49, i64 %47, i64 %50
  br label %82

52:                                               ; preds = %71, %21
  %53 = phi %"struct.WTF::KeyValuePair.35"* [ null, %21 ], [ %72, %71 ]
  %54 = phi i64 [ %17, %21 ], [ %78, %71 ]
  %55 = phi %"struct.WTF::KeyValuePair.35"* [ %16, %21 ], [ %77, %71 ]
  %56 = phi i64 [ %15, %21 ], [ %76, %71 ]
  %57 = phi i64 [ 0, %21 ], [ %74, %71 ]
  %58 = bitcast %"struct.WTF::KeyValuePair.35"* %55 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, inttoptr (i64 -1 to i8*)
  br i1 %60, label %71, label %61

61:                                               ; preds = %52
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  store i8* %59, i8** %43, align 8
  %63 = getelementptr inbounds i8, i8* %59, i64 12
  store i8* %63, i8** %23, align 8
  %64 = getelementptr inbounds i8, i8* %59, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %26, align 8
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %28, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %29, align 8
  %70 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  br i1 %70, label %82, label %71

71:                                               ; preds = %61, %52
  %72 = phi %"struct.WTF::KeyValuePair.35"* [ %53, %61 ], [ %55, %52 ]
  %73 = icmp eq i64 %57, 0
  %74 = select i1 %73, i64 %42, i64 %57
  %75 = add i64 %74, %56
  %76 = and i64 %75, %10
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %6, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.35"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %44, label %52

82:                                               ; preds = %61, %46
  %83 = phi i64 [ %51, %46 ], [ %54, %61 ]
  %84 = phi i8 [ 0, %46 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.35"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.35"*, i8 } undef, %"struct.WTF::KeyValuePair.35"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.35"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.35"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.33"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.35"* %6, null
  br i1 %7, label %71, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %14) #11
  %16 = and i32 %15, %11
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %6, i64 %17
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %71, label %22

22:                                               ; preds = %8
  %23 = bitcast %"class.WTF::StringView"* %3 to i8*
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %26 = bitcast %"class.WTF::StringView"* %4 to i8*
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %29 = bitcast i8** %28 to %"class.WTF::StringImpl"**
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = xor i32 %15, -1
  %32 = lshr i32 %15, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %45

45:                                               ; preds = %62, %22
  %46 = phi %"struct.WTF::KeyValuePair.35"* [ %18, %22 ], [ %67, %62 ]
  %47 = phi i64 [ %17, %22 ], [ %66, %62 ]
  %48 = phi i64 [ 0, %22 ], [ %64, %62 ]
  %49 = bitcast %"struct.WTF::KeyValuePair.35"* %46 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, inttoptr (i64 -1 to i8*)
  br i1 %51, label %62, label %52

52:                                               ; preds = %45
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  store i8* %50, i8** %44, align 8
  %54 = getelementptr inbounds i8, i8* %50, i64 12
  store i8* %54, i8** %24, align 8
  %55 = getelementptr inbounds i8, i8* %50, i64 4
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #11
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %27, align 8
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 1
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %29, align 8
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %30, align 8
  %61 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  br i1 %61, label %71, label %62

62:                                               ; preds = %52, %45
  %63 = icmp eq i64 %48, 0
  %64 = select i1 %63, i64 %43, i64 %48
  %65 = add i64 %64, %47
  %66 = and i64 %65, %12
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %6, i64 %66
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %71, label %45

71:                                               ; preds = %52, %62, %2, %8
  %72 = phi %"struct.WTF::KeyValuePair.35"* [ null, %2 ], [ null, %8 ], [ null, %62 ], [ %46, %52 ]
  %73 = icmp eq %"struct.WTF::KeyValuePair.35"* %72, null
  %74 = load %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"** %5, align 8
  %75 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %74, i64 %77
  %79 = select i1 %73, %"struct.WTF::KeyValuePair.35"* %78, %"struct.WTF::KeyValuePair.35"* %72
  %80 = insertvalue { %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"* } undef, %"struct.WTF::KeyValuePair.35"* %79, 0
  %81 = insertvalue { %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"* } %80, %"struct.WTF::KeyValuePair.35"* %78, 1
  ret { %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"* } %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"* } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.49"*, %"class.blink::StyleRuleFontFace"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::StyleRuleFontFace"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.51"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::StyleRuleFontFace"*, %"class.blink::StyleRuleFontFace"** %34, align 8
  %36 = icmp eq %"class.blink::StyleRuleFontFace"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::StyleRuleFontFace"*, %"class.blink::StyleRuleFontFace"** %54, align 8
  %56 = icmp eq %"class.blink::StyleRuleFontFace"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::StyleRuleFontFace"*, %"class.blink::StyleRuleFontFace"** %63, align 8
  %65 = icmp eq %"class.blink::StyleRuleFontFace"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.51"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.51"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.51"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.51"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"* } undef, %"struct.WTF::KeyValuePair.51"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"* } %78, %"struct.WTF::KeyValuePair.51"* %77, 1
  ret { %"struct.WTF::KeyValuePair.51"*, %"struct.WTF::KeyValuePair.51"* } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE5eraseEPKS9_(%"class.WTF::HashTable.49"*, %"struct.WTF::KeyValuePair.51"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.WTF::KeyValuePair.51"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.51", %"struct.WTF::KeyValuePair.51"* %1, i64 0, i32 1
  %5 = bitcast %"class.blink::Member.60"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  %9 = and i32 %8, 2147483647
  %10 = and i32 %7, -2147483648
  %11 = or i32 %9, %10
  store i32 %11, i32* %6, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  store i32 %14, i32* %12, align 4
  %15 = mul i32 %14, 6
  %16 = getelementptr inbounds %"class.WTF::HashTable.49", %"class.WTF::HashTable.49"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %15, %17
  %19 = icmp ugt i32 %17, 8
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %50

21:                                               ; preds = %2
  %22 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %23 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %22, i64 0, i32 1
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #11
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28, !prof !8

26:                                               ; preds = %21
  %27 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %23, i8* %27) #11
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %30 = bitcast i8* %29 to %"class.blink::ThreadState"**
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !9
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %50, label %39

39:                                               ; preds = %28, %35
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 13
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = load i32, i32* %16, align 8
  %45 = lshr i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_17StyleRuleFontFaceEEENS2_12KeyValuePairIS7_NS4_INS_8FontFaceEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #11
  %48 = bitcast %"class.blink::HeapHashTableBacking"* %47 to %"struct.WTF::KeyValuePair.51"*
  %49 = tail call %"struct.WTF::KeyValuePair.51"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_17StyleRuleFontFaceEEENS_12KeyValuePairIS5_NS2_INS1_8FontFaceEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.49"* %0, %"struct.WTF::KeyValuePair.51"* %48, i32 %45, %"struct.WTF::KeyValuePair.51"* null) #11
  br label %50

50:                                               ; preds = %35, %2, %43, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %71, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %14) #11
  %16 = and i32 %15, %11
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %17
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %71, label %22

22:                                               ; preds = %8
  %23 = bitcast %"class.WTF::StringView"* %3 to i8*
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %26 = bitcast %"class.WTF::StringView"* %4 to i8*
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %29 = bitcast i8** %28 to %"class.WTF::StringImpl"**
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = xor i32 %15, -1
  %32 = lshr i32 %15, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %45

45:                                               ; preds = %62, %22
  %46 = phi %"struct.WTF::KeyValuePair"* [ %18, %22 ], [ %67, %62 ]
  %47 = phi i64 [ %17, %22 ], [ %66, %62 ]
  %48 = phi i64 [ 0, %22 ], [ %64, %62 ]
  %49 = bitcast %"struct.WTF::KeyValuePair"* %46 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, inttoptr (i64 -1 to i8*)
  br i1 %51, label %62, label %52

52:                                               ; preds = %45
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  store i8* %50, i8** %44, align 8
  %54 = getelementptr inbounds i8, i8* %50, i64 12
  store i8* %54, i8** %24, align 8
  %55 = getelementptr inbounds i8, i8* %50, i64 4
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #11
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %27, align 8
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 1
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %29, align 8
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %30, align 8
  %61 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  br i1 %61, label %71, label %62

62:                                               ; preds = %52, %45
  %63 = icmp eq i64 %48, 0
  %64 = select i1 %63, i64 %43, i64 %48
  %65 = add i64 %64, %47
  %66 = and i64 %65, %12
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %66
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %71, label %45

71:                                               ; preds = %52, %62, %2, %8
  %72 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ null, %8 ], [ null, %62 ], [ %46, %52 ]
  %73 = icmp eq %"struct.WTF::KeyValuePair"* %72, null
  %74 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %75 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %74, i64 %77
  %79 = select i1 %73, %"struct.WTF::KeyValuePair"* %78, %"struct.WTF::KeyValuePair"* %72
  %80 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %79, 0
  %81 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %80, %"struct.WTF::KeyValuePair"* %78, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %81
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.9"* @_ZNK3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SE_SF_EES2_EEPKS7_RKT0_(%"class.WTF::HashTable.7"*, %"struct.blink::FontSelectionCapabilities"* dereferenceable(14)) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.blink::FontSelectionCapabilities", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.9"* %5, null
  br i1 %6, label %123, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZN5blink29FontSelectionCapabilitiesHash7GetHashERKNS_25FontSelectionCapabilitiesE(%"struct.blink::FontSelectionCapabilities"* dereferenceable(14) %1) #11
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 1, i32 1, i32 0
  %19 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 2, i32 1, i32 0
  %21 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %1, i64 0, i32 3
  %22 = bitcast %"struct.blink::FontSelectionCapabilities"* %3 to i8*
  %23 = bitcast %"struct.blink::FontSelectionCapabilities"* %3 to i64*
  %24 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %3, i64 0, i32 2
  %25 = bitcast %"struct.blink::FontSelectionRange"* %24 to i48*
  %26 = xor i32 %12, -1
  %27 = lshr i32 %12, 23
  %28 = add i32 %27, %26
  %29 = shl i32 %28, 12
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 7
  %32 = xor i32 %31, %30
  %33 = shl i32 %32, 2
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 20
  %36 = xor i32 %35, %34
  %37 = or i32 %36, 1
  %38 = zext i32 %37 to i64
  br label %39

39:                                               ; preds = %118, %7
  %40 = phi i64 [ 0, %7 ], [ %120, %118 ]
  %41 = phi i64 [ %14, %7 ], [ %122, %118 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %41
  %43 = load i16, i16* %15, align 2
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i16, i16* %44, align 2
  %46 = icmp eq i16 %45, %43
  br i1 %46, label %47, label %77

47:                                               ; preds = %39
  %48 = load i16, i16* %16, align 2
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %41, i32 0, i32 0, i32 1, i32 0
  %50 = load i16, i16* %49, align 2
  %51 = icmp eq i16 %50, %48
  br i1 %51, label %52, label %77

52:                                               ; preds = %47
  %53 = load i16, i16* %17, align 2
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %41, i32 0, i32 1, i32 0, i32 0
  %55 = load i16, i16* %54, align 2
  %56 = icmp eq i16 %55, %53
  br i1 %56, label %57, label %77

57:                                               ; preds = %52
  %58 = load i16, i16* %18, align 2
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %41, i32 0, i32 1, i32 1, i32 0
  %60 = load i16, i16* %59, align 2
  %61 = icmp eq i16 %60, %58
  br i1 %61, label %62, label %77

62:                                               ; preds = %57
  %63 = load i16, i16* %19, align 2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %41, i32 0, i32 2, i32 0, i32 0
  %65 = load i16, i16* %64, align 2
  %66 = icmp eq i16 %65, %63
  br i1 %66, label %67, label %77

67:                                               ; preds = %62
  %68 = load i16, i16* %20, align 2
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %41, i32 0, i32 2, i32 1, i32 0
  %70 = load i16, i16* %69, align 2
  %71 = icmp eq i16 %70, %68
  br i1 %71, label %72, label %77

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %41, i32 0, i32 3
  %74 = load i8, i8* %73, align 2, !range !9
  %75 = load i8, i8* %21, align 2, !range !9
  %76 = icmp eq i8 %74, %75
  br i1 %76, label %123, label %77

77:                                               ; preds = %62, %52, %39, %47, %57, %67, %72
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %22) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 14, i1 false) #11
  call void @_ZN5blink25FontSelectionCapabilitiesC2Ev(%"struct.blink::FontSelectionCapabilities"* nonnull %3) #11
  %78 = load i64, i64* %23, align 8
  %79 = load i48, i48* %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %22) #11
  %80 = trunc i64 %78 to i16
  %81 = lshr i64 %78, 32
  %82 = trunc i64 %81 to i16
  %83 = lshr i64 %78, 48
  %84 = trunc i64 %83 to i16
  %85 = load i16, i16* %44, align 2
  %86 = icmp eq i16 %85, %80
  br i1 %86, label %87, label %118

87:                                               ; preds = %77
  %88 = lshr i64 %78, 16
  %89 = trunc i64 %88 to i16
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %41, i32 0, i32 0, i32 1, i32 0
  %91 = load i16, i16* %90, align 2
  %92 = icmp eq i16 %91, %89
  br i1 %92, label %93, label %118

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %41, i32 0, i32 1, i32 0, i32 0
  %95 = load i16, i16* %94, align 2
  %96 = icmp eq i16 %95, %82
  br i1 %96, label %97, label %118

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %41, i32 0, i32 1, i32 1, i32 0
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, %84
  br i1 %100, label %101, label %118

101:                                              ; preds = %97
  %102 = trunc i48 %79 to i16
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %41, i32 0, i32 2, i32 0, i32 0
  %104 = load i16, i16* %103, align 2
  %105 = icmp eq i16 %104, %102
  br i1 %105, label %106, label %118

106:                                              ; preds = %101
  %107 = lshr i48 %79, 16
  %108 = trunc i48 %107 to i16
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %41, i32 0, i32 2, i32 1, i32 0
  %110 = load i16, i16* %109, align 2
  %111 = icmp eq i16 %110, %108
  br i1 %111, label %112, label %118

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 %41, i32 0, i32 3
  %114 = load i8, i8* %113, align 2, !range !9
  %115 = lshr i48 %79, 32
  %116 = trunc i48 %115 to i8
  %117 = icmp eq i8 %114, %116
  br i1 %117, label %123, label %118

118:                                              ; preds = %101, %93, %77, %87, %97, %106, %112
  %119 = icmp eq i64 %40, 0
  %120 = select i1 %119, i64 %38, i64 %40
  %121 = add i64 %120, %41
  %122 = and i64 %121, %11
  br label %39

123:                                              ; preds = %112, %72, %2
  %124 = phi %"struct.WTF::KeyValuePair.9"* [ null, %2 ], [ %42, %72 ], [ null, %112 ]
  ret %"struct.WTF::KeyValuePair.9"* %124
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.7"*, %"struct.WTF::KeyValuePair.9"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %1, i64 0, i32 0
  tail call void @_ZN5blink25FontSelectionCapabilitiesC2EN3WTF25HashTableDeletedValueTypeE(%"struct.blink::FontSelectionCapabilities"* %3, i32 0) #11
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %1, i64 0, i32 1
  %5 = bitcast %"class.blink::Member.10"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  %9 = and i32 %8, 2147483647
  %10 = and i32 %7, -2147483648
  %11 = or i32 %9, %10
  store i32 %11, i32* %6, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  store i32 %14, i32* %12, align 4
  %15 = mul i32 %14, 6
  %16 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %15, %17
  %19 = icmp ugt i32 %17, 8
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %50

21:                                               ; preds = %2
  %22 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %23 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %22, i64 0, i32 1
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #11
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28, !prof !8

26:                                               ; preds = %21
  %27 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %23, i8* %27) #11
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %30 = bitcast i8* %29 to %"class.blink::ThreadState"**
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !9
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %50, label %39

39:                                               ; preds = %28, %35
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 13
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = load i32, i32* %16, align 8
  %45 = lshr i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = tail call %"class.blink::HeapHashTableBacking.461"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_25FontSelectionCapabilitiesENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_29FontSelectionCapabilitiesHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #11
  %48 = bitcast %"class.blink::HeapHashTableBacking.461"* %47 to %"struct.WTF::KeyValuePair.9"*
  %49 = tail call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableIN5blink25FontSelectionCapabilitiesENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_29FontSelectionCapabilitiesHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.7"* %0, %"struct.WTF::KeyValuePair.9"* %48, i32 %45, %"struct.WTF::KeyValuePair.9"* null) #11
  br label %50

50:                                               ; preds = %35, %2, %43, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25FontSelectionCapabilitiesC2EN3WTF25HashTableDeletedValueTypeE(%"struct.blink::FontSelectionCapabilities"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !10

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  br label %9

9:                                                ; preds = %2, %5, %8
  %10 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17, !prof !10

13:                                               ; preds = %9
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  br label %17

17:                                               ; preds = %9, %13, %16
  %18 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  %19 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 0, i32 0, i32 0
  store i16 %10, i16* %19, align 2
  %20 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 0, i32 1, i32 0
  store i16 %18, i16* %20, align 2
  %21 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i8*) acquire, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %27, !prof !10

23:                                               ; preds = %17
  %24 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  br label %27

27:                                               ; preds = %17, %23, %26
  %28 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  %29 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i8*) acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %35, !prof !10

31:                                               ; preds = %27
  %32 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %31
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  br label %35

35:                                               ; preds = %27, %31, %34
  %36 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  %37 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 1, i32 0, i32 0
  store i16 %28, i16* %37, align 2
  %38 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 1, i32 1, i32 0
  store i16 %36, i16* %38, align 2
  %39 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i8*) acquire, align 8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %45, !prof !10

41:                                               ; preds = %35
  %42 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  br label %45

45:                                               ; preds = %35, %41, %44
  %46 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  %47 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i8*) acquire, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %53, !prof !10

49:                                               ; preds = %45
  %50 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %49
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue) #11
  br label %53

53:                                               ; preds = %45, %49, %52
  %54 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22FontSelectionZeroValueEvE24s_fontSelectionZeroValue to i16*), align 2
  %55 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 2, i32 0, i32 0
  store i16 %46, i16* %55, align 2
  %56 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 2, i32 1, i32 0
  store i16 %54, i16* %56, align 2
  %57 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 3
  store i8 1, i8* %57, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE5eraseEPKSF_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #11
  br label %19

19:                                               ; preds = %2, %15, %18
  %20 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %20, align 8
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %22 = bitcast %"class.blink::Member"* %21 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, 1
  %26 = and i32 %25, 2147483647
  %27 = and i32 %24, -2147483648
  %28 = or i32 %26, %27
  store i32 %28, i32* %23, align 8
  %29 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, -1
  store i32 %31, i32* %29, align 4
  %32 = mul i32 %31, 6
  %33 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp ult i32 %32, %34
  %36 = icmp ugt i32 %34, 8
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %67

38:                                               ; preds = %19
  %39 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %40 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %39, i64 0, i32 1
  %41 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %40) #11
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45, !prof !8

43:                                               ; preds = %38
  %44 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %40, i8* %44) #11
  br label %45

45:                                               ; preds = %43, %38
  %46 = phi i8* [ %44, %43 ], [ %41, %38 ]
  %47 = bitcast i8* %46 to %"class.blink::ThreadState"**
  %48 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 6
  %50 = load i8, i8* %49, align 8, !range !9
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 16
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %67, label %56

56:                                               ; preds = %45, %52
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 13
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = load i32, i32* %33, align 8
  %62 = lshr i32 %61, 1
  %63 = zext i32 %62 to i64
  %64 = tail call %"class.blink::HeapHashTableBacking.447"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_25FontSelectionCapabilitiesENS6_INS_20CSSSegmentedFontFaceEEENS_29FontSelectionCapabilitiesHashENS2_10HashTraitsIS8_EENSC_ISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESL_NS_13HeapAllocatorEEEEEE4CallEm(i64 %63) #11
  %65 = bitcast %"class.blink::HeapHashTableBacking.447"* %64 to %"struct.WTF::KeyValuePair"*
  %66 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_25FontSelectionCapabilitiesENS4_INS3_20CSSSegmentedFontFaceEEENS3_29FontSelectionCapabilitiesHashENS_10HashTraitsIS6_EENSA_IS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSA_IS1_EENSA_ISE_EEEESJ_NS3_13HeapAllocatorEE8RehashToEPSF_jSO_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %65, i32 %62, %"struct.WTF::KeyValuePair"* null) #11
  br label %67

67:                                               ; preds = %52, %19, %60, %56
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5eraseENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEE(%"class.WTF::LinkedHashSet"*, %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* byval(%"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper") align 8) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %3, i64 0, i32 0
  %5 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %4, i32 0) #11, !noalias !12
  %6 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %8, align 8
  %10 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %9, %5
  br i1 %10, label %53, label %11

11:                                               ; preds = %2
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #11
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !8

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #11
  br label %18

18:                                               ; preds = %11, %16
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 14
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %9, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0
  %28 = tail call { %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.82"* %27, %"class.blink::FontFace"* %26) #11
  %29 = extractvalue { %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"* } %28, 0
  %30 = load %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"** %6, align 8
  %31 = load i32, i32* %7, align 8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %30, i64 %32
  %34 = icmp eq %"struct.WTF::KeyValuePair.84"* %33, %29
  br i1 %34, label %36, label %35

35:                                               ; preds = %18
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.82"* %27, %"struct.WTF::KeyValuePair.84"* %29) #11
  br label %36

36:                                               ; preds = %18, %35
  %37 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %38 = load %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedList"** %37, align 8
  %39 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_8FontFaceEEENS1_13HeapAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE(%"class.WTF::VectorBackedLinkedList"* %3, %"class.WTF::VectorBackedLinkedListNode"* %9, %"class.WTF::VectorBackedLinkedList"* %38)
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #11
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !8

44:                                               ; preds = %36
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #11
  br label %46

46:                                               ; preds = %36, %44
  %47 = phi i8* [ %45, %44 ], [ %42, %36 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 14
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, -1
  store i64 %52, i64* %50, align 8
  br label %53

53:                                               ; preds = %2, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* noalias sret, %"class.WTF::LinkedHashSet"*, %"class.blink::FontFace"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.82"* %4, %"class.blink::FontFace"* %2) #11
  %6 = extractvalue { %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"* } %5, 0
  %7 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %8, i64 %11
  %13 = icmp eq %"struct.WTF::KeyValuePair.84"* %6, %12
  %14 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 1
  br i1 %13, label %15, label %36

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %14, i64 0, i32 0
  %17 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %16, i32 0) #11, !noalias !15
  %18 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode"* %17, %"class.WTF::VectorBackedLinkedListNode"** %18, align 8, !alias.scope !15
  %19 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList"* %14, %"class.WTF::VectorBackedLinkedList"** %19, align 8, !alias.scope !15
  %20 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4, !noalias !18
  %22 = icmp eq i32 %21, 0
  %23 = load %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"** %7, align 8, !noalias !18
  %24 = load i32, i32* %9, align 8, !noalias !18
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %23, i64 %25
  br i1 %22, label %59, label %27

27:                                               ; preds = %15
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %59, label %29

29:                                               ; preds = %27, %33
  %30 = phi %"struct.WTF::KeyValuePair.84"* [ %34, %33 ], [ %23, %27 ]
  %31 = bitcast %"struct.WTF::KeyValuePair.84"* %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !18
  switch i64 %32, label %59 [
    i64 -1, label %33
    i64 0, label %33
  ]

33:                                               ; preds = %29, %29
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %30, i64 1
  %35 = icmp eq %"struct.WTF::KeyValuePair.84"* %34, %26
  br i1 %35, label %59, label %29

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %6, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %14, i64 0, i32 0
  %40 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %39, i32 %38) #11
  %41 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode"* %40, %"class.WTF::VectorBackedLinkedListNode"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList"* %14, %"class.WTF::VectorBackedLinkedList"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4, !noalias !21
  %45 = icmp eq i32 %44, 0
  %46 = load %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"** %7, align 8, !noalias !21
  %47 = load i32, i32* %9, align 8, !noalias !21
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %46, i64 %48
  br i1 %45, label %59, label %50

50:                                               ; preds = %36
  %51 = icmp eq i32 %47, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %50, %56
  %53 = phi %"struct.WTF::KeyValuePair.84"* [ %57, %56 ], [ %46, %50 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.84"* %53 to i64*
  %55 = load i64, i64* %54, align 8, !noalias !21
  switch i64 %55, label %59 [
    i64 -1, label %56
    i64 0, label %56
  ]

56:                                               ; preds = %52, %52
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %53, i64 1
  %58 = icmp eq %"struct.WTF::KeyValuePair.84"* %57, %49
  br i1 %58, label %59, label %52

59:                                               ; preds = %56, %52, %33, %29, %50, %36, %27, %15
  %60 = phi %"struct.WTF::KeyValuePair.84"* [ %26, %15 ], [ %23, %27 ], [ %49, %36 ], [ %46, %50 ], [ %26, %33 ], [ %30, %29 ], [ %53, %52 ], [ %49, %56 ]
  %61 = phi %"struct.WTF::KeyValuePair.84"* [ %26, %15 ], [ %26, %27 ], [ %49, %36 ], [ %49, %50 ], [ %26, %29 ], [ %26, %33 ], [ %49, %52 ], [ %49, %56 ]
  %62 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 1, i32 0, i32 0
  store %"struct.WTF::KeyValuePair.84"* %60, %"struct.WTF::KeyValuePair.84"** %62, align 8, !alias.scope !24
  %63 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::FontFace>, WTF::HashTraits<blink::Member<blink::FontFace> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 1, i32 0, i32 1
  store %"struct.WTF::KeyValuePair.84"* %61, %"struct.WTF::KeyValuePair.84"** %63, align 8, !alias.scope !24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_8FontFaceEEENS1_13HeapAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %5 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %6 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %5, i32 0) #11
  %7 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %6 to i64
  %8 = sub i64 %4, %7
  %9 = lshr exact i64 %8, 4
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %12 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %11, i32 %10) #11
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %11, i32 %16) #11
  %18 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %11, i32 %14) #11
  %19 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %17, i64 0, i32 1
  store i32 %14, i32* %19, align 4
  %20 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %18, i64 0, i32 0
  store i32 %16, i32* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 2
  %22 = bitcast %"class.blink::Member.60"* %21 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %3
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #11
  br label %27

27:                                               ; preds = %3, %25
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %13, align 4
  store i32 -1, i32* %15, align 8
  store i32 %10, i32* %28, align 8
  %30 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, -1
  store i32 %32, i32* %30, align 4
  %33 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.85"* %11, i32 %14) #11
  %34 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %33, 0
  %35 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %34, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.82"*, %"struct.WTF::KeyValuePair.84"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.WTF::KeyValuePair.84"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %1, i64 0, i32 1
  store i32 0, i32* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, 1
  %8 = and i32 %7, 2147483647
  %9 = and i32 %6, -2147483648
  %10 = or i32 %8, %9
  store i32 %10, i32* %5, align 8
  %11 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, -1
  store i32 %13, i32* %11, align 4
  %14 = mul i32 %13, 6
  %15 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp ult i32 %14, %16
  %18 = icmp ugt i32 %16, 8
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %49

20:                                               ; preds = %2
  %21 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %22 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %21, i64 0, i32 1
  %23 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %22) #11
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %27, !prof !8

25:                                               ; preds = %20
  %26 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %22, i8* %26) #11
  br label %27

27:                                               ; preds = %25, %20
  %28 = phi i8* [ %26, %25 ], [ %23, %20 ]
  %29 = bitcast i8* %28 to %"class.blink::ThreadState"**
  %30 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 6
  %32 = load i8, i8* %31, align 8, !range !9
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 16
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %49, label %38

38:                                               ; preds = %27, %34
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 13
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %38
  %43 = load i32, i32* %15, align 8
  %44 = lshr i32 %43, 1
  %45 = zext i32 %44 to i64
  %46 = tail call %"class.blink::HeapHashTableBacking.487"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8FontFaceEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %45) #11
  %47 = bitcast %"class.blink::HeapHashTableBacking.487"* %46 to %"struct.WTF::KeyValuePair.84"*
  %48 = tail call %"struct.WTF::KeyValuePair.84"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.82"* %0, %"struct.WTF::KeyValuePair.84"* %47, i32 %44, %"struct.WTF::KeyValuePair.84"* null) #11
  br label %49

49:                                               ; preds = %34, %2, %42, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_8FontFaceEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.82"*, %"class.blink::FontFace"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::FontFace"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.84"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.82", %"class.WTF::HashTable.82"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %34, align 8
  %36 = icmp eq %"class.blink::FontFace"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %54, align 8
  %56 = icmp eq %"class.blink::FontFace"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %63, align 8
  %65 = icmp eq %"class.blink::FontFace"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.84"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.84"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.84", %"struct.WTF::KeyValuePair.84"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.84"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.84"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"* } undef, %"struct.WTF::KeyValuePair.84"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"* } %78, %"struct.WTF::KeyValuePair.84"* %77, 1
  ret { %"struct.WTF::KeyValuePair.84"*, %"struct.WTF::KeyValuePair.84"* } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E14ShrinkCapacityEj(%"class.WTF::Vector.85"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %62

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::Vector.85", %"class.WTF::Vector.85"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %11, align 8
  %13 = zext i32 %1 to i64
  %14 = zext i32 %8 to i64
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 %13
  %16 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 %14
  %17 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %15 to i8*
  %18 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %16 to i64
  %19 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %15 to i64
  %20 = sub i64 %18, %19
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %20) #11
  store i32 %1, i32* %7, align 4
  br label %21

21:                                               ; preds = %10, %6
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %58, label %23

23:                                               ; preds = %21
  %24 = zext i32 %1 to i64
  %25 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEES0_EEEEmm(i64 %24) #11
  %26 = bitcast %"class.WTF::Vector.85"* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = load i32, i32* %3, align 8
  %29 = zext i32 %28 to i64
  %30 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_8FontFaceEEES0_EEEEmm(i64 %29) #11
  %31 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ShrinkVectorBackingEPvmm(i8* %27, i64 %30, i64 %25) #11
  br i1 %31, label %32, label %35

32:                                               ; preds = %23
  %33 = lshr i64 %25, 4
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %3, align 8
  br label %62

35:                                               ; preds = %23
  %36 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %37 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %36, i64 0, i32 1
  %38 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %37) #11
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %42, !prof !8

40:                                               ; preds = %35
  %41 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %37, i8* %41) #11
  br label %42

42:                                               ; preds = %40, %35
  %43 = phi i8* [ %41, %40 ], [ %38, %35 ]
  %44 = bitcast i8* %43 to %"class.blink::ThreadState"**
  %45 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 6
  %47 = load i8, i8* %46, align 8, !range !9
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 16
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %62, label %53

53:                                               ; preds = %42, %49
  %54 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 13
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj(%"class.WTF::Vector.85"* %0, i32 %1)
  br label %62

58:                                               ; preds = %21
  %59 = bitcast %"class.WTF::Vector.85"* %0 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.WTF::Vector.85"* %0 to i64*
  store atomic i64 0, i64* %61 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %60) #11
  br label %62

62:                                               ; preds = %49, %32, %57, %58, %53, %2
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ShrinkVectorBackingEPvmm(i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS3_EENS8_10HashTraitsIS6_EEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS2_EENS7_10HashTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS2_EENS7_10HashTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS2_EENS7_10HashTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([301 x i8], [301 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashMapINS1_23FontSelectionRequestKeyENS1_6MemberINS1_20CSSSegmentedFontFaceEEENS1_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS3_EENS_10HashTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS2_EENS7_10HashTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.35"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISM_SI_SN_EERKNS_12AtomicStringEPSE_EENS_18HashTableAddResultISO_SG_EEOT0_OT1_(%"class.WTF::HashTable.33"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::HeapHashMap.38"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.35"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.35"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE6ExpandEPSG_(%"class.WTF::HashTable.33"* %0, %"struct.WTF::KeyValuePair.35"* null)
  %11 = load %"struct.WTF::KeyValuePair.35"*, %"struct.WTF::KeyValuePair.35"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.35"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %19) #11
  %21 = and i32 %20, %16
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %13, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %88, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %36 = xor i32 %20, -1
  %37 = lshr i32 %20, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.WTF::StringView"* %4 to i8**
  br label %50

50:                                               ; preds = %27, %68
  %51 = phi %"struct.WTF::KeyValuePair.35"* [ %23, %27 ], [ %74, %68 ]
  %52 = phi %"struct.WTF::KeyValuePair.35"* [ null, %27 ], [ %69, %68 ]
  %53 = phi i64 [ %22, %27 ], [ %73, %68 ]
  %54 = phi i64 [ 0, %27 ], [ %71, %68 ]
  %55 = bitcast %"struct.WTF::KeyValuePair.35"* %51 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %68, label %58

58:                                               ; preds = %50
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  store i8* %56, i8** %49, align 8
  %60 = getelementptr inbounds i8, i8* %56, i64 12
  store i8* %60, i8** %29, align 8
  %61 = getelementptr inbounds i8, i8* %56, i64 4
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %32, align 8
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 1
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %34, align 8
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %35, align 8
  %67 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  br i1 %67, label %186, label %68

68:                                               ; preds = %50, %58
  %69 = phi %"struct.WTF::KeyValuePair.35"* [ %52, %58 ], [ %51, %50 ]
  %70 = icmp eq i64 %54, 0
  %71 = select i1 %70, i64 %48, i64 %54
  %72 = add i64 %71, %53
  %73 = and i64 %72, %17
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %13, i64 %73
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %78, label %50

78:                                               ; preds = %68
  %79 = icmp eq %"struct.WTF::KeyValuePair.35"* %69, null
  br i1 %79, label %88, label %80

80:                                               ; preds = %78
  %81 = bitcast %"struct.WTF::KeyValuePair.35"* %69 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %81, i64 16) #11
  %82 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 2147483647
  %85 = and i32 %84, 2147483647
  %86 = and i32 %83, -2147483648
  %87 = or i32 %85, %86
  store i32 %87, i32* %82, align 8
  br label %88

88:                                               ; preds = %12, %78, %80
  %89 = phi %"struct.WTF::KeyValuePair.35"* [ %69, %80 ], [ %74, %78 ], [ %23, %12 ]
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %109, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %109

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i33
  %101 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #11
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !8

106:                                              ; preds = %97
  call void @llvm.trap() #11
  unreachable

107:                                              ; preds = %97
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %98, align 4
  br label %109

109:                                              ; preds = %107, %92, %88
  %110 = ptrtoint %"class.WTF::StringImpl"* %90 to i64
  %111 = bitcast %"struct.WTF::KeyValuePair.35"* %89 to i64*
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %89, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  store i64 %110, i64* %111, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #11
  br label %128

128:                                              ; preds = %127, %124, %109
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.35", %"struct.WTF::KeyValuePair.35"* %89, i64 0, i32 1
  %130 = load %"class.blink::HeapHashMap.38"*, %"class.blink::HeapHashMap.38"** %2, align 8
  %131 = ptrtoint %"class.blink::HeapHashMap.38"* %130 to i64
  %132 = bitcast %"class.blink::Member.36"* %129 to i64*
  store atomic i64 %131, i64* %132 monotonic, align 8
  %133 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %138, label %135

135:                                              ; preds = %128
  %136 = bitcast %"class.blink::HeapHashMap.38"* %130 to i8*
  %137 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %136) #11
  br label %138

138:                                              ; preds = %128, %135
  %139 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %174, label %141

141:                                              ; preds = %138
  %142 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %143 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %142, i64 0, i32 1
  %144 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %143) #11
  %145 = icmp eq i8* %144, null
  br i1 %145, label %146, label %148, !prof !8

146:                                              ; preds = %141
  %147 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %143, i8* %147) #11
  br label %148

148:                                              ; preds = %146, %141
  %149 = phi i8* [ %147, %146 ], [ %144, %141 ]
  %150 = bitcast i8* %149 to %"class.blink::ThreadState"**
  %151 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %151, i64 0, i32 9
  %153 = load i8, i8* %152, align 1, !range !9
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %174, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %151, i64 0, i32 13
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %156, align 8
  %159 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %151, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %160 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %159, align 8
  %161 = load atomic i64, i64* %132 monotonic, align 8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %171, label %163

163:                                              ; preds = %155
  %164 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %160, i64 0, i32 0, i32 0
  %165 = inttoptr i64 %161 to i8*
  %166 = bitcast %"class.blink::MarkingVisitor"* %160 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %167 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %166, align 8
  %168 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %167, i64 5
  %169 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %168, align 8
  call void %169(%"class.blink::Visitor"* %164, i8* nonnull %165, i8* %165, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapINS_23FontSelectionRequestKeyENS_6MemberINS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashEN3WTF21SimpleClassHashTraitsIS2_EENS7_10HashTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #11
  %170 = load i64, i64* %156, align 8
  br label %171

171:                                              ; preds = %163, %155
  %172 = phi i64 [ %158, %155 ], [ %170, %163 ]
  %173 = add i64 %172, -1
  store i64 %173, i64* %156, align 8
  br label %174

174:                                              ; preds = %138, %148, %171
  %175 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 2
  %176 = load i32, i32* %175, align 4
  %177 = add i32 %176, 1
  store i32 %177, i32* %175, align 4
  %178 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 3
  %179 = load i32, i32* %178, align 8
  %180 = add i32 %179, %177
  %181 = shl i32 %180, 1
  %182 = load i32, i32* %14, align 8
  %183 = icmp ult i32 %181, %182
  br i1 %183, label %186, label %184

184:                                              ; preds = %174
  %185 = call %"struct.WTF::KeyValuePair.35"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE6ExpandEPSG_(%"class.WTF::HashTable.33"* %0, %"struct.WTF::KeyValuePair.35"* %89)
  br label %186

186:                                              ; preds = %58, %174, %184
  %187 = phi i8 [ 1, %174 ], [ 1, %184 ], [ 0, %58 ]
  %188 = phi %"struct.WTF::KeyValuePair.35"* [ %89, %174 ], [ %185, %184 ], [ %51, %58 ]
  %189 = insertvalue { %"struct.WTF::KeyValuePair.35"*, i8 } undef, %"struct.WTF::KeyValuePair.35"* %188, 0
  %190 = insertvalue { %"struct.WTF::KeyValuePair.35"*, i8 } %189, i8 %187, 1
  ret { %"struct.WTF::KeyValuePair.35"*, i8 } %190
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.35"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE6ExpandEPSG_(%"class.WTF::HashTable.33"*, %"struct.WTF::KeyValuePair.35"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.35"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE12ExpandBufferEjPSG_Rb(%"class.WTF::HashTable.33"* %0, i32 %35, %"struct.WTF::KeyValuePair.35"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !9
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.503"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapINS_23FontSelectionRequestKeyENS6_INS_20CSSSegmentedFontFaceEEENS_27FontSelectionRequestKeyHashENS2_21SimpleClassHashTraitsIS8_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS2_15CaseFoldingHashENS2_18HashMapValueTraitsINSE_IS4_EENSE_ISH_EEEESM_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking.503"* %42 to %"struct.WTF::KeyValuePair.35"*
  %44 = call %"struct.WTF::KeyValuePair.35"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapINS3_23FontSelectionRequestKeyENS4_INS3_20CSSSegmentedFontFaceEEENS3_27FontSelectionRequestKeyHashENS_21SimpleClassHashTraitsIS6_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINSC_IS1_EENSC_ISF_EEEESK_NS3_13HeapAllocatorEE8RehashToEPSG_jSP_(%"class.WTF::HashTable.33"* %0, %"struct.WTF::KeyValuePair.35"* %43, i32 %40, %"struct.WTF::KeyValuePair.35"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.35"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.35"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.44"*, i8 } @_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_S9_SG_EERKNS1_20FontSelectionRequestEDnEENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.42"*, %"struct.blink::FontSelectionRequest"* dereferenceable(6), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.blink::FontSelectionRequestKey", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.44"*, %"struct.WTF::KeyValuePair.44"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.44"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair.44"* @_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.42"* %0, %"struct.WTF::KeyValuePair.44"* null)
  %10 = load %"struct.WTF::KeyValuePair.44"*, %"struct.WTF::KeyValuePair.44"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair.44"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = bitcast %"struct.blink::FontSelectionRequestKey"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = bitcast %"struct.blink::FontSelectionRequest"* %1 to i48*
  %19 = load i48, i48* %18, align 2
  %20 = bitcast %"struct.blink::FontSelectionRequestKey"* %4 to i48*
  store i48 %19, i48* %20, align 8
  %21 = getelementptr inbounds %"struct.blink::FontSelectionRequestKey", %"struct.blink::FontSelectionRequestKey"* %4, i64 0, i32 1
  store i8 0, i8* %21, align 2
  %22 = call i32 @_ZN5blink27FontSelectionRequestKeyHash7GetHashERKNS_23FontSelectionRequestKeyE(%"struct.blink::FontSelectionRequestKey"* nonnull dereferenceable(8) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %23 = and i32 %22, %15
  %24 = zext i32 %23 to i64
  %25 = load i48, i48* %18, align 2
  %26 = trunc i48 %25 to i16
  %27 = lshr i48 %25, 32
  %28 = trunc i48 %27 to i16
  %29 = lshr i48 %25, 16
  %30 = trunc i48 %29 to i16
  %31 = xor i32 %22, -1
  %32 = lshr i32 %22, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %78, %11
  %45 = phi i64 [ 0, %11 ], [ %84, %78 ]
  %46 = phi i64 [ %24, %11 ], [ %86, %78 ]
  %47 = phi %"struct.WTF::KeyValuePair.44"* [ null, %11 ], [ %82, %78 ]
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %12, i64 %46
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i16, i16* %49, align 2
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %12, i64 %46, i32 0, i32 0, i32 1, i32 0
  %54 = load i16, i16* %53, align 2
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %64

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %12, i64 %46, i32 0, i32 0, i32 2, i32 0
  %58 = load i16, i16* %57, align 2
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %12, i64 %46, i32 0, i32 1
  %62 = load i8, i8* %61, align 2, !range !9
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %87, label %64

64:                                               ; preds = %44, %52, %56, %60
  %65 = icmp eq i16 %50, %26
  br i1 %65, label %66, label %78

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %12, i64 %46, i32 0, i32 0, i32 1, i32 0
  %68 = load i16, i16* %67, align 2
  %69 = icmp eq i16 %68, %30
  br i1 %69, label %70, label %78

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %12, i64 %46, i32 0, i32 0, i32 2, i32 0
  %72 = load i16, i16* %71, align 2
  %73 = icmp eq i16 %72, %28
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %12, i64 %46, i32 0, i32 1
  %76 = load i8, i8* %75, align 2, !range !9
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %152, label %78

78:                                               ; preds = %64, %66, %70, %74
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %12, i64 %46, i32 0, i32 1
  %80 = load i8, i8* %79, align 2, !range !9
  %81 = icmp eq i8 %80, 0
  %82 = select i1 %81, %"struct.WTF::KeyValuePair.44"* %47, %"struct.WTF::KeyValuePair.44"* %48
  %83 = icmp eq i64 %45, 0
  %84 = select i1 %83, i64 %43, i64 %45
  %85 = add i64 %84, %46
  %86 = and i64 %85, %16
  br label %44

87:                                               ; preds = %60
  %88 = icmp eq %"struct.WTF::KeyValuePair.44"* %47, null
  br i1 %88, label %98, label %89

89:                                               ; preds = %87
  %90 = bitcast %"struct.WTF::KeyValuePair.44"* %47 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %90, i64 16) #11
  %91 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = add i32 %92, 2147483647
  %94 = and i32 %93, 2147483647
  %95 = and i32 %92, -2147483648
  %96 = or i32 %94, %95
  store i32 %96, i32* %91, align 8
  %97 = load i48, i48* %18, align 2
  br label %98

98:                                               ; preds = %87, %89
  %99 = phi i48 [ %97, %89 ], [ %25, %87 ]
  %100 = phi %"struct.WTF::KeyValuePair.44"* [ %47, %89 ], [ %48, %87 ]
  %101 = bitcast %"struct.WTF::KeyValuePair.44"* %100 to i48*
  store i48 %99, i48* %101, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %100, i64 0, i32 0, i32 1
  store i8 0, i8* %102, align 2
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %100, i64 0, i32 1
  %104 = bitcast %"class.blink::Member.10"* %103 to i64*
  store atomic i64 0, i64* %104 monotonic, align 8
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %140, label %107

107:                                              ; preds = %98
  %108 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %109 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %108, i64 0, i32 1
  %110 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %109) #11
  %111 = icmp eq i8* %110, null
  br i1 %111, label %112, label %114, !prof !8

112:                                              ; preds = %107
  %113 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %109, i8* %113) #11
  br label %114

114:                                              ; preds = %112, %107
  %115 = phi i8* [ %113, %112 ], [ %110, %107 ]
  %116 = bitcast i8* %115 to %"class.blink::ThreadState"**
  %117 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %117, i64 0, i32 9
  %119 = load i8, i8* %118, align 1, !range !9
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %140, label %121

121:                                              ; preds = %114
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %117, i64 0, i32 13
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %123, 1
  store i64 %124, i64* %122, align 8
  %125 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %117, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %126 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %125, align 8
  %127 = load atomic i64, i64* %104 monotonic, align 8
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %137, label %129

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %126, i64 0, i32 0, i32 0
  %131 = inttoptr i64 %127 to i8*
  %132 = bitcast %"class.blink::MarkingVisitor"* %126 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %133 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %133, i64 5
  %135 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %134, align 8
  call void %135(%"class.blink::Visitor"* %130, i8* nonnull %131, i8* %131, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20CSSSegmentedFontFaceEE5TraceEPNS_7VisitorEPKv) #11
  %136 = load i64, i64* %122, align 8
  br label %137

137:                                              ; preds = %129, %121
  %138 = phi i64 [ %124, %121 ], [ %136, %129 ]
  %139 = add i64 %138, -1
  store i64 %139, i64* %122, align 8
  br label %140

140:                                              ; preds = %98, %114, %137
  %141 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 2
  %142 = load i32, i32* %141, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %141, align 4
  %144 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 3
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %145, %143
  %147 = shl i32 %146, 1
  %148 = load i32, i32* %13, align 8
  %149 = icmp ult i32 %147, %148
  br i1 %149, label %152, label %150

150:                                              ; preds = %140
  %151 = call %"struct.WTF::KeyValuePair.44"* @_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.42"* %0, %"struct.WTF::KeyValuePair.44"* %100)
  br label %152

152:                                              ; preds = %74, %140, %150
  %153 = phi i8 [ 1, %140 ], [ 1, %150 ], [ 0, %74 ]
  %154 = phi %"struct.WTF::KeyValuePair.44"* [ %100, %140 ], [ %151, %150 ], [ %48, %74 ]
  %155 = insertvalue { %"struct.WTF::KeyValuePair.44"*, i8 } undef, %"struct.WTF::KeyValuePair.44"* %154, 0
  %156 = insertvalue { %"struct.WTF::KeyValuePair.44"*, i8 } %155, i8 %153, 1
  ret { %"struct.WTF::KeyValuePair.44"*, i8 } %156
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.44"* @_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.42"*, %"struct.WTF::KeyValuePair.44"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.44"* @_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.42"* %0, i32 %35, %"struct.WTF::KeyValuePair.44"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !9
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.517"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking.517"* %42 to %"struct.WTF::KeyValuePair.44"*
  %44 = call %"struct.WTF::KeyValuePair.44"* @_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.42"* %0, %"struct.WTF::KeyValuePair.44"* %43, i32 %40, %"struct.WTF::KeyValuePair.44"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.44"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.44"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.44"* @_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.42"*, i32, %"struct.WTF::KeyValuePair.44"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !8

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !9
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.44"*, %"struct.WTF::KeyValuePair.44"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.44"* %32, null
  br i1 %33, label %99, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.44"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %99

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.44"*, %"struct.WTF::KeyValuePair.44"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.517"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking.517"* %44 to %"struct.WTF::KeyValuePair.44"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %96, %39
  %48 = phi %"struct.WTF::KeyValuePair.44"* [ null, %39 ], [ %65, %96 ]
  %49 = bitcast %"class.WTF::HashTable.42"* %0 to %"class.blink::HeapHashTableBacking.517"**
  store %"class.blink::HeapHashTableBacking.517"* %44, %"class.blink::HeapHashTableBacking.517"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.517", %"class.blink::HeapHashTableBacking.517"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #11
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.44"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.44"* @_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.42"* %0, %"struct.WTF::KeyValuePair.44"* %42, i32 %1, %"struct.WTF::KeyValuePair.44"* %48)
  br label %99

58:                                               ; preds = %39, %96
  %59 = phi i64 [ %97, %96 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.44"* [ %65, %96 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.44"*, %"struct.WTF::KeyValuePair.44"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.44"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.44"* %64, %"struct.WTF::KeyValuePair.44"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i16, i16* %66, align 2
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %58
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %61, i64 %59, i32 0, i32 0, i32 1, i32 0
  %71 = load i16, i16* %70, align 2
  %72 = icmp eq i16 %71, 0
  br i1 %72, label %73, label %81

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %61, i64 %59, i32 0, i32 0, i32 2, i32 0
  %75 = load i16, i16* %74, align 2
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %61, i64 %59, i32 0, i32 1
  %79 = load i8, i8* %78, align 2, !range !9
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %58, %69, %73, %77
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %61, i64 %59, i32 0, i32 1
  %83 = load i8, i8* %82, align 2, !range !9
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %81, %77
  %86 = bitcast %"struct.WTF::KeyValuePair.44"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false)
  br label %96

87:                                               ; preds = %81
  %88 = bitcast %"struct.WTF::KeyValuePair.44"* %62 to i64*
  %89 = bitcast %"struct.WTF::KeyValuePair.44"* %64 to i64*
  %90 = load i64, i64* %88, align 8
  store i64 %90, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member.10"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.10"* %91 to i64*
  store i64 %94, i64* %95, align 8
  br label %96

96:                                               ; preds = %85, %87
  %97 = add nuw nsw i64 %59, 1
  %98 = icmp eq i64 %97, %43
  br i1 %98, label %47, label %58

99:                                               ; preds = %34, %30, %55
  %100 = phi %"struct.WTF::KeyValuePair.44"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.44"* %100
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.44"* @_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.42"*, %"struct.WTF::KeyValuePair.44"*, i32, %"struct.WTF::KeyValuePair.44"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.42", align 8
  %6 = bitcast %"class.WTF::HashTable.42"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.42"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.44"* %1, %"struct.WTF::KeyValuePair.44"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.44"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.44"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.44"*, %"struct.WTF::KeyValuePair.44"** %19, align 8
  br label %57

21:                                               ; preds = %100
  %22 = bitcast %"class.WTF::HashTable.42"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %101, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.44"* [ null, %15 ], [ %103, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.42"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #11
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.42"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.42"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #11
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #11
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.44"* %29

57:                                               ; preds = %18, %100
  %58 = phi i32 [ %13, %18 ], [ %101, %100 ]
  %59 = phi %"struct.WTF::KeyValuePair.44"* [ %20, %18 ], [ %102, %100 ]
  %60 = phi %"struct.WTF::KeyValuePair.44"* [ null, %18 ], [ %103, %100 ]
  %61 = phi i32 [ 0, %18 ], [ %104, %100 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %59, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i16, i16* %64, align 2
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %79

67:                                               ; preds = %57
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %59, i64 %62, i32 0, i32 0, i32 1, i32 0
  %69 = load i16, i16* %68, align 2
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %71, label %79

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %59, i64 %62, i32 0, i32 0, i32 2, i32 0
  %73 = load i16, i16* %72, align 2
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %59, i64 %62, i32 0, i32 1
  %77 = load i8, i8* %76, align 2, !range !9
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %100, label %79

79:                                               ; preds = %57, %67, %71, %75
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %59, i64 %62, i32 0, i32 1
  %81 = load i8, i8* %80, align 2, !range !9
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %100

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %63, i64 0, i32 0
  %85 = call { %"struct.WTF::KeyValuePair.44"*, i8 } @_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.42"* nonnull %5, %"struct.blink::FontSelectionRequestKey"* dereferenceable(8) %84) #11
  %86 = extractvalue { %"struct.WTF::KeyValuePair.44"*, i8 } %85, 0
  %87 = bitcast %"struct.WTF::KeyValuePair.44"* %63 to i64*
  %88 = bitcast %"struct.WTF::KeyValuePair.44"* %86 to i64*
  %89 = load i64, i64* %87, align 8
  store i64 %89, i64* %88, align 8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %86, i64 0, i32 1
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %59, i64 %62, i32 1
  %92 = bitcast %"class.blink::Member.10"* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::Member.10"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = load %"struct.WTF::KeyValuePair.44"*, %"struct.WTF::KeyValuePair.44"** %19, align 8
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %95, i64 %62
  %97 = icmp eq %"struct.WTF::KeyValuePair.44"* %96, %3
  %98 = select i1 %97, %"struct.WTF::KeyValuePair.44"* %86, %"struct.WTF::KeyValuePair.44"* %60
  %99 = load i32, i32* %12, align 8
  br label %100

100:                                              ; preds = %79, %75, %83
  %101 = phi i32 [ %58, %79 ], [ %99, %83 ], [ %58, %75 ]
  %102 = phi %"struct.WTF::KeyValuePair.44"* [ %59, %79 ], [ %95, %83 ], [ %59, %75 ]
  %103 = phi %"struct.WTF::KeyValuePair.44"* [ %60, %79 ], [ %98, %83 ], [ %60, %75 ]
  %104 = add i32 %61, 1
  %105 = icmp eq i32 %104, %101
  br i1 %105, label %21, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.517"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS1_12KeyValuePairIS3_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS1_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS1_18HashMapValueTraitsINS1_21SimpleClassHashTraitsIS3_EENS1_10HashTraitsIS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.517"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.517"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS1_12KeyValuePairIS3_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS1_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS1_18HashMapValueTraitsINS1_21SimpleClassHashTraitsIS3_EENS1_10HashTraitsIS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([517 x i8], [517 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_23FontSelectionRequestKeyENS_12KeyValuePairIS4_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS4_EENS_10HashTraitsIS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_23FontSelectionRequestKeyENS2_12KeyValuePairIS4_NS_6MemberINS_20CSSSegmentedFontFaceEEEEENS2_24KeyValuePairKeyExtractorENS_27FontSelectionRequestKeyHashENS2_18HashMapValueTraitsINS2_21SimpleClassHashTraitsIS4_EENS2_10HashTraitsIS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.44"*, i8 } @_ZN3WTF9HashTableIN5blink23FontSelectionRequestKeyENS_12KeyValuePairIS2_NS1_6MemberINS1_20CSSSegmentedFontFaceEEEEENS_24KeyValuePairKeyExtractorENS1_27FontSelectionRequestKeyHashENS_18HashMapValueTraitsINS_21SimpleClassHashTraitsIS2_EENS_10HashTraitsIS6_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.42"*, %"struct.blink::FontSelectionRequestKey"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.44"*, %"struct.WTF::KeyValuePair.44"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.42", %"class.WTF::HashTable.42"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = tail call i32 @_ZN5blink27FontSelectionRequestKeyHash7GetHashERKNS_23FontSelectionRequestKeyE(%"struct.blink::FontSelectionRequestKey"* dereferenceable(8) %1) #11
  %10 = and i32 %9, %7
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.blink::FontSelectionRequestKey", %"struct.blink::FontSelectionRequestKey"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.blink::FontSelectionRequestKey", %"struct.blink::FontSelectionRequestKey"* %1, i64 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"struct.blink::FontSelectionRequestKey", %"struct.blink::FontSelectionRequestKey"* %1, i64 0, i32 0, i32 2, i32 0
  %15 = getelementptr inbounds %"struct.blink::FontSelectionRequestKey", %"struct.blink::FontSelectionRequestKey"* %1, i64 0, i32 1
  %16 = xor i32 %9, -1
  %17 = lshr i32 %9, 23
  %18 = add i32 %17, %16
  %19 = shl i32 %18, 12
  %20 = xor i32 %19, %18
  %21 = lshr i32 %20, 7
  %22 = xor i32 %21, %20
  %23 = shl i32 %22, 2
  %24 = xor i32 %23, %22
  %25 = lshr i32 %24, 20
  %26 = xor i32 %25, %24
  %27 = or i32 %26, 1
  %28 = zext i32 %27 to i64
  br label %29

29:                                               ; preds = %72, %2
  %30 = phi i64 [ 0, %2 ], [ %76, %72 ]
  %31 = phi i64 [ 0, %2 ], [ %78, %72 ]
  %32 = phi i64 [ %11, %2 ], [ %80, %72 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %4, i64 %32
  %34 = ptrtoint %"struct.WTF::KeyValuePair.44"* %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %38, label %54

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %4, i64 %32, i32 0, i32 0, i32 1, i32 0
  %40 = load i16, i16* %39, align 2
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %4, i64 %32, i32 0, i32 0, i32 2, i32 0
  %44 = load i16, i16* %43, align 2
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %46, label %54

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %4, i64 %32, i32 0, i32 1
  %48 = load i8, i8* %47, align 2, !range !9
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = ptrtoint %"struct.WTF::KeyValuePair.44"* %33 to i64
  %52 = icmp eq i64 %30, 0
  %53 = select i1 %52, i64 %51, i64 %30
  br label %83

54:                                               ; preds = %46, %42, %38, %29
  %55 = load i16, i16* %12, align 2
  %56 = icmp eq i16 %36, %55
  br i1 %56, label %57, label %72

57:                                               ; preds = %54
  %58 = load i16, i16* %13, align 2
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %4, i64 %32, i32 0, i32 0, i32 1, i32 0
  %60 = load i16, i16* %59, align 2
  %61 = icmp eq i16 %60, %58
  br i1 %61, label %62, label %72

62:                                               ; preds = %57
  %63 = load i16, i16* %14, align 2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %4, i64 %32, i32 0, i32 0, i32 2, i32 0
  %65 = load i16, i16* %64, align 2
  %66 = icmp eq i16 %65, %63
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %4, i64 %32, i32 0, i32 1
  %69 = load i8, i8* %68, align 2, !range !9
  %70 = load i8, i8* %15, align 2, !range !9
  %71 = icmp eq i8 %69, %70
  br i1 %71, label %81, label %72

72:                                               ; preds = %67, %62, %57, %54
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.44", %"struct.WTF::KeyValuePair.44"* %4, i64 %32, i32 0, i32 1
  %74 = load i8, i8* %73, align 2, !range !9
  %75 = icmp eq i8 %74, 0
  %76 = select i1 %75, i64 %30, i64 %34
  %77 = icmp eq i64 %31, 0
  %78 = select i1 %77, i64 %28, i64 %31
  %79 = add i64 %78, %32
  %80 = and i64 %79, %8
  br label %29

81:                                               ; preds = %67
  %82 = ptrtoint %"struct.WTF::KeyValuePair.44"* %33 to i64
  br label %83

83:                                               ; preds = %81, %50
  %84 = phi i64 [ %53, %50 ], [ %82, %81 ]
  %85 = phi i8 [ 0, %50 ], [ 1, %81 ]
  %86 = inttoptr i64 %84 to %"struct.WTF::KeyValuePair.44"*
  %87 = insertvalue { %"struct.WTF::KeyValuePair.44"*, i8 } undef, %"struct.WTF::KeyValuePair.44"* %86, 0
  %88 = insertvalue { %"struct.WTF::KeyValuePair.44"*, i8 } %87, i8 %85, 1
  ret { %"struct.WTF::KeyValuePair.44"*, i8 } %88
}

declare i32 @_ZN5blink27FontSelectionRequestKeyHash7GetHashERKNS_23FontSelectionRequestKeyE(%"struct.blink::FontSelectionRequestKey"* dereferenceable(8)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!4 = distinct !{!4, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!7 = distinct !{!7, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = !{i8 0, i8 2}
!10 = !{!"branch_weights", i32 1, i32 1048575}
!11 = !{!"branch_weights", i32 2000, i32 1}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!14 = distinct !{!14, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!17 = distinct !{!17, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!18 = !{!19, !16}
!19 = distinct !{!19, !20, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!20 = distinct !{!20, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!23 = distinct !{!23, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!24 = !{!19, !16, !22}
