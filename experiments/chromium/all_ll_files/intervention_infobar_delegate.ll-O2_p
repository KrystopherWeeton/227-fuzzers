; ModuleID = '../../chrome/browser/ui/interventions/intervention_infobar_delegate.cc'
source_filename = "../../chrome/browser/ui/interventions/intervention_infobar_delegate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.InterventionInfoBarDelegate = type { %"class.infobars::InfoBarDelegate.base", i32, %class.InterventionDelegate* }
%"class.infobars::InfoBarDelegate.base" = type <{ i32 (...)**, %"class.infobars::InfoBar"*, i32 }>
%"class.infobars::InfoBar" = type opaque
%class.InterventionDelegate = type { i32 (...)** }
%"class.infobars::InfoBarDelegate" = type <{ i32 (...)**, %"class.infobars::InfoBar"*, i32, [4 x i8] }>
%"struct.gfx::VectorIcon" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string.1", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.GURL* }
%"struct.infobars::InfoBarDelegate::NavigationDetails" = type <{ i32, i8, i8, i8, i8, i8, [3 x i8] }>
%class.ConfirmInfoBarDelegate = type opaque
%class.HungRendererInfoBarDelegate = type opaque
%"class.blocked_content::PopupBlockedInfoBarDelegate" = type opaque
%class.ThemeInstalledInfoBarDelegate = type opaque
%"class.translate::TranslateInfoBarDelegate" = type opaque

@_ZTV27InterventionInfoBarDelegate = hidden unnamed_addr constant { [22 x i8*] } { [22 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.InterventionInfoBarDelegate*)* @_ZN27InterventionInfoBarDelegateD2Ev to i8*), i8* bitcast (void (%class.InterventionInfoBarDelegate*)* @_ZN27InterventionInfoBarDelegateD0Ev to i8*), i8* bitcast (i32 (%class.InterventionInfoBarDelegate*)* @_ZNK27InterventionInfoBarDelegate13GetIdentifierEv to i8*), i8* bitcast (i32 (%"class.infobars::InfoBarDelegate"*)* @_ZNK8infobars15InfoBarDelegate24GetInfoBarAutomationTypeEv to i8*), i8* bitcast (i32 (%"class.infobars::InfoBarDelegate"*)* @_ZNK8infobars15InfoBarDelegate9GetIconIdEv to i8*), i8* bitcast (%"struct.gfx::VectorIcon"* (%"class.infobars::InfoBarDelegate"*)* @_ZNK8infobars15InfoBarDelegate13GetVectorIconEv to i8*), i8* bitcast (void ()* @_ZNK8infobars15InfoBarDelegate7GetIconEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.infobars::InfoBarDelegate"*)* @_ZNK8infobars15InfoBarDelegate11GetLinkTextEv to i8*), i8* bitcast (void (%class.GURL*, %"class.infobars::InfoBarDelegate"*)* @_ZNK8infobars15InfoBarDelegate10GetLinkURLEv to i8*), i8* bitcast (i1 (%class.InterventionInfoBarDelegate*, %"class.infobars::InfoBarDelegate"*)* @_ZNK27InterventionInfoBarDelegate14EqualsDelegateEPN8infobars15InfoBarDelegateE to i8*), i8* bitcast (i1 (%"class.infobars::InfoBarDelegate"*, %"struct.infobars::InfoBarDelegate::NavigationDetails"*)* @_ZNK8infobars15InfoBarDelegate12ShouldExpireERKNS0_17NavigationDetailsE to i8*), i8* bitcast (i1 (%"class.infobars::InfoBarDelegate"*, i32)* @_ZN8infobars15InfoBarDelegate11LinkClickedE21WindowOpenDisposition to i8*), i8* bitcast (void (%class.InterventionInfoBarDelegate*)* @_ZN27InterventionInfoBarDelegate16InfoBarDismissedEv to i8*), i8* bitcast (i1 (%"class.infobars::InfoBarDelegate"*)* @_ZNK8infobars15InfoBarDelegate11IsCloseableEv to i8*), i8* bitcast (i1 (%"class.infobars::InfoBarDelegate"*)* @_ZNK8infobars15InfoBarDelegate13ShouldAnimateEv to i8*), i8* bitcast (%class.ConfirmInfoBarDelegate* (%"class.infobars::InfoBarDelegate"*)* @_ZN8infobars15InfoBarDelegate24AsConfirmInfoBarDelegateEv to i8*), i8* bitcast (%class.HungRendererInfoBarDelegate* (%"class.infobars::InfoBarDelegate"*)* @_ZN8infobars15InfoBarDelegate29AsHungRendererInfoBarDelegateEv to i8*), i8* bitcast (%"class.blocked_content::PopupBlockedInfoBarDelegate"* (%"class.infobars::InfoBarDelegate"*)* @_ZN8infobars15InfoBarDelegate29AsPopupBlockedInfoBarDelegateEv to i8*), i8* bitcast (%class.ThemeInstalledInfoBarDelegate* (%"class.infobars::InfoBarDelegate"*)* @_ZN8infobars15InfoBarDelegate29AsThemePreviewInfobarDelegateEv to i8*), i8* bitcast (%"class.translate::TranslateInfoBarDelegate"* (%"class.infobars::InfoBarDelegate"*)* @_ZN8infobars15InfoBarDelegate26AsTranslateInfoBarDelegateEv to i8*)] }, align 8

@_ZN27InterventionInfoBarDelegateC1EN8infobars15InfoBarDelegate17InfoBarIdentifierEP20InterventionDelegate = hidden unnamed_addr alias void (%class.InterventionInfoBarDelegate*, i32, %class.InterventionDelegate*), void (%class.InterventionInfoBarDelegate*, i32, %class.InterventionDelegate*)* @_ZN27InterventionInfoBarDelegateC2EN8infobars15InfoBarDelegate17InfoBarIdentifierEP20InterventionDelegate
@_ZN27InterventionInfoBarDelegateD1Ev = hidden unnamed_addr alias void (%class.InterventionInfoBarDelegate*), void (%class.InterventionInfoBarDelegate*)* @_ZN27InterventionInfoBarDelegateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27InterventionInfoBarDelegateC2EN8infobars15InfoBarDelegate17InfoBarIdentifierEP20InterventionDelegate(%class.InterventionInfoBarDelegate*, i32, %class.InterventionDelegate*) unnamed_addr #0 align 2 {
  %4 = bitcast %class.InterventionInfoBarDelegate* %0 to %"class.infobars::InfoBarDelegate"*
  tail call void @_ZN8infobars15InfoBarDelegateC2Ev(%"class.infobars::InfoBarDelegate"* %4) #5
  %5 = getelementptr inbounds %class.InterventionInfoBarDelegate, %class.InterventionInfoBarDelegate* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTV27InterventionInfoBarDelegate, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.InterventionInfoBarDelegate, %class.InterventionInfoBarDelegate* %0, i64 0, i32 1
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %class.InterventionInfoBarDelegate, %class.InterventionInfoBarDelegate* %0, i64 0, i32 2
  store %class.InterventionDelegate* %2, %class.InterventionDelegate** %7, align 8
  ret void
}

declare void @_ZN8infobars15InfoBarDelegateC2Ev(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8infobars15InfoBarDelegateD2Ev(%"class.infobars::InfoBarDelegate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27InterventionInfoBarDelegateD2Ev(%class.InterventionInfoBarDelegate*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.InterventionInfoBarDelegate* %0 to %"class.infobars::InfoBarDelegate"*
  tail call void @_ZN8infobars15InfoBarDelegateD2Ev(%"class.infobars::InfoBarDelegate"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27InterventionInfoBarDelegateD0Ev(%class.InterventionInfoBarDelegate*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.InterventionInfoBarDelegate* %0 to %"class.infobars::InfoBarDelegate"*
  tail call void @_ZN8infobars15InfoBarDelegateD2Ev(%"class.infobars::InfoBarDelegate"* %2) #5
  %3 = bitcast %class.InterventionInfoBarDelegate* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK27InterventionInfoBarDelegate13GetIdentifierEv(%class.InterventionInfoBarDelegate* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.InterventionInfoBarDelegate, %class.InterventionInfoBarDelegate* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK27InterventionInfoBarDelegate14EqualsDelegateEPN8infobars15InfoBarDelegateE(%class.InterventionInfoBarDelegate*, %"class.infobars::InfoBarDelegate"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.infobars::InfoBarDelegate"* %1 to i32 (%"class.infobars::InfoBarDelegate"*)***
  %4 = load i32 (%"class.infobars::InfoBarDelegate"*)**, i32 (%"class.infobars::InfoBarDelegate"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.infobars::InfoBarDelegate"*)*, i32 (%"class.infobars::InfoBarDelegate"*)** %4, i64 2
  %6 = load i32 (%"class.infobars::InfoBarDelegate"*)*, i32 (%"class.infobars::InfoBarDelegate"*)** %5, align 8
  %7 = tail call i32 %6(%"class.infobars::InfoBarDelegate"* %1) #5
  %8 = bitcast %class.InterventionInfoBarDelegate* %0 to i32 (%class.InterventionInfoBarDelegate*)***
  %9 = load i32 (%class.InterventionInfoBarDelegate*)**, i32 (%class.InterventionInfoBarDelegate*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%class.InterventionInfoBarDelegate*)*, i32 (%class.InterventionInfoBarDelegate*)** %9, i64 2
  %11 = load i32 (%class.InterventionInfoBarDelegate*)*, i32 (%class.InterventionInfoBarDelegate*)** %10, align 8
  %12 = tail call i32 %11(%class.InterventionInfoBarDelegate* %0) #5
  %13 = icmp eq i32 %7, %12
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27InterventionInfoBarDelegate16InfoBarDismissedEv(%class.InterventionInfoBarDelegate* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.InterventionInfoBarDelegate, %class.InterventionInfoBarDelegate* %0, i64 0, i32 2
  %3 = load %class.InterventionDelegate*, %class.InterventionDelegate** %2, align 8
  %4 = bitcast %class.InterventionDelegate* %3 to void (%class.InterventionDelegate*)***
  %5 = load void (%class.InterventionDelegate*)**, void (%class.InterventionDelegate*)*** %4, align 8
  %6 = load void (%class.InterventionDelegate*)*, void (%class.InterventionDelegate*)** %5, align 8
  tail call void %6(%class.InterventionDelegate* %3) #5
  ret void
}

declare i32 @_ZNK8infobars15InfoBarDelegate24GetInfoBarAutomationTypeEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare i32 @_ZNK8infobars15InfoBarDelegate9GetIconIdEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare %"struct.gfx::VectorIcon"* @_ZNK8infobars15InfoBarDelegate13GetVectorIconEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare void @_ZNK8infobars15InfoBarDelegate7GetIconEv() unnamed_addr

declare void @_ZNK8infobars15InfoBarDelegate11GetLinkTextEv(%"class.std::__1::basic_string"* sret, %"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare void @_ZNK8infobars15InfoBarDelegate10GetLinkURLEv(%class.GURL* sret, %"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare zeroext i1 @_ZNK8infobars15InfoBarDelegate12ShouldExpireERKNS0_17NavigationDetailsE(%"class.infobars::InfoBarDelegate"*, %"struct.infobars::InfoBarDelegate::NavigationDetails"* dereferenceable(12)) unnamed_addr #1

declare zeroext i1 @_ZN8infobars15InfoBarDelegate11LinkClickedE21WindowOpenDisposition(%"class.infobars::InfoBarDelegate"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK8infobars15InfoBarDelegate11IsCloseableEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare zeroext i1 @_ZNK8infobars15InfoBarDelegate13ShouldAnimateEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare %class.ConfirmInfoBarDelegate* @_ZN8infobars15InfoBarDelegate24AsConfirmInfoBarDelegateEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare %class.HungRendererInfoBarDelegate* @_ZN8infobars15InfoBarDelegate29AsHungRendererInfoBarDelegateEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare %"class.blocked_content::PopupBlockedInfoBarDelegate"* @_ZN8infobars15InfoBarDelegate29AsPopupBlockedInfoBarDelegateEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare %class.ThemeInstalledInfoBarDelegate* @_ZN8infobars15InfoBarDelegate29AsThemePreviewInfobarDelegateEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare %"class.translate::TranslateInfoBarDelegate"* @_ZN8infobars15InfoBarDelegate26AsTranslateInfoBarDelegateEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
