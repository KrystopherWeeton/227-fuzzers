; ModuleID = '../../base/allocator/partition_allocator/partition_address_space.cc'
source_filename = "../../base/allocator/partition_allocator/partition_address_space.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::array" = type { [2 x i64] }
%"struct.base::internal::GigaCageProperties" = type { i64, i64, i64 }
%"class.base::internal::AddressPoolManager" = type { [2 x %"class.base::internal::AddressPoolManager::Pool"] }
%"class.base::internal::AddressPoolManager::Pool" = type { %"class.base::Lock", %"class.std::__1::bitset", i64, i64, i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [64 x i64] }

$_ZN4base8internal27CalculateGigaCagePropertiesILm2EEENS0_18GigaCagePropertiesERKNSt3__15arrayImXT_EEE = comdat any

@_ZN4base8internal21PartitionAddressSpace10kPoolSizesE = hidden constant %"struct.std::__1::array" { [2 x i64] [i64 8589934592, i64 8589934592] }, align 8
@_ZN4base8internal21PartitionAddressSpace22reserved_base_address_E = hidden local_unnamed_addr global i64 0, align 8
@_ZN4base8internal21PartitionAddressSpace26non_brp_pool_base_address_E = hidden local_unnamed_addr global i64 8589934591, align 8
@_ZN4base8internal21PartitionAddressSpace22brp_pool_base_address_E = hidden local_unnamed_addr global i64 8589934591, align 8
@_ZN4base8internal21PartitionAddressSpace13non_brp_pool_E = hidden local_unnamed_addr global i32 0, align 4
@_ZN4base8internal21PartitionAddressSpace9brp_pool_E = hidden local_unnamed_addr global i32 0, align 4
@.str = private unnamed_addr constant [109 x i8] c"../../base/allocator/partition_allocator/partition_address_space.cc(48) Check failed: reserved_base_address_\00", align 1
@.str.1 = private unnamed_addr constant [122 x i8] c"../../base/allocator/partition_allocator/partition_address_space.cc(79) Check failed: requested_address == actual_address\00", align 1
@.str.2 = private unnamed_addr constant [115 x i8] c"../../base/allocator/partition_allocator/partition_address_space.h(52) Check failed: bits::IsPowerOfTwo(pool_size)\00", align 1
@.str.3 = private unnamed_addr constant [121 x i8] c"../../base/allocator/partition_allocator/partition_address_space.h(66) Check failed: !(sample_address & (pool_size - 1))\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal21PartitionAddressSpace4InitEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"struct.base::internal::GigaCageProperties", align 8
  %2 = load i64, i64* @_ZN4base8internal21PartitionAddressSpace22reserved_base_address_E, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %4, label %32

4:                                                ; preds = %0
  %5 = bitcast %"struct.base::internal::GigaCageProperties"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"struct.base::internal::GigaCageProperties", %"struct.base::internal::GigaCageProperties"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.base::internal::GigaCageProperties", %"struct.base::internal::GigaCageProperties"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.base::internal::GigaCageProperties", %"struct.base::internal::GigaCageProperties"* %1, i64 0, i32 2
  %9 = bitcast %"struct.base::internal::GigaCageProperties"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN4base8internal27CalculateGigaCagePropertiesILm2EEENS0_18GigaCagePropertiesERKNSt3__15arrayImXT_EEE(%"struct.base::internal::GigaCageProperties"* nonnull sret %1, %"struct.std::__1::array"* nonnull dereferenceable(16) @_ZN4base8internal21PartitionAddressSpace10kPoolSizesE)
  %10 = load i64, i64* %6, align 8
  %11 = load i64, i64* %7, align 8
  %12 = load i64, i64* %8, align 8
  %13 = call i8* @_ZN4base25AllocPagesWithAlignOffsetEPvmmmNS_30PageAccessibilityConfigurationENS_7PageTagE(i8* null, i64 %10, i64 %11, i64 %12, i32 0, i32 253) #4
  %14 = ptrtoint i8* %13 to i64
  store i64 %14, i64* @_ZN4base8internal21PartitionAddressSpace22reserved_base_address_E, align 8
  %15 = icmp eq i8* %13, null
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %4
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str, i64 0, i64 0)) #4
  %17 = load i64, i64* @_ZN4base8internal21PartitionAddressSpace22reserved_base_address_E, align 8
  br label %18

18:                                               ; preds = %4, %16
  %19 = phi i64 [ %14, %4 ], [ %17, %16 ]
  store i64 %19, i64* @_ZN4base8internal21PartitionAddressSpace26non_brp_pool_base_address_E, align 8
  %20 = call %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() #4
  %21 = call i32 @_ZN4base8internal18AddressPoolManager3AddEmm(%"class.base::internal::AddressPoolManager"* %20, i64 %19, i64 8589934592) #4
  store i32 %21, i32* @_ZN4base8internal21PartitionAddressSpace13non_brp_pool_E, align 4
  %22 = add i64 %19, 8589934592
  store i64 %22, i64* @_ZN4base8internal21PartitionAddressSpace22brp_pool_base_address_E, align 8
  %23 = call %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() #4
  %24 = call i32 @_ZN4base8internal18AddressPoolManager3AddEmm(%"class.base::internal::AddressPoolManager"* %23, i64 %22, i64 8589934592) #4
  store i32 %24, i32* @_ZN4base8internal21PartitionAddressSpace9brp_pool_E, align 4
  %25 = load i8*, i8** bitcast (i64* @_ZN4base8internal21PartitionAddressSpace22brp_pool_base_address_E to i8**), align 8
  %26 = call %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() #4
  %27 = load i32, i32* @_ZN4base8internal21PartitionAddressSpace9brp_pool_E, align 4
  %28 = call i8* @_ZN4base8internal18AddressPoolManager7ReserveEjPvm(%"class.base::internal::AddressPoolManager"* %26, i32 %27, i8* %25, i64 2097152) #4
  %29 = icmp eq i8* %25, %28
  br i1 %29, label %31, label %30, !prof !3

30:                                               ; preds = %18
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.1, i64 0, i64 0)) #4
  br label %31

31:                                               ; preds = %18, %30
  call void @_ZN4base20SetSystemPagesAccessEPvmNS_30PageAccessibilityConfigurationE(i8* %28, i64 2097152, i32 0) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #4
  br label %32

32:                                               ; preds = %0, %31
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal27CalculateGigaCagePropertiesILm2EEENS0_18GigaCagePropertiesERKNSt3__15arrayImXT_EEE(%"struct.base::internal::GigaCageProperties"* noalias sret, %"struct.std::__1::array"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0
  %4 = load i64, i64* %3, align 8
  %5 = tail call i64 @llvm.ctpop.i64(i64 %4) #4, !range !4
  %6 = icmp eq i64 %5, 1
  br i1 %6, label %8, label %7, !prof !3

7:                                                ; preds = %2
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.2, i64 0, i64 0)) #4
  br label %8

8:                                                ; preds = %2, %7
  %9 = icmp eq i64 %4, 0
  %10 = add i64 %4, -1
  %11 = and i64 %4, %10
  %12 = select i1 %9, i64 -6148914691236517206, i64 %11
  %13 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1
  %14 = load i64, i64* %13, align 8
  %15 = tail call i64 @llvm.ctpop.i64(i64 %14) #4, !range !4
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %30, label %29, !prof !3

17:                                               ; preds = %36
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.3, i64 0, i64 0)) #4
  br label %18

18:                                               ; preds = %36, %17
  %19 = add i64 %42, %41
  %20 = load i64, i64* %13, align 8
  %21 = add i64 %20, -1
  %22 = and i64 %21, %19
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %25, label %24, !prof !3

24:                                               ; preds = %18
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.3, i64 0, i64 0)) #4
  br label %25

25:                                               ; preds = %24, %18
  %26 = getelementptr inbounds %"struct.base::internal::GigaCageProperties", %"struct.base::internal::GigaCageProperties"* %0, i64 0, i32 0
  store i64 %39, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.base::internal::GigaCageProperties", %"struct.base::internal::GigaCageProperties"* %0, i64 0, i32 1
  store i64 %38, i64* %27, align 8
  %28 = getelementptr inbounds %"struct.base::internal::GigaCageProperties", %"struct.base::internal::GigaCageProperties"* %0, i64 0, i32 2
  store i64 %37, i64* %28, align 8
  ret void

29:                                               ; preds = %8
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.2, i64 0, i64 0)) #4
  br label %30

30:                                               ; preds = %29, %8
  %31 = icmp ugt i64 %14, %4
  br i1 %31, label %32, label %36

32:                                               ; preds = %30
  %33 = sub i64 %14, %4
  %34 = add i64 %14, -1
  %35 = and i64 %33, %34
  br label %36

36:                                               ; preds = %32, %30
  %37 = phi i64 [ %35, %32 ], [ %12, %30 ]
  %38 = phi i64 [ %14, %32 ], [ %4, %30 ]
  %39 = add i64 %14, %4
  %40 = mul i64 %38, 7
  %41 = add i64 %40, %37
  %42 = load i64, i64* %3, align 8
  %43 = add i64 %42, -1
  %44 = and i64 %43, %41
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %18, label %17, !prof !3
}

declare i8* @_ZN4base25AllocPagesWithAlignOffsetEPvmmmNS_30PageAccessibilityConfigurationENS_7PageTagE(i8*, i64, i64, i64, i32, i32) local_unnamed_addr #2

declare void @_ZN7logging8RawCheckEPKc(i8*) local_unnamed_addr #2

declare %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() local_unnamed_addr #2

declare i32 @_ZN4base8internal18AddressPoolManager3AddEmm(%"class.base::internal::AddressPoolManager"*, i64, i64) local_unnamed_addr #2

declare i8* @_ZN4base8internal18AddressPoolManager7ReserveEjPvm(%"class.base::internal::AddressPoolManager"*, i32, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base20SetSystemPagesAccessEPvmNS_30PageAccessibilityConfigurationE(i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal21PartitionAddressSpace16UninitForTestingEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"struct.base::internal::GigaCageProperties", align 8
  %2 = bitcast %"struct.base::internal::GigaCageProperties"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #4
  %3 = getelementptr inbounds %"struct.base::internal::GigaCageProperties", %"struct.base::internal::GigaCageProperties"* %1, i64 0, i32 0
  %4 = bitcast %"struct.base::internal::GigaCageProperties"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 24, i1 false)
  call void @_ZN4base8internal27CalculateGigaCagePropertiesILm2EEENS0_18GigaCagePropertiesERKNSt3__15arrayImXT_EEE(%"struct.base::internal::GigaCageProperties"* nonnull sret %1, %"struct.std::__1::array"* nonnull dereferenceable(16) @_ZN4base8internal21PartitionAddressSpace10kPoolSizesE)
  %5 = load i8*, i8** bitcast (i64* @_ZN4base8internal21PartitionAddressSpace22reserved_base_address_E to i8**), align 8
  %6 = load i64, i64* %3, align 8
  call void @_ZN4base9FreePagesEPvm(i8* %5, i64 %6) #4
  store i64 0, i64* @_ZN4base8internal21PartitionAddressSpace22reserved_base_address_E, align 8
  store i64 8589934591, i64* @_ZN4base8internal21PartitionAddressSpace26non_brp_pool_base_address_E, align 8
  store i64 8589934591, i64* @_ZN4base8internal21PartitionAddressSpace22brp_pool_base_address_E, align 8
  store i32 0, i32* @_ZN4base8internal21PartitionAddressSpace13non_brp_pool_E, align 4
  store i32 0, i32* @_ZN4base8internal21PartitionAddressSpace9brp_pool_E, align 4
  %7 = call %"class.base::internal::AddressPoolManager"* @_ZN4base8internal18AddressPoolManager11GetInstanceEv() #4
  call void @_ZN4base8internal18AddressPoolManager15ResetForTestingEv(%"class.base::internal::AddressPoolManager"* %7) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #4
  ret void
}

declare void @_ZN4base9FreePagesEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN4base8internal18AddressPoolManager15ResetForTestingEv(%"class.base::internal::AddressPoolManager"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i64 0, i64 65}
