; ModuleID = '../../chrome/common/ssl_insecure_content.cc'
source_filename = "../../chrome/common/ssl_insecure_content.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.1", [4 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.GURL* }
%"class.std::__1::allocator" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [20 x i8] c"SSL.InsecureContent\00", align 1
@_ZN12_GLOBAL__N_18kDotHTMLE = internal constant [6 x i8] c".html\00", align 1
@_ZN12_GLOBAL__N_16kDotJSE = internal constant [4 x i8] c".js\00", align 1
@_ZN12_GLOBAL__N_17kDotCSSE = internal constant [5 x i8] c".css\00", align 1
@_ZN12_GLOBAL__N_17kDotSWFE = internal constant [5 x i8] c".swf\00", align 1
@_ZZ21ReportInsecureContent22SslInsecureContentTypeE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z21ReportInsecureContent22SslInsecureContentType(i32) local_unnamed_addr #0 {
  %2 = load atomic i64, i64* @_ZZ21ReportInsecureContent22SslInsecureContentTypeE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %3 = inttoptr i64 %2 to %"class.base::HistogramBase"*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 1, i32 36, i32 37, i32 1) #4
  %7 = ptrtoint %"class.base::HistogramBase"* %6 to i64
  store atomic i64 %7, i64* @_ZZ21ReportInsecureContent22SslInsecureContentTypeE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.base::HistogramBase"* [ %3, %1 ], [ %6, %5 ]
  %10 = bitcast %"class.base::HistogramBase"* %9 to void (%"class.base::HistogramBase"*, i32)***
  %11 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %11, i64 6
  %13 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %12, align 8
  tail call void %13(%"class.base::HistogramBase"* %9, i32 %0) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z38FilteredReportInsecureContentDisplayedRK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::allocator", align 1
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #4
  %5 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 1
  %6 = load i32, i32* %5, align 4, !noalias !2
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #4, !alias.scope !2
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %24

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %12 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 0
  %13 = load i32, i32* %12, align 4, !noalias !2
  %14 = sext i32 %13 to i64
  %15 = sext i32 %6 to i64
  %16 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #4, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %11, i64 %14, i64 %15, %"class.std::__1::allocator"* nonnull dereferenceable(1) %2) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #4, !noalias !2
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  br label %24

24:                                               ; preds = %8, %10
  %25 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %9, %8 ], [ %17, %10 ]
  %26 = phi i64 [ 0, %8 ], [ %23, %10 ]
  %27 = phi i8* [ null, %8 ], [ %21, %10 ]
  %28 = phi i8 [ 0, %8 ], [ %19, %10 ]
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %30 = icmp slt i8 %28, 0
  %31 = select i1 %30, i8* %27, i8* %4
  %32 = zext i8 %28 to i64
  %33 = select i1 %30, i64 %26, i64 %32
  %34 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %31, i64 %33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN12_GLOBAL__N_18kDotHTMLE, i64 0, i64 0), i64 5, i32 1) #4
  %35 = load i8, i8* %29, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %24
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #5
  br label %40

40:                                               ; preds = %24, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #4
  br i1 %34, label %41, label %54

41:                                               ; preds = %40
  %42 = load atomic i64, i64* @_ZZ21ReportInsecureContent22SslInsecureContentTypeE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %43 = inttoptr i64 %42 to %"class.base::HistogramBase"*
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 1, i32 36, i32 37, i32 1) #4
  %47 = ptrtoint %"class.base::HistogramBase"* %46 to i64
  store atomic i64 %47, i64* @_ZZ21ReportInsecureContent22SslInsecureContentTypeE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %48

48:                                               ; preds = %41, %45
  %49 = phi %"class.base::HistogramBase"* [ %43, %41 ], [ %46, %45 ]
  %50 = bitcast %"class.base::HistogramBase"* %49 to void (%"class.base::HistogramBase"*, i32)***
  %51 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %51, i64 6
  %53 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %52, align 8
  call void %53(%"class.base::HistogramBase"* %49, i32 3) #4
  br label %54

54:                                               ; preds = %48, %40
  ret void
}

declare zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z32FilteredReportInsecureContentRanRK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::allocator", align 1
  %3 = alloca %"class.std::__1::allocator", align 1
  %4 = alloca %"class.std::__1::allocator", align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #4
  %9 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 1
  %10 = load i32, i32* %9, align 4, !noalias !7
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #4, !alias.scope !7
  %13 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %28

14:                                               ; preds = %1
  %15 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %16 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !7
  %18 = sext i32 %17 to i64
  %19 = sext i32 %10 to i64
  %20 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #4, !noalias !7
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %15, i64 %18, i64 %19, %"class.std::__1::allocator"* nonnull dereferenceable(1) %4) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #4, !noalias !7
  %21 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  br label %28

28:                                               ; preds = %12, %14
  %29 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %13, %12 ], [ %21, %14 ]
  %30 = phi i64 [ 0, %12 ], [ %27, %14 ]
  %31 = phi i8* [ null, %12 ], [ %25, %14 ]
  %32 = phi i8 [ 0, %12 ], [ %23, %14 ]
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %34 = icmp slt i8 %32, 0
  %35 = select i1 %34, i8* %31, i8* %8
  %36 = zext i8 %32 to i64
  %37 = select i1 %34, i64 %30, i64 %36
  %38 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %35, i64 %37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN12_GLOBAL__N_16kDotJSE, i64 0, i64 0), i64 3, i32 1) #4
  %39 = load i8, i8* %33, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %28
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #5
  br label %44

44:                                               ; preds = %28, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #4
  br i1 %38, label %45, label %58

45:                                               ; preds = %44
  %46 = load atomic i64, i64* @_ZZ21ReportInsecureContent22SslInsecureContentTypeE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %47 = inttoptr i64 %46 to %"class.base::HistogramBase"*
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %45
  %50 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 1, i32 36, i32 37, i32 1) #4
  %51 = ptrtoint %"class.base::HistogramBase"* %50 to i64
  store atomic i64 %51, i64* @_ZZ21ReportInsecureContent22SslInsecureContentTypeE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %52

52:                                               ; preds = %45, %49
  %53 = phi %"class.base::HistogramBase"* [ %47, %45 ], [ %50, %49 ]
  %54 = bitcast %"class.base::HistogramBase"* %53 to void (%"class.base::HistogramBase"*, i32)***
  %55 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %55, i64 6
  %57 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %56, align 8
  call void %57(%"class.base::HistogramBase"* %53, i32 8) #4
  br label %158

58:                                               ; preds = %44
  %59 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #4
  %60 = load i32, i32* %9, align 4, !noalias !12
  %61 = icmp slt i32 %60, 1
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #4, !alias.scope !12
  %63 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %78

64:                                               ; preds = %58
  %65 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %66 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 0
  %67 = load i32, i32* %66, align 4, !noalias !12
  %68 = sext i32 %67 to i64
  %69 = sext i32 %60 to i64
  %70 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %70) #4, !noalias !12
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %65, i64 %68, i64 %69, %"class.std::__1::allocator"* nonnull dereferenceable(1) %3) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %70) #4, !noalias !12
  %71 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %62, %64
  %79 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %63, %62 ], [ %71, %64 ]
  %80 = phi i64 [ 0, %62 ], [ %77, %64 ]
  %81 = phi i8* [ null, %62 ], [ %75, %64 ]
  %82 = phi i8 [ 0, %62 ], [ %73, %64 ]
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %84 = icmp slt i8 %82, 0
  %85 = select i1 %84, i8* %81, i8* %59
  %86 = zext i8 %82 to i64
  %87 = select i1 %84, i64 %80, i64 %86
  %88 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %85, i64 %87, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN12_GLOBAL__N_17kDotCSSE, i64 0, i64 0), i64 4, i32 1) #4
  %89 = load i8, i8* %83, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %78
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #5
  br label %94

94:                                               ; preds = %78, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #4
  br i1 %88, label %95, label %108

95:                                               ; preds = %94
  %96 = load atomic i64, i64* @_ZZ21ReportInsecureContent22SslInsecureContentTypeE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %97 = inttoptr i64 %96 to %"class.base::HistogramBase"*
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %95
  %100 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 1, i32 36, i32 37, i32 1) #4
  %101 = ptrtoint %"class.base::HistogramBase"* %100 to i64
  store atomic i64 %101, i64* @_ZZ21ReportInsecureContent22SslInsecureContentTypeE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %102

102:                                              ; preds = %95, %99
  %103 = phi %"class.base::HistogramBase"* [ %97, %95 ], [ %100, %99 ]
  %104 = bitcast %"class.base::HistogramBase"* %103 to void (%"class.base::HistogramBase"*, i32)***
  %105 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %105, i64 6
  %107 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %106, align 8
  call void %107(%"class.base::HistogramBase"* %103, i32 9) #4
  br label %158

108:                                              ; preds = %94
  %109 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #4
  %110 = load i32, i32* %9, align 4, !noalias !17
  %111 = icmp slt i32 %110, 1
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 24, i1 false) #4, !alias.scope !17
  %113 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %128

114:                                              ; preds = %108
  %115 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %116 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 0
  %117 = load i32, i32* %116, align 4, !noalias !17
  %118 = sext i32 %117 to i64
  %119 = sext i32 %110 to i64
  %120 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %120) #4, !noalias !17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %7, %"class.std::__1::basic_string"* dereferenceable(24) %115, i64 %118, i64 %119, %"class.std::__1::allocator"* nonnull dereferenceable(1) %2) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %120) #4, !noalias !17
  %121 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  br label %128

128:                                              ; preds = %112, %114
  %129 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %112 ], [ %121, %114 ]
  %130 = phi i64 [ 0, %112 ], [ %127, %114 ]
  %131 = phi i8* [ null, %112 ], [ %125, %114 ]
  %132 = phi i8 [ 0, %112 ], [ %123, %114 ]
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %134 = icmp slt i8 %132, 0
  %135 = select i1 %134, i8* %131, i8* %109
  %136 = zext i8 %132 to i64
  %137 = select i1 %134, i64 %130, i64 %136
  %138 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %135, i64 %137, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN12_GLOBAL__N_17kDotSWFE, i64 0, i64 0), i64 4, i32 1) #4
  %139 = load i8, i8* %133, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %128
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  call void @_ZdlPv(i8* %143) #5
  br label %144

144:                                              ; preds = %128, %141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #4
  br i1 %138, label %145, label %158

145:                                              ; preds = %144
  %146 = load atomic i64, i64* @_ZZ21ReportInsecureContent22SslInsecureContentTypeE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %147 = inttoptr i64 %146 to %"class.base::HistogramBase"*
  %148 = icmp eq i64 %146, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %145
  %150 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 1, i32 36, i32 37, i32 1) #4
  %151 = ptrtoint %"class.base::HistogramBase"* %150 to i64
  store atomic i64 %151, i64* @_ZZ21ReportInsecureContent22SslInsecureContentTypeE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %152

152:                                              ; preds = %145, %149
  %153 = phi %"class.base::HistogramBase"* [ %147, %145 ], [ %150, %149 ]
  %154 = bitcast %"class.base::HistogramBase"* %153 to void (%"class.base::HistogramBase"*, i32)***
  %155 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %155, i64 6
  %157 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %156, align 8
  call void %157(%"class.base::HistogramBase"* %153, i32 10) #4
  br label %158

158:                                              ; preds = %102, %152, %144, %52
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!4 = distinct !{!4, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!5 = distinct !{!5, !6, !"_ZNK4GURL4pathEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4GURL4pathEv"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!9 = distinct !{!9, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!10 = distinct !{!10, !11, !"_ZNK4GURL4pathEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4GURL4pathEv"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!14 = distinct !{!14, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!15 = distinct !{!15, !16, !"_ZNK4GURL4pathEv: argument 0"}
!16 = distinct !{!16, !"_ZNK4GURL4pathEv"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!19 = distinct !{!19, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!20 = distinct !{!20, !21, !"_ZNK4GURL4pathEv: argument 0"}
!21 = distinct !{!21, !"_ZNK4GURL4pathEv"}
