; ModuleID = '../../chrome/browser/profiles/force_safe_search_policy_handler.cc'
source_filename = "../../chrome/browser/profiles/force_safe_search_policy_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.policy::ForceSafeSearchPolicyHandler" = type { %"class.policy::TypeCheckingPolicyHandler.base", [7 x i8] }
%"class.policy::TypeCheckingPolicyHandler.base" = type <{ %"class.policy::NamedPolicyHandler", i8 }>
%"class.policy::NamedPolicyHandler" = type { %"class.policy::ConfigurationPolicyHandler", i8* }
%"class.policy::ConfigurationPolicyHandler" = type { i32 (...)** }
%"class.policy::TypeCheckingPolicyHandler" = type <{ %"class.policy::NamedPolicyHandler", i8, [7 x i8] }>
%"class.policy::PolicyMap" = type { %"class.std::__1::map", i8, %"class.base::internal::flat_tree", %"class.base::internal::flat_tree" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::basic_string"* }
%class.PrefValueMap = type { i32 (...)**, %"class.std::__1::map.14" }
%"class.std::__1::map.14" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.23" }
%"union.absl::variant_internal::DestructibleUnionImpl.23" = type { %"union.absl::variant_internal::DestructibleUnionImpl.24" }
%"union.absl::variant_internal::DestructibleUnionImpl.24" = type { %"union.absl::variant_internal::DestructibleUnionImpl.25" }
%"union.absl::variant_internal::DestructibleUnionImpl.25" = type { %"union.absl::variant_internal::DestructibleUnionImpl.26" }
%"union.absl::variant_internal::DestructibleUnionImpl.26" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.policy::PolicyErrorMap" = type opaque
%"struct.policy::PolicyHandlerParameters" = type opaque

@_ZN6policy3key16kForceSafeSearchE = external constant [0 x i8], align 1
@_ZTVN6policy28ForceSafeSearchPolicyHandlerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.policy::ForceSafeSearchPolicyHandler"*)* @_ZN6policy28ForceSafeSearchPolicyHandlerD2Ev to i8*), i8* bitcast (void (%"class.policy::ForceSafeSearchPolicyHandler"*)* @_ZN6policy28ForceSafeSearchPolicyHandlerD0Ev to i8*), i8* bitcast (i1 (%"class.policy::TypeCheckingPolicyHandler"*, %"class.policy::PolicyMap"*, %"class.policy::PolicyErrorMap"*)* @_ZN6policy25TypeCheckingPolicyHandler19CheckPolicySettingsERKNS_9PolicyMapEPNS_14PolicyErrorMapE to i8*), i8* bitcast (void (%"class.policy::ConfigurationPolicyHandler"*, %"class.policy::PolicyMap"*, %"struct.policy::PolicyHandlerParameters"*, %class.PrefValueMap*)* @_ZN6policy26ConfigurationPolicyHandler33ApplyPolicySettingsWithParametersERKNS_9PolicyMapERKNS_23PolicyHandlerParametersEP12PrefValueMap to i8*), i8* bitcast (void (%"class.policy::ConfigurationPolicyHandler"*, %"class.policy::PolicyMap"*)* @_ZNK6policy26ConfigurationPolicyHandler20PrepareForDisplayingEPNS_9PolicyMapE to i8*), i8* bitcast (void (%"class.policy::ForceSafeSearchPolicyHandler"*, %"class.policy::PolicyMap"*, %class.PrefValueMap*)* @_ZN6policy28ForceSafeSearchPolicyHandler19ApplyPolicySettingsERKNS_9PolicyMapEP12PrefValueMap to i8*)] }, align 8
@_ZN6policy3key22kForceGoogleSafeSearchE = external constant [0 x i8], align 1
@_ZN6policy3key23kForceYouTubeSafetyModeE = external constant [0 x i8], align 1
@_ZN6policy3key21kForceYouTubeRestrictE = external constant [0 x i8], align 1
@_ZN5prefs22kForceGoogleSafeSearchE = external constant [0 x i8], align 1
@_ZN5prefs21kForceYouTubeRestrictE = external constant [0 x i8], align 1

@_ZN6policy28ForceSafeSearchPolicyHandlerC1Ev = hidden unnamed_addr alias void (%"class.policy::ForceSafeSearchPolicyHandler"*), void (%"class.policy::ForceSafeSearchPolicyHandler"*)* @_ZN6policy28ForceSafeSearchPolicyHandlerC2Ev
@_ZN6policy28ForceSafeSearchPolicyHandlerD1Ev = hidden unnamed_addr alias void (%"class.policy::ForceSafeSearchPolicyHandler"*), void (%"class.policy::ForceSafeSearchPolicyHandler"*)* @_ZN6policy28ForceSafeSearchPolicyHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy28ForceSafeSearchPolicyHandlerC2Ev(%"class.policy::ForceSafeSearchPolicyHandler"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.policy::ForceSafeSearchPolicyHandler"* %0 to %"class.policy::TypeCheckingPolicyHandler"*
  tail call void @_ZN6policy25TypeCheckingPolicyHandlerC2EPKcN4base5Value4TypeE(%"class.policy::TypeCheckingPolicyHandler"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key16kForceSafeSearchE, i64 0, i64 0), i8 zeroext 1) #8
  %3 = getelementptr inbounds %"class.policy::ForceSafeSearchPolicyHandler", %"class.policy::ForceSafeSearchPolicyHandler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN6policy28ForceSafeSearchPolicyHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN6policy25TypeCheckingPolicyHandlerC2EPKcN4base5Value4TypeE(%"class.policy::TypeCheckingPolicyHandler"*, i8*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6policy25TypeCheckingPolicyHandlerD2Ev(%"class.policy::TypeCheckingPolicyHandler"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy28ForceSafeSearchPolicyHandlerD2Ev(%"class.policy::ForceSafeSearchPolicyHandler"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.policy::ForceSafeSearchPolicyHandler"* %0 to %"class.policy::TypeCheckingPolicyHandler"*
  tail call void @_ZN6policy25TypeCheckingPolicyHandlerD2Ev(%"class.policy::TypeCheckingPolicyHandler"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy28ForceSafeSearchPolicyHandlerD0Ev(%"class.policy::ForceSafeSearchPolicyHandler"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.policy::ForceSafeSearchPolicyHandler"* %0 to %"class.policy::TypeCheckingPolicyHandler"*
  tail call void @_ZN6policy25TypeCheckingPolicyHandlerD2Ev(%"class.policy::TypeCheckingPolicyHandler"* %2) #8
  %3 = bitcast %"class.policy::ForceSafeSearchPolicyHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy28ForceSafeSearchPolicyHandler19ApplyPolicySettingsERKNS_9PolicyMapEP12PrefValueMap(%"class.policy::ForceSafeSearchPolicyHandler"*, %"class.policy::PolicyMap"* dereferenceable(80), %class.PrefValueMap*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.base::Value", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.base::Value", align 8
  %12 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8
  %13 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key22kForceGoogleSafeSearchE, i64 0, i64 0)) #8
  %14 = icmp ugt i64 %13, -17
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %16) #10
  unreachable

17:                                               ; preds = %3
  %18 = icmp ult i64 %13, 23
  br i1 %18, label %27, label %19

19:                                               ; preds = %17
  %20 = add nuw i64 %13, 16
  %21 = and i64 %20, -16
  %22 = tail call i8* @_Znwm(i64 %21) #9
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = or i64 %21, -9223372036854775808
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %13, i64* %26, align 8
  br label %32

27:                                               ; preds = %17
  %28 = trunc i64 %13 to i8
  %29 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 %28, i8* %30, align 1
  %31 = icmp eq i64 %13, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %27, %19
  %33 = phi i8* [ %22, %19 ], [ %12, %27 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %33, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key22kForceGoogleSafeSearchE, i64 0, i64 0), i64 %13, i1 false) #8
  br label %34

34:                                               ; preds = %27, %32
  %35 = phi i8* [ %12, %27 ], [ %33, %32 ]
  %36 = getelementptr inbounds i8, i8* %35, i64 %13
  store i8 0, i8* %36, align 1
  %37 = call %"class.base::Value"* @_ZNK6policy9PolicyMap8GetValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::PolicyMap"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #8
  %38 = icmp eq %"class.base::Value"* %37, null
  br i1 %38, label %39, label %115

39:                                               ; preds = %34
  %40 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #8
  %41 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key23kForceYouTubeSafetyModeE, i64 0, i64 0)) #8
  %42 = icmp ugt i64 %41, -17
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  %44 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %44) #10
  unreachable

45:                                               ; preds = %39
  %46 = icmp ult i64 %41, 23
  br i1 %46, label %55, label %47

47:                                               ; preds = %45
  %48 = add nuw i64 %41, 16
  %49 = and i64 %48, -16
  %50 = call i8* @_Znwm(i64 %49) #9
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %50, i8** %51, align 8
  %52 = or i64 %49, -9223372036854775808
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %41, i64* %54, align 8
  br label %60

55:                                               ; preds = %45
  %56 = trunc i64 %41 to i8
  %57 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  store i8 %56, i8* %58, align 1
  %59 = icmp eq i64 %41, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %55, %47
  %61 = phi i8* [ %50, %47 ], [ %40, %55 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %61, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key23kForceYouTubeSafetyModeE, i64 0, i64 0), i64 %41, i1 false) #8
  br label %62

62:                                               ; preds = %55, %60
  %63 = phi i8* [ %40, %55 ], [ %61, %60 ]
  %64 = getelementptr inbounds i8, i8* %63, i64 %41
  store i8 0, i8* %64, align 1
  %65 = call %"class.base::Value"* @_ZNK6policy9PolicyMap8GetValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::PolicyMap"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #8
  %66 = icmp eq %"class.base::Value"* %65, null
  br i1 %66, label %67, label %105

67:                                               ; preds = %62
  %68 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #8
  %69 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key21kForceYouTubeRestrictE, i64 0, i64 0)) #8
  %70 = icmp ugt i64 %69, -17
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %72) #10
  unreachable

73:                                               ; preds = %67
  %74 = icmp ult i64 %69, 23
  br i1 %74, label %84, label %75

75:                                               ; preds = %73
  %76 = add nuw i64 %69, 16
  %77 = and i64 %76, -16
  %78 = call i8* @_Znwm(i64 %77) #9
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %78, i8** %79, align 8
  %80 = or i64 %77, -9223372036854775808
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %69, i64* %82, align 8
  %83 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %89

84:                                               ; preds = %73
  %85 = trunc i64 %69 to i8
  %86 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  store i8 %85, i8* %87, align 1
  %88 = icmp eq i64 %69, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %84, %75
  %90 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %86, %84 ], [ %83, %75 ]
  %91 = phi i8* [ %68, %84 ], [ %78, %75 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %91, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key21kForceYouTubeRestrictE, i64 0, i64 0), i64 %69, i1 false) #8
  br label %92

92:                                               ; preds = %84, %89
  %93 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %86, %84 ], [ %90, %89 ]
  %94 = phi i8* [ %68, %84 ], [ %91, %89 ]
  %95 = getelementptr inbounds i8, i8* %94, i64 %69
  store i8 0, i8* %95, align 1
  %96 = call %"class.base::Value"* @_ZNK6policy9PolicyMap8GetValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::PolicyMap"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #8
  %97 = icmp ne %"class.base::Value"* %96, null
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %92
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #9
  br label %104

104:                                              ; preds = %101, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #8
  br label %105

105:                                              ; preds = %62, %104
  %106 = phi i1 [ %97, %104 ], [ true, %62 ]
  %107 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %113) #9
  br label %114

114:                                              ; preds = %105, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #8
  br label %115

115:                                              ; preds = %34, %114
  %116 = phi i1 [ %106, %114 ], [ true, %34 ]
  %117 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %123) #9
  br label %124

124:                                              ; preds = %115, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8
  br i1 %116, label %245, label %125

125:                                              ; preds = %124
  %126 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #8
  %127 = getelementptr inbounds %"class.policy::ForceSafeSearchPolicyHandler", %"class.policy::ForceSafeSearchPolicyHandler"* %0, i64 0, i32 0, i32 0
  %128 = call i8* @_ZNK6policy18NamedPolicyHandler11policy_nameEv(%"class.policy::NamedPolicyHandler"* %127) #8
  %129 = call i64 @strlen(i8* %128) #8
  %130 = icmp ugt i64 %129, -17
  br i1 %130, label %131, label %133

131:                                              ; preds = %125
  %132 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %132) #10
  unreachable

133:                                              ; preds = %125
  %134 = icmp ult i64 %129, 23
  br i1 %134, label %144, label %135

135:                                              ; preds = %133
  %136 = add nuw i64 %129, 16
  %137 = and i64 %136, -16
  %138 = call i8* @_Znwm(i64 %137) #9
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %138, i8** %139, align 8
  %140 = or i64 %137, -9223372036854775808
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %129, i64* %142, align 8
  %143 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %149

144:                                              ; preds = %133
  %145 = trunc i64 %129 to i8
  %146 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  store i8 %145, i8* %147, align 1
  %148 = icmp eq i64 %129, 0
  br i1 %148, label %152, label %149

149:                                              ; preds = %144, %135
  %150 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %146, %144 ], [ %143, %135 ]
  %151 = phi i8* [ %126, %144 ], [ %138, %135 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %151, i8* align 1 %128, i64 %129, i1 false) #8
  br label %152

152:                                              ; preds = %144, %149
  %153 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %146, %144 ], [ %150, %149 ]
  %154 = phi i8* [ %126, %144 ], [ %151, %149 ]
  %155 = getelementptr inbounds i8, i8* %154, i64 %129
  store i8 0, i8* %155, align 1
  %156 = call %"class.base::Value"* @_ZNK6policy9PolicyMap8GetValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::PolicyMap"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #8
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %152
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #9
  br label %163

163:                                              ; preds = %152, %160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #8
  %164 = icmp eq %"class.base::Value"* %156, null
  br i1 %164, label %245, label %165

165:                                              ; preds = %163
  %166 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #8
  %167 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs22kForceGoogleSafeSearchE, i64 0, i64 0)) #8
  %168 = icmp ugt i64 %167, -17
  br i1 %168, label %169, label %171

169:                                              ; preds = %165
  %170 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %170) #10
  unreachable

171:                                              ; preds = %165
  %172 = icmp ult i64 %167, 23
  br i1 %172, label %182, label %173

173:                                              ; preds = %171
  %174 = add nuw i64 %167, 16
  %175 = and i64 %174, -16
  %176 = call i8* @_Znwm(i64 %175) #9
  %177 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %176, i8** %177, align 8
  %178 = or i64 %175, -9223372036854775808
  %179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %178, i64* %179, align 8
  %180 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %167, i64* %180, align 8
  %181 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %187

182:                                              ; preds = %171
  %183 = trunc i64 %167 to i8
  %184 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  store i8 %183, i8* %185, align 1
  %186 = icmp eq i64 %167, 0
  br i1 %186, label %190, label %187

187:                                              ; preds = %182, %173
  %188 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %184, %182 ], [ %181, %173 ]
  %189 = phi i8* [ %166, %182 ], [ %176, %173 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %189, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs22kForceGoogleSafeSearchE, i64 0, i64 0), i64 %167, i1 false) #8
  br label %190

190:                                              ; preds = %182, %187
  %191 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %184, %182 ], [ %188, %187 ]
  %192 = phi i8* [ %166, %182 ], [ %189, %187 ]
  %193 = getelementptr inbounds i8, i8* %192, i64 %167
  store i8 0, i8* %193, align 1
  call void @_ZNK4base5Value5CloneEv(%"class.base::Value"* nonnull sret %9, %"class.base::Value"* nonnull %156) #8
  %194 = call zeroext i1 @_ZN12PrefValueMap8SetValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN4base5ValueE(%class.PrefValueMap* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %"class.base::Value"* nonnull %9) #8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %9) #8
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %191, i64 0, i32 1, i32 0
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %190
  %199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i8*, i8** %199, align 8
  call void @_ZdlPv(i8* %200) #9
  br label %201

201:                                              ; preds = %190, %198
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #8
  %202 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %156, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %203 = load i64, i64* %202, align 8
  %204 = trunc i64 %203 to i8
  %205 = icmp eq i8 %204, 1
  br i1 %205, label %206, label %245

206:                                              ; preds = %201
  %207 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207) #8
  %208 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs21kForceYouTubeRestrictE, i64 0, i64 0)) #8
  %209 = icmp ugt i64 %208, -17
  br i1 %209, label %210, label %212

210:                                              ; preds = %206
  %211 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %211) #10
  unreachable

212:                                              ; preds = %206
  %213 = icmp ult i64 %208, 23
  br i1 %213, label %223, label %214

214:                                              ; preds = %212
  %215 = add nuw i64 %208, 16
  %216 = and i64 %215, -16
  %217 = call i8* @_Znwm(i64 %216) #9
  %218 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %217, i8** %218, align 8
  %219 = or i64 %216, -9223372036854775808
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %219, i64* %220, align 8
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %208, i64* %221, align 8
  %222 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %228

223:                                              ; preds = %212
  %224 = trunc i64 %208 to i8
  %225 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %225, i64 0, i32 1, i32 0
  store i8 %224, i8* %226, align 1
  %227 = icmp eq i64 %208, 0
  br i1 %227, label %231, label %228

228:                                              ; preds = %223, %214
  %229 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %225, %223 ], [ %222, %214 ]
  %230 = phi i8* [ %207, %223 ], [ %217, %214 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %230, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs21kForceYouTubeRestrictE, i64 0, i64 0), i64 %208, i1 false) #8
  br label %231

231:                                              ; preds = %223, %228
  %232 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %225, %223 ], [ %229, %228 ]
  %233 = phi i8* [ %207, %223 ], [ %230, %228 ]
  %234 = getelementptr inbounds i8, i8* %233, i64 %208
  store i8 0, i8* %234, align 1
  %235 = call zeroext i1 @_ZNK4base5Value7GetBoolEv(%"class.base::Value"* nonnull %156) #8
  %236 = zext i1 %235 to i32
  call void @_ZN4base5ValueC1Ei(%"class.base::Value"* nonnull %11, i32 %236) #8
  %237 = call zeroext i1 @_ZN12PrefValueMap8SetValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN4base5ValueE(%class.PrefValueMap* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.base::Value"* nonnull %11) #8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %11) #8
  %238 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %232, i64 0, i32 1, i32 0
  %239 = load i8, i8* %238, align 1
  %240 = icmp slt i8 %239, 0
  br i1 %240, label %241, label %244

241:                                              ; preds = %231
  %242 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load i8*, i8** %242, align 8
  call void @_ZdlPv(i8* %243) #9
  br label %244

244:                                              ; preds = %231, %241
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #8
  br label %245

245:                                              ; preds = %244, %201, %163, %124
  ret void
}

declare %"class.base::Value"* @_ZNK6policy9PolicyMap8GetValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.policy::PolicyMap"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare i8* @_ZNK6policy18NamedPolicyHandler11policy_nameEv(%"class.policy::NamedPolicyHandler"*) local_unnamed_addr #1

declare zeroext i1 @_ZN12PrefValueMap8SetValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN4base5ValueE(%class.PrefValueMap*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Value"*) local_unnamed_addr #1

declare void @_ZNK4base5Value5CloneEv(%"class.base::Value"* sret, %"class.base::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

declare zeroext i1 @_ZNK4base5Value7GetBoolEv(%"class.base::Value"*) local_unnamed_addr #1

declare void @_ZN4base5ValueC1Ei(%"class.base::Value"*, i32) unnamed_addr #1

declare zeroext i1 @_ZN6policy25TypeCheckingPolicyHandler19CheckPolicySettingsERKNS_9PolicyMapEPNS_14PolicyErrorMapE(%"class.policy::TypeCheckingPolicyHandler"*, %"class.policy::PolicyMap"* dereferenceable(80), %"class.policy::PolicyErrorMap"*) unnamed_addr #1

declare void @_ZN6policy26ConfigurationPolicyHandler33ApplyPolicySettingsWithParametersERKNS_9PolicyMapERKNS_23PolicyHandlerParametersEP12PrefValueMap(%"class.policy::ConfigurationPolicyHandler"*, %"class.policy::PolicyMap"* dereferenceable(80), %"struct.policy::PolicyHandlerParameters"*, %class.PrefValueMap*) unnamed_addr #1

declare void @_ZNK6policy26ConfigurationPolicyHandler20PrepareForDisplayingEPNS_9PolicyMapE(%"class.policy::ConfigurationPolicyHandler"*, %"class.policy::PolicyMap"*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
