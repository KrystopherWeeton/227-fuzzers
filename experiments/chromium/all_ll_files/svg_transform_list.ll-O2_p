; ModuleID = '../../third_party/blink/renderer/core/svg/svg_transform_list.cc'
source_filename = "../../third_party/blink/renderer/core/svg/svg_transform_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.153", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.194", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.133", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i64 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist.99"* }
%"class.blink::Worklist.99" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.127", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { i64 }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { float }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.136", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.145" }
%"class.WTF::Vector.145" = type { %"class.WTF::VectorBuffer.146" }
%"class.WTF::VectorBuffer.146" = type { %"class.WTF::VectorBufferBase.147" }
%"class.WTF::VectorBufferBase.147" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.161" }
%"class.WTF::VectorBuffer.161" = type { %"class.WTF::VectorBufferBase.162" }
%"class.WTF::VectorBufferBase.162" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.175" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.85"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.92"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.198" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.193 }
%class.scoped_refptr.193 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__cxx_atomic_impl.196" }
%"struct.std::__1::__cxx_atomic_impl.196" = type { %"struct.std::__1::__cxx_atomic_base_impl.197" }
%"struct.std::__1::__cxx_atomic_base_impl.197" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.236" }
%"struct.std::__1::atomic.236" = type { %"struct.std::__1::__atomic_base.237" }
%"struct.std::__1::__atomic_base.237" = type { %"struct.std::__1::__atomic_base.238" }
%"struct.std::__1::__atomic_base.238" = type { %"struct.std::__1::__cxx_atomic_impl.239" }
%"struct.std::__1::__cxx_atomic_impl.239" = type { %"struct.std::__1::__cxx_atomic_base_impl.240" }
%"struct.std::__1::__cxx_atomic_base_impl.240" = type { i32 }
%"class.blink::SVGTransformList" = type { %"class.blink::SVGListPropertyHelper" }
%"class.blink::SVGListPropertyHelper" = type { %"class.blink::SVGListPropertyBase" }
%"class.blink::SVGListPropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::HeapVector" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::SVGListablePropertyBase"* }
%"class.blink::SVGListablePropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::UntracedMember" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::SVGListPropertyBase"* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector.4" = type { %"class.WTF::VectorBuffer.5" }
%"class.WTF::VectorBuffer.5" = type { %"class.WTF::VectorBufferBase.6", [24 x i8] }
%"class.WTF::VectorBufferBase.6" = type { float*, i32, i32 }
%"class.blink::SVGTransform" = type { %"class.blink::SVGListablePropertyBase", i32, float, %"class.blink::FloatPoint", %"class.blink::AffineTransform" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSIdentifierValue" = type { %"class.blink::CSSValue", i32 }
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector.10" }
%"class.blink::HeapVector.10" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15", [32 x i8] }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::Member.16"*, i32, i32 }
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSNumericLiteralValue" = type { %"class.blink::CSSPrimitiveValue", double }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::SVGElement" = type opaque
%"struct.blink::SMILAnimationEffectParameters" = type { i8, i8, i8 }
%"class.blink::SVGTransformDistance" = type { i32, float, float, float, %"class.blink::AffineTransform" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink16SVGTransformList13ParseInternalIDsEENS_15SVGParsingErrorERPKT_S5_ = comdat any

$_ZN5blink16SVGTransformList13ParseInternalIhEENS_15SVGParsingErrorERPKT_S5_ = comdat any

$_ZNK5blink21SVGListPropertyHelperINS_16SVGTransformListENS_12SVGTransformEE17CloneForAnimationERKN3WTF6StringE = comdat any

$_ZNK5blink21SVGListPropertyHelperINS_16SVGTransformListENS_12SVGTransformEE7GetTypeEv = comdat any

$_ZNK5blink19SVGListPropertyBase5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink21SVGListPropertyHelperINS_16SVGTransformListENS_12SVGTransformEE5CloneEv = comdat any

$_ZNK5blink21SVGListPropertyHelperINS_16SVGTransformListENS_12SVGTransformEE17CreatePaddingItemEv = comdat any

$_ZN3WTF6VectorIfLj6ENS_18PartitionAllocatorEE14AppendSlowCaseIRfEEvOT_ = comdat any

$_ZN3WTF6VectorIfLj6ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIfLj6ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm = comdat any

$_ZN3WTF12VectorBufferIfLj6ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPf = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv = comdat any

$_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_16CSSFunctionValueEEEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23SVGListablePropertyBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_23SVGListablePropertyBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink16SVGTransformListE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SVGTransformList"*)* @_ZN5blink16SVGTransformListD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGTransformList"*)* @_ZN5blink16SVGTransformListD0Ev to i8*), i8* bitcast (%"class.blink::SVGPropertyBase"* (%"class.blink::SVGTransformList"*, %"class.WTF::String"*)* @_ZNK5blink16SVGTransformList17CloneForAnimationERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGListPropertyBase"*)* @_ZNK5blink19SVGListPropertyBase13ValueAsStringEv to i8*), i8* bitcast (void (%"class.blink::SVGTransformList"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)* @_ZN5blink16SVGTransformList3AddEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE to i8*), i8* bitcast (void (%"class.blink::SVGTransformList"*, %"struct.blink::SMILAnimationEffectParameters"*, float, i32, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)* @_ZN5blink16SVGTransformList22CalculateAnimatedValueERKNS_29SMILAnimationEffectParametersEfjPKNS_15SVGPropertyBaseES6_S6_PKNS_10SVGElementE to i8*), i8* bitcast (float (%"class.blink::SVGTransformList"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)* @_ZNK5blink16SVGTransformList17CalculateDistanceEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE to i8*), i8* bitcast (i32 (%"class.blink::SVGListPropertyHelper"*)* @_ZNK5blink21SVGListPropertyHelperINS_16SVGTransformListENS_12SVGTransformEE7GetTypeEv to i8*), i8* bitcast (void (%"class.blink::SVGListPropertyBase"*, %"class.blink::Visitor"*)* @_ZNK5blink19SVGListPropertyBase5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::SVGTransformList"* (%"class.blink::SVGListPropertyHelper"*)* @_ZNK5blink21SVGListPropertyHelperINS_16SVGTransformListENS_12SVGTransformEE5CloneEv to i8*), i8* bitcast (%"class.blink::SVGTransform"* (%"class.blink::SVGListPropertyHelper"*)* @_ZNK5blink21SVGListPropertyHelperINS_16SVGTransformListENS_12SVGTransformEE17CreatePaddingItemEv to i8*)] }, align 8
@_ZN5blink12_GLOBAL__N_122kRequiredValuesForTypeE = internal unnamed_addr constant [7 x i32] [i32 0, i32 6, i32 1, i32 1, i32 1, i32 1, i32 1], align 16
@_ZN5blink12_GLOBAL__N_122kOptionalValuesForTypeE = internal unnamed_addr constant [7 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 0, i32 0], align 16
@.str = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv = private unnamed_addr constant [53 x i8] c"const char *WTF::GetStringWithTypeName() [T = float]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGPropertyBaseEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGPropertyBase]\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.7 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.8 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"blink::CSSValue\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.10 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.12 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8CSSValueEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<const blink::CSSValue>, WTF::VectorTraits<blink::Member<const blink::CSSValue> > >]\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"translate\00", align 1
@switch.table._ZN5blink12_GLOBAL__N_123CreateTransformCSSValueERKNS_12SVGTransformE = private unnamed_addr constant [6 x i32] [i32 790, i32 806, i32 798, i32 793, i32 804, i32 805], align 4

@_ZN5blink16SVGTransformListC1Ev = hidden unnamed_addr alias void (%"class.blink::SVGTransformList"*), void (%"class.blink::SVGTransformList"*)* @_ZN5blink16SVGTransformListC2Ev
@_ZN5blink16SVGTransformListC1ENS_16SVGTransformTypeERKN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::SVGTransformList"*, i32, %"class.WTF::String"*), void (%"class.blink::SVGTransformList"*, i32, %"class.WTF::String"*)* @_ZN5blink16SVGTransformListC2ENS_16SVGTransformTypeERKN3WTF6StringE
@_ZN5blink16SVGTransformListD1Ev = hidden unnamed_addr alias void (%"class.blink::SVGTransformList"*), void (%"class.blink::SVGTransformList"*)* @_ZN5blink16SVGTransformListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGTransformListC2Ev(%"class.blink::SVGTransformList"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::HeapVector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #9
  %4 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink16SVGTransformListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGTransformListC2ENS_16SVGTransformTypeERKN3WTF6StringE(%"class.blink::SVGTransformList"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = alloca %"class.WTF::Vector.4", align 8
  %7 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.blink::HeapVector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #9
  %9 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink16SVGTransformListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %98, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %98, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.WTF::Vector.4"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %6, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  %20 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %6, i64 0, i32 0, i32 1, i64 0
  %21 = bitcast %"class.WTF::Vector.4"* %6 to i8**
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %6, i64 0, i32 0, i32 0, i32 1
  store i32 6, i32* %22, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %6, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  br i1 %27, label %59, label %29

29:                                               ; preds = %17
  %30 = bitcast %"class.WTF::StringImpl"* %28 to i8*
  %31 = load i32, i32* %14, align 4
  %32 = zext i32 %31 to i64
  %33 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = bitcast i8** %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %34, align 8
  %35 = getelementptr inbounds i8, i8* %30, i64 %32
  %36 = call fastcc i32 @_ZN5blink12_GLOBAL__N_130ParseTransformArgumentsForTypeIhEENS_14SVGParseStatusENS_16SVGTransformTypeERPKT_S6_RN3WTF6VectorIfLj6ENS8_18PartitionAllocatorEEE(i32 %1, i8** nonnull dereferenceable(8) %4, i8* %35, %"class.WTF::Vector.4"* nonnull dereferenceable(40) %6) #9
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  br label %86

39:                                               ; preds = %29
  %40 = load i8*, i8** %4, align 8
  %41 = icmp ult i8* %40, %35
  br i1 %41, label %42, label %80

42:                                               ; preds = %39
  %43 = load i8, i8* %40, align 1
  %44 = icmp ult i8 %43, 33
  br i1 %44, label %49, label %45

45:                                               ; preds = %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  br label %86

46:                                               ; preds = %53
  %47 = load i8, i8* %54, align 1
  %48 = icmp ult i8 %47, 33
  br i1 %48, label %49, label %57

49:                                               ; preds = %42, %46
  %50 = phi i8 [ %47, %46 ], [ %43, %42 ]
  %51 = phi i8* [ %54, %46 ], [ %40, %42 ]
  %52 = phi i1 [ %55, %46 ], [ true, %42 ]
  switch i8 %50, label %57 [
    i8 32, label %53
    i8 10, label %53
    i8 9, label %53
    i8 13, label %53
    i8 12, label %53
  ]

53:                                               ; preds = %49, %49, %49, %49, %49
  %54 = getelementptr inbounds i8, i8* %51, i64 1
  store i8* %54, i8** %4, align 8
  %55 = icmp ult i8* %54, %35
  %56 = icmp eq i8* %54, %35
  br i1 %56, label %57, label %46

57:                                               ; preds = %46, %49, %53
  %58 = phi i1 [ %55, %46 ], [ %52, %49 ], [ %55, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  br i1 %58, label %86, label %82

59:                                               ; preds = %17
  %60 = bitcast %"class.WTF::StringImpl"* %28 to i16*
  %61 = load i32, i32* %14, align 4
  %62 = zext i32 %61 to i64
  %63 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #9
  %64 = bitcast i16** %5 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %64, align 8
  %65 = getelementptr inbounds i16, i16* %60, i64 %62
  %66 = call fastcc i32 @_ZN5blink12_GLOBAL__N_130ParseTransformArgumentsForTypeIDsEENS_14SVGParseStatusENS_16SVGTransformTypeERPKT_S6_RN3WTF6VectorIfLj6ENS8_18PartitionAllocatorEEE(i32 %1, i16** nonnull dereferenceable(8) %5, i16* %65, %"class.WTF::Vector.4"* nonnull dereferenceable(40) %6) #9
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %79

68:                                               ; preds = %59
  %69 = load i16*, i16** %5, align 8
  %70 = icmp ult i16* %69, %65
  br i1 %70, label %71, label %80

71:                                               ; preds = %68, %76
  %72 = phi i16* [ %77, %76 ], [ %69, %68 ]
  %73 = load i16, i16* %72, align 2
  %74 = icmp ult i16 %73, 33
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  switch i16 %73, label %79 [
    i16 32, label %76
    i16 10, label %76
    i16 9, label %76
    i16 13, label %76
    i16 12, label %76
  ]

76:                                               ; preds = %75, %75, %75, %75, %75
  %77 = getelementptr inbounds i16, i16* %72, i64 1
  store i16* %77, i16** %5, align 8
  %78 = icmp ult i16* %77, %65
  br i1 %78, label %71, label %80

79:                                               ; preds = %75, %71, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #9
  br label %86

80:                                               ; preds = %76, %68, %39
  %81 = phi i8* [ %33, %39 ], [ %63, %68 ], [ %63, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #9
  br label %82

82:                                               ; preds = %80, %57
  %83 = call fastcc %"class.blink::SVGTransform"* @_ZN5blink12_GLOBAL__N_125CreateTransformFromValuesENS_16SVGTransformTypeERKN3WTF6VectorIfLj6ENS2_18PartitionAllocatorEEE(i32 %1, %"class.WTF::Vector.4"* nonnull dereferenceable(40) %6)
  %84 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %83, i64 0, i32 0
  call void @_ZN5blink19SVGListPropertyBase6AppendEPNS_23SVGListablePropertyBaseE(%"class.blink::SVGListPropertyBase"* %84, %"class.blink::SVGListablePropertyBase"* %85) #9
  br label %86

86:                                               ; preds = %57, %45, %38, %79, %82
  %87 = load i32, i32* %23, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %90, label %89, !prof !2

89:                                               ; preds = %86
  store i32 0, i32* %23, align 4
  br label %90

90:                                               ; preds = %89, %86
  %91 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %6, i64 0, i32 0, i32 0, i32 0
  %92 = load float*, float** %91, align 8
  %93 = bitcast i8* %20 to float*
  %94 = icmp eq float* %92, %93
  br i1 %94, label %97, label %95, !prof !3

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %6, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIfLj6ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPf(%"class.WTF::VectorBuffer.5"* nonnull %96, float* %92) #9
  br label %97

97:                                               ; preds = %90, %95
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #9
  br label %98

98:                                               ; preds = %3, %13, %97
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::SVGTransform"* @_ZN5blink12_GLOBAL__N_125CreateTransformFromValuesENS_16SVGTransformTypeERKN3WTF6VectorIfLj6ENS2_18PartitionAllocatorEEE(i32, %"class.WTF::Vector.4"* dereferenceable(40)) unnamed_addr #0 {
  %3 = alloca %"class.blink::AffineTransform", align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 80) #9
  %5 = bitcast i8* %4 to %"class.blink::SVGTransform"*
  tail call void @_ZN5blink12SVGTransformC1Ev(%"class.blink::SVGTransform"* %5) #9
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  switch i32 %0, label %70 [
    i32 5, label %10
    i32 6, label %13
    i32 3, label %16
    i32 2, label %28
    i32 4, label %38
    i32 1, label %50
  ]

10:                                               ; preds = %2
  %11 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %1, i32 0) #9
  %12 = load float, float* %11, align 4
  tail call void @_ZN5blink12SVGTransform8SetSkewXEf(%"class.blink::SVGTransform"* %5, float %12) #9
  br label %70

13:                                               ; preds = %2
  %14 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %1, i32 0) #9
  %15 = load float, float* %14, align 4
  tail call void @_ZN5blink12SVGTransform8SetSkewYEf(%"class.blink::SVGTransform"* %5, float %15) #9
  br label %70

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %1, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 1
  %20 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %1, i32 0) #9
  %21 = load float, float* %20, align 4
  br i1 %19, label %22, label %25

22:                                               ; preds = %16
  %23 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %1, i32 0) #9
  %24 = load float, float* %23, align 4
  tail call void @_ZN5blink12SVGTransform8SetScaleEff(%"class.blink::SVGTransform"* %5, float %21, float %24) #9
  br label %70

25:                                               ; preds = %16
  %26 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %1, i32 1) #9
  %27 = load float, float* %26, align 4
  tail call void @_ZN5blink12SVGTransform8SetScaleEff(%"class.blink::SVGTransform"* %5, float %21, float %27) #9
  br label %70

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %1, i64 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 1
  %32 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %1, i32 0) #9
  %33 = load float, float* %32, align 4
  br i1 %31, label %34, label %35

34:                                               ; preds = %28
  tail call void @_ZN5blink12SVGTransform12SetTranslateEff(%"class.blink::SVGTransform"* %5, float %33, float 0.000000e+00) #9
  br label %70

35:                                               ; preds = %28
  %36 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %1, i32 1) #9
  %37 = load float, float* %36, align 4
  tail call void @_ZN5blink12SVGTransform12SetTranslateEff(%"class.blink::SVGTransform"* %5, float %33, float %37) #9
  br label %70

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %1, i64 0, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 1
  %42 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %1, i32 0) #9
  %43 = load float, float* %42, align 4
  br i1 %41, label %44, label %45

44:                                               ; preds = %38
  tail call void @_ZN5blink12SVGTransform9SetRotateEfff(%"class.blink::SVGTransform"* %5, float %43, float 0.000000e+00, float 0.000000e+00) #9
  br label %70

45:                                               ; preds = %38
  %46 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %1, i32 1) #9
  %47 = load float, float* %46, align 4
  %48 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %1, i32 2) #9
  %49 = load float, float* %48, align 4
  tail call void @_ZN5blink12SVGTransform9SetRotateEfff(%"class.blink::SVGTransform"* %5, float %43, float %47, float %49) #9
  br label %70

50:                                               ; preds = %2
  %51 = bitcast %"class.blink::AffineTransform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %51) #9
  %52 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %1, i32 0) #9
  %53 = load float, float* %52, align 4
  %54 = fpext float %53 to double
  %55 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %1, i32 1) #9
  %56 = load float, float* %55, align 4
  %57 = fpext float %56 to double
  %58 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %1, i32 2) #9
  %59 = load float, float* %58, align 4
  %60 = fpext float %59 to double
  %61 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %1, i32 3) #9
  %62 = load float, float* %61, align 4
  %63 = fpext float %62 to double
  %64 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %1, i32 4) #9
  %65 = load float, float* %64, align 4
  %66 = fpext float %65 to double
  %67 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %1, i32 5) #9
  %68 = load float, float* %67, align 4
  %69 = fpext float %68 to double
  call void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"* nonnull %3, double %54, double %57, double %60, double %63, double %66, double %69) #9
  call void @_ZN5blink12SVGTransform9SetMatrixERKNS_15AffineTransformE(%"class.blink::SVGTransform"* %5, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %51) #9
  br label %70

70:                                               ; preds = %44, %45, %34, %35, %22, %25, %2, %50, %13, %10
  ret %"class.blink::SVGTransform"* %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink16SVGTransformListD2Ev(%"class.blink::SVGTransformList"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink16SVGTransformListD0Ev(%"class.blink::SVGTransformList"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16SVGTransformList11ConcatenateEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::SVGTransformList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -1, i64 48, i1 false)
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %0) #9
  %4 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %12, %2
  ret void

12:                                               ; preds = %2, %12
  %13 = phi %"class.blink::Member"* [ %18, %12 ], [ %5, %2 ]
  %14 = bitcast %"class.blink::Member"* %13 to %"class.blink::SVGTransform"**
  %15 = load %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %15, i64 0, i32 4
  %17 = tail call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform8MultiplyERKS0_(%"class.blink::AffineTransform"* %0, %"class.blink::AffineTransform"* dereferenceable(48) %16) #9
  %18 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 1
  %19 = icmp eq %"class.blink::Member"* %18, %9
  br i1 %19, label %11, label %12
}

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink16SVGTransformList8CssValueEv(%"class.blink::SVGTransformList"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 3) #9
  %7 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %6, i64 0, i32 0
  br label %90

8:                                                ; preds = %1
  %9 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #9
  %10 = bitcast i8* %9 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %10, i32 0) #9
  %11 = getelementptr inbounds i8, i8* %9, i64 -4
  %12 = bitcast i8* %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = or i16 %13, 1
  store atomic i16 %14, i16* %12 release, align 2
  %15 = icmp eq i32 %3, 1
  br i1 %15, label %16, label %47

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %18 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %17, i32 0) #9
  %19 = bitcast %"class.blink::Member"* %18 to %"class.blink::SVGTransform"**
  %20 = load %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"** %19, align 8
  %21 = tail call fastcc %"class.blink::CSSValue"* @_ZN5blink12_GLOBAL__N_123CreateTransformCSSValueERKNS_12SVGTransformE(%"class.blink::SVGTransform"* dereferenceable(80) %20)
  %22 = getelementptr inbounds i8, i8* %9, i64 8
  %23 = getelementptr inbounds i8, i8* %9, i64 20
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds i8, i8* %9, i64 16
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %25, %28
  br i1 %29, label %45, label %30, !prof !2

30:                                               ; preds = %16
  %31 = bitcast i8* %22 to %"class.blink::Member.16"**
  %32 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %31, align 8
  %33 = zext i32 %25 to i64
  %34 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %32, i64 %33
  %35 = ptrtoint %"class.blink::CSSValue"* %21 to i64
  %36 = bitcast %"class.blink::Member.16"* %34 to i64*
  store atomic i64 %35, i64* %36 monotonic, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %21, i64 0, i32 0
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #9
  br label %42

42:                                               ; preds = %39, %30
  %43 = load i32, i32* %24, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %24, align 4
  br label %88

45:                                               ; preds = %16
  %46 = bitcast i8* %22 to %"class.WTF::Vector.13"*
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"* %46, %"class.blink::CSSValue"* dereferenceable(3) %21) #9
  br label %88

47:                                               ; preds = %8
  %48 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::Member"*, %"class.blink::Member"** %48, align 8
  %50 = load i32, i32* %2, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %49, i64 %51
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %88, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds i8, i8* %9, i64 8
  %56 = getelementptr inbounds i8, i8* %9, i64 20
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds i8, i8* %9, i64 16
  %59 = bitcast i8* %58 to i32*
  %60 = bitcast i8* %55 to %"class.blink::Member.16"**
  %61 = bitcast i8* %55 to %"class.WTF::Vector.13"*
  br label %62

62:                                               ; preds = %54, %85
  %63 = phi %"class.blink::Member"* [ %49, %54 ], [ %86, %85 ]
  %64 = bitcast %"class.blink::Member"* %63 to %"class.blink::SVGTransform"**
  %65 = load %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"** %64, align 8
  %66 = tail call fastcc %"class.blink::CSSValue"* @_ZN5blink12_GLOBAL__N_123CreateTransformCSSValueERKNS_12SVGTransformE(%"class.blink::SVGTransform"* dereferenceable(80) %65)
  %67 = load i32, i32* %57, align 4
  %68 = load i32, i32* %59, align 8
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %84, label %70, !prof !2

70:                                               ; preds = %62
  %71 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %60, align 8
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %71, i64 %72
  %74 = ptrtoint %"class.blink::CSSValue"* %66 to i64
  %75 = bitcast %"class.blink::Member.16"* %73 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %66, i64 0, i32 0
  %80 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %79) #9
  br label %81

81:                                               ; preds = %78, %70
  %82 = load i32, i32* %57, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %57, align 4
  br label %85

84:                                               ; preds = %62
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"* %61, %"class.blink::CSSValue"* dereferenceable(3) %66) #9
  br label %85

85:                                               ; preds = %81, %84
  %86 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %63, i64 1
  %87 = icmp eq %"class.blink::Member"* %86, %52
  br i1 %87, label %88, label %62

88:                                               ; preds = %85, %47, %45, %42
  %89 = bitcast i8* %9 to %"class.blink::CSSValue"*
  br label %90

90:                                               ; preds = %88, %5
  %91 = phi %"class.blink::CSSValue"* [ %89, %88 ], [ %7, %5 ]
  ret %"class.blink::CSSValue"* %91
}

declare %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::CSSValue"* @_ZN5blink12_GLOBAL__N_123CreateTransformCSSValueERKNS_12SVGTransformE(%"class.blink::SVGTransform"* nocapture readonly dereferenceable(80)) unnamed_addr #4 {
  %2 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 6
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN5blink12_GLOBAL__N_123CreateTransformCSSValueERKNS_12SVGTransformE, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i32 [ %9, %6 ], [ 0, %1 ]
  %12 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_16CSSFunctionValueEEEPvm(i64 64) #9
  %13 = bitcast i8* %12 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC2ENS_8CSSValue9ClassTypeENS1_18ValueListSeparatorE(%"class.blink::CSSValueList"* %13, i32 53, i32 1) #9
  %14 = getelementptr inbounds i8, i8* %12, i64 56
  %15 = bitcast i8* %14 to i32*
  store i32 %11, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 -4
  %17 = bitcast i8* %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = or i16 %18, 1
  store atomic i16 %19, i16* %17 release, align 2
  switch i32 %11, label %399 [
    i32 793, label %20
    i32 804, label %110
    i32 805, label %110
    i32 790, label %141
    i32 798, label %291
    i32 806, label %345
  ]

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 2
  %22 = load float, float* %21, align 4
  %23 = fpext float %22 to double
  %24 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %23, i32 19) #9
  %25 = getelementptr inbounds i8, i8* %12, i64 8
  %26 = bitcast i8* %25 to %"class.WTF::Vector.13"*
  %27 = getelementptr inbounds i8, i8* %12, i64 20
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds i8, i8* %12, i64 16
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %29, %32
  br i1 %33, label %49, label %34, !prof !2

34:                                               ; preds = %20
  %35 = bitcast i8* %25 to %"class.blink::Member.16"**
  %36 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %35, align 8
  %37 = zext i32 %29 to i64
  %38 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %36, i64 %37
  %39 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %24 to i64
  %40 = bitcast %"class.blink::Member.16"* %38 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %24, i64 0, i32 0, i32 0, i32 0
  %45 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %44) #9
  br label %46

46:                                               ; preds = %43, %34
  %47 = load i32, i32* %28, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %28, align 4
  br label %51

49:                                               ; preds = %20
  %50 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %24, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"* %26, %"class.blink::CSSValue"* dereferenceable(3) %50) #9
  br label %51

51:                                               ; preds = %46, %49
  %52 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 3
  %53 = bitcast %"class.blink::FloatPoint"* %52 to <2 x float>*
  %54 = load <2 x float>, <2 x float>* %53, align 8
  %55 = extractelement <2 x float> %54, i32 0
  %56 = extractelement <2 x float> %54, i32 1
  %57 = fcmp ogt float %55, 0xBE80000000000000
  %58 = fcmp olt float %55, 0x3E80000000000000
  %59 = and i1 %57, %58
  %60 = fcmp ogt float %56, 0xBE80000000000000
  %61 = and i1 %60, %59
  %62 = fcmp olt float %56, 0x3E80000000000000
  %63 = and i1 %62, %61
  br i1 %63, label %399, label %64

64:                                               ; preds = %51
  %65 = fpext float %55 to double
  %66 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %65, i32 18) #9
  %67 = load i32, i32* %28, align 4
  %68 = load i32, i32* %31, align 8
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %85, label %70, !prof !2

70:                                               ; preds = %64
  %71 = bitcast i8* %25 to %"class.blink::Member.16"**
  %72 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %71, align 8
  %73 = zext i32 %67 to i64
  %74 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %72, i64 %73
  %75 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %66 to i64
  %76 = bitcast %"class.blink::Member.16"* %74 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %66, i64 0, i32 0, i32 0, i32 0
  %81 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #9
  br label %82

82:                                               ; preds = %79, %70
  %83 = load i32, i32* %28, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %28, align 4
  br label %87

85:                                               ; preds = %64
  %86 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %66, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"* %26, %"class.blink::CSSValue"* dereferenceable(3) %86) #9
  br label %87

87:                                               ; preds = %82, %85
  %88 = fpext float %56 to double
  %89 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %88, i32 18) #9
  %90 = load i32, i32* %28, align 4
  %91 = load i32, i32* %31, align 8
  %92 = icmp eq i32 %90, %91
  br i1 %92, label %108, label %93, !prof !2

93:                                               ; preds = %87
  %94 = bitcast i8* %25 to %"class.blink::Member.16"**
  %95 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %94, align 8
  %96 = zext i32 %90 to i64
  %97 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %95, i64 %96
  %98 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %89 to i64
  %99 = bitcast %"class.blink::Member.16"* %97 to i64*
  store atomic i64 %98, i64* %99 monotonic, align 8
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %89, i64 0, i32 0, i32 0, i32 0
  %104 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %103) #9
  br label %105

105:                                              ; preds = %102, %93
  %106 = load i32, i32* %28, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %28, align 4
  br label %399

108:                                              ; preds = %87
  %109 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %89, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"* %26, %"class.blink::CSSValue"* dereferenceable(3) %109) #9
  br label %399

110:                                              ; preds = %10, %10
  %111 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 2
  %112 = load float, float* %111, align 4
  %113 = fpext float %112 to double
  %114 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %113, i32 19) #9
  %115 = getelementptr inbounds i8, i8* %12, i64 8
  %116 = getelementptr inbounds i8, i8* %12, i64 20
  %117 = bitcast i8* %116 to i32*
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds i8, i8* %12, i64 16
  %120 = bitcast i8* %119 to i32*
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %118, %121
  br i1 %122, label %138, label %123, !prof !2

123:                                              ; preds = %110
  %124 = bitcast i8* %115 to %"class.blink::Member.16"**
  %125 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %124, align 8
  %126 = zext i32 %118 to i64
  %127 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %125, i64 %126
  %128 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %114 to i64
  %129 = bitcast %"class.blink::Member.16"* %127 to i64*
  store atomic i64 %128, i64* %129 monotonic, align 8
  %130 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %135, label %132

132:                                              ; preds = %123
  %133 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %114, i64 0, i32 0, i32 0, i32 0
  %134 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %133) #9
  br label %135

135:                                              ; preds = %132, %123
  %136 = load i32, i32* %117, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %117, align 4
  br label %399

138:                                              ; preds = %110
  %139 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %114, i64 0, i32 0, i32 0
  %140 = bitcast i8* %115 to %"class.WTF::Vector.13"*
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"* %140, %"class.blink::CSSValue"* dereferenceable(3) %139) #9
  br label %399

141:                                              ; preds = %10
  %142 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 4, i32 0, i64 0
  %143 = load double, double* %142, align 8
  %144 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %143, i32 18) #9
  %145 = getelementptr inbounds i8, i8* %12, i64 8
  %146 = bitcast i8* %145 to %"class.WTF::Vector.13"*
  %147 = getelementptr inbounds i8, i8* %12, i64 20
  %148 = bitcast i8* %147 to i32*
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds i8, i8* %12, i64 16
  %151 = bitcast i8* %150 to i32*
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %149, %152
  br i1 %153, label %169, label %154, !prof !2

154:                                              ; preds = %141
  %155 = bitcast i8* %145 to %"class.blink::Member.16"**
  %156 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %155, align 8
  %157 = zext i32 %149 to i64
  %158 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %156, i64 %157
  %159 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %144 to i64
  %160 = bitcast %"class.blink::Member.16"* %158 to i64*
  store atomic i64 %159, i64* %160 monotonic, align 8
  %161 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %166, label %163

163:                                              ; preds = %154
  %164 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %144, i64 0, i32 0, i32 0, i32 0
  %165 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %164) #9
  br label %166

166:                                              ; preds = %163, %154
  %167 = load i32, i32* %148, align 4
  %168 = add i32 %167, 1
  store i32 %168, i32* %148, align 4
  br label %171

169:                                              ; preds = %141
  %170 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %144, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"* %146, %"class.blink::CSSValue"* dereferenceable(3) %170) #9
  br label %171

171:                                              ; preds = %166, %169
  %172 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 4, i32 0, i64 1
  %173 = load double, double* %172, align 8
  %174 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %173, i32 18) #9
  %175 = load i32, i32* %148, align 4
  %176 = load i32, i32* %151, align 8
  %177 = icmp eq i32 %175, %176
  br i1 %177, label %193, label %178, !prof !2

178:                                              ; preds = %171
  %179 = bitcast i8* %145 to %"class.blink::Member.16"**
  %180 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %179, align 8
  %181 = zext i32 %175 to i64
  %182 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %180, i64 %181
  %183 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %174 to i64
  %184 = bitcast %"class.blink::Member.16"* %182 to i64*
  store atomic i64 %183, i64* %184 monotonic, align 8
  %185 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %190, label %187

187:                                              ; preds = %178
  %188 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %174, i64 0, i32 0, i32 0, i32 0
  %189 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %188) #9
  br label %190

190:                                              ; preds = %187, %178
  %191 = load i32, i32* %148, align 4
  %192 = add i32 %191, 1
  store i32 %192, i32* %148, align 4
  br label %195

193:                                              ; preds = %171
  %194 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %174, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"* %146, %"class.blink::CSSValue"* dereferenceable(3) %194) #9
  br label %195

195:                                              ; preds = %190, %193
  %196 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 4, i32 0, i64 2
  %197 = load double, double* %196, align 8
  %198 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %197, i32 18) #9
  %199 = load i32, i32* %148, align 4
  %200 = load i32, i32* %151, align 8
  %201 = icmp eq i32 %199, %200
  br i1 %201, label %217, label %202, !prof !2

202:                                              ; preds = %195
  %203 = bitcast i8* %145 to %"class.blink::Member.16"**
  %204 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %203, align 8
  %205 = zext i32 %199 to i64
  %206 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %204, i64 %205
  %207 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %198 to i64
  %208 = bitcast %"class.blink::Member.16"* %206 to i64*
  store atomic i64 %207, i64* %208 monotonic, align 8
  %209 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %214, label %211

211:                                              ; preds = %202
  %212 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %198, i64 0, i32 0, i32 0, i32 0
  %213 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %212) #9
  br label %214

214:                                              ; preds = %211, %202
  %215 = load i32, i32* %148, align 4
  %216 = add i32 %215, 1
  store i32 %216, i32* %148, align 4
  br label %219

217:                                              ; preds = %195
  %218 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %198, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"* %146, %"class.blink::CSSValue"* dereferenceable(3) %218) #9
  br label %219

219:                                              ; preds = %214, %217
  %220 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 4, i32 0, i64 3
  %221 = load double, double* %220, align 8
  %222 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %221, i32 18) #9
  %223 = load i32, i32* %148, align 4
  %224 = load i32, i32* %151, align 8
  %225 = icmp eq i32 %223, %224
  br i1 %225, label %241, label %226, !prof !2

226:                                              ; preds = %219
  %227 = bitcast i8* %145 to %"class.blink::Member.16"**
  %228 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %227, align 8
  %229 = zext i32 %223 to i64
  %230 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %228, i64 %229
  %231 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %222 to i64
  %232 = bitcast %"class.blink::Member.16"* %230 to i64*
  store atomic i64 %231, i64* %232 monotonic, align 8
  %233 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %238, label %235

235:                                              ; preds = %226
  %236 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %222, i64 0, i32 0, i32 0, i32 0
  %237 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %236) #9
  br label %238

238:                                              ; preds = %235, %226
  %239 = load i32, i32* %148, align 4
  %240 = add i32 %239, 1
  store i32 %240, i32* %148, align 4
  br label %243

241:                                              ; preds = %219
  %242 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %222, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"* %146, %"class.blink::CSSValue"* dereferenceable(3) %242) #9
  br label %243

243:                                              ; preds = %238, %241
  %244 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 4, i32 0, i64 4
  %245 = load double, double* %244, align 8
  %246 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %245, i32 18) #9
  %247 = load i32, i32* %148, align 4
  %248 = load i32, i32* %151, align 8
  %249 = icmp eq i32 %247, %248
  br i1 %249, label %265, label %250, !prof !2

250:                                              ; preds = %243
  %251 = bitcast i8* %145 to %"class.blink::Member.16"**
  %252 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %251, align 8
  %253 = zext i32 %247 to i64
  %254 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %252, i64 %253
  %255 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %246 to i64
  %256 = bitcast %"class.blink::Member.16"* %254 to i64*
  store atomic i64 %255, i64* %256 monotonic, align 8
  %257 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %262, label %259

259:                                              ; preds = %250
  %260 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %246, i64 0, i32 0, i32 0, i32 0
  %261 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %260) #9
  br label %262

262:                                              ; preds = %259, %250
  %263 = load i32, i32* %148, align 4
  %264 = add i32 %263, 1
  store i32 %264, i32* %148, align 4
  br label %267

265:                                              ; preds = %243
  %266 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %246, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"* %146, %"class.blink::CSSValue"* dereferenceable(3) %266) #9
  br label %267

267:                                              ; preds = %262, %265
  %268 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 4, i32 0, i64 5
  %269 = load double, double* %268, align 8
  %270 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %269, i32 18) #9
  %271 = load i32, i32* %148, align 4
  %272 = load i32, i32* %151, align 8
  %273 = icmp eq i32 %271, %272
  br i1 %273, label %289, label %274, !prof !2

274:                                              ; preds = %267
  %275 = bitcast i8* %145 to %"class.blink::Member.16"**
  %276 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %275, align 8
  %277 = zext i32 %271 to i64
  %278 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %276, i64 %277
  %279 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %270 to i64
  %280 = bitcast %"class.blink::Member.16"* %278 to i64*
  store atomic i64 %279, i64* %280 monotonic, align 8
  %281 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %286, label %283

283:                                              ; preds = %274
  %284 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %270, i64 0, i32 0, i32 0, i32 0
  %285 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %284) #9
  br label %286

286:                                              ; preds = %283, %274
  %287 = load i32, i32* %148, align 4
  %288 = add i32 %287, 1
  store i32 %288, i32* %148, align 4
  br label %399

289:                                              ; preds = %267
  %290 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %270, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"* %146, %"class.blink::CSSValue"* dereferenceable(3) %290) #9
  br label %399

291:                                              ; preds = %10
  %292 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 4, i32 0, i64 0
  %293 = load double, double* %292, align 8
  %294 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %293, i32 18) #9
  %295 = getelementptr inbounds i8, i8* %12, i64 8
  %296 = bitcast i8* %295 to %"class.WTF::Vector.13"*
  %297 = getelementptr inbounds i8, i8* %12, i64 20
  %298 = bitcast i8* %297 to i32*
  %299 = load i32, i32* %298, align 4
  %300 = getelementptr inbounds i8, i8* %12, i64 16
  %301 = bitcast i8* %300 to i32*
  %302 = load i32, i32* %301, align 8
  %303 = icmp eq i32 %299, %302
  br i1 %303, label %319, label %304, !prof !2

304:                                              ; preds = %291
  %305 = bitcast i8* %295 to %"class.blink::Member.16"**
  %306 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %305, align 8
  %307 = zext i32 %299 to i64
  %308 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %306, i64 %307
  %309 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %294 to i64
  %310 = bitcast %"class.blink::Member.16"* %308 to i64*
  store atomic i64 %309, i64* %310 monotonic, align 8
  %311 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %316, label %313

313:                                              ; preds = %304
  %314 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %294, i64 0, i32 0, i32 0, i32 0
  %315 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %314) #9
  br label %316

316:                                              ; preds = %313, %304
  %317 = load i32, i32* %298, align 4
  %318 = add i32 %317, 1
  store i32 %318, i32* %298, align 4
  br label %321

319:                                              ; preds = %291
  %320 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %294, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"* %296, %"class.blink::CSSValue"* dereferenceable(3) %320) #9
  br label %321

321:                                              ; preds = %316, %319
  %322 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 4, i32 0, i64 3
  %323 = load double, double* %322, align 8
  %324 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %323, i32 18) #9
  %325 = load i32, i32* %298, align 4
  %326 = load i32, i32* %301, align 8
  %327 = icmp eq i32 %325, %326
  br i1 %327, label %343, label %328, !prof !2

328:                                              ; preds = %321
  %329 = bitcast i8* %295 to %"class.blink::Member.16"**
  %330 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %329, align 8
  %331 = zext i32 %325 to i64
  %332 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %330, i64 %331
  %333 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %324 to i64
  %334 = bitcast %"class.blink::Member.16"* %332 to i64*
  store atomic i64 %333, i64* %334 monotonic, align 8
  %335 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %340, label %337

337:                                              ; preds = %328
  %338 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %324, i64 0, i32 0, i32 0, i32 0
  %339 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %338) #9
  br label %340

340:                                              ; preds = %337, %328
  %341 = load i32, i32* %298, align 4
  %342 = add i32 %341, 1
  store i32 %342, i32* %298, align 4
  br label %399

343:                                              ; preds = %321
  %344 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %324, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"* %296, %"class.blink::CSSValue"* dereferenceable(3) %344) #9
  br label %399

345:                                              ; preds = %10
  %346 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 4, i32 0, i64 4
  %347 = load double, double* %346, align 8
  %348 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %347, i32 18) #9
  %349 = getelementptr inbounds i8, i8* %12, i64 8
  %350 = bitcast i8* %349 to %"class.WTF::Vector.13"*
  %351 = getelementptr inbounds i8, i8* %12, i64 20
  %352 = bitcast i8* %351 to i32*
  %353 = load i32, i32* %352, align 4
  %354 = getelementptr inbounds i8, i8* %12, i64 16
  %355 = bitcast i8* %354 to i32*
  %356 = load i32, i32* %355, align 8
  %357 = icmp eq i32 %353, %356
  br i1 %357, label %373, label %358, !prof !2

358:                                              ; preds = %345
  %359 = bitcast i8* %349 to %"class.blink::Member.16"**
  %360 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %359, align 8
  %361 = zext i32 %353 to i64
  %362 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %360, i64 %361
  %363 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %348 to i64
  %364 = bitcast %"class.blink::Member.16"* %362 to i64*
  store atomic i64 %363, i64* %364 monotonic, align 8
  %365 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %370, label %367

367:                                              ; preds = %358
  %368 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %348, i64 0, i32 0, i32 0, i32 0
  %369 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %368) #9
  br label %370

370:                                              ; preds = %367, %358
  %371 = load i32, i32* %352, align 4
  %372 = add i32 %371, 1
  store i32 %372, i32* %352, align 4
  br label %375

373:                                              ; preds = %345
  %374 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %348, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"* %350, %"class.blink::CSSValue"* dereferenceable(3) %374) #9
  br label %375

375:                                              ; preds = %370, %373
  %376 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 4, i32 0, i64 5
  %377 = load double, double* %376, align 8
  %378 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %377, i32 18) #9
  %379 = load i32, i32* %352, align 4
  %380 = load i32, i32* %355, align 8
  %381 = icmp eq i32 %379, %380
  br i1 %381, label %397, label %382, !prof !2

382:                                              ; preds = %375
  %383 = bitcast i8* %349 to %"class.blink::Member.16"**
  %384 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %383, align 8
  %385 = zext i32 %379 to i64
  %386 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %384, i64 %385
  %387 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %378 to i64
  %388 = bitcast %"class.blink::Member.16"* %386 to i64*
  store atomic i64 %387, i64* %388 monotonic, align 8
  %389 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %394, label %391

391:                                              ; preds = %382
  %392 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %378, i64 0, i32 0, i32 0, i32 0
  %393 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %392) #9
  br label %394

394:                                              ; preds = %391, %382
  %395 = load i32, i32* %352, align 4
  %396 = add i32 %395, 1
  store i32 %396, i32* %352, align 4
  br label %399

397:                                              ; preds = %375
  %398 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %378, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"* %350, %"class.blink::CSSValue"* dereferenceable(3) %398) #9
  br label %399

399:                                              ; preds = %51, %397, %394, %343, %340, %289, %286, %138, %135, %105, %108, %10
  %400 = bitcast i8* %12 to %"class.blink::CSSValue"*
  ret %"class.blink::CSSValue"* %400
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16SVGTransformList5ParseERPKDsS2_(%"class.blink::SVGTransformList"*, i16** dereferenceable(8), i16*) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN5blink16SVGTransformList13ParseInternalIDsEENS_15SVGParsingErrorERPKT_S5_(%"class.blink::SVGTransformList"* %0, i16** dereferenceable(8) %1, i16* %2)
  %5 = and i32 %4, 255
  %6 = icmp eq i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink16SVGTransformList13ParseInternalIDsEENS_15SVGParsingErrorERPKT_S5_(%"class.blink::SVGTransformList"*, i16** dereferenceable(8), i16*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::Vector.4", align 8
  %5 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink19SVGListPropertyBase5ClearEv(%"class.blink::SVGListPropertyBase"* %5) #9
  %6 = load i16*, i16** %1, align 8
  %7 = bitcast %"class.WTF::Vector.4"* %4 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %4, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast %"class.WTF::Vector.4"* %4 to i8**
  %10 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %4, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %4, i64 0, i32 0, i32 0, i32 2
  %12 = bitcast i16** %1 to i64*
  %13 = ptrtoint i16* %6 to i64
  %14 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %4, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast i8* %8 to float*
  %16 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %4, i64 0, i32 0
  %17 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %4, i64 0, i32 0, i32 1, i64 0
  %18 = icmp ult i16* %6, %2
  br i1 %18, label %19, label %152

19:                                               ; preds = %3, %145
  %20 = phi i1 [ %134, %145 ], [ false, %3 ]
  %21 = phi i32 [ %133, %145 ], [ undef, %3 ]
  %22 = phi i16* [ %146, %145 ], [ %6, %3 ]
  br label %23

23:                                               ; preds = %19, %28
  %24 = phi i16* [ %29, %28 ], [ %22, %19 ]
  %25 = load i16, i16* %24, align 2
  %26 = icmp ult i16 %25, 33
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  switch i16 %25, label %31 [
    i16 32, label %28
    i16 10, label %28
    i16 9, label %28
    i16 13, label %28
    i16 12, label %28
  ]

28:                                               ; preds = %27, %27, %27, %27, %27
  %29 = getelementptr inbounds i16, i16* %24, i64 1
  store i16* %29, i16** %1, align 8
  %30 = icmp ult i16* %29, %2
  br i1 %30, label %23, label %148

31:                                               ; preds = %27, %23
  %32 = call fastcc i32 @_ZN5blink12_GLOBAL__N_125ParseAndSkipTransformTypeIDsEENS_16SVGTransformTypeERPKT_S5_(i16** dereferenceable(8) %1, i16* %2)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %43

34:                                               ; preds = %31
  %35 = load i64, i64* %12, align 8
  %36 = sub i64 %35, %13
  %37 = ashr exact i64 %36, 1
  %38 = icmp ult i64 %37, 16777215
  %39 = select i1 %38, i64 %37, i64 16777215
  %40 = trunc i64 %39 to i32
  %41 = shl nuw i32 %40, 8
  %42 = or i32 %41, 14
  br label %163

43:                                               ; preds = %31
  %44 = load i16*, i16** %1, align 8
  %45 = icmp ult i16* %44, %2
  br i1 %45, label %46, label %58

46:                                               ; preds = %43, %51
  %47 = phi i16* [ %52, %51 ], [ %44, %43 ]
  %48 = load i16, i16* %47, align 2
  %49 = icmp ult i16 %48, 33
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  switch i16 %48, label %60 [
    i16 32, label %51
    i16 10, label %51
    i16 9, label %51
    i16 13, label %51
    i16 12, label %51
  ]

51:                                               ; preds = %50, %50, %50, %50, %50
  %52 = getelementptr inbounds i16, i16* %47, i64 1
  store i16* %52, i16** %1, align 8
  %53 = icmp ult i16* %52, %2
  br i1 %53, label %46, label %56

54:                                               ; preds = %46
  %55 = icmp eq i16 %48, 40
  br i1 %55, label %73, label %62

56:                                               ; preds = %51
  %57 = ptrtoint i16* %52 to i64
  br label %64

58:                                               ; preds = %43
  %59 = ptrtoint i16* %44 to i64
  br label %64

60:                                               ; preds = %50
  %61 = ptrtoint i16* %47 to i64
  br label %64

62:                                               ; preds = %54
  %63 = ptrtoint i16* %47 to i64
  br label %64

64:                                               ; preds = %62, %60, %58, %56
  %65 = phi i64 [ %57, %56 ], [ %59, %58 ], [ %61, %60 ], [ %63, %62 ]
  %66 = sub i64 %65, %13
  %67 = ashr exact i64 %66, 1
  %68 = icmp ult i64 %67, 16777215
  %69 = select i1 %68, i64 %67, i64 16777215
  %70 = trunc i64 %69 to i32
  %71 = shl nuw i32 %70, 8
  %72 = or i32 %71, 13
  br label %163

73:                                               ; preds = %54
  %74 = getelementptr inbounds i16, i16* %47, i64 1
  store i16* %74, i16** %1, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  store i8* %8, i8** %9, align 8
  store i32 6, i32* %10, align 8
  store i32 0, i32* %11, align 4
  %75 = call fastcc i32 @_ZN5blink12_GLOBAL__N_130ParseTransformArgumentsForTypeIDsEENS_14SVGParseStatusENS_16SVGTransformTypeERPKT_S6_RN3WTF6VectorIfLj6ENS8_18PartitionAllocatorEEE(i32 %32, i16** dereferenceable(8) %1, i16* %2, %"class.WTF::Vector.4"* nonnull dereferenceable(40) %4)
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %73
  %78 = load i64, i64* %12, align 8
  %79 = sub i64 %78, %13
  %80 = ashr exact i64 %79, 1
  %81 = and i32 %75, 255
  %82 = icmp ult i64 %80, 16777215
  %83 = select i1 %82, i64 %80, i64 16777215
  %84 = trunc i64 %83 to i32
  %85 = shl nuw i32 %84, 8
  %86 = or i32 %85, %81
  br label %132

87:                                               ; preds = %73
  %88 = load i16*, i16** %1, align 8
  %89 = icmp ult i16* %88, %2
  %90 = ptrtoint i16* %88 to i64
  br i1 %89, label %91, label %105

91:                                               ; preds = %87, %97
  %92 = phi i64 [ %100, %97 ], [ %90, %87 ]
  %93 = phi i16* [ %98, %97 ], [ %88, %87 ]
  %94 = load i16, i16* %93, align 2
  %95 = icmp ult i16 %94, 33
  br i1 %95, label %96, label %101

96:                                               ; preds = %91
  switch i16 %94, label %105 [
    i16 32, label %97
    i16 10, label %97
    i16 9, label %97
    i16 13, label %97
    i16 12, label %97
  ]

97:                                               ; preds = %96, %96, %96, %96, %96
  %98 = getelementptr inbounds i16, i16* %93, i64 1
  store i16* %98, i16** %1, align 8
  %99 = icmp ult i16* %98, %2
  %100 = ptrtoint i16* %98 to i64
  br i1 %99, label %91, label %103

101:                                              ; preds = %91
  %102 = icmp eq i16 %94, 41
  br i1 %102, label %114, label %105

103:                                              ; preds = %97
  %104 = ptrtoint i16* %98 to i64
  br label %105

105:                                              ; preds = %96, %103, %87, %101
  %106 = phi i64 [ %90, %87 ], [ %92, %101 ], [ %104, %103 ], [ %92, %96 ]
  %107 = sub i64 %106, %13
  %108 = ashr exact i64 %107, 1
  %109 = icmp ult i64 %108, 16777215
  %110 = select i1 %109, i64 %108, i64 16777215
  %111 = trunc i64 %110 to i32
  %112 = shl nuw i32 %111, 8
  %113 = or i32 %112, 5
  br label %132

114:                                              ; preds = %101
  %115 = getelementptr inbounds i16, i16* %93, i64 1
  store i16* %115, i16** %1, align 8
  %116 = call fastcc %"class.blink::SVGTransform"* @_ZN5blink12_GLOBAL__N_125CreateTransformFromValuesENS_16SVGTransformTypeERKN3WTF6VectorIfLj6ENS2_18PartitionAllocatorEEE(i32 %32, %"class.WTF::Vector.4"* nonnull dereferenceable(40) %4)
  %117 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %116, i64 0, i32 0
  call void @_ZN5blink19SVGListPropertyBase6AppendEPNS_23SVGListablePropertyBaseE(%"class.blink::SVGListPropertyBase"* %5, %"class.blink::SVGListablePropertyBase"* %117) #9
  %118 = load i16*, i16** %1, align 8
  %119 = icmp ult i16* %118, %2
  br i1 %119, label %120, label %132

120:                                              ; preds = %114, %125
  %121 = phi i16* [ %126, %125 ], [ %118, %114 ]
  %122 = load i16, i16* %121, align 2
  %123 = icmp ult i16 %122, 33
  br i1 %123, label %124, label %128

124:                                              ; preds = %120
  switch i16 %122, label %132 [
    i16 32, label %125
    i16 10, label %125
    i16 9, label %125
    i16 13, label %125
    i16 12, label %125
  ]

125:                                              ; preds = %124, %124, %124, %124, %124
  %126 = getelementptr inbounds i16, i16* %121, i64 1
  store i16* %126, i16** %1, align 8
  %127 = icmp ult i16* %126, %2
  br i1 %127, label %120, label %132

128:                                              ; preds = %120
  %129 = icmp eq i16 %122, 44
  br i1 %129, label %130, label %132

130:                                              ; preds = %128
  %131 = getelementptr inbounds i16, i16* %121, i64 1
  store i16* %131, i16** %1, align 8
  br label %132

132:                                              ; preds = %124, %125, %114, %128, %130, %105, %77
  %133 = phi i32 [ %21, %130 ], [ %21, %128 ], [ %113, %105 ], [ %86, %77 ], [ %21, %114 ], [ %21, %125 ], [ %21, %124 ]
  %134 = phi i1 [ true, %130 ], [ false, %128 ], [ false, %105 ], [ false, %77 ], [ false, %114 ], [ false, %125 ], [ false, %124 ]
  %135 = phi i32 [ 0, %130 ], [ 0, %128 ], [ 1, %105 ], [ 1, %77 ], [ 0, %114 ], [ 0, %125 ], [ 0, %124 ]
  %136 = load i32, i32* %11, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %139, label %138, !prof !2

138:                                              ; preds = %132
  store i32 0, i32* %11, align 4
  br label %139

139:                                              ; preds = %138, %132
  %140 = load float*, float** %14, align 8
  %141 = icmp eq float* %140, %15
  br i1 %141, label %143, label %142, !prof !3

142:                                              ; preds = %139
  call void @_ZN3WTF12VectorBufferIfLj6ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPf(%"class.WTF::VectorBuffer.5"* nonnull %16, float* %140) #9
  br label %143

143:                                              ; preds = %142, %139
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #9
  %144 = icmp eq i32 %135, 0
  br i1 %144, label %145, label %163

145:                                              ; preds = %143
  %146 = load i16*, i16** %1, align 8
  %147 = icmp ult i16* %146, %2
  br i1 %147, label %19, label %150

148:                                              ; preds = %28
  %149 = ptrtoint i16* %29 to i64
  br label %152

150:                                              ; preds = %145
  %151 = ptrtoint i16* %146 to i64
  br label %152

152:                                              ; preds = %3, %150, %148
  %153 = phi i1 [ %20, %148 ], [ %134, %150 ], [ false, %3 ]
  %154 = phi i64 [ %149, %148 ], [ %151, %150 ], [ %13, %3 ]
  br i1 %153, label %155, label %163

155:                                              ; preds = %152
  %156 = sub i64 %154, %13
  %157 = ashr exact i64 %156, 1
  %158 = icmp ult i64 %157, 16777215
  %159 = select i1 %158, i64 %157, i64 16777215
  %160 = trunc i64 %159 to i32
  %161 = shl nuw i32 %160, 8
  %162 = or i32 %161, 1
  br label %163

163:                                              ; preds = %143, %64, %34, %152, %155
  %164 = phi i32 [ %162, %155 ], [ 0, %152 ], [ %72, %64 ], [ %42, %34 ], [ %133, %143 ]
  ret i32 %164
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16SVGTransformList5ParseERPKhS2_(%"class.blink::SVGTransformList"*, i8** dereferenceable(8), i8*) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN5blink16SVGTransformList13ParseInternalIhEENS_15SVGParsingErrorERPKT_S5_(%"class.blink::SVGTransformList"* %0, i8** dereferenceable(8) %1, i8* %2)
  %5 = and i32 %4, 255
  %6 = icmp eq i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink16SVGTransformList13ParseInternalIhEENS_15SVGParsingErrorERPKT_S5_(%"class.blink::SVGTransformList"*, i8** dereferenceable(8), i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::Vector.4", align 8
  %5 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink19SVGListPropertyBase5ClearEv(%"class.blink::SVGListPropertyBase"* %5) #9
  %6 = load i8*, i8** %1, align 8
  %7 = icmp ult i8* %6, %2
  %8 = ptrtoint i8* %6 to i64
  br i1 %7, label %9, label %219

9:                                                ; preds = %3
  %10 = bitcast %"class.WTF::Vector.4"* %4 to i8*
  %11 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %4, i64 0, i32 0, i32 1, i64 0
  %12 = bitcast %"class.WTF::Vector.4"* %4 to i8**
  %13 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %4, i64 0, i32 0, i32 0, i32 2
  %15 = bitcast i8** %1 to i64*
  %16 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %4, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast i8* %11 to float*
  %18 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %4, i64 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %4, i64 0, i32 0, i32 1, i64 0
  br label %24

20:                                               ; preds = %205
  %21 = load i8*, i8** %1, align 8
  %22 = icmp ult i8* %21, %2
  %23 = ptrtoint i8* %21 to i64
  br i1 %22, label %24, label %207

24:                                               ; preds = %9, %20
  %25 = phi i64 [ %8, %9 ], [ %23, %20 ]
  %26 = phi i8* [ %6, %9 ], [ %21, %20 ]
  %27 = phi i1 [ false, %9 ], [ %196, %20 ]
  %28 = phi i32 [ undef, %9 ], [ %195, %20 ]
  %29 = load i8, i8* %26, align 1
  %30 = icmp ult i8 %29, 33
  br i1 %30, label %34, label %51

31:                                               ; preds = %39
  %32 = load i8, i8* %40, align 1
  %33 = icmp ult i8 %32, 33
  br i1 %33, label %34, label %44

34:                                               ; preds = %24, %31
  %35 = phi i64 [ %43, %31 ], [ %25, %24 ]
  %36 = phi i8 [ %32, %31 ], [ %29, %24 ]
  %37 = phi i8* [ %40, %31 ], [ %26, %24 ]
  %38 = phi i1 [ %41, %31 ], [ true, %24 ]
  switch i8 %36, label %48 [
    i8 32, label %39
    i8 10, label %39
    i8 9, label %39
    i8 13, label %39
    i8 12, label %39
  ]

39:                                               ; preds = %34, %34, %34, %34, %34
  %40 = getelementptr inbounds i8, i8* %37, i64 1
  store i8* %40, i8** %1, align 8
  %41 = icmp ult i8* %40, %2
  %42 = icmp eq i8* %40, %2
  %43 = ptrtoint i8* %40 to i64
  br i1 %42, label %46, label %31

44:                                               ; preds = %31
  %45 = ptrtoint i8* %40 to i64
  br label %48

46:                                               ; preds = %39
  %47 = ptrtoint i8* %40 to i64
  br label %48

48:                                               ; preds = %46, %34, %44
  %49 = phi i64 [ %45, %44 ], [ %47, %46 ], [ %35, %34 ]
  %50 = phi i1 [ %41, %44 ], [ %41, %46 ], [ %38, %34 ]
  br i1 %50, label %51, label %209

51:                                               ; preds = %24, %48
  %52 = call fastcc i32 @_ZN5blink12_GLOBAL__N_125ParseAndSkipTransformTypeIhEENS_16SVGTransformTypeERPKT_S5_(i8** dereferenceable(8) %1, i8* %2)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %62

54:                                               ; preds = %51
  %55 = load i64, i64* %15, align 8
  %56 = sub i64 %55, %8
  %57 = icmp ult i64 %56, 16777215
  %58 = select i1 %57, i64 %56, i64 16777215
  %59 = trunc i64 %58 to i32
  %60 = shl nuw i32 %59, 8
  %61 = or i32 %60, 14
  br label %219

62:                                               ; preds = %51
  %63 = load i8*, i8** %1, align 8
  %64 = icmp ult i8* %63, %2
  %65 = ptrtoint i8* %63 to i64
  br i1 %64, label %66, label %97

66:                                               ; preds = %62
  %67 = load i8, i8* %63, align 1
  %68 = icmp ult i8 %67, 33
  br i1 %68, label %72, label %92

69:                                               ; preds = %77
  %70 = load i8, i8* %78, align 1
  %71 = icmp ult i8 %70, 33
  br i1 %71, label %72, label %82

72:                                               ; preds = %66, %69
  %73 = phi i64 [ %81, %69 ], [ %65, %66 ]
  %74 = phi i8 [ %70, %69 ], [ %67, %66 ]
  %75 = phi i8* [ %78, %69 ], [ %63, %66 ]
  %76 = phi i1 [ %79, %69 ], [ true, %66 ]
  switch i8 %74, label %86 [
    i8 32, label %77
    i8 10, label %77
    i8 9, label %77
    i8 13, label %77
    i8 12, label %77
  ]

77:                                               ; preds = %72, %72, %72, %72, %72
  %78 = getelementptr inbounds i8, i8* %75, i64 1
  store i8* %78, i8** %1, align 8
  %79 = icmp ult i8* %78, %2
  %80 = icmp eq i8* %78, %2
  %81 = ptrtoint i8* %78 to i64
  br i1 %80, label %84, label %69

82:                                               ; preds = %69
  %83 = ptrtoint i8* %78 to i64
  br label %86

84:                                               ; preds = %77
  %85 = ptrtoint i8* %78 to i64
  br label %86

86:                                               ; preds = %84, %72, %82
  %87 = phi i64 [ %83, %82 ], [ %85, %84 ], [ %73, %72 ]
  %88 = phi i8* [ %78, %82 ], [ %2, %84 ], [ %75, %72 ]
  %89 = phi i1 [ %79, %82 ], [ %79, %84 ], [ %76, %72 ]
  br i1 %89, label %90, label %99

90:                                               ; preds = %86
  %91 = load i8, i8* %88, align 1
  br label %92

92:                                               ; preds = %90, %66
  %93 = phi i64 [ %65, %66 ], [ %87, %90 ]
  %94 = phi i8 [ %67, %66 ], [ %91, %90 ]
  %95 = phi i8* [ %63, %66 ], [ %88, %90 ]
  %96 = icmp eq i8 %94, 40
  br i1 %96, label %107, label %99

97:                                               ; preds = %62
  %98 = ptrtoint i8* %63 to i64
  br label %99

99:                                               ; preds = %86, %92, %97
  %100 = phi i64 [ %98, %97 ], [ %93, %92 ], [ %87, %86 ]
  %101 = sub i64 %100, %8
  %102 = icmp ult i64 %101, 16777215
  %103 = select i1 %102, i64 %101, i64 16777215
  %104 = trunc i64 %103 to i32
  %105 = shl nuw i32 %104, 8
  %106 = or i32 %105, 13
  br label %219

107:                                              ; preds = %92
  %108 = getelementptr inbounds i8, i8* %95, i64 1
  store i8* %108, i8** %1, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  store i8* %11, i8** %12, align 8
  store i32 6, i32* %13, align 8
  store i32 0, i32* %14, align 4
  %109 = call fastcc i32 @_ZN5blink12_GLOBAL__N_130ParseTransformArgumentsForTypeIhEENS_14SVGParseStatusENS_16SVGTransformTypeERPKT_S6_RN3WTF6VectorIfLj6ENS8_18PartitionAllocatorEEE(i32 %52, i8** dereferenceable(8) %1, i8* %2, %"class.WTF::Vector.4"* nonnull dereferenceable(40) %4)
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %120, label %111

111:                                              ; preds = %107
  %112 = load i64, i64* %15, align 8
  %113 = sub i64 %112, %8
  %114 = and i32 %109, 255
  %115 = icmp ult i64 %113, 16777215
  %116 = select i1 %115, i64 %113, i64 16777215
  %117 = trunc i64 %116 to i32
  %118 = shl nuw i32 %117, 8
  %119 = or i32 %118, %114
  br label %194

120:                                              ; preds = %107
  %121 = load i8*, i8** %1, align 8
  %122 = icmp ult i8* %121, %2
  %123 = ptrtoint i8* %121 to i64
  br i1 %122, label %124, label %155

124:                                              ; preds = %120
  %125 = load i8, i8* %121, align 1
  %126 = icmp ult i8 %125, 33
  br i1 %126, label %130, label %150

127:                                              ; preds = %135
  %128 = load i8, i8* %136, align 1
  %129 = icmp ult i8 %128, 33
  br i1 %129, label %130, label %140

130:                                              ; preds = %124, %127
  %131 = phi i64 [ %139, %127 ], [ %123, %124 ]
  %132 = phi i8 [ %128, %127 ], [ %125, %124 ]
  %133 = phi i8* [ %136, %127 ], [ %121, %124 ]
  %134 = phi i1 [ %137, %127 ], [ true, %124 ]
  switch i8 %132, label %144 [
    i8 32, label %135
    i8 10, label %135
    i8 9, label %135
    i8 13, label %135
    i8 12, label %135
  ]

135:                                              ; preds = %130, %130, %130, %130, %130
  %136 = getelementptr inbounds i8, i8* %133, i64 1
  store i8* %136, i8** %1, align 8
  %137 = icmp ult i8* %136, %2
  %138 = icmp eq i8* %136, %2
  %139 = ptrtoint i8* %136 to i64
  br i1 %138, label %142, label %127

140:                                              ; preds = %127
  %141 = ptrtoint i8* %136 to i64
  br label %144

142:                                              ; preds = %135
  %143 = ptrtoint i8* %136 to i64
  br label %144

144:                                              ; preds = %142, %130, %140
  %145 = phi i64 [ %141, %140 ], [ %143, %142 ], [ %131, %130 ]
  %146 = phi i8* [ %136, %140 ], [ %2, %142 ], [ %133, %130 ]
  %147 = phi i1 [ %137, %140 ], [ %137, %142 ], [ %134, %130 ]
  br i1 %147, label %148, label %155

148:                                              ; preds = %144
  %149 = load i8, i8* %146, align 1
  br label %150

150:                                              ; preds = %148, %124
  %151 = phi i64 [ %123, %124 ], [ %145, %148 ]
  %152 = phi i8 [ %125, %124 ], [ %149, %148 ]
  %153 = phi i8* [ %121, %124 ], [ %146, %148 ]
  %154 = icmp eq i8 %152, 41
  br i1 %154, label %163, label %155

155:                                              ; preds = %120, %150, %144
  %156 = phi i64 [ %123, %120 ], [ %151, %150 ], [ %145, %144 ]
  %157 = sub i64 %156, %8
  %158 = icmp ult i64 %157, 16777215
  %159 = select i1 %158, i64 %157, i64 16777215
  %160 = trunc i64 %159 to i32
  %161 = shl nuw i32 %160, 8
  %162 = or i32 %161, 5
  br label %194

163:                                              ; preds = %150
  %164 = getelementptr inbounds i8, i8* %153, i64 1
  store i8* %164, i8** %1, align 8
  %165 = call fastcc %"class.blink::SVGTransform"* @_ZN5blink12_GLOBAL__N_125CreateTransformFromValuesENS_16SVGTransformTypeERKN3WTF6VectorIfLj6ENS2_18PartitionAllocatorEEE(i32 %52, %"class.WTF::Vector.4"* nonnull dereferenceable(40) %4)
  %166 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %165, i64 0, i32 0
  call void @_ZN5blink19SVGListPropertyBase6AppendEPNS_23SVGListablePropertyBaseE(%"class.blink::SVGListPropertyBase"* %5, %"class.blink::SVGListablePropertyBase"* %166) #9
  %167 = load i8*, i8** %1, align 8
  %168 = icmp ult i8* %167, %2
  br i1 %168, label %169, label %194

169:                                              ; preds = %163
  %170 = load i8, i8* %167, align 1
  %171 = icmp ult i8 %170, 33
  br i1 %171, label %175, label %188

172:                                              ; preds = %179
  %173 = load i8, i8* %180, align 1
  %174 = icmp ult i8 %173, 33
  br i1 %174, label %175, label %183

175:                                              ; preds = %169, %172
  %176 = phi i8 [ %173, %172 ], [ %170, %169 ]
  %177 = phi i8* [ %180, %172 ], [ %167, %169 ]
  %178 = phi i1 [ %181, %172 ], [ true, %169 ]
  switch i8 %176, label %183 [
    i8 32, label %179
    i8 10, label %179
    i8 9, label %179
    i8 13, label %179
    i8 12, label %179
  ]

179:                                              ; preds = %175, %175, %175, %175, %175
  %180 = getelementptr inbounds i8, i8* %177, i64 1
  store i8* %180, i8** %1, align 8
  %181 = icmp ult i8* %180, %2
  %182 = icmp eq i8* %180, %2
  br i1 %182, label %183, label %172

183:                                              ; preds = %179, %175, %172
  %184 = phi i8* [ %180, %172 ], [ %177, %175 ], [ %2, %179 ]
  %185 = phi i1 [ %181, %172 ], [ %178, %175 ], [ %181, %179 ]
  br i1 %185, label %186, label %194

186:                                              ; preds = %183
  %187 = load i8, i8* %184, align 1
  br label %188

188:                                              ; preds = %186, %169
  %189 = phi i8 [ %170, %169 ], [ %187, %186 ]
  %190 = phi i8* [ %167, %169 ], [ %184, %186 ]
  %191 = icmp eq i8 %189, 44
  br i1 %191, label %192, label %194

192:                                              ; preds = %188
  %193 = getelementptr inbounds i8, i8* %190, i64 1
  store i8* %193, i8** %1, align 8
  br label %194

194:                                              ; preds = %163, %183, %188, %192, %155, %111
  %195 = phi i32 [ %28, %192 ], [ %28, %188 ], [ %28, %183 ], [ %162, %155 ], [ %119, %111 ], [ %28, %163 ]
  %196 = phi i1 [ true, %192 ], [ false, %188 ], [ false, %183 ], [ false, %155 ], [ false, %111 ], [ false, %163 ]
  %197 = phi i32 [ 0, %192 ], [ 0, %188 ], [ 0, %183 ], [ 1, %155 ], [ 1, %111 ], [ 0, %163 ]
  %198 = load i32, i32* %14, align 4
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %201, label %200, !prof !2

200:                                              ; preds = %194
  store i32 0, i32* %14, align 4
  br label %201

201:                                              ; preds = %200, %194
  %202 = load float*, float** %16, align 8
  %203 = icmp eq float* %202, %17
  br i1 %203, label %205, label %204, !prof !3

204:                                              ; preds = %201
  call void @_ZN3WTF12VectorBufferIfLj6ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPf(%"class.WTF::VectorBuffer.5"* nonnull %18, float* %202) #9
  br label %205

205:                                              ; preds = %204, %201
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #9
  %206 = icmp eq i32 %197, 0
  br i1 %206, label %20, label %219

207:                                              ; preds = %20
  %208 = ptrtoint i8* %21 to i64
  br label %209

209:                                              ; preds = %48, %207
  %210 = phi i64 [ %208, %207 ], [ %49, %48 ]
  %211 = phi i1 [ %196, %207 ], [ %27, %48 ]
  br i1 %211, label %212, label %219

212:                                              ; preds = %209
  %213 = sub i64 %210, %8
  %214 = icmp ult i64 %213, 16777215
  %215 = select i1 %214, i64 %213, i64 16777215
  %216 = trunc i64 %215 to i32
  %217 = shl nuw i32 %216, 8
  %218 = or i32 %217, 1
  br label %219

219:                                              ; preds = %205, %3, %99, %54, %209, %212
  %220 = phi i32 [ %218, %212 ], [ 0, %209 ], [ %106, %99 ], [ %61, %54 ], [ 0, %3 ], [ %195, %205 ]
  ret i32 %220
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18ParseTransformTypeERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i16*, align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %31, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %31, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 1
  br i1 %15, label %24, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.WTF::StringImpl"* %16 to i8*
  %19 = zext i32 %9 to i64
  %20 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  %21 = bitcast i8** %2 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds i8, i8* %18, i64 %19
  %23 = call fastcc i32 @_ZN5blink12_GLOBAL__N_125ParseAndSkipTransformTypeIhEENS_16SVGTransformTypeERPKT_S5_(i8** nonnull dereferenceable(8) %2, i8* %22) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %31

24:                                               ; preds = %11
  %25 = bitcast %"class.WTF::StringImpl"* %16 to i16*
  %26 = zext i32 %9 to i64
  %27 = bitcast i16** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  %28 = bitcast i16** %3 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %28, align 8
  %29 = getelementptr inbounds i16, i16* %25, i64 %26
  %30 = call fastcc i32 @_ZN5blink12_GLOBAL__N_125ParseAndSkipTransformTypeIDsEENS_16SVGTransformTypeERPKT_S5_(i16** nonnull dereferenceable(8) %3, i16* %29) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %31

31:                                               ; preds = %1, %24, %17, %7
  %32 = phi i32 [ 0, %7 ], [ %23, %17 ], [ %30, %24 ], [ 0, %1 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink16SVGTransformList16SetValueAsStringERKN3WTF6StringE(%"class.blink::SVGTransformList"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink19SVGListPropertyBase5ClearEv(%"class.blink::SVGListPropertyBase"* %13) #9
  br label %41

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  br i1 %18, label %27, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  %22 = zext i32 %10 to i64
  %23 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = bitcast i8** %3 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %24, align 8
  %25 = getelementptr inbounds i8, i8* %21, i64 %22
  %26 = call i32 @_ZN5blink16SVGTransformList13ParseInternalIhEENS_15SVGParsingErrorERPKT_S5_(%"class.blink::SVGTransformList"* %0, i8** nonnull dereferenceable(8) %3, i8* %25) #9
  br label %34

27:                                               ; preds = %14
  %28 = bitcast %"class.WTF::StringImpl"* %19 to i16*
  %29 = zext i32 %10 to i64
  %30 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  %31 = bitcast i16** %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %31, align 8
  %32 = getelementptr inbounds i16, i16* %28, i64 %29
  %33 = call i32 @_ZN5blink16SVGTransformList13ParseInternalIDsEENS_15SVGParsingErrorERPKT_S5_(%"class.blink::SVGTransformList"* %0, i16** nonnull dereferenceable(8) %4, i16* %32) #9
  br label %34

34:                                               ; preds = %20, %27
  %35 = phi i8* [ %23, %20 ], [ %30, %27 ]
  %36 = phi i32 [ %26, %20 ], [ %33, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  %37 = and i32 %36, 255
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink19SVGListPropertyBase5ClearEv(%"class.blink::SVGListPropertyBase"* %40) #9
  br label %41

41:                                               ; preds = %34, %39, %12
  %42 = phi i32 [ 0, %12 ], [ %36, %39 ], [ %36, %34 ]
  ret i32 %42
}

declare void @_ZN5blink19SVGListPropertyBase5ClearEv(%"class.blink::SVGListPropertyBase"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGPropertyBase"* @_ZNK5blink16SVGTransformList17CloneForAnimationERKN3WTF6StringE(%"class.blink::SVGTransformList"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0
  %4 = tail call %"class.blink::SVGPropertyBase"* @_ZNK5blink21SVGListPropertyHelperINS_16SVGTransformListENS_12SVGTransformEE17CloneForAnimationERKN3WTF6StringE(%"class.blink::SVGListPropertyHelper"* %3, %"class.WTF::String"* dereferenceable(8) %1)
  ret %"class.blink::SVGPropertyBase"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SVGPropertyBase"* @_ZNK5blink21SVGListPropertyHelperINS_16SVGTransformListENS_12SVGTransformEE17CloneForAnimationERKN3WTF6StringE(%"class.blink::SVGListPropertyHelper"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 24) #9
  %6 = bitcast i8* %5 to %"class.blink::SVGTransformList"*
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #9
  %8 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink16SVGTransformListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %16, %2
  %21 = bitcast i8* %5 to %"class.blink::SVGListPropertyBase"*
  tail call void @_ZN5blink19SVGListPropertyBase5ClearEv(%"class.blink::SVGListPropertyBase"* %21) #9
  br label %49

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 1
  br i1 %26, label %35, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  %30 = zext i32 %18 to i64
  %31 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  %32 = bitcast i8** %3 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %29, i64 %30
  %34 = call i32 @_ZN5blink16SVGTransformList13ParseInternalIhEENS_15SVGParsingErrorERPKT_S5_(%"class.blink::SVGTransformList"* %6, i8** nonnull dereferenceable(8) %3, i8* %33) #9
  br label %42

35:                                               ; preds = %22
  %36 = bitcast %"class.WTF::StringImpl"* %27 to i16*
  %37 = zext i32 %18 to i64
  %38 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #9
  %39 = bitcast i16** %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %39, align 8
  %40 = getelementptr inbounds i16, i16* %36, i64 %37
  %41 = call i32 @_ZN5blink16SVGTransformList13ParseInternalIDsEENS_15SVGParsingErrorERPKT_S5_(%"class.blink::SVGTransformList"* %6, i16** nonnull dereferenceable(8) %4, i16* %40) #9
  br label %42

42:                                               ; preds = %35, %28
  %43 = phi i8* [ %38, %35 ], [ %31, %28 ]
  %44 = phi i32 [ %41, %35 ], [ %34, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #9
  %45 = and i32 %44, 255
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %42
  %48 = bitcast i8* %5 to %"class.blink::SVGListPropertyBase"*
  call void @_ZN5blink19SVGListPropertyBase5ClearEv(%"class.blink::SVGListPropertyBase"* %48) #9
  br label %49

49:                                               ; preds = %20, %42, %47
  %50 = bitcast i8* %5 to %"class.blink::SVGPropertyBase"*
  ret %"class.blink::SVGPropertyBase"* %50
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGTransformList3AddEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE(%"class.blink::SVGTransformList"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::SVGPropertyBase"* %1 to %"class.blink::SVGListPropertyBase"*
  %10 = getelementptr inbounds %"class.blink::SVGListPropertyBase", %"class.blink::SVGListPropertyBase"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %6, %11
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %15 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 0) #9
  %16 = bitcast %"class.blink::Member"* %15 to %"class.blink::SVGTransform"**
  %17 = load %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %1, i64 1
  %19 = bitcast %"class.blink::SVGPropertyBase"* %18 to %"class.WTF::Vector"*
  %20 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %19, i32 0) #9
  %21 = bitcast %"class.blink::Member"* %20 to %"class.blink::SVGTransform"**
  %22 = load %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"** %21, align 8
  tail call void @_ZN5blink19SVGListPropertyBase5ClearEv(%"class.blink::SVGListPropertyBase"* %4) #9
  %23 = tail call %"class.blink::SVGTransform"* @_ZN5blink20SVGTransformDistance16AddSVGTransformsEPKNS_12SVGTransformES3_j(%"class.blink::SVGTransform"* %17, %"class.blink::SVGTransform"* %22, i32 1) #9
  %24 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %23, i64 0, i32 0
  tail call void @_ZN5blink19SVGListPropertyBase6AppendEPNS_23SVGListablePropertyBaseE(%"class.blink::SVGListPropertyBase"* %4, %"class.blink::SVGListablePropertyBase"* %24) #9
  br label %25

25:                                               ; preds = %13, %8, %3
  ret void
}

declare %"class.blink::SVGTransform"* @_ZN5blink20SVGTransformDistance16AddSVGTransformsEPKNS_12SVGTransformES3_j(%"class.blink::SVGTransform"*, %"class.blink::SVGTransform"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGTransformList22CalculateAnimatedValueERKNS_29SMILAnimationEffectParametersEfjPKNS_15SVGPropertyBaseES6_S6_PKNS_10SVGElementE(%"class.blink::SVGTransformList"*, %"struct.blink::SMILAnimationEffectParameters"* nocapture readonly dereferenceable(3), float, i32, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"* nocapture readnone) unnamed_addr #0 align 2 {
  %9 = alloca %"class.blink::SVGTransformDistance", align 8
  %10 = alloca %"class.blink::SVGTransformDistance", align 8
  %11 = bitcast %"class.blink::SVGPropertyBase"* %5 to %"class.blink::SVGListPropertyBase"*
  %12 = getelementptr inbounds %"class.blink::SVGListPropertyBase", %"class.blink::SVGListPropertyBase"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %98, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %5, i64 1
  %17 = bitcast %"class.blink::SVGPropertyBase"* %16 to %"class.WTF::Vector"*
  %18 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %17, i32 0) #9
  %19 = bitcast %"class.blink::Member"* %18 to %"class.blink::SVGTransform"**
  %20 = load %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"** %19, align 8
  %21 = bitcast %"class.blink::SVGPropertyBase"* %4 to %"class.blink::SVGListPropertyBase"*
  %22 = getelementptr inbounds %"class.blink::SVGListPropertyBase", %"class.blink::SVGListPropertyBase"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %20, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  br label %43

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %4, i64 1
  %30 = bitcast %"class.blink::SVGPropertyBase"* %29 to %"class.WTF::Vector"*
  %31 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %30, i32 0) #9
  %32 = bitcast %"class.blink::Member"* %31 to %"class.blink::SVGTransform"**
  %33 = load %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %20, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %35, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %28
  %40 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %30, i32 0) #9
  %41 = bitcast %"class.blink::Member"* %40 to %"class.blink::SVGTransform"**
  %42 = load %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"** %41, align 8
  br label %51

43:                                               ; preds = %25, %28
  %44 = phi i32 [ %27, %25 ], [ %37, %28 ]
  %45 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 80) #9
  %46 = bitcast i8* %45 to %"class.blink::SVGTransform"*
  tail call void @_ZN5blink12SVGTransformC1ENS_16SVGTransformTypeENS0_16ConstructionModeE(%"class.blink::SVGTransform"* %46, i32 %44, i32 1) #9
  %47 = getelementptr inbounds i8, i8* %45, i64 -4
  %48 = bitcast i8* %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = or i16 %49, 1
  store atomic i16 %50, i16* %48 release, align 2
  br label %51

51:                                               ; preds = %43, %39
  %52 = phi %"class.blink::SVGTransform"* [ %42, %39 ], [ %46, %43 ]
  %53 = bitcast %"class.blink::SVGTransformDistance"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %53) #9
  %54 = bitcast %"class.blink::SVGTransformDistance"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %54) #9
  call void @_ZN5blink20SVGTransformDistanceC1EPKNS_12SVGTransformES3_(%"class.blink::SVGTransformDistance"* nonnull %10, %"class.blink::SVGTransform"* %52, %"class.blink::SVGTransform"* %20) #9
  call void @_ZNK5blink20SVGTransformDistance14ScaledDistanceEf(%"class.blink::SVGTransformDistance"* nonnull sret %9, %"class.blink::SVGTransformDistance"* nonnull %10, float %2) #9
  %55 = call %"class.blink::SVGTransform"* @_ZNK5blink20SVGTransformDistance17AddToSVGTransformEPKNS_12SVGTransformE(%"class.blink::SVGTransformDistance"* nonnull %9, %"class.blink::SVGTransform"* %52) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %54) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %53) #9
  %56 = icmp eq i32 %3, 0
  br i1 %56, label %84, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %1, i64 0, i32 2
  %59 = load i8, i8* %58, align 1, !range !4
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %84, label %61

61:                                               ; preds = %57
  %62 = bitcast %"class.blink::SVGPropertyBase"* %6 to %"class.blink::SVGListPropertyBase"*
  %63 = getelementptr inbounds %"class.blink::SVGListPropertyBase", %"class.blink::SVGListPropertyBase"* %62, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %6, i64 1
  %68 = bitcast %"class.blink::SVGPropertyBase"* %67 to %"class.WTF::Vector"*
  %69 = call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %68, i32 0) #9
  %70 = bitcast %"class.blink::Member"* %69 to %"class.blink::SVGTransform"**
  %71 = load %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"** %70, align 8
  br label %81

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %20, i64 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 80) #9
  %76 = bitcast i8* %75 to %"class.blink::SVGTransform"*
  call void @_ZN5blink12SVGTransformC1ENS_16SVGTransformTypeENS0_16ConstructionModeE(%"class.blink::SVGTransform"* %76, i32 %74, i32 1) #9
  %77 = getelementptr inbounds i8, i8* %75, i64 -4
  %78 = bitcast i8* %77 to i16*
  %79 = load atomic i16, i16* %78 monotonic, align 2
  %80 = or i16 %79, 1
  store atomic i16 %80, i16* %78 release, align 2
  br label %81

81:                                               ; preds = %72, %66
  %82 = phi %"class.blink::SVGTransform"* [ %71, %66 ], [ %76, %72 ]
  %83 = call %"class.blink::SVGTransform"* @_ZN5blink20SVGTransformDistance16AddSVGTransformsEPKNS_12SVGTransformES3_j(%"class.blink::SVGTransform"* %55, %"class.blink::SVGTransform"* %82, i32 %3) #9
  br label %84

84:                                               ; preds = %57, %51, %81
  %85 = phi %"class.blink::SVGTransform"* [ %83, %81 ], [ %55, %57 ], [ %55, %51 ]
  %86 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %1, i64 0, i32 1
  %87 = load i8, i8* %86, align 1, !range !4
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %95

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink19SVGListPropertyBase5ClearEv(%"class.blink::SVGListPropertyBase"* %94) #9
  br label %95

95:                                               ; preds = %84, %89, %93
  %96 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %85, i64 0, i32 0
  call void @_ZN5blink19SVGListPropertyBase6AppendEPNS_23SVGListablePropertyBaseE(%"class.blink::SVGListPropertyBase"* %96, %"class.blink::SVGListablePropertyBase"* %97) #9
  br label %98

98:                                               ; preds = %8, %95
  ret void
}

declare void @_ZN5blink20SVGTransformDistanceC1EPKNS_12SVGTransformES3_(%"class.blink::SVGTransformDistance"*, %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"*) unnamed_addr #3

declare void @_ZNK5blink20SVGTransformDistance14ScaledDistanceEf(%"class.blink::SVGTransformDistance"* sret, %"class.blink::SVGTransformDistance"*, float) local_unnamed_addr #3

declare %"class.blink::SVGTransform"* @_ZNK5blink20SVGTransformDistance17AddToSVGTransformEPKNS_12SVGTransformE(%"class.blink::SVGTransformDistance"*, %"class.blink::SVGTransform"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink16SVGTransformList17CalculateDistanceEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE(%"class.blink::SVGTransformList"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::SVGTransformDistance", align 8
  %5 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::SVGPropertyBase"* %1 to %"class.blink::SVGListPropertyBase"*
  %10 = getelementptr inbounds %"class.blink::SVGListPropertyBase", %"class.blink::SVGListPropertyBase"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %6, %11
  br i1 %12, label %13, label %37

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %15 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 0) #9
  %16 = bitcast %"class.blink::Member"* %15 to %"class.blink::SVGTransform"**
  %17 = load %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %1, i64 1
  %21 = bitcast %"class.blink::SVGPropertyBase"* %20 to %"class.WTF::Vector"*
  %22 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %21, i32 0) #9
  %23 = bitcast %"class.blink::Member"* %22 to %"class.blink::SVGTransform"**
  %24 = load %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %19, %26
  br i1 %27, label %37, label %28

28:                                               ; preds = %13
  %29 = bitcast %"class.blink::SVGTransformDistance"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %29) #9
  %30 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 0) #9
  %31 = bitcast %"class.blink::Member"* %30 to %"class.blink::SVGTransform"**
  %32 = load %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"** %31, align 8
  %33 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %21, i32 0) #9
  %34 = bitcast %"class.blink::Member"* %33 to %"class.blink::SVGTransform"**
  %35 = load %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"** %34, align 8
  call void @_ZN5blink20SVGTransformDistanceC1EPKNS_12SVGTransformES3_(%"class.blink::SVGTransformDistance"* nonnull %4, %"class.blink::SVGTransform"* %32, %"class.blink::SVGTransform"* %35) #9
  %36 = call float @_ZNK5blink20SVGTransformDistance8DistanceEv(%"class.blink::SVGTransformDistance"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %29) #9
  br label %37

37:                                               ; preds = %13, %3, %8, %28
  %38 = phi float [ %36, %28 ], [ -1.000000e+00, %8 ], [ -1.000000e+00, %3 ], [ -1.000000e+00, %13 ]
  ret float %38
}

declare float @_ZNK5blink20SVGTransformDistance8DistanceEv(%"class.blink::SVGTransformDistance"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink19SVGListPropertyBase13ValueAsStringEv(%"class.blink::SVGListPropertyBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21SVGListPropertyHelperINS_16SVGTransformListENS_12SVGTransformEE7GetTypeEv(%"class.blink::SVGListPropertyHelper"*) unnamed_addr #0 comdat align 2 {
  ret i32 20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink19SVGListPropertyBase5TraceEPNS_7VisitorE(%"class.blink::SVGListPropertyBase"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGListPropertyBase", %"class.blink::SVGListPropertyBase"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #9
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23SVGListablePropertyBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SVGTransformList"* @_ZNK5blink21SVGListPropertyHelperINS_16SVGTransformListENS_12SVGTransformEE5CloneEv(%"class.blink::SVGListPropertyHelper"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 24) #9
  %3 = bitcast i8* %2 to %"class.blink::SVGTransformList"*
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #9
  %5 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink16SVGTransformListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %2 to %"class.blink::SVGListPropertyBase"*
  tail call void @_ZN5blink19SVGListPropertyBase5ClearEv(%"class.blink::SVGListPropertyBase"* %10) #9
  %11 = getelementptr inbounds %"class.blink::SVGListPropertyHelper", %"class.blink::SVGListPropertyHelper"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member"*, %"class.blink::Member"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SVGListPropertyHelper", %"class.blink::SVGListPropertyHelper"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 %15
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %1, %18
  %19 = phi %"class.blink::Member"* [ %24, %18 ], [ %12, %1 ]
  %20 = bitcast %"class.blink::Member"* %19 to %"class.blink::SVGTransform"**
  %21 = load %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"** %20, align 8
  %22 = tail call %"class.blink::SVGTransform"* @_ZNK5blink12SVGTransform5CloneEv(%"class.blink::SVGTransform"* %21) #9
  %23 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %22, i64 0, i32 0
  tail call void @_ZN5blink19SVGListPropertyBase6AppendEPNS_23SVGListablePropertyBaseE(%"class.blink::SVGListPropertyBase"* %10, %"class.blink::SVGListablePropertyBase"* %23) #9
  %24 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %19, i64 1
  %25 = icmp eq %"class.blink::Member"* %24, %16
  br i1 %25, label %26, label %18

26:                                               ; preds = %18, %1
  ret %"class.blink::SVGTransformList"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SVGTransform"* @_ZNK5blink21SVGListPropertyHelperINS_16SVGTransformListENS_12SVGTransformEE17CreatePaddingItemEv(%"class.blink::SVGListPropertyHelper"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 80) #9
  %3 = bitcast i8* %2 to %"class.blink::SVGTransform"*
  tail call void @_ZN5blink12SVGTransformC1Ev(%"class.blink::SVGTransform"* %3) #9
  %4 = getelementptr inbounds i8, i8* %2, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  ret %"class.blink::SVGTransform"* %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blink12_GLOBAL__N_130ParseTransformArgumentsForTypeIhEENS_14SVGParseStatusENS_16SVGTransformTypeERPKT_S6_RN3WTF6VectorIfLj6ENS8_18PartitionAllocatorEEE(i32, i8** dereferenceable(8), i8*, %"class.WTF::Vector.4"* dereferenceable(40)) unnamed_addr #0 {
  %5 = alloca float, align 4
  %6 = sext i32 %0 to i64
  %7 = getelementptr inbounds [7 x i32], [7 x i32]* @_ZN5blink12_GLOBAL__N_122kRequiredValuesForTypeE, i64 0, i64 %6
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [7 x i32], [7 x i32]* @_ZN5blink12_GLOBAL__N_122kOptionalValuesForTypeE, i64 0, i64 %6
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = add nuw nsw i64 %12, %9
  %14 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %3, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = icmp ugt i64 %13, %16
  br i1 %17, label %18, label %86

18:                                               ; preds = %4
  %19 = bitcast float* %5 to i8*
  %20 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %3, i64 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %3, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast float* %5 to i32*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #9
  store float 0.000000e+00, float* %5, align 4
  %23 = call zeroext i1 @_ZN5blink11ParseNumberERPKhS1_RfNS_14WhitespaceModeE(i8** dereferenceable(8) %1, i8* %2, float* nonnull dereferenceable(4) %5, i32 1) #9
  br i1 %23, label %29, label %26

24:                                               ; preds = %79
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #9
  store float 0.000000e+00, float* %5, align 4
  %25 = call zeroext i1 @_ZN5blink11ParseNumberERPKhS1_RfNS_14WhitespaceModeE(i8** dereferenceable(8) %1, i8* %2, float* nonnull dereferenceable(4) %5, i32 1) #9
  br i1 %25, label %29, label %26

26:                                               ; preds = %24, %18
  %27 = phi i8 [ 0, %18 ], [ %80, %24 ]
  %28 = load i32, i32* %14, align 4
  br label %75

29:                                               ; preds = %18, %24
  %30 = load i32, i32* %14, align 4
  %31 = load i32, i32* %20, align 8
  %32 = icmp eq i32 %30, %31
  br i1 %32, label %41, label %33, !prof !2

33:                                               ; preds = %29
  %34 = load float*, float** %21, align 8
  %35 = zext i32 %30 to i64
  %36 = getelementptr inbounds float, float* %34, i64 %35
  %37 = load i32, i32* %22, align 4
  %38 = bitcast float* %36 to i32*
  store i32 %37, i32* %38, align 4
  %39 = load i32, i32* %14, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %14, align 4
  br label %43

41:                                               ; preds = %29
  call void @_ZN3WTF6VectorIfLj6ENS_18PartitionAllocatorEE14AppendSlowCaseIRfEEvOT_(%"class.WTF::Vector.4"* %3, float* nonnull dereferenceable(4) %5) #9
  %42 = load i32, i32* %14, align 4
  br label %43

43:                                               ; preds = %33, %41
  %44 = phi i32 [ %40, %33 ], [ %42, %41 ]
  %45 = zext i32 %44 to i64
  %46 = icmp eq i64 %13, %45
  br i1 %46, label %75, label %47

47:                                               ; preds = %43
  %48 = load i8*, i8** %1, align 8
  %49 = icmp ult i8* %48, %2
  br i1 %49, label %50, label %79

50:                                               ; preds = %47
  %51 = load i8, i8* %48, align 1
  %52 = icmp ult i8 %51, 33
  br i1 %52, label %56, label %69

53:                                               ; preds = %60
  %54 = load i8, i8* %61, align 1
  %55 = icmp ult i8 %54, 33
  br i1 %55, label %56, label %64

56:                                               ; preds = %50, %53
  %57 = phi i8 [ %54, %53 ], [ %51, %50 ]
  %58 = phi i8* [ %61, %53 ], [ %48, %50 ]
  %59 = phi i1 [ %62, %53 ], [ true, %50 ]
  switch i8 %57, label %64 [
    i8 32, label %60
    i8 10, label %60
    i8 9, label %60
    i8 13, label %60
    i8 12, label %60
  ]

60:                                               ; preds = %56, %56, %56, %56, %56
  %61 = getelementptr inbounds i8, i8* %58, i64 1
  store i8* %61, i8** %1, align 8
  %62 = icmp ult i8* %61, %2
  %63 = icmp eq i8* %61, %2
  br i1 %63, label %64, label %53

64:                                               ; preds = %60, %56, %53
  %65 = phi i8* [ %61, %53 ], [ %58, %56 ], [ %2, %60 ]
  %66 = phi i1 [ %62, %53 ], [ %59, %56 ], [ %62, %60 ]
  br i1 %66, label %67, label %79

67:                                               ; preds = %64
  %68 = load i8, i8* %65, align 1
  br label %69

69:                                               ; preds = %67, %50
  %70 = phi i8 [ %51, %50 ], [ %68, %67 ]
  %71 = phi i8* [ %48, %50 ], [ %65, %67 ]
  %72 = icmp eq i8 %70, 44
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = getelementptr inbounds i8, i8* %71, i64 1
  store i8* %74, i8** %1, align 8
  br label %79

75:                                               ; preds = %43, %26
  %76 = phi i32 [ %28, %26 ], [ %44, %43 ]
  %77 = phi i8 [ %27, %26 ], [ 0, %43 ]
  %78 = zext i32 %76 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #9
  br label %86

79:                                               ; preds = %47, %64, %69, %73
  %80 = phi i8 [ 1, %73 ], [ 0, %69 ], [ 0, %64 ], [ 0, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #9
  %81 = load i32, i32* %14, align 4
  %82 = zext i32 %81 to i64
  %83 = icmp ugt i64 %13, %82
  br i1 %83, label %24, label %84

84:                                               ; preds = %79
  %85 = zext i32 %81 to i64
  br label %86

86:                                               ; preds = %84, %4, %75
  %87 = phi i64 [ %16, %4 ], [ %78, %75 ], [ %85, %84 ]
  %88 = phi i32 [ %15, %4 ], [ %76, %75 ], [ %81, %84 ]
  %89 = phi i8 [ 0, %4 ], [ %77, %75 ], [ %80, %84 ]
  %90 = icmp eq i32 %88, %8
  %91 = icmp eq i64 %13, %87
  %92 = or i1 %90, %91
  %93 = and i8 %89, 1
  %94 = zext i8 %93 to i32
  %95 = select i1 %92, i32 %94, i32 10
  ret i32 %95
}

declare zeroext i1 @_ZN5blink11ParseNumberERPKhS1_RfNS_14WhitespaceModeE(i8** dereferenceable(8), i8*, float* dereferenceable(4), i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIfLj6ENS_18PartitionAllocatorEE14AppendSlowCaseIRfEEvOT_(%"class.WTF::Vector.4"*, float* dereferenceable(4)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load float*, float** %6, align 8
  %8 = icmp ugt float* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds float, float* %7, i64 %10
  %12 = icmp ugt float* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIfLj6ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.4"* %0, i32 %5) #9
  %14 = load float*, float** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint float* %1 to i64
  %17 = ptrtoint float* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 2
  tail call void @_ZN3WTF6VectorIfLj6ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.4"* %0, i32 %5) #9
  %20 = load float*, float** %6, align 8
  %21 = getelementptr inbounds float, float* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi float* [ %14, %13 ], [ %20, %15 ]
  %24 = phi float* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds float, float* %23, i64 %26
  %28 = bitcast float* %24 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = bitcast float* %27 to i32*
  store i32 %29, i32* %30, align 4
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIfLj6ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.4"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load float*, float** %31, align 8
  %33 = icmp eq float* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 6
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 2
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 6, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIfLj6ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.4"* %0, i32 %27) #9
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIfLj6ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.4"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 7
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load float*, float** %5, align 8
  %7 = icmp eq float* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to float*
  %10 = icmp eq float* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 6, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 6, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast float* %6 to i8*
  %27 = shl nuw nsw i64 %25, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #9
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIfLj6ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPf(%"class.WTF::VectorBuffer.5"* %19, float* nonnull %6) #9
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %30) #9
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #9
  %33 = lshr i64 %31, 2
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load float*, float** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne float* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast float* %36 to i8*
  %45 = shl nuw nsw i64 %43, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #9
  %46 = load float*, float** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi float* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to float*
  %51 = icmp eq float* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIfLj6ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPf(%"class.WTF::VectorBuffer.5"* %53, float* %48) #9
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIfLj6ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPf(%"class.WTF::VectorBuffer.5"*, float*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast float* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blink12_GLOBAL__N_130ParseTransformArgumentsForTypeIDsEENS_14SVGParseStatusENS_16SVGTransformTypeERPKT_S6_RN3WTF6VectorIfLj6ENS8_18PartitionAllocatorEEE(i32, i16** dereferenceable(8), i16*, %"class.WTF::Vector.4"* dereferenceable(40)) unnamed_addr #0 {
  %5 = alloca float, align 4
  %6 = sext i32 %0 to i64
  %7 = getelementptr inbounds [7 x i32], [7 x i32]* @_ZN5blink12_GLOBAL__N_122kRequiredValuesForTypeE, i64 0, i64 %6
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [7 x i32], [7 x i32]* @_ZN5blink12_GLOBAL__N_122kOptionalValuesForTypeE, i64 0, i64 %6
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = add nuw nsw i64 %12, %9
  %14 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %3, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = icmp ugt i64 %13, %16
  br i1 %17, label %18, label %73

18:                                               ; preds = %4
  %19 = bitcast float* %5 to i8*
  %20 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %3, i64 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %3, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast float* %5 to i32*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #9
  store float 0.000000e+00, float* %5, align 4
  %23 = call zeroext i1 @_ZN5blink11ParseNumberERPKDsS1_RfNS_14WhitespaceModeE(i16** dereferenceable(8) %1, i16* %2, float* nonnull dereferenceable(4) %5, i32 1) #9
  br i1 %23, label %29, label %26

24:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #9
  store float 0.000000e+00, float* %5, align 4
  %25 = call zeroext i1 @_ZN5blink11ParseNumberERPKDsS1_RfNS_14WhitespaceModeE(i16** dereferenceable(8) %1, i16* %2, float* nonnull dereferenceable(4) %5, i32 1) #9
  br i1 %25, label %29, label %26

26:                                               ; preds = %24, %18
  %27 = phi i8 [ 0, %18 ], [ %67, %24 ]
  %28 = load i32, i32* %14, align 4
  br label %62

29:                                               ; preds = %18, %24
  %30 = load i32, i32* %14, align 4
  %31 = load i32, i32* %20, align 8
  %32 = icmp eq i32 %30, %31
  br i1 %32, label %41, label %33, !prof !2

33:                                               ; preds = %29
  %34 = load float*, float** %21, align 8
  %35 = zext i32 %30 to i64
  %36 = getelementptr inbounds float, float* %34, i64 %35
  %37 = load i32, i32* %22, align 4
  %38 = bitcast float* %36 to i32*
  store i32 %37, i32* %38, align 4
  %39 = load i32, i32* %14, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %14, align 4
  br label %43

41:                                               ; preds = %29
  call void @_ZN3WTF6VectorIfLj6ENS_18PartitionAllocatorEE14AppendSlowCaseIRfEEvOT_(%"class.WTF::Vector.4"* %3, float* nonnull dereferenceable(4) %5) #9
  %42 = load i32, i32* %14, align 4
  br label %43

43:                                               ; preds = %33, %41
  %44 = phi i32 [ %40, %33 ], [ %42, %41 ]
  %45 = zext i32 %44 to i64
  %46 = icmp eq i64 %13, %45
  br i1 %46, label %62, label %47

47:                                               ; preds = %43
  %48 = load i16*, i16** %1, align 8
  %49 = icmp ult i16* %48, %2
  br i1 %49, label %50, label %66

50:                                               ; preds = %47, %55
  %51 = phi i16* [ %56, %55 ], [ %48, %47 ]
  %52 = load i16, i16* %51, align 2
  %53 = icmp ult i16 %52, 33
  br i1 %53, label %54, label %58

54:                                               ; preds = %50
  switch i16 %52, label %66 [
    i16 32, label %55
    i16 10, label %55
    i16 9, label %55
    i16 13, label %55
    i16 12, label %55
  ]

55:                                               ; preds = %54, %54, %54, %54, %54
  %56 = getelementptr inbounds i16, i16* %51, i64 1
  store i16* %56, i16** %1, align 8
  %57 = icmp ult i16* %56, %2
  br i1 %57, label %50, label %66

58:                                               ; preds = %50
  %59 = icmp eq i16 %52, 44
  br i1 %59, label %60, label %66

60:                                               ; preds = %58
  %61 = getelementptr inbounds i16, i16* %51, i64 1
  store i16* %61, i16** %1, align 8
  br label %66

62:                                               ; preds = %43, %26
  %63 = phi i32 [ %28, %26 ], [ %44, %43 ]
  %64 = phi i8 [ %27, %26 ], [ 0, %43 ]
  %65 = zext i32 %63 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #9
  br label %73

66:                                               ; preds = %54, %55, %47, %58, %60
  %67 = phi i8 [ 1, %60 ], [ 0, %58 ], [ 0, %47 ], [ 0, %55 ], [ 0, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #9
  %68 = load i32, i32* %14, align 4
  %69 = zext i32 %68 to i64
  %70 = icmp ugt i64 %13, %69
  br i1 %70, label %24, label %71

71:                                               ; preds = %66
  %72 = zext i32 %68 to i64
  br label %73

73:                                               ; preds = %71, %4, %62
  %74 = phi i64 [ %16, %4 ], [ %65, %62 ], [ %72, %71 ]
  %75 = phi i32 [ %15, %4 ], [ %63, %62 ], [ %68, %71 ]
  %76 = phi i8 [ 0, %4 ], [ %64, %62 ], [ %67, %71 ]
  %77 = icmp eq i32 %75, %8
  %78 = icmp eq i64 %13, %74
  %79 = or i1 %77, %78
  %80 = and i8 %76, 1
  %81 = zext i8 %80 to i32
  %82 = select i1 %79, i32 %81, i32 10
  ret i32 %82
}

declare zeroext i1 @_ZN5blink11ParseNumberERPKDsS1_RfNS_14WhitespaceModeE(i16** dereferenceable(8), i16*, float* dereferenceable(4), i32) local_unnamed_addr #3

declare void @_ZN5blink12SVGTransform8SetSkewXEf(%"class.blink::SVGTransform"*, float) local_unnamed_addr #3

declare void @_ZN5blink12SVGTransform8SetSkewYEf(%"class.blink::SVGTransform"*, float) local_unnamed_addr #3

declare void @_ZN5blink12SVGTransform8SetScaleEff(%"class.blink::SVGTransform"*, float, float) local_unnamed_addr #3

declare void @_ZN5blink12SVGTransform12SetTranslateEff(%"class.blink::SVGTransform"*, float, float) local_unnamed_addr #3

declare void @_ZN5blink12SVGTransform9SetRotateEfff(%"class.blink::SVGTransform"*, float, float, float) local_unnamed_addr #3

declare void @_ZN5blink12SVGTransform9SetMatrixERKNS_15AffineTransformE(%"class.blink::SVGTransform"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #3

declare void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"*, double, double, double, double, double, double) unnamed_addr #3

declare void @_ZN5blink12SVGTransformC1Ev(%"class.blink::SVGTransform"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGPropertyBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGPropertyBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGPropertyBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SVGPropertyBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::SVGPropertyBase"*)***
  %4 = load void (%"class.blink::SVGPropertyBase"*)**, void (%"class.blink::SVGPropertyBase"*)*** %3, align 8
  %5 = load void (%"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGPropertyBase"*)** %4, align 8
  tail call void %5(%"class.blink::SVGPropertyBase"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) float* @_ZNK3WTF6VectorIfLj6ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds float, float* %24, i64 %25
  ret float* %26
}

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform8MultiplyERKS0_(%"class.blink::AffineTransform"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 7, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0))
  ret i8* %21
}

declare void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #3

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.13"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.13"* %0, i32 %5) #9
  %6 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %7, i64 %9
  %11 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %12 = bitcast %"class.blink::Member.16"* %10 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #9
  br label %18

18:                                               ; preds = %2, %15
  %19 = load i32, i32* %3, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.13"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.13"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.13"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %8, align 8
  %10 = icmp eq %"class.blink::Member.16"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 4
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.13"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #9
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.13"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 4, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member.16"*
  %33 = icmp eq %"class.blink::Member.16"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 5
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %37) #9
  %39 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %8, align 8
  %40 = icmp eq %"class.blink::Member.16"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 32, %34 ]
  %43 = phi %"class.blink::Member.16"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member.16"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #9
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #9
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !2

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #9
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !4
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #9
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #9
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.13"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.13"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %5, align 8
  %7 = icmp eq %"class.blink::Member.16"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member.16"*
  %10 = icmp eq %"class.blink::Member.16"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.13"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.13"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member.16"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !2

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #9
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member.16"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member.16"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #9
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #9
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.14"* %20, %"class.blink::Member.16"* %6) #9
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %44) #9
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %46) #9
  %48 = ptrtoint %"class.blink::HeapVectorBacking"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking"* %47, null
  %53 = icmp ne %"class.blink::Member.16"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !3

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member.16"*
  %58 = icmp ne %"class.blink::Member.16"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member.16"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #9
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking"* %47 to %"class.blink::Member.16"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member.16"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member.16"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #9
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector.13"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #9
  %87 = load %"class.blink::Member.16"*, %"class.blink::Member.16"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member.16"*
  %90 = icmp eq %"class.blink::Member.16"* %87, %89
  br i1 %90, label %93, label %91, !prof !3

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.14"* %92, %"class.blink::Member.16"* %87) #9
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector.13"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #9
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.10, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8CSSValueEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.16"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.16", %"class.blink::Member.16"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.16"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::CSSValue"*
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %34, i64 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.14"*, %"class.blink::Member.16"*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.blink::Member.16"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

declare %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_16CSSFunctionValueEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 7, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0))
  ret i8* %21
}

declare void @_ZN5blink12CSSValueListC2ENS_8CSSValue9ClassTypeENS1_18ValueListSeparatorE(%"class.blink::CSSValueList"*, i32, i32) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZN5blink12_GLOBAL__N_125ParseAndSkipTransformTypeIhEENS_16SVGTransformTypeERPKT_S5_(i8** nocapture dereferenceable(8), i8*) unnamed_addr #8 {
  %3 = load i8*, i8** %0, align 8
  %4 = icmp ult i8* %3, %1
  br i1 %4, label %5, label %57

5:                                                ; preds = %2
  %6 = load i8, i8* %3, align 1
  %7 = icmp eq i8 %6, 115
  br i1 %7, label %8, label %26

8:                                                ; preds = %5
  %9 = load i8, i8* %3, align 1
  %10 = icmp eq i8 %9, 115
  br i1 %10, label %11, label %14

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %3, i64 1
  %13 = icmp eq i8* %12, %1
  br i1 %13, label %14, label %109

14:                                               ; preds = %124, %118, %112, %11, %8, %109, %115, %121, %127
  %15 = load i8, i8* %3, align 1
  %16 = icmp eq i8 %15, 115
  br i1 %16, label %17, label %20

17:                                               ; preds = %14
  %18 = getelementptr inbounds i8, i8* %3, i64 1
  %19 = icmp eq i8* %18, %1
  br i1 %19, label %20, label %84

20:                                               ; preds = %99, %93, %87, %17, %14, %84, %90, %96, %102
  %21 = load i8, i8* %3, align 1
  %22 = icmp eq i8 %21, 115
  br i1 %22, label %23, label %57

23:                                               ; preds = %20
  %24 = getelementptr inbounds i8, i8* %3, i64 1
  %25 = icmp eq i8* %24, %1
  br i1 %25, label %57, label %59

26:                                               ; preds = %5, %36
  %27 = phi i1 [ %40, %36 ], [ false, %5 ]
  %28 = phi i8 [ %39, %36 ], [ 116, %5 ]
  %29 = phi i8* [ %37, %36 ], [ %3, %5 ]
  %30 = phi i8* [ %38, %36 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0), %5 ]
  br i1 %27, label %43, label %31

31:                                               ; preds = %26
  %32 = load i8, i8* %29, align 1
  %33 = zext i8 %32 to i32
  %34 = sext i8 %28 to i32
  %35 = icmp eq i32 %33, %34
  br i1 %35, label %36, label %45

36:                                               ; preds = %31
  %37 = getelementptr inbounds i8, i8* %29, i64 1
  %38 = getelementptr inbounds i8, i8* %30, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  %41 = icmp eq i8* %37, %1
  br i1 %41, label %42, label %26

42:                                               ; preds = %36
  br i1 %40, label %43, label %45

43:                                               ; preds = %26, %42
  %44 = phi i8* [ %1, %42 ], [ %29, %26 ]
  store i8* %44, i8** %0, align 8
  br label %57

45:                                               ; preds = %31, %42
  %46 = load i8, i8* %3, align 1
  %47 = icmp eq i8 %46, 114
  br i1 %47, label %48, label %51

48:                                               ; preds = %45
  %49 = getelementptr inbounds i8, i8* %3, i64 1
  %50 = icmp eq i8* %49, %1
  br i1 %50, label %51, label %165

51:                                               ; preds = %186, %180, %174, %168, %48, %45, %165, %171, %177, %183, %189
  %52 = load i8, i8* %3, align 1
  %53 = icmp eq i8 %52, 109
  br i1 %53, label %54, label %57

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %3, i64 1
  %56 = icmp eq i8* %55, %1
  br i1 %56, label %57, label %134

57:                                               ; preds = %155, %149, %143, %137, %54, %74, %68, %62, %23, %51, %134, %140, %146, %152, %158, %20, %59, %65, %71, %77, %161, %192, %43, %80, %105, %130, %2
  %58 = phi i32 [ 0, %2 ], [ 5, %130 ], [ 6, %105 ], [ 2, %43 ], [ 4, %192 ], [ 3, %80 ], [ 1, %161 ], [ 0, %77 ], [ 0, %71 ], [ 0, %65 ], [ 0, %59 ], [ 0, %20 ], [ 0, %158 ], [ 0, %152 ], [ 0, %146 ], [ 0, %140 ], [ 0, %134 ], [ 0, %51 ], [ 0, %23 ], [ 0, %62 ], [ 0, %68 ], [ 0, %74 ], [ 0, %54 ], [ 0, %137 ], [ 0, %143 ], [ 0, %149 ], [ 0, %155 ]
  ret i32 %58

59:                                               ; preds = %23
  %60 = load i8, i8* %24, align 1
  %61 = icmp eq i8 %60, 99
  br i1 %61, label %62, label %57

62:                                               ; preds = %59
  %63 = getelementptr inbounds i8, i8* %3, i64 2
  %64 = icmp eq i8* %63, %1
  br i1 %64, label %57, label %65

65:                                               ; preds = %62
  %66 = load i8, i8* %63, align 1
  %67 = icmp eq i8 %66, 97
  br i1 %67, label %68, label %57

68:                                               ; preds = %65
  %69 = getelementptr inbounds i8, i8* %3, i64 3
  %70 = icmp eq i8* %69, %1
  br i1 %70, label %57, label %71

71:                                               ; preds = %68
  %72 = load i8, i8* %69, align 1
  %73 = icmp eq i8 %72, 108
  br i1 %73, label %74, label %57

74:                                               ; preds = %71
  %75 = getelementptr inbounds i8, i8* %3, i64 4
  %76 = icmp eq i8* %75, %1
  br i1 %76, label %57, label %77

77:                                               ; preds = %74
  %78 = load i8, i8* %75, align 1
  %79 = icmp eq i8 %78, 101
  br i1 %79, label %80, label %57

80:                                               ; preds = %77
  %81 = getelementptr inbounds i8, i8* %3, i64 5
  %82 = icmp eq i8* %81, %1
  %83 = select i1 %82, i8* %1, i8* %81
  store i8* %83, i8** %0, align 8
  br label %57

84:                                               ; preds = %17
  %85 = load i8, i8* %18, align 1
  %86 = icmp eq i8 %85, 107
  br i1 %86, label %87, label %20

87:                                               ; preds = %84
  %88 = getelementptr inbounds i8, i8* %3, i64 2
  %89 = icmp eq i8* %88, %1
  br i1 %89, label %20, label %90

90:                                               ; preds = %87
  %91 = load i8, i8* %88, align 1
  %92 = icmp eq i8 %91, 101
  br i1 %92, label %93, label %20

93:                                               ; preds = %90
  %94 = getelementptr inbounds i8, i8* %3, i64 3
  %95 = icmp eq i8* %94, %1
  br i1 %95, label %20, label %96

96:                                               ; preds = %93
  %97 = load i8, i8* %94, align 1
  %98 = icmp eq i8 %97, 119
  br i1 %98, label %99, label %20

99:                                               ; preds = %96
  %100 = getelementptr inbounds i8, i8* %3, i64 4
  %101 = icmp eq i8* %100, %1
  br i1 %101, label %20, label %102

102:                                              ; preds = %99
  %103 = load i8, i8* %100, align 1
  %104 = icmp eq i8 %103, 89
  br i1 %104, label %105, label %20

105:                                              ; preds = %102
  %106 = getelementptr inbounds i8, i8* %3, i64 5
  %107 = icmp eq i8* %106, %1
  %108 = select i1 %107, i8* %1, i8* %106
  store i8* %108, i8** %0, align 8
  br label %57

109:                                              ; preds = %11
  %110 = load i8, i8* %12, align 1
  %111 = icmp eq i8 %110, 107
  br i1 %111, label %112, label %14

112:                                              ; preds = %109
  %113 = getelementptr inbounds i8, i8* %3, i64 2
  %114 = icmp eq i8* %113, %1
  br i1 %114, label %14, label %115

115:                                              ; preds = %112
  %116 = load i8, i8* %113, align 1
  %117 = icmp eq i8 %116, 101
  br i1 %117, label %118, label %14

118:                                              ; preds = %115
  %119 = getelementptr inbounds i8, i8* %3, i64 3
  %120 = icmp eq i8* %119, %1
  br i1 %120, label %14, label %121

121:                                              ; preds = %118
  %122 = load i8, i8* %119, align 1
  %123 = icmp eq i8 %122, 119
  br i1 %123, label %124, label %14

124:                                              ; preds = %121
  %125 = getelementptr inbounds i8, i8* %3, i64 4
  %126 = icmp eq i8* %125, %1
  br i1 %126, label %14, label %127

127:                                              ; preds = %124
  %128 = load i8, i8* %125, align 1
  %129 = icmp eq i8 %128, 88
  br i1 %129, label %130, label %14

130:                                              ; preds = %127
  %131 = getelementptr inbounds i8, i8* %3, i64 5
  %132 = icmp eq i8* %131, %1
  %133 = select i1 %132, i8* %1, i8* %131
  store i8* %133, i8** %0, align 8
  br label %57

134:                                              ; preds = %54
  %135 = load i8, i8* %55, align 1
  %136 = icmp eq i8 %135, 97
  br i1 %136, label %137, label %57

137:                                              ; preds = %134
  %138 = getelementptr inbounds i8, i8* %3, i64 2
  %139 = icmp eq i8* %138, %1
  br i1 %139, label %57, label %140

140:                                              ; preds = %137
  %141 = load i8, i8* %138, align 1
  %142 = icmp eq i8 %141, 116
  br i1 %142, label %143, label %57

143:                                              ; preds = %140
  %144 = getelementptr inbounds i8, i8* %3, i64 3
  %145 = icmp eq i8* %144, %1
  br i1 %145, label %57, label %146

146:                                              ; preds = %143
  %147 = load i8, i8* %144, align 1
  %148 = icmp eq i8 %147, 114
  br i1 %148, label %149, label %57

149:                                              ; preds = %146
  %150 = getelementptr inbounds i8, i8* %3, i64 4
  %151 = icmp eq i8* %150, %1
  br i1 %151, label %57, label %152

152:                                              ; preds = %149
  %153 = load i8, i8* %150, align 1
  %154 = icmp eq i8 %153, 105
  br i1 %154, label %155, label %57

155:                                              ; preds = %152
  %156 = getelementptr inbounds i8, i8* %3, i64 5
  %157 = icmp eq i8* %156, %1
  br i1 %157, label %57, label %158

158:                                              ; preds = %155
  %159 = load i8, i8* %156, align 1
  %160 = icmp eq i8 %159, 120
  br i1 %160, label %161, label %57

161:                                              ; preds = %158
  %162 = getelementptr inbounds i8, i8* %3, i64 6
  %163 = icmp eq i8* %162, %1
  %164 = select i1 %163, i8* %1, i8* %162
  store i8* %164, i8** %0, align 8
  br label %57

165:                                              ; preds = %48
  %166 = load i8, i8* %49, align 1
  %167 = icmp eq i8 %166, 111
  br i1 %167, label %168, label %51

168:                                              ; preds = %165
  %169 = getelementptr inbounds i8, i8* %3, i64 2
  %170 = icmp eq i8* %169, %1
  br i1 %170, label %51, label %171

171:                                              ; preds = %168
  %172 = load i8, i8* %169, align 1
  %173 = icmp eq i8 %172, 116
  br i1 %173, label %174, label %51

174:                                              ; preds = %171
  %175 = getelementptr inbounds i8, i8* %3, i64 3
  %176 = icmp eq i8* %175, %1
  br i1 %176, label %51, label %177

177:                                              ; preds = %174
  %178 = load i8, i8* %175, align 1
  %179 = icmp eq i8 %178, 97
  br i1 %179, label %180, label %51

180:                                              ; preds = %177
  %181 = getelementptr inbounds i8, i8* %3, i64 4
  %182 = icmp eq i8* %181, %1
  br i1 %182, label %51, label %183

183:                                              ; preds = %180
  %184 = load i8, i8* %181, align 1
  %185 = icmp eq i8 %184, 116
  br i1 %185, label %186, label %51

186:                                              ; preds = %183
  %187 = getelementptr inbounds i8, i8* %3, i64 5
  %188 = icmp eq i8* %187, %1
  br i1 %188, label %51, label %189

189:                                              ; preds = %186
  %190 = load i8, i8* %187, align 1
  %191 = icmp eq i8 %190, 101
  br i1 %191, label %192, label %51

192:                                              ; preds = %189
  %193 = getelementptr inbounds i8, i8* %3, i64 6
  %194 = icmp eq i8* %193, %1
  %195 = select i1 %194, i8* %1, i8* %193
  store i8* %195, i8** %0, align 8
  br label %57
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZN5blink12_GLOBAL__N_125ParseAndSkipTransformTypeIDsEENS_16SVGTransformTypeERPKT_S5_(i16** nocapture dereferenceable(8), i16* readnone) unnamed_addr #8 {
  %3 = load i16*, i16** %0, align 8
  %4 = icmp ult i16* %3, %1
  br i1 %4, label %5, label %82

5:                                                ; preds = %2
  %6 = load i16, i16* %3, align 2
  %7 = icmp eq i16 %6, 115
  br i1 %7, label %8, label %41

8:                                                ; preds = %5
  %9 = load i16, i16* %3, align 2
  %10 = icmp eq i16 %9, 115
  br i1 %10, label %11, label %19

11:                                               ; preds = %8
  %12 = getelementptr inbounds i16, i16* %3, i64 1
  %13 = icmp ult i16* %12, %1
  br i1 %13, label %132, label %14

14:                                               ; preds = %153, %147, %141, %135, %11
  %15 = phi i16* [ %12, %11 ], [ %136, %135 ], [ %142, %141 ], [ %148, %147 ], [ %154, %153 ]
  %16 = phi i1 [ false, %11 ], [ false, %135 ], [ false, %141 ], [ false, %147 ], [ true, %153 ]
  br i1 %16, label %17, label %19

17:                                               ; preds = %153, %14
  %18 = phi i16* [ %15, %14 ], [ %154, %153 ]
  store i16* %18, i16** %0, align 8
  br label %82

19:                                               ; preds = %8, %132, %138, %144, %150, %14
  %20 = load i16, i16* %3, align 2
  %21 = icmp eq i16 %20, 115
  br i1 %21, label %22, label %30

22:                                               ; preds = %19
  %23 = getelementptr inbounds i16, i16* %3, i64 1
  %24 = icmp ult i16* %23, %1
  br i1 %24, label %108, label %25

25:                                               ; preds = %129, %123, %117, %111, %22
  %26 = phi i16* [ %23, %22 ], [ %112, %111 ], [ %118, %117 ], [ %124, %123 ], [ %130, %129 ]
  %27 = phi i1 [ false, %22 ], [ false, %111 ], [ false, %117 ], [ false, %123 ], [ true, %129 ]
  br i1 %27, label %28, label %30

28:                                               ; preds = %129, %25
  %29 = phi i16* [ %26, %25 ], [ %130, %129 ]
  store i16* %29, i16** %0, align 8
  br label %82

30:                                               ; preds = %19, %108, %114, %120, %126, %25
  %31 = load i16, i16* %3, align 2
  %32 = icmp eq i16 %31, 115
  br i1 %32, label %33, label %82

33:                                               ; preds = %30
  %34 = getelementptr inbounds i16, i16* %3, i64 1
  %35 = icmp ult i16* %34, %1
  br i1 %35, label %84, label %36

36:                                               ; preds = %105, %99, %93, %87, %33
  %37 = phi i16* [ %34, %33 ], [ %88, %87 ], [ %94, %93 ], [ %100, %99 ], [ %106, %105 ]
  %38 = phi i1 [ false, %33 ], [ false, %87 ], [ false, %93 ], [ false, %99 ], [ true, %105 ]
  br i1 %38, label %39, label %82

39:                                               ; preds = %105, %36
  %40 = phi i16* [ %37, %36 ], [ %106, %105 ]
  store i16* %40, i16** %0, align 8
  br label %82

41:                                               ; preds = %5, %51
  %42 = phi i1 [ %56, %51 ], [ false, %5 ]
  %43 = phi i8 [ %55, %51 ], [ 116, %5 ]
  %44 = phi i16* [ %52, %51 ], [ %3, %5 ]
  %45 = phi i8* [ %53, %51 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0), %5 ]
  br i1 %42, label %58, label %46

46:                                               ; preds = %41
  %47 = load i16, i16* %44, align 2
  %48 = zext i16 %47 to i32
  %49 = sext i8 %43 to i32
  %50 = icmp eq i32 %48, %49
  br i1 %50, label %51, label %60

51:                                               ; preds = %46
  %52 = getelementptr inbounds i16, i16* %44, i64 1
  %53 = getelementptr inbounds i8, i8* %45, i64 1
  %54 = icmp ult i16* %52, %1
  %55 = load i8, i8* %53, align 1
  %56 = icmp eq i8 %55, 0
  br i1 %54, label %41, label %57

57:                                               ; preds = %51
  br i1 %56, label %58, label %60

58:                                               ; preds = %41, %57
  %59 = phi i16* [ %52, %57 ], [ %44, %41 ]
  store i16* %59, i16** %0, align 8
  br label %82

60:                                               ; preds = %46, %57
  %61 = load i16, i16* %3, align 2
  %62 = icmp eq i16 %61, 114
  br i1 %62, label %63, label %71

63:                                               ; preds = %60
  %64 = getelementptr inbounds i16, i16* %3, i64 1
  %65 = icmp ult i16* %64, %1
  br i1 %65, label %186, label %66

66:                                               ; preds = %213, %207, %201, %195, %189, %63
  %67 = phi i16* [ %64, %63 ], [ %190, %189 ], [ %196, %195 ], [ %202, %201 ], [ %208, %207 ], [ %214, %213 ]
  %68 = phi i1 [ false, %63 ], [ false, %189 ], [ false, %195 ], [ false, %201 ], [ false, %207 ], [ true, %213 ]
  br i1 %68, label %69, label %71

69:                                               ; preds = %213, %66
  %70 = phi i16* [ %67, %66 ], [ %214, %213 ]
  store i16* %70, i16** %0, align 8
  br label %82

71:                                               ; preds = %60, %186, %192, %198, %204, %210, %66
  %72 = load i16, i16* %3, align 2
  %73 = icmp eq i16 %72, 109
  br i1 %73, label %74, label %82

74:                                               ; preds = %71
  %75 = getelementptr inbounds i16, i16* %3, i64 1
  %76 = icmp ult i16* %75, %1
  br i1 %76, label %156, label %77

77:                                               ; preds = %183, %177, %171, %165, %159, %74
  %78 = phi i16* [ %75, %74 ], [ %160, %159 ], [ %166, %165 ], [ %172, %171 ], [ %178, %177 ], [ %184, %183 ]
  %79 = phi i1 [ false, %74 ], [ false, %159 ], [ false, %165 ], [ false, %171 ], [ false, %177 ], [ true, %183 ]
  br i1 %79, label %80, label %82

80:                                               ; preds = %183, %77
  %81 = phi i16* [ %78, %77 ], [ %184, %183 ]
  store i16* %81, i16** %0, align 8
  br label %82

82:                                               ; preds = %71, %156, %162, %168, %174, %180, %30, %84, %90, %96, %102, %77, %36, %80, %69, %58, %39, %28, %17, %2
  %83 = phi i32 [ 0, %2 ], [ 5, %17 ], [ 6, %28 ], [ 2, %58 ], [ 4, %69 ], [ 3, %39 ], [ 1, %80 ], [ 0, %36 ], [ 0, %77 ], [ 0, %102 ], [ 0, %96 ], [ 0, %90 ], [ 0, %84 ], [ 0, %30 ], [ 0, %180 ], [ 0, %174 ], [ 0, %168 ], [ 0, %162 ], [ 0, %156 ], [ 0, %71 ]
  ret i32 %83

84:                                               ; preds = %33
  %85 = load i16, i16* %34, align 2
  %86 = icmp eq i16 %85, 99
  br i1 %86, label %87, label %82

87:                                               ; preds = %84
  %88 = getelementptr inbounds i16, i16* %3, i64 2
  %89 = icmp ult i16* %88, %1
  br i1 %89, label %90, label %36

90:                                               ; preds = %87
  %91 = load i16, i16* %88, align 2
  %92 = icmp eq i16 %91, 97
  br i1 %92, label %93, label %82

93:                                               ; preds = %90
  %94 = getelementptr inbounds i16, i16* %3, i64 3
  %95 = icmp ult i16* %94, %1
  br i1 %95, label %96, label %36

96:                                               ; preds = %93
  %97 = load i16, i16* %94, align 2
  %98 = icmp eq i16 %97, 108
  br i1 %98, label %99, label %82

99:                                               ; preds = %96
  %100 = getelementptr inbounds i16, i16* %3, i64 4
  %101 = icmp ult i16* %100, %1
  br i1 %101, label %102, label %36

102:                                              ; preds = %99
  %103 = load i16, i16* %100, align 2
  %104 = icmp eq i16 %103, 101
  br i1 %104, label %105, label %82

105:                                              ; preds = %102
  %106 = getelementptr inbounds i16, i16* %3, i64 5
  %107 = icmp ult i16* %106, %1
  br i1 %107, label %39, label %36

108:                                              ; preds = %22
  %109 = load i16, i16* %23, align 2
  %110 = icmp eq i16 %109, 107
  br i1 %110, label %111, label %30

111:                                              ; preds = %108
  %112 = getelementptr inbounds i16, i16* %3, i64 2
  %113 = icmp ult i16* %112, %1
  br i1 %113, label %114, label %25

114:                                              ; preds = %111
  %115 = load i16, i16* %112, align 2
  %116 = icmp eq i16 %115, 101
  br i1 %116, label %117, label %30

117:                                              ; preds = %114
  %118 = getelementptr inbounds i16, i16* %3, i64 3
  %119 = icmp ult i16* %118, %1
  br i1 %119, label %120, label %25

120:                                              ; preds = %117
  %121 = load i16, i16* %118, align 2
  %122 = icmp eq i16 %121, 119
  br i1 %122, label %123, label %30

123:                                              ; preds = %120
  %124 = getelementptr inbounds i16, i16* %3, i64 4
  %125 = icmp ult i16* %124, %1
  br i1 %125, label %126, label %25

126:                                              ; preds = %123
  %127 = load i16, i16* %124, align 2
  %128 = icmp eq i16 %127, 89
  br i1 %128, label %129, label %30

129:                                              ; preds = %126
  %130 = getelementptr inbounds i16, i16* %3, i64 5
  %131 = icmp ult i16* %130, %1
  br i1 %131, label %28, label %25

132:                                              ; preds = %11
  %133 = load i16, i16* %12, align 2
  %134 = icmp eq i16 %133, 107
  br i1 %134, label %135, label %19

135:                                              ; preds = %132
  %136 = getelementptr inbounds i16, i16* %3, i64 2
  %137 = icmp ult i16* %136, %1
  br i1 %137, label %138, label %14

138:                                              ; preds = %135
  %139 = load i16, i16* %136, align 2
  %140 = icmp eq i16 %139, 101
  br i1 %140, label %141, label %19

141:                                              ; preds = %138
  %142 = getelementptr inbounds i16, i16* %3, i64 3
  %143 = icmp ult i16* %142, %1
  br i1 %143, label %144, label %14

144:                                              ; preds = %141
  %145 = load i16, i16* %142, align 2
  %146 = icmp eq i16 %145, 119
  br i1 %146, label %147, label %19

147:                                              ; preds = %144
  %148 = getelementptr inbounds i16, i16* %3, i64 4
  %149 = icmp ult i16* %148, %1
  br i1 %149, label %150, label %14

150:                                              ; preds = %147
  %151 = load i16, i16* %148, align 2
  %152 = icmp eq i16 %151, 88
  br i1 %152, label %153, label %19

153:                                              ; preds = %150
  %154 = getelementptr inbounds i16, i16* %3, i64 5
  %155 = icmp ult i16* %154, %1
  br i1 %155, label %17, label %14

156:                                              ; preds = %74
  %157 = load i16, i16* %75, align 2
  %158 = icmp eq i16 %157, 97
  br i1 %158, label %159, label %82

159:                                              ; preds = %156
  %160 = getelementptr inbounds i16, i16* %3, i64 2
  %161 = icmp ult i16* %160, %1
  br i1 %161, label %162, label %77

162:                                              ; preds = %159
  %163 = load i16, i16* %160, align 2
  %164 = icmp eq i16 %163, 116
  br i1 %164, label %165, label %82

165:                                              ; preds = %162
  %166 = getelementptr inbounds i16, i16* %3, i64 3
  %167 = icmp ult i16* %166, %1
  br i1 %167, label %168, label %77

168:                                              ; preds = %165
  %169 = load i16, i16* %166, align 2
  %170 = icmp eq i16 %169, 114
  br i1 %170, label %171, label %82

171:                                              ; preds = %168
  %172 = getelementptr inbounds i16, i16* %3, i64 4
  %173 = icmp ult i16* %172, %1
  br i1 %173, label %174, label %77

174:                                              ; preds = %171
  %175 = load i16, i16* %172, align 2
  %176 = icmp eq i16 %175, 105
  br i1 %176, label %177, label %82

177:                                              ; preds = %174
  %178 = getelementptr inbounds i16, i16* %3, i64 5
  %179 = icmp ult i16* %178, %1
  br i1 %179, label %180, label %77

180:                                              ; preds = %177
  %181 = load i16, i16* %178, align 2
  %182 = icmp eq i16 %181, 120
  br i1 %182, label %183, label %82

183:                                              ; preds = %180
  %184 = getelementptr inbounds i16, i16* %3, i64 6
  %185 = icmp ult i16* %184, %1
  br i1 %185, label %80, label %77

186:                                              ; preds = %63
  %187 = load i16, i16* %64, align 2
  %188 = icmp eq i16 %187, 111
  br i1 %188, label %189, label %71

189:                                              ; preds = %186
  %190 = getelementptr inbounds i16, i16* %3, i64 2
  %191 = icmp ult i16* %190, %1
  br i1 %191, label %192, label %66

192:                                              ; preds = %189
  %193 = load i16, i16* %190, align 2
  %194 = icmp eq i16 %193, 116
  br i1 %194, label %195, label %71

195:                                              ; preds = %192
  %196 = getelementptr inbounds i16, i16* %3, i64 3
  %197 = icmp ult i16* %196, %1
  br i1 %197, label %198, label %66

198:                                              ; preds = %195
  %199 = load i16, i16* %196, align 2
  %200 = icmp eq i16 %199, 97
  br i1 %200, label %201, label %71

201:                                              ; preds = %198
  %202 = getelementptr inbounds i16, i16* %3, i64 4
  %203 = icmp ult i16* %202, %1
  br i1 %203, label %204, label %66

204:                                              ; preds = %201
  %205 = load i16, i16* %202, align 2
  %206 = icmp eq i16 %205, 116
  br i1 %206, label %207, label %71

207:                                              ; preds = %204
  %208 = getelementptr inbounds i16, i16* %3, i64 5
  %209 = icmp ult i16* %208, %1
  br i1 %209, label %210, label %66

210:                                              ; preds = %207
  %211 = load i16, i16* %208, align 2
  %212 = icmp eq i16 %211, 101
  br i1 %212, label %213, label %71

213:                                              ; preds = %210
  %214 = getelementptr inbounds i16, i16* %3, i64 6
  %215 = icmp ult i16* %214, %1
  br i1 %215, label %69, label %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23SVGListablePropertyBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23SVGListablePropertyBaseEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23SVGListablePropertyBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGPropertyBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGPropertyBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZN5blink19SVGListPropertyBase6AppendEPNS_23SVGListablePropertyBaseE(%"class.blink::SVGListPropertyBase"*, %"class.blink::SVGListablePropertyBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

declare void @_ZN5blink12SVGTransformC1ENS_16SVGTransformTypeENS0_16ConstructionModeE(%"class.blink::SVGTransform"*, i32, i32) unnamed_addr #3

declare %"class.blink::SVGTransform"* @_ZNK5blink12SVGTransform5CloneEv(%"class.blink::SVGTransform"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
