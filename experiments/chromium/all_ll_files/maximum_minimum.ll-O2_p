; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/maximum_minimum.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/maximum_minimum.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, {}*, {}*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"struct.tflite::ops::builtin::maximum_minimum::OpContext" = type { %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor* }
%"struct.tflite::ArithmeticParams" = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"struct.tflite::NdArrayDesc" = type { [5 x i32], [5 x i32] }
%class.anon = type { i8**, %"struct.tflite::NdArrayDesc"*, i8 (i8, i8)**, i8**, %"struct.tflite::NdArrayDesc"*, i8**, %"struct.tflite::NdArrayDesc"* }
%class.anon.2 = type { float**, %"struct.tflite::NdArrayDesc"*, float (float, float)**, float**, %"struct.tflite::NdArrayDesc"*, float**, %"struct.tflite::NdArrayDesc"* }
%class.anon.3 = type { i8**, %"struct.tflite::NdArrayDesc"*, i8 (i8, i8)**, i8**, %"struct.tflite::NdArrayDesc"*, i8**, %"struct.tflite::NdArrayDesc"* }
%class.anon.4 = type { i32**, %"struct.tflite::NdArrayDesc"*, i32 (i32, i32)**, i32**, %"struct.tflite::NdArrayDesc"*, i32**, %"struct.tflite::NdArrayDesc"* }
%class.anon.5 = type { i64**, %"struct.tflite::NdArrayDesc"*, i64 (i64, i64)**, i64**, %"struct.tflite::NdArrayDesc"*, i64**, %"struct.tflite::NdArrayDesc"* }
%class.anon.6 = type { i16**, %"struct.tflite::NdArrayDesc"*, i16 (i16, i16)**, i16**, %"struct.tflite::NdArrayDesc"*, i16**, %"struct.tflite::NdArrayDesc"* }

$_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE = comdat any

$_ZN6tflite13optimized_ops24BroadcastMaximumDispatchIPFaaaEEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS9_SB_S9_PaT_ = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIaEET_S5_S5_ = comdat any

$_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIaPFaaaELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_ = comdat any

$_ZN6tflite13optimized_ops24BroadcastMinimumDispatchIPFaaaEEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS9_SB_S9_PaT_ = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIaEET_S5_S5_ = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum4EvalILNS2_10KernelTypeE0ENS2_9MaximumOpEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum4EvalILNS2_10KernelTypeE1ENS2_9MaximumOpEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum4EvalILNS2_10KernelTypeE0ENS2_9MinimumOpEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum4EvalILNS2_10KernelTypeE1ENS2_9MinimumOpEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_ = comdat any

$_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIaPFaaaELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_ = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EfNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EhNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EaNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EiNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0ElNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EsNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIfPFfffELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_ = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIfEET_S5_S5_ = comdat any

$_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIfPFfffELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_ = comdat any

$_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIhPFhhhELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_ = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIhEET_S5_S5_ = comdat any

$_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIhPFhhhELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_ = comdat any

$_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIiPFiiiELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_ = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIiEET_S5_S5_ = comdat any

$_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIiPFiiiELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_ = comdat any

$_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIlPFlllELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_ = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIlEET_S5_S5_ = comdat any

$_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIlPFlllELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_ = comdat any

$_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIsPFsssELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_ = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIsEET_S5_S5_ = comdat any

$_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIsPFsssELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_ = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EfNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EhNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EiNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1ElNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EsNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EfNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EhNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EaNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EiNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0ElNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EsNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIfEET_S5_S5_ = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIhEET_S5_S5_ = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIiEET_S5_S5_ = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIlEET_S5_S5_ = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIsEET_S5_S5_ = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EfNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EhNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EiNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1ElNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

$_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EsNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE = comdat any

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.3 = private unnamed_addr constant [72 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/maximum_minimum.cc\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"op_context.input1->type\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"op_context.input2->type\00", align 1
@__const._ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EaNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE.op_params = private unnamed_addr constant { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, [5 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766] }, align 4
@_ZZN6tflite3ops7builtin20Register_MAXIMUM_REFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15maximum_minimum7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15maximum_minimum4EvalILNS2_10KernelTypeE0ENS2_9MaximumOpEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin28Register_MAXIMUM_GENERIC_OPTEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15maximum_minimum7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15maximum_minimum4EvalILNS2_10KernelTypeE1ENS2_9MaximumOpEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin20Register_MINIMUM_REFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15maximum_minimum7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15maximum_minimum4EvalILNS2_10KernelTypeE0ENS2_9MinimumOpEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin28Register_MINIMUM_GENERIC_OPTEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15maximum_minimum7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15maximum_minimum4EvalILNS2_10KernelTypeE1ENS2_9MinimumOpEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.16 = private unnamed_addr constant [47 x i8] c"Type %d is currently not supported by Maximum.\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin15maximum_minimum7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = alloca %struct.TfLiteIntArray*, align 8
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %5 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %11 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %10, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %11(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 56, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %7, i32 2) #9
  br label %83

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %20 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %19, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %20(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 57, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %16, i32 1) #9
  br label %83

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %27 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %26, align 8
  %28 = sext i32 %23 to i64
  %29 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %27, i64 %28
  br label %30

30:                                               ; preds = %25, %21
  %31 = phi %struct.TfLiteTensor* [ %29, %25 ], [ null, %21 ]
  %32 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %37 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %36, align 8
  %38 = sext i32 %33 to i64
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 %38
  br label %40

40:                                               ; preds = %35, %30
  %41 = phi %struct.TfLiteTensor* [ %39, %35 ], [ null, %30 ]
  %42 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %47 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %46, align 8
  %48 = sext i32 %43 to i64
  %49 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 %48
  br label %50

50:                                               ; preds = %40, %45
  %51 = phi %struct.TfLiteTensor* [ %49, %45 ], [ null, %40 ]
  %52 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %53, %55
  br i1 %56, label %63, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %59 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %58, align 8
  %60 = tail call i8* @TfLiteTypeGetName(i32 %53) #9
  %61 = load i32, i32* %54, align 8
  %62 = tail call i8* @TfLiteTypeGetName(i32 %61) #9
  tail call void (%struct.TfLiteContext*, i8*, ...) %59(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 61, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0), i8* %60, i8* %62) #9
  br label %83

63:                                               ; preds = %50
  %64 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 0
  store i32 %53, i32* %64, align 8
  %65 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %31, %struct.TfLiteTensor* %41) #9
  %66 = bitcast %struct.TfLiteIntArray** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #9
  store %struct.TfLiteIntArray* null, %struct.TfLiteIntArray** %3, align 8
  br i1 %65, label %72, label %67

67:                                               ; preds = %63
  %68 = call i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %31, %struct.TfLiteTensor* %41, %struct.TfLiteIntArray** nonnull %3) #9
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %81

70:                                               ; preds = %67
  %71 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  br label %76

72:                                               ; preds = %63
  %73 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 2
  %74 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %73, align 8
  %75 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %74) #9
  store %struct.TfLiteIntArray* %75, %struct.TfLiteIntArray** %3, align 8
  br label %76

76:                                               ; preds = %70, %72
  %77 = phi %struct.TfLiteIntArray* [ %71, %70 ], [ %75, %72 ]
  %78 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %79 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %78, align 8
  %80 = call i32 %79(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %51, %struct.TfLiteIntArray* %77) #9
  br label %81

81:                                               ; preds = %67, %76
  %82 = phi i32 [ %80, %76 ], [ %68, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #9
  br label %83

83:                                               ; preds = %57, %81, %18, %9
  %84 = phi i32 [ 1, %9 ], [ 1, %18 ], [ 1, %57 ], [ %82, %81 ]
  ret i32 %84
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #2

declare zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #2

declare i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteIntArray**) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EaNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* nocapture readnone, %struct.TfLiteNode* nocapture readnone, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"struct.tflite::ArithmeticParams", align 4
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %13) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %13, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EaNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE.op_params, i64 0, i32 0), i64 80, i1 false)
  %14 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %17 = icmp eq %struct.TfLiteTensor* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %19, align 8, !alias.scope !2
  br label %45

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 2
  %22 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %21, align 8, !noalias !2
  %23 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 4, !noalias !2
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %22, i64 0, i32 1, i64 0
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %24, i32* %26, align 8, !alias.scope !2
  %27 = icmp sgt i32 %24, 5
  br i1 %27, label %28, label %35

28:                                               ; preds = %20
  %29 = sext i32 %24 to i64
  %30 = shl nsw i64 %29, 2
  %31 = tail call i8* @_Znam(i64 %30) #10, !noalias !2
  %32 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %33 = bitcast i32** %32 to i8**
  store i8* %31, i8** %33, align 8, !alias.scope !2
  %34 = bitcast i8* %31 to i32*
  br label %40

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %37 = bitcast %union.anon* %36 to i32*
  %38 = sext i32 %24 to i64
  %39 = shl nsw i64 %38, 2
  br label %40

40:                                               ; preds = %35, %28
  %41 = phi i64 [ %30, %28 ], [ %39, %35 ]
  %42 = phi i32* [ %34, %28 ], [ %37, %35 ]
  %43 = bitcast i32* %42 to i8*
  %44 = bitcast i32* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %44, i64 %41, i1 false) #9
  br label %45

45:                                               ; preds = %18, %40
  %46 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %48 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %47, align 8
  %49 = icmp eq %struct.TfLiteTensor* %48, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %51, align 8, !alias.scope !5
  br label %77

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 2
  %54 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %53, align 8, !noalias !5
  %55 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4, !noalias !5
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %54, i64 0, i32 1, i64 0
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %56, i32* %58, align 8, !alias.scope !5
  %59 = icmp sgt i32 %56, 5
  br i1 %59, label %60, label %67

60:                                               ; preds = %52
  %61 = sext i32 %56 to i64
  %62 = shl nsw i64 %61, 2
  %63 = tail call i8* @_Znam(i64 %62) #10, !noalias !5
  %64 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %65 = bitcast i32** %64 to i8**
  store i8* %63, i8** %65, align 8, !alias.scope !5
  %66 = bitcast i8* %63 to i32*
  br label %72

67:                                               ; preds = %52
  %68 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %69 = bitcast %union.anon* %68 to i32*
  %70 = sext i32 %56 to i64
  %71 = shl nsw i64 %70, 2
  br label %72

72:                                               ; preds = %67, %60
  %73 = phi i64 [ %62, %60 ], [ %71, %67 ]
  %74 = phi i32* [ %66, %60 ], [ %69, %67 ]
  %75 = bitcast i32* %74 to i8*
  %76 = bitcast i32* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %76, i64 %73, i1 false) #9
  br label %77

77:                                               ; preds = %50, %72
  %78 = call zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %"struct.tflite::ArithmeticParams"* nonnull %4)
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = icmp sgt i32 %80, 5
  br i1 %81, label %82, label %88

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = icmp eq i32* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %82
  %87 = bitcast i32* %84 to i8*
  call void @_ZdaPv(i8* %87) #10
  br label %88

88:                                               ; preds = %77, %82, %86
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #9
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = icmp sgt i32 %90, 5
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %94 = load i32*, i32** %93, align 8
  %95 = icmp eq i32* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = bitcast i32* %94 to i8*
  call void @_ZdaPv(i8* %97) #10
  br label %98

98:                                               ; preds = %88, %92, %96
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #9
  br i1 %78, label %99, label %235

99:                                               ; preds = %98
  %100 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #9
  %101 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %102 = icmp eq %struct.TfLiteTensor* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %104, align 8, !alias.scope !8
  br label %133

105:                                              ; preds = %99
  %106 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %101, i64 0, i32 2
  %107 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %106, align 8, !noalias !8
  %108 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %107, i64 0, i32 0
  %109 = load i32, i32* %108, align 4, !noalias !8
  %110 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %107, i64 0, i32 1, i64 0
  %111 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %109, i32* %111, align 8, !alias.scope !8
  %112 = icmp sgt i32 %109, 5
  br i1 %112, label %113, label %120

113:                                              ; preds = %105
  %114 = sext i32 %109 to i64
  %115 = shl nsw i64 %114, 2
  %116 = call i8* @_Znam(i64 %115) #10, !noalias !8
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %118 = bitcast i32** %117 to i8**
  store i8* %116, i8** %118, align 8, !alias.scope !8
  %119 = bitcast i8* %116 to i32*
  br label %125

120:                                              ; preds = %105
  %121 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %122 = bitcast %union.anon* %121 to i32*
  %123 = sext i32 %109 to i64
  %124 = shl nsw i64 %123, 2
  br label %125

125:                                              ; preds = %120, %113
  %126 = phi i64 [ %115, %113 ], [ %124, %120 ]
  %127 = phi i32* [ %119, %113 ], [ %122, %120 ]
  %128 = bitcast i32* %127 to i8*
  %129 = bitcast i32* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %128, i8* align 4 %129, i64 %126, i1 false) #9
  %130 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %101, i64 0, i32 1
  %131 = bitcast %union.TfLitePtrUnion* %130 to i8**
  %132 = load i8*, i8** %131, align 8
  br label %133

133:                                              ; preds = %103, %125
  %134 = phi i8* [ %132, %125 ], [ null, %103 ]
  %135 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %135) #9
  %136 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %47, align 8
  %137 = icmp eq %struct.TfLiteTensor* %136, null
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %139, align 8, !alias.scope !11
  br label %168

140:                                              ; preds = %133
  %141 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %136, i64 0, i32 2
  %142 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %141, align 8, !noalias !11
  %143 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %142, i64 0, i32 0
  %144 = load i32, i32* %143, align 4, !noalias !11
  %145 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %142, i64 0, i32 1, i64 0
  %146 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %144, i32* %146, align 8, !alias.scope !11
  %147 = icmp sgt i32 %144, 5
  br i1 %147, label %148, label %155

148:                                              ; preds = %140
  %149 = sext i32 %144 to i64
  %150 = shl nsw i64 %149, 2
  %151 = call i8* @_Znam(i64 %150) #10, !noalias !11
  %152 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %153 = bitcast i32** %152 to i8**
  store i8* %151, i8** %153, align 8, !alias.scope !11
  %154 = bitcast i8* %151 to i32*
  br label %160

155:                                              ; preds = %140
  %156 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %157 = bitcast %union.anon* %156 to i32*
  %158 = sext i32 %144 to i64
  %159 = shl nsw i64 %158, 2
  br label %160

160:                                              ; preds = %155, %148
  %161 = phi i64 [ %150, %148 ], [ %159, %155 ]
  %162 = phi i32* [ %154, %148 ], [ %157, %155 ]
  %163 = bitcast i32* %162 to i8*
  %164 = bitcast i32* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %163, i8* align 4 %164, i64 %161, i1 false) #9
  %165 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %136, i64 0, i32 1
  %166 = bitcast %union.TfLitePtrUnion* %165 to i8**
  %167 = load i8*, i8** %166, align 8
  br label %168

168:                                              ; preds = %138, %160
  %169 = phi i8* [ %167, %160 ], [ null, %138 ]
  %170 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %170) #9
  %171 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %172 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %171, align 8
  %173 = icmp eq %struct.TfLiteTensor* %172, null
  br i1 %173, label %174, label %176

174:                                              ; preds = %168
  %175 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %175, align 8, !alias.scope !14
  br label %204

176:                                              ; preds = %168
  %177 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %172, i64 0, i32 2
  %178 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %177, align 8, !noalias !14
  %179 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %178, i64 0, i32 0
  %180 = load i32, i32* %179, align 4, !noalias !14
  %181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %178, i64 0, i32 1, i64 0
  %182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %180, i32* %182, align 8, !alias.scope !14
  %183 = icmp sgt i32 %180, 5
  br i1 %183, label %184, label %191

184:                                              ; preds = %176
  %185 = sext i32 %180 to i64
  %186 = shl nsw i64 %185, 2
  %187 = call i8* @_Znam(i64 %186) #10, !noalias !14
  %188 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %189 = bitcast i32** %188 to i8**
  store i8* %187, i8** %189, align 8, !alias.scope !14
  %190 = bitcast i8* %187 to i32*
  br label %196

191:                                              ; preds = %176
  %192 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %193 = bitcast %union.anon* %192 to i32*
  %194 = sext i32 %180 to i64
  %195 = shl nsw i64 %194, 2
  br label %196

196:                                              ; preds = %191, %184
  %197 = phi i64 [ %186, %184 ], [ %195, %191 ]
  %198 = phi i32* [ %190, %184 ], [ %193, %191 ]
  %199 = bitcast i32* %198 to i8*
  %200 = bitcast i32* %181 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %199, i8* align 4 %200, i64 %197, i1 false) #9
  %201 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %172, i64 0, i32 1
  %202 = bitcast %union.TfLitePtrUnion* %201 to i8**
  %203 = load i8*, i8** %202, align 8
  br label %204

204:                                              ; preds = %174, %196
  %205 = phi i8* [ %203, %196 ], [ null, %174 ]
  call void @_ZN6tflite13optimized_ops24BroadcastMaximumDispatchIPFaaaEEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS9_SB_S9_PaT_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, i8* %134, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %169, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %205, i8 (i8, i8)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIaEET_S5_S5_)
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %207 = load i32, i32* %206, align 8
  %208 = icmp sgt i32 %207, 5
  br i1 %208, label %209, label %215

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %211 = load i32*, i32** %210, align 8
  %212 = icmp eq i32* %211, null
  br i1 %212, label %215, label %213

213:                                              ; preds = %209
  %214 = bitcast i32* %211 to i8*
  call void @_ZdaPv(i8* %214) #10
  br label %215

215:                                              ; preds = %204, %209, %213
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %170) #9
  %216 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %217 = load i32, i32* %216, align 8
  %218 = icmp sgt i32 %217, 5
  br i1 %218, label %219, label %225

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %221 = load i32*, i32** %220, align 8
  %222 = icmp eq i32* %221, null
  br i1 %222, label %225, label %223

223:                                              ; preds = %219
  %224 = bitcast i32* %221 to i8*
  call void @_ZdaPv(i8* %224) #10
  br label %225

225:                                              ; preds = %215, %219, %223
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %135) #9
  %226 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %227 = load i32, i32* %226, align 8
  %228 = icmp sgt i32 %227, 5
  br i1 %228, label %229, label %371

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %231 = load i32*, i32** %230, align 8
  %232 = icmp eq i32* %231, null
  br i1 %232, label %371, label %233

233:                                              ; preds = %229
  %234 = bitcast i32* %231 to i8*
  call void @_ZdaPv(i8* %234) #10
  br label %371

235:                                              ; preds = %98
  %236 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %236) #9
  %237 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %238 = icmp eq %struct.TfLiteTensor* %237, null
  br i1 %238, label %239, label %241

239:                                              ; preds = %235
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %240, align 8, !alias.scope !17
  br label %269

241:                                              ; preds = %235
  %242 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %237, i64 0, i32 2
  %243 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %242, align 8, !noalias !17
  %244 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %243, i64 0, i32 0
  %245 = load i32, i32* %244, align 4, !noalias !17
  %246 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %243, i64 0, i32 1, i64 0
  %247 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %245, i32* %247, align 8, !alias.scope !17
  %248 = icmp sgt i32 %245, 5
  br i1 %248, label %249, label %256

249:                                              ; preds = %241
  %250 = sext i32 %245 to i64
  %251 = shl nsw i64 %250, 2
  %252 = call i8* @_Znam(i64 %251) #10, !noalias !17
  %253 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %254 = bitcast i32** %253 to i8**
  store i8* %252, i8** %254, align 8, !alias.scope !17
  %255 = bitcast i8* %252 to i32*
  br label %261

256:                                              ; preds = %241
  %257 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %258 = bitcast %union.anon* %257 to i32*
  %259 = sext i32 %245 to i64
  %260 = shl nsw i64 %259, 2
  br label %261

261:                                              ; preds = %256, %249
  %262 = phi i64 [ %251, %249 ], [ %260, %256 ]
  %263 = phi i32* [ %255, %249 ], [ %258, %256 ]
  %264 = bitcast i32* %263 to i8*
  %265 = bitcast i32* %246 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %264, i8* align 4 %265, i64 %262, i1 false) #9
  %266 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %237, i64 0, i32 1
  %267 = bitcast %union.TfLitePtrUnion* %266 to i8**
  %268 = load i8*, i8** %267, align 8
  br label %269

269:                                              ; preds = %239, %261
  %270 = phi i8* [ %268, %261 ], [ null, %239 ]
  %271 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %271) #9
  %272 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %47, align 8
  %273 = icmp eq %struct.TfLiteTensor* %272, null
  br i1 %273, label %274, label %276

274:                                              ; preds = %269
  %275 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %275, align 8, !alias.scope !20
  br label %304

276:                                              ; preds = %269
  %277 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %272, i64 0, i32 2
  %278 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %277, align 8, !noalias !20
  %279 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %278, i64 0, i32 0
  %280 = load i32, i32* %279, align 4, !noalias !20
  %281 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %278, i64 0, i32 1, i64 0
  %282 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %280, i32* %282, align 8, !alias.scope !20
  %283 = icmp sgt i32 %280, 5
  br i1 %283, label %284, label %291

284:                                              ; preds = %276
  %285 = sext i32 %280 to i64
  %286 = shl nsw i64 %285, 2
  %287 = call i8* @_Znam(i64 %286) #10, !noalias !20
  %288 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %289 = bitcast i32** %288 to i8**
  store i8* %287, i8** %289, align 8, !alias.scope !20
  %290 = bitcast i8* %287 to i32*
  br label %296

291:                                              ; preds = %276
  %292 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %293 = bitcast %union.anon* %292 to i32*
  %294 = sext i32 %280 to i64
  %295 = shl nsw i64 %294, 2
  br label %296

296:                                              ; preds = %291, %284
  %297 = phi i64 [ %286, %284 ], [ %295, %291 ]
  %298 = phi i32* [ %290, %284 ], [ %293, %291 ]
  %299 = bitcast i32* %298 to i8*
  %300 = bitcast i32* %281 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %299, i8* align 4 %300, i64 %297, i1 false) #9
  %301 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %272, i64 0, i32 1
  %302 = bitcast %union.TfLitePtrUnion* %301 to i8**
  %303 = load i8*, i8** %302, align 8
  br label %304

304:                                              ; preds = %274, %296
  %305 = phi i8* [ %303, %296 ], [ null, %274 ]
  %306 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %306) #9
  %307 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %308 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %307, align 8
  %309 = icmp eq %struct.TfLiteTensor* %308, null
  br i1 %309, label %310, label %312

310:                                              ; preds = %304
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %311, align 8, !alias.scope !23
  br label %340

312:                                              ; preds = %304
  %313 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %308, i64 0, i32 2
  %314 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %313, align 8, !noalias !23
  %315 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %314, i64 0, i32 0
  %316 = load i32, i32* %315, align 4, !noalias !23
  %317 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %314, i64 0, i32 1, i64 0
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %316, i32* %318, align 8, !alias.scope !23
  %319 = icmp sgt i32 %316, 5
  br i1 %319, label %320, label %327

320:                                              ; preds = %312
  %321 = sext i32 %316 to i64
  %322 = shl nsw i64 %321, 2
  %323 = call i8* @_Znam(i64 %322) #10, !noalias !23
  %324 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %325 = bitcast i32** %324 to i8**
  store i8* %323, i8** %325, align 8, !alias.scope !23
  %326 = bitcast i8* %323 to i32*
  br label %332

327:                                              ; preds = %312
  %328 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %329 = bitcast %union.anon* %328 to i32*
  %330 = sext i32 %316 to i64
  %331 = shl nsw i64 %330, 2
  br label %332

332:                                              ; preds = %327, %320
  %333 = phi i64 [ %322, %320 ], [ %331, %327 ]
  %334 = phi i32* [ %326, %320 ], [ %329, %327 ]
  %335 = bitcast i32* %334 to i8*
  %336 = bitcast i32* %317 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %335, i8* align 4 %336, i64 %333, i1 false) #9
  %337 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %308, i64 0, i32 1
  %338 = bitcast %union.TfLitePtrUnion* %337 to i8**
  %339 = load i8*, i8** %338, align 8
  br label %340

340:                                              ; preds = %310, %332
  %341 = phi i8* [ %339, %332 ], [ null, %310 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIaPFaaaELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %270, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i8* %305, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %341, i8 (i8, i8)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIaEET_S5_S5_)
  %342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %343 = load i32, i32* %342, align 8
  %344 = icmp sgt i32 %343, 5
  br i1 %344, label %345, label %351

345:                                              ; preds = %340
  %346 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %347 = load i32*, i32** %346, align 8
  %348 = icmp eq i32* %347, null
  br i1 %348, label %351, label %349

349:                                              ; preds = %345
  %350 = bitcast i32* %347 to i8*
  call void @_ZdaPv(i8* %350) #10
  br label %351

351:                                              ; preds = %340, %345, %349
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %306) #9
  %352 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %353 = load i32, i32* %352, align 8
  %354 = icmp sgt i32 %353, 5
  br i1 %354, label %355, label %361

355:                                              ; preds = %351
  %356 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %357 = load i32*, i32** %356, align 8
  %358 = icmp eq i32* %357, null
  br i1 %358, label %361, label %359

359:                                              ; preds = %355
  %360 = bitcast i32* %357 to i8*
  call void @_ZdaPv(i8* %360) #10
  br label %361

361:                                              ; preds = %351, %355, %359
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %271) #9
  %362 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %363 = load i32, i32* %362, align 8
  %364 = icmp sgt i32 %363, 5
  br i1 %364, label %365, label %371

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %367 = load i32*, i32** %366, align 8
  %368 = icmp eq i32* %367, null
  br i1 %368, label %371, label %369

369:                                              ; preds = %365
  %370 = bitcast i32* %367 to i8*
  call void @_ZdaPv(i8* %370) #10
  br label %371

371:                                              ; preds = %369, %365, %361, %233, %229, %225
  %372 = phi i8* [ %100, %225 ], [ %100, %229 ], [ %100, %233 ], [ %236, %361 ], [ %236, %365 ], [ %236, %369 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %372) #9
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %13) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::ArithmeticParams"*) local_unnamed_addr #3 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %8, %10
  %12 = select i1 %11, i32 %10, i32 %8
  %13 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 0
  store i8 4, i8* %13, align 4
  %14 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %12, i32* %15, align 8
  %16 = icmp sgt i32 %12, 5
  br i1 %16, label %17, label %23

17:                                               ; preds = %3
  %18 = sext i32 %12 to i64
  %19 = shl nuw nsw i64 %18, 2
  %20 = tail call i8* @_Znam(i64 %19) #10
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %22 = bitcast i32** %21 to i8**
  store i8* %20, i8** %22, align 8
  br label %25

23:                                               ; preds = %3
  %24 = icmp sgt i32 %12, 0
  br i1 %24, label %25, label %73

25:                                               ; preds = %23, %17
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %27 = bitcast %union.anon* %26 to [5 x i32]*
  %28 = getelementptr inbounds %union.anon, %union.anon* %26, i64 0, i32 0
  %29 = zext i32 %12 to i64
  %30 = add nsw i64 %29, -1
  %31 = and i64 %29, 3
  %32 = icmp ult i64 %30, 3
  br i1 %32, label %60, label %33

33:                                               ; preds = %25
  %34 = sub nsw i64 %29, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %57, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %58, %35 ]
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %36
  %39 = load i32*, i32** %28, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 %36
  %41 = select i1 %16, i32* %40, i32* %38
  store i32 1, i32* %41, align 4
  %42 = or i64 %36, 1
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %42
  %44 = load i32*, i32** %28, align 8
  %45 = getelementptr inbounds i32, i32* %44, i64 %42
  %46 = select i1 %16, i32* %45, i32* %43
  store i32 1, i32* %46, align 4
  %47 = or i64 %36, 2
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %47
  %49 = load i32*, i32** %28, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 %47
  %51 = select i1 %16, i32* %50, i32* %48
  store i32 1, i32* %51, align 4
  %52 = or i64 %36, 3
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %52
  %54 = load i32*, i32** %28, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 %52
  %56 = select i1 %16, i32* %55, i32* %53
  store i32 1, i32* %56, align 4
  %57 = add nuw nsw i64 %36, 4
  %58 = add i64 %37, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %35

60:                                               ; preds = %35, %25
  %61 = phi i64 [ 0, %25 ], [ %57, %35 ]
  %62 = icmp eq i64 %31, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %60, %63
  %64 = phi i64 [ %70, %63 ], [ %61, %60 ]
  %65 = phi i64 [ %71, %63 ], [ %31, %60 ]
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %64
  %67 = load i32*, i32** %28, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %64
  %69 = select i1 %16, i32* %68, i32* %66
  store i32 1, i32* %69, align 4
  %70 = add nuw nsw i64 %64, 1
  %71 = add i64 %65, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %63, !llvm.loop !26

73:                                               ; preds = %60, %63, %23
  %74 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %74) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 32, i1 false)
  %75 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %75, align 8, !alias.scope !28
  %76 = load i32, i32* %7, align 8, !noalias !28
  %77 = icmp slt i32 %12, %76
  br i1 %77, label %78, label %79

78:                                               ; preds = %73
  tail call void @abort() #11, !noalias !28
  unreachable

79:                                               ; preds = %73
  store i32 %12, i32* %75, align 8, !alias.scope !28
  br i1 %16, label %80, label %86

80:                                               ; preds = %79
  %81 = sext i32 %12 to i64
  %82 = shl nuw nsw i64 %81, 2
  %83 = tail call i8* @_Znam(i64 %82) #10, !noalias !28
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %85 = bitcast i32** %84 to i8**
  store i8* %83, i8** %85, align 8, !alias.scope !28
  br label %86

86:                                               ; preds = %80, %79
  %87 = sub i32 %12, %76
  %88 = icmp sgt i32 %87, 0
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %88, label %90, label %139

90:                                               ; preds = %86
  %91 = bitcast %union.anon* %89 to [5 x i32]*
  %92 = getelementptr inbounds %union.anon, %union.anon* %89, i64 0, i32 0
  %93 = zext i32 %87 to i64
  %94 = add nsw i64 %93, -1
  %95 = and i64 %93, 3
  %96 = icmp ult i64 %94, 3
  br i1 %96, label %99, label %97

97:                                               ; preds = %90
  %98 = sub nsw i64 %93, %95
  br label %114

99:                                               ; preds = %114, %90
  %100 = phi i64 [ 0, %90 ], [ %136, %114 ]
  %101 = icmp eq i64 %95, 0
  br i1 %101, label %112, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %109, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %110, %102 ], [ %95, %99 ]
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %103
  %106 = load i32*, i32** %92, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 %103
  %108 = select i1 %16, i32* %107, i32* %105
  store i32 1, i32* %108, align 4
  %109 = add nuw nsw i64 %103, 1
  %110 = add i64 %104, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %102, !llvm.loop !31

112:                                              ; preds = %102, %99
  %113 = load i32, i32* %7, align 8, !noalias !28
  br label %139

114:                                              ; preds = %114, %97
  %115 = phi i64 [ 0, %97 ], [ %136, %114 ]
  %116 = phi i64 [ %98, %97 ], [ %137, %114 ]
  %117 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %115
  %118 = load i32*, i32** %92, align 8
  %119 = getelementptr inbounds i32, i32* %118, i64 %115
  %120 = select i1 %16, i32* %119, i32* %117
  store i32 1, i32* %120, align 4
  %121 = or i64 %115, 1
  %122 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %121
  %123 = load i32*, i32** %92, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 %121
  %125 = select i1 %16, i32* %124, i32* %122
  store i32 1, i32* %125, align 4
  %126 = or i64 %115, 2
  %127 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %126
  %128 = load i32*, i32** %92, align 8
  %129 = getelementptr inbounds i32, i32* %128, i64 %126
  %130 = select i1 %16, i32* %129, i32* %127
  store i32 1, i32* %130, align 4
  %131 = or i64 %115, 3
  %132 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %131
  %133 = load i32*, i32** %92, align 8
  %134 = getelementptr inbounds i32, i32* %133, i64 %131
  %135 = select i1 %16, i32* %134, i32* %132
  store i32 1, i32* %135, align 4
  %136 = add nuw nsw i64 %115, 4
  %137 = add i64 %116, -4
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %99, label %114

139:                                              ; preds = %86, %112
  %140 = phi i32 [ %113, %112 ], [ %76, %86 ]
  %141 = getelementptr inbounds %union.anon, %union.anon* %89, i64 0, i32 0
  %142 = load i32*, i32** %141, align 8, !alias.scope !28
  %143 = bitcast %union.anon* %89 to i32*
  %144 = select i1 %16, i32* %142, i32* %143
  %145 = sext i32 %87 to i64
  %146 = getelementptr inbounds i32, i32* %144, i64 %145
  %147 = bitcast i32* %146 to i8*
  %148 = icmp sgt i32 %140, 5
  %149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %150 = getelementptr inbounds %union.anon, %union.anon* %149, i64 0, i32 0
  %151 = load i32*, i32** %150, align 8, !noalias !28
  %152 = bitcast %union.anon* %149 to i32*
  %153 = select i1 %148, i32* %151, i32* %152
  %154 = bitcast i32* %153 to i8*
  %155 = sext i32 %140 to i64
  %156 = shl nsw i64 %155, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* align 4 %154, i64 %156, i1 false) #9
  %157 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 -86, i64 32, i1 false)
  %158 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %158, align 8, !alias.scope !32
  %159 = load i32, i32* %9, align 8, !noalias !32
  %160 = icmp slt i32 %12, %159
  br i1 %160, label %161, label %162

161:                                              ; preds = %139
  tail call void @abort() #11, !noalias !32
  unreachable

162:                                              ; preds = %139
  store i32 %12, i32* %158, align 8, !alias.scope !32
  br i1 %16, label %163, label %169

163:                                              ; preds = %162
  %164 = sext i32 %12 to i64
  %165 = shl nuw nsw i64 %164, 2
  %166 = tail call i8* @_Znam(i64 %165) #10, !noalias !32
  %167 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %168 = bitcast i32** %167 to i8**
  store i8* %166, i8** %168, align 8, !alias.scope !32
  br label %169

169:                                              ; preds = %163, %162
  %170 = sub i32 %12, %159
  %171 = icmp sgt i32 %170, 0
  %172 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %171, label %173, label %222

173:                                              ; preds = %169
  %174 = bitcast %union.anon* %172 to [5 x i32]*
  %175 = getelementptr inbounds %union.anon, %union.anon* %172, i64 0, i32 0
  %176 = zext i32 %170 to i64
  %177 = add nsw i64 %176, -1
  %178 = and i64 %176, 3
  %179 = icmp ult i64 %177, 3
  br i1 %179, label %182, label %180

180:                                              ; preds = %173
  %181 = sub nsw i64 %176, %178
  br label %197

182:                                              ; preds = %197, %173
  %183 = phi i64 [ 0, %173 ], [ %219, %197 ]
  %184 = icmp eq i64 %178, 0
  br i1 %184, label %195, label %185

185:                                              ; preds = %182, %185
  %186 = phi i64 [ %192, %185 ], [ %183, %182 ]
  %187 = phi i64 [ %193, %185 ], [ %178, %182 ]
  %188 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %186
  %189 = load i32*, i32** %175, align 8
  %190 = getelementptr inbounds i32, i32* %189, i64 %186
  %191 = select i1 %16, i32* %190, i32* %188
  store i32 1, i32* %191, align 4
  %192 = add nuw nsw i64 %186, 1
  %193 = add i64 %187, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %185, !llvm.loop !35

195:                                              ; preds = %185, %182
  %196 = load i32, i32* %9, align 8, !noalias !32
  br label %222

197:                                              ; preds = %197, %180
  %198 = phi i64 [ 0, %180 ], [ %219, %197 ]
  %199 = phi i64 [ %181, %180 ], [ %220, %197 ]
  %200 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %198
  %201 = load i32*, i32** %175, align 8
  %202 = getelementptr inbounds i32, i32* %201, i64 %198
  %203 = select i1 %16, i32* %202, i32* %200
  store i32 1, i32* %203, align 4
  %204 = or i64 %198, 1
  %205 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %204
  %206 = load i32*, i32** %175, align 8
  %207 = getelementptr inbounds i32, i32* %206, i64 %204
  %208 = select i1 %16, i32* %207, i32* %205
  store i32 1, i32* %208, align 4
  %209 = or i64 %198, 2
  %210 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %209
  %211 = load i32*, i32** %175, align 8
  %212 = getelementptr inbounds i32, i32* %211, i64 %209
  %213 = select i1 %16, i32* %212, i32* %210
  store i32 1, i32* %213, align 4
  %214 = or i64 %198, 3
  %215 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %214
  %216 = load i32*, i32** %175, align 8
  %217 = getelementptr inbounds i32, i32* %216, i64 %214
  %218 = select i1 %16, i32* %217, i32* %215
  store i32 1, i32* %218, align 4
  %219 = add nuw nsw i64 %198, 4
  %220 = add i64 %199, -4
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %182, label %197

222:                                              ; preds = %169, %195
  %223 = phi i32 [ %196, %195 ], [ %159, %169 ]
  %224 = getelementptr inbounds %union.anon, %union.anon* %172, i64 0, i32 0
  %225 = load i32*, i32** %224, align 8, !alias.scope !32
  %226 = bitcast %union.anon* %172 to i32*
  %227 = select i1 %16, i32* %225, i32* %226
  %228 = sext i32 %170 to i64
  %229 = getelementptr inbounds i32, i32* %227, i64 %228
  %230 = bitcast i32* %229 to i8*
  %231 = icmp sgt i32 %223, 5
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %233 = getelementptr inbounds %union.anon, %union.anon* %232, i64 0, i32 0
  %234 = load i32*, i32** %233, align 8, !noalias !32
  %235 = bitcast %union.anon* %232 to i32*
  %236 = select i1 %231, i32* %234, i32* %235
  %237 = bitcast i32* %236 to i8*
  %238 = sext i32 %223 to i64
  %239 = shl nsw i64 %238, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %230, i8* align 4 %237, i64 %239, i1 false) #9
  %240 = load i32, i32* %75, align 8
  %241 = load i32, i32* %158, align 8
  %242 = icmp eq i32 %240, %241
  br i1 %242, label %243, label %256

243:                                              ; preds = %222
  %244 = icmp sgt i32 %240, 5
  %245 = load i32*, i32** %141, align 8
  %246 = select i1 %244, i32* %245, i32* %143
  %247 = bitcast i32* %246 to i8*
  %248 = load i32*, i32** %224, align 8
  %249 = select i1 %244, i32* %248, i32* %226
  %250 = bitcast i32* %249 to i8*
  %251 = sext i32 %240 to i64
  %252 = shl nsw i64 %251, 2
  %253 = call i32 @bcmp(i8* %247, i8* %250, i64 %252) #9
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %243
  store i8 1, i8* %13, align 4
  br label %556

256:                                              ; preds = %222, %243
  %257 = add nsw i32 %12, -1
  %258 = icmp sgt i32 %12, 0
  br i1 %258, label %259, label %298

259:                                              ; preds = %256
  %260 = icmp sgt i32 %240, 5
  %261 = load i32*, i32** %141, align 8
  %262 = bitcast %union.anon* %89 to [5 x i32]*
  %263 = icmp sgt i32 %241, 5
  %264 = load i32*, i32** %224, align 8
  %265 = bitcast %union.anon* %172 to [5 x i32]*
  %266 = sext i32 %12 to i64
  br label %267

267:                                              ; preds = %259, %296
  %268 = phi i64 [ %266, %259 ], [ %269, %296 ]
  %269 = add nsw i64 %268, -1
  %270 = getelementptr inbounds i32, i32* %261, i64 %269
  %271 = getelementptr inbounds [5 x i32], [5 x i32]* %262, i64 0, i64 %269
  %272 = select i1 %260, i32* %270, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds i32, i32* %264, i64 %269
  %275 = getelementptr inbounds [5 x i32], [5 x i32]* %265, i64 0, i64 %269
  %276 = select i1 %263, i32* %274, i32* %275
  %277 = load i32, i32* %276, align 4
  %278 = icmp eq i32 %273, %277
  br i1 %278, label %296, label %279

279:                                              ; preds = %267
  %280 = shl i64 %269, 32
  %281 = ashr exact i64 %280, 32
  %282 = getelementptr inbounds i32, i32* %261, i64 %281
  %283 = getelementptr inbounds [5 x i32], [5 x i32]* %262, i64 0, i64 %281
  %284 = select i1 %260, i32* %282, i32* %283
  %285 = load i32, i32* %284, align 4
  %286 = icmp eq i32 %285, 1
  br i1 %286, label %287, label %288

287:                                              ; preds = %279
  store i8 2, i8* %13, align 4
  br label %298

288:                                              ; preds = %279
  %289 = getelementptr inbounds i32, i32* %264, i64 %281
  %290 = getelementptr inbounds [5 x i32], [5 x i32]* %265, i64 0, i64 %281
  %291 = select i1 %263, i32* %289, i32* %290
  %292 = load i32, i32* %291, align 4
  %293 = icmp eq i32 %292, 1
  br i1 %293, label %294, label %295

294:                                              ; preds = %288
  store i8 3, i8* %13, align 4
  br label %298

295:                                              ; preds = %288
  store i8 4, i8* %13, align 4
  br label %556

296:                                              ; preds = %267
  %297 = icmp sgt i64 %269, 0
  br i1 %297, label %267, label %298

298:                                              ; preds = %296, %256, %294, %287
  %299 = load i8, i8* %13, align 4
  %300 = and i8 %299, -2
  %301 = icmp eq i8 %300, 2
  br i1 %301, label %303, label %302

302:                                              ; preds = %298
  store i8 1, i8* %13, align 4
  br label %556

303:                                              ; preds = %298
  %304 = icmp eq i8 %299, 3
  %305 = select i1 %304, %"class.tflite::RuntimeShape"* %6, %"class.tflite::RuntimeShape"* %5
  %306 = select i1 %304, %"class.tflite::RuntimeShape"* %5, %"class.tflite::RuntimeShape"* %6
  %307 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 0
  %308 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 1
  %309 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 2
  %310 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 3
  %311 = bitcast i32* %307 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %311, align 4
  %312 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 4
  store i32 1, i32* %312, align 4
  br i1 %258, label %313, label %363

313:                                              ; preds = %303
  %314 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %315 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %316 = bitcast %union.anon* %315 to [5 x i32]*
  %317 = getelementptr inbounds %union.anon, %union.anon* %315, i64 0, i32 0
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %320 = bitcast %union.anon* %319 to [5 x i32]*
  %321 = getelementptr inbounds %union.anon, %union.anon* %319, i64 0, i32 0
  %322 = sext i32 %12 to i64
  %323 = load i32, i32* %314, align 8
  %324 = icmp sgt i32 %323, 5
  br label %325

325:                                              ; preds = %313, %355
  %326 = phi i32 [ 1, %313 ], [ %358, %355 ]
  %327 = phi i64 [ %322, %313 ], [ %329, %355 ]
  %328 = phi i32 [ %257, %313 ], [ %359, %355 ]
  %329 = add nsw i64 %327, -1
  br i1 %324, label %330, label %333

330:                                              ; preds = %325
  %331 = load i32*, i32** %317, align 8
  %332 = getelementptr inbounds i32, i32* %331, i64 %329
  br label %335

333:                                              ; preds = %325
  %334 = getelementptr inbounds [5 x i32], [5 x i32]* %316, i64 0, i64 %329
  br label %335

335:                                              ; preds = %330, %333
  %336 = phi i32* [ %332, %330 ], [ %334, %333 ]
  %337 = load i32, i32* %336, align 4
  %338 = load i32, i32* %318, align 8
  %339 = icmp sgt i32 %338, 5
  br i1 %339, label %340, label %343

340:                                              ; preds = %335
  %341 = load i32*, i32** %321, align 8
  %342 = getelementptr inbounds i32, i32* %341, i64 %329
  br label %345

343:                                              ; preds = %335
  %344 = getelementptr inbounds [5 x i32], [5 x i32]* %320, i64 0, i64 %329
  br label %345

345:                                              ; preds = %340, %343
  %346 = phi i32* [ %342, %340 ], [ %344, %343 ]
  %347 = load i32, i32* %346, align 4
  %348 = icmp eq i32 %337, %347
  br i1 %348, label %349, label %361

349:                                              ; preds = %345
  br i1 %339, label %350, label %353

350:                                              ; preds = %349
  %351 = load i32*, i32** %321, align 8
  %352 = getelementptr inbounds i32, i32* %351, i64 %329
  br label %355

353:                                              ; preds = %349
  %354 = getelementptr inbounds [5 x i32], [5 x i32]* %320, i64 0, i64 %329
  br label %355

355:                                              ; preds = %350, %353
  %356 = phi i32* [ %352, %350 ], [ %354, %353 ]
  %357 = load i32, i32* %356, align 4
  %358 = mul nsw i32 %326, %357
  store i32 %358, i32* %312, align 4
  %359 = add nsw i32 %328, -1
  %360 = icmp sgt i64 %329, 0
  br i1 %360, label %325, label %363

361:                                              ; preds = %345
  %362 = trunc i64 %329 to i32
  br label %363

363:                                              ; preds = %355, %361, %303
  %364 = phi i32 [ %257, %303 ], [ %362, %361 ], [ %359, %355 ]
  %365 = icmp sgt i32 %364, -1
  br i1 %365, label %366, label %556

366:                                              ; preds = %363
  %367 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %368 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %369 = bitcast %union.anon* %368 to [5 x i32]*
  %370 = getelementptr inbounds %union.anon, %union.anon* %368, i64 0, i32 0
  %371 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %372 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %373 = bitcast %union.anon* %372 to [5 x i32]*
  %374 = getelementptr inbounds %union.anon, %union.anon* %372, i64 0, i32 0
  %375 = sext i32 %364 to i64
  %376 = load i32, i32* %367, align 8
  %377 = icmp sgt i32 %376, 5
  br label %378

378:                                              ; preds = %366, %399
  %379 = phi i32 [ 1, %366 ], [ %402, %399 ]
  %380 = phi i64 [ %375, %366 ], [ %403, %399 ]
  %381 = phi i32 [ %364, %366 ], [ %404, %399 ]
  br i1 %377, label %382, label %385

382:                                              ; preds = %378
  %383 = load i32*, i32** %370, align 8
  %384 = getelementptr inbounds i32, i32* %383, i64 %380
  br label %387

385:                                              ; preds = %378
  %386 = getelementptr inbounds [5 x i32], [5 x i32]* %369, i64 0, i64 %380
  br label %387

387:                                              ; preds = %382, %385
  %388 = phi i32* [ %384, %382 ], [ %386, %385 ]
  %389 = load i32, i32* %388, align 4
  %390 = icmp eq i32 %389, 1
  br i1 %390, label %391, label %406

391:                                              ; preds = %387
  %392 = load i32, i32* %371, align 8
  %393 = icmp sgt i32 %392, 5
  br i1 %393, label %394, label %397

394:                                              ; preds = %391
  %395 = load i32*, i32** %374, align 8
  %396 = getelementptr inbounds i32, i32* %395, i64 %380
  br label %399

397:                                              ; preds = %391
  %398 = getelementptr inbounds [5 x i32], [5 x i32]* %373, i64 0, i64 %380
  br label %399

399:                                              ; preds = %394, %397
  %400 = phi i32* [ %396, %394 ], [ %398, %397 ]
  %401 = load i32, i32* %400, align 4
  %402 = mul nsw i32 %379, %401
  store i32 %402, i32* %310, align 4
  %403 = add nsw i64 %380, -1
  %404 = add nsw i32 %381, -1
  %405 = icmp sgt i64 %380, 0
  br i1 %405, label %378, label %408

406:                                              ; preds = %387
  %407 = trunc i64 %380 to i32
  br label %408

408:                                              ; preds = %399, %406
  %409 = phi i32 [ %407, %406 ], [ %404, %399 ]
  %410 = icmp sgt i32 %409, -1
  br i1 %410, label %411, label %556

411:                                              ; preds = %408
  %412 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %413 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %414 = bitcast %union.anon* %413 to [5 x i32]*
  %415 = getelementptr inbounds %union.anon, %union.anon* %413, i64 0, i32 0
  %416 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %417 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %418 = bitcast %union.anon* %417 to [5 x i32]*
  %419 = getelementptr inbounds %union.anon, %union.anon* %417, i64 0, i32 0
  %420 = sext i32 %409 to i64
  %421 = load i32, i32* %412, align 8
  %422 = icmp sgt i32 %421, 5
  br label %423

423:                                              ; preds = %411, %452
  %424 = phi i32 [ 1, %411 ], [ %455, %452 ]
  %425 = phi i64 [ %420, %411 ], [ %456, %452 ]
  %426 = phi i32 [ %409, %411 ], [ %457, %452 ]
  br i1 %422, label %427, label %430

427:                                              ; preds = %423
  %428 = load i32*, i32** %415, align 8
  %429 = getelementptr inbounds i32, i32* %428, i64 %425
  br label %432

430:                                              ; preds = %423
  %431 = getelementptr inbounds [5 x i32], [5 x i32]* %414, i64 0, i64 %425
  br label %432

432:                                              ; preds = %427, %430
  %433 = phi i32* [ %429, %427 ], [ %431, %430 ]
  %434 = load i32, i32* %433, align 4
  %435 = load i32, i32* %416, align 8
  %436 = icmp sgt i32 %435, 5
  br i1 %436, label %437, label %440

437:                                              ; preds = %432
  %438 = load i32*, i32** %419, align 8
  %439 = getelementptr inbounds i32, i32* %438, i64 %425
  br label %442

440:                                              ; preds = %432
  %441 = getelementptr inbounds [5 x i32], [5 x i32]* %418, i64 0, i64 %425
  br label %442

442:                                              ; preds = %437, %440
  %443 = phi i32* [ %439, %437 ], [ %441, %440 ]
  %444 = load i32, i32* %443, align 4
  %445 = icmp eq i32 %434, %444
  br i1 %445, label %446, label %459

446:                                              ; preds = %442
  br i1 %422, label %447, label %450

447:                                              ; preds = %446
  %448 = load i32*, i32** %415, align 8
  %449 = getelementptr inbounds i32, i32* %448, i64 %425
  br label %452

450:                                              ; preds = %446
  %451 = getelementptr inbounds [5 x i32], [5 x i32]* %414, i64 0, i64 %425
  br label %452

452:                                              ; preds = %447, %450
  %453 = phi i32* [ %449, %447 ], [ %451, %450 ]
  %454 = load i32, i32* %453, align 4
  %455 = mul nsw i32 %424, %454
  store i32 %455, i32* %309, align 4
  %456 = add nsw i64 %425, -1
  %457 = add nsw i32 %426, -1
  %458 = icmp sgt i64 %425, 0
  br i1 %458, label %423, label %461

459:                                              ; preds = %442
  %460 = trunc i64 %425 to i32
  br label %461

461:                                              ; preds = %452, %459
  %462 = phi i32 [ %460, %459 ], [ %457, %452 ]
  %463 = icmp sgt i32 %462, -1
  br i1 %463, label %464, label %556

464:                                              ; preds = %461
  %465 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %466 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %467 = bitcast %union.anon* %466 to [5 x i32]*
  %468 = getelementptr inbounds %union.anon, %union.anon* %466, i64 0, i32 0
  %469 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %470 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %471 = bitcast %union.anon* %470 to [5 x i32]*
  %472 = getelementptr inbounds %union.anon, %union.anon* %470, i64 0, i32 0
  %473 = sext i32 %462 to i64
  %474 = load i32, i32* %465, align 8
  %475 = icmp sgt i32 %474, 5
  br label %476

476:                                              ; preds = %464, %497
  %477 = phi i32 [ 1, %464 ], [ %500, %497 ]
  %478 = phi i64 [ %473, %464 ], [ %501, %497 ]
  %479 = phi i32 [ %462, %464 ], [ %502, %497 ]
  br i1 %475, label %480, label %483

480:                                              ; preds = %476
  %481 = load i32*, i32** %468, align 8
  %482 = getelementptr inbounds i32, i32* %481, i64 %478
  br label %485

483:                                              ; preds = %476
  %484 = getelementptr inbounds [5 x i32], [5 x i32]* %467, i64 0, i64 %478
  br label %485

485:                                              ; preds = %480, %483
  %486 = phi i32* [ %482, %480 ], [ %484, %483 ]
  %487 = load i32, i32* %486, align 4
  %488 = icmp eq i32 %487, 1
  br i1 %488, label %489, label %504

489:                                              ; preds = %485
  %490 = load i32, i32* %469, align 8
  %491 = icmp sgt i32 %490, 5
  br i1 %491, label %492, label %495

492:                                              ; preds = %489
  %493 = load i32*, i32** %472, align 8
  %494 = getelementptr inbounds i32, i32* %493, i64 %478
  br label %497

495:                                              ; preds = %489
  %496 = getelementptr inbounds [5 x i32], [5 x i32]* %471, i64 0, i64 %478
  br label %497

497:                                              ; preds = %492, %495
  %498 = phi i32* [ %494, %492 ], [ %496, %495 ]
  %499 = load i32, i32* %498, align 4
  %500 = mul nsw i32 %477, %499
  store i32 %500, i32* %308, align 4
  %501 = add nsw i64 %478, -1
  %502 = add nsw i32 %479, -1
  %503 = icmp sgt i64 %478, 0
  br i1 %503, label %476, label %506

504:                                              ; preds = %485
  %505 = trunc i64 %478 to i32
  br label %506

506:                                              ; preds = %497, %504
  %507 = phi i32 [ %505, %504 ], [ %502, %497 ]
  %508 = icmp sgt i32 %507, -1
  br i1 %508, label %509, label %556

509:                                              ; preds = %506
  %510 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %511 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %512 = bitcast %union.anon* %511 to [5 x i32]*
  %513 = getelementptr inbounds %union.anon, %union.anon* %511, i64 0, i32 0
  %514 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %515 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %516 = bitcast %union.anon* %515 to [5 x i32]*
  %517 = getelementptr inbounds %union.anon, %union.anon* %515, i64 0, i32 0
  %518 = sext i32 %507 to i64
  %519 = load i32, i32* %510, align 8
  %520 = icmp sgt i32 %519, 5
  br label %521

521:                                              ; preds = %509, %549
  %522 = phi i32 [ 1, %509 ], [ %552, %549 ]
  %523 = phi i64 [ %518, %509 ], [ %553, %549 ]
  br i1 %520, label %524, label %527

524:                                              ; preds = %521
  %525 = load i32*, i32** %513, align 8
  %526 = getelementptr inbounds i32, i32* %525, i64 %523
  br label %529

527:                                              ; preds = %521
  %528 = getelementptr inbounds [5 x i32], [5 x i32]* %512, i64 0, i64 %523
  br label %529

529:                                              ; preds = %524, %527
  %530 = phi i32* [ %526, %524 ], [ %528, %527 ]
  %531 = load i32, i32* %530, align 4
  %532 = load i32, i32* %514, align 8
  %533 = icmp sgt i32 %532, 5
  br i1 %533, label %534, label %537

534:                                              ; preds = %529
  %535 = load i32*, i32** %517, align 8
  %536 = getelementptr inbounds i32, i32* %535, i64 %523
  br label %539

537:                                              ; preds = %529
  %538 = getelementptr inbounds [5 x i32], [5 x i32]* %516, i64 0, i64 %523
  br label %539

539:                                              ; preds = %534, %537
  %540 = phi i32* [ %536, %534 ], [ %538, %537 ]
  %541 = load i32, i32* %540, align 4
  %542 = icmp eq i32 %531, %541
  br i1 %542, label %543, label %555

543:                                              ; preds = %539
  br i1 %533, label %544, label %547

544:                                              ; preds = %543
  %545 = load i32*, i32** %517, align 8
  %546 = getelementptr inbounds i32, i32* %545, i64 %523
  br label %549

547:                                              ; preds = %543
  %548 = getelementptr inbounds [5 x i32], [5 x i32]* %516, i64 0, i64 %523
  br label %549

549:                                              ; preds = %544, %547
  %550 = phi i32* [ %546, %544 ], [ %548, %547 ]
  %551 = load i32, i32* %550, align 4
  %552 = mul nsw i32 %522, %551
  store i32 %552, i32* %307, align 4
  %553 = add nsw i64 %523, -1
  %554 = icmp sgt i64 %523, 0
  br i1 %554, label %521, label %556

555:                                              ; preds = %539
  store i8 4, i8* %13, align 4
  br label %556

556:                                              ; preds = %549, %363, %408, %461, %506, %555, %295, %302, %255
  %557 = phi i1 [ false, %255 ], [ false, %302 ], [ true, %295 ], [ true, %555 ], [ true, %506 ], [ true, %461 ], [ true, %408 ], [ true, %363 ], [ true, %549 ]
  %558 = icmp sgt i32 %241, 5
  br i1 %558, label %559, label %565

559:                                              ; preds = %556
  %560 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %561 = load i32*, i32** %560, align 8
  %562 = icmp eq i32* %561, null
  br i1 %562, label %565, label %563

563:                                              ; preds = %559
  %564 = bitcast i32* %561 to i8*
  tail call void @_ZdaPv(i8* %564) #10
  br label %565

565:                                              ; preds = %556, %559, %563
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #9
  %566 = icmp sgt i32 %240, 5
  br i1 %566, label %567, label %573

567:                                              ; preds = %565
  %568 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %569 = load i32*, i32** %568, align 8
  %570 = icmp eq i32* %569, null
  br i1 %570, label %573, label %571

571:                                              ; preds = %567
  %572 = bitcast i32* %569 to i8*
  tail call void @_ZdaPv(i8* %572) #10
  br label %573

573:                                              ; preds = %565, %567, %571
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %74) #9
  br i1 %16, label %574, label %580

574:                                              ; preds = %573
  %575 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %576 = load i32*, i32** %575, align 8
  %577 = icmp eq i32* %576, null
  br i1 %577, label %580, label %578

578:                                              ; preds = %574
  %579 = bitcast i32* %576 to i8*
  tail call void @_ZdaPv(i8* %579) #10
  br label %580

580:                                              ; preds = %573, %574, %578
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #9
  ret i1 %557
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops24BroadcastMaximumDispatchIPFaaaEEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS9_SB_S9_PaT_(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i8 (i8, i8)*) local_unnamed_addr #3 comdat {
  %9 = alloca %"struct.tflite::ArithmeticParams", align 4
  %10 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 0
  %11 = load i8, i8* %10, align 4
  %12 = icmp eq i8 %11, 4
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  tail call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIaPFaaaELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, i8* %2, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, i8* %4, %"class.tflite::RuntimeShape"* dereferenceable(32) %5, i8* %6, i8 (i8, i8)* %7)
  br label %404

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %15) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %15, i8* align 4 %10, i64 80, i1 false) #9
  %16 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 1
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 7
  %20 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 2
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 7
  %24 = bitcast i32* %23 to <4 x i32>*
  %25 = load <4 x i32>, <4 x i32>* %24, align 4
  %26 = shufflevector <4 x i32> %25, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %27 = bitcast i32* %19 to <4 x i32>*
  store <4 x i32> %26, <4 x i32>* %27, align 4
  %28 = icmp eq i8 %11, 2
  %29 = select i1 %28, %"struct.tflite::ArithmeticParams"* %0, %"struct.tflite::ArithmeticParams"* %9
  %30 = select i1 %28, i8* %2, i8* %4
  %31 = select i1 %28, i8* %4, i8* %2
  %32 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %29, i64 0, i32 15, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %29, i64 0, i32 15, i64 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %29, i64 0, i32 15, i64 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %29, i64 0, i32 15, i64 3
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %29, i64 0, i32 15, i64 4
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, 1
  %43 = icmp sgt i32 %33, 0
  br i1 %42, label %64, label %44

44:                                               ; preds = %14
  br i1 %43, label %45, label %403

45:                                               ; preds = %44
  %46 = icmp sgt i32 %35, 0
  %47 = icmp sgt i32 %37, 0
  %48 = sext i32 %39 to i64
  %49 = icmp sgt i32 %39, 0
  %50 = zext i32 %39 to i64
  %51 = and i64 %50, 4294967264
  %52 = add nsw i64 %51, -32
  %53 = lshr exact i64 %52, 5
  %54 = add nuw nsw i64 %53, 1
  %55 = icmp ult i32 %39, 32
  %56 = and i64 %50, 4294967264
  %57 = and i64 %54, 1
  %58 = icmp eq i64 %52, 0
  %59 = sub nuw nsw i64 %54, %57
  %60 = icmp eq i64 %57, 0
  %61 = icmp eq i64 %56, %50
  %62 = and i64 %50, 3
  %63 = icmp eq i64 %62, 0
  br label %254

64:                                               ; preds = %14
  br i1 %43, label %65, label %403

65:                                               ; preds = %64
  %66 = icmp sgt i32 %35, 0
  %67 = icmp sgt i32 %37, 0
  %68 = icmp sgt i32 %39, 0
  %69 = sext i32 %41 to i64
  %70 = zext i32 %41 to i64
  %71 = and i64 %70, 4294967264
  %72 = add nsw i64 %71, -32
  %73 = lshr exact i64 %72, 5
  %74 = add nuw nsw i64 %73, 1
  %75 = icmp ult i32 %41, 32
  %76 = and i64 %70, 4294967264
  %77 = and i64 %74, 1
  %78 = icmp eq i64 %72, 0
  %79 = sub nuw nsw i64 %74, %77
  %80 = icmp eq i64 %77, 0
  %81 = icmp eq i64 %76, %70
  %82 = and i64 %70, 1
  %83 = icmp eq i64 %82, 0
  %84 = sub nsw i64 0, %70
  br label %85

85:                                               ; preds = %94, %65
  %86 = phi i32 [ 0, %65 ], [ %98, %94 ]
  %87 = phi i8* [ %31, %65 ], [ %97, %94 ]
  %88 = phi i8* [ %30, %65 ], [ %96, %94 ]
  %89 = phi i8* [ %6, %65 ], [ %95, %94 ]
  br i1 %66, label %90, label %94

90:                                               ; preds = %85, %110
  %91 = phi i32 [ %114, %110 ], [ 0, %85 ]
  %92 = phi i8* [ %112, %110 ], [ %88, %85 ]
  %93 = phi i8* [ %111, %110 ], [ %89, %85 ]
  br i1 %67, label %100, label %110

94:                                               ; preds = %110, %85
  %95 = phi i8* [ %89, %85 ], [ %111, %110 ]
  %96 = phi i8* [ %88, %85 ], [ %112, %110 ]
  %97 = phi i8* [ null, %85 ], [ %113, %110 ]
  %98 = add nuw nsw i32 %86, 1
  %99 = icmp eq i32 %98, %33
  br i1 %99, label %403, label %85

100:                                              ; preds = %90, %116
  %101 = phi i64 [ %122, %116 ], [ 0, %90 ]
  %102 = phi i32 [ %120, %116 ], [ 0, %90 ]
  %103 = phi i8* [ %118, %116 ], [ %87, %90 ]
  %104 = phi i8* [ %119, %116 ], [ %92, %90 ]
  %105 = phi i8* [ %117, %116 ], [ %93, %90 ]
  %106 = mul i64 %101, %69
  %107 = getelementptr i8, i8* %92, i64 %106
  %108 = add i64 %106, %70
  %109 = getelementptr i8, i8* %92, i64 %108
  br i1 %68, label %123, label %116

110:                                              ; preds = %116, %90
  %111 = phi i8* [ %93, %90 ], [ %117, %116 ]
  %112 = phi i8* [ %92, %90 ], [ %119, %116 ]
  %113 = phi i8* [ %87, %90 ], [ %118, %116 ]
  %114 = add nuw nsw i32 %91, 1
  %115 = icmp eq i32 %114, %35
  br i1 %115, label %94, label %90

116:                                              ; preds = %248, %100
  %117 = phi i8* [ %105, %100 ], [ %250, %248 ]
  %118 = phi i8* [ %103, %100 ], [ %249, %248 ]
  %119 = getelementptr inbounds i8, i8* %104, i64 %69
  %120 = add nuw nsw i32 %102, 1
  %121 = icmp eq i32 %120, %37
  %122 = add i64 %101, 1
  br i1 %121, label %110, label %100

123:                                              ; preds = %100, %248
  %124 = phi i64 [ %253, %248 ], [ 0, %100 ]
  %125 = phi i32 [ %251, %248 ], [ 0, %100 ]
  %126 = phi i8* [ %249, %248 ], [ %103, %100 ]
  %127 = phi i8* [ %250, %248 ], [ %105, %100 ]
  %128 = mul i64 %124, %69
  %129 = getelementptr i8, i8* %105, i64 %128
  %130 = add i64 %128, %70
  %131 = getelementptr i8, i8* %105, i64 %130
  br i1 %75, label %214, label %132

132:                                              ; preds = %123
  %133 = getelementptr i8, i8* %103, i64 %130
  %134 = getelementptr i8, i8* %103, i64 %128
  %135 = icmp ult i8* %129, %133
  %136 = icmp ult i8* %134, %131
  %137 = and i1 %135, %136
  %138 = icmp ult i8* %129, %109
  %139 = icmp ult i8* %107, %131
  %140 = and i1 %138, %139
  %141 = or i1 %137, %140
  br i1 %141, label %214, label %142

142:                                              ; preds = %132
  br i1 %78, label %190, label %143

143:                                              ; preds = %142, %143
  %144 = phi i64 [ %187, %143 ], [ 0, %142 ]
  %145 = phi i64 [ %188, %143 ], [ %79, %142 ]
  %146 = getelementptr inbounds i8, i8* %104, i64 %144
  %147 = bitcast i8* %146 to <16 x i8>*
  %148 = load <16 x i8>, <16 x i8>* %147, align 1, !alias.scope !36
  %149 = getelementptr inbounds i8, i8* %146, i64 16
  %150 = bitcast i8* %149 to <16 x i8>*
  %151 = load <16 x i8>, <16 x i8>* %150, align 1, !alias.scope !36
  %152 = getelementptr inbounds i8, i8* %126, i64 %144
  %153 = bitcast i8* %152 to <16 x i8>*
  %154 = load <16 x i8>, <16 x i8>* %153, align 1, !alias.scope !39
  %155 = getelementptr inbounds i8, i8* %152, i64 16
  %156 = bitcast i8* %155 to <16 x i8>*
  %157 = load <16 x i8>, <16 x i8>* %156, align 1, !alias.scope !39
  %158 = icmp slt <16 x i8> %148, %154
  %159 = icmp slt <16 x i8> %151, %157
  %160 = select <16 x i1> %158, <16 x i8> %154, <16 x i8> %148
  %161 = select <16 x i1> %159, <16 x i8> %157, <16 x i8> %151
  %162 = getelementptr inbounds i8, i8* %127, i64 %144
  %163 = bitcast i8* %162 to <16 x i8>*
  store <16 x i8> %160, <16 x i8>* %163, align 1, !alias.scope !41, !noalias !43
  %164 = getelementptr inbounds i8, i8* %162, i64 16
  %165 = bitcast i8* %164 to <16 x i8>*
  store <16 x i8> %161, <16 x i8>* %165, align 1, !alias.scope !41, !noalias !43
  %166 = or i64 %144, 32
  %167 = getelementptr inbounds i8, i8* %104, i64 %166
  %168 = bitcast i8* %167 to <16 x i8>*
  %169 = load <16 x i8>, <16 x i8>* %168, align 1, !alias.scope !36
  %170 = getelementptr inbounds i8, i8* %167, i64 16
  %171 = bitcast i8* %170 to <16 x i8>*
  %172 = load <16 x i8>, <16 x i8>* %171, align 1, !alias.scope !36
  %173 = getelementptr inbounds i8, i8* %126, i64 %166
  %174 = bitcast i8* %173 to <16 x i8>*
  %175 = load <16 x i8>, <16 x i8>* %174, align 1, !alias.scope !39
  %176 = getelementptr inbounds i8, i8* %173, i64 16
  %177 = bitcast i8* %176 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !39
  %179 = icmp slt <16 x i8> %169, %175
  %180 = icmp slt <16 x i8> %172, %178
  %181 = select <16 x i1> %179, <16 x i8> %175, <16 x i8> %169
  %182 = select <16 x i1> %180, <16 x i8> %178, <16 x i8> %172
  %183 = getelementptr inbounds i8, i8* %127, i64 %166
  %184 = bitcast i8* %183 to <16 x i8>*
  store <16 x i8> %181, <16 x i8>* %184, align 1, !alias.scope !41, !noalias !43
  %185 = getelementptr inbounds i8, i8* %183, i64 16
  %186 = bitcast i8* %185 to <16 x i8>*
  store <16 x i8> %182, <16 x i8>* %186, align 1, !alias.scope !41, !noalias !43
  %187 = add i64 %144, 64
  %188 = add i64 %145, -2
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %143, !llvm.loop !44

190:                                              ; preds = %143, %142
  %191 = phi i64 [ 0, %142 ], [ %187, %143 ]
  br i1 %80, label %213, label %192

192:                                              ; preds = %190
  %193 = getelementptr inbounds i8, i8* %104, i64 %191
  %194 = bitcast i8* %193 to <16 x i8>*
  %195 = load <16 x i8>, <16 x i8>* %194, align 1, !alias.scope !36
  %196 = getelementptr inbounds i8, i8* %193, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !36
  %199 = getelementptr inbounds i8, i8* %126, i64 %191
  %200 = bitcast i8* %199 to <16 x i8>*
  %201 = load <16 x i8>, <16 x i8>* %200, align 1, !alias.scope !39
  %202 = getelementptr inbounds i8, i8* %199, i64 16
  %203 = bitcast i8* %202 to <16 x i8>*
  %204 = load <16 x i8>, <16 x i8>* %203, align 1, !alias.scope !39
  %205 = icmp slt <16 x i8> %195, %201
  %206 = icmp slt <16 x i8> %198, %204
  %207 = select <16 x i1> %205, <16 x i8> %201, <16 x i8> %195
  %208 = select <16 x i1> %206, <16 x i8> %204, <16 x i8> %198
  %209 = getelementptr inbounds i8, i8* %127, i64 %191
  %210 = bitcast i8* %209 to <16 x i8>*
  store <16 x i8> %207, <16 x i8>* %210, align 1, !alias.scope !41, !noalias !43
  %211 = getelementptr inbounds i8, i8* %209, i64 16
  %212 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %212, align 1, !alias.scope !41, !noalias !43
  br label %213

213:                                              ; preds = %190, %192
  br i1 %81, label %248, label %214

214:                                              ; preds = %213, %132, %123
  %215 = phi i64 [ 0, %132 ], [ 0, %123 ], [ %76, %213 ]
  %216 = xor i64 %215, -1
  br i1 %83, label %226, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds i8, i8* %104, i64 %215
  %219 = load i8, i8* %218, align 1
  %220 = getelementptr inbounds i8, i8* %126, i64 %215
  %221 = load i8, i8* %220, align 1
  %222 = icmp slt i8 %219, %221
  %223 = select i1 %222, i8 %221, i8 %219
  %224 = getelementptr inbounds i8, i8* %127, i64 %215
  store i8 %223, i8* %224, align 1
  %225 = or i64 %215, 1
  br label %226

226:                                              ; preds = %217, %214
  %227 = phi i64 [ %225, %217 ], [ %215, %214 ]
  %228 = icmp eq i64 %216, %84
  br i1 %228, label %248, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %246, %229 ], [ %227, %226 ]
  %231 = getelementptr inbounds i8, i8* %104, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = getelementptr inbounds i8, i8* %126, i64 %230
  %234 = load i8, i8* %233, align 1
  %235 = icmp slt i8 %232, %234
  %236 = select i1 %235, i8 %234, i8 %232
  %237 = getelementptr inbounds i8, i8* %127, i64 %230
  store i8 %236, i8* %237, align 1
  %238 = add nuw nsw i64 %230, 1
  %239 = getelementptr inbounds i8, i8* %104, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = getelementptr inbounds i8, i8* %126, i64 %238
  %242 = load i8, i8* %241, align 1
  %243 = icmp slt i8 %240, %242
  %244 = select i1 %243, i8 %242, i8 %240
  %245 = getelementptr inbounds i8, i8* %127, i64 %238
  store i8 %244, i8* %245, align 1
  %246 = add nuw nsw i64 %230, 2
  %247 = icmp eq i64 %246, %70
  br i1 %247, label %248, label %229, !llvm.loop !46

248:                                              ; preds = %226, %229, %213
  %249 = getelementptr inbounds i8, i8* %126, i64 %69
  %250 = getelementptr inbounds i8, i8* %127, i64 %69
  %251 = add nuw nsw i32 %125, 1
  %252 = icmp eq i32 %251, %39
  %253 = add i64 %124, 1
  br i1 %252, label %116, label %123

254:                                              ; preds = %263, %45
  %255 = phi i32 [ 0, %45 ], [ %267, %263 ]
  %256 = phi i8* [ %31, %45 ], [ %266, %263 ]
  %257 = phi i8* [ %30, %45 ], [ %265, %263 ]
  %258 = phi i8* [ %6, %45 ], [ %264, %263 ]
  br i1 %46, label %259, label %263

259:                                              ; preds = %254, %269
  %260 = phi i32 [ %273, %269 ], [ 0, %254 ]
  %261 = phi i8* [ %271, %269 ], [ %257, %254 ]
  %262 = phi i8* [ %270, %269 ], [ %258, %254 ]
  br i1 %47, label %275, label %269

263:                                              ; preds = %269, %254
  %264 = phi i8* [ %258, %254 ], [ %270, %269 ]
  %265 = phi i8* [ %257, %254 ], [ %271, %269 ]
  %266 = phi i8* [ null, %254 ], [ %272, %269 ]
  %267 = add nuw nsw i32 %255, 1
  %268 = icmp eq i32 %267, %33
  br i1 %268, label %403, label %254

269:                                              ; preds = %396, %259
  %270 = phi i8* [ %262, %259 ], [ %398, %396 ]
  %271 = phi i8* [ %261, %259 ], [ %399, %396 ]
  %272 = phi i8* [ %256, %259 ], [ %397, %396 ]
  %273 = add nuw nsw i32 %260, 1
  %274 = icmp eq i32 %273, %35
  br i1 %274, label %263, label %259

275:                                              ; preds = %259, %396
  %276 = phi i64 [ %402, %396 ], [ 0, %259 ]
  %277 = phi i32 [ %400, %396 ], [ 0, %259 ]
  %278 = phi i8* [ %397, %396 ], [ %256, %259 ]
  %279 = phi i8* [ %399, %396 ], [ %261, %259 ]
  %280 = phi i8* [ %398, %396 ], [ %262, %259 ]
  %281 = mul i64 %276, %48
  %282 = getelementptr i8, i8* %262, i64 %281
  %283 = add i64 %281, %50
  %284 = getelementptr i8, i8* %262, i64 %283
  %285 = getelementptr i8, i8* %256, i64 %281
  %286 = getelementptr i8, i8* %256, i64 %283
  %287 = load i8, i8* %279, align 1
  br i1 %49, label %288, label %396

288:                                              ; preds = %275
  br i1 %55, label %351, label %289

289:                                              ; preds = %288
  %290 = icmp ult i8* %282, %286
  %291 = icmp ult i8* %285, %284
  %292 = and i1 %290, %291
  br i1 %292, label %351, label %293

293:                                              ; preds = %289
  %294 = insertelement <16 x i8> undef, i8 %287, i32 0
  %295 = shufflevector <16 x i8> %294, <16 x i8> undef, <16 x i32> zeroinitializer
  %296 = insertelement <16 x i8> undef, i8 %287, i32 0
  %297 = shufflevector <16 x i8> %296, <16 x i8> undef, <16 x i32> zeroinitializer
  br i1 %58, label %333, label %298

298:                                              ; preds = %293, %298
  %299 = phi i64 [ %330, %298 ], [ 0, %293 ]
  %300 = phi i64 [ %331, %298 ], [ %59, %293 ]
  %301 = getelementptr inbounds i8, i8* %278, i64 %299
  %302 = bitcast i8* %301 to <16 x i8>*
  %303 = load <16 x i8>, <16 x i8>* %302, align 1, !alias.scope !47
  %304 = getelementptr inbounds i8, i8* %301, i64 16
  %305 = bitcast i8* %304 to <16 x i8>*
  %306 = load <16 x i8>, <16 x i8>* %305, align 1, !alias.scope !47
  %307 = icmp slt <16 x i8> %295, %303
  %308 = icmp slt <16 x i8> %297, %306
  %309 = select <16 x i1> %307, <16 x i8> %303, <16 x i8> %295
  %310 = select <16 x i1> %308, <16 x i8> %306, <16 x i8> %297
  %311 = getelementptr inbounds i8, i8* %280, i64 %299
  %312 = bitcast i8* %311 to <16 x i8>*
  store <16 x i8> %309, <16 x i8>* %312, align 1, !alias.scope !50, !noalias !47
  %313 = getelementptr inbounds i8, i8* %311, i64 16
  %314 = bitcast i8* %313 to <16 x i8>*
  store <16 x i8> %310, <16 x i8>* %314, align 1, !alias.scope !50, !noalias !47
  %315 = or i64 %299, 32
  %316 = getelementptr inbounds i8, i8* %278, i64 %315
  %317 = bitcast i8* %316 to <16 x i8>*
  %318 = load <16 x i8>, <16 x i8>* %317, align 1, !alias.scope !47
  %319 = getelementptr inbounds i8, i8* %316, i64 16
  %320 = bitcast i8* %319 to <16 x i8>*
  %321 = load <16 x i8>, <16 x i8>* %320, align 1, !alias.scope !47
  %322 = icmp slt <16 x i8> %295, %318
  %323 = icmp slt <16 x i8> %297, %321
  %324 = select <16 x i1> %322, <16 x i8> %318, <16 x i8> %295
  %325 = select <16 x i1> %323, <16 x i8> %321, <16 x i8> %297
  %326 = getelementptr inbounds i8, i8* %280, i64 %315
  %327 = bitcast i8* %326 to <16 x i8>*
  store <16 x i8> %324, <16 x i8>* %327, align 1, !alias.scope !50, !noalias !47
  %328 = getelementptr inbounds i8, i8* %326, i64 16
  %329 = bitcast i8* %328 to <16 x i8>*
  store <16 x i8> %325, <16 x i8>* %329, align 1, !alias.scope !50, !noalias !47
  %330 = add i64 %299, 64
  %331 = add i64 %300, -2
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %333, label %298, !llvm.loop !52

333:                                              ; preds = %298, %293
  %334 = phi i64 [ 0, %293 ], [ %330, %298 ]
  br i1 %60, label %350, label %335

335:                                              ; preds = %333
  %336 = getelementptr inbounds i8, i8* %278, i64 %334
  %337 = bitcast i8* %336 to <16 x i8>*
  %338 = load <16 x i8>, <16 x i8>* %337, align 1, !alias.scope !47
  %339 = getelementptr inbounds i8, i8* %336, i64 16
  %340 = bitcast i8* %339 to <16 x i8>*
  %341 = load <16 x i8>, <16 x i8>* %340, align 1, !alias.scope !47
  %342 = icmp slt <16 x i8> %295, %338
  %343 = icmp slt <16 x i8> %297, %341
  %344 = select <16 x i1> %342, <16 x i8> %338, <16 x i8> %295
  %345 = select <16 x i1> %343, <16 x i8> %341, <16 x i8> %297
  %346 = getelementptr inbounds i8, i8* %280, i64 %334
  %347 = bitcast i8* %346 to <16 x i8>*
  store <16 x i8> %344, <16 x i8>* %347, align 1, !alias.scope !50, !noalias !47
  %348 = getelementptr inbounds i8, i8* %346, i64 16
  %349 = bitcast i8* %348 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %349, align 1, !alias.scope !50, !noalias !47
  br label %350

350:                                              ; preds = %333, %335
  br i1 %61, label %396, label %351

351:                                              ; preds = %350, %289, %288
  %352 = phi i64 [ 0, %289 ], [ 0, %288 ], [ %56, %350 ]
  %353 = xor i64 %352, -1
  %354 = add nsw i64 %353, %50
  br i1 %63, label %366, label %355

355:                                              ; preds = %351, %355
  %356 = phi i64 [ %363, %355 ], [ %352, %351 ]
  %357 = phi i64 [ %364, %355 ], [ %62, %351 ]
  %358 = getelementptr inbounds i8, i8* %278, i64 %356
  %359 = load i8, i8* %358, align 1
  %360 = icmp slt i8 %287, %359
  %361 = select i1 %360, i8 %359, i8 %287
  %362 = getelementptr inbounds i8, i8* %280, i64 %356
  store i8 %361, i8* %362, align 1
  %363 = add nuw nsw i64 %356, 1
  %364 = add i64 %357, -1
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %366, label %355, !llvm.loop !53

366:                                              ; preds = %355, %351
  %367 = phi i64 [ %352, %351 ], [ %363, %355 ]
  %368 = icmp ult i64 %354, 3
  br i1 %368, label %396, label %369

369:                                              ; preds = %366, %369
  %370 = phi i64 [ %394, %369 ], [ %367, %366 ]
  %371 = getelementptr inbounds i8, i8* %278, i64 %370
  %372 = load i8, i8* %371, align 1
  %373 = icmp slt i8 %287, %372
  %374 = select i1 %373, i8 %372, i8 %287
  %375 = getelementptr inbounds i8, i8* %280, i64 %370
  store i8 %374, i8* %375, align 1
  %376 = add nuw nsw i64 %370, 1
  %377 = getelementptr inbounds i8, i8* %278, i64 %376
  %378 = load i8, i8* %377, align 1
  %379 = icmp slt i8 %287, %378
  %380 = select i1 %379, i8 %378, i8 %287
  %381 = getelementptr inbounds i8, i8* %280, i64 %376
  store i8 %380, i8* %381, align 1
  %382 = add nuw nsw i64 %370, 2
  %383 = getelementptr inbounds i8, i8* %278, i64 %382
  %384 = load i8, i8* %383, align 1
  %385 = icmp slt i8 %287, %384
  %386 = select i1 %385, i8 %384, i8 %287
  %387 = getelementptr inbounds i8, i8* %280, i64 %382
  store i8 %386, i8* %387, align 1
  %388 = add nuw nsw i64 %370, 3
  %389 = getelementptr inbounds i8, i8* %278, i64 %388
  %390 = load i8, i8* %389, align 1
  %391 = icmp slt i8 %287, %390
  %392 = select i1 %391, i8 %390, i8 %287
  %393 = getelementptr inbounds i8, i8* %280, i64 %388
  store i8 %392, i8* %393, align 1
  %394 = add nuw nsw i64 %370, 4
  %395 = icmp eq i64 %394, %50
  br i1 %395, label %396, label %369, !llvm.loop !54

396:                                              ; preds = %366, %369, %350, %275
  %397 = getelementptr inbounds i8, i8* %278, i64 %48
  %398 = getelementptr inbounds i8, i8* %280, i64 %48
  %399 = getelementptr inbounds i8, i8* %279, i64 1
  %400 = add nuw nsw i32 %277, 1
  %401 = icmp eq i32 %400, %37
  %402 = add i64 %276, 1
  br i1 %401, label %269, label %275

403:                                              ; preds = %263, %94, %44, %64
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %15) #9
  br label %404

404:                                              ; preds = %403, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIaEET_S5_S5_(i8 signext, i8 signext) #0 comdat align 2 {
  %3 = icmp sgt i8 %0, %1
  %4 = select i1 %3, i8 %0, i8 %1
  ret i8 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIaPFaaaELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i8 (i8, i8)*) local_unnamed_addr #0 comdat {
  %8 = alloca [5 x i32], align 16
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8 (i8, i8)*, align 8
  %13 = alloca %"struct.tflite::NdArrayDesc", align 4
  %14 = alloca %"struct.tflite::NdArrayDesc", align 4
  %15 = alloca %"struct.tflite::NdArrayDesc", align 4
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %class.anon, align 8
  store i8* %1, i8** %9, align 8
  store i8* %3, i8** %10, align 8
  store i8* %5, i8** %11, align 8
  store i8 (i8, i8)* %6, i8 (i8, i8)** %12, align 8
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %390

23:                                               ; preds = %7
  %24 = icmp sgt i32 %19, 5
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %union.anon, %union.anon* %25, i64 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = bitcast %union.anon* %25 to i32*
  %29 = select i1 %24, i32* %27, i32* %28
  %30 = bitcast i32* %29 to i8*
  %31 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 1
  %32 = getelementptr inbounds %union.anon, %union.anon* %31, i64 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = bitcast %union.anon* %31 to i32*
  %35 = select i1 %24, i32* %33, i32* %34
  %36 = bitcast i32* %35 to i8*
  %37 = sext i32 %19 to i64
  %38 = shl nsw i64 %37, 2
  %39 = tail call i32 @bcmp(i8* %30, i8* %36, i64 %38) #9
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %390

41:                                               ; preds = %23
  br i1 %24, label %44, label %42

42:                                               ; preds = %41
  %43 = icmp sgt i32 %19, 0
  br i1 %43, label %44, label %248

44:                                               ; preds = %41, %42
  %45 = phi i32* [ %28, %42 ], [ %27, %41 ]
  %46 = zext i32 %19 to i64
  %47 = icmp ult i32 %19, 8
  br i1 %47, label %133, label %48

48:                                               ; preds = %44
  %49 = and i64 %46, 4294967288
  %50 = add nsw i64 %49, -8
  %51 = lshr exact i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = and i64 %52, 3
  %54 = icmp ult i64 %50, 24
  br i1 %54, label %100, label %55

55:                                               ; preds = %48
  %56 = sub nsw i64 %52, %53
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %97, %57 ]
  %59 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %55 ], [ %95, %57 ]
  %60 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %55 ], [ %96, %57 ]
  %61 = phi i64 [ %56, %55 ], [ %98, %57 ]
  %62 = getelementptr inbounds i32, i32* %45, i64 %58
  %63 = bitcast i32* %62 to <4 x i32>*
  %64 = load <4 x i32>, <4 x i32>* %63, align 4
  %65 = getelementptr inbounds i32, i32* %62, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  %67 = load <4 x i32>, <4 x i32>* %66, align 4
  %68 = mul nsw <4 x i32> %64, %59
  %69 = mul nsw <4 x i32> %67, %60
  %70 = or i64 %58, 8
  %71 = getelementptr inbounds i32, i32* %45, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  %73 = load <4 x i32>, <4 x i32>* %72, align 4
  %74 = getelementptr inbounds i32, i32* %71, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  %76 = load <4 x i32>, <4 x i32>* %75, align 4
  %77 = mul nsw <4 x i32> %73, %68
  %78 = mul nsw <4 x i32> %76, %69
  %79 = or i64 %58, 16
  %80 = getelementptr inbounds i32, i32* %45, i64 %79
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4
  %83 = getelementptr inbounds i32, i32* %80, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4
  %86 = mul nsw <4 x i32> %82, %77
  %87 = mul nsw <4 x i32> %85, %78
  %88 = or i64 %58, 24
  %89 = getelementptr inbounds i32, i32* %45, i64 %88
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4
  %92 = getelementptr inbounds i32, i32* %89, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4
  %95 = mul nsw <4 x i32> %91, %86
  %96 = mul nsw <4 x i32> %94, %87
  %97 = add i64 %58, 32
  %98 = add i64 %61, -4
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %57, !llvm.loop !55

100:                                              ; preds = %57, %48
  %101 = phi <4 x i32> [ undef, %48 ], [ %95, %57 ]
  %102 = phi <4 x i32> [ undef, %48 ], [ %96, %57 ]
  %103 = phi i64 [ 0, %48 ], [ %97, %57 ]
  %104 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %48 ], [ %95, %57 ]
  %105 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %48 ], [ %96, %57 ]
  %106 = icmp eq i64 %53, 0
  br i1 %106, label %123, label %107

107:                                              ; preds = %100, %107
  %108 = phi i64 [ %120, %107 ], [ %103, %100 ]
  %109 = phi <4 x i32> [ %118, %107 ], [ %104, %100 ]
  %110 = phi <4 x i32> [ %119, %107 ], [ %105, %100 ]
  %111 = phi i64 [ %121, %107 ], [ %53, %100 ]
  %112 = getelementptr inbounds i32, i32* %45, i64 %108
  %113 = bitcast i32* %112 to <4 x i32>*
  %114 = load <4 x i32>, <4 x i32>* %113, align 4
  %115 = getelementptr inbounds i32, i32* %112, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  %117 = load <4 x i32>, <4 x i32>* %116, align 4
  %118 = mul nsw <4 x i32> %114, %109
  %119 = mul nsw <4 x i32> %117, %110
  %120 = add i64 %108, 8
  %121 = add i64 %111, -1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %107, !llvm.loop !56

123:                                              ; preds = %107, %100
  %124 = phi <4 x i32> [ %101, %100 ], [ %118, %107 ]
  %125 = phi <4 x i32> [ %102, %100 ], [ %119, %107 ]
  %126 = mul <4 x i32> %125, %124
  %127 = shufflevector <4 x i32> %126, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %128 = mul <4 x i32> %126, %127
  %129 = shufflevector <4 x i32> %128, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %130 = mul <4 x i32> %128, %129
  %131 = extractelement <4 x i32> %130, i32 0
  %132 = icmp eq i64 %49, %46
  br i1 %132, label %144, label %133

133:                                              ; preds = %123, %44
  %134 = phi i64 [ 0, %44 ], [ %49, %123 ]
  %135 = phi i32 [ 1, %44 ], [ %131, %123 ]
  br label %136

136:                                              ; preds = %133, %136
  %137 = phi i64 [ %142, %136 ], [ %134, %133 ]
  %138 = phi i32 [ %141, %136 ], [ %135, %133 ]
  %139 = getelementptr inbounds i32, i32* %45, i64 %137
  %140 = load i32, i32* %139, align 4
  %141 = mul nsw i32 %140, %138
  %142 = add nuw nsw i64 %137, 1
  %143 = icmp eq i64 %142, %46
  br i1 %143, label %144, label %136, !llvm.loop !57

144:                                              ; preds = %136, %123
  %145 = phi i32 [ %131, %123 ], [ %141, %136 ]
  br i1 %24, label %148, label %146

146:                                              ; preds = %144
  %147 = icmp sgt i32 %19, 0
  br i1 %147, label %148, label %248

148:                                              ; preds = %144, %146
  %149 = phi i32* [ %34, %146 ], [ %33, %144 ]
  %150 = zext i32 %19 to i64
  %151 = icmp ult i32 %19, 8
  br i1 %151, label %237, label %152

152:                                              ; preds = %148
  %153 = and i64 %46, 4294967288
  %154 = add nsw i64 %153, -8
  %155 = lshr exact i64 %154, 3
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 3
  %158 = icmp ult i64 %154, 24
  br i1 %158, label %204, label %159

159:                                              ; preds = %152
  %160 = sub nsw i64 %156, %157
  br label %161

161:                                              ; preds = %161, %159
  %162 = phi i64 [ 0, %159 ], [ %201, %161 ]
  %163 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %159 ], [ %199, %161 ]
  %164 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %159 ], [ %200, %161 ]
  %165 = phi i64 [ %160, %159 ], [ %202, %161 ]
  %166 = getelementptr inbounds i32, i32* %149, i64 %162
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = getelementptr inbounds i32, i32* %166, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4
  %172 = mul nsw <4 x i32> %168, %163
  %173 = mul nsw <4 x i32> %171, %164
  %174 = or i64 %162, 8
  %175 = getelementptr inbounds i32, i32* %149, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = getelementptr inbounds i32, i32* %175, i64 4
  %179 = bitcast i32* %178 to <4 x i32>*
  %180 = load <4 x i32>, <4 x i32>* %179, align 4
  %181 = mul nsw <4 x i32> %177, %172
  %182 = mul nsw <4 x i32> %180, %173
  %183 = or i64 %162, 16
  %184 = getelementptr inbounds i32, i32* %149, i64 %183
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 4
  %187 = getelementptr inbounds i32, i32* %184, i64 4
  %188 = bitcast i32* %187 to <4 x i32>*
  %189 = load <4 x i32>, <4 x i32>* %188, align 4
  %190 = mul nsw <4 x i32> %186, %181
  %191 = mul nsw <4 x i32> %189, %182
  %192 = or i64 %162, 24
  %193 = getelementptr inbounds i32, i32* %149, i64 %192
  %194 = bitcast i32* %193 to <4 x i32>*
  %195 = load <4 x i32>, <4 x i32>* %194, align 4
  %196 = getelementptr inbounds i32, i32* %193, i64 4
  %197 = bitcast i32* %196 to <4 x i32>*
  %198 = load <4 x i32>, <4 x i32>* %197, align 4
  %199 = mul nsw <4 x i32> %195, %190
  %200 = mul nsw <4 x i32> %198, %191
  %201 = add i64 %162, 32
  %202 = add i64 %165, -4
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %161, !llvm.loop !59

204:                                              ; preds = %161, %152
  %205 = phi <4 x i32> [ undef, %152 ], [ %199, %161 ]
  %206 = phi <4 x i32> [ undef, %152 ], [ %200, %161 ]
  %207 = phi i64 [ 0, %152 ], [ %201, %161 ]
  %208 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %152 ], [ %199, %161 ]
  %209 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %152 ], [ %200, %161 ]
  %210 = icmp eq i64 %157, 0
  br i1 %210, label %227, label %211

211:                                              ; preds = %204, %211
  %212 = phi i64 [ %224, %211 ], [ %207, %204 ]
  %213 = phi <4 x i32> [ %222, %211 ], [ %208, %204 ]
  %214 = phi <4 x i32> [ %223, %211 ], [ %209, %204 ]
  %215 = phi i64 [ %225, %211 ], [ %157, %204 ]
  %216 = getelementptr inbounds i32, i32* %149, i64 %212
  %217 = bitcast i32* %216 to <4 x i32>*
  %218 = load <4 x i32>, <4 x i32>* %217, align 4
  %219 = getelementptr inbounds i32, i32* %216, i64 4
  %220 = bitcast i32* %219 to <4 x i32>*
  %221 = load <4 x i32>, <4 x i32>* %220, align 4
  %222 = mul nsw <4 x i32> %218, %213
  %223 = mul nsw <4 x i32> %221, %214
  %224 = add i64 %212, 8
  %225 = add i64 %215, -1
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %211, !llvm.loop !60

227:                                              ; preds = %211, %204
  %228 = phi <4 x i32> [ %205, %204 ], [ %222, %211 ]
  %229 = phi <4 x i32> [ %206, %204 ], [ %223, %211 ]
  %230 = mul <4 x i32> %229, %228
  %231 = shufflevector <4 x i32> %230, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %232 = mul <4 x i32> %230, %231
  %233 = shufflevector <4 x i32> %232, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %234 = mul <4 x i32> %232, %233
  %235 = extractelement <4 x i32> %234, i32 0
  %236 = icmp eq i64 %153, %46
  br i1 %236, label %248, label %237

237:                                              ; preds = %227, %148
  %238 = phi i64 [ 0, %148 ], [ %153, %227 ]
  %239 = phi i32 [ 1, %148 ], [ %235, %227 ]
  br label %240

240:                                              ; preds = %237, %240
  %241 = phi i64 [ %246, %240 ], [ %238, %237 ]
  %242 = phi i32 [ %245, %240 ], [ %239, %237 ]
  %243 = getelementptr inbounds i32, i32* %149, i64 %241
  %244 = load i32, i32* %243, align 4
  %245 = mul nsw i32 %244, %242
  %246 = add nuw nsw i64 %241, 1
  %247 = icmp eq i64 %246, %150
  br i1 %247, label %248, label %240, !llvm.loop !61

248:                                              ; preds = %240, %227, %42, %146
  %249 = phi i32 [ %145, %146 ], [ 1, %42 ], [ %145, %227 ], [ %145, %240 ]
  %250 = phi i32 [ 1, %146 ], [ 1, %42 ], [ %235, %227 ], [ %245, %240 ]
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %252 = load i32, i32* %251, align 8
  %253 = icmp sgt i32 %252, 5
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  br i1 %253, label %255, label %258

255:                                              ; preds = %248
  %256 = getelementptr inbounds %union.anon, %union.anon* %254, i64 0, i32 0
  %257 = load i32*, i32** %256, align 8
  br label %261

258:                                              ; preds = %248
  %259 = bitcast %union.anon* %254 to i32*
  %260 = icmp sgt i32 %252, 0
  br i1 %260, label %261, label %361

261:                                              ; preds = %258, %255
  %262 = phi i32* [ %257, %255 ], [ %259, %258 ]
  %263 = zext i32 %252 to i64
  %264 = icmp ult i32 %252, 8
  br i1 %264, label %350, label %265

265:                                              ; preds = %261
  %266 = and i64 %263, 4294967288
  %267 = add nsw i64 %266, -8
  %268 = lshr exact i64 %267, 3
  %269 = add nuw nsw i64 %268, 1
  %270 = and i64 %269, 3
  %271 = icmp ult i64 %267, 24
  br i1 %271, label %317, label %272

272:                                              ; preds = %265
  %273 = sub nsw i64 %269, %270
  br label %274

274:                                              ; preds = %274, %272
  %275 = phi i64 [ 0, %272 ], [ %314, %274 ]
  %276 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %272 ], [ %312, %274 ]
  %277 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %272 ], [ %313, %274 ]
  %278 = phi i64 [ %273, %272 ], [ %315, %274 ]
  %279 = getelementptr inbounds i32, i32* %262, i64 %275
  %280 = bitcast i32* %279 to <4 x i32>*
  %281 = load <4 x i32>, <4 x i32>* %280, align 4
  %282 = getelementptr inbounds i32, i32* %279, i64 4
  %283 = bitcast i32* %282 to <4 x i32>*
  %284 = load <4 x i32>, <4 x i32>* %283, align 4
  %285 = mul nsw <4 x i32> %281, %276
  %286 = mul nsw <4 x i32> %284, %277
  %287 = or i64 %275, 8
  %288 = getelementptr inbounds i32, i32* %262, i64 %287
  %289 = bitcast i32* %288 to <4 x i32>*
  %290 = load <4 x i32>, <4 x i32>* %289, align 4
  %291 = getelementptr inbounds i32, i32* %288, i64 4
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4
  %294 = mul nsw <4 x i32> %290, %285
  %295 = mul nsw <4 x i32> %293, %286
  %296 = or i64 %275, 16
  %297 = getelementptr inbounds i32, i32* %262, i64 %296
  %298 = bitcast i32* %297 to <4 x i32>*
  %299 = load <4 x i32>, <4 x i32>* %298, align 4
  %300 = getelementptr inbounds i32, i32* %297, i64 4
  %301 = bitcast i32* %300 to <4 x i32>*
  %302 = load <4 x i32>, <4 x i32>* %301, align 4
  %303 = mul nsw <4 x i32> %299, %294
  %304 = mul nsw <4 x i32> %302, %295
  %305 = or i64 %275, 24
  %306 = getelementptr inbounds i32, i32* %262, i64 %305
  %307 = bitcast i32* %306 to <4 x i32>*
  %308 = load <4 x i32>, <4 x i32>* %307, align 4
  %309 = getelementptr inbounds i32, i32* %306, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4
  %312 = mul nsw <4 x i32> %308, %303
  %313 = mul nsw <4 x i32> %311, %304
  %314 = add i64 %275, 32
  %315 = add i64 %278, -4
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %274, !llvm.loop !62

317:                                              ; preds = %274, %265
  %318 = phi <4 x i32> [ undef, %265 ], [ %312, %274 ]
  %319 = phi <4 x i32> [ undef, %265 ], [ %313, %274 ]
  %320 = phi i64 [ 0, %265 ], [ %314, %274 ]
  %321 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %265 ], [ %312, %274 ]
  %322 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %265 ], [ %313, %274 ]
  %323 = icmp eq i64 %270, 0
  br i1 %323, label %340, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %337, %324 ], [ %320, %317 ]
  %326 = phi <4 x i32> [ %335, %324 ], [ %321, %317 ]
  %327 = phi <4 x i32> [ %336, %324 ], [ %322, %317 ]
  %328 = phi i64 [ %338, %324 ], [ %270, %317 ]
  %329 = getelementptr inbounds i32, i32* %262, i64 %325
  %330 = bitcast i32* %329 to <4 x i32>*
  %331 = load <4 x i32>, <4 x i32>* %330, align 4
  %332 = getelementptr inbounds i32, i32* %329, i64 4
  %333 = bitcast i32* %332 to <4 x i32>*
  %334 = load <4 x i32>, <4 x i32>* %333, align 4
  %335 = mul nsw <4 x i32> %331, %326
  %336 = mul nsw <4 x i32> %334, %327
  %337 = add i64 %325, 8
  %338 = add i64 %328, -1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %324, !llvm.loop !63

340:                                              ; preds = %324, %317
  %341 = phi <4 x i32> [ %318, %317 ], [ %335, %324 ]
  %342 = phi <4 x i32> [ %319, %317 ], [ %336, %324 ]
  %343 = mul <4 x i32> %342, %341
  %344 = shufflevector <4 x i32> %343, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %345 = mul <4 x i32> %343, %344
  %346 = shufflevector <4 x i32> %345, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %347 = mul <4 x i32> %345, %346
  %348 = extractelement <4 x i32> %347, i32 0
  %349 = icmp eq i64 %266, %263
  br i1 %349, label %361, label %350

350:                                              ; preds = %340, %261
  %351 = phi i64 [ 0, %261 ], [ %266, %340 ]
  %352 = phi i32 [ 1, %261 ], [ %348, %340 ]
  br label %353

353:                                              ; preds = %350, %353
  %354 = phi i64 [ %359, %353 ], [ %351, %350 ]
  %355 = phi i32 [ %358, %353 ], [ %352, %350 ]
  %356 = getelementptr inbounds i32, i32* %262, i64 %354
  %357 = load i32, i32* %356, align 4
  %358 = mul nsw i32 %357, %355
  %359 = add nuw nsw i64 %354, 1
  %360 = icmp eq i64 %359, %263
  br i1 %360, label %361, label %353, !llvm.loop !64

361:                                              ; preds = %353, %340, %258
  %362 = phi i32 [ 1, %258 ], [ %348, %340 ], [ %358, %353 ]
  %363 = icmp eq i32 %249, %250
  br i1 %363, label %365, label %364

364:                                              ; preds = %361
  tail call void @abort() #11
  unreachable

365:                                              ; preds = %361
  %366 = icmp eq i32 %249, %362
  br i1 %366, label %367, label %375

367:                                              ; preds = %365
  %368 = icmp sgt i32 %249, 0
  br i1 %368, label %369, label %551

369:                                              ; preds = %367
  %370 = zext i32 %249 to i64
  %371 = load i8, i8* %1, align 1
  %372 = load i8, i8* %3, align 1
  %373 = tail call signext i8 %6(i8 signext %371, i8 signext %372) #9
  store i8 %373, i8* %5, align 1
  %374 = icmp eq i32 %249, 1
  br i1 %374, label %551, label %376

375:                                              ; preds = %365
  tail call void @abort() #11
  unreachable

376:                                              ; preds = %369, %376
  %377 = phi i64 [ %388, %376 ], [ 1, %369 ]
  %378 = load i8 (i8, i8)*, i8 (i8, i8)** %12, align 8
  %379 = load i8*, i8** %9, align 8
  %380 = load i8*, i8** %10, align 8
  %381 = load i8*, i8** %11, align 8
  %382 = getelementptr inbounds i8, i8* %379, i64 %377
  %383 = load i8, i8* %382, align 1
  %384 = getelementptr inbounds i8, i8* %380, i64 %377
  %385 = load i8, i8* %384, align 1
  %386 = tail call signext i8 %378(i8 signext %383, i8 signext %385) #9
  %387 = getelementptr inbounds i8, i8* %381, i64 %377
  store i8 %386, i8* %387, align 1
  %388 = add nuw nsw i64 %377, 1
  %389 = icmp eq i64 %388, %370
  br i1 %389, label %551, label %376

390:                                              ; preds = %7, %23
  %391 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %392 = bitcast %"struct.tflite::NdArrayDesc"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %392) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %392, i8 -86, i64 40, i1 false)
  %393 = bitcast %"struct.tflite::NdArrayDesc"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %393) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %393, i8 -86, i64 40, i1 false)
  %394 = bitcast %"struct.tflite::NdArrayDesc"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %394) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %394, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %2, %"struct.tflite::NdArrayDesc"* nonnull %13, %"struct.tflite::NdArrayDesc"* nonnull %14)
  %395 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %395) #9
  %396 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %396, align 8, !alias.scope !65
  %397 = load i32, i32* %391, align 8, !noalias !65
  %398 = icmp sgt i32 %397, 5
  br i1 %398, label %399, label %400

399:                                              ; preds = %390
  call void @abort() #11, !noalias !65
  unreachable

400:                                              ; preds = %390
  store i32 5, i32* %396, align 8, !alias.scope !65
  %401 = sub i32 5, %397
  %402 = icmp sgt i32 %401, 0
  %403 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %404 = bitcast %union.anon* %403 to [5 x i32]*
  br i1 %402, label %405, label %484

405:                                              ; preds = %400
  %406 = zext i32 %401 to i64
  %407 = icmp ult i32 %401, 8
  br i1 %407, label %477, label %408

408:                                              ; preds = %405
  %409 = and i64 %406, 4294967288
  %410 = add nsw i64 %409, -8
  %411 = lshr exact i64 %410, 3
  %412 = add nuw nsw i64 %411, 1
  %413 = and i64 %412, 7
  %414 = icmp ult i64 %410, 56
  br i1 %414, label %462, label %415

415:                                              ; preds = %408
  %416 = sub nsw i64 %412, %413
  br label %417

417:                                              ; preds = %417, %415
  %418 = phi i64 [ 0, %415 ], [ %459, %417 ]
  %419 = phi i64 [ %416, %415 ], [ %460, %417 ]
  %420 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %418
  %421 = bitcast i32* %420 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %421, align 8, !alias.scope !65
  %422 = getelementptr inbounds i32, i32* %420, i64 4
  %423 = bitcast i32* %422 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %423, align 8, !alias.scope !65
  %424 = or i64 %418, 8
  %425 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %424
  %426 = bitcast i32* %425 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %426, align 8, !alias.scope !65
  %427 = getelementptr inbounds i32, i32* %425, i64 4
  %428 = bitcast i32* %427 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %428, align 8, !alias.scope !65
  %429 = or i64 %418, 16
  %430 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %429
  %431 = bitcast i32* %430 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %431, align 8, !alias.scope !65
  %432 = getelementptr inbounds i32, i32* %430, i64 4
  %433 = bitcast i32* %432 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %433, align 8, !alias.scope !65
  %434 = or i64 %418, 24
  %435 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %434
  %436 = bitcast i32* %435 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %436, align 8, !alias.scope !65
  %437 = getelementptr inbounds i32, i32* %435, i64 4
  %438 = bitcast i32* %437 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %438, align 8, !alias.scope !65
  %439 = or i64 %418, 32
  %440 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %439
  %441 = bitcast i32* %440 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %441, align 8, !alias.scope !65
  %442 = getelementptr inbounds i32, i32* %440, i64 4
  %443 = bitcast i32* %442 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %443, align 8, !alias.scope !65
  %444 = or i64 %418, 40
  %445 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %444
  %446 = bitcast i32* %445 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %446, align 8, !alias.scope !65
  %447 = getelementptr inbounds i32, i32* %445, i64 4
  %448 = bitcast i32* %447 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %448, align 8, !alias.scope !65
  %449 = or i64 %418, 48
  %450 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %449
  %451 = bitcast i32* %450 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %451, align 8, !alias.scope !65
  %452 = getelementptr inbounds i32, i32* %450, i64 4
  %453 = bitcast i32* %452 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %453, align 8, !alias.scope !65
  %454 = or i64 %418, 56
  %455 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %454
  %456 = bitcast i32* %455 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %456, align 8, !alias.scope !65
  %457 = getelementptr inbounds i32, i32* %455, i64 4
  %458 = bitcast i32* %457 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %458, align 8, !alias.scope !65
  %459 = add i64 %418, 64
  %460 = add i64 %419, -8
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %462, label %417, !llvm.loop !68

462:                                              ; preds = %417, %408
  %463 = phi i64 [ 0, %408 ], [ %459, %417 ]
  %464 = icmp eq i64 %413, 0
  br i1 %464, label %475, label %465

465:                                              ; preds = %462, %465
  %466 = phi i64 [ %472, %465 ], [ %463, %462 ]
  %467 = phi i64 [ %473, %465 ], [ %413, %462 ]
  %468 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %466
  %469 = bitcast i32* %468 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %469, align 8, !alias.scope !65
  %470 = getelementptr inbounds i32, i32* %468, i64 4
  %471 = bitcast i32* %470 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %471, align 8, !alias.scope !65
  %472 = add i64 %466, 8
  %473 = add i64 %467, -1
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %465, !llvm.loop !69

475:                                              ; preds = %465, %462
  %476 = icmp eq i64 %409, %406
  br i1 %476, label %484, label %477

477:                                              ; preds = %475, %405
  %478 = phi i64 [ 0, %405 ], [ %409, %475 ]
  br label %479

479:                                              ; preds = %477, %479
  %480 = phi i64 [ %482, %479 ], [ %478, %477 ]
  %481 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %480
  store i32 1, i32* %481, align 4, !alias.scope !65
  %482 = add nuw nsw i64 %480, 1
  %483 = icmp eq i64 %482, %406
  br i1 %483, label %484, label %479, !llvm.loop !70

484:                                              ; preds = %479, %475, %400
  %485 = getelementptr inbounds %union.anon, %union.anon* %403, i64 0, i32 0
  %486 = bitcast %union.anon* %403 to i32*
  %487 = sext i32 %401 to i64
  %488 = getelementptr inbounds i32, i32* %486, i64 %487
  %489 = bitcast i32* %488 to i8*
  %490 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %491 = bitcast %union.anon* %490 to i8*
  %492 = sext i32 %397 to i64
  %493 = shl nsw i64 %492, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %489, i8* align 4 %491, i64 %493, i1 false) #9
  %494 = load i32, i32* %396, align 8
  %495 = icmp sgt i32 %494, 5
  %496 = load i32*, i32** %485, align 8
  %497 = getelementptr inbounds i32, i32* %496, i64 4
  %498 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1, i64 8
  %499 = bitcast i8* %498 to i32*
  %500 = select i1 %495, i32* %497, i32* %499
  %501 = load i32, i32* %500, align 4
  %502 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 4
  store i32 %501, i32* %502, align 4
  %503 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 4
  store i32 1, i32* %503, align 4
  %504 = load i32, i32* %500, align 4
  %505 = getelementptr inbounds i32, i32* %496, i64 3
  %506 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1, i64 4
  %507 = bitcast i8* %506 to i32*
  %508 = select i1 %495, i32* %505, i32* %507
  %509 = load i32, i32* %508, align 4
  %510 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 3
  store i32 %509, i32* %510, align 4
  %511 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 3
  store i32 %504, i32* %511, align 4
  %512 = load i32, i32* %508, align 4
  %513 = mul nsw i32 %512, %504
  %514 = getelementptr inbounds i32, i32* %496, i64 2
  %515 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1
  %516 = bitcast [16 x i8]* %515 to i32*
  %517 = select i1 %495, i32* %514, i32* %516
  %518 = load i32, i32* %517, align 4
  %519 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 2
  store i32 %518, i32* %519, align 4
  %520 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 2
  store i32 %513, i32* %520, align 4
  %521 = load i32, i32* %517, align 4
  %522 = mul nsw i32 %521, %513
  %523 = getelementptr inbounds i32, i32* %496, i64 1
  %524 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 1
  %525 = select i1 %495, i32* %523, i32* %524
  %526 = load i32, i32* %525, align 4
  %527 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 1
  store i32 %526, i32* %527, align 4
  %528 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 1
  store i32 %522, i32* %528, align 4
  %529 = load i32, i32* %525, align 4
  %530 = mul nsw i32 %529, %522
  %531 = select i1 %495, i32* %496, i32* %486
  %532 = load i32, i32* %531, align 4
  %533 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 0
  store i32 %532, i32* %533, align 4
  %534 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 0
  store i32 %530, i32* %534, align 4
  %535 = xor i1 %495, true
  %536 = icmp eq i32* %496, null
  %537 = or i1 %536, %535
  br i1 %537, label %540, label %538

538:                                              ; preds = %484
  %539 = bitcast i32* %496 to i8*
  call void @_ZdaPv(i8* %539) #10
  br label %540

540:                                              ; preds = %484, %538
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %395) #9
  %541 = bitcast %class.anon* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %541) #9
  %542 = getelementptr inbounds %class.anon, %class.anon* %17, i64 0, i32 0
  store i8** %11, i8*** %542, align 8
  %543 = getelementptr inbounds %class.anon, %class.anon* %17, i64 0, i32 1
  store %"struct.tflite::NdArrayDesc"* %15, %"struct.tflite::NdArrayDesc"** %543, align 8
  %544 = getelementptr inbounds %class.anon, %class.anon* %17, i64 0, i32 2
  store i8 (i8, i8)** %12, i8 (i8, i8)*** %544, align 8
  %545 = getelementptr inbounds %class.anon, %class.anon* %17, i64 0, i32 3
  store i8** %9, i8*** %545, align 8
  %546 = getelementptr inbounds %class.anon, %class.anon* %17, i64 0, i32 4
  store %"struct.tflite::NdArrayDesc"* %13, %"struct.tflite::NdArrayDesc"** %546, align 8
  %547 = getelementptr inbounds %class.anon, %class.anon* %17, i64 0, i32 5
  store i8** %10, i8*** %547, align 8
  %548 = getelementptr inbounds %class.anon, %class.anon* %17, i64 0, i32 6
  store %"struct.tflite::NdArrayDesc"* %14, %"struct.tflite::NdArrayDesc"** %548, align 8
  %549 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %549) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %549, i8 0, i64 20, i1 false) #9
  %550 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 0
  call void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIaPFaaaELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* nonnull dereferenceable(40) %15, %class.anon* nonnull dereferenceable(56) %17, i32* nonnull %550) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %549) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %541) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %394) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %393) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %392) #9
  br label %551

551:                                              ; preds = %376, %369, %367, %540
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EaNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* nocapture readnone, %struct.TfLiteNode* nocapture readnone, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"struct.tflite::ArithmeticParams", align 4
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %13) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %13, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EaNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE.op_params, i64 0, i32 0), i64 80, i1 false)
  %14 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %17 = icmp eq %struct.TfLiteTensor* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %19, align 8, !alias.scope !71
  br label %45

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 2
  %22 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %21, align 8, !noalias !71
  %23 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 4, !noalias !71
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %22, i64 0, i32 1, i64 0
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %24, i32* %26, align 8, !alias.scope !71
  %27 = icmp sgt i32 %24, 5
  br i1 %27, label %28, label %35

28:                                               ; preds = %20
  %29 = sext i32 %24 to i64
  %30 = shl nsw i64 %29, 2
  %31 = tail call i8* @_Znam(i64 %30) #10, !noalias !71
  %32 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %33 = bitcast i32** %32 to i8**
  store i8* %31, i8** %33, align 8, !alias.scope !71
  %34 = bitcast i8* %31 to i32*
  br label %40

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %37 = bitcast %union.anon* %36 to i32*
  %38 = sext i32 %24 to i64
  %39 = shl nsw i64 %38, 2
  br label %40

40:                                               ; preds = %35, %28
  %41 = phi i64 [ %30, %28 ], [ %39, %35 ]
  %42 = phi i32* [ %34, %28 ], [ %37, %35 ]
  %43 = bitcast i32* %42 to i8*
  %44 = bitcast i32* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %44, i64 %41, i1 false) #9
  br label %45

45:                                               ; preds = %18, %40
  %46 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %48 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %47, align 8
  %49 = icmp eq %struct.TfLiteTensor* %48, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %51, align 8, !alias.scope !74
  br label %77

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 0, i32 2
  %54 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %53, align 8, !noalias !74
  %55 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4, !noalias !74
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %54, i64 0, i32 1, i64 0
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %56, i32* %58, align 8, !alias.scope !74
  %59 = icmp sgt i32 %56, 5
  br i1 %59, label %60, label %67

60:                                               ; preds = %52
  %61 = sext i32 %56 to i64
  %62 = shl nsw i64 %61, 2
  %63 = tail call i8* @_Znam(i64 %62) #10, !noalias !74
  %64 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %65 = bitcast i32** %64 to i8**
  store i8* %63, i8** %65, align 8, !alias.scope !74
  %66 = bitcast i8* %63 to i32*
  br label %72

67:                                               ; preds = %52
  %68 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %69 = bitcast %union.anon* %68 to i32*
  %70 = sext i32 %56 to i64
  %71 = shl nsw i64 %70, 2
  br label %72

72:                                               ; preds = %67, %60
  %73 = phi i64 [ %62, %60 ], [ %71, %67 ]
  %74 = phi i32* [ %66, %60 ], [ %69, %67 ]
  %75 = bitcast i32* %74 to i8*
  %76 = bitcast i32* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %76, i64 %73, i1 false) #9
  br label %77

77:                                               ; preds = %50, %72
  %78 = call zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %"struct.tflite::ArithmeticParams"* nonnull %4)
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = icmp sgt i32 %80, 5
  br i1 %81, label %82, label %88

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = icmp eq i32* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %82
  %87 = bitcast i32* %84 to i8*
  call void @_ZdaPv(i8* %87) #10
  br label %88

88:                                               ; preds = %77, %82, %86
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #9
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = icmp sgt i32 %90, 5
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %94 = load i32*, i32** %93, align 8
  %95 = icmp eq i32* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = bitcast i32* %94 to i8*
  call void @_ZdaPv(i8* %97) #10
  br label %98

98:                                               ; preds = %88, %92, %96
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #9
  br i1 %78, label %99, label %235

99:                                               ; preds = %98
  %100 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #9
  %101 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %102 = icmp eq %struct.TfLiteTensor* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %104, align 8, !alias.scope !77
  br label %133

105:                                              ; preds = %99
  %106 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %101, i64 0, i32 2
  %107 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %106, align 8, !noalias !77
  %108 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %107, i64 0, i32 0
  %109 = load i32, i32* %108, align 4, !noalias !77
  %110 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %107, i64 0, i32 1, i64 0
  %111 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %109, i32* %111, align 8, !alias.scope !77
  %112 = icmp sgt i32 %109, 5
  br i1 %112, label %113, label %120

113:                                              ; preds = %105
  %114 = sext i32 %109 to i64
  %115 = shl nsw i64 %114, 2
  %116 = call i8* @_Znam(i64 %115) #10, !noalias !77
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %118 = bitcast i32** %117 to i8**
  store i8* %116, i8** %118, align 8, !alias.scope !77
  %119 = bitcast i8* %116 to i32*
  br label %125

120:                                              ; preds = %105
  %121 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %122 = bitcast %union.anon* %121 to i32*
  %123 = sext i32 %109 to i64
  %124 = shl nsw i64 %123, 2
  br label %125

125:                                              ; preds = %120, %113
  %126 = phi i64 [ %115, %113 ], [ %124, %120 ]
  %127 = phi i32* [ %119, %113 ], [ %122, %120 ]
  %128 = bitcast i32* %127 to i8*
  %129 = bitcast i32* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %128, i8* align 4 %129, i64 %126, i1 false) #9
  %130 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %101, i64 0, i32 1
  %131 = bitcast %union.TfLitePtrUnion* %130 to i8**
  %132 = load i8*, i8** %131, align 8
  br label %133

133:                                              ; preds = %103, %125
  %134 = phi i8* [ %132, %125 ], [ null, %103 ]
  %135 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %135) #9
  %136 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %47, align 8
  %137 = icmp eq %struct.TfLiteTensor* %136, null
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %139, align 8, !alias.scope !80
  br label %168

140:                                              ; preds = %133
  %141 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %136, i64 0, i32 2
  %142 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %141, align 8, !noalias !80
  %143 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %142, i64 0, i32 0
  %144 = load i32, i32* %143, align 4, !noalias !80
  %145 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %142, i64 0, i32 1, i64 0
  %146 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %144, i32* %146, align 8, !alias.scope !80
  %147 = icmp sgt i32 %144, 5
  br i1 %147, label %148, label %155

148:                                              ; preds = %140
  %149 = sext i32 %144 to i64
  %150 = shl nsw i64 %149, 2
  %151 = call i8* @_Znam(i64 %150) #10, !noalias !80
  %152 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %153 = bitcast i32** %152 to i8**
  store i8* %151, i8** %153, align 8, !alias.scope !80
  %154 = bitcast i8* %151 to i32*
  br label %160

155:                                              ; preds = %140
  %156 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %157 = bitcast %union.anon* %156 to i32*
  %158 = sext i32 %144 to i64
  %159 = shl nsw i64 %158, 2
  br label %160

160:                                              ; preds = %155, %148
  %161 = phi i64 [ %150, %148 ], [ %159, %155 ]
  %162 = phi i32* [ %154, %148 ], [ %157, %155 ]
  %163 = bitcast i32* %162 to i8*
  %164 = bitcast i32* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %163, i8* align 4 %164, i64 %161, i1 false) #9
  %165 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %136, i64 0, i32 1
  %166 = bitcast %union.TfLitePtrUnion* %165 to i8**
  %167 = load i8*, i8** %166, align 8
  br label %168

168:                                              ; preds = %138, %160
  %169 = phi i8* [ %167, %160 ], [ null, %138 ]
  %170 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %170) #9
  %171 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %172 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %171, align 8
  %173 = icmp eq %struct.TfLiteTensor* %172, null
  br i1 %173, label %174, label %176

174:                                              ; preds = %168
  %175 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %175, align 8, !alias.scope !83
  br label %204

176:                                              ; preds = %168
  %177 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %172, i64 0, i32 2
  %178 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %177, align 8, !noalias !83
  %179 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %178, i64 0, i32 0
  %180 = load i32, i32* %179, align 4, !noalias !83
  %181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %178, i64 0, i32 1, i64 0
  %182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %180, i32* %182, align 8, !alias.scope !83
  %183 = icmp sgt i32 %180, 5
  br i1 %183, label %184, label %191

184:                                              ; preds = %176
  %185 = sext i32 %180 to i64
  %186 = shl nsw i64 %185, 2
  %187 = call i8* @_Znam(i64 %186) #10, !noalias !83
  %188 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %189 = bitcast i32** %188 to i8**
  store i8* %187, i8** %189, align 8, !alias.scope !83
  %190 = bitcast i8* %187 to i32*
  br label %196

191:                                              ; preds = %176
  %192 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %193 = bitcast %union.anon* %192 to i32*
  %194 = sext i32 %180 to i64
  %195 = shl nsw i64 %194, 2
  br label %196

196:                                              ; preds = %191, %184
  %197 = phi i64 [ %186, %184 ], [ %195, %191 ]
  %198 = phi i32* [ %190, %184 ], [ %193, %191 ]
  %199 = bitcast i32* %198 to i8*
  %200 = bitcast i32* %181 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %199, i8* align 4 %200, i64 %197, i1 false) #9
  %201 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %172, i64 0, i32 1
  %202 = bitcast %union.TfLitePtrUnion* %201 to i8**
  %203 = load i8*, i8** %202, align 8
  br label %204

204:                                              ; preds = %174, %196
  %205 = phi i8* [ %203, %196 ], [ null, %174 ]
  call void @_ZN6tflite13optimized_ops24BroadcastMinimumDispatchIPFaaaEEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS9_SB_S9_PaT_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, i8* %134, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %169, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %205, i8 (i8, i8)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIaEET_S5_S5_)
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %207 = load i32, i32* %206, align 8
  %208 = icmp sgt i32 %207, 5
  br i1 %208, label %209, label %215

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %211 = load i32*, i32** %210, align 8
  %212 = icmp eq i32* %211, null
  br i1 %212, label %215, label %213

213:                                              ; preds = %209
  %214 = bitcast i32* %211 to i8*
  call void @_ZdaPv(i8* %214) #10
  br label %215

215:                                              ; preds = %204, %209, %213
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %170) #9
  %216 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %217 = load i32, i32* %216, align 8
  %218 = icmp sgt i32 %217, 5
  br i1 %218, label %219, label %225

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %221 = load i32*, i32** %220, align 8
  %222 = icmp eq i32* %221, null
  br i1 %222, label %225, label %223

223:                                              ; preds = %219
  %224 = bitcast i32* %221 to i8*
  call void @_ZdaPv(i8* %224) #10
  br label %225

225:                                              ; preds = %215, %219, %223
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %135) #9
  %226 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %227 = load i32, i32* %226, align 8
  %228 = icmp sgt i32 %227, 5
  br i1 %228, label %229, label %371

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %231 = load i32*, i32** %230, align 8
  %232 = icmp eq i32* %231, null
  br i1 %232, label %371, label %233

233:                                              ; preds = %229
  %234 = bitcast i32* %231 to i8*
  call void @_ZdaPv(i8* %234) #10
  br label %371

235:                                              ; preds = %98
  %236 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %236) #9
  %237 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %238 = icmp eq %struct.TfLiteTensor* %237, null
  br i1 %238, label %239, label %241

239:                                              ; preds = %235
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %240, align 8, !alias.scope !86
  br label %269

241:                                              ; preds = %235
  %242 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %237, i64 0, i32 2
  %243 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %242, align 8, !noalias !86
  %244 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %243, i64 0, i32 0
  %245 = load i32, i32* %244, align 4, !noalias !86
  %246 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %243, i64 0, i32 1, i64 0
  %247 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %245, i32* %247, align 8, !alias.scope !86
  %248 = icmp sgt i32 %245, 5
  br i1 %248, label %249, label %256

249:                                              ; preds = %241
  %250 = sext i32 %245 to i64
  %251 = shl nsw i64 %250, 2
  %252 = call i8* @_Znam(i64 %251) #10, !noalias !86
  %253 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %254 = bitcast i32** %253 to i8**
  store i8* %252, i8** %254, align 8, !alias.scope !86
  %255 = bitcast i8* %252 to i32*
  br label %261

256:                                              ; preds = %241
  %257 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %258 = bitcast %union.anon* %257 to i32*
  %259 = sext i32 %245 to i64
  %260 = shl nsw i64 %259, 2
  br label %261

261:                                              ; preds = %256, %249
  %262 = phi i64 [ %251, %249 ], [ %260, %256 ]
  %263 = phi i32* [ %255, %249 ], [ %258, %256 ]
  %264 = bitcast i32* %263 to i8*
  %265 = bitcast i32* %246 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %264, i8* align 4 %265, i64 %262, i1 false) #9
  %266 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %237, i64 0, i32 1
  %267 = bitcast %union.TfLitePtrUnion* %266 to i8**
  %268 = load i8*, i8** %267, align 8
  br label %269

269:                                              ; preds = %239, %261
  %270 = phi i8* [ %268, %261 ], [ null, %239 ]
  %271 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %271) #9
  %272 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %47, align 8
  %273 = icmp eq %struct.TfLiteTensor* %272, null
  br i1 %273, label %274, label %276

274:                                              ; preds = %269
  %275 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %275, align 8, !alias.scope !89
  br label %304

276:                                              ; preds = %269
  %277 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %272, i64 0, i32 2
  %278 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %277, align 8, !noalias !89
  %279 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %278, i64 0, i32 0
  %280 = load i32, i32* %279, align 4, !noalias !89
  %281 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %278, i64 0, i32 1, i64 0
  %282 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %280, i32* %282, align 8, !alias.scope !89
  %283 = icmp sgt i32 %280, 5
  br i1 %283, label %284, label %291

284:                                              ; preds = %276
  %285 = sext i32 %280 to i64
  %286 = shl nsw i64 %285, 2
  %287 = call i8* @_Znam(i64 %286) #10, !noalias !89
  %288 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %289 = bitcast i32** %288 to i8**
  store i8* %287, i8** %289, align 8, !alias.scope !89
  %290 = bitcast i8* %287 to i32*
  br label %296

291:                                              ; preds = %276
  %292 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %293 = bitcast %union.anon* %292 to i32*
  %294 = sext i32 %280 to i64
  %295 = shl nsw i64 %294, 2
  br label %296

296:                                              ; preds = %291, %284
  %297 = phi i64 [ %286, %284 ], [ %295, %291 ]
  %298 = phi i32* [ %290, %284 ], [ %293, %291 ]
  %299 = bitcast i32* %298 to i8*
  %300 = bitcast i32* %281 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %299, i8* align 4 %300, i64 %297, i1 false) #9
  %301 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %272, i64 0, i32 1
  %302 = bitcast %union.TfLitePtrUnion* %301 to i8**
  %303 = load i8*, i8** %302, align 8
  br label %304

304:                                              ; preds = %274, %296
  %305 = phi i8* [ %303, %296 ], [ null, %274 ]
  %306 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %306) #9
  %307 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %308 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %307, align 8
  %309 = icmp eq %struct.TfLiteTensor* %308, null
  br i1 %309, label %310, label %312

310:                                              ; preds = %304
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %311, align 8, !alias.scope !92
  br label %340

312:                                              ; preds = %304
  %313 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %308, i64 0, i32 2
  %314 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %313, align 8, !noalias !92
  %315 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %314, i64 0, i32 0
  %316 = load i32, i32* %315, align 4, !noalias !92
  %317 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %314, i64 0, i32 1, i64 0
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %316, i32* %318, align 8, !alias.scope !92
  %319 = icmp sgt i32 %316, 5
  br i1 %319, label %320, label %327

320:                                              ; preds = %312
  %321 = sext i32 %316 to i64
  %322 = shl nsw i64 %321, 2
  %323 = call i8* @_Znam(i64 %322) #10, !noalias !92
  %324 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %325 = bitcast i32** %324 to i8**
  store i8* %323, i8** %325, align 8, !alias.scope !92
  %326 = bitcast i8* %323 to i32*
  br label %332

327:                                              ; preds = %312
  %328 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %329 = bitcast %union.anon* %328 to i32*
  %330 = sext i32 %316 to i64
  %331 = shl nsw i64 %330, 2
  br label %332

332:                                              ; preds = %327, %320
  %333 = phi i64 [ %322, %320 ], [ %331, %327 ]
  %334 = phi i32* [ %326, %320 ], [ %329, %327 ]
  %335 = bitcast i32* %334 to i8*
  %336 = bitcast i32* %317 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %335, i8* align 4 %336, i64 %333, i1 false) #9
  %337 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %308, i64 0, i32 1
  %338 = bitcast %union.TfLitePtrUnion* %337 to i8**
  %339 = load i8*, i8** %338, align 8
  br label %340

340:                                              ; preds = %310, %332
  %341 = phi i8* [ %339, %332 ], [ null, %310 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIaPFaaaELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %270, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i8* %305, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %341, i8 (i8, i8)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIaEET_S5_S5_)
  %342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %343 = load i32, i32* %342, align 8
  %344 = icmp sgt i32 %343, 5
  br i1 %344, label %345, label %351

345:                                              ; preds = %340
  %346 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %347 = load i32*, i32** %346, align 8
  %348 = icmp eq i32* %347, null
  br i1 %348, label %351, label %349

349:                                              ; preds = %345
  %350 = bitcast i32* %347 to i8*
  call void @_ZdaPv(i8* %350) #10
  br label %351

351:                                              ; preds = %340, %345, %349
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %306) #9
  %352 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %353 = load i32, i32* %352, align 8
  %354 = icmp sgt i32 %353, 5
  br i1 %354, label %355, label %361

355:                                              ; preds = %351
  %356 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %357 = load i32*, i32** %356, align 8
  %358 = icmp eq i32* %357, null
  br i1 %358, label %361, label %359

359:                                              ; preds = %355
  %360 = bitcast i32* %357 to i8*
  call void @_ZdaPv(i8* %360) #10
  br label %361

361:                                              ; preds = %351, %355, %359
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %271) #9
  %362 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %363 = load i32, i32* %362, align 8
  %364 = icmp sgt i32 %363, 5
  br i1 %364, label %365, label %371

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %367 = load i32*, i32** %366, align 8
  %368 = icmp eq i32* %367, null
  br i1 %368, label %371, label %369

369:                                              ; preds = %365
  %370 = bitcast i32* %367 to i8*
  call void @_ZdaPv(i8* %370) #10
  br label %371

371:                                              ; preds = %369, %365, %361, %233, %229, %225
  %372 = phi i8* [ %100, %225 ], [ %100, %229 ], [ %100, %233 ], [ %236, %361 ], [ %236, %365 ], [ %236, %369 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %372) #9
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %13) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops24BroadcastMinimumDispatchIPFaaaEEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS9_SB_S9_PaT_(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i8 (i8, i8)*) local_unnamed_addr #3 comdat {
  %9 = alloca %"struct.tflite::ArithmeticParams", align 4
  %10 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 0
  %11 = load i8, i8* %10, align 4
  %12 = icmp eq i8 %11, 4
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  tail call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIaPFaaaELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, i8* %2, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, i8* %4, %"class.tflite::RuntimeShape"* dereferenceable(32) %5, i8* %6, i8 (i8, i8)* %7)
  br label %404

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %15) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %15, i8* align 4 %10, i64 80, i1 false) #9
  %16 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 1
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 7
  %20 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 2
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 7
  %24 = bitcast i32* %23 to <4 x i32>*
  %25 = load <4 x i32>, <4 x i32>* %24, align 4
  %26 = shufflevector <4 x i32> %25, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %27 = bitcast i32* %19 to <4 x i32>*
  store <4 x i32> %26, <4 x i32>* %27, align 4
  %28 = icmp eq i8 %11, 2
  %29 = select i1 %28, %"struct.tflite::ArithmeticParams"* %0, %"struct.tflite::ArithmeticParams"* %9
  %30 = select i1 %28, i8* %2, i8* %4
  %31 = select i1 %28, i8* %4, i8* %2
  %32 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %29, i64 0, i32 15, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %29, i64 0, i32 15, i64 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %29, i64 0, i32 15, i64 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %29, i64 0, i32 15, i64 3
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %29, i64 0, i32 15, i64 4
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, 1
  %43 = icmp sgt i32 %33, 0
  br i1 %42, label %64, label %44

44:                                               ; preds = %14
  br i1 %43, label %45, label %403

45:                                               ; preds = %44
  %46 = icmp sgt i32 %35, 0
  %47 = icmp sgt i32 %37, 0
  %48 = sext i32 %39 to i64
  %49 = icmp sgt i32 %39, 0
  %50 = zext i32 %39 to i64
  %51 = and i64 %50, 4294967264
  %52 = add nsw i64 %51, -32
  %53 = lshr exact i64 %52, 5
  %54 = add nuw nsw i64 %53, 1
  %55 = icmp ult i32 %39, 32
  %56 = and i64 %50, 4294967264
  %57 = and i64 %54, 1
  %58 = icmp eq i64 %52, 0
  %59 = sub nuw nsw i64 %54, %57
  %60 = icmp eq i64 %57, 0
  %61 = icmp eq i64 %56, %50
  %62 = and i64 %50, 3
  %63 = icmp eq i64 %62, 0
  br label %254

64:                                               ; preds = %14
  br i1 %43, label %65, label %403

65:                                               ; preds = %64
  %66 = icmp sgt i32 %35, 0
  %67 = icmp sgt i32 %37, 0
  %68 = icmp sgt i32 %39, 0
  %69 = sext i32 %41 to i64
  %70 = zext i32 %41 to i64
  %71 = and i64 %70, 4294967264
  %72 = add nsw i64 %71, -32
  %73 = lshr exact i64 %72, 5
  %74 = add nuw nsw i64 %73, 1
  %75 = icmp ult i32 %41, 32
  %76 = and i64 %70, 4294967264
  %77 = and i64 %74, 1
  %78 = icmp eq i64 %72, 0
  %79 = sub nuw nsw i64 %74, %77
  %80 = icmp eq i64 %77, 0
  %81 = icmp eq i64 %76, %70
  %82 = and i64 %70, 1
  %83 = icmp eq i64 %82, 0
  %84 = sub nsw i64 0, %70
  br label %85

85:                                               ; preds = %94, %65
  %86 = phi i32 [ 0, %65 ], [ %98, %94 ]
  %87 = phi i8* [ %31, %65 ], [ %97, %94 ]
  %88 = phi i8* [ %30, %65 ], [ %96, %94 ]
  %89 = phi i8* [ %6, %65 ], [ %95, %94 ]
  br i1 %66, label %90, label %94

90:                                               ; preds = %85, %110
  %91 = phi i32 [ %114, %110 ], [ 0, %85 ]
  %92 = phi i8* [ %112, %110 ], [ %88, %85 ]
  %93 = phi i8* [ %111, %110 ], [ %89, %85 ]
  br i1 %67, label %100, label %110

94:                                               ; preds = %110, %85
  %95 = phi i8* [ %89, %85 ], [ %111, %110 ]
  %96 = phi i8* [ %88, %85 ], [ %112, %110 ]
  %97 = phi i8* [ null, %85 ], [ %113, %110 ]
  %98 = add nuw nsw i32 %86, 1
  %99 = icmp eq i32 %98, %33
  br i1 %99, label %403, label %85

100:                                              ; preds = %90, %116
  %101 = phi i64 [ %122, %116 ], [ 0, %90 ]
  %102 = phi i32 [ %120, %116 ], [ 0, %90 ]
  %103 = phi i8* [ %118, %116 ], [ %87, %90 ]
  %104 = phi i8* [ %119, %116 ], [ %92, %90 ]
  %105 = phi i8* [ %117, %116 ], [ %93, %90 ]
  %106 = mul i64 %101, %69
  %107 = getelementptr i8, i8* %92, i64 %106
  %108 = add i64 %106, %70
  %109 = getelementptr i8, i8* %92, i64 %108
  br i1 %68, label %123, label %116

110:                                              ; preds = %116, %90
  %111 = phi i8* [ %93, %90 ], [ %117, %116 ]
  %112 = phi i8* [ %92, %90 ], [ %119, %116 ]
  %113 = phi i8* [ %87, %90 ], [ %118, %116 ]
  %114 = add nuw nsw i32 %91, 1
  %115 = icmp eq i32 %114, %35
  br i1 %115, label %94, label %90

116:                                              ; preds = %248, %100
  %117 = phi i8* [ %105, %100 ], [ %250, %248 ]
  %118 = phi i8* [ %103, %100 ], [ %249, %248 ]
  %119 = getelementptr inbounds i8, i8* %104, i64 %69
  %120 = add nuw nsw i32 %102, 1
  %121 = icmp eq i32 %120, %37
  %122 = add i64 %101, 1
  br i1 %121, label %110, label %100

123:                                              ; preds = %100, %248
  %124 = phi i64 [ %253, %248 ], [ 0, %100 ]
  %125 = phi i32 [ %251, %248 ], [ 0, %100 ]
  %126 = phi i8* [ %249, %248 ], [ %103, %100 ]
  %127 = phi i8* [ %250, %248 ], [ %105, %100 ]
  %128 = mul i64 %124, %69
  %129 = getelementptr i8, i8* %105, i64 %128
  %130 = add i64 %128, %70
  %131 = getelementptr i8, i8* %105, i64 %130
  br i1 %75, label %214, label %132

132:                                              ; preds = %123
  %133 = getelementptr i8, i8* %103, i64 %130
  %134 = getelementptr i8, i8* %103, i64 %128
  %135 = icmp ult i8* %129, %133
  %136 = icmp ult i8* %134, %131
  %137 = and i1 %135, %136
  %138 = icmp ult i8* %129, %109
  %139 = icmp ult i8* %107, %131
  %140 = and i1 %138, %139
  %141 = or i1 %137, %140
  br i1 %141, label %214, label %142

142:                                              ; preds = %132
  br i1 %78, label %190, label %143

143:                                              ; preds = %142, %143
  %144 = phi i64 [ %187, %143 ], [ 0, %142 ]
  %145 = phi i64 [ %188, %143 ], [ %79, %142 ]
  %146 = getelementptr inbounds i8, i8* %104, i64 %144
  %147 = bitcast i8* %146 to <16 x i8>*
  %148 = load <16 x i8>, <16 x i8>* %147, align 1, !alias.scope !95
  %149 = getelementptr inbounds i8, i8* %146, i64 16
  %150 = bitcast i8* %149 to <16 x i8>*
  %151 = load <16 x i8>, <16 x i8>* %150, align 1, !alias.scope !95
  %152 = getelementptr inbounds i8, i8* %126, i64 %144
  %153 = bitcast i8* %152 to <16 x i8>*
  %154 = load <16 x i8>, <16 x i8>* %153, align 1, !alias.scope !98
  %155 = getelementptr inbounds i8, i8* %152, i64 16
  %156 = bitcast i8* %155 to <16 x i8>*
  %157 = load <16 x i8>, <16 x i8>* %156, align 1, !alias.scope !98
  %158 = icmp slt <16 x i8> %154, %148
  %159 = icmp slt <16 x i8> %157, %151
  %160 = select <16 x i1> %158, <16 x i8> %154, <16 x i8> %148
  %161 = select <16 x i1> %159, <16 x i8> %157, <16 x i8> %151
  %162 = getelementptr inbounds i8, i8* %127, i64 %144
  %163 = bitcast i8* %162 to <16 x i8>*
  store <16 x i8> %160, <16 x i8>* %163, align 1, !alias.scope !100, !noalias !102
  %164 = getelementptr inbounds i8, i8* %162, i64 16
  %165 = bitcast i8* %164 to <16 x i8>*
  store <16 x i8> %161, <16 x i8>* %165, align 1, !alias.scope !100, !noalias !102
  %166 = or i64 %144, 32
  %167 = getelementptr inbounds i8, i8* %104, i64 %166
  %168 = bitcast i8* %167 to <16 x i8>*
  %169 = load <16 x i8>, <16 x i8>* %168, align 1, !alias.scope !95
  %170 = getelementptr inbounds i8, i8* %167, i64 16
  %171 = bitcast i8* %170 to <16 x i8>*
  %172 = load <16 x i8>, <16 x i8>* %171, align 1, !alias.scope !95
  %173 = getelementptr inbounds i8, i8* %126, i64 %166
  %174 = bitcast i8* %173 to <16 x i8>*
  %175 = load <16 x i8>, <16 x i8>* %174, align 1, !alias.scope !98
  %176 = getelementptr inbounds i8, i8* %173, i64 16
  %177 = bitcast i8* %176 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !98
  %179 = icmp slt <16 x i8> %175, %169
  %180 = icmp slt <16 x i8> %178, %172
  %181 = select <16 x i1> %179, <16 x i8> %175, <16 x i8> %169
  %182 = select <16 x i1> %180, <16 x i8> %178, <16 x i8> %172
  %183 = getelementptr inbounds i8, i8* %127, i64 %166
  %184 = bitcast i8* %183 to <16 x i8>*
  store <16 x i8> %181, <16 x i8>* %184, align 1, !alias.scope !100, !noalias !102
  %185 = getelementptr inbounds i8, i8* %183, i64 16
  %186 = bitcast i8* %185 to <16 x i8>*
  store <16 x i8> %182, <16 x i8>* %186, align 1, !alias.scope !100, !noalias !102
  %187 = add i64 %144, 64
  %188 = add i64 %145, -2
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %143, !llvm.loop !103

190:                                              ; preds = %143, %142
  %191 = phi i64 [ 0, %142 ], [ %187, %143 ]
  br i1 %80, label %213, label %192

192:                                              ; preds = %190
  %193 = getelementptr inbounds i8, i8* %104, i64 %191
  %194 = bitcast i8* %193 to <16 x i8>*
  %195 = load <16 x i8>, <16 x i8>* %194, align 1, !alias.scope !95
  %196 = getelementptr inbounds i8, i8* %193, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !95
  %199 = getelementptr inbounds i8, i8* %126, i64 %191
  %200 = bitcast i8* %199 to <16 x i8>*
  %201 = load <16 x i8>, <16 x i8>* %200, align 1, !alias.scope !98
  %202 = getelementptr inbounds i8, i8* %199, i64 16
  %203 = bitcast i8* %202 to <16 x i8>*
  %204 = load <16 x i8>, <16 x i8>* %203, align 1, !alias.scope !98
  %205 = icmp slt <16 x i8> %201, %195
  %206 = icmp slt <16 x i8> %204, %198
  %207 = select <16 x i1> %205, <16 x i8> %201, <16 x i8> %195
  %208 = select <16 x i1> %206, <16 x i8> %204, <16 x i8> %198
  %209 = getelementptr inbounds i8, i8* %127, i64 %191
  %210 = bitcast i8* %209 to <16 x i8>*
  store <16 x i8> %207, <16 x i8>* %210, align 1, !alias.scope !100, !noalias !102
  %211 = getelementptr inbounds i8, i8* %209, i64 16
  %212 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %212, align 1, !alias.scope !100, !noalias !102
  br label %213

213:                                              ; preds = %190, %192
  br i1 %81, label %248, label %214

214:                                              ; preds = %213, %132, %123
  %215 = phi i64 [ 0, %132 ], [ 0, %123 ], [ %76, %213 ]
  %216 = xor i64 %215, -1
  br i1 %83, label %226, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds i8, i8* %104, i64 %215
  %219 = load i8, i8* %218, align 1
  %220 = getelementptr inbounds i8, i8* %126, i64 %215
  %221 = load i8, i8* %220, align 1
  %222 = icmp slt i8 %221, %219
  %223 = select i1 %222, i8 %221, i8 %219
  %224 = getelementptr inbounds i8, i8* %127, i64 %215
  store i8 %223, i8* %224, align 1
  %225 = or i64 %215, 1
  br label %226

226:                                              ; preds = %217, %214
  %227 = phi i64 [ %225, %217 ], [ %215, %214 ]
  %228 = icmp eq i64 %216, %84
  br i1 %228, label %248, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %246, %229 ], [ %227, %226 ]
  %231 = getelementptr inbounds i8, i8* %104, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = getelementptr inbounds i8, i8* %126, i64 %230
  %234 = load i8, i8* %233, align 1
  %235 = icmp slt i8 %234, %232
  %236 = select i1 %235, i8 %234, i8 %232
  %237 = getelementptr inbounds i8, i8* %127, i64 %230
  store i8 %236, i8* %237, align 1
  %238 = add nuw nsw i64 %230, 1
  %239 = getelementptr inbounds i8, i8* %104, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = getelementptr inbounds i8, i8* %126, i64 %238
  %242 = load i8, i8* %241, align 1
  %243 = icmp slt i8 %242, %240
  %244 = select i1 %243, i8 %242, i8 %240
  %245 = getelementptr inbounds i8, i8* %127, i64 %238
  store i8 %244, i8* %245, align 1
  %246 = add nuw nsw i64 %230, 2
  %247 = icmp eq i64 %246, %70
  br i1 %247, label %248, label %229, !llvm.loop !104

248:                                              ; preds = %226, %229, %213
  %249 = getelementptr inbounds i8, i8* %126, i64 %69
  %250 = getelementptr inbounds i8, i8* %127, i64 %69
  %251 = add nuw nsw i32 %125, 1
  %252 = icmp eq i32 %251, %39
  %253 = add i64 %124, 1
  br i1 %252, label %116, label %123

254:                                              ; preds = %263, %45
  %255 = phi i32 [ 0, %45 ], [ %267, %263 ]
  %256 = phi i8* [ %31, %45 ], [ %266, %263 ]
  %257 = phi i8* [ %30, %45 ], [ %265, %263 ]
  %258 = phi i8* [ %6, %45 ], [ %264, %263 ]
  br i1 %46, label %259, label %263

259:                                              ; preds = %254, %269
  %260 = phi i32 [ %273, %269 ], [ 0, %254 ]
  %261 = phi i8* [ %271, %269 ], [ %257, %254 ]
  %262 = phi i8* [ %270, %269 ], [ %258, %254 ]
  br i1 %47, label %275, label %269

263:                                              ; preds = %269, %254
  %264 = phi i8* [ %258, %254 ], [ %270, %269 ]
  %265 = phi i8* [ %257, %254 ], [ %271, %269 ]
  %266 = phi i8* [ null, %254 ], [ %272, %269 ]
  %267 = add nuw nsw i32 %255, 1
  %268 = icmp eq i32 %267, %33
  br i1 %268, label %403, label %254

269:                                              ; preds = %396, %259
  %270 = phi i8* [ %262, %259 ], [ %398, %396 ]
  %271 = phi i8* [ %261, %259 ], [ %399, %396 ]
  %272 = phi i8* [ %256, %259 ], [ %397, %396 ]
  %273 = add nuw nsw i32 %260, 1
  %274 = icmp eq i32 %273, %35
  br i1 %274, label %263, label %259

275:                                              ; preds = %259, %396
  %276 = phi i64 [ %402, %396 ], [ 0, %259 ]
  %277 = phi i32 [ %400, %396 ], [ 0, %259 ]
  %278 = phi i8* [ %397, %396 ], [ %256, %259 ]
  %279 = phi i8* [ %399, %396 ], [ %261, %259 ]
  %280 = phi i8* [ %398, %396 ], [ %262, %259 ]
  %281 = mul i64 %276, %48
  %282 = getelementptr i8, i8* %262, i64 %281
  %283 = add i64 %281, %50
  %284 = getelementptr i8, i8* %262, i64 %283
  %285 = getelementptr i8, i8* %256, i64 %281
  %286 = getelementptr i8, i8* %256, i64 %283
  %287 = load i8, i8* %279, align 1
  br i1 %49, label %288, label %396

288:                                              ; preds = %275
  br i1 %55, label %351, label %289

289:                                              ; preds = %288
  %290 = icmp ult i8* %282, %286
  %291 = icmp ult i8* %285, %284
  %292 = and i1 %290, %291
  br i1 %292, label %351, label %293

293:                                              ; preds = %289
  %294 = insertelement <16 x i8> undef, i8 %287, i32 0
  %295 = shufflevector <16 x i8> %294, <16 x i8> undef, <16 x i32> zeroinitializer
  %296 = insertelement <16 x i8> undef, i8 %287, i32 0
  %297 = shufflevector <16 x i8> %296, <16 x i8> undef, <16 x i32> zeroinitializer
  br i1 %58, label %333, label %298

298:                                              ; preds = %293, %298
  %299 = phi i64 [ %330, %298 ], [ 0, %293 ]
  %300 = phi i64 [ %331, %298 ], [ %59, %293 ]
  %301 = getelementptr inbounds i8, i8* %278, i64 %299
  %302 = bitcast i8* %301 to <16 x i8>*
  %303 = load <16 x i8>, <16 x i8>* %302, align 1, !alias.scope !105
  %304 = getelementptr inbounds i8, i8* %301, i64 16
  %305 = bitcast i8* %304 to <16 x i8>*
  %306 = load <16 x i8>, <16 x i8>* %305, align 1, !alias.scope !105
  %307 = icmp slt <16 x i8> %303, %295
  %308 = icmp slt <16 x i8> %306, %297
  %309 = select <16 x i1> %307, <16 x i8> %303, <16 x i8> %295
  %310 = select <16 x i1> %308, <16 x i8> %306, <16 x i8> %297
  %311 = getelementptr inbounds i8, i8* %280, i64 %299
  %312 = bitcast i8* %311 to <16 x i8>*
  store <16 x i8> %309, <16 x i8>* %312, align 1, !alias.scope !108, !noalias !105
  %313 = getelementptr inbounds i8, i8* %311, i64 16
  %314 = bitcast i8* %313 to <16 x i8>*
  store <16 x i8> %310, <16 x i8>* %314, align 1, !alias.scope !108, !noalias !105
  %315 = or i64 %299, 32
  %316 = getelementptr inbounds i8, i8* %278, i64 %315
  %317 = bitcast i8* %316 to <16 x i8>*
  %318 = load <16 x i8>, <16 x i8>* %317, align 1, !alias.scope !105
  %319 = getelementptr inbounds i8, i8* %316, i64 16
  %320 = bitcast i8* %319 to <16 x i8>*
  %321 = load <16 x i8>, <16 x i8>* %320, align 1, !alias.scope !105
  %322 = icmp slt <16 x i8> %318, %295
  %323 = icmp slt <16 x i8> %321, %297
  %324 = select <16 x i1> %322, <16 x i8> %318, <16 x i8> %295
  %325 = select <16 x i1> %323, <16 x i8> %321, <16 x i8> %297
  %326 = getelementptr inbounds i8, i8* %280, i64 %315
  %327 = bitcast i8* %326 to <16 x i8>*
  store <16 x i8> %324, <16 x i8>* %327, align 1, !alias.scope !108, !noalias !105
  %328 = getelementptr inbounds i8, i8* %326, i64 16
  %329 = bitcast i8* %328 to <16 x i8>*
  store <16 x i8> %325, <16 x i8>* %329, align 1, !alias.scope !108, !noalias !105
  %330 = add i64 %299, 64
  %331 = add i64 %300, -2
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %333, label %298, !llvm.loop !110

333:                                              ; preds = %298, %293
  %334 = phi i64 [ 0, %293 ], [ %330, %298 ]
  br i1 %60, label %350, label %335

335:                                              ; preds = %333
  %336 = getelementptr inbounds i8, i8* %278, i64 %334
  %337 = bitcast i8* %336 to <16 x i8>*
  %338 = load <16 x i8>, <16 x i8>* %337, align 1, !alias.scope !105
  %339 = getelementptr inbounds i8, i8* %336, i64 16
  %340 = bitcast i8* %339 to <16 x i8>*
  %341 = load <16 x i8>, <16 x i8>* %340, align 1, !alias.scope !105
  %342 = icmp slt <16 x i8> %338, %295
  %343 = icmp slt <16 x i8> %341, %297
  %344 = select <16 x i1> %342, <16 x i8> %338, <16 x i8> %295
  %345 = select <16 x i1> %343, <16 x i8> %341, <16 x i8> %297
  %346 = getelementptr inbounds i8, i8* %280, i64 %334
  %347 = bitcast i8* %346 to <16 x i8>*
  store <16 x i8> %344, <16 x i8>* %347, align 1, !alias.scope !108, !noalias !105
  %348 = getelementptr inbounds i8, i8* %346, i64 16
  %349 = bitcast i8* %348 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %349, align 1, !alias.scope !108, !noalias !105
  br label %350

350:                                              ; preds = %333, %335
  br i1 %61, label %396, label %351

351:                                              ; preds = %350, %289, %288
  %352 = phi i64 [ 0, %289 ], [ 0, %288 ], [ %56, %350 ]
  %353 = xor i64 %352, -1
  %354 = add nsw i64 %353, %50
  br i1 %63, label %366, label %355

355:                                              ; preds = %351, %355
  %356 = phi i64 [ %363, %355 ], [ %352, %351 ]
  %357 = phi i64 [ %364, %355 ], [ %62, %351 ]
  %358 = getelementptr inbounds i8, i8* %278, i64 %356
  %359 = load i8, i8* %358, align 1
  %360 = icmp slt i8 %359, %287
  %361 = select i1 %360, i8 %359, i8 %287
  %362 = getelementptr inbounds i8, i8* %280, i64 %356
  store i8 %361, i8* %362, align 1
  %363 = add nuw nsw i64 %356, 1
  %364 = add i64 %357, -1
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %366, label %355, !llvm.loop !111

366:                                              ; preds = %355, %351
  %367 = phi i64 [ %352, %351 ], [ %363, %355 ]
  %368 = icmp ult i64 %354, 3
  br i1 %368, label %396, label %369

369:                                              ; preds = %366, %369
  %370 = phi i64 [ %394, %369 ], [ %367, %366 ]
  %371 = getelementptr inbounds i8, i8* %278, i64 %370
  %372 = load i8, i8* %371, align 1
  %373 = icmp slt i8 %372, %287
  %374 = select i1 %373, i8 %372, i8 %287
  %375 = getelementptr inbounds i8, i8* %280, i64 %370
  store i8 %374, i8* %375, align 1
  %376 = add nuw nsw i64 %370, 1
  %377 = getelementptr inbounds i8, i8* %278, i64 %376
  %378 = load i8, i8* %377, align 1
  %379 = icmp slt i8 %378, %287
  %380 = select i1 %379, i8 %378, i8 %287
  %381 = getelementptr inbounds i8, i8* %280, i64 %376
  store i8 %380, i8* %381, align 1
  %382 = add nuw nsw i64 %370, 2
  %383 = getelementptr inbounds i8, i8* %278, i64 %382
  %384 = load i8, i8* %383, align 1
  %385 = icmp slt i8 %384, %287
  %386 = select i1 %385, i8 %384, i8 %287
  %387 = getelementptr inbounds i8, i8* %280, i64 %382
  store i8 %386, i8* %387, align 1
  %388 = add nuw nsw i64 %370, 3
  %389 = getelementptr inbounds i8, i8* %278, i64 %388
  %390 = load i8, i8* %389, align 1
  %391 = icmp slt i8 %390, %287
  %392 = select i1 %391, i8 %390, i8 %287
  %393 = getelementptr inbounds i8, i8* %280, i64 %388
  store i8 %392, i8* %393, align 1
  %394 = add nuw nsw i64 %370, 4
  %395 = icmp eq i64 %394, %50
  br i1 %395, label %396, label %369, !llvm.loop !112

396:                                              ; preds = %366, %369, %350, %275
  %397 = getelementptr inbounds i8, i8* %278, i64 %48
  %398 = getelementptr inbounds i8, i8* %280, i64 %48
  %399 = getelementptr inbounds i8, i8* %279, i64 1
  %400 = add nuw nsw i32 %277, 1
  %401 = icmp eq i32 %400, %37
  %402 = add i64 %276, 1
  br i1 %401, label %269, label %275

403:                                              ; preds = %263, %94, %44, %64
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %15) #9
  br label %404

404:                                              ; preds = %403, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIaEET_S5_S5_(i8 signext, i8 signext) #0 comdat align 2 {
  %3 = icmp slt i8 %0, %1
  %4 = select i1 %3, i8 %0, i8 %1
  ret i8 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin20Register_MAXIMUM_REFEv() local_unnamed_addr #4 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin20Register_MAXIMUM_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15maximum_minimum4EvalILNS2_10KernelTypeE0ENS2_9MaximumOpEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::ops::builtin::maximum_minimum::OpContext", align 8
  %4 = bitcast %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %9 = bitcast %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %8, align 8
  %11 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 %17
  br label %19

19:                                               ; preds = %14, %2
  %20 = phi %struct.TfLiteTensor* [ %18, %14 ], [ null, %2 ]
  store %struct.TfLiteTensor* %20, %struct.TfLiteTensor** %5, align 8
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %24, %19
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %19 ]
  store %struct.TfLiteTensor* %30, %struct.TfLiteTensor** %6, align 8
  %31 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %38 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %37, align 8
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 %39
  br label %41

41:                                               ; preds = %29, %36
  %42 = phi %struct.TfLiteTensor* [ %40, %36 ], [ null, %29 ]
  store %struct.TfLiteTensor* %42, %struct.TfLiteTensor** %7, align 8
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  switch i32 %44, label %51 [
    i32 1, label %45
    i32 3, label %46
    i32 9, label %47
    i32 2, label %48
    i32 4, label %49
    i32 7, label %50
  ]

45:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EfNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

46:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EhNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

47:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EaNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

48:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EiNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

49:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0ElNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

50:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EsNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

51:                                               ; preds = %41
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %53 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %52, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %53(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16, i64 0, i64 0), i32 %44) #9
  br label %54

54:                                               ; preds = %45, %46, %47, %48, %49, %50, %51
  %55 = phi i32 [ 1, %51 ], [ 0, %50 ], [ 0, %49 ], [ 0, %48 ], [ 0, %47 ], [ 0, %46 ], [ 0, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret i32 %55
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin28Register_MAXIMUM_GENERIC_OPTEv() local_unnamed_addr #4 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin28Register_MAXIMUM_GENERIC_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15maximum_minimum4EvalILNS2_10KernelTypeE1ENS2_9MaximumOpEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::ops::builtin::maximum_minimum::OpContext", align 8
  %4 = bitcast %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %9 = bitcast %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %8, align 8
  %11 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 %17
  br label %19

19:                                               ; preds = %14, %2
  %20 = phi %struct.TfLiteTensor* [ %18, %14 ], [ null, %2 ]
  store %struct.TfLiteTensor* %20, %struct.TfLiteTensor** %5, align 8
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %24, %19
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %19 ]
  store %struct.TfLiteTensor* %30, %struct.TfLiteTensor** %6, align 8
  %31 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %38 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %37, align 8
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 %39
  br label %41

41:                                               ; preds = %29, %36
  %42 = phi %struct.TfLiteTensor* [ %40, %36 ], [ null, %29 ]
  store %struct.TfLiteTensor* %42, %struct.TfLiteTensor** %7, align 8
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  switch i32 %44, label %51 [
    i32 1, label %45
    i32 3, label %46
    i32 9, label %47
    i32 2, label %48
    i32 4, label %49
    i32 7, label %50
  ]

45:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EfNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

46:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EhNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

47:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EaNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* undef, %struct.TfLiteNode* undef, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

48:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EiNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

49:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1ElNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

50:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EsNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

51:                                               ; preds = %41
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %53 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %52, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %53(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16, i64 0, i64 0), i32 %44) #9
  br label %54

54:                                               ; preds = %45, %46, %47, %48, %49, %50, %51
  %55 = phi i32 [ 1, %51 ], [ 0, %50 ], [ 0, %49 ], [ 0, %48 ], [ 0, %47 ], [ 0, %46 ], [ 0, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret i32 %55
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin20Register_MINIMUM_REFEv() local_unnamed_addr #4 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin20Register_MINIMUM_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15maximum_minimum4EvalILNS2_10KernelTypeE0ENS2_9MinimumOpEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::ops::builtin::maximum_minimum::OpContext", align 8
  %4 = bitcast %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %9 = bitcast %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %8, align 8
  %11 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 %17
  br label %19

19:                                               ; preds = %14, %2
  %20 = phi %struct.TfLiteTensor* [ %18, %14 ], [ null, %2 ]
  store %struct.TfLiteTensor* %20, %struct.TfLiteTensor** %5, align 8
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %24, %19
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %19 ]
  store %struct.TfLiteTensor* %30, %struct.TfLiteTensor** %6, align 8
  %31 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %38 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %37, align 8
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 %39
  br label %41

41:                                               ; preds = %29, %36
  %42 = phi %struct.TfLiteTensor* [ %40, %36 ], [ null, %29 ]
  store %struct.TfLiteTensor* %42, %struct.TfLiteTensor** %7, align 8
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  switch i32 %44, label %51 [
    i32 1, label %45
    i32 3, label %46
    i32 9, label %47
    i32 2, label %48
    i32 4, label %49
    i32 7, label %50
  ]

45:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EfNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

46:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EhNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

47:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EaNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

48:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EiNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

49:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0ElNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

50:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EsNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

51:                                               ; preds = %41
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %53 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %52, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %53(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16, i64 0, i64 0), i32 %44) #9
  br label %54

54:                                               ; preds = %45, %46, %47, %48, %49, %50, %51
  %55 = phi i32 [ 1, %51 ], [ 0, %50 ], [ 0, %49 ], [ 0, %48 ], [ 0, %47 ], [ 0, %46 ], [ 0, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret i32 %55
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin28Register_MINIMUM_GENERIC_OPTEv() local_unnamed_addr #4 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin28Register_MINIMUM_GENERIC_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15maximum_minimum4EvalILNS2_10KernelTypeE1ENS2_9MinimumOpEEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::ops::builtin::maximum_minimum::OpContext", align 8
  %4 = bitcast %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %9 = bitcast %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %8, align 8
  %11 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 %17
  br label %19

19:                                               ; preds = %14, %2
  %20 = phi %struct.TfLiteTensor* [ %18, %14 ], [ null, %2 ]
  store %struct.TfLiteTensor* %20, %struct.TfLiteTensor** %5, align 8
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %24, %19
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %19 ]
  store %struct.TfLiteTensor* %30, %struct.TfLiteTensor** %6, align 8
  %31 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %38 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %37, align 8
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 %39
  br label %41

41:                                               ; preds = %29, %36
  %42 = phi %struct.TfLiteTensor* [ %40, %36 ], [ null, %29 ]
  store %struct.TfLiteTensor* %42, %struct.TfLiteTensor** %7, align 8
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  switch i32 %44, label %51 [
    i32 1, label %45
    i32 3, label %46
    i32 9, label %47
    i32 2, label %48
    i32 4, label %49
    i32 7, label %50
  ]

45:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EfNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

46:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EhNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

47:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EaNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* undef, %struct.TfLiteNode* undef, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

48:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EiNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

49:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1ElNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

50:                                               ; preds = %41
  call void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EsNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* nonnull dereferenceable(24) %3)
  br label %54

51:                                               ; preds = %41
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %53 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %52, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %53(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16, i64 0, i64 0), i32 %44) #9
  br label %54

54:                                               ; preds = %45, %46, %47, %48, %49, %50, %51
  %55 = phi i32 [ 1, %51 ], [ 0, %50 ], [ 0, %49 ], [ 0, %48 ], [ 0, %47 ], [ 0, %46 ], [ 0, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret i32 %55
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin16Register_MAXIMUMEv() local_unnamed_addr #4 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin28Register_MAXIMUM_GENERIC_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin16Register_MINIMUMEv() local_unnamed_addr #4 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin28Register_MINIMUM_GENERIC_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"*) local_unnamed_addr #3 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %8, align 8, !alias.scope !113
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8, !noalias !113
  %11 = icmp sgt i32 %10, 5
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  tail call void @abort() #11, !noalias !113
  unreachable

13:                                               ; preds = %4
  store i32 5, i32* %8, align 8, !alias.scope !113
  %14 = sub i32 5, %10
  %15 = icmp sgt i32 %14, 0
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %15, label %17, label %97

17:                                               ; preds = %13
  %18 = bitcast %union.anon* %16 to [5 x i32]*
  %19 = zext i32 %14 to i64
  %20 = icmp ult i32 %14, 8
  br i1 %20, label %90, label %21

21:                                               ; preds = %17
  %22 = and i64 %19, 4294967288
  %23 = add nsw i64 %22, -8
  %24 = lshr exact i64 %23, 3
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 7
  %27 = icmp ult i64 %23, 56
  br i1 %27, label %75, label %28

28:                                               ; preds = %21
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %72, %30 ]
  %32 = phi i64 [ %29, %28 ], [ %73, %30 ]
  %33 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %31
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %34, align 8, !alias.scope !113
  %35 = getelementptr inbounds i32, i32* %33, i64 4
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !113
  %37 = or i64 %31, 8
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %37
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !113
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !113
  %42 = or i64 %31, 16
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !113
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !113
  %47 = or i64 %31, 24
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !113
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !113
  %52 = or i64 %31, 32
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !113
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !113
  %57 = or i64 %31, 40
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !113
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !113
  %62 = or i64 %31, 48
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !113
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !113
  %67 = or i64 %31, 56
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !113
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !113
  %72 = add i64 %31, 64
  %73 = add i64 %32, -8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %30, !llvm.loop !116

75:                                               ; preds = %30, %21
  %76 = phi i64 [ 0, %21 ], [ %72, %30 ]
  %77 = icmp eq i64 %26, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %85, %78 ], [ %76, %75 ]
  %80 = phi i64 [ %86, %78 ], [ %26, %75 ]
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %79
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !113
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !113
  %85 = add i64 %79, 8
  %86 = add i64 %80, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %78, !llvm.loop !117

88:                                               ; preds = %78, %75
  %89 = icmp eq i64 %22, %19
  br i1 %89, label %97, label %90

90:                                               ; preds = %88, %17
  %91 = phi i64 [ 0, %17 ], [ %22, %88 ]
  br label %92

92:                                               ; preds = %90, %92
  %93 = phi i64 [ %95, %92 ], [ %91, %90 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %93
  store i32 1, i32* %94, align 4, !alias.scope !113
  %95 = add nuw nsw i64 %93, 1
  %96 = icmp eq i64 %95, %19
  br i1 %96, label %97, label %92, !llvm.loop !118

97:                                               ; preds = %92, %88, %13
  %98 = getelementptr inbounds %union.anon, %union.anon* %16, i64 0, i32 0
  %99 = bitcast %union.anon* %16 to i32*
  %100 = sext i32 %14 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %104 = bitcast %union.anon* %103 to i8*
  %105 = sext i32 %10 to i64
  %106 = shl nsw i64 %105, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %104, i64 %106, i1 false) #9
  %107 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %107) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 32, i1 false)
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %108, align 8, !alias.scope !119
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %110 = load i32, i32* %109, align 8, !noalias !119
  %111 = icmp sgt i32 %110, 5
  br i1 %111, label %112, label %113

112:                                              ; preds = %97
  tail call void @abort() #11, !noalias !119
  unreachable

113:                                              ; preds = %97
  store i32 5, i32* %108, align 8, !alias.scope !119
  %114 = sub i32 5, %110
  %115 = icmp sgt i32 %114, 0
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %117 = bitcast %union.anon* %116 to [5 x i32]*
  br i1 %115, label %118, label %197

118:                                              ; preds = %113
  %119 = zext i32 %114 to i64
  %120 = icmp ult i32 %114, 8
  br i1 %120, label %190, label %121

121:                                              ; preds = %118
  %122 = and i64 %119, 4294967288
  %123 = add nsw i64 %122, -8
  %124 = lshr exact i64 %123, 3
  %125 = add nuw nsw i64 %124, 1
  %126 = and i64 %125, 7
  %127 = icmp ult i64 %123, 56
  br i1 %127, label %175, label %128

128:                                              ; preds = %121
  %129 = sub nsw i64 %125, %126
  br label %130

130:                                              ; preds = %130, %128
  %131 = phi i64 [ 0, %128 ], [ %172, %130 ]
  %132 = phi i64 [ %129, %128 ], [ %173, %130 ]
  %133 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %131
  %134 = bitcast i32* %133 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %134, align 8, !alias.scope !119
  %135 = getelementptr inbounds i32, i32* %133, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %136, align 8, !alias.scope !119
  %137 = or i64 %131, 8
  %138 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %137
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %139, align 8, !alias.scope !119
  %140 = getelementptr inbounds i32, i32* %138, i64 4
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !119
  %142 = or i64 %131, 16
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %142
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !119
  %145 = getelementptr inbounds i32, i32* %143, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !119
  %147 = or i64 %131, 24
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %147
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !119
  %150 = getelementptr inbounds i32, i32* %148, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !119
  %152 = or i64 %131, 32
  %153 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !119
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !119
  %157 = or i64 %131, 40
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %157
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !119
  %160 = getelementptr inbounds i32, i32* %158, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !119
  %162 = or i64 %131, 48
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !119
  %165 = getelementptr inbounds i32, i32* %163, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !119
  %167 = or i64 %131, 56
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %167
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !119
  %170 = getelementptr inbounds i32, i32* %168, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !119
  %172 = add i64 %131, 64
  %173 = add i64 %132, -8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %130, !llvm.loop !122

175:                                              ; preds = %130, %121
  %176 = phi i64 [ 0, %121 ], [ %172, %130 ]
  %177 = icmp eq i64 %126, 0
  br i1 %177, label %188, label %178

178:                                              ; preds = %175, %178
  %179 = phi i64 [ %185, %178 ], [ %176, %175 ]
  %180 = phi i64 [ %186, %178 ], [ %126, %175 ]
  %181 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %179
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %182, align 8, !alias.scope !119
  %183 = getelementptr inbounds i32, i32* %181, i64 4
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %184, align 8, !alias.scope !119
  %185 = add i64 %179, 8
  %186 = add i64 %180, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %178, !llvm.loop !123

188:                                              ; preds = %178, %175
  %189 = icmp eq i64 %122, %119
  br i1 %189, label %197, label %190

190:                                              ; preds = %188, %118
  %191 = phi i64 [ 0, %118 ], [ %122, %188 ]
  br label %192

192:                                              ; preds = %190, %192
  %193 = phi i64 [ %195, %192 ], [ %191, %190 ]
  %194 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %193
  store i32 1, i32* %194, align 4, !alias.scope !119
  %195 = add nuw nsw i64 %193, 1
  %196 = icmp eq i64 %195, %119
  br i1 %196, label %197, label %192, !llvm.loop !124

197:                                              ; preds = %192, %188, %113
  %198 = getelementptr inbounds %union.anon, %union.anon* %116, i64 0, i32 0
  %199 = bitcast %union.anon* %116 to i32*
  %200 = sext i32 %114 to i64
  %201 = getelementptr inbounds i32, i32* %199, i64 %200
  %202 = bitcast i32* %201 to i8*
  %203 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %204 = bitcast %union.anon* %203 to i8*
  %205 = sext i32 %110 to i64
  %206 = shl nsw i64 %205, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %202, i8* align 4 %204, i64 %206, i1 false) #9
  %207 = bitcast %union.anon* %16 to [5 x i32]*
  %208 = load i32, i32* %8, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = load i32*, i32** %98, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 4
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 8
  %213 = bitcast i8* %212 to i32*
  %214 = select i1 %209, i32* %211, i32* %213
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 4
  store i32 %215, i32* %216, align 4
  %217 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 4
  store i32 1, i32* %217, align 4
  %218 = load i32, i32* %214, align 4
  %219 = getelementptr inbounds i32, i32* %210, i64 3
  %220 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %221 = bitcast i8* %220 to i32*
  %222 = select i1 %209, i32* %219, i32* %221
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 3
  store i32 %223, i32* %224, align 4
  %225 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 3
  store i32 %218, i32* %225, align 4
  %226 = load i32, i32* %222, align 4
  %227 = mul nsw i32 %226, %218
  %228 = getelementptr inbounds i32, i32* %210, i64 2
  %229 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %230 = bitcast [16 x i8]* %229 to i32*
  %231 = select i1 %209, i32* %228, i32* %230
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 2
  store i32 %232, i32* %233, align 4
  %234 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 2
  store i32 %227, i32* %234, align 4
  %235 = load i32, i32* %231, align 4
  %236 = mul nsw i32 %235, %227
  %237 = getelementptr inbounds i32, i32* %210, i64 1
  %238 = getelementptr inbounds [5 x i32], [5 x i32]* %207, i64 0, i64 1
  %239 = select i1 %209, i32* %237, i32* %238
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 1
  store i32 %240, i32* %241, align 4
  %242 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 1
  store i32 %236, i32* %242, align 4
  %243 = load i32, i32* %239, align 4
  %244 = mul nsw i32 %243, %236
  %245 = select i1 %209, i32* %210, i32* %99
  %246 = load i32, i32* %245, align 4
  %247 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 0
  store i32 %246, i32* %247, align 4
  %248 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 0
  store i32 %244, i32* %248, align 4
  %249 = load i32, i32* %108, align 8
  %250 = icmp sgt i32 %249, 5
  %251 = load i32*, i32** %198, align 8
  %252 = getelementptr inbounds i32, i32* %251, i64 4
  %253 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 8
  %254 = bitcast i8* %253 to i32*
  %255 = select i1 %250, i32* %252, i32* %254
  %256 = load i32, i32* %255, align 4
  %257 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 4
  store i32 %256, i32* %257, align 4
  %258 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 4
  store i32 1, i32* %258, align 4
  %259 = load i32, i32* %255, align 4
  %260 = getelementptr inbounds i32, i32* %251, i64 3
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %262 = bitcast i8* %261 to i32*
  %263 = select i1 %250, i32* %260, i32* %262
  %264 = load i32, i32* %263, align 4
  %265 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 3
  store i32 %264, i32* %265, align 4
  %266 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 3
  store i32 %259, i32* %266, align 4
  %267 = load i32, i32* %263, align 4
  %268 = mul nsw i32 %267, %259
  %269 = getelementptr inbounds i32, i32* %251, i64 2
  %270 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %271 = bitcast [16 x i8]* %270 to i32*
  %272 = select i1 %250, i32* %269, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 2
  store i32 %273, i32* %274, align 4
  %275 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 2
  store i32 %268, i32* %275, align 4
  %276 = load i32, i32* %272, align 4
  %277 = mul nsw i32 %276, %268
  %278 = getelementptr inbounds i32, i32* %251, i64 1
  %279 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 1
  %280 = select i1 %250, i32* %278, i32* %279
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 1
  store i32 %281, i32* %282, align 4
  %283 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 1
  store i32 %277, i32* %283, align 4
  %284 = load i32, i32* %280, align 4
  %285 = mul nsw i32 %284, %277
  %286 = select i1 %250, i32* %251, i32* %199
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 0
  store i32 %287, i32* %288, align 4
  %289 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 0
  store i32 %285, i32* %289, align 4
  %290 = bitcast %union.anon* %16 to i32*
  %291 = select i1 %209, i32* %210, i32* %290
  %292 = load i32, i32* %291, align 4
  %293 = bitcast %union.anon* %116 to i32*
  %294 = select i1 %250, i32* %251, i32* %293
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %292, %295
  br i1 %296, label %311, label %307

297:                                              ; preds = %361
  %298 = bitcast i32* %251 to i8*
  tail call void @_ZdaPv(i8* %298) #10
  br label %299

299:                                              ; preds = %361, %297
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #9
  br i1 %209, label %300, label %306

300:                                              ; preds = %299
  %301 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %302 = load i32*, i32** %301, align 8
  %303 = icmp eq i32* %302, null
  br i1 %303, label %306, label %304

304:                                              ; preds = %300
  %305 = bitcast i32* %302 to i8*
  tail call void @_ZdaPv(i8* %305) #10
  br label %306

306:                                              ; preds = %299, %300, %304
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void

307:                                              ; preds = %197
  %308 = icmp eq i32 %292, 1
  br i1 %308, label %309, label %310

309:                                              ; preds = %307
  store i32 0, i32* %248, align 4
  store i32 %295, i32* %247, align 4
  br label %311

310:                                              ; preds = %307
  store i32 0, i32* %289, align 4
  store i32 %292, i32* %288, align 4
  br label %311

311:                                              ; preds = %197, %309, %310
  %312 = load i32, i32* %239, align 4
  %313 = load i32, i32* %280, align 4
  %314 = icmp eq i32 %312, %313
  br i1 %314, label %319, label %315

315:                                              ; preds = %311
  %316 = icmp eq i32 %312, 1
  br i1 %316, label %318, label %317

317:                                              ; preds = %315
  store i32 0, i32* %283, align 4
  store i32 %312, i32* %282, align 4
  br label %319

318:                                              ; preds = %315
  store i32 0, i32* %242, align 4
  store i32 %313, i32* %241, align 4
  br label %319

319:                                              ; preds = %318, %317, %311
  %320 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %321 = bitcast [16 x i8]* %320 to i32*
  %322 = select i1 %209, i32* %228, i32* %321
  %323 = load i32, i32* %322, align 4
  %324 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %325 = bitcast [16 x i8]* %324 to i32*
  %326 = select i1 %250, i32* %269, i32* %325
  %327 = load i32, i32* %326, align 4
  %328 = icmp eq i32 %323, %327
  br i1 %328, label %333, label %329

329:                                              ; preds = %319
  %330 = icmp eq i32 %323, 1
  br i1 %330, label %332, label %331

331:                                              ; preds = %329
  store i32 0, i32* %275, align 4
  store i32 %323, i32* %274, align 4
  br label %333

332:                                              ; preds = %329
  store i32 0, i32* %234, align 4
  store i32 %327, i32* %233, align 4
  br label %333

333:                                              ; preds = %332, %331, %319
  %334 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %335 = bitcast i8* %334 to i32*
  %336 = select i1 %209, i32* %219, i32* %335
  %337 = load i32, i32* %336, align 4
  %338 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %339 = bitcast i8* %338 to i32*
  %340 = select i1 %250, i32* %260, i32* %339
  %341 = load i32, i32* %340, align 4
  %342 = icmp eq i32 %337, %341
  br i1 %342, label %347, label %343

343:                                              ; preds = %333
  %344 = icmp eq i32 %337, 1
  br i1 %344, label %346, label %345

345:                                              ; preds = %343
  store i32 0, i32* %266, align 4
  store i32 %337, i32* %265, align 4
  br label %347

346:                                              ; preds = %343
  store i32 0, i32* %225, align 4
  store i32 %341, i32* %224, align 4
  br label %347

347:                                              ; preds = %346, %345, %333
  %348 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 8
  %349 = bitcast i8* %348 to i32*
  %350 = select i1 %209, i32* %211, i32* %349
  %351 = load i32, i32* %350, align 4
  %352 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 8
  %353 = bitcast i8* %352 to i32*
  %354 = select i1 %250, i32* %252, i32* %353
  %355 = load i32, i32* %354, align 4
  %356 = icmp eq i32 %351, %355
  br i1 %356, label %361, label %357

357:                                              ; preds = %347
  %358 = icmp eq i32 %351, 1
  br i1 %358, label %360, label %359

359:                                              ; preds = %357
  store i32 0, i32* %258, align 4
  store i32 %351, i32* %257, align 4
  br label %361

360:                                              ; preds = %357
  store i32 0, i32* %217, align 4
  store i32 %355, i32* %216, align 4
  br label %361

361:                                              ; preds = %360, %359, %347
  %362 = xor i1 %250, true
  %363 = icmp eq i32* %251, null
  %364 = or i1 %363, %362
  br i1 %364, label %299, label %297
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIaPFaaaELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* dereferenceable(40), %class.anon* dereferenceable(56), i32*) local_unnamed_addr #0 comdat {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %158

7:                                                ; preds = %3
  %8 = getelementptr inbounds i32, i32* %2, i64 1
  %9 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 1
  %10 = getelementptr inbounds i32, i32* %2, i64 2
  %11 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 2
  %12 = getelementptr inbounds i32, i32* %2, i64 3
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 3
  %14 = getelementptr inbounds i32, i32* %2, i64 4
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 4
  %16 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 2
  %17 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 3
  %18 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 4
  %19 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 5
  %20 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 6
  %21 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 0
  %22 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 1
  br label %23

23:                                               ; preds = %7, %153
  %24 = phi i32 [ 0, %7 ], [ %155, %153 ]
  store i32 0, i32* %8, align 4
  %25 = load i32, i32* %9, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %153

27:                                               ; preds = %23, %146
  %28 = phi i32 [ %148, %146 ], [ 0, %23 ]
  store i32 0, i32* %10, align 4
  %29 = load i32, i32* %11, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %146

31:                                               ; preds = %27, %139
  %32 = phi i32 [ %141, %139 ], [ 0, %27 ]
  store i32 0, i32* %12, align 4
  %33 = load i32, i32* %13, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %139

35:                                               ; preds = %31, %132
  %36 = phi i32 [ %134, %132 ], [ 0, %31 ]
  store i32 0, i32* %14, align 4
  %37 = load i32, i32* %15, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %132

39:                                               ; preds = %35, %39
  %40 = phi i32 [ %128, %39 ], [ 0, %35 ]
  %41 = phi i32 [ %131, %39 ], [ %36, %35 ]
  %42 = load i8 (i8, i8)**, i8 (i8, i8)*** %16, align 8
  %43 = load i8 (i8, i8)*, i8 (i8, i8)** %42, align 8
  %44 = load i8**, i8*** %17, align 8
  %45 = load i8*, i8** %44, align 8
  %46 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %18, align 8
  %47 = load i32, i32* %2, align 4
  %48 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = mul nsw i32 %49, %47
  %51 = load i32, i32* %8, align 4
  %52 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 1
  %53 = load i32, i32* %52, align 4
  %54 = mul nsw i32 %53, %51
  %55 = add nsw i32 %54, %50
  %56 = load i32, i32* %10, align 4
  %57 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 2
  %58 = load i32, i32* %57, align 4
  %59 = mul nsw i32 %58, %56
  %60 = add nsw i32 %55, %59
  %61 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 3
  %62 = load i32, i32* %61, align 4
  %63 = mul nsw i32 %62, %41
  %64 = add nsw i32 %60, %63
  %65 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 4
  %66 = load i32, i32* %65, align 4
  %67 = mul nsw i32 %66, %40
  %68 = add nsw i32 %64, %67
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %45, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = load i8**, i8*** %19, align 8
  %73 = load i8*, i8** %72, align 8
  %74 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %20, align 8
  %75 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 0
  %76 = load i32, i32* %75, align 4
  %77 = mul nsw i32 %76, %47
  %78 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 1
  %79 = load i32, i32* %78, align 4
  %80 = mul nsw i32 %79, %51
  %81 = add nsw i32 %80, %77
  %82 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 2
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %83, %56
  %85 = add nsw i32 %81, %84
  %86 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 3
  %87 = load i32, i32* %86, align 4
  %88 = mul nsw i32 %87, %41
  %89 = add nsw i32 %85, %88
  %90 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 4
  %91 = load i32, i32* %90, align 4
  %92 = mul nsw i32 %91, %40
  %93 = add nsw i32 %89, %92
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %73, i64 %94
  %96 = load i8, i8* %95, align 1
  %97 = tail call signext i8 %43(i8 signext %71, i8 signext %96) #9
  %98 = load i8**, i8*** %21, align 8
  %99 = load i8*, i8** %98, align 8
  %100 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %22, align 8
  %101 = load i32, i32* %2, align 4
  %102 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 0
  %103 = load i32, i32* %102, align 4
  %104 = mul nsw i32 %103, %101
  %105 = load i32, i32* %8, align 4
  %106 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 1
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %105
  %109 = add nsw i32 %108, %104
  %110 = load i32, i32* %10, align 4
  %111 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 2
  %112 = load i32, i32* %111, align 4
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i32 %109, %113
  %115 = load i32, i32* %12, align 4
  %116 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 3
  %117 = load i32, i32* %116, align 4
  %118 = mul nsw i32 %117, %115
  %119 = add nsw i32 %114, %118
  %120 = load i32, i32* %14, align 4
  %121 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 4
  %122 = load i32, i32* %121, align 4
  %123 = mul nsw i32 %122, %120
  %124 = add nsw i32 %119, %123
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %99, i64 %125
  store i8 %97, i8* %126, align 1
  %127 = load i32, i32* %14, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %14, align 4
  %129 = load i32, i32* %15, align 4
  %130 = icmp slt i32 %128, %129
  %131 = load i32, i32* %12, align 4
  br i1 %130, label %39, label %132

132:                                              ; preds = %39, %35
  %133 = phi i32 [ %36, %35 ], [ %131, %39 ]
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %12, align 4
  %135 = load i32, i32* %13, align 4
  %136 = icmp slt i32 %134, %135
  br i1 %136, label %35, label %137

137:                                              ; preds = %132
  %138 = load i32, i32* %10, align 4
  br label %139

139:                                              ; preds = %137, %31
  %140 = phi i32 [ %138, %137 ], [ %32, %31 ]
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %10, align 4
  %142 = load i32, i32* %11, align 4
  %143 = icmp slt i32 %141, %142
  br i1 %143, label %31, label %144

144:                                              ; preds = %139
  %145 = load i32, i32* %8, align 4
  br label %146

146:                                              ; preds = %144, %27
  %147 = phi i32 [ %145, %144 ], [ %28, %27 ]
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %8, align 4
  %149 = load i32, i32* %9, align 4
  %150 = icmp slt i32 %148, %149
  br i1 %150, label %27, label %151

151:                                              ; preds = %146
  %152 = load i32, i32* %2, align 4
  br label %153

153:                                              ; preds = %151, %23
  %154 = phi i32 [ %152, %151 ], [ %24, %23 ]
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %2, align 4
  %156 = load i32, i32* %4, align 4
  %157 = icmp slt i32 %155, %156
  br i1 %157, label %23, label %158

158:                                              ; preds = %153, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EfNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !125
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !125
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !125
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !125
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !125
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !125
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to float**
  %40 = load float*, float** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi float* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !128
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !128
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !128
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !128
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !128
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !128
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to float**
  %76 = load float*, float** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi float* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !131
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !131
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !131
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !131
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !131
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !131
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to float**
  %112 = load float*, float** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi float* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIfPFfffELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, float* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, float* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, float* %114, float (float, float)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIfEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EhNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !134
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !134
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !134
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !134
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !134
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !134
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi i8* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !137
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !137
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !137
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !137
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !137
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !137
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi i8* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !140
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !140
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !140
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !140
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !140
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !140
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to i8**
  %112 = load i8*, i8** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi i8* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIhPFhhhELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i8* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i8* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i8* %114, i8 (i8, i8)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIhEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EaNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !143
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !143
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !143
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !143
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !143
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !143
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi i8* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !146
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !146
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !146
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !146
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !146
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !146
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi i8* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !149
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !149
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !149
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !149
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !149
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !149
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to i8**
  %112 = load i8*, i8** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi i8* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIaPFaaaELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i8* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i8* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i8* %114, i8 (i8, i8)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIaEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EiNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !152
  br label %40

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !152
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !152
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !152
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !152
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !152
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1, i32 0
  %39 = load i32*, i32** %38, align 8
  br label %40

40:                                               ; preds = %11, %33
  %41 = phi i32* [ %39, %33 ], [ null, %11 ]
  %42 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #9
  %43 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %44 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %43, align 8
  %45 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %47, align 8, !alias.scope !155
  br label %75

48:                                               ; preds = %40
  %49 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %50 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %49, align 8, !noalias !155
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 0
  %52 = load i32, i32* %51, align 4, !noalias !155
  %53 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 0
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %52, i32* %54, align 8, !alias.scope !155
  %55 = icmp sgt i32 %52, 5
  br i1 %55, label %56, label %63

56:                                               ; preds = %48
  %57 = sext i32 %52 to i64
  %58 = shl nsw i64 %57, 2
  %59 = tail call i8* @_Znam(i64 %58) #10, !noalias !155
  %60 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %61 = bitcast i32** %60 to i8**
  store i8* %59, i8** %61, align 8, !alias.scope !155
  %62 = bitcast i8* %59 to i32*
  br label %68

63:                                               ; preds = %48
  %64 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %65 = bitcast %union.anon* %64 to i32*
  %66 = sext i32 %52 to i64
  %67 = shl nsw i64 %66, 2
  br label %68

68:                                               ; preds = %63, %56
  %69 = phi i64 [ %58, %56 ], [ %67, %63 ]
  %70 = phi i32* [ %62, %56 ], [ %65, %63 ]
  %71 = bitcast i32* %70 to i8*
  %72 = bitcast i32* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %72, i64 %69, i1 false) #9
  %73 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1, i32 0
  %74 = load i32*, i32** %73, align 8
  br label %75

75:                                               ; preds = %46, %68
  %76 = phi i32* [ %74, %68 ], [ null, %46 ]
  %77 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %77) #9
  %78 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %79 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %78, align 8
  %80 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %82, align 8, !alias.scope !158
  br label %110

83:                                               ; preds = %75
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %84, align 8, !noalias !158
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 4, !noalias !158
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 0
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %87, i32* %89, align 8, !alias.scope !158
  %90 = icmp sgt i32 %87, 5
  br i1 %90, label %91, label %98

91:                                               ; preds = %83
  %92 = sext i32 %87 to i64
  %93 = shl nsw i64 %92, 2
  %94 = tail call i8* @_Znam(i64 %93) #10, !noalias !158
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %96 = bitcast i32** %95 to i8**
  store i8* %94, i8** %96, align 8, !alias.scope !158
  %97 = bitcast i8* %94 to i32*
  br label %103

98:                                               ; preds = %83
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %100 = bitcast %union.anon* %99 to i32*
  %101 = sext i32 %87 to i64
  %102 = shl nsw i64 %101, 2
  br label %103

103:                                              ; preds = %98, %91
  %104 = phi i64 [ %93, %91 ], [ %102, %98 ]
  %105 = phi i32* [ %97, %91 ], [ %100, %98 ]
  %106 = bitcast i32* %105 to i8*
  %107 = bitcast i32* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 %104, i1 false) #9
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1, i32 0
  %109 = load i32*, i32** %108, align 8
  br label %110

110:                                              ; preds = %81, %103
  %111 = phi i32* [ %109, %103 ], [ null, %81 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIiPFiiiELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i32* %41, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i32* %76, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i32* %111, i32 (i32, i32)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIiEET_S5_S5_)
  %112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp sgt i32 %113, 5
  br i1 %114, label %115, label %121

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %117 = load i32*, i32** %116, align 8
  %118 = icmp eq i32* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %115
  %120 = bitcast i32* %117 to i8*
  call void @_ZdaPv(i8* %120) #10
  br label %121

121:                                              ; preds = %110, %115, %119
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %77) #9
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = icmp sgt i32 %123, 5
  br i1 %124, label %125, label %131

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = icmp eq i32* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %125
  %130 = bitcast i32* %127 to i8*
  call void @_ZdaPv(i8* %130) #10
  br label %131

131:                                              ; preds = %121, %125, %129
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #9
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %133 = load i32, i32* %132, align 8
  %134 = icmp sgt i32 %133, 5
  br i1 %134, label %135, label %141

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %137 = load i32*, i32** %136, align 8
  %138 = icmp eq i32* %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %135
  %140 = bitcast i32* %137 to i8*
  call void @_ZdaPv(i8* %140) #10
  br label %141

141:                                              ; preds = %131, %135, %139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0ElNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !161
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !161
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !161
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !161
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !161
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !161
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to i64**
  %40 = load i64*, i64** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi i64* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !164
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !164
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !164
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !164
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !164
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !164
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to i64**
  %76 = load i64*, i64** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi i64* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !167
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !167
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !167
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !167
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !167
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !167
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to i64**
  %112 = load i64*, i64** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi i64* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIlPFlllELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i64* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i64* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i64* %114, i64 (i64, i64)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIlEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EsNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !170
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !170
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !170
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !170
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !170
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !170
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to i16**
  %40 = load i16*, i16** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi i16* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !173
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !173
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !173
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !173
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !173
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !173
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to i16**
  %76 = load i16*, i16** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi i16* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !176
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !176
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !176
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !176
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !176
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !176
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to i16**
  %112 = load i16*, i16** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi i16* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIsPFsssELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i16* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i16* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i16* %114, i16 (i16, i16)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIsEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIfPFfffELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, float (float, float)*) local_unnamed_addr #0 comdat {
  %8 = alloca [5 x i32], align 16
  %9 = alloca float*, align 8
  %10 = alloca float*, align 8
  %11 = alloca float*, align 8
  %12 = alloca float (float, float)*, align 8
  %13 = alloca %"struct.tflite::NdArrayDesc", align 4
  %14 = alloca %"struct.tflite::NdArrayDesc", align 4
  %15 = alloca %"struct.tflite::NdArrayDesc", align 4
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %class.anon.2, align 8
  store float* %1, float** %9, align 8
  store float* %3, float** %10, align 8
  store float* %5, float** %11, align 8
  store float (float, float)* %6, float (float, float)** %12, align 8
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %390

23:                                               ; preds = %7
  %24 = icmp sgt i32 %19, 5
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %union.anon, %union.anon* %25, i64 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = bitcast %union.anon* %25 to i32*
  %29 = select i1 %24, i32* %27, i32* %28
  %30 = bitcast i32* %29 to i8*
  %31 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 1
  %32 = getelementptr inbounds %union.anon, %union.anon* %31, i64 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = bitcast %union.anon* %31 to i32*
  %35 = select i1 %24, i32* %33, i32* %34
  %36 = bitcast i32* %35 to i8*
  %37 = sext i32 %19 to i64
  %38 = shl nsw i64 %37, 2
  %39 = tail call i32 @bcmp(i8* %30, i8* %36, i64 %38) #9
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %390

41:                                               ; preds = %23
  br i1 %24, label %44, label %42

42:                                               ; preds = %41
  %43 = icmp sgt i32 %19, 0
  br i1 %43, label %44, label %248

44:                                               ; preds = %41, %42
  %45 = phi i32* [ %28, %42 ], [ %27, %41 ]
  %46 = zext i32 %19 to i64
  %47 = icmp ult i32 %19, 8
  br i1 %47, label %133, label %48

48:                                               ; preds = %44
  %49 = and i64 %46, 4294967288
  %50 = add nsw i64 %49, -8
  %51 = lshr exact i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = and i64 %52, 3
  %54 = icmp ult i64 %50, 24
  br i1 %54, label %100, label %55

55:                                               ; preds = %48
  %56 = sub nsw i64 %52, %53
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %97, %57 ]
  %59 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %55 ], [ %95, %57 ]
  %60 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %55 ], [ %96, %57 ]
  %61 = phi i64 [ %56, %55 ], [ %98, %57 ]
  %62 = getelementptr inbounds i32, i32* %45, i64 %58
  %63 = bitcast i32* %62 to <4 x i32>*
  %64 = load <4 x i32>, <4 x i32>* %63, align 4
  %65 = getelementptr inbounds i32, i32* %62, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  %67 = load <4 x i32>, <4 x i32>* %66, align 4
  %68 = mul nsw <4 x i32> %64, %59
  %69 = mul nsw <4 x i32> %67, %60
  %70 = or i64 %58, 8
  %71 = getelementptr inbounds i32, i32* %45, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  %73 = load <4 x i32>, <4 x i32>* %72, align 4
  %74 = getelementptr inbounds i32, i32* %71, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  %76 = load <4 x i32>, <4 x i32>* %75, align 4
  %77 = mul nsw <4 x i32> %73, %68
  %78 = mul nsw <4 x i32> %76, %69
  %79 = or i64 %58, 16
  %80 = getelementptr inbounds i32, i32* %45, i64 %79
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4
  %83 = getelementptr inbounds i32, i32* %80, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4
  %86 = mul nsw <4 x i32> %82, %77
  %87 = mul nsw <4 x i32> %85, %78
  %88 = or i64 %58, 24
  %89 = getelementptr inbounds i32, i32* %45, i64 %88
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4
  %92 = getelementptr inbounds i32, i32* %89, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4
  %95 = mul nsw <4 x i32> %91, %86
  %96 = mul nsw <4 x i32> %94, %87
  %97 = add i64 %58, 32
  %98 = add i64 %61, -4
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %57, !llvm.loop !179

100:                                              ; preds = %57, %48
  %101 = phi <4 x i32> [ undef, %48 ], [ %95, %57 ]
  %102 = phi <4 x i32> [ undef, %48 ], [ %96, %57 ]
  %103 = phi i64 [ 0, %48 ], [ %97, %57 ]
  %104 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %48 ], [ %95, %57 ]
  %105 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %48 ], [ %96, %57 ]
  %106 = icmp eq i64 %53, 0
  br i1 %106, label %123, label %107

107:                                              ; preds = %100, %107
  %108 = phi i64 [ %120, %107 ], [ %103, %100 ]
  %109 = phi <4 x i32> [ %118, %107 ], [ %104, %100 ]
  %110 = phi <4 x i32> [ %119, %107 ], [ %105, %100 ]
  %111 = phi i64 [ %121, %107 ], [ %53, %100 ]
  %112 = getelementptr inbounds i32, i32* %45, i64 %108
  %113 = bitcast i32* %112 to <4 x i32>*
  %114 = load <4 x i32>, <4 x i32>* %113, align 4
  %115 = getelementptr inbounds i32, i32* %112, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  %117 = load <4 x i32>, <4 x i32>* %116, align 4
  %118 = mul nsw <4 x i32> %114, %109
  %119 = mul nsw <4 x i32> %117, %110
  %120 = add i64 %108, 8
  %121 = add i64 %111, -1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %107, !llvm.loop !180

123:                                              ; preds = %107, %100
  %124 = phi <4 x i32> [ %101, %100 ], [ %118, %107 ]
  %125 = phi <4 x i32> [ %102, %100 ], [ %119, %107 ]
  %126 = mul <4 x i32> %125, %124
  %127 = shufflevector <4 x i32> %126, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %128 = mul <4 x i32> %126, %127
  %129 = shufflevector <4 x i32> %128, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %130 = mul <4 x i32> %128, %129
  %131 = extractelement <4 x i32> %130, i32 0
  %132 = icmp eq i64 %49, %46
  br i1 %132, label %144, label %133

133:                                              ; preds = %123, %44
  %134 = phi i64 [ 0, %44 ], [ %49, %123 ]
  %135 = phi i32 [ 1, %44 ], [ %131, %123 ]
  br label %136

136:                                              ; preds = %133, %136
  %137 = phi i64 [ %142, %136 ], [ %134, %133 ]
  %138 = phi i32 [ %141, %136 ], [ %135, %133 ]
  %139 = getelementptr inbounds i32, i32* %45, i64 %137
  %140 = load i32, i32* %139, align 4
  %141 = mul nsw i32 %140, %138
  %142 = add nuw nsw i64 %137, 1
  %143 = icmp eq i64 %142, %46
  br i1 %143, label %144, label %136, !llvm.loop !181

144:                                              ; preds = %136, %123
  %145 = phi i32 [ %131, %123 ], [ %141, %136 ]
  br i1 %24, label %148, label %146

146:                                              ; preds = %144
  %147 = icmp sgt i32 %19, 0
  br i1 %147, label %148, label %248

148:                                              ; preds = %144, %146
  %149 = phi i32* [ %34, %146 ], [ %33, %144 ]
  %150 = zext i32 %19 to i64
  %151 = icmp ult i32 %19, 8
  br i1 %151, label %237, label %152

152:                                              ; preds = %148
  %153 = and i64 %46, 4294967288
  %154 = add nsw i64 %153, -8
  %155 = lshr exact i64 %154, 3
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 3
  %158 = icmp ult i64 %154, 24
  br i1 %158, label %204, label %159

159:                                              ; preds = %152
  %160 = sub nsw i64 %156, %157
  br label %161

161:                                              ; preds = %161, %159
  %162 = phi i64 [ 0, %159 ], [ %201, %161 ]
  %163 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %159 ], [ %199, %161 ]
  %164 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %159 ], [ %200, %161 ]
  %165 = phi i64 [ %160, %159 ], [ %202, %161 ]
  %166 = getelementptr inbounds i32, i32* %149, i64 %162
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = getelementptr inbounds i32, i32* %166, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4
  %172 = mul nsw <4 x i32> %168, %163
  %173 = mul nsw <4 x i32> %171, %164
  %174 = or i64 %162, 8
  %175 = getelementptr inbounds i32, i32* %149, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = getelementptr inbounds i32, i32* %175, i64 4
  %179 = bitcast i32* %178 to <4 x i32>*
  %180 = load <4 x i32>, <4 x i32>* %179, align 4
  %181 = mul nsw <4 x i32> %177, %172
  %182 = mul nsw <4 x i32> %180, %173
  %183 = or i64 %162, 16
  %184 = getelementptr inbounds i32, i32* %149, i64 %183
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 4
  %187 = getelementptr inbounds i32, i32* %184, i64 4
  %188 = bitcast i32* %187 to <4 x i32>*
  %189 = load <4 x i32>, <4 x i32>* %188, align 4
  %190 = mul nsw <4 x i32> %186, %181
  %191 = mul nsw <4 x i32> %189, %182
  %192 = or i64 %162, 24
  %193 = getelementptr inbounds i32, i32* %149, i64 %192
  %194 = bitcast i32* %193 to <4 x i32>*
  %195 = load <4 x i32>, <4 x i32>* %194, align 4
  %196 = getelementptr inbounds i32, i32* %193, i64 4
  %197 = bitcast i32* %196 to <4 x i32>*
  %198 = load <4 x i32>, <4 x i32>* %197, align 4
  %199 = mul nsw <4 x i32> %195, %190
  %200 = mul nsw <4 x i32> %198, %191
  %201 = add i64 %162, 32
  %202 = add i64 %165, -4
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %161, !llvm.loop !182

204:                                              ; preds = %161, %152
  %205 = phi <4 x i32> [ undef, %152 ], [ %199, %161 ]
  %206 = phi <4 x i32> [ undef, %152 ], [ %200, %161 ]
  %207 = phi i64 [ 0, %152 ], [ %201, %161 ]
  %208 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %152 ], [ %199, %161 ]
  %209 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %152 ], [ %200, %161 ]
  %210 = icmp eq i64 %157, 0
  br i1 %210, label %227, label %211

211:                                              ; preds = %204, %211
  %212 = phi i64 [ %224, %211 ], [ %207, %204 ]
  %213 = phi <4 x i32> [ %222, %211 ], [ %208, %204 ]
  %214 = phi <4 x i32> [ %223, %211 ], [ %209, %204 ]
  %215 = phi i64 [ %225, %211 ], [ %157, %204 ]
  %216 = getelementptr inbounds i32, i32* %149, i64 %212
  %217 = bitcast i32* %216 to <4 x i32>*
  %218 = load <4 x i32>, <4 x i32>* %217, align 4
  %219 = getelementptr inbounds i32, i32* %216, i64 4
  %220 = bitcast i32* %219 to <4 x i32>*
  %221 = load <4 x i32>, <4 x i32>* %220, align 4
  %222 = mul nsw <4 x i32> %218, %213
  %223 = mul nsw <4 x i32> %221, %214
  %224 = add i64 %212, 8
  %225 = add i64 %215, -1
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %211, !llvm.loop !183

227:                                              ; preds = %211, %204
  %228 = phi <4 x i32> [ %205, %204 ], [ %222, %211 ]
  %229 = phi <4 x i32> [ %206, %204 ], [ %223, %211 ]
  %230 = mul <4 x i32> %229, %228
  %231 = shufflevector <4 x i32> %230, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %232 = mul <4 x i32> %230, %231
  %233 = shufflevector <4 x i32> %232, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %234 = mul <4 x i32> %232, %233
  %235 = extractelement <4 x i32> %234, i32 0
  %236 = icmp eq i64 %153, %46
  br i1 %236, label %248, label %237

237:                                              ; preds = %227, %148
  %238 = phi i64 [ 0, %148 ], [ %153, %227 ]
  %239 = phi i32 [ 1, %148 ], [ %235, %227 ]
  br label %240

240:                                              ; preds = %237, %240
  %241 = phi i64 [ %246, %240 ], [ %238, %237 ]
  %242 = phi i32 [ %245, %240 ], [ %239, %237 ]
  %243 = getelementptr inbounds i32, i32* %149, i64 %241
  %244 = load i32, i32* %243, align 4
  %245 = mul nsw i32 %244, %242
  %246 = add nuw nsw i64 %241, 1
  %247 = icmp eq i64 %246, %150
  br i1 %247, label %248, label %240, !llvm.loop !184

248:                                              ; preds = %240, %227, %42, %146
  %249 = phi i32 [ %145, %146 ], [ 1, %42 ], [ %145, %227 ], [ %145, %240 ]
  %250 = phi i32 [ 1, %146 ], [ 1, %42 ], [ %235, %227 ], [ %245, %240 ]
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %252 = load i32, i32* %251, align 8
  %253 = icmp sgt i32 %252, 5
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  br i1 %253, label %255, label %258

255:                                              ; preds = %248
  %256 = getelementptr inbounds %union.anon, %union.anon* %254, i64 0, i32 0
  %257 = load i32*, i32** %256, align 8
  br label %261

258:                                              ; preds = %248
  %259 = bitcast %union.anon* %254 to i32*
  %260 = icmp sgt i32 %252, 0
  br i1 %260, label %261, label %361

261:                                              ; preds = %258, %255
  %262 = phi i32* [ %257, %255 ], [ %259, %258 ]
  %263 = zext i32 %252 to i64
  %264 = icmp ult i32 %252, 8
  br i1 %264, label %350, label %265

265:                                              ; preds = %261
  %266 = and i64 %263, 4294967288
  %267 = add nsw i64 %266, -8
  %268 = lshr exact i64 %267, 3
  %269 = add nuw nsw i64 %268, 1
  %270 = and i64 %269, 3
  %271 = icmp ult i64 %267, 24
  br i1 %271, label %317, label %272

272:                                              ; preds = %265
  %273 = sub nsw i64 %269, %270
  br label %274

274:                                              ; preds = %274, %272
  %275 = phi i64 [ 0, %272 ], [ %314, %274 ]
  %276 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %272 ], [ %312, %274 ]
  %277 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %272 ], [ %313, %274 ]
  %278 = phi i64 [ %273, %272 ], [ %315, %274 ]
  %279 = getelementptr inbounds i32, i32* %262, i64 %275
  %280 = bitcast i32* %279 to <4 x i32>*
  %281 = load <4 x i32>, <4 x i32>* %280, align 4
  %282 = getelementptr inbounds i32, i32* %279, i64 4
  %283 = bitcast i32* %282 to <4 x i32>*
  %284 = load <4 x i32>, <4 x i32>* %283, align 4
  %285 = mul nsw <4 x i32> %281, %276
  %286 = mul nsw <4 x i32> %284, %277
  %287 = or i64 %275, 8
  %288 = getelementptr inbounds i32, i32* %262, i64 %287
  %289 = bitcast i32* %288 to <4 x i32>*
  %290 = load <4 x i32>, <4 x i32>* %289, align 4
  %291 = getelementptr inbounds i32, i32* %288, i64 4
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4
  %294 = mul nsw <4 x i32> %290, %285
  %295 = mul nsw <4 x i32> %293, %286
  %296 = or i64 %275, 16
  %297 = getelementptr inbounds i32, i32* %262, i64 %296
  %298 = bitcast i32* %297 to <4 x i32>*
  %299 = load <4 x i32>, <4 x i32>* %298, align 4
  %300 = getelementptr inbounds i32, i32* %297, i64 4
  %301 = bitcast i32* %300 to <4 x i32>*
  %302 = load <4 x i32>, <4 x i32>* %301, align 4
  %303 = mul nsw <4 x i32> %299, %294
  %304 = mul nsw <4 x i32> %302, %295
  %305 = or i64 %275, 24
  %306 = getelementptr inbounds i32, i32* %262, i64 %305
  %307 = bitcast i32* %306 to <4 x i32>*
  %308 = load <4 x i32>, <4 x i32>* %307, align 4
  %309 = getelementptr inbounds i32, i32* %306, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4
  %312 = mul nsw <4 x i32> %308, %303
  %313 = mul nsw <4 x i32> %311, %304
  %314 = add i64 %275, 32
  %315 = add i64 %278, -4
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %274, !llvm.loop !185

317:                                              ; preds = %274, %265
  %318 = phi <4 x i32> [ undef, %265 ], [ %312, %274 ]
  %319 = phi <4 x i32> [ undef, %265 ], [ %313, %274 ]
  %320 = phi i64 [ 0, %265 ], [ %314, %274 ]
  %321 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %265 ], [ %312, %274 ]
  %322 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %265 ], [ %313, %274 ]
  %323 = icmp eq i64 %270, 0
  br i1 %323, label %340, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %337, %324 ], [ %320, %317 ]
  %326 = phi <4 x i32> [ %335, %324 ], [ %321, %317 ]
  %327 = phi <4 x i32> [ %336, %324 ], [ %322, %317 ]
  %328 = phi i64 [ %338, %324 ], [ %270, %317 ]
  %329 = getelementptr inbounds i32, i32* %262, i64 %325
  %330 = bitcast i32* %329 to <4 x i32>*
  %331 = load <4 x i32>, <4 x i32>* %330, align 4
  %332 = getelementptr inbounds i32, i32* %329, i64 4
  %333 = bitcast i32* %332 to <4 x i32>*
  %334 = load <4 x i32>, <4 x i32>* %333, align 4
  %335 = mul nsw <4 x i32> %331, %326
  %336 = mul nsw <4 x i32> %334, %327
  %337 = add i64 %325, 8
  %338 = add i64 %328, -1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %324, !llvm.loop !186

340:                                              ; preds = %324, %317
  %341 = phi <4 x i32> [ %318, %317 ], [ %335, %324 ]
  %342 = phi <4 x i32> [ %319, %317 ], [ %336, %324 ]
  %343 = mul <4 x i32> %342, %341
  %344 = shufflevector <4 x i32> %343, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %345 = mul <4 x i32> %343, %344
  %346 = shufflevector <4 x i32> %345, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %347 = mul <4 x i32> %345, %346
  %348 = extractelement <4 x i32> %347, i32 0
  %349 = icmp eq i64 %266, %263
  br i1 %349, label %361, label %350

350:                                              ; preds = %340, %261
  %351 = phi i64 [ 0, %261 ], [ %266, %340 ]
  %352 = phi i32 [ 1, %261 ], [ %348, %340 ]
  br label %353

353:                                              ; preds = %350, %353
  %354 = phi i64 [ %359, %353 ], [ %351, %350 ]
  %355 = phi i32 [ %358, %353 ], [ %352, %350 ]
  %356 = getelementptr inbounds i32, i32* %262, i64 %354
  %357 = load i32, i32* %356, align 4
  %358 = mul nsw i32 %357, %355
  %359 = add nuw nsw i64 %354, 1
  %360 = icmp eq i64 %359, %263
  br i1 %360, label %361, label %353, !llvm.loop !187

361:                                              ; preds = %353, %340, %258
  %362 = phi i32 [ 1, %258 ], [ %348, %340 ], [ %358, %353 ]
  %363 = icmp eq i32 %249, %250
  br i1 %363, label %365, label %364

364:                                              ; preds = %361
  tail call void @abort() #11
  unreachable

365:                                              ; preds = %361
  %366 = icmp eq i32 %249, %362
  br i1 %366, label %367, label %375

367:                                              ; preds = %365
  %368 = icmp sgt i32 %249, 0
  br i1 %368, label %369, label %551

369:                                              ; preds = %367
  %370 = zext i32 %249 to i64
  %371 = load float, float* %1, align 4
  %372 = load float, float* %3, align 4
  %373 = tail call float %6(float %371, float %372) #9
  store float %373, float* %5, align 4
  %374 = icmp eq i32 %249, 1
  br i1 %374, label %551, label %376

375:                                              ; preds = %365
  tail call void @abort() #11
  unreachable

376:                                              ; preds = %369, %376
  %377 = phi i64 [ %388, %376 ], [ 1, %369 ]
  %378 = load float (float, float)*, float (float, float)** %12, align 8
  %379 = load float*, float** %9, align 8
  %380 = load float*, float** %10, align 8
  %381 = load float*, float** %11, align 8
  %382 = getelementptr inbounds float, float* %379, i64 %377
  %383 = load float, float* %382, align 4
  %384 = getelementptr inbounds float, float* %380, i64 %377
  %385 = load float, float* %384, align 4
  %386 = tail call float %378(float %383, float %385) #9
  %387 = getelementptr inbounds float, float* %381, i64 %377
  store float %386, float* %387, align 4
  %388 = add nuw nsw i64 %377, 1
  %389 = icmp eq i64 %388, %370
  br i1 %389, label %551, label %376

390:                                              ; preds = %7, %23
  %391 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %392 = bitcast %"struct.tflite::NdArrayDesc"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %392) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %392, i8 -86, i64 40, i1 false)
  %393 = bitcast %"struct.tflite::NdArrayDesc"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %393) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %393, i8 -86, i64 40, i1 false)
  %394 = bitcast %"struct.tflite::NdArrayDesc"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %394) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %394, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %2, %"struct.tflite::NdArrayDesc"* nonnull %13, %"struct.tflite::NdArrayDesc"* nonnull %14)
  %395 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %395) #9
  %396 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %396, align 8, !alias.scope !188
  %397 = load i32, i32* %391, align 8, !noalias !188
  %398 = icmp sgt i32 %397, 5
  br i1 %398, label %399, label %400

399:                                              ; preds = %390
  call void @abort() #11, !noalias !188
  unreachable

400:                                              ; preds = %390
  store i32 5, i32* %396, align 8, !alias.scope !188
  %401 = sub i32 5, %397
  %402 = icmp sgt i32 %401, 0
  %403 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %404 = bitcast %union.anon* %403 to [5 x i32]*
  br i1 %402, label %405, label %484

405:                                              ; preds = %400
  %406 = zext i32 %401 to i64
  %407 = icmp ult i32 %401, 8
  br i1 %407, label %477, label %408

408:                                              ; preds = %405
  %409 = and i64 %406, 4294967288
  %410 = add nsw i64 %409, -8
  %411 = lshr exact i64 %410, 3
  %412 = add nuw nsw i64 %411, 1
  %413 = and i64 %412, 7
  %414 = icmp ult i64 %410, 56
  br i1 %414, label %462, label %415

415:                                              ; preds = %408
  %416 = sub nsw i64 %412, %413
  br label %417

417:                                              ; preds = %417, %415
  %418 = phi i64 [ 0, %415 ], [ %459, %417 ]
  %419 = phi i64 [ %416, %415 ], [ %460, %417 ]
  %420 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %418
  %421 = bitcast i32* %420 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %421, align 8, !alias.scope !188
  %422 = getelementptr inbounds i32, i32* %420, i64 4
  %423 = bitcast i32* %422 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %423, align 8, !alias.scope !188
  %424 = or i64 %418, 8
  %425 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %424
  %426 = bitcast i32* %425 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %426, align 8, !alias.scope !188
  %427 = getelementptr inbounds i32, i32* %425, i64 4
  %428 = bitcast i32* %427 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %428, align 8, !alias.scope !188
  %429 = or i64 %418, 16
  %430 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %429
  %431 = bitcast i32* %430 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %431, align 8, !alias.scope !188
  %432 = getelementptr inbounds i32, i32* %430, i64 4
  %433 = bitcast i32* %432 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %433, align 8, !alias.scope !188
  %434 = or i64 %418, 24
  %435 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %434
  %436 = bitcast i32* %435 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %436, align 8, !alias.scope !188
  %437 = getelementptr inbounds i32, i32* %435, i64 4
  %438 = bitcast i32* %437 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %438, align 8, !alias.scope !188
  %439 = or i64 %418, 32
  %440 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %439
  %441 = bitcast i32* %440 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %441, align 8, !alias.scope !188
  %442 = getelementptr inbounds i32, i32* %440, i64 4
  %443 = bitcast i32* %442 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %443, align 8, !alias.scope !188
  %444 = or i64 %418, 40
  %445 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %444
  %446 = bitcast i32* %445 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %446, align 8, !alias.scope !188
  %447 = getelementptr inbounds i32, i32* %445, i64 4
  %448 = bitcast i32* %447 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %448, align 8, !alias.scope !188
  %449 = or i64 %418, 48
  %450 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %449
  %451 = bitcast i32* %450 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %451, align 8, !alias.scope !188
  %452 = getelementptr inbounds i32, i32* %450, i64 4
  %453 = bitcast i32* %452 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %453, align 8, !alias.scope !188
  %454 = or i64 %418, 56
  %455 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %454
  %456 = bitcast i32* %455 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %456, align 8, !alias.scope !188
  %457 = getelementptr inbounds i32, i32* %455, i64 4
  %458 = bitcast i32* %457 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %458, align 8, !alias.scope !188
  %459 = add i64 %418, 64
  %460 = add i64 %419, -8
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %462, label %417, !llvm.loop !191

462:                                              ; preds = %417, %408
  %463 = phi i64 [ 0, %408 ], [ %459, %417 ]
  %464 = icmp eq i64 %413, 0
  br i1 %464, label %475, label %465

465:                                              ; preds = %462, %465
  %466 = phi i64 [ %472, %465 ], [ %463, %462 ]
  %467 = phi i64 [ %473, %465 ], [ %413, %462 ]
  %468 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %466
  %469 = bitcast i32* %468 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %469, align 8, !alias.scope !188
  %470 = getelementptr inbounds i32, i32* %468, i64 4
  %471 = bitcast i32* %470 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %471, align 8, !alias.scope !188
  %472 = add i64 %466, 8
  %473 = add i64 %467, -1
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %465, !llvm.loop !192

475:                                              ; preds = %465, %462
  %476 = icmp eq i64 %409, %406
  br i1 %476, label %484, label %477

477:                                              ; preds = %475, %405
  %478 = phi i64 [ 0, %405 ], [ %409, %475 ]
  br label %479

479:                                              ; preds = %477, %479
  %480 = phi i64 [ %482, %479 ], [ %478, %477 ]
  %481 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %480
  store i32 1, i32* %481, align 4, !alias.scope !188
  %482 = add nuw nsw i64 %480, 1
  %483 = icmp eq i64 %482, %406
  br i1 %483, label %484, label %479, !llvm.loop !193

484:                                              ; preds = %479, %475, %400
  %485 = getelementptr inbounds %union.anon, %union.anon* %403, i64 0, i32 0
  %486 = bitcast %union.anon* %403 to i32*
  %487 = sext i32 %401 to i64
  %488 = getelementptr inbounds i32, i32* %486, i64 %487
  %489 = bitcast i32* %488 to i8*
  %490 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %491 = bitcast %union.anon* %490 to i8*
  %492 = sext i32 %397 to i64
  %493 = shl nsw i64 %492, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %489, i8* align 4 %491, i64 %493, i1 false) #9
  %494 = load i32, i32* %396, align 8
  %495 = icmp sgt i32 %494, 5
  %496 = load i32*, i32** %485, align 8
  %497 = getelementptr inbounds i32, i32* %496, i64 4
  %498 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1, i64 8
  %499 = bitcast i8* %498 to i32*
  %500 = select i1 %495, i32* %497, i32* %499
  %501 = load i32, i32* %500, align 4
  %502 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 4
  store i32 %501, i32* %502, align 4
  %503 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 4
  store i32 1, i32* %503, align 4
  %504 = load i32, i32* %500, align 4
  %505 = getelementptr inbounds i32, i32* %496, i64 3
  %506 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1, i64 4
  %507 = bitcast i8* %506 to i32*
  %508 = select i1 %495, i32* %505, i32* %507
  %509 = load i32, i32* %508, align 4
  %510 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 3
  store i32 %509, i32* %510, align 4
  %511 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 3
  store i32 %504, i32* %511, align 4
  %512 = load i32, i32* %508, align 4
  %513 = mul nsw i32 %512, %504
  %514 = getelementptr inbounds i32, i32* %496, i64 2
  %515 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1
  %516 = bitcast [16 x i8]* %515 to i32*
  %517 = select i1 %495, i32* %514, i32* %516
  %518 = load i32, i32* %517, align 4
  %519 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 2
  store i32 %518, i32* %519, align 4
  %520 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 2
  store i32 %513, i32* %520, align 4
  %521 = load i32, i32* %517, align 4
  %522 = mul nsw i32 %521, %513
  %523 = getelementptr inbounds i32, i32* %496, i64 1
  %524 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 1
  %525 = select i1 %495, i32* %523, i32* %524
  %526 = load i32, i32* %525, align 4
  %527 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 1
  store i32 %526, i32* %527, align 4
  %528 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 1
  store i32 %522, i32* %528, align 4
  %529 = load i32, i32* %525, align 4
  %530 = mul nsw i32 %529, %522
  %531 = select i1 %495, i32* %496, i32* %486
  %532 = load i32, i32* %531, align 4
  %533 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 0
  store i32 %532, i32* %533, align 4
  %534 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 0
  store i32 %530, i32* %534, align 4
  %535 = xor i1 %495, true
  %536 = icmp eq i32* %496, null
  %537 = or i1 %536, %535
  br i1 %537, label %540, label %538

538:                                              ; preds = %484
  %539 = bitcast i32* %496 to i8*
  call void @_ZdaPv(i8* %539) #10
  br label %540

540:                                              ; preds = %484, %538
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %395) #9
  %541 = bitcast %class.anon.2* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %541) #9
  %542 = getelementptr inbounds %class.anon.2, %class.anon.2* %17, i64 0, i32 0
  store float** %11, float*** %542, align 8
  %543 = getelementptr inbounds %class.anon.2, %class.anon.2* %17, i64 0, i32 1
  store %"struct.tflite::NdArrayDesc"* %15, %"struct.tflite::NdArrayDesc"** %543, align 8
  %544 = getelementptr inbounds %class.anon.2, %class.anon.2* %17, i64 0, i32 2
  store float (float, float)** %12, float (float, float)*** %544, align 8
  %545 = getelementptr inbounds %class.anon.2, %class.anon.2* %17, i64 0, i32 3
  store float** %9, float*** %545, align 8
  %546 = getelementptr inbounds %class.anon.2, %class.anon.2* %17, i64 0, i32 4
  store %"struct.tflite::NdArrayDesc"* %13, %"struct.tflite::NdArrayDesc"** %546, align 8
  %547 = getelementptr inbounds %class.anon.2, %class.anon.2* %17, i64 0, i32 5
  store float** %10, float*** %547, align 8
  %548 = getelementptr inbounds %class.anon.2, %class.anon.2* %17, i64 0, i32 6
  store %"struct.tflite::NdArrayDesc"* %14, %"struct.tflite::NdArrayDesc"** %548, align 8
  %549 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %549) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %549, i8 0, i64 20, i1 false) #9
  %550 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 0
  call void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIfPFfffELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* nonnull dereferenceable(40) %15, %class.anon.2* nonnull dereferenceable(56) %17, i32* nonnull %550) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %549) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %541) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %394) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %393) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %392) #9
  br label %551

551:                                              ; preds = %376, %369, %367, %540
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIfEET_S5_S5_(float, float) #0 comdat align 2 {
  %3 = fcmp ogt float %0, %1
  %4 = select i1 %3, float %0, float %1
  ret float %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIfPFfffELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* dereferenceable(40), %class.anon.2* dereferenceable(56), i32*) local_unnamed_addr #0 comdat {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %158

7:                                                ; preds = %3
  %8 = getelementptr inbounds i32, i32* %2, i64 1
  %9 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 1
  %10 = getelementptr inbounds i32, i32* %2, i64 2
  %11 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 2
  %12 = getelementptr inbounds i32, i32* %2, i64 3
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 3
  %14 = getelementptr inbounds i32, i32* %2, i64 4
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 4
  %16 = getelementptr inbounds %class.anon.2, %class.anon.2* %1, i64 0, i32 2
  %17 = getelementptr inbounds %class.anon.2, %class.anon.2* %1, i64 0, i32 3
  %18 = getelementptr inbounds %class.anon.2, %class.anon.2* %1, i64 0, i32 4
  %19 = getelementptr inbounds %class.anon.2, %class.anon.2* %1, i64 0, i32 5
  %20 = getelementptr inbounds %class.anon.2, %class.anon.2* %1, i64 0, i32 6
  %21 = getelementptr inbounds %class.anon.2, %class.anon.2* %1, i64 0, i32 0
  %22 = getelementptr inbounds %class.anon.2, %class.anon.2* %1, i64 0, i32 1
  br label %23

23:                                               ; preds = %7, %153
  %24 = phi i32 [ 0, %7 ], [ %155, %153 ]
  store i32 0, i32* %8, align 4
  %25 = load i32, i32* %9, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %153

27:                                               ; preds = %23, %146
  %28 = phi i32 [ %148, %146 ], [ 0, %23 ]
  store i32 0, i32* %10, align 4
  %29 = load i32, i32* %11, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %146

31:                                               ; preds = %27, %139
  %32 = phi i32 [ %141, %139 ], [ 0, %27 ]
  store i32 0, i32* %12, align 4
  %33 = load i32, i32* %13, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %139

35:                                               ; preds = %31, %132
  %36 = phi i32 [ %134, %132 ], [ 0, %31 ]
  store i32 0, i32* %14, align 4
  %37 = load i32, i32* %15, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %132

39:                                               ; preds = %35, %39
  %40 = phi i32 [ %128, %39 ], [ 0, %35 ]
  %41 = phi i32 [ %131, %39 ], [ %36, %35 ]
  %42 = load float (float, float)**, float (float, float)*** %16, align 8
  %43 = load float (float, float)*, float (float, float)** %42, align 8
  %44 = load float**, float*** %17, align 8
  %45 = load float*, float** %44, align 8
  %46 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %18, align 8
  %47 = load i32, i32* %2, align 4
  %48 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = mul nsw i32 %49, %47
  %51 = load i32, i32* %8, align 4
  %52 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 1
  %53 = load i32, i32* %52, align 4
  %54 = mul nsw i32 %53, %51
  %55 = add nsw i32 %54, %50
  %56 = load i32, i32* %10, align 4
  %57 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 2
  %58 = load i32, i32* %57, align 4
  %59 = mul nsw i32 %58, %56
  %60 = add nsw i32 %55, %59
  %61 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 3
  %62 = load i32, i32* %61, align 4
  %63 = mul nsw i32 %62, %41
  %64 = add nsw i32 %60, %63
  %65 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 4
  %66 = load i32, i32* %65, align 4
  %67 = mul nsw i32 %66, %40
  %68 = add nsw i32 %64, %67
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds float, float* %45, i64 %69
  %71 = load float, float* %70, align 4
  %72 = load float**, float*** %19, align 8
  %73 = load float*, float** %72, align 8
  %74 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %20, align 8
  %75 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 0
  %76 = load i32, i32* %75, align 4
  %77 = mul nsw i32 %76, %47
  %78 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 1
  %79 = load i32, i32* %78, align 4
  %80 = mul nsw i32 %79, %51
  %81 = add nsw i32 %80, %77
  %82 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 2
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %83, %56
  %85 = add nsw i32 %81, %84
  %86 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 3
  %87 = load i32, i32* %86, align 4
  %88 = mul nsw i32 %87, %41
  %89 = add nsw i32 %85, %88
  %90 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 4
  %91 = load i32, i32* %90, align 4
  %92 = mul nsw i32 %91, %40
  %93 = add nsw i32 %89, %92
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds float, float* %73, i64 %94
  %96 = load float, float* %95, align 4
  %97 = tail call float %43(float %71, float %96) #9
  %98 = load float**, float*** %21, align 8
  %99 = load float*, float** %98, align 8
  %100 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %22, align 8
  %101 = load i32, i32* %2, align 4
  %102 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 0
  %103 = load i32, i32* %102, align 4
  %104 = mul nsw i32 %103, %101
  %105 = load i32, i32* %8, align 4
  %106 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 1
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %105
  %109 = add nsw i32 %108, %104
  %110 = load i32, i32* %10, align 4
  %111 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 2
  %112 = load i32, i32* %111, align 4
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i32 %109, %113
  %115 = load i32, i32* %12, align 4
  %116 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 3
  %117 = load i32, i32* %116, align 4
  %118 = mul nsw i32 %117, %115
  %119 = add nsw i32 %114, %118
  %120 = load i32, i32* %14, align 4
  %121 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 4
  %122 = load i32, i32* %121, align 4
  %123 = mul nsw i32 %122, %120
  %124 = add nsw i32 %119, %123
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds float, float* %99, i64 %125
  store float %97, float* %126, align 4
  %127 = load i32, i32* %14, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %14, align 4
  %129 = load i32, i32* %15, align 4
  %130 = icmp slt i32 %128, %129
  %131 = load i32, i32* %12, align 4
  br i1 %130, label %39, label %132

132:                                              ; preds = %39, %35
  %133 = phi i32 [ %36, %35 ], [ %131, %39 ]
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %12, align 4
  %135 = load i32, i32* %13, align 4
  %136 = icmp slt i32 %134, %135
  br i1 %136, label %35, label %137

137:                                              ; preds = %132
  %138 = load i32, i32* %10, align 4
  br label %139

139:                                              ; preds = %137, %31
  %140 = phi i32 [ %138, %137 ], [ %32, %31 ]
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %10, align 4
  %142 = load i32, i32* %11, align 4
  %143 = icmp slt i32 %141, %142
  br i1 %143, label %31, label %144

144:                                              ; preds = %139
  %145 = load i32, i32* %8, align 4
  br label %146

146:                                              ; preds = %144, %27
  %147 = phi i32 [ %145, %144 ], [ %28, %27 ]
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %8, align 4
  %149 = load i32, i32* %9, align 4
  %150 = icmp slt i32 %148, %149
  br i1 %150, label %27, label %151

151:                                              ; preds = %146
  %152 = load i32, i32* %2, align 4
  br label %153

153:                                              ; preds = %151, %23
  %154 = phi i32 [ %152, %151 ], [ %24, %23 ]
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %2, align 4
  %156 = load i32, i32* %4, align 4
  %157 = icmp slt i32 %155, %156
  br i1 %157, label %23, label %158

158:                                              ; preds = %153, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIhPFhhhELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i8 (i8, i8)*) local_unnamed_addr #0 comdat {
  %8 = alloca [5 x i32], align 16
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8 (i8, i8)*, align 8
  %13 = alloca %"struct.tflite::NdArrayDesc", align 4
  %14 = alloca %"struct.tflite::NdArrayDesc", align 4
  %15 = alloca %"struct.tflite::NdArrayDesc", align 4
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %class.anon.3, align 8
  store i8* %1, i8** %9, align 8
  store i8* %3, i8** %10, align 8
  store i8* %5, i8** %11, align 8
  store i8 (i8, i8)* %6, i8 (i8, i8)** %12, align 8
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %390

23:                                               ; preds = %7
  %24 = icmp sgt i32 %19, 5
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %union.anon, %union.anon* %25, i64 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = bitcast %union.anon* %25 to i32*
  %29 = select i1 %24, i32* %27, i32* %28
  %30 = bitcast i32* %29 to i8*
  %31 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 1
  %32 = getelementptr inbounds %union.anon, %union.anon* %31, i64 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = bitcast %union.anon* %31 to i32*
  %35 = select i1 %24, i32* %33, i32* %34
  %36 = bitcast i32* %35 to i8*
  %37 = sext i32 %19 to i64
  %38 = shl nsw i64 %37, 2
  %39 = tail call i32 @bcmp(i8* %30, i8* %36, i64 %38) #9
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %390

41:                                               ; preds = %23
  br i1 %24, label %44, label %42

42:                                               ; preds = %41
  %43 = icmp sgt i32 %19, 0
  br i1 %43, label %44, label %248

44:                                               ; preds = %41, %42
  %45 = phi i32* [ %28, %42 ], [ %27, %41 ]
  %46 = zext i32 %19 to i64
  %47 = icmp ult i32 %19, 8
  br i1 %47, label %133, label %48

48:                                               ; preds = %44
  %49 = and i64 %46, 4294967288
  %50 = add nsw i64 %49, -8
  %51 = lshr exact i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = and i64 %52, 3
  %54 = icmp ult i64 %50, 24
  br i1 %54, label %100, label %55

55:                                               ; preds = %48
  %56 = sub nsw i64 %52, %53
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %97, %57 ]
  %59 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %55 ], [ %95, %57 ]
  %60 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %55 ], [ %96, %57 ]
  %61 = phi i64 [ %56, %55 ], [ %98, %57 ]
  %62 = getelementptr inbounds i32, i32* %45, i64 %58
  %63 = bitcast i32* %62 to <4 x i32>*
  %64 = load <4 x i32>, <4 x i32>* %63, align 4
  %65 = getelementptr inbounds i32, i32* %62, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  %67 = load <4 x i32>, <4 x i32>* %66, align 4
  %68 = mul nsw <4 x i32> %64, %59
  %69 = mul nsw <4 x i32> %67, %60
  %70 = or i64 %58, 8
  %71 = getelementptr inbounds i32, i32* %45, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  %73 = load <4 x i32>, <4 x i32>* %72, align 4
  %74 = getelementptr inbounds i32, i32* %71, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  %76 = load <4 x i32>, <4 x i32>* %75, align 4
  %77 = mul nsw <4 x i32> %73, %68
  %78 = mul nsw <4 x i32> %76, %69
  %79 = or i64 %58, 16
  %80 = getelementptr inbounds i32, i32* %45, i64 %79
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4
  %83 = getelementptr inbounds i32, i32* %80, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4
  %86 = mul nsw <4 x i32> %82, %77
  %87 = mul nsw <4 x i32> %85, %78
  %88 = or i64 %58, 24
  %89 = getelementptr inbounds i32, i32* %45, i64 %88
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4
  %92 = getelementptr inbounds i32, i32* %89, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4
  %95 = mul nsw <4 x i32> %91, %86
  %96 = mul nsw <4 x i32> %94, %87
  %97 = add i64 %58, 32
  %98 = add i64 %61, -4
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %57, !llvm.loop !194

100:                                              ; preds = %57, %48
  %101 = phi <4 x i32> [ undef, %48 ], [ %95, %57 ]
  %102 = phi <4 x i32> [ undef, %48 ], [ %96, %57 ]
  %103 = phi i64 [ 0, %48 ], [ %97, %57 ]
  %104 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %48 ], [ %95, %57 ]
  %105 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %48 ], [ %96, %57 ]
  %106 = icmp eq i64 %53, 0
  br i1 %106, label %123, label %107

107:                                              ; preds = %100, %107
  %108 = phi i64 [ %120, %107 ], [ %103, %100 ]
  %109 = phi <4 x i32> [ %118, %107 ], [ %104, %100 ]
  %110 = phi <4 x i32> [ %119, %107 ], [ %105, %100 ]
  %111 = phi i64 [ %121, %107 ], [ %53, %100 ]
  %112 = getelementptr inbounds i32, i32* %45, i64 %108
  %113 = bitcast i32* %112 to <4 x i32>*
  %114 = load <4 x i32>, <4 x i32>* %113, align 4
  %115 = getelementptr inbounds i32, i32* %112, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  %117 = load <4 x i32>, <4 x i32>* %116, align 4
  %118 = mul nsw <4 x i32> %114, %109
  %119 = mul nsw <4 x i32> %117, %110
  %120 = add i64 %108, 8
  %121 = add i64 %111, -1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %107, !llvm.loop !195

123:                                              ; preds = %107, %100
  %124 = phi <4 x i32> [ %101, %100 ], [ %118, %107 ]
  %125 = phi <4 x i32> [ %102, %100 ], [ %119, %107 ]
  %126 = mul <4 x i32> %125, %124
  %127 = shufflevector <4 x i32> %126, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %128 = mul <4 x i32> %126, %127
  %129 = shufflevector <4 x i32> %128, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %130 = mul <4 x i32> %128, %129
  %131 = extractelement <4 x i32> %130, i32 0
  %132 = icmp eq i64 %49, %46
  br i1 %132, label %144, label %133

133:                                              ; preds = %123, %44
  %134 = phi i64 [ 0, %44 ], [ %49, %123 ]
  %135 = phi i32 [ 1, %44 ], [ %131, %123 ]
  br label %136

136:                                              ; preds = %133, %136
  %137 = phi i64 [ %142, %136 ], [ %134, %133 ]
  %138 = phi i32 [ %141, %136 ], [ %135, %133 ]
  %139 = getelementptr inbounds i32, i32* %45, i64 %137
  %140 = load i32, i32* %139, align 4
  %141 = mul nsw i32 %140, %138
  %142 = add nuw nsw i64 %137, 1
  %143 = icmp eq i64 %142, %46
  br i1 %143, label %144, label %136, !llvm.loop !196

144:                                              ; preds = %136, %123
  %145 = phi i32 [ %131, %123 ], [ %141, %136 ]
  br i1 %24, label %148, label %146

146:                                              ; preds = %144
  %147 = icmp sgt i32 %19, 0
  br i1 %147, label %148, label %248

148:                                              ; preds = %144, %146
  %149 = phi i32* [ %34, %146 ], [ %33, %144 ]
  %150 = zext i32 %19 to i64
  %151 = icmp ult i32 %19, 8
  br i1 %151, label %237, label %152

152:                                              ; preds = %148
  %153 = and i64 %46, 4294967288
  %154 = add nsw i64 %153, -8
  %155 = lshr exact i64 %154, 3
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 3
  %158 = icmp ult i64 %154, 24
  br i1 %158, label %204, label %159

159:                                              ; preds = %152
  %160 = sub nsw i64 %156, %157
  br label %161

161:                                              ; preds = %161, %159
  %162 = phi i64 [ 0, %159 ], [ %201, %161 ]
  %163 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %159 ], [ %199, %161 ]
  %164 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %159 ], [ %200, %161 ]
  %165 = phi i64 [ %160, %159 ], [ %202, %161 ]
  %166 = getelementptr inbounds i32, i32* %149, i64 %162
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = getelementptr inbounds i32, i32* %166, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4
  %172 = mul nsw <4 x i32> %168, %163
  %173 = mul nsw <4 x i32> %171, %164
  %174 = or i64 %162, 8
  %175 = getelementptr inbounds i32, i32* %149, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = getelementptr inbounds i32, i32* %175, i64 4
  %179 = bitcast i32* %178 to <4 x i32>*
  %180 = load <4 x i32>, <4 x i32>* %179, align 4
  %181 = mul nsw <4 x i32> %177, %172
  %182 = mul nsw <4 x i32> %180, %173
  %183 = or i64 %162, 16
  %184 = getelementptr inbounds i32, i32* %149, i64 %183
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 4
  %187 = getelementptr inbounds i32, i32* %184, i64 4
  %188 = bitcast i32* %187 to <4 x i32>*
  %189 = load <4 x i32>, <4 x i32>* %188, align 4
  %190 = mul nsw <4 x i32> %186, %181
  %191 = mul nsw <4 x i32> %189, %182
  %192 = or i64 %162, 24
  %193 = getelementptr inbounds i32, i32* %149, i64 %192
  %194 = bitcast i32* %193 to <4 x i32>*
  %195 = load <4 x i32>, <4 x i32>* %194, align 4
  %196 = getelementptr inbounds i32, i32* %193, i64 4
  %197 = bitcast i32* %196 to <4 x i32>*
  %198 = load <4 x i32>, <4 x i32>* %197, align 4
  %199 = mul nsw <4 x i32> %195, %190
  %200 = mul nsw <4 x i32> %198, %191
  %201 = add i64 %162, 32
  %202 = add i64 %165, -4
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %161, !llvm.loop !197

204:                                              ; preds = %161, %152
  %205 = phi <4 x i32> [ undef, %152 ], [ %199, %161 ]
  %206 = phi <4 x i32> [ undef, %152 ], [ %200, %161 ]
  %207 = phi i64 [ 0, %152 ], [ %201, %161 ]
  %208 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %152 ], [ %199, %161 ]
  %209 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %152 ], [ %200, %161 ]
  %210 = icmp eq i64 %157, 0
  br i1 %210, label %227, label %211

211:                                              ; preds = %204, %211
  %212 = phi i64 [ %224, %211 ], [ %207, %204 ]
  %213 = phi <4 x i32> [ %222, %211 ], [ %208, %204 ]
  %214 = phi <4 x i32> [ %223, %211 ], [ %209, %204 ]
  %215 = phi i64 [ %225, %211 ], [ %157, %204 ]
  %216 = getelementptr inbounds i32, i32* %149, i64 %212
  %217 = bitcast i32* %216 to <4 x i32>*
  %218 = load <4 x i32>, <4 x i32>* %217, align 4
  %219 = getelementptr inbounds i32, i32* %216, i64 4
  %220 = bitcast i32* %219 to <4 x i32>*
  %221 = load <4 x i32>, <4 x i32>* %220, align 4
  %222 = mul nsw <4 x i32> %218, %213
  %223 = mul nsw <4 x i32> %221, %214
  %224 = add i64 %212, 8
  %225 = add i64 %215, -1
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %211, !llvm.loop !198

227:                                              ; preds = %211, %204
  %228 = phi <4 x i32> [ %205, %204 ], [ %222, %211 ]
  %229 = phi <4 x i32> [ %206, %204 ], [ %223, %211 ]
  %230 = mul <4 x i32> %229, %228
  %231 = shufflevector <4 x i32> %230, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %232 = mul <4 x i32> %230, %231
  %233 = shufflevector <4 x i32> %232, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %234 = mul <4 x i32> %232, %233
  %235 = extractelement <4 x i32> %234, i32 0
  %236 = icmp eq i64 %153, %46
  br i1 %236, label %248, label %237

237:                                              ; preds = %227, %148
  %238 = phi i64 [ 0, %148 ], [ %153, %227 ]
  %239 = phi i32 [ 1, %148 ], [ %235, %227 ]
  br label %240

240:                                              ; preds = %237, %240
  %241 = phi i64 [ %246, %240 ], [ %238, %237 ]
  %242 = phi i32 [ %245, %240 ], [ %239, %237 ]
  %243 = getelementptr inbounds i32, i32* %149, i64 %241
  %244 = load i32, i32* %243, align 4
  %245 = mul nsw i32 %244, %242
  %246 = add nuw nsw i64 %241, 1
  %247 = icmp eq i64 %246, %150
  br i1 %247, label %248, label %240, !llvm.loop !199

248:                                              ; preds = %240, %227, %42, %146
  %249 = phi i32 [ %145, %146 ], [ 1, %42 ], [ %145, %227 ], [ %145, %240 ]
  %250 = phi i32 [ 1, %146 ], [ 1, %42 ], [ %235, %227 ], [ %245, %240 ]
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %252 = load i32, i32* %251, align 8
  %253 = icmp sgt i32 %252, 5
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  br i1 %253, label %255, label %258

255:                                              ; preds = %248
  %256 = getelementptr inbounds %union.anon, %union.anon* %254, i64 0, i32 0
  %257 = load i32*, i32** %256, align 8
  br label %261

258:                                              ; preds = %248
  %259 = bitcast %union.anon* %254 to i32*
  %260 = icmp sgt i32 %252, 0
  br i1 %260, label %261, label %361

261:                                              ; preds = %258, %255
  %262 = phi i32* [ %257, %255 ], [ %259, %258 ]
  %263 = zext i32 %252 to i64
  %264 = icmp ult i32 %252, 8
  br i1 %264, label %350, label %265

265:                                              ; preds = %261
  %266 = and i64 %263, 4294967288
  %267 = add nsw i64 %266, -8
  %268 = lshr exact i64 %267, 3
  %269 = add nuw nsw i64 %268, 1
  %270 = and i64 %269, 3
  %271 = icmp ult i64 %267, 24
  br i1 %271, label %317, label %272

272:                                              ; preds = %265
  %273 = sub nsw i64 %269, %270
  br label %274

274:                                              ; preds = %274, %272
  %275 = phi i64 [ 0, %272 ], [ %314, %274 ]
  %276 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %272 ], [ %312, %274 ]
  %277 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %272 ], [ %313, %274 ]
  %278 = phi i64 [ %273, %272 ], [ %315, %274 ]
  %279 = getelementptr inbounds i32, i32* %262, i64 %275
  %280 = bitcast i32* %279 to <4 x i32>*
  %281 = load <4 x i32>, <4 x i32>* %280, align 4
  %282 = getelementptr inbounds i32, i32* %279, i64 4
  %283 = bitcast i32* %282 to <4 x i32>*
  %284 = load <4 x i32>, <4 x i32>* %283, align 4
  %285 = mul nsw <4 x i32> %281, %276
  %286 = mul nsw <4 x i32> %284, %277
  %287 = or i64 %275, 8
  %288 = getelementptr inbounds i32, i32* %262, i64 %287
  %289 = bitcast i32* %288 to <4 x i32>*
  %290 = load <4 x i32>, <4 x i32>* %289, align 4
  %291 = getelementptr inbounds i32, i32* %288, i64 4
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4
  %294 = mul nsw <4 x i32> %290, %285
  %295 = mul nsw <4 x i32> %293, %286
  %296 = or i64 %275, 16
  %297 = getelementptr inbounds i32, i32* %262, i64 %296
  %298 = bitcast i32* %297 to <4 x i32>*
  %299 = load <4 x i32>, <4 x i32>* %298, align 4
  %300 = getelementptr inbounds i32, i32* %297, i64 4
  %301 = bitcast i32* %300 to <4 x i32>*
  %302 = load <4 x i32>, <4 x i32>* %301, align 4
  %303 = mul nsw <4 x i32> %299, %294
  %304 = mul nsw <4 x i32> %302, %295
  %305 = or i64 %275, 24
  %306 = getelementptr inbounds i32, i32* %262, i64 %305
  %307 = bitcast i32* %306 to <4 x i32>*
  %308 = load <4 x i32>, <4 x i32>* %307, align 4
  %309 = getelementptr inbounds i32, i32* %306, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4
  %312 = mul nsw <4 x i32> %308, %303
  %313 = mul nsw <4 x i32> %311, %304
  %314 = add i64 %275, 32
  %315 = add i64 %278, -4
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %274, !llvm.loop !200

317:                                              ; preds = %274, %265
  %318 = phi <4 x i32> [ undef, %265 ], [ %312, %274 ]
  %319 = phi <4 x i32> [ undef, %265 ], [ %313, %274 ]
  %320 = phi i64 [ 0, %265 ], [ %314, %274 ]
  %321 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %265 ], [ %312, %274 ]
  %322 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %265 ], [ %313, %274 ]
  %323 = icmp eq i64 %270, 0
  br i1 %323, label %340, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %337, %324 ], [ %320, %317 ]
  %326 = phi <4 x i32> [ %335, %324 ], [ %321, %317 ]
  %327 = phi <4 x i32> [ %336, %324 ], [ %322, %317 ]
  %328 = phi i64 [ %338, %324 ], [ %270, %317 ]
  %329 = getelementptr inbounds i32, i32* %262, i64 %325
  %330 = bitcast i32* %329 to <4 x i32>*
  %331 = load <4 x i32>, <4 x i32>* %330, align 4
  %332 = getelementptr inbounds i32, i32* %329, i64 4
  %333 = bitcast i32* %332 to <4 x i32>*
  %334 = load <4 x i32>, <4 x i32>* %333, align 4
  %335 = mul nsw <4 x i32> %331, %326
  %336 = mul nsw <4 x i32> %334, %327
  %337 = add i64 %325, 8
  %338 = add i64 %328, -1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %324, !llvm.loop !201

340:                                              ; preds = %324, %317
  %341 = phi <4 x i32> [ %318, %317 ], [ %335, %324 ]
  %342 = phi <4 x i32> [ %319, %317 ], [ %336, %324 ]
  %343 = mul <4 x i32> %342, %341
  %344 = shufflevector <4 x i32> %343, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %345 = mul <4 x i32> %343, %344
  %346 = shufflevector <4 x i32> %345, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %347 = mul <4 x i32> %345, %346
  %348 = extractelement <4 x i32> %347, i32 0
  %349 = icmp eq i64 %266, %263
  br i1 %349, label %361, label %350

350:                                              ; preds = %340, %261
  %351 = phi i64 [ 0, %261 ], [ %266, %340 ]
  %352 = phi i32 [ 1, %261 ], [ %348, %340 ]
  br label %353

353:                                              ; preds = %350, %353
  %354 = phi i64 [ %359, %353 ], [ %351, %350 ]
  %355 = phi i32 [ %358, %353 ], [ %352, %350 ]
  %356 = getelementptr inbounds i32, i32* %262, i64 %354
  %357 = load i32, i32* %356, align 4
  %358 = mul nsw i32 %357, %355
  %359 = add nuw nsw i64 %354, 1
  %360 = icmp eq i64 %359, %263
  br i1 %360, label %361, label %353, !llvm.loop !202

361:                                              ; preds = %353, %340, %258
  %362 = phi i32 [ 1, %258 ], [ %348, %340 ], [ %358, %353 ]
  %363 = icmp eq i32 %249, %250
  br i1 %363, label %365, label %364

364:                                              ; preds = %361
  tail call void @abort() #11
  unreachable

365:                                              ; preds = %361
  %366 = icmp eq i32 %249, %362
  br i1 %366, label %367, label %375

367:                                              ; preds = %365
  %368 = icmp sgt i32 %249, 0
  br i1 %368, label %369, label %551

369:                                              ; preds = %367
  %370 = zext i32 %249 to i64
  %371 = load i8, i8* %1, align 1
  %372 = load i8, i8* %3, align 1
  %373 = tail call zeroext i8 %6(i8 zeroext %371, i8 zeroext %372) #9
  store i8 %373, i8* %5, align 1
  %374 = icmp eq i32 %249, 1
  br i1 %374, label %551, label %376

375:                                              ; preds = %365
  tail call void @abort() #11
  unreachable

376:                                              ; preds = %369, %376
  %377 = phi i64 [ %388, %376 ], [ 1, %369 ]
  %378 = load i8 (i8, i8)*, i8 (i8, i8)** %12, align 8
  %379 = load i8*, i8** %9, align 8
  %380 = load i8*, i8** %10, align 8
  %381 = load i8*, i8** %11, align 8
  %382 = getelementptr inbounds i8, i8* %379, i64 %377
  %383 = load i8, i8* %382, align 1
  %384 = getelementptr inbounds i8, i8* %380, i64 %377
  %385 = load i8, i8* %384, align 1
  %386 = tail call zeroext i8 %378(i8 zeroext %383, i8 zeroext %385) #9
  %387 = getelementptr inbounds i8, i8* %381, i64 %377
  store i8 %386, i8* %387, align 1
  %388 = add nuw nsw i64 %377, 1
  %389 = icmp eq i64 %388, %370
  br i1 %389, label %551, label %376

390:                                              ; preds = %7, %23
  %391 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %392 = bitcast %"struct.tflite::NdArrayDesc"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %392) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %392, i8 -86, i64 40, i1 false)
  %393 = bitcast %"struct.tflite::NdArrayDesc"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %393) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %393, i8 -86, i64 40, i1 false)
  %394 = bitcast %"struct.tflite::NdArrayDesc"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %394) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %394, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %2, %"struct.tflite::NdArrayDesc"* nonnull %13, %"struct.tflite::NdArrayDesc"* nonnull %14)
  %395 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %395) #9
  %396 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %396, align 8, !alias.scope !203
  %397 = load i32, i32* %391, align 8, !noalias !203
  %398 = icmp sgt i32 %397, 5
  br i1 %398, label %399, label %400

399:                                              ; preds = %390
  call void @abort() #11, !noalias !203
  unreachable

400:                                              ; preds = %390
  store i32 5, i32* %396, align 8, !alias.scope !203
  %401 = sub i32 5, %397
  %402 = icmp sgt i32 %401, 0
  %403 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %404 = bitcast %union.anon* %403 to [5 x i32]*
  br i1 %402, label %405, label %484

405:                                              ; preds = %400
  %406 = zext i32 %401 to i64
  %407 = icmp ult i32 %401, 8
  br i1 %407, label %477, label %408

408:                                              ; preds = %405
  %409 = and i64 %406, 4294967288
  %410 = add nsw i64 %409, -8
  %411 = lshr exact i64 %410, 3
  %412 = add nuw nsw i64 %411, 1
  %413 = and i64 %412, 7
  %414 = icmp ult i64 %410, 56
  br i1 %414, label %462, label %415

415:                                              ; preds = %408
  %416 = sub nsw i64 %412, %413
  br label %417

417:                                              ; preds = %417, %415
  %418 = phi i64 [ 0, %415 ], [ %459, %417 ]
  %419 = phi i64 [ %416, %415 ], [ %460, %417 ]
  %420 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %418
  %421 = bitcast i32* %420 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %421, align 8, !alias.scope !203
  %422 = getelementptr inbounds i32, i32* %420, i64 4
  %423 = bitcast i32* %422 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %423, align 8, !alias.scope !203
  %424 = or i64 %418, 8
  %425 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %424
  %426 = bitcast i32* %425 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %426, align 8, !alias.scope !203
  %427 = getelementptr inbounds i32, i32* %425, i64 4
  %428 = bitcast i32* %427 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %428, align 8, !alias.scope !203
  %429 = or i64 %418, 16
  %430 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %429
  %431 = bitcast i32* %430 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %431, align 8, !alias.scope !203
  %432 = getelementptr inbounds i32, i32* %430, i64 4
  %433 = bitcast i32* %432 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %433, align 8, !alias.scope !203
  %434 = or i64 %418, 24
  %435 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %434
  %436 = bitcast i32* %435 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %436, align 8, !alias.scope !203
  %437 = getelementptr inbounds i32, i32* %435, i64 4
  %438 = bitcast i32* %437 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %438, align 8, !alias.scope !203
  %439 = or i64 %418, 32
  %440 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %439
  %441 = bitcast i32* %440 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %441, align 8, !alias.scope !203
  %442 = getelementptr inbounds i32, i32* %440, i64 4
  %443 = bitcast i32* %442 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %443, align 8, !alias.scope !203
  %444 = or i64 %418, 40
  %445 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %444
  %446 = bitcast i32* %445 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %446, align 8, !alias.scope !203
  %447 = getelementptr inbounds i32, i32* %445, i64 4
  %448 = bitcast i32* %447 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %448, align 8, !alias.scope !203
  %449 = or i64 %418, 48
  %450 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %449
  %451 = bitcast i32* %450 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %451, align 8, !alias.scope !203
  %452 = getelementptr inbounds i32, i32* %450, i64 4
  %453 = bitcast i32* %452 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %453, align 8, !alias.scope !203
  %454 = or i64 %418, 56
  %455 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %454
  %456 = bitcast i32* %455 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %456, align 8, !alias.scope !203
  %457 = getelementptr inbounds i32, i32* %455, i64 4
  %458 = bitcast i32* %457 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %458, align 8, !alias.scope !203
  %459 = add i64 %418, 64
  %460 = add i64 %419, -8
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %462, label %417, !llvm.loop !206

462:                                              ; preds = %417, %408
  %463 = phi i64 [ 0, %408 ], [ %459, %417 ]
  %464 = icmp eq i64 %413, 0
  br i1 %464, label %475, label %465

465:                                              ; preds = %462, %465
  %466 = phi i64 [ %472, %465 ], [ %463, %462 ]
  %467 = phi i64 [ %473, %465 ], [ %413, %462 ]
  %468 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %466
  %469 = bitcast i32* %468 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %469, align 8, !alias.scope !203
  %470 = getelementptr inbounds i32, i32* %468, i64 4
  %471 = bitcast i32* %470 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %471, align 8, !alias.scope !203
  %472 = add i64 %466, 8
  %473 = add i64 %467, -1
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %465, !llvm.loop !207

475:                                              ; preds = %465, %462
  %476 = icmp eq i64 %409, %406
  br i1 %476, label %484, label %477

477:                                              ; preds = %475, %405
  %478 = phi i64 [ 0, %405 ], [ %409, %475 ]
  br label %479

479:                                              ; preds = %477, %479
  %480 = phi i64 [ %482, %479 ], [ %478, %477 ]
  %481 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %480
  store i32 1, i32* %481, align 4, !alias.scope !203
  %482 = add nuw nsw i64 %480, 1
  %483 = icmp eq i64 %482, %406
  br i1 %483, label %484, label %479, !llvm.loop !208

484:                                              ; preds = %479, %475, %400
  %485 = getelementptr inbounds %union.anon, %union.anon* %403, i64 0, i32 0
  %486 = bitcast %union.anon* %403 to i32*
  %487 = sext i32 %401 to i64
  %488 = getelementptr inbounds i32, i32* %486, i64 %487
  %489 = bitcast i32* %488 to i8*
  %490 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %491 = bitcast %union.anon* %490 to i8*
  %492 = sext i32 %397 to i64
  %493 = shl nsw i64 %492, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %489, i8* align 4 %491, i64 %493, i1 false) #9
  %494 = load i32, i32* %396, align 8
  %495 = icmp sgt i32 %494, 5
  %496 = load i32*, i32** %485, align 8
  %497 = getelementptr inbounds i32, i32* %496, i64 4
  %498 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1, i64 8
  %499 = bitcast i8* %498 to i32*
  %500 = select i1 %495, i32* %497, i32* %499
  %501 = load i32, i32* %500, align 4
  %502 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 4
  store i32 %501, i32* %502, align 4
  %503 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 4
  store i32 1, i32* %503, align 4
  %504 = load i32, i32* %500, align 4
  %505 = getelementptr inbounds i32, i32* %496, i64 3
  %506 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1, i64 4
  %507 = bitcast i8* %506 to i32*
  %508 = select i1 %495, i32* %505, i32* %507
  %509 = load i32, i32* %508, align 4
  %510 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 3
  store i32 %509, i32* %510, align 4
  %511 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 3
  store i32 %504, i32* %511, align 4
  %512 = load i32, i32* %508, align 4
  %513 = mul nsw i32 %512, %504
  %514 = getelementptr inbounds i32, i32* %496, i64 2
  %515 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1
  %516 = bitcast [16 x i8]* %515 to i32*
  %517 = select i1 %495, i32* %514, i32* %516
  %518 = load i32, i32* %517, align 4
  %519 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 2
  store i32 %518, i32* %519, align 4
  %520 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 2
  store i32 %513, i32* %520, align 4
  %521 = load i32, i32* %517, align 4
  %522 = mul nsw i32 %521, %513
  %523 = getelementptr inbounds i32, i32* %496, i64 1
  %524 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 1
  %525 = select i1 %495, i32* %523, i32* %524
  %526 = load i32, i32* %525, align 4
  %527 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 1
  store i32 %526, i32* %527, align 4
  %528 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 1
  store i32 %522, i32* %528, align 4
  %529 = load i32, i32* %525, align 4
  %530 = mul nsw i32 %529, %522
  %531 = select i1 %495, i32* %496, i32* %486
  %532 = load i32, i32* %531, align 4
  %533 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 0
  store i32 %532, i32* %533, align 4
  %534 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 0
  store i32 %530, i32* %534, align 4
  %535 = xor i1 %495, true
  %536 = icmp eq i32* %496, null
  %537 = or i1 %536, %535
  br i1 %537, label %540, label %538

538:                                              ; preds = %484
  %539 = bitcast i32* %496 to i8*
  call void @_ZdaPv(i8* %539) #10
  br label %540

540:                                              ; preds = %484, %538
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %395) #9
  %541 = bitcast %class.anon.3* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %541) #9
  %542 = getelementptr inbounds %class.anon.3, %class.anon.3* %17, i64 0, i32 0
  store i8** %11, i8*** %542, align 8
  %543 = getelementptr inbounds %class.anon.3, %class.anon.3* %17, i64 0, i32 1
  store %"struct.tflite::NdArrayDesc"* %15, %"struct.tflite::NdArrayDesc"** %543, align 8
  %544 = getelementptr inbounds %class.anon.3, %class.anon.3* %17, i64 0, i32 2
  store i8 (i8, i8)** %12, i8 (i8, i8)*** %544, align 8
  %545 = getelementptr inbounds %class.anon.3, %class.anon.3* %17, i64 0, i32 3
  store i8** %9, i8*** %545, align 8
  %546 = getelementptr inbounds %class.anon.3, %class.anon.3* %17, i64 0, i32 4
  store %"struct.tflite::NdArrayDesc"* %13, %"struct.tflite::NdArrayDesc"** %546, align 8
  %547 = getelementptr inbounds %class.anon.3, %class.anon.3* %17, i64 0, i32 5
  store i8** %10, i8*** %547, align 8
  %548 = getelementptr inbounds %class.anon.3, %class.anon.3* %17, i64 0, i32 6
  store %"struct.tflite::NdArrayDesc"* %14, %"struct.tflite::NdArrayDesc"** %548, align 8
  %549 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %549) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %549, i8 0, i64 20, i1 false) #9
  %550 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 0
  call void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIhPFhhhELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* nonnull dereferenceable(40) %15, %class.anon.3* nonnull dereferenceable(56) %17, i32* nonnull %550) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %549) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %541) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %394) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %393) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %392) #9
  br label %551

551:                                              ; preds = %376, %369, %367, %540
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIhEET_S5_S5_(i8 zeroext, i8 zeroext) #0 comdat align 2 {
  %3 = icmp ugt i8 %0, %1
  %4 = select i1 %3, i8 %0, i8 %1
  ret i8 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIhPFhhhELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* dereferenceable(40), %class.anon.3* dereferenceable(56), i32*) local_unnamed_addr #0 comdat {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %158

7:                                                ; preds = %3
  %8 = getelementptr inbounds i32, i32* %2, i64 1
  %9 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 1
  %10 = getelementptr inbounds i32, i32* %2, i64 2
  %11 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 2
  %12 = getelementptr inbounds i32, i32* %2, i64 3
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 3
  %14 = getelementptr inbounds i32, i32* %2, i64 4
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 4
  %16 = getelementptr inbounds %class.anon.3, %class.anon.3* %1, i64 0, i32 2
  %17 = getelementptr inbounds %class.anon.3, %class.anon.3* %1, i64 0, i32 3
  %18 = getelementptr inbounds %class.anon.3, %class.anon.3* %1, i64 0, i32 4
  %19 = getelementptr inbounds %class.anon.3, %class.anon.3* %1, i64 0, i32 5
  %20 = getelementptr inbounds %class.anon.3, %class.anon.3* %1, i64 0, i32 6
  %21 = getelementptr inbounds %class.anon.3, %class.anon.3* %1, i64 0, i32 0
  %22 = getelementptr inbounds %class.anon.3, %class.anon.3* %1, i64 0, i32 1
  br label %23

23:                                               ; preds = %7, %153
  %24 = phi i32 [ 0, %7 ], [ %155, %153 ]
  store i32 0, i32* %8, align 4
  %25 = load i32, i32* %9, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %153

27:                                               ; preds = %23, %146
  %28 = phi i32 [ %148, %146 ], [ 0, %23 ]
  store i32 0, i32* %10, align 4
  %29 = load i32, i32* %11, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %146

31:                                               ; preds = %27, %139
  %32 = phi i32 [ %141, %139 ], [ 0, %27 ]
  store i32 0, i32* %12, align 4
  %33 = load i32, i32* %13, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %139

35:                                               ; preds = %31, %132
  %36 = phi i32 [ %134, %132 ], [ 0, %31 ]
  store i32 0, i32* %14, align 4
  %37 = load i32, i32* %15, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %132

39:                                               ; preds = %35, %39
  %40 = phi i32 [ %128, %39 ], [ 0, %35 ]
  %41 = phi i32 [ %131, %39 ], [ %36, %35 ]
  %42 = load i8 (i8, i8)**, i8 (i8, i8)*** %16, align 8
  %43 = load i8 (i8, i8)*, i8 (i8, i8)** %42, align 8
  %44 = load i8**, i8*** %17, align 8
  %45 = load i8*, i8** %44, align 8
  %46 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %18, align 8
  %47 = load i32, i32* %2, align 4
  %48 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = mul nsw i32 %49, %47
  %51 = load i32, i32* %8, align 4
  %52 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 1
  %53 = load i32, i32* %52, align 4
  %54 = mul nsw i32 %53, %51
  %55 = add nsw i32 %54, %50
  %56 = load i32, i32* %10, align 4
  %57 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 2
  %58 = load i32, i32* %57, align 4
  %59 = mul nsw i32 %58, %56
  %60 = add nsw i32 %55, %59
  %61 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 3
  %62 = load i32, i32* %61, align 4
  %63 = mul nsw i32 %62, %41
  %64 = add nsw i32 %60, %63
  %65 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 4
  %66 = load i32, i32* %65, align 4
  %67 = mul nsw i32 %66, %40
  %68 = add nsw i32 %64, %67
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %45, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = load i8**, i8*** %19, align 8
  %73 = load i8*, i8** %72, align 8
  %74 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %20, align 8
  %75 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 0
  %76 = load i32, i32* %75, align 4
  %77 = mul nsw i32 %76, %47
  %78 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 1
  %79 = load i32, i32* %78, align 4
  %80 = mul nsw i32 %79, %51
  %81 = add nsw i32 %80, %77
  %82 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 2
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %83, %56
  %85 = add nsw i32 %81, %84
  %86 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 3
  %87 = load i32, i32* %86, align 4
  %88 = mul nsw i32 %87, %41
  %89 = add nsw i32 %85, %88
  %90 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 4
  %91 = load i32, i32* %90, align 4
  %92 = mul nsw i32 %91, %40
  %93 = add nsw i32 %89, %92
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %73, i64 %94
  %96 = load i8, i8* %95, align 1
  %97 = tail call zeroext i8 %43(i8 zeroext %71, i8 zeroext %96) #9
  %98 = load i8**, i8*** %21, align 8
  %99 = load i8*, i8** %98, align 8
  %100 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %22, align 8
  %101 = load i32, i32* %2, align 4
  %102 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 0
  %103 = load i32, i32* %102, align 4
  %104 = mul nsw i32 %103, %101
  %105 = load i32, i32* %8, align 4
  %106 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 1
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %105
  %109 = add nsw i32 %108, %104
  %110 = load i32, i32* %10, align 4
  %111 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 2
  %112 = load i32, i32* %111, align 4
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i32 %109, %113
  %115 = load i32, i32* %12, align 4
  %116 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 3
  %117 = load i32, i32* %116, align 4
  %118 = mul nsw i32 %117, %115
  %119 = add nsw i32 %114, %118
  %120 = load i32, i32* %14, align 4
  %121 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 4
  %122 = load i32, i32* %121, align 4
  %123 = mul nsw i32 %122, %120
  %124 = add nsw i32 %119, %123
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %99, i64 %125
  store i8 %97, i8* %126, align 1
  %127 = load i32, i32* %14, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %14, align 4
  %129 = load i32, i32* %15, align 4
  %130 = icmp slt i32 %128, %129
  %131 = load i32, i32* %12, align 4
  br i1 %130, label %39, label %132

132:                                              ; preds = %39, %35
  %133 = phi i32 [ %36, %35 ], [ %131, %39 ]
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %12, align 4
  %135 = load i32, i32* %13, align 4
  %136 = icmp slt i32 %134, %135
  br i1 %136, label %35, label %137

137:                                              ; preds = %132
  %138 = load i32, i32* %10, align 4
  br label %139

139:                                              ; preds = %137, %31
  %140 = phi i32 [ %138, %137 ], [ %32, %31 ]
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %10, align 4
  %142 = load i32, i32* %11, align 4
  %143 = icmp slt i32 %141, %142
  br i1 %143, label %31, label %144

144:                                              ; preds = %139
  %145 = load i32, i32* %8, align 4
  br label %146

146:                                              ; preds = %144, %27
  %147 = phi i32 [ %145, %144 ], [ %28, %27 ]
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %8, align 4
  %149 = load i32, i32* %9, align 4
  %150 = icmp slt i32 %148, %149
  br i1 %150, label %27, label %151

151:                                              ; preds = %146
  %152 = load i32, i32* %2, align 4
  br label %153

153:                                              ; preds = %151, %23
  %154 = phi i32 [ %152, %151 ], [ %24, %23 ]
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %2, align 4
  %156 = load i32, i32* %4, align 4
  %157 = icmp slt i32 %155, %156
  br i1 %157, label %23, label %158

158:                                              ; preds = %153, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIiPFiiiELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, i32 (i32, i32)*) local_unnamed_addr #0 comdat {
  %8 = alloca [5 x i32], align 16
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32 (i32, i32)*, align 8
  %13 = alloca %"struct.tflite::NdArrayDesc", align 4
  %14 = alloca %"struct.tflite::NdArrayDesc", align 4
  %15 = alloca %"struct.tflite::NdArrayDesc", align 4
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %class.anon.4, align 8
  store i32* %1, i32** %9, align 8
  store i32* %3, i32** %10, align 8
  store i32* %5, i32** %11, align 8
  store i32 (i32, i32)* %6, i32 (i32, i32)** %12, align 8
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %390

23:                                               ; preds = %7
  %24 = icmp sgt i32 %19, 5
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %union.anon, %union.anon* %25, i64 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = bitcast %union.anon* %25 to i32*
  %29 = select i1 %24, i32* %27, i32* %28
  %30 = bitcast i32* %29 to i8*
  %31 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 1
  %32 = getelementptr inbounds %union.anon, %union.anon* %31, i64 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = bitcast %union.anon* %31 to i32*
  %35 = select i1 %24, i32* %33, i32* %34
  %36 = bitcast i32* %35 to i8*
  %37 = sext i32 %19 to i64
  %38 = shl nsw i64 %37, 2
  %39 = tail call i32 @bcmp(i8* %30, i8* %36, i64 %38) #9
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %390

41:                                               ; preds = %23
  br i1 %24, label %44, label %42

42:                                               ; preds = %41
  %43 = icmp sgt i32 %19, 0
  br i1 %43, label %44, label %248

44:                                               ; preds = %41, %42
  %45 = phi i32* [ %28, %42 ], [ %27, %41 ]
  %46 = zext i32 %19 to i64
  %47 = icmp ult i32 %19, 8
  br i1 %47, label %133, label %48

48:                                               ; preds = %44
  %49 = and i64 %46, 4294967288
  %50 = add nsw i64 %49, -8
  %51 = lshr exact i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = and i64 %52, 3
  %54 = icmp ult i64 %50, 24
  br i1 %54, label %100, label %55

55:                                               ; preds = %48
  %56 = sub nsw i64 %52, %53
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %97, %57 ]
  %59 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %55 ], [ %95, %57 ]
  %60 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %55 ], [ %96, %57 ]
  %61 = phi i64 [ %56, %55 ], [ %98, %57 ]
  %62 = getelementptr inbounds i32, i32* %45, i64 %58
  %63 = bitcast i32* %62 to <4 x i32>*
  %64 = load <4 x i32>, <4 x i32>* %63, align 4
  %65 = getelementptr inbounds i32, i32* %62, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  %67 = load <4 x i32>, <4 x i32>* %66, align 4
  %68 = mul nsw <4 x i32> %64, %59
  %69 = mul nsw <4 x i32> %67, %60
  %70 = or i64 %58, 8
  %71 = getelementptr inbounds i32, i32* %45, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  %73 = load <4 x i32>, <4 x i32>* %72, align 4
  %74 = getelementptr inbounds i32, i32* %71, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  %76 = load <4 x i32>, <4 x i32>* %75, align 4
  %77 = mul nsw <4 x i32> %73, %68
  %78 = mul nsw <4 x i32> %76, %69
  %79 = or i64 %58, 16
  %80 = getelementptr inbounds i32, i32* %45, i64 %79
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4
  %83 = getelementptr inbounds i32, i32* %80, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4
  %86 = mul nsw <4 x i32> %82, %77
  %87 = mul nsw <4 x i32> %85, %78
  %88 = or i64 %58, 24
  %89 = getelementptr inbounds i32, i32* %45, i64 %88
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4
  %92 = getelementptr inbounds i32, i32* %89, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4
  %95 = mul nsw <4 x i32> %91, %86
  %96 = mul nsw <4 x i32> %94, %87
  %97 = add i64 %58, 32
  %98 = add i64 %61, -4
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %57, !llvm.loop !209

100:                                              ; preds = %57, %48
  %101 = phi <4 x i32> [ undef, %48 ], [ %95, %57 ]
  %102 = phi <4 x i32> [ undef, %48 ], [ %96, %57 ]
  %103 = phi i64 [ 0, %48 ], [ %97, %57 ]
  %104 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %48 ], [ %95, %57 ]
  %105 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %48 ], [ %96, %57 ]
  %106 = icmp eq i64 %53, 0
  br i1 %106, label %123, label %107

107:                                              ; preds = %100, %107
  %108 = phi i64 [ %120, %107 ], [ %103, %100 ]
  %109 = phi <4 x i32> [ %118, %107 ], [ %104, %100 ]
  %110 = phi <4 x i32> [ %119, %107 ], [ %105, %100 ]
  %111 = phi i64 [ %121, %107 ], [ %53, %100 ]
  %112 = getelementptr inbounds i32, i32* %45, i64 %108
  %113 = bitcast i32* %112 to <4 x i32>*
  %114 = load <4 x i32>, <4 x i32>* %113, align 4
  %115 = getelementptr inbounds i32, i32* %112, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  %117 = load <4 x i32>, <4 x i32>* %116, align 4
  %118 = mul nsw <4 x i32> %114, %109
  %119 = mul nsw <4 x i32> %117, %110
  %120 = add i64 %108, 8
  %121 = add i64 %111, -1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %107, !llvm.loop !210

123:                                              ; preds = %107, %100
  %124 = phi <4 x i32> [ %101, %100 ], [ %118, %107 ]
  %125 = phi <4 x i32> [ %102, %100 ], [ %119, %107 ]
  %126 = mul <4 x i32> %125, %124
  %127 = shufflevector <4 x i32> %126, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %128 = mul <4 x i32> %126, %127
  %129 = shufflevector <4 x i32> %128, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %130 = mul <4 x i32> %128, %129
  %131 = extractelement <4 x i32> %130, i32 0
  %132 = icmp eq i64 %49, %46
  br i1 %132, label %144, label %133

133:                                              ; preds = %123, %44
  %134 = phi i64 [ 0, %44 ], [ %49, %123 ]
  %135 = phi i32 [ 1, %44 ], [ %131, %123 ]
  br label %136

136:                                              ; preds = %133, %136
  %137 = phi i64 [ %142, %136 ], [ %134, %133 ]
  %138 = phi i32 [ %141, %136 ], [ %135, %133 ]
  %139 = getelementptr inbounds i32, i32* %45, i64 %137
  %140 = load i32, i32* %139, align 4
  %141 = mul nsw i32 %140, %138
  %142 = add nuw nsw i64 %137, 1
  %143 = icmp eq i64 %142, %46
  br i1 %143, label %144, label %136, !llvm.loop !211

144:                                              ; preds = %136, %123
  %145 = phi i32 [ %131, %123 ], [ %141, %136 ]
  br i1 %24, label %148, label %146

146:                                              ; preds = %144
  %147 = icmp sgt i32 %19, 0
  br i1 %147, label %148, label %248

148:                                              ; preds = %144, %146
  %149 = phi i32* [ %34, %146 ], [ %33, %144 ]
  %150 = zext i32 %19 to i64
  %151 = icmp ult i32 %19, 8
  br i1 %151, label %237, label %152

152:                                              ; preds = %148
  %153 = and i64 %46, 4294967288
  %154 = add nsw i64 %153, -8
  %155 = lshr exact i64 %154, 3
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 3
  %158 = icmp ult i64 %154, 24
  br i1 %158, label %204, label %159

159:                                              ; preds = %152
  %160 = sub nsw i64 %156, %157
  br label %161

161:                                              ; preds = %161, %159
  %162 = phi i64 [ 0, %159 ], [ %201, %161 ]
  %163 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %159 ], [ %199, %161 ]
  %164 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %159 ], [ %200, %161 ]
  %165 = phi i64 [ %160, %159 ], [ %202, %161 ]
  %166 = getelementptr inbounds i32, i32* %149, i64 %162
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = getelementptr inbounds i32, i32* %166, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4
  %172 = mul nsw <4 x i32> %168, %163
  %173 = mul nsw <4 x i32> %171, %164
  %174 = or i64 %162, 8
  %175 = getelementptr inbounds i32, i32* %149, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = getelementptr inbounds i32, i32* %175, i64 4
  %179 = bitcast i32* %178 to <4 x i32>*
  %180 = load <4 x i32>, <4 x i32>* %179, align 4
  %181 = mul nsw <4 x i32> %177, %172
  %182 = mul nsw <4 x i32> %180, %173
  %183 = or i64 %162, 16
  %184 = getelementptr inbounds i32, i32* %149, i64 %183
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 4
  %187 = getelementptr inbounds i32, i32* %184, i64 4
  %188 = bitcast i32* %187 to <4 x i32>*
  %189 = load <4 x i32>, <4 x i32>* %188, align 4
  %190 = mul nsw <4 x i32> %186, %181
  %191 = mul nsw <4 x i32> %189, %182
  %192 = or i64 %162, 24
  %193 = getelementptr inbounds i32, i32* %149, i64 %192
  %194 = bitcast i32* %193 to <4 x i32>*
  %195 = load <4 x i32>, <4 x i32>* %194, align 4
  %196 = getelementptr inbounds i32, i32* %193, i64 4
  %197 = bitcast i32* %196 to <4 x i32>*
  %198 = load <4 x i32>, <4 x i32>* %197, align 4
  %199 = mul nsw <4 x i32> %195, %190
  %200 = mul nsw <4 x i32> %198, %191
  %201 = add i64 %162, 32
  %202 = add i64 %165, -4
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %161, !llvm.loop !212

204:                                              ; preds = %161, %152
  %205 = phi <4 x i32> [ undef, %152 ], [ %199, %161 ]
  %206 = phi <4 x i32> [ undef, %152 ], [ %200, %161 ]
  %207 = phi i64 [ 0, %152 ], [ %201, %161 ]
  %208 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %152 ], [ %199, %161 ]
  %209 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %152 ], [ %200, %161 ]
  %210 = icmp eq i64 %157, 0
  br i1 %210, label %227, label %211

211:                                              ; preds = %204, %211
  %212 = phi i64 [ %224, %211 ], [ %207, %204 ]
  %213 = phi <4 x i32> [ %222, %211 ], [ %208, %204 ]
  %214 = phi <4 x i32> [ %223, %211 ], [ %209, %204 ]
  %215 = phi i64 [ %225, %211 ], [ %157, %204 ]
  %216 = getelementptr inbounds i32, i32* %149, i64 %212
  %217 = bitcast i32* %216 to <4 x i32>*
  %218 = load <4 x i32>, <4 x i32>* %217, align 4
  %219 = getelementptr inbounds i32, i32* %216, i64 4
  %220 = bitcast i32* %219 to <4 x i32>*
  %221 = load <4 x i32>, <4 x i32>* %220, align 4
  %222 = mul nsw <4 x i32> %218, %213
  %223 = mul nsw <4 x i32> %221, %214
  %224 = add i64 %212, 8
  %225 = add i64 %215, -1
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %211, !llvm.loop !213

227:                                              ; preds = %211, %204
  %228 = phi <4 x i32> [ %205, %204 ], [ %222, %211 ]
  %229 = phi <4 x i32> [ %206, %204 ], [ %223, %211 ]
  %230 = mul <4 x i32> %229, %228
  %231 = shufflevector <4 x i32> %230, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %232 = mul <4 x i32> %230, %231
  %233 = shufflevector <4 x i32> %232, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %234 = mul <4 x i32> %232, %233
  %235 = extractelement <4 x i32> %234, i32 0
  %236 = icmp eq i64 %153, %46
  br i1 %236, label %248, label %237

237:                                              ; preds = %227, %148
  %238 = phi i64 [ 0, %148 ], [ %153, %227 ]
  %239 = phi i32 [ 1, %148 ], [ %235, %227 ]
  br label %240

240:                                              ; preds = %237, %240
  %241 = phi i64 [ %246, %240 ], [ %238, %237 ]
  %242 = phi i32 [ %245, %240 ], [ %239, %237 ]
  %243 = getelementptr inbounds i32, i32* %149, i64 %241
  %244 = load i32, i32* %243, align 4
  %245 = mul nsw i32 %244, %242
  %246 = add nuw nsw i64 %241, 1
  %247 = icmp eq i64 %246, %150
  br i1 %247, label %248, label %240, !llvm.loop !214

248:                                              ; preds = %240, %227, %42, %146
  %249 = phi i32 [ %145, %146 ], [ 1, %42 ], [ %145, %227 ], [ %145, %240 ]
  %250 = phi i32 [ 1, %146 ], [ 1, %42 ], [ %235, %227 ], [ %245, %240 ]
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %252 = load i32, i32* %251, align 8
  %253 = icmp sgt i32 %252, 5
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  br i1 %253, label %255, label %258

255:                                              ; preds = %248
  %256 = getelementptr inbounds %union.anon, %union.anon* %254, i64 0, i32 0
  %257 = load i32*, i32** %256, align 8
  br label %261

258:                                              ; preds = %248
  %259 = bitcast %union.anon* %254 to i32*
  %260 = icmp sgt i32 %252, 0
  br i1 %260, label %261, label %361

261:                                              ; preds = %258, %255
  %262 = phi i32* [ %257, %255 ], [ %259, %258 ]
  %263 = zext i32 %252 to i64
  %264 = icmp ult i32 %252, 8
  br i1 %264, label %350, label %265

265:                                              ; preds = %261
  %266 = and i64 %263, 4294967288
  %267 = add nsw i64 %266, -8
  %268 = lshr exact i64 %267, 3
  %269 = add nuw nsw i64 %268, 1
  %270 = and i64 %269, 3
  %271 = icmp ult i64 %267, 24
  br i1 %271, label %317, label %272

272:                                              ; preds = %265
  %273 = sub nsw i64 %269, %270
  br label %274

274:                                              ; preds = %274, %272
  %275 = phi i64 [ 0, %272 ], [ %314, %274 ]
  %276 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %272 ], [ %312, %274 ]
  %277 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %272 ], [ %313, %274 ]
  %278 = phi i64 [ %273, %272 ], [ %315, %274 ]
  %279 = getelementptr inbounds i32, i32* %262, i64 %275
  %280 = bitcast i32* %279 to <4 x i32>*
  %281 = load <4 x i32>, <4 x i32>* %280, align 4
  %282 = getelementptr inbounds i32, i32* %279, i64 4
  %283 = bitcast i32* %282 to <4 x i32>*
  %284 = load <4 x i32>, <4 x i32>* %283, align 4
  %285 = mul nsw <4 x i32> %281, %276
  %286 = mul nsw <4 x i32> %284, %277
  %287 = or i64 %275, 8
  %288 = getelementptr inbounds i32, i32* %262, i64 %287
  %289 = bitcast i32* %288 to <4 x i32>*
  %290 = load <4 x i32>, <4 x i32>* %289, align 4
  %291 = getelementptr inbounds i32, i32* %288, i64 4
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4
  %294 = mul nsw <4 x i32> %290, %285
  %295 = mul nsw <4 x i32> %293, %286
  %296 = or i64 %275, 16
  %297 = getelementptr inbounds i32, i32* %262, i64 %296
  %298 = bitcast i32* %297 to <4 x i32>*
  %299 = load <4 x i32>, <4 x i32>* %298, align 4
  %300 = getelementptr inbounds i32, i32* %297, i64 4
  %301 = bitcast i32* %300 to <4 x i32>*
  %302 = load <4 x i32>, <4 x i32>* %301, align 4
  %303 = mul nsw <4 x i32> %299, %294
  %304 = mul nsw <4 x i32> %302, %295
  %305 = or i64 %275, 24
  %306 = getelementptr inbounds i32, i32* %262, i64 %305
  %307 = bitcast i32* %306 to <4 x i32>*
  %308 = load <4 x i32>, <4 x i32>* %307, align 4
  %309 = getelementptr inbounds i32, i32* %306, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4
  %312 = mul nsw <4 x i32> %308, %303
  %313 = mul nsw <4 x i32> %311, %304
  %314 = add i64 %275, 32
  %315 = add i64 %278, -4
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %274, !llvm.loop !215

317:                                              ; preds = %274, %265
  %318 = phi <4 x i32> [ undef, %265 ], [ %312, %274 ]
  %319 = phi <4 x i32> [ undef, %265 ], [ %313, %274 ]
  %320 = phi i64 [ 0, %265 ], [ %314, %274 ]
  %321 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %265 ], [ %312, %274 ]
  %322 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %265 ], [ %313, %274 ]
  %323 = icmp eq i64 %270, 0
  br i1 %323, label %340, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %337, %324 ], [ %320, %317 ]
  %326 = phi <4 x i32> [ %335, %324 ], [ %321, %317 ]
  %327 = phi <4 x i32> [ %336, %324 ], [ %322, %317 ]
  %328 = phi i64 [ %338, %324 ], [ %270, %317 ]
  %329 = getelementptr inbounds i32, i32* %262, i64 %325
  %330 = bitcast i32* %329 to <4 x i32>*
  %331 = load <4 x i32>, <4 x i32>* %330, align 4
  %332 = getelementptr inbounds i32, i32* %329, i64 4
  %333 = bitcast i32* %332 to <4 x i32>*
  %334 = load <4 x i32>, <4 x i32>* %333, align 4
  %335 = mul nsw <4 x i32> %331, %326
  %336 = mul nsw <4 x i32> %334, %327
  %337 = add i64 %325, 8
  %338 = add i64 %328, -1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %324, !llvm.loop !216

340:                                              ; preds = %324, %317
  %341 = phi <4 x i32> [ %318, %317 ], [ %335, %324 ]
  %342 = phi <4 x i32> [ %319, %317 ], [ %336, %324 ]
  %343 = mul <4 x i32> %342, %341
  %344 = shufflevector <4 x i32> %343, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %345 = mul <4 x i32> %343, %344
  %346 = shufflevector <4 x i32> %345, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %347 = mul <4 x i32> %345, %346
  %348 = extractelement <4 x i32> %347, i32 0
  %349 = icmp eq i64 %266, %263
  br i1 %349, label %361, label %350

350:                                              ; preds = %340, %261
  %351 = phi i64 [ 0, %261 ], [ %266, %340 ]
  %352 = phi i32 [ 1, %261 ], [ %348, %340 ]
  br label %353

353:                                              ; preds = %350, %353
  %354 = phi i64 [ %359, %353 ], [ %351, %350 ]
  %355 = phi i32 [ %358, %353 ], [ %352, %350 ]
  %356 = getelementptr inbounds i32, i32* %262, i64 %354
  %357 = load i32, i32* %356, align 4
  %358 = mul nsw i32 %357, %355
  %359 = add nuw nsw i64 %354, 1
  %360 = icmp eq i64 %359, %263
  br i1 %360, label %361, label %353, !llvm.loop !217

361:                                              ; preds = %353, %340, %258
  %362 = phi i32 [ 1, %258 ], [ %348, %340 ], [ %358, %353 ]
  %363 = icmp eq i32 %249, %250
  br i1 %363, label %365, label %364

364:                                              ; preds = %361
  tail call void @abort() #11
  unreachable

365:                                              ; preds = %361
  %366 = icmp eq i32 %249, %362
  br i1 %366, label %367, label %375

367:                                              ; preds = %365
  %368 = icmp sgt i32 %249, 0
  br i1 %368, label %369, label %551

369:                                              ; preds = %367
  %370 = zext i32 %249 to i64
  %371 = load i32, i32* %1, align 4
  %372 = load i32, i32* %3, align 4
  %373 = tail call i32 %6(i32 %371, i32 %372) #9
  store i32 %373, i32* %5, align 4
  %374 = icmp eq i32 %249, 1
  br i1 %374, label %551, label %376

375:                                              ; preds = %365
  tail call void @abort() #11
  unreachable

376:                                              ; preds = %369, %376
  %377 = phi i64 [ %388, %376 ], [ 1, %369 ]
  %378 = load i32 (i32, i32)*, i32 (i32, i32)** %12, align 8
  %379 = load i32*, i32** %9, align 8
  %380 = load i32*, i32** %10, align 8
  %381 = load i32*, i32** %11, align 8
  %382 = getelementptr inbounds i32, i32* %379, i64 %377
  %383 = load i32, i32* %382, align 4
  %384 = getelementptr inbounds i32, i32* %380, i64 %377
  %385 = load i32, i32* %384, align 4
  %386 = tail call i32 %378(i32 %383, i32 %385) #9
  %387 = getelementptr inbounds i32, i32* %381, i64 %377
  store i32 %386, i32* %387, align 4
  %388 = add nuw nsw i64 %377, 1
  %389 = icmp eq i64 %388, %370
  br i1 %389, label %551, label %376

390:                                              ; preds = %7, %23
  %391 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %392 = bitcast %"struct.tflite::NdArrayDesc"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %392) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %392, i8 -86, i64 40, i1 false)
  %393 = bitcast %"struct.tflite::NdArrayDesc"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %393) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %393, i8 -86, i64 40, i1 false)
  %394 = bitcast %"struct.tflite::NdArrayDesc"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %394) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %394, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %2, %"struct.tflite::NdArrayDesc"* nonnull %13, %"struct.tflite::NdArrayDesc"* nonnull %14)
  %395 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %395) #9
  %396 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %396, align 8, !alias.scope !218
  %397 = load i32, i32* %391, align 8, !noalias !218
  %398 = icmp sgt i32 %397, 5
  br i1 %398, label %399, label %400

399:                                              ; preds = %390
  call void @abort() #11, !noalias !218
  unreachable

400:                                              ; preds = %390
  store i32 5, i32* %396, align 8, !alias.scope !218
  %401 = sub i32 5, %397
  %402 = icmp sgt i32 %401, 0
  %403 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %404 = bitcast %union.anon* %403 to [5 x i32]*
  br i1 %402, label %405, label %484

405:                                              ; preds = %400
  %406 = zext i32 %401 to i64
  %407 = icmp ult i32 %401, 8
  br i1 %407, label %477, label %408

408:                                              ; preds = %405
  %409 = and i64 %406, 4294967288
  %410 = add nsw i64 %409, -8
  %411 = lshr exact i64 %410, 3
  %412 = add nuw nsw i64 %411, 1
  %413 = and i64 %412, 7
  %414 = icmp ult i64 %410, 56
  br i1 %414, label %462, label %415

415:                                              ; preds = %408
  %416 = sub nsw i64 %412, %413
  br label %417

417:                                              ; preds = %417, %415
  %418 = phi i64 [ 0, %415 ], [ %459, %417 ]
  %419 = phi i64 [ %416, %415 ], [ %460, %417 ]
  %420 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %418
  %421 = bitcast i32* %420 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %421, align 8, !alias.scope !218
  %422 = getelementptr inbounds i32, i32* %420, i64 4
  %423 = bitcast i32* %422 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %423, align 8, !alias.scope !218
  %424 = or i64 %418, 8
  %425 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %424
  %426 = bitcast i32* %425 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %426, align 8, !alias.scope !218
  %427 = getelementptr inbounds i32, i32* %425, i64 4
  %428 = bitcast i32* %427 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %428, align 8, !alias.scope !218
  %429 = or i64 %418, 16
  %430 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %429
  %431 = bitcast i32* %430 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %431, align 8, !alias.scope !218
  %432 = getelementptr inbounds i32, i32* %430, i64 4
  %433 = bitcast i32* %432 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %433, align 8, !alias.scope !218
  %434 = or i64 %418, 24
  %435 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %434
  %436 = bitcast i32* %435 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %436, align 8, !alias.scope !218
  %437 = getelementptr inbounds i32, i32* %435, i64 4
  %438 = bitcast i32* %437 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %438, align 8, !alias.scope !218
  %439 = or i64 %418, 32
  %440 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %439
  %441 = bitcast i32* %440 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %441, align 8, !alias.scope !218
  %442 = getelementptr inbounds i32, i32* %440, i64 4
  %443 = bitcast i32* %442 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %443, align 8, !alias.scope !218
  %444 = or i64 %418, 40
  %445 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %444
  %446 = bitcast i32* %445 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %446, align 8, !alias.scope !218
  %447 = getelementptr inbounds i32, i32* %445, i64 4
  %448 = bitcast i32* %447 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %448, align 8, !alias.scope !218
  %449 = or i64 %418, 48
  %450 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %449
  %451 = bitcast i32* %450 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %451, align 8, !alias.scope !218
  %452 = getelementptr inbounds i32, i32* %450, i64 4
  %453 = bitcast i32* %452 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %453, align 8, !alias.scope !218
  %454 = or i64 %418, 56
  %455 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %454
  %456 = bitcast i32* %455 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %456, align 8, !alias.scope !218
  %457 = getelementptr inbounds i32, i32* %455, i64 4
  %458 = bitcast i32* %457 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %458, align 8, !alias.scope !218
  %459 = add i64 %418, 64
  %460 = add i64 %419, -8
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %462, label %417, !llvm.loop !221

462:                                              ; preds = %417, %408
  %463 = phi i64 [ 0, %408 ], [ %459, %417 ]
  %464 = icmp eq i64 %413, 0
  br i1 %464, label %475, label %465

465:                                              ; preds = %462, %465
  %466 = phi i64 [ %472, %465 ], [ %463, %462 ]
  %467 = phi i64 [ %473, %465 ], [ %413, %462 ]
  %468 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %466
  %469 = bitcast i32* %468 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %469, align 8, !alias.scope !218
  %470 = getelementptr inbounds i32, i32* %468, i64 4
  %471 = bitcast i32* %470 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %471, align 8, !alias.scope !218
  %472 = add i64 %466, 8
  %473 = add i64 %467, -1
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %465, !llvm.loop !222

475:                                              ; preds = %465, %462
  %476 = icmp eq i64 %409, %406
  br i1 %476, label %484, label %477

477:                                              ; preds = %475, %405
  %478 = phi i64 [ 0, %405 ], [ %409, %475 ]
  br label %479

479:                                              ; preds = %477, %479
  %480 = phi i64 [ %482, %479 ], [ %478, %477 ]
  %481 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %480
  store i32 1, i32* %481, align 4, !alias.scope !218
  %482 = add nuw nsw i64 %480, 1
  %483 = icmp eq i64 %482, %406
  br i1 %483, label %484, label %479, !llvm.loop !223

484:                                              ; preds = %479, %475, %400
  %485 = getelementptr inbounds %union.anon, %union.anon* %403, i64 0, i32 0
  %486 = bitcast %union.anon* %403 to i32*
  %487 = sext i32 %401 to i64
  %488 = getelementptr inbounds i32, i32* %486, i64 %487
  %489 = bitcast i32* %488 to i8*
  %490 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %491 = bitcast %union.anon* %490 to i8*
  %492 = sext i32 %397 to i64
  %493 = shl nsw i64 %492, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %489, i8* align 4 %491, i64 %493, i1 false) #9
  %494 = load i32, i32* %396, align 8
  %495 = icmp sgt i32 %494, 5
  %496 = load i32*, i32** %485, align 8
  %497 = getelementptr inbounds i32, i32* %496, i64 4
  %498 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1, i64 8
  %499 = bitcast i8* %498 to i32*
  %500 = select i1 %495, i32* %497, i32* %499
  %501 = load i32, i32* %500, align 4
  %502 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 4
  store i32 %501, i32* %502, align 4
  %503 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 4
  store i32 1, i32* %503, align 4
  %504 = load i32, i32* %500, align 4
  %505 = getelementptr inbounds i32, i32* %496, i64 3
  %506 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1, i64 4
  %507 = bitcast i8* %506 to i32*
  %508 = select i1 %495, i32* %505, i32* %507
  %509 = load i32, i32* %508, align 4
  %510 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 3
  store i32 %509, i32* %510, align 4
  %511 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 3
  store i32 %504, i32* %511, align 4
  %512 = load i32, i32* %508, align 4
  %513 = mul nsw i32 %512, %504
  %514 = getelementptr inbounds i32, i32* %496, i64 2
  %515 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1
  %516 = bitcast [16 x i8]* %515 to i32*
  %517 = select i1 %495, i32* %514, i32* %516
  %518 = load i32, i32* %517, align 4
  %519 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 2
  store i32 %518, i32* %519, align 4
  %520 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 2
  store i32 %513, i32* %520, align 4
  %521 = load i32, i32* %517, align 4
  %522 = mul nsw i32 %521, %513
  %523 = getelementptr inbounds i32, i32* %496, i64 1
  %524 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 1
  %525 = select i1 %495, i32* %523, i32* %524
  %526 = load i32, i32* %525, align 4
  %527 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 1
  store i32 %526, i32* %527, align 4
  %528 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 1
  store i32 %522, i32* %528, align 4
  %529 = load i32, i32* %525, align 4
  %530 = mul nsw i32 %529, %522
  %531 = select i1 %495, i32* %496, i32* %486
  %532 = load i32, i32* %531, align 4
  %533 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 0
  store i32 %532, i32* %533, align 4
  %534 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 0
  store i32 %530, i32* %534, align 4
  %535 = xor i1 %495, true
  %536 = icmp eq i32* %496, null
  %537 = or i1 %536, %535
  br i1 %537, label %540, label %538

538:                                              ; preds = %484
  %539 = bitcast i32* %496 to i8*
  call void @_ZdaPv(i8* %539) #10
  br label %540

540:                                              ; preds = %484, %538
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %395) #9
  %541 = bitcast %class.anon.4* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %541) #9
  %542 = getelementptr inbounds %class.anon.4, %class.anon.4* %17, i64 0, i32 0
  store i32** %11, i32*** %542, align 8
  %543 = getelementptr inbounds %class.anon.4, %class.anon.4* %17, i64 0, i32 1
  store %"struct.tflite::NdArrayDesc"* %15, %"struct.tflite::NdArrayDesc"** %543, align 8
  %544 = getelementptr inbounds %class.anon.4, %class.anon.4* %17, i64 0, i32 2
  store i32 (i32, i32)** %12, i32 (i32, i32)*** %544, align 8
  %545 = getelementptr inbounds %class.anon.4, %class.anon.4* %17, i64 0, i32 3
  store i32** %9, i32*** %545, align 8
  %546 = getelementptr inbounds %class.anon.4, %class.anon.4* %17, i64 0, i32 4
  store %"struct.tflite::NdArrayDesc"* %13, %"struct.tflite::NdArrayDesc"** %546, align 8
  %547 = getelementptr inbounds %class.anon.4, %class.anon.4* %17, i64 0, i32 5
  store i32** %10, i32*** %547, align 8
  %548 = getelementptr inbounds %class.anon.4, %class.anon.4* %17, i64 0, i32 6
  store %"struct.tflite::NdArrayDesc"* %14, %"struct.tflite::NdArrayDesc"** %548, align 8
  %549 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %549) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %549, i8 0, i64 20, i1 false) #9
  %550 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 0
  call void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIiPFiiiELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* nonnull dereferenceable(40) %15, %class.anon.4* nonnull dereferenceable(56) %17, i32* nonnull %550) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %549) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %541) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %394) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %393) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %392) #9
  br label %551

551:                                              ; preds = %376, %369, %367, %540
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIiEET_S5_S5_(i32, i32) #0 comdat align 2 {
  %3 = icmp sgt i32 %0, %1
  %4 = select i1 %3, i32 %0, i32 %1
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIiPFiiiELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* dereferenceable(40), %class.anon.4* dereferenceable(56), i32*) local_unnamed_addr #0 comdat {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %158

7:                                                ; preds = %3
  %8 = getelementptr inbounds i32, i32* %2, i64 1
  %9 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 1
  %10 = getelementptr inbounds i32, i32* %2, i64 2
  %11 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 2
  %12 = getelementptr inbounds i32, i32* %2, i64 3
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 3
  %14 = getelementptr inbounds i32, i32* %2, i64 4
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 4
  %16 = getelementptr inbounds %class.anon.4, %class.anon.4* %1, i64 0, i32 2
  %17 = getelementptr inbounds %class.anon.4, %class.anon.4* %1, i64 0, i32 3
  %18 = getelementptr inbounds %class.anon.4, %class.anon.4* %1, i64 0, i32 4
  %19 = getelementptr inbounds %class.anon.4, %class.anon.4* %1, i64 0, i32 5
  %20 = getelementptr inbounds %class.anon.4, %class.anon.4* %1, i64 0, i32 6
  %21 = getelementptr inbounds %class.anon.4, %class.anon.4* %1, i64 0, i32 0
  %22 = getelementptr inbounds %class.anon.4, %class.anon.4* %1, i64 0, i32 1
  br label %23

23:                                               ; preds = %7, %153
  %24 = phi i32 [ 0, %7 ], [ %155, %153 ]
  store i32 0, i32* %8, align 4
  %25 = load i32, i32* %9, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %153

27:                                               ; preds = %23, %146
  %28 = phi i32 [ %148, %146 ], [ 0, %23 ]
  store i32 0, i32* %10, align 4
  %29 = load i32, i32* %11, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %146

31:                                               ; preds = %27, %139
  %32 = phi i32 [ %141, %139 ], [ 0, %27 ]
  store i32 0, i32* %12, align 4
  %33 = load i32, i32* %13, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %139

35:                                               ; preds = %31, %132
  %36 = phi i32 [ %134, %132 ], [ 0, %31 ]
  store i32 0, i32* %14, align 4
  %37 = load i32, i32* %15, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %132

39:                                               ; preds = %35, %39
  %40 = phi i32 [ %128, %39 ], [ 0, %35 ]
  %41 = phi i32 [ %131, %39 ], [ %36, %35 ]
  %42 = load i32 (i32, i32)**, i32 (i32, i32)*** %16, align 8
  %43 = load i32 (i32, i32)*, i32 (i32, i32)** %42, align 8
  %44 = load i32**, i32*** %17, align 8
  %45 = load i32*, i32** %44, align 8
  %46 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %18, align 8
  %47 = load i32, i32* %2, align 4
  %48 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = mul nsw i32 %49, %47
  %51 = load i32, i32* %8, align 4
  %52 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 1
  %53 = load i32, i32* %52, align 4
  %54 = mul nsw i32 %53, %51
  %55 = add nsw i32 %54, %50
  %56 = load i32, i32* %10, align 4
  %57 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 2
  %58 = load i32, i32* %57, align 4
  %59 = mul nsw i32 %58, %56
  %60 = add nsw i32 %55, %59
  %61 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 3
  %62 = load i32, i32* %61, align 4
  %63 = mul nsw i32 %62, %41
  %64 = add nsw i32 %60, %63
  %65 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 4
  %66 = load i32, i32* %65, align 4
  %67 = mul nsw i32 %66, %40
  %68 = add nsw i32 %64, %67
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %45, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = load i32**, i32*** %19, align 8
  %73 = load i32*, i32** %72, align 8
  %74 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %20, align 8
  %75 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 0
  %76 = load i32, i32* %75, align 4
  %77 = mul nsw i32 %76, %47
  %78 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 1
  %79 = load i32, i32* %78, align 4
  %80 = mul nsw i32 %79, %51
  %81 = add nsw i32 %80, %77
  %82 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 2
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %83, %56
  %85 = add nsw i32 %81, %84
  %86 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 3
  %87 = load i32, i32* %86, align 4
  %88 = mul nsw i32 %87, %41
  %89 = add nsw i32 %85, %88
  %90 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 4
  %91 = load i32, i32* %90, align 4
  %92 = mul nsw i32 %91, %40
  %93 = add nsw i32 %89, %92
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i32, i32* %73, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = tail call i32 %43(i32 %71, i32 %96) #9
  %98 = load i32**, i32*** %21, align 8
  %99 = load i32*, i32** %98, align 8
  %100 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %22, align 8
  %101 = load i32, i32* %2, align 4
  %102 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 0
  %103 = load i32, i32* %102, align 4
  %104 = mul nsw i32 %103, %101
  %105 = load i32, i32* %8, align 4
  %106 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 1
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %105
  %109 = add nsw i32 %108, %104
  %110 = load i32, i32* %10, align 4
  %111 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 2
  %112 = load i32, i32* %111, align 4
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i32 %109, %113
  %115 = load i32, i32* %12, align 4
  %116 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 3
  %117 = load i32, i32* %116, align 4
  %118 = mul nsw i32 %117, %115
  %119 = add nsw i32 %114, %118
  %120 = load i32, i32* %14, align 4
  %121 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 4
  %122 = load i32, i32* %121, align 4
  %123 = mul nsw i32 %122, %120
  %124 = add nsw i32 %119, %123
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i32, i32* %99, i64 %125
  store i32 %97, i32* %126, align 4
  %127 = load i32, i32* %14, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %14, align 4
  %129 = load i32, i32* %15, align 4
  %130 = icmp slt i32 %128, %129
  %131 = load i32, i32* %12, align 4
  br i1 %130, label %39, label %132

132:                                              ; preds = %39, %35
  %133 = phi i32 [ %36, %35 ], [ %131, %39 ]
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %12, align 4
  %135 = load i32, i32* %13, align 4
  %136 = icmp slt i32 %134, %135
  br i1 %136, label %35, label %137

137:                                              ; preds = %132
  %138 = load i32, i32* %10, align 4
  br label %139

139:                                              ; preds = %137, %31
  %140 = phi i32 [ %138, %137 ], [ %32, %31 ]
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %10, align 4
  %142 = load i32, i32* %11, align 4
  %143 = icmp slt i32 %141, %142
  br i1 %143, label %31, label %144

144:                                              ; preds = %139
  %145 = load i32, i32* %8, align 4
  br label %146

146:                                              ; preds = %144, %27
  %147 = phi i32 [ %145, %144 ], [ %28, %27 ]
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %8, align 4
  %149 = load i32, i32* %9, align 4
  %150 = icmp slt i32 %148, %149
  br i1 %150, label %27, label %151

151:                                              ; preds = %146
  %152 = load i32, i32* %2, align 4
  br label %153

153:                                              ; preds = %151, %23
  %154 = phi i32 [ %152, %151 ], [ %24, %23 ]
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %2, align 4
  %156 = load i32, i32* %4, align 4
  %157 = icmp slt i32 %155, %156
  br i1 %157, label %23, label %158

158:                                              ; preds = %153, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIlPFlllELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, i64 (i64, i64)*) local_unnamed_addr #0 comdat {
  %8 = alloca [5 x i32], align 16
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca i64 (i64, i64)*, align 8
  %13 = alloca %"struct.tflite::NdArrayDesc", align 4
  %14 = alloca %"struct.tflite::NdArrayDesc", align 4
  %15 = alloca %"struct.tflite::NdArrayDesc", align 4
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %class.anon.5, align 8
  store i64* %1, i64** %9, align 8
  store i64* %3, i64** %10, align 8
  store i64* %5, i64** %11, align 8
  store i64 (i64, i64)* %6, i64 (i64, i64)** %12, align 8
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %390

23:                                               ; preds = %7
  %24 = icmp sgt i32 %19, 5
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %union.anon, %union.anon* %25, i64 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = bitcast %union.anon* %25 to i32*
  %29 = select i1 %24, i32* %27, i32* %28
  %30 = bitcast i32* %29 to i8*
  %31 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 1
  %32 = getelementptr inbounds %union.anon, %union.anon* %31, i64 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = bitcast %union.anon* %31 to i32*
  %35 = select i1 %24, i32* %33, i32* %34
  %36 = bitcast i32* %35 to i8*
  %37 = sext i32 %19 to i64
  %38 = shl nsw i64 %37, 2
  %39 = tail call i32 @bcmp(i8* %30, i8* %36, i64 %38) #9
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %390

41:                                               ; preds = %23
  br i1 %24, label %44, label %42

42:                                               ; preds = %41
  %43 = icmp sgt i32 %19, 0
  br i1 %43, label %44, label %248

44:                                               ; preds = %41, %42
  %45 = phi i32* [ %28, %42 ], [ %27, %41 ]
  %46 = zext i32 %19 to i64
  %47 = icmp ult i32 %19, 8
  br i1 %47, label %133, label %48

48:                                               ; preds = %44
  %49 = and i64 %46, 4294967288
  %50 = add nsw i64 %49, -8
  %51 = lshr exact i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = and i64 %52, 3
  %54 = icmp ult i64 %50, 24
  br i1 %54, label %100, label %55

55:                                               ; preds = %48
  %56 = sub nsw i64 %52, %53
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %97, %57 ]
  %59 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %55 ], [ %95, %57 ]
  %60 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %55 ], [ %96, %57 ]
  %61 = phi i64 [ %56, %55 ], [ %98, %57 ]
  %62 = getelementptr inbounds i32, i32* %45, i64 %58
  %63 = bitcast i32* %62 to <4 x i32>*
  %64 = load <4 x i32>, <4 x i32>* %63, align 4
  %65 = getelementptr inbounds i32, i32* %62, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  %67 = load <4 x i32>, <4 x i32>* %66, align 4
  %68 = mul nsw <4 x i32> %64, %59
  %69 = mul nsw <4 x i32> %67, %60
  %70 = or i64 %58, 8
  %71 = getelementptr inbounds i32, i32* %45, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  %73 = load <4 x i32>, <4 x i32>* %72, align 4
  %74 = getelementptr inbounds i32, i32* %71, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  %76 = load <4 x i32>, <4 x i32>* %75, align 4
  %77 = mul nsw <4 x i32> %73, %68
  %78 = mul nsw <4 x i32> %76, %69
  %79 = or i64 %58, 16
  %80 = getelementptr inbounds i32, i32* %45, i64 %79
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4
  %83 = getelementptr inbounds i32, i32* %80, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4
  %86 = mul nsw <4 x i32> %82, %77
  %87 = mul nsw <4 x i32> %85, %78
  %88 = or i64 %58, 24
  %89 = getelementptr inbounds i32, i32* %45, i64 %88
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4
  %92 = getelementptr inbounds i32, i32* %89, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4
  %95 = mul nsw <4 x i32> %91, %86
  %96 = mul nsw <4 x i32> %94, %87
  %97 = add i64 %58, 32
  %98 = add i64 %61, -4
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %57, !llvm.loop !224

100:                                              ; preds = %57, %48
  %101 = phi <4 x i32> [ undef, %48 ], [ %95, %57 ]
  %102 = phi <4 x i32> [ undef, %48 ], [ %96, %57 ]
  %103 = phi i64 [ 0, %48 ], [ %97, %57 ]
  %104 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %48 ], [ %95, %57 ]
  %105 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %48 ], [ %96, %57 ]
  %106 = icmp eq i64 %53, 0
  br i1 %106, label %123, label %107

107:                                              ; preds = %100, %107
  %108 = phi i64 [ %120, %107 ], [ %103, %100 ]
  %109 = phi <4 x i32> [ %118, %107 ], [ %104, %100 ]
  %110 = phi <4 x i32> [ %119, %107 ], [ %105, %100 ]
  %111 = phi i64 [ %121, %107 ], [ %53, %100 ]
  %112 = getelementptr inbounds i32, i32* %45, i64 %108
  %113 = bitcast i32* %112 to <4 x i32>*
  %114 = load <4 x i32>, <4 x i32>* %113, align 4
  %115 = getelementptr inbounds i32, i32* %112, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  %117 = load <4 x i32>, <4 x i32>* %116, align 4
  %118 = mul nsw <4 x i32> %114, %109
  %119 = mul nsw <4 x i32> %117, %110
  %120 = add i64 %108, 8
  %121 = add i64 %111, -1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %107, !llvm.loop !225

123:                                              ; preds = %107, %100
  %124 = phi <4 x i32> [ %101, %100 ], [ %118, %107 ]
  %125 = phi <4 x i32> [ %102, %100 ], [ %119, %107 ]
  %126 = mul <4 x i32> %125, %124
  %127 = shufflevector <4 x i32> %126, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %128 = mul <4 x i32> %126, %127
  %129 = shufflevector <4 x i32> %128, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %130 = mul <4 x i32> %128, %129
  %131 = extractelement <4 x i32> %130, i32 0
  %132 = icmp eq i64 %49, %46
  br i1 %132, label %144, label %133

133:                                              ; preds = %123, %44
  %134 = phi i64 [ 0, %44 ], [ %49, %123 ]
  %135 = phi i32 [ 1, %44 ], [ %131, %123 ]
  br label %136

136:                                              ; preds = %133, %136
  %137 = phi i64 [ %142, %136 ], [ %134, %133 ]
  %138 = phi i32 [ %141, %136 ], [ %135, %133 ]
  %139 = getelementptr inbounds i32, i32* %45, i64 %137
  %140 = load i32, i32* %139, align 4
  %141 = mul nsw i32 %140, %138
  %142 = add nuw nsw i64 %137, 1
  %143 = icmp eq i64 %142, %46
  br i1 %143, label %144, label %136, !llvm.loop !226

144:                                              ; preds = %136, %123
  %145 = phi i32 [ %131, %123 ], [ %141, %136 ]
  br i1 %24, label %148, label %146

146:                                              ; preds = %144
  %147 = icmp sgt i32 %19, 0
  br i1 %147, label %148, label %248

148:                                              ; preds = %144, %146
  %149 = phi i32* [ %34, %146 ], [ %33, %144 ]
  %150 = zext i32 %19 to i64
  %151 = icmp ult i32 %19, 8
  br i1 %151, label %237, label %152

152:                                              ; preds = %148
  %153 = and i64 %46, 4294967288
  %154 = add nsw i64 %153, -8
  %155 = lshr exact i64 %154, 3
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 3
  %158 = icmp ult i64 %154, 24
  br i1 %158, label %204, label %159

159:                                              ; preds = %152
  %160 = sub nsw i64 %156, %157
  br label %161

161:                                              ; preds = %161, %159
  %162 = phi i64 [ 0, %159 ], [ %201, %161 ]
  %163 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %159 ], [ %199, %161 ]
  %164 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %159 ], [ %200, %161 ]
  %165 = phi i64 [ %160, %159 ], [ %202, %161 ]
  %166 = getelementptr inbounds i32, i32* %149, i64 %162
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = getelementptr inbounds i32, i32* %166, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4
  %172 = mul nsw <4 x i32> %168, %163
  %173 = mul nsw <4 x i32> %171, %164
  %174 = or i64 %162, 8
  %175 = getelementptr inbounds i32, i32* %149, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = getelementptr inbounds i32, i32* %175, i64 4
  %179 = bitcast i32* %178 to <4 x i32>*
  %180 = load <4 x i32>, <4 x i32>* %179, align 4
  %181 = mul nsw <4 x i32> %177, %172
  %182 = mul nsw <4 x i32> %180, %173
  %183 = or i64 %162, 16
  %184 = getelementptr inbounds i32, i32* %149, i64 %183
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 4
  %187 = getelementptr inbounds i32, i32* %184, i64 4
  %188 = bitcast i32* %187 to <4 x i32>*
  %189 = load <4 x i32>, <4 x i32>* %188, align 4
  %190 = mul nsw <4 x i32> %186, %181
  %191 = mul nsw <4 x i32> %189, %182
  %192 = or i64 %162, 24
  %193 = getelementptr inbounds i32, i32* %149, i64 %192
  %194 = bitcast i32* %193 to <4 x i32>*
  %195 = load <4 x i32>, <4 x i32>* %194, align 4
  %196 = getelementptr inbounds i32, i32* %193, i64 4
  %197 = bitcast i32* %196 to <4 x i32>*
  %198 = load <4 x i32>, <4 x i32>* %197, align 4
  %199 = mul nsw <4 x i32> %195, %190
  %200 = mul nsw <4 x i32> %198, %191
  %201 = add i64 %162, 32
  %202 = add i64 %165, -4
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %161, !llvm.loop !227

204:                                              ; preds = %161, %152
  %205 = phi <4 x i32> [ undef, %152 ], [ %199, %161 ]
  %206 = phi <4 x i32> [ undef, %152 ], [ %200, %161 ]
  %207 = phi i64 [ 0, %152 ], [ %201, %161 ]
  %208 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %152 ], [ %199, %161 ]
  %209 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %152 ], [ %200, %161 ]
  %210 = icmp eq i64 %157, 0
  br i1 %210, label %227, label %211

211:                                              ; preds = %204, %211
  %212 = phi i64 [ %224, %211 ], [ %207, %204 ]
  %213 = phi <4 x i32> [ %222, %211 ], [ %208, %204 ]
  %214 = phi <4 x i32> [ %223, %211 ], [ %209, %204 ]
  %215 = phi i64 [ %225, %211 ], [ %157, %204 ]
  %216 = getelementptr inbounds i32, i32* %149, i64 %212
  %217 = bitcast i32* %216 to <4 x i32>*
  %218 = load <4 x i32>, <4 x i32>* %217, align 4
  %219 = getelementptr inbounds i32, i32* %216, i64 4
  %220 = bitcast i32* %219 to <4 x i32>*
  %221 = load <4 x i32>, <4 x i32>* %220, align 4
  %222 = mul nsw <4 x i32> %218, %213
  %223 = mul nsw <4 x i32> %221, %214
  %224 = add i64 %212, 8
  %225 = add i64 %215, -1
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %211, !llvm.loop !228

227:                                              ; preds = %211, %204
  %228 = phi <4 x i32> [ %205, %204 ], [ %222, %211 ]
  %229 = phi <4 x i32> [ %206, %204 ], [ %223, %211 ]
  %230 = mul <4 x i32> %229, %228
  %231 = shufflevector <4 x i32> %230, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %232 = mul <4 x i32> %230, %231
  %233 = shufflevector <4 x i32> %232, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %234 = mul <4 x i32> %232, %233
  %235 = extractelement <4 x i32> %234, i32 0
  %236 = icmp eq i64 %153, %46
  br i1 %236, label %248, label %237

237:                                              ; preds = %227, %148
  %238 = phi i64 [ 0, %148 ], [ %153, %227 ]
  %239 = phi i32 [ 1, %148 ], [ %235, %227 ]
  br label %240

240:                                              ; preds = %237, %240
  %241 = phi i64 [ %246, %240 ], [ %238, %237 ]
  %242 = phi i32 [ %245, %240 ], [ %239, %237 ]
  %243 = getelementptr inbounds i32, i32* %149, i64 %241
  %244 = load i32, i32* %243, align 4
  %245 = mul nsw i32 %244, %242
  %246 = add nuw nsw i64 %241, 1
  %247 = icmp eq i64 %246, %150
  br i1 %247, label %248, label %240, !llvm.loop !229

248:                                              ; preds = %240, %227, %42, %146
  %249 = phi i32 [ %145, %146 ], [ 1, %42 ], [ %145, %227 ], [ %145, %240 ]
  %250 = phi i32 [ 1, %146 ], [ 1, %42 ], [ %235, %227 ], [ %245, %240 ]
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %252 = load i32, i32* %251, align 8
  %253 = icmp sgt i32 %252, 5
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  br i1 %253, label %255, label %258

255:                                              ; preds = %248
  %256 = getelementptr inbounds %union.anon, %union.anon* %254, i64 0, i32 0
  %257 = load i32*, i32** %256, align 8
  br label %261

258:                                              ; preds = %248
  %259 = bitcast %union.anon* %254 to i32*
  %260 = icmp sgt i32 %252, 0
  br i1 %260, label %261, label %361

261:                                              ; preds = %258, %255
  %262 = phi i32* [ %257, %255 ], [ %259, %258 ]
  %263 = zext i32 %252 to i64
  %264 = icmp ult i32 %252, 8
  br i1 %264, label %350, label %265

265:                                              ; preds = %261
  %266 = and i64 %263, 4294967288
  %267 = add nsw i64 %266, -8
  %268 = lshr exact i64 %267, 3
  %269 = add nuw nsw i64 %268, 1
  %270 = and i64 %269, 3
  %271 = icmp ult i64 %267, 24
  br i1 %271, label %317, label %272

272:                                              ; preds = %265
  %273 = sub nsw i64 %269, %270
  br label %274

274:                                              ; preds = %274, %272
  %275 = phi i64 [ 0, %272 ], [ %314, %274 ]
  %276 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %272 ], [ %312, %274 ]
  %277 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %272 ], [ %313, %274 ]
  %278 = phi i64 [ %273, %272 ], [ %315, %274 ]
  %279 = getelementptr inbounds i32, i32* %262, i64 %275
  %280 = bitcast i32* %279 to <4 x i32>*
  %281 = load <4 x i32>, <4 x i32>* %280, align 4
  %282 = getelementptr inbounds i32, i32* %279, i64 4
  %283 = bitcast i32* %282 to <4 x i32>*
  %284 = load <4 x i32>, <4 x i32>* %283, align 4
  %285 = mul nsw <4 x i32> %281, %276
  %286 = mul nsw <4 x i32> %284, %277
  %287 = or i64 %275, 8
  %288 = getelementptr inbounds i32, i32* %262, i64 %287
  %289 = bitcast i32* %288 to <4 x i32>*
  %290 = load <4 x i32>, <4 x i32>* %289, align 4
  %291 = getelementptr inbounds i32, i32* %288, i64 4
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4
  %294 = mul nsw <4 x i32> %290, %285
  %295 = mul nsw <4 x i32> %293, %286
  %296 = or i64 %275, 16
  %297 = getelementptr inbounds i32, i32* %262, i64 %296
  %298 = bitcast i32* %297 to <4 x i32>*
  %299 = load <4 x i32>, <4 x i32>* %298, align 4
  %300 = getelementptr inbounds i32, i32* %297, i64 4
  %301 = bitcast i32* %300 to <4 x i32>*
  %302 = load <4 x i32>, <4 x i32>* %301, align 4
  %303 = mul nsw <4 x i32> %299, %294
  %304 = mul nsw <4 x i32> %302, %295
  %305 = or i64 %275, 24
  %306 = getelementptr inbounds i32, i32* %262, i64 %305
  %307 = bitcast i32* %306 to <4 x i32>*
  %308 = load <4 x i32>, <4 x i32>* %307, align 4
  %309 = getelementptr inbounds i32, i32* %306, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4
  %312 = mul nsw <4 x i32> %308, %303
  %313 = mul nsw <4 x i32> %311, %304
  %314 = add i64 %275, 32
  %315 = add i64 %278, -4
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %274, !llvm.loop !230

317:                                              ; preds = %274, %265
  %318 = phi <4 x i32> [ undef, %265 ], [ %312, %274 ]
  %319 = phi <4 x i32> [ undef, %265 ], [ %313, %274 ]
  %320 = phi i64 [ 0, %265 ], [ %314, %274 ]
  %321 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %265 ], [ %312, %274 ]
  %322 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %265 ], [ %313, %274 ]
  %323 = icmp eq i64 %270, 0
  br i1 %323, label %340, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %337, %324 ], [ %320, %317 ]
  %326 = phi <4 x i32> [ %335, %324 ], [ %321, %317 ]
  %327 = phi <4 x i32> [ %336, %324 ], [ %322, %317 ]
  %328 = phi i64 [ %338, %324 ], [ %270, %317 ]
  %329 = getelementptr inbounds i32, i32* %262, i64 %325
  %330 = bitcast i32* %329 to <4 x i32>*
  %331 = load <4 x i32>, <4 x i32>* %330, align 4
  %332 = getelementptr inbounds i32, i32* %329, i64 4
  %333 = bitcast i32* %332 to <4 x i32>*
  %334 = load <4 x i32>, <4 x i32>* %333, align 4
  %335 = mul nsw <4 x i32> %331, %326
  %336 = mul nsw <4 x i32> %334, %327
  %337 = add i64 %325, 8
  %338 = add i64 %328, -1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %324, !llvm.loop !231

340:                                              ; preds = %324, %317
  %341 = phi <4 x i32> [ %318, %317 ], [ %335, %324 ]
  %342 = phi <4 x i32> [ %319, %317 ], [ %336, %324 ]
  %343 = mul <4 x i32> %342, %341
  %344 = shufflevector <4 x i32> %343, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %345 = mul <4 x i32> %343, %344
  %346 = shufflevector <4 x i32> %345, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %347 = mul <4 x i32> %345, %346
  %348 = extractelement <4 x i32> %347, i32 0
  %349 = icmp eq i64 %266, %263
  br i1 %349, label %361, label %350

350:                                              ; preds = %340, %261
  %351 = phi i64 [ 0, %261 ], [ %266, %340 ]
  %352 = phi i32 [ 1, %261 ], [ %348, %340 ]
  br label %353

353:                                              ; preds = %350, %353
  %354 = phi i64 [ %359, %353 ], [ %351, %350 ]
  %355 = phi i32 [ %358, %353 ], [ %352, %350 ]
  %356 = getelementptr inbounds i32, i32* %262, i64 %354
  %357 = load i32, i32* %356, align 4
  %358 = mul nsw i32 %357, %355
  %359 = add nuw nsw i64 %354, 1
  %360 = icmp eq i64 %359, %263
  br i1 %360, label %361, label %353, !llvm.loop !232

361:                                              ; preds = %353, %340, %258
  %362 = phi i32 [ 1, %258 ], [ %348, %340 ], [ %358, %353 ]
  %363 = icmp eq i32 %249, %250
  br i1 %363, label %365, label %364

364:                                              ; preds = %361
  tail call void @abort() #11
  unreachable

365:                                              ; preds = %361
  %366 = icmp eq i32 %249, %362
  br i1 %366, label %367, label %375

367:                                              ; preds = %365
  %368 = icmp sgt i32 %249, 0
  br i1 %368, label %369, label %551

369:                                              ; preds = %367
  %370 = zext i32 %249 to i64
  %371 = load i64, i64* %1, align 8
  %372 = load i64, i64* %3, align 8
  %373 = tail call i64 %6(i64 %371, i64 %372) #9
  store i64 %373, i64* %5, align 8
  %374 = icmp eq i32 %249, 1
  br i1 %374, label %551, label %376

375:                                              ; preds = %365
  tail call void @abort() #11
  unreachable

376:                                              ; preds = %369, %376
  %377 = phi i64 [ %388, %376 ], [ 1, %369 ]
  %378 = load i64 (i64, i64)*, i64 (i64, i64)** %12, align 8
  %379 = load i64*, i64** %9, align 8
  %380 = load i64*, i64** %10, align 8
  %381 = load i64*, i64** %11, align 8
  %382 = getelementptr inbounds i64, i64* %379, i64 %377
  %383 = load i64, i64* %382, align 8
  %384 = getelementptr inbounds i64, i64* %380, i64 %377
  %385 = load i64, i64* %384, align 8
  %386 = tail call i64 %378(i64 %383, i64 %385) #9
  %387 = getelementptr inbounds i64, i64* %381, i64 %377
  store i64 %386, i64* %387, align 8
  %388 = add nuw nsw i64 %377, 1
  %389 = icmp eq i64 %388, %370
  br i1 %389, label %551, label %376

390:                                              ; preds = %7, %23
  %391 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %392 = bitcast %"struct.tflite::NdArrayDesc"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %392) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %392, i8 -86, i64 40, i1 false)
  %393 = bitcast %"struct.tflite::NdArrayDesc"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %393) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %393, i8 -86, i64 40, i1 false)
  %394 = bitcast %"struct.tflite::NdArrayDesc"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %394) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %394, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %2, %"struct.tflite::NdArrayDesc"* nonnull %13, %"struct.tflite::NdArrayDesc"* nonnull %14)
  %395 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %395) #9
  %396 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %396, align 8, !alias.scope !233
  %397 = load i32, i32* %391, align 8, !noalias !233
  %398 = icmp sgt i32 %397, 5
  br i1 %398, label %399, label %400

399:                                              ; preds = %390
  call void @abort() #11, !noalias !233
  unreachable

400:                                              ; preds = %390
  store i32 5, i32* %396, align 8, !alias.scope !233
  %401 = sub i32 5, %397
  %402 = icmp sgt i32 %401, 0
  %403 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %404 = bitcast %union.anon* %403 to [5 x i32]*
  br i1 %402, label %405, label %484

405:                                              ; preds = %400
  %406 = zext i32 %401 to i64
  %407 = icmp ult i32 %401, 8
  br i1 %407, label %477, label %408

408:                                              ; preds = %405
  %409 = and i64 %406, 4294967288
  %410 = add nsw i64 %409, -8
  %411 = lshr exact i64 %410, 3
  %412 = add nuw nsw i64 %411, 1
  %413 = and i64 %412, 7
  %414 = icmp ult i64 %410, 56
  br i1 %414, label %462, label %415

415:                                              ; preds = %408
  %416 = sub nsw i64 %412, %413
  br label %417

417:                                              ; preds = %417, %415
  %418 = phi i64 [ 0, %415 ], [ %459, %417 ]
  %419 = phi i64 [ %416, %415 ], [ %460, %417 ]
  %420 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %418
  %421 = bitcast i32* %420 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %421, align 8, !alias.scope !233
  %422 = getelementptr inbounds i32, i32* %420, i64 4
  %423 = bitcast i32* %422 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %423, align 8, !alias.scope !233
  %424 = or i64 %418, 8
  %425 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %424
  %426 = bitcast i32* %425 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %426, align 8, !alias.scope !233
  %427 = getelementptr inbounds i32, i32* %425, i64 4
  %428 = bitcast i32* %427 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %428, align 8, !alias.scope !233
  %429 = or i64 %418, 16
  %430 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %429
  %431 = bitcast i32* %430 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %431, align 8, !alias.scope !233
  %432 = getelementptr inbounds i32, i32* %430, i64 4
  %433 = bitcast i32* %432 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %433, align 8, !alias.scope !233
  %434 = or i64 %418, 24
  %435 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %434
  %436 = bitcast i32* %435 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %436, align 8, !alias.scope !233
  %437 = getelementptr inbounds i32, i32* %435, i64 4
  %438 = bitcast i32* %437 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %438, align 8, !alias.scope !233
  %439 = or i64 %418, 32
  %440 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %439
  %441 = bitcast i32* %440 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %441, align 8, !alias.scope !233
  %442 = getelementptr inbounds i32, i32* %440, i64 4
  %443 = bitcast i32* %442 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %443, align 8, !alias.scope !233
  %444 = or i64 %418, 40
  %445 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %444
  %446 = bitcast i32* %445 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %446, align 8, !alias.scope !233
  %447 = getelementptr inbounds i32, i32* %445, i64 4
  %448 = bitcast i32* %447 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %448, align 8, !alias.scope !233
  %449 = or i64 %418, 48
  %450 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %449
  %451 = bitcast i32* %450 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %451, align 8, !alias.scope !233
  %452 = getelementptr inbounds i32, i32* %450, i64 4
  %453 = bitcast i32* %452 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %453, align 8, !alias.scope !233
  %454 = or i64 %418, 56
  %455 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %454
  %456 = bitcast i32* %455 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %456, align 8, !alias.scope !233
  %457 = getelementptr inbounds i32, i32* %455, i64 4
  %458 = bitcast i32* %457 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %458, align 8, !alias.scope !233
  %459 = add i64 %418, 64
  %460 = add i64 %419, -8
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %462, label %417, !llvm.loop !236

462:                                              ; preds = %417, %408
  %463 = phi i64 [ 0, %408 ], [ %459, %417 ]
  %464 = icmp eq i64 %413, 0
  br i1 %464, label %475, label %465

465:                                              ; preds = %462, %465
  %466 = phi i64 [ %472, %465 ], [ %463, %462 ]
  %467 = phi i64 [ %473, %465 ], [ %413, %462 ]
  %468 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %466
  %469 = bitcast i32* %468 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %469, align 8, !alias.scope !233
  %470 = getelementptr inbounds i32, i32* %468, i64 4
  %471 = bitcast i32* %470 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %471, align 8, !alias.scope !233
  %472 = add i64 %466, 8
  %473 = add i64 %467, -1
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %465, !llvm.loop !237

475:                                              ; preds = %465, %462
  %476 = icmp eq i64 %409, %406
  br i1 %476, label %484, label %477

477:                                              ; preds = %475, %405
  %478 = phi i64 [ 0, %405 ], [ %409, %475 ]
  br label %479

479:                                              ; preds = %477, %479
  %480 = phi i64 [ %482, %479 ], [ %478, %477 ]
  %481 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %480
  store i32 1, i32* %481, align 4, !alias.scope !233
  %482 = add nuw nsw i64 %480, 1
  %483 = icmp eq i64 %482, %406
  br i1 %483, label %484, label %479, !llvm.loop !238

484:                                              ; preds = %479, %475, %400
  %485 = getelementptr inbounds %union.anon, %union.anon* %403, i64 0, i32 0
  %486 = bitcast %union.anon* %403 to i32*
  %487 = sext i32 %401 to i64
  %488 = getelementptr inbounds i32, i32* %486, i64 %487
  %489 = bitcast i32* %488 to i8*
  %490 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %491 = bitcast %union.anon* %490 to i8*
  %492 = sext i32 %397 to i64
  %493 = shl nsw i64 %492, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %489, i8* align 4 %491, i64 %493, i1 false) #9
  %494 = load i32, i32* %396, align 8
  %495 = icmp sgt i32 %494, 5
  %496 = load i32*, i32** %485, align 8
  %497 = getelementptr inbounds i32, i32* %496, i64 4
  %498 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1, i64 8
  %499 = bitcast i8* %498 to i32*
  %500 = select i1 %495, i32* %497, i32* %499
  %501 = load i32, i32* %500, align 4
  %502 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 4
  store i32 %501, i32* %502, align 4
  %503 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 4
  store i32 1, i32* %503, align 4
  %504 = load i32, i32* %500, align 4
  %505 = getelementptr inbounds i32, i32* %496, i64 3
  %506 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1, i64 4
  %507 = bitcast i8* %506 to i32*
  %508 = select i1 %495, i32* %505, i32* %507
  %509 = load i32, i32* %508, align 4
  %510 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 3
  store i32 %509, i32* %510, align 4
  %511 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 3
  store i32 %504, i32* %511, align 4
  %512 = load i32, i32* %508, align 4
  %513 = mul nsw i32 %512, %504
  %514 = getelementptr inbounds i32, i32* %496, i64 2
  %515 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1
  %516 = bitcast [16 x i8]* %515 to i32*
  %517 = select i1 %495, i32* %514, i32* %516
  %518 = load i32, i32* %517, align 4
  %519 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 2
  store i32 %518, i32* %519, align 4
  %520 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 2
  store i32 %513, i32* %520, align 4
  %521 = load i32, i32* %517, align 4
  %522 = mul nsw i32 %521, %513
  %523 = getelementptr inbounds i32, i32* %496, i64 1
  %524 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 1
  %525 = select i1 %495, i32* %523, i32* %524
  %526 = load i32, i32* %525, align 4
  %527 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 1
  store i32 %526, i32* %527, align 4
  %528 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 1
  store i32 %522, i32* %528, align 4
  %529 = load i32, i32* %525, align 4
  %530 = mul nsw i32 %529, %522
  %531 = select i1 %495, i32* %496, i32* %486
  %532 = load i32, i32* %531, align 4
  %533 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 0
  store i32 %532, i32* %533, align 4
  %534 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 0
  store i32 %530, i32* %534, align 4
  %535 = xor i1 %495, true
  %536 = icmp eq i32* %496, null
  %537 = or i1 %536, %535
  br i1 %537, label %540, label %538

538:                                              ; preds = %484
  %539 = bitcast i32* %496 to i8*
  call void @_ZdaPv(i8* %539) #10
  br label %540

540:                                              ; preds = %484, %538
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %395) #9
  %541 = bitcast %class.anon.5* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %541) #9
  %542 = getelementptr inbounds %class.anon.5, %class.anon.5* %17, i64 0, i32 0
  store i64** %11, i64*** %542, align 8
  %543 = getelementptr inbounds %class.anon.5, %class.anon.5* %17, i64 0, i32 1
  store %"struct.tflite::NdArrayDesc"* %15, %"struct.tflite::NdArrayDesc"** %543, align 8
  %544 = getelementptr inbounds %class.anon.5, %class.anon.5* %17, i64 0, i32 2
  store i64 (i64, i64)** %12, i64 (i64, i64)*** %544, align 8
  %545 = getelementptr inbounds %class.anon.5, %class.anon.5* %17, i64 0, i32 3
  store i64** %9, i64*** %545, align 8
  %546 = getelementptr inbounds %class.anon.5, %class.anon.5* %17, i64 0, i32 4
  store %"struct.tflite::NdArrayDesc"* %13, %"struct.tflite::NdArrayDesc"** %546, align 8
  %547 = getelementptr inbounds %class.anon.5, %class.anon.5* %17, i64 0, i32 5
  store i64** %10, i64*** %547, align 8
  %548 = getelementptr inbounds %class.anon.5, %class.anon.5* %17, i64 0, i32 6
  store %"struct.tflite::NdArrayDesc"* %14, %"struct.tflite::NdArrayDesc"** %548, align 8
  %549 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %549) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %549, i8 0, i64 20, i1 false) #9
  %550 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 0
  call void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIlPFlllELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* nonnull dereferenceable(40) %15, %class.anon.5* nonnull dereferenceable(56) %17, i32* nonnull %550) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %549) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %541) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %394) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %393) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %392) #9
  br label %551

551:                                              ; preds = %376, %369, %367, %540
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIlEET_S5_S5_(i64, i64) #0 comdat align 2 {
  %3 = icmp sgt i64 %0, %1
  %4 = select i1 %3, i64 %0, i64 %1
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIlPFlllELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* dereferenceable(40), %class.anon.5* dereferenceable(56), i32*) local_unnamed_addr #0 comdat {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %158

7:                                                ; preds = %3
  %8 = getelementptr inbounds i32, i32* %2, i64 1
  %9 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 1
  %10 = getelementptr inbounds i32, i32* %2, i64 2
  %11 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 2
  %12 = getelementptr inbounds i32, i32* %2, i64 3
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 3
  %14 = getelementptr inbounds i32, i32* %2, i64 4
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 4
  %16 = getelementptr inbounds %class.anon.5, %class.anon.5* %1, i64 0, i32 2
  %17 = getelementptr inbounds %class.anon.5, %class.anon.5* %1, i64 0, i32 3
  %18 = getelementptr inbounds %class.anon.5, %class.anon.5* %1, i64 0, i32 4
  %19 = getelementptr inbounds %class.anon.5, %class.anon.5* %1, i64 0, i32 5
  %20 = getelementptr inbounds %class.anon.5, %class.anon.5* %1, i64 0, i32 6
  %21 = getelementptr inbounds %class.anon.5, %class.anon.5* %1, i64 0, i32 0
  %22 = getelementptr inbounds %class.anon.5, %class.anon.5* %1, i64 0, i32 1
  br label %23

23:                                               ; preds = %7, %153
  %24 = phi i32 [ 0, %7 ], [ %155, %153 ]
  store i32 0, i32* %8, align 4
  %25 = load i32, i32* %9, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %153

27:                                               ; preds = %23, %146
  %28 = phi i32 [ %148, %146 ], [ 0, %23 ]
  store i32 0, i32* %10, align 4
  %29 = load i32, i32* %11, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %146

31:                                               ; preds = %27, %139
  %32 = phi i32 [ %141, %139 ], [ 0, %27 ]
  store i32 0, i32* %12, align 4
  %33 = load i32, i32* %13, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %139

35:                                               ; preds = %31, %132
  %36 = phi i32 [ %134, %132 ], [ 0, %31 ]
  store i32 0, i32* %14, align 4
  %37 = load i32, i32* %15, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %132

39:                                               ; preds = %35, %39
  %40 = phi i32 [ %128, %39 ], [ 0, %35 ]
  %41 = phi i32 [ %131, %39 ], [ %36, %35 ]
  %42 = load i64 (i64, i64)**, i64 (i64, i64)*** %16, align 8
  %43 = load i64 (i64, i64)*, i64 (i64, i64)** %42, align 8
  %44 = load i64**, i64*** %17, align 8
  %45 = load i64*, i64** %44, align 8
  %46 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %18, align 8
  %47 = load i32, i32* %2, align 4
  %48 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = mul nsw i32 %49, %47
  %51 = load i32, i32* %8, align 4
  %52 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 1
  %53 = load i32, i32* %52, align 4
  %54 = mul nsw i32 %53, %51
  %55 = add nsw i32 %54, %50
  %56 = load i32, i32* %10, align 4
  %57 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 2
  %58 = load i32, i32* %57, align 4
  %59 = mul nsw i32 %58, %56
  %60 = add nsw i32 %55, %59
  %61 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 3
  %62 = load i32, i32* %61, align 4
  %63 = mul nsw i32 %62, %41
  %64 = add nsw i32 %60, %63
  %65 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 4
  %66 = load i32, i32* %65, align 4
  %67 = mul nsw i32 %66, %40
  %68 = add nsw i32 %64, %67
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i64, i64* %45, i64 %69
  %71 = load i64, i64* %70, align 8
  %72 = load i64**, i64*** %19, align 8
  %73 = load i64*, i64** %72, align 8
  %74 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %20, align 8
  %75 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 0
  %76 = load i32, i32* %75, align 4
  %77 = mul nsw i32 %76, %47
  %78 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 1
  %79 = load i32, i32* %78, align 4
  %80 = mul nsw i32 %79, %51
  %81 = add nsw i32 %80, %77
  %82 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 2
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %83, %56
  %85 = add nsw i32 %81, %84
  %86 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 3
  %87 = load i32, i32* %86, align 4
  %88 = mul nsw i32 %87, %41
  %89 = add nsw i32 %85, %88
  %90 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 4
  %91 = load i32, i32* %90, align 4
  %92 = mul nsw i32 %91, %40
  %93 = add nsw i32 %89, %92
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i64, i64* %73, i64 %94
  %96 = load i64, i64* %95, align 8
  %97 = tail call i64 %43(i64 %71, i64 %96) #9
  %98 = load i64**, i64*** %21, align 8
  %99 = load i64*, i64** %98, align 8
  %100 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %22, align 8
  %101 = load i32, i32* %2, align 4
  %102 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 0
  %103 = load i32, i32* %102, align 4
  %104 = mul nsw i32 %103, %101
  %105 = load i32, i32* %8, align 4
  %106 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 1
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %105
  %109 = add nsw i32 %108, %104
  %110 = load i32, i32* %10, align 4
  %111 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 2
  %112 = load i32, i32* %111, align 4
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i32 %109, %113
  %115 = load i32, i32* %12, align 4
  %116 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 3
  %117 = load i32, i32* %116, align 4
  %118 = mul nsw i32 %117, %115
  %119 = add nsw i32 %114, %118
  %120 = load i32, i32* %14, align 4
  %121 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 4
  %122 = load i32, i32* %121, align 4
  %123 = mul nsw i32 %122, %120
  %124 = add nsw i32 %119, %123
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i64, i64* %99, i64 %125
  store i64 %97, i64* %126, align 8
  %127 = load i32, i32* %14, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %14, align 4
  %129 = load i32, i32* %15, align 4
  %130 = icmp slt i32 %128, %129
  %131 = load i32, i32* %12, align 4
  br i1 %130, label %39, label %132

132:                                              ; preds = %39, %35
  %133 = phi i32 [ %36, %35 ], [ %131, %39 ]
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %12, align 4
  %135 = load i32, i32* %13, align 4
  %136 = icmp slt i32 %134, %135
  br i1 %136, label %35, label %137

137:                                              ; preds = %132
  %138 = load i32, i32* %10, align 4
  br label %139

139:                                              ; preds = %137, %31
  %140 = phi i32 [ %138, %137 ], [ %32, %31 ]
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %10, align 4
  %142 = load i32, i32* %11, align 4
  %143 = icmp slt i32 %141, %142
  br i1 %143, label %31, label %144

144:                                              ; preds = %139
  %145 = load i32, i32* %8, align 4
  br label %146

146:                                              ; preds = %144, %27
  %147 = phi i32 [ %145, %144 ], [ %28, %27 ]
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %8, align 4
  %149 = load i32, i32* %9, align 4
  %150 = icmp slt i32 %148, %149
  br i1 %150, label %27, label %151

151:                                              ; preds = %146
  %152 = load i32, i32* %2, align 4
  br label %153

153:                                              ; preds = %151, %23
  %154 = phi i32 [ %152, %151 ], [ %24, %23 ]
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %2, align 4
  %156 = load i32, i32* %4, align 4
  %157 = icmp slt i32 %155, %156
  br i1 %157, label %23, label %158

158:                                              ; preds = %153, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIsPFsssELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* dereferenceable(32), i16*, %"class.tflite::RuntimeShape"* dereferenceable(32), i16*, %"class.tflite::RuntimeShape"* dereferenceable(32), i16*, i16 (i16, i16)*) local_unnamed_addr #0 comdat {
  %8 = alloca [5 x i32], align 16
  %9 = alloca i16*, align 8
  %10 = alloca i16*, align 8
  %11 = alloca i16*, align 8
  %12 = alloca i16 (i16, i16)*, align 8
  %13 = alloca %"struct.tflite::NdArrayDesc", align 4
  %14 = alloca %"struct.tflite::NdArrayDesc", align 4
  %15 = alloca %"struct.tflite::NdArrayDesc", align 4
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %class.anon.6, align 8
  store i16* %1, i16** %9, align 8
  store i16* %3, i16** %10, align 8
  store i16* %5, i16** %11, align 8
  store i16 (i16, i16)* %6, i16 (i16, i16)** %12, align 8
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %390

23:                                               ; preds = %7
  %24 = icmp sgt i32 %19, 5
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %union.anon, %union.anon* %25, i64 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = bitcast %union.anon* %25 to i32*
  %29 = select i1 %24, i32* %27, i32* %28
  %30 = bitcast i32* %29 to i8*
  %31 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 1
  %32 = getelementptr inbounds %union.anon, %union.anon* %31, i64 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = bitcast %union.anon* %31 to i32*
  %35 = select i1 %24, i32* %33, i32* %34
  %36 = bitcast i32* %35 to i8*
  %37 = sext i32 %19 to i64
  %38 = shl nsw i64 %37, 2
  %39 = tail call i32 @bcmp(i8* %30, i8* %36, i64 %38) #9
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %390

41:                                               ; preds = %23
  br i1 %24, label %44, label %42

42:                                               ; preds = %41
  %43 = icmp sgt i32 %19, 0
  br i1 %43, label %44, label %248

44:                                               ; preds = %41, %42
  %45 = phi i32* [ %28, %42 ], [ %27, %41 ]
  %46 = zext i32 %19 to i64
  %47 = icmp ult i32 %19, 8
  br i1 %47, label %133, label %48

48:                                               ; preds = %44
  %49 = and i64 %46, 4294967288
  %50 = add nsw i64 %49, -8
  %51 = lshr exact i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = and i64 %52, 3
  %54 = icmp ult i64 %50, 24
  br i1 %54, label %100, label %55

55:                                               ; preds = %48
  %56 = sub nsw i64 %52, %53
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %97, %57 ]
  %59 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %55 ], [ %95, %57 ]
  %60 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %55 ], [ %96, %57 ]
  %61 = phi i64 [ %56, %55 ], [ %98, %57 ]
  %62 = getelementptr inbounds i32, i32* %45, i64 %58
  %63 = bitcast i32* %62 to <4 x i32>*
  %64 = load <4 x i32>, <4 x i32>* %63, align 4
  %65 = getelementptr inbounds i32, i32* %62, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  %67 = load <4 x i32>, <4 x i32>* %66, align 4
  %68 = mul nsw <4 x i32> %64, %59
  %69 = mul nsw <4 x i32> %67, %60
  %70 = or i64 %58, 8
  %71 = getelementptr inbounds i32, i32* %45, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  %73 = load <4 x i32>, <4 x i32>* %72, align 4
  %74 = getelementptr inbounds i32, i32* %71, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  %76 = load <4 x i32>, <4 x i32>* %75, align 4
  %77 = mul nsw <4 x i32> %73, %68
  %78 = mul nsw <4 x i32> %76, %69
  %79 = or i64 %58, 16
  %80 = getelementptr inbounds i32, i32* %45, i64 %79
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4
  %83 = getelementptr inbounds i32, i32* %80, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4
  %86 = mul nsw <4 x i32> %82, %77
  %87 = mul nsw <4 x i32> %85, %78
  %88 = or i64 %58, 24
  %89 = getelementptr inbounds i32, i32* %45, i64 %88
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4
  %92 = getelementptr inbounds i32, i32* %89, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4
  %95 = mul nsw <4 x i32> %91, %86
  %96 = mul nsw <4 x i32> %94, %87
  %97 = add i64 %58, 32
  %98 = add i64 %61, -4
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %57, !llvm.loop !239

100:                                              ; preds = %57, %48
  %101 = phi <4 x i32> [ undef, %48 ], [ %95, %57 ]
  %102 = phi <4 x i32> [ undef, %48 ], [ %96, %57 ]
  %103 = phi i64 [ 0, %48 ], [ %97, %57 ]
  %104 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %48 ], [ %95, %57 ]
  %105 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %48 ], [ %96, %57 ]
  %106 = icmp eq i64 %53, 0
  br i1 %106, label %123, label %107

107:                                              ; preds = %100, %107
  %108 = phi i64 [ %120, %107 ], [ %103, %100 ]
  %109 = phi <4 x i32> [ %118, %107 ], [ %104, %100 ]
  %110 = phi <4 x i32> [ %119, %107 ], [ %105, %100 ]
  %111 = phi i64 [ %121, %107 ], [ %53, %100 ]
  %112 = getelementptr inbounds i32, i32* %45, i64 %108
  %113 = bitcast i32* %112 to <4 x i32>*
  %114 = load <4 x i32>, <4 x i32>* %113, align 4
  %115 = getelementptr inbounds i32, i32* %112, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  %117 = load <4 x i32>, <4 x i32>* %116, align 4
  %118 = mul nsw <4 x i32> %114, %109
  %119 = mul nsw <4 x i32> %117, %110
  %120 = add i64 %108, 8
  %121 = add i64 %111, -1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %107, !llvm.loop !240

123:                                              ; preds = %107, %100
  %124 = phi <4 x i32> [ %101, %100 ], [ %118, %107 ]
  %125 = phi <4 x i32> [ %102, %100 ], [ %119, %107 ]
  %126 = mul <4 x i32> %125, %124
  %127 = shufflevector <4 x i32> %126, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %128 = mul <4 x i32> %126, %127
  %129 = shufflevector <4 x i32> %128, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %130 = mul <4 x i32> %128, %129
  %131 = extractelement <4 x i32> %130, i32 0
  %132 = icmp eq i64 %49, %46
  br i1 %132, label %144, label %133

133:                                              ; preds = %123, %44
  %134 = phi i64 [ 0, %44 ], [ %49, %123 ]
  %135 = phi i32 [ 1, %44 ], [ %131, %123 ]
  br label %136

136:                                              ; preds = %133, %136
  %137 = phi i64 [ %142, %136 ], [ %134, %133 ]
  %138 = phi i32 [ %141, %136 ], [ %135, %133 ]
  %139 = getelementptr inbounds i32, i32* %45, i64 %137
  %140 = load i32, i32* %139, align 4
  %141 = mul nsw i32 %140, %138
  %142 = add nuw nsw i64 %137, 1
  %143 = icmp eq i64 %142, %46
  br i1 %143, label %144, label %136, !llvm.loop !241

144:                                              ; preds = %136, %123
  %145 = phi i32 [ %131, %123 ], [ %141, %136 ]
  br i1 %24, label %148, label %146

146:                                              ; preds = %144
  %147 = icmp sgt i32 %19, 0
  br i1 %147, label %148, label %248

148:                                              ; preds = %144, %146
  %149 = phi i32* [ %34, %146 ], [ %33, %144 ]
  %150 = zext i32 %19 to i64
  %151 = icmp ult i32 %19, 8
  br i1 %151, label %237, label %152

152:                                              ; preds = %148
  %153 = and i64 %46, 4294967288
  %154 = add nsw i64 %153, -8
  %155 = lshr exact i64 %154, 3
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 3
  %158 = icmp ult i64 %154, 24
  br i1 %158, label %204, label %159

159:                                              ; preds = %152
  %160 = sub nsw i64 %156, %157
  br label %161

161:                                              ; preds = %161, %159
  %162 = phi i64 [ 0, %159 ], [ %201, %161 ]
  %163 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %159 ], [ %199, %161 ]
  %164 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %159 ], [ %200, %161 ]
  %165 = phi i64 [ %160, %159 ], [ %202, %161 ]
  %166 = getelementptr inbounds i32, i32* %149, i64 %162
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = getelementptr inbounds i32, i32* %166, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4
  %172 = mul nsw <4 x i32> %168, %163
  %173 = mul nsw <4 x i32> %171, %164
  %174 = or i64 %162, 8
  %175 = getelementptr inbounds i32, i32* %149, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4
  %178 = getelementptr inbounds i32, i32* %175, i64 4
  %179 = bitcast i32* %178 to <4 x i32>*
  %180 = load <4 x i32>, <4 x i32>* %179, align 4
  %181 = mul nsw <4 x i32> %177, %172
  %182 = mul nsw <4 x i32> %180, %173
  %183 = or i64 %162, 16
  %184 = getelementptr inbounds i32, i32* %149, i64 %183
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 4
  %187 = getelementptr inbounds i32, i32* %184, i64 4
  %188 = bitcast i32* %187 to <4 x i32>*
  %189 = load <4 x i32>, <4 x i32>* %188, align 4
  %190 = mul nsw <4 x i32> %186, %181
  %191 = mul nsw <4 x i32> %189, %182
  %192 = or i64 %162, 24
  %193 = getelementptr inbounds i32, i32* %149, i64 %192
  %194 = bitcast i32* %193 to <4 x i32>*
  %195 = load <4 x i32>, <4 x i32>* %194, align 4
  %196 = getelementptr inbounds i32, i32* %193, i64 4
  %197 = bitcast i32* %196 to <4 x i32>*
  %198 = load <4 x i32>, <4 x i32>* %197, align 4
  %199 = mul nsw <4 x i32> %195, %190
  %200 = mul nsw <4 x i32> %198, %191
  %201 = add i64 %162, 32
  %202 = add i64 %165, -4
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %161, !llvm.loop !242

204:                                              ; preds = %161, %152
  %205 = phi <4 x i32> [ undef, %152 ], [ %199, %161 ]
  %206 = phi <4 x i32> [ undef, %152 ], [ %200, %161 ]
  %207 = phi i64 [ 0, %152 ], [ %201, %161 ]
  %208 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %152 ], [ %199, %161 ]
  %209 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %152 ], [ %200, %161 ]
  %210 = icmp eq i64 %157, 0
  br i1 %210, label %227, label %211

211:                                              ; preds = %204, %211
  %212 = phi i64 [ %224, %211 ], [ %207, %204 ]
  %213 = phi <4 x i32> [ %222, %211 ], [ %208, %204 ]
  %214 = phi <4 x i32> [ %223, %211 ], [ %209, %204 ]
  %215 = phi i64 [ %225, %211 ], [ %157, %204 ]
  %216 = getelementptr inbounds i32, i32* %149, i64 %212
  %217 = bitcast i32* %216 to <4 x i32>*
  %218 = load <4 x i32>, <4 x i32>* %217, align 4
  %219 = getelementptr inbounds i32, i32* %216, i64 4
  %220 = bitcast i32* %219 to <4 x i32>*
  %221 = load <4 x i32>, <4 x i32>* %220, align 4
  %222 = mul nsw <4 x i32> %218, %213
  %223 = mul nsw <4 x i32> %221, %214
  %224 = add i64 %212, 8
  %225 = add i64 %215, -1
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %211, !llvm.loop !243

227:                                              ; preds = %211, %204
  %228 = phi <4 x i32> [ %205, %204 ], [ %222, %211 ]
  %229 = phi <4 x i32> [ %206, %204 ], [ %223, %211 ]
  %230 = mul <4 x i32> %229, %228
  %231 = shufflevector <4 x i32> %230, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %232 = mul <4 x i32> %230, %231
  %233 = shufflevector <4 x i32> %232, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %234 = mul <4 x i32> %232, %233
  %235 = extractelement <4 x i32> %234, i32 0
  %236 = icmp eq i64 %153, %46
  br i1 %236, label %248, label %237

237:                                              ; preds = %227, %148
  %238 = phi i64 [ 0, %148 ], [ %153, %227 ]
  %239 = phi i32 [ 1, %148 ], [ %235, %227 ]
  br label %240

240:                                              ; preds = %237, %240
  %241 = phi i64 [ %246, %240 ], [ %238, %237 ]
  %242 = phi i32 [ %245, %240 ], [ %239, %237 ]
  %243 = getelementptr inbounds i32, i32* %149, i64 %241
  %244 = load i32, i32* %243, align 4
  %245 = mul nsw i32 %244, %242
  %246 = add nuw nsw i64 %241, 1
  %247 = icmp eq i64 %246, %150
  br i1 %247, label %248, label %240, !llvm.loop !244

248:                                              ; preds = %240, %227, %42, %146
  %249 = phi i32 [ %145, %146 ], [ 1, %42 ], [ %145, %227 ], [ %145, %240 ]
  %250 = phi i32 [ 1, %146 ], [ 1, %42 ], [ %235, %227 ], [ %245, %240 ]
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %252 = load i32, i32* %251, align 8
  %253 = icmp sgt i32 %252, 5
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  br i1 %253, label %255, label %258

255:                                              ; preds = %248
  %256 = getelementptr inbounds %union.anon, %union.anon* %254, i64 0, i32 0
  %257 = load i32*, i32** %256, align 8
  br label %261

258:                                              ; preds = %248
  %259 = bitcast %union.anon* %254 to i32*
  %260 = icmp sgt i32 %252, 0
  br i1 %260, label %261, label %361

261:                                              ; preds = %258, %255
  %262 = phi i32* [ %257, %255 ], [ %259, %258 ]
  %263 = zext i32 %252 to i64
  %264 = icmp ult i32 %252, 8
  br i1 %264, label %350, label %265

265:                                              ; preds = %261
  %266 = and i64 %263, 4294967288
  %267 = add nsw i64 %266, -8
  %268 = lshr exact i64 %267, 3
  %269 = add nuw nsw i64 %268, 1
  %270 = and i64 %269, 3
  %271 = icmp ult i64 %267, 24
  br i1 %271, label %317, label %272

272:                                              ; preds = %265
  %273 = sub nsw i64 %269, %270
  br label %274

274:                                              ; preds = %274, %272
  %275 = phi i64 [ 0, %272 ], [ %314, %274 ]
  %276 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %272 ], [ %312, %274 ]
  %277 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %272 ], [ %313, %274 ]
  %278 = phi i64 [ %273, %272 ], [ %315, %274 ]
  %279 = getelementptr inbounds i32, i32* %262, i64 %275
  %280 = bitcast i32* %279 to <4 x i32>*
  %281 = load <4 x i32>, <4 x i32>* %280, align 4
  %282 = getelementptr inbounds i32, i32* %279, i64 4
  %283 = bitcast i32* %282 to <4 x i32>*
  %284 = load <4 x i32>, <4 x i32>* %283, align 4
  %285 = mul nsw <4 x i32> %281, %276
  %286 = mul nsw <4 x i32> %284, %277
  %287 = or i64 %275, 8
  %288 = getelementptr inbounds i32, i32* %262, i64 %287
  %289 = bitcast i32* %288 to <4 x i32>*
  %290 = load <4 x i32>, <4 x i32>* %289, align 4
  %291 = getelementptr inbounds i32, i32* %288, i64 4
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4
  %294 = mul nsw <4 x i32> %290, %285
  %295 = mul nsw <4 x i32> %293, %286
  %296 = or i64 %275, 16
  %297 = getelementptr inbounds i32, i32* %262, i64 %296
  %298 = bitcast i32* %297 to <4 x i32>*
  %299 = load <4 x i32>, <4 x i32>* %298, align 4
  %300 = getelementptr inbounds i32, i32* %297, i64 4
  %301 = bitcast i32* %300 to <4 x i32>*
  %302 = load <4 x i32>, <4 x i32>* %301, align 4
  %303 = mul nsw <4 x i32> %299, %294
  %304 = mul nsw <4 x i32> %302, %295
  %305 = or i64 %275, 24
  %306 = getelementptr inbounds i32, i32* %262, i64 %305
  %307 = bitcast i32* %306 to <4 x i32>*
  %308 = load <4 x i32>, <4 x i32>* %307, align 4
  %309 = getelementptr inbounds i32, i32* %306, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4
  %312 = mul nsw <4 x i32> %308, %303
  %313 = mul nsw <4 x i32> %311, %304
  %314 = add i64 %275, 32
  %315 = add i64 %278, -4
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %274, !llvm.loop !245

317:                                              ; preds = %274, %265
  %318 = phi <4 x i32> [ undef, %265 ], [ %312, %274 ]
  %319 = phi <4 x i32> [ undef, %265 ], [ %313, %274 ]
  %320 = phi i64 [ 0, %265 ], [ %314, %274 ]
  %321 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %265 ], [ %312, %274 ]
  %322 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %265 ], [ %313, %274 ]
  %323 = icmp eq i64 %270, 0
  br i1 %323, label %340, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %337, %324 ], [ %320, %317 ]
  %326 = phi <4 x i32> [ %335, %324 ], [ %321, %317 ]
  %327 = phi <4 x i32> [ %336, %324 ], [ %322, %317 ]
  %328 = phi i64 [ %338, %324 ], [ %270, %317 ]
  %329 = getelementptr inbounds i32, i32* %262, i64 %325
  %330 = bitcast i32* %329 to <4 x i32>*
  %331 = load <4 x i32>, <4 x i32>* %330, align 4
  %332 = getelementptr inbounds i32, i32* %329, i64 4
  %333 = bitcast i32* %332 to <4 x i32>*
  %334 = load <4 x i32>, <4 x i32>* %333, align 4
  %335 = mul nsw <4 x i32> %331, %326
  %336 = mul nsw <4 x i32> %334, %327
  %337 = add i64 %325, 8
  %338 = add i64 %328, -1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %324, !llvm.loop !246

340:                                              ; preds = %324, %317
  %341 = phi <4 x i32> [ %318, %317 ], [ %335, %324 ]
  %342 = phi <4 x i32> [ %319, %317 ], [ %336, %324 ]
  %343 = mul <4 x i32> %342, %341
  %344 = shufflevector <4 x i32> %343, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %345 = mul <4 x i32> %343, %344
  %346 = shufflevector <4 x i32> %345, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %347 = mul <4 x i32> %345, %346
  %348 = extractelement <4 x i32> %347, i32 0
  %349 = icmp eq i64 %266, %263
  br i1 %349, label %361, label %350

350:                                              ; preds = %340, %261
  %351 = phi i64 [ 0, %261 ], [ %266, %340 ]
  %352 = phi i32 [ 1, %261 ], [ %348, %340 ]
  br label %353

353:                                              ; preds = %350, %353
  %354 = phi i64 [ %359, %353 ], [ %351, %350 ]
  %355 = phi i32 [ %358, %353 ], [ %352, %350 ]
  %356 = getelementptr inbounds i32, i32* %262, i64 %354
  %357 = load i32, i32* %356, align 4
  %358 = mul nsw i32 %357, %355
  %359 = add nuw nsw i64 %354, 1
  %360 = icmp eq i64 %359, %263
  br i1 %360, label %361, label %353, !llvm.loop !247

361:                                              ; preds = %353, %340, %258
  %362 = phi i32 [ 1, %258 ], [ %348, %340 ], [ %358, %353 ]
  %363 = icmp eq i32 %249, %250
  br i1 %363, label %365, label %364

364:                                              ; preds = %361
  tail call void @abort() #11
  unreachable

365:                                              ; preds = %361
  %366 = icmp eq i32 %249, %362
  br i1 %366, label %367, label %375

367:                                              ; preds = %365
  %368 = icmp sgt i32 %249, 0
  br i1 %368, label %369, label %551

369:                                              ; preds = %367
  %370 = zext i32 %249 to i64
  %371 = load i16, i16* %1, align 2
  %372 = load i16, i16* %3, align 2
  %373 = tail call signext i16 %6(i16 signext %371, i16 signext %372) #9
  store i16 %373, i16* %5, align 2
  %374 = icmp eq i32 %249, 1
  br i1 %374, label %551, label %376

375:                                              ; preds = %365
  tail call void @abort() #11
  unreachable

376:                                              ; preds = %369, %376
  %377 = phi i64 [ %388, %376 ], [ 1, %369 ]
  %378 = load i16 (i16, i16)*, i16 (i16, i16)** %12, align 8
  %379 = load i16*, i16** %9, align 8
  %380 = load i16*, i16** %10, align 8
  %381 = load i16*, i16** %11, align 8
  %382 = getelementptr inbounds i16, i16* %379, i64 %377
  %383 = load i16, i16* %382, align 2
  %384 = getelementptr inbounds i16, i16* %380, i64 %377
  %385 = load i16, i16* %384, align 2
  %386 = tail call signext i16 %378(i16 signext %383, i16 signext %385) #9
  %387 = getelementptr inbounds i16, i16* %381, i64 %377
  store i16 %386, i16* %387, align 2
  %388 = add nuw nsw i64 %377, 1
  %389 = icmp eq i64 %388, %370
  br i1 %389, label %551, label %376

390:                                              ; preds = %7, %23
  %391 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %392 = bitcast %"struct.tflite::NdArrayDesc"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %392) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %392, i8 -86, i64 40, i1 false)
  %393 = bitcast %"struct.tflite::NdArrayDesc"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %393) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %393, i8 -86, i64 40, i1 false)
  %394 = bitcast %"struct.tflite::NdArrayDesc"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %394) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %394, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %2, %"struct.tflite::NdArrayDesc"* nonnull %13, %"struct.tflite::NdArrayDesc"* nonnull %14)
  %395 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %395) #9
  %396 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %396, align 8, !alias.scope !248
  %397 = load i32, i32* %391, align 8, !noalias !248
  %398 = icmp sgt i32 %397, 5
  br i1 %398, label %399, label %400

399:                                              ; preds = %390
  call void @abort() #11, !noalias !248
  unreachable

400:                                              ; preds = %390
  store i32 5, i32* %396, align 8, !alias.scope !248
  %401 = sub i32 5, %397
  %402 = icmp sgt i32 %401, 0
  %403 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %404 = bitcast %union.anon* %403 to [5 x i32]*
  br i1 %402, label %405, label %484

405:                                              ; preds = %400
  %406 = zext i32 %401 to i64
  %407 = icmp ult i32 %401, 8
  br i1 %407, label %477, label %408

408:                                              ; preds = %405
  %409 = and i64 %406, 4294967288
  %410 = add nsw i64 %409, -8
  %411 = lshr exact i64 %410, 3
  %412 = add nuw nsw i64 %411, 1
  %413 = and i64 %412, 7
  %414 = icmp ult i64 %410, 56
  br i1 %414, label %462, label %415

415:                                              ; preds = %408
  %416 = sub nsw i64 %412, %413
  br label %417

417:                                              ; preds = %417, %415
  %418 = phi i64 [ 0, %415 ], [ %459, %417 ]
  %419 = phi i64 [ %416, %415 ], [ %460, %417 ]
  %420 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %418
  %421 = bitcast i32* %420 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %421, align 8, !alias.scope !248
  %422 = getelementptr inbounds i32, i32* %420, i64 4
  %423 = bitcast i32* %422 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %423, align 8, !alias.scope !248
  %424 = or i64 %418, 8
  %425 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %424
  %426 = bitcast i32* %425 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %426, align 8, !alias.scope !248
  %427 = getelementptr inbounds i32, i32* %425, i64 4
  %428 = bitcast i32* %427 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %428, align 8, !alias.scope !248
  %429 = or i64 %418, 16
  %430 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %429
  %431 = bitcast i32* %430 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %431, align 8, !alias.scope !248
  %432 = getelementptr inbounds i32, i32* %430, i64 4
  %433 = bitcast i32* %432 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %433, align 8, !alias.scope !248
  %434 = or i64 %418, 24
  %435 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %434
  %436 = bitcast i32* %435 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %436, align 8, !alias.scope !248
  %437 = getelementptr inbounds i32, i32* %435, i64 4
  %438 = bitcast i32* %437 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %438, align 8, !alias.scope !248
  %439 = or i64 %418, 32
  %440 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %439
  %441 = bitcast i32* %440 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %441, align 8, !alias.scope !248
  %442 = getelementptr inbounds i32, i32* %440, i64 4
  %443 = bitcast i32* %442 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %443, align 8, !alias.scope !248
  %444 = or i64 %418, 40
  %445 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %444
  %446 = bitcast i32* %445 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %446, align 8, !alias.scope !248
  %447 = getelementptr inbounds i32, i32* %445, i64 4
  %448 = bitcast i32* %447 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %448, align 8, !alias.scope !248
  %449 = or i64 %418, 48
  %450 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %449
  %451 = bitcast i32* %450 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %451, align 8, !alias.scope !248
  %452 = getelementptr inbounds i32, i32* %450, i64 4
  %453 = bitcast i32* %452 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %453, align 8, !alias.scope !248
  %454 = or i64 %418, 56
  %455 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %454
  %456 = bitcast i32* %455 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %456, align 8, !alias.scope !248
  %457 = getelementptr inbounds i32, i32* %455, i64 4
  %458 = bitcast i32* %457 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %458, align 8, !alias.scope !248
  %459 = add i64 %418, 64
  %460 = add i64 %419, -8
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %462, label %417, !llvm.loop !251

462:                                              ; preds = %417, %408
  %463 = phi i64 [ 0, %408 ], [ %459, %417 ]
  %464 = icmp eq i64 %413, 0
  br i1 %464, label %475, label %465

465:                                              ; preds = %462, %465
  %466 = phi i64 [ %472, %465 ], [ %463, %462 ]
  %467 = phi i64 [ %473, %465 ], [ %413, %462 ]
  %468 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %466
  %469 = bitcast i32* %468 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %469, align 8, !alias.scope !248
  %470 = getelementptr inbounds i32, i32* %468, i64 4
  %471 = bitcast i32* %470 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %471, align 8, !alias.scope !248
  %472 = add i64 %466, 8
  %473 = add i64 %467, -1
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %465, !llvm.loop !252

475:                                              ; preds = %465, %462
  %476 = icmp eq i64 %409, %406
  br i1 %476, label %484, label %477

477:                                              ; preds = %475, %405
  %478 = phi i64 [ 0, %405 ], [ %409, %475 ]
  br label %479

479:                                              ; preds = %477, %479
  %480 = phi i64 [ %482, %479 ], [ %478, %477 ]
  %481 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 %480
  store i32 1, i32* %481, align 4, !alias.scope !248
  %482 = add nuw nsw i64 %480, 1
  %483 = icmp eq i64 %482, %406
  br i1 %483, label %484, label %479, !llvm.loop !253

484:                                              ; preds = %479, %475, %400
  %485 = getelementptr inbounds %union.anon, %union.anon* %403, i64 0, i32 0
  %486 = bitcast %union.anon* %403 to i32*
  %487 = sext i32 %401 to i64
  %488 = getelementptr inbounds i32, i32* %486, i64 %487
  %489 = bitcast i32* %488 to i8*
  %490 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %491 = bitcast %union.anon* %490 to i8*
  %492 = sext i32 %397 to i64
  %493 = shl nsw i64 %492, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %489, i8* align 4 %491, i64 %493, i1 false) #9
  %494 = load i32, i32* %396, align 8
  %495 = icmp sgt i32 %494, 5
  %496 = load i32*, i32** %485, align 8
  %497 = getelementptr inbounds i32, i32* %496, i64 4
  %498 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1, i64 8
  %499 = bitcast i8* %498 to i32*
  %500 = select i1 %495, i32* %497, i32* %499
  %501 = load i32, i32* %500, align 4
  %502 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 4
  store i32 %501, i32* %502, align 4
  %503 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 4
  store i32 1, i32* %503, align 4
  %504 = load i32, i32* %500, align 4
  %505 = getelementptr inbounds i32, i32* %496, i64 3
  %506 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1, i64 4
  %507 = bitcast i8* %506 to i32*
  %508 = select i1 %495, i32* %505, i32* %507
  %509 = load i32, i32* %508, align 4
  %510 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 3
  store i32 %509, i32* %510, align 4
  %511 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 3
  store i32 %504, i32* %511, align 4
  %512 = load i32, i32* %508, align 4
  %513 = mul nsw i32 %512, %504
  %514 = getelementptr inbounds i32, i32* %496, i64 2
  %515 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 1
  %516 = bitcast [16 x i8]* %515 to i32*
  %517 = select i1 %495, i32* %514, i32* %516
  %518 = load i32, i32* %517, align 4
  %519 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 2
  store i32 %518, i32* %519, align 4
  %520 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 2
  store i32 %513, i32* %520, align 4
  %521 = load i32, i32* %517, align 4
  %522 = mul nsw i32 %521, %513
  %523 = getelementptr inbounds i32, i32* %496, i64 1
  %524 = getelementptr inbounds [5 x i32], [5 x i32]* %404, i64 0, i64 1
  %525 = select i1 %495, i32* %523, i32* %524
  %526 = load i32, i32* %525, align 4
  %527 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 1
  store i32 %526, i32* %527, align 4
  %528 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 1
  store i32 %522, i32* %528, align 4
  %529 = load i32, i32* %525, align 4
  %530 = mul nsw i32 %529, %522
  %531 = select i1 %495, i32* %496, i32* %486
  %532 = load i32, i32* %531, align 4
  %533 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 0, i64 0
  store i32 %532, i32* %533, align 4
  %534 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %15, i64 0, i32 1, i64 0
  store i32 %530, i32* %534, align 4
  %535 = xor i1 %495, true
  %536 = icmp eq i32* %496, null
  %537 = or i1 %536, %535
  br i1 %537, label %540, label %538

538:                                              ; preds = %484
  %539 = bitcast i32* %496 to i8*
  call void @_ZdaPv(i8* %539) #10
  br label %540

540:                                              ; preds = %484, %538
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %395) #9
  %541 = bitcast %class.anon.6* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %541) #9
  %542 = getelementptr inbounds %class.anon.6, %class.anon.6* %17, i64 0, i32 0
  store i16** %11, i16*** %542, align 8
  %543 = getelementptr inbounds %class.anon.6, %class.anon.6* %17, i64 0, i32 1
  store %"struct.tflite::NdArrayDesc"* %15, %"struct.tflite::NdArrayDesc"** %543, align 8
  %544 = getelementptr inbounds %class.anon.6, %class.anon.6* %17, i64 0, i32 2
  store i16 (i16, i16)** %12, i16 (i16, i16)*** %544, align 8
  %545 = getelementptr inbounds %class.anon.6, %class.anon.6* %17, i64 0, i32 3
  store i16** %9, i16*** %545, align 8
  %546 = getelementptr inbounds %class.anon.6, %class.anon.6* %17, i64 0, i32 4
  store %"struct.tflite::NdArrayDesc"* %13, %"struct.tflite::NdArrayDesc"** %546, align 8
  %547 = getelementptr inbounds %class.anon.6, %class.anon.6* %17, i64 0, i32 5
  store i16** %10, i16*** %547, align 8
  %548 = getelementptr inbounds %class.anon.6, %class.anon.6* %17, i64 0, i32 6
  store %"struct.tflite::NdArrayDesc"* %14, %"struct.tflite::NdArrayDesc"** %548, align 8
  %549 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %549) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %549, i8 0, i64 20, i1 false) #9
  %550 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 0
  call void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIsPFsssELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* nonnull dereferenceable(40) %15, %class.anon.6* nonnull dereferenceable(56) %17, i32* nonnull %550) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %549) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %541) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %394) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %393) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %392) #9
  br label %551

551:                                              ; preds = %376, %369, %367, %540
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i16 @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIsEET_S5_S5_(i16 signext, i16 signext) #0 comdat align 2 {
  %3 = icmp sgt i16 %0, %1
  %4 = select i1 %3, i16 %0, i16 %1
  ret i16 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops27MaximumMinimumBroadcastSlowIsPFsssELi5EEEvRKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_T0_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* dereferenceable(40), %class.anon.6* dereferenceable(56), i32*) local_unnamed_addr #0 comdat {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %158

7:                                                ; preds = %3
  %8 = getelementptr inbounds i32, i32* %2, i64 1
  %9 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 1
  %10 = getelementptr inbounds i32, i32* %2, i64 2
  %11 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 2
  %12 = getelementptr inbounds i32, i32* %2, i64 3
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 3
  %14 = getelementptr inbounds i32, i32* %2, i64 4
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 4
  %16 = getelementptr inbounds %class.anon.6, %class.anon.6* %1, i64 0, i32 2
  %17 = getelementptr inbounds %class.anon.6, %class.anon.6* %1, i64 0, i32 3
  %18 = getelementptr inbounds %class.anon.6, %class.anon.6* %1, i64 0, i32 4
  %19 = getelementptr inbounds %class.anon.6, %class.anon.6* %1, i64 0, i32 5
  %20 = getelementptr inbounds %class.anon.6, %class.anon.6* %1, i64 0, i32 6
  %21 = getelementptr inbounds %class.anon.6, %class.anon.6* %1, i64 0, i32 0
  %22 = getelementptr inbounds %class.anon.6, %class.anon.6* %1, i64 0, i32 1
  br label %23

23:                                               ; preds = %7, %153
  %24 = phi i32 [ 0, %7 ], [ %155, %153 ]
  store i32 0, i32* %8, align 4
  %25 = load i32, i32* %9, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %153

27:                                               ; preds = %23, %146
  %28 = phi i32 [ %148, %146 ], [ 0, %23 ]
  store i32 0, i32* %10, align 4
  %29 = load i32, i32* %11, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %146

31:                                               ; preds = %27, %139
  %32 = phi i32 [ %141, %139 ], [ 0, %27 ]
  store i32 0, i32* %12, align 4
  %33 = load i32, i32* %13, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %139

35:                                               ; preds = %31, %132
  %36 = phi i32 [ %134, %132 ], [ 0, %31 ]
  store i32 0, i32* %14, align 4
  %37 = load i32, i32* %15, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %132

39:                                               ; preds = %35, %39
  %40 = phi i32 [ %128, %39 ], [ 0, %35 ]
  %41 = phi i32 [ %131, %39 ], [ %36, %35 ]
  %42 = load i16 (i16, i16)**, i16 (i16, i16)*** %16, align 8
  %43 = load i16 (i16, i16)*, i16 (i16, i16)** %42, align 8
  %44 = load i16**, i16*** %17, align 8
  %45 = load i16*, i16** %44, align 8
  %46 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %18, align 8
  %47 = load i32, i32* %2, align 4
  %48 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = mul nsw i32 %49, %47
  %51 = load i32, i32* %8, align 4
  %52 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 1
  %53 = load i32, i32* %52, align 4
  %54 = mul nsw i32 %53, %51
  %55 = add nsw i32 %54, %50
  %56 = load i32, i32* %10, align 4
  %57 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 2
  %58 = load i32, i32* %57, align 4
  %59 = mul nsw i32 %58, %56
  %60 = add nsw i32 %55, %59
  %61 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 3
  %62 = load i32, i32* %61, align 4
  %63 = mul nsw i32 %62, %41
  %64 = add nsw i32 %60, %63
  %65 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %46, i64 0, i32 1, i64 4
  %66 = load i32, i32* %65, align 4
  %67 = mul nsw i32 %66, %40
  %68 = add nsw i32 %64, %67
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i16, i16* %45, i64 %69
  %71 = load i16, i16* %70, align 2
  %72 = load i16**, i16*** %19, align 8
  %73 = load i16*, i16** %72, align 8
  %74 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %20, align 8
  %75 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 0
  %76 = load i32, i32* %75, align 4
  %77 = mul nsw i32 %76, %47
  %78 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 1
  %79 = load i32, i32* %78, align 4
  %80 = mul nsw i32 %79, %51
  %81 = add nsw i32 %80, %77
  %82 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 2
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %83, %56
  %85 = add nsw i32 %81, %84
  %86 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 3
  %87 = load i32, i32* %86, align 4
  %88 = mul nsw i32 %87, %41
  %89 = add nsw i32 %85, %88
  %90 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %74, i64 0, i32 1, i64 4
  %91 = load i32, i32* %90, align 4
  %92 = mul nsw i32 %91, %40
  %93 = add nsw i32 %89, %92
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i16, i16* %73, i64 %94
  %96 = load i16, i16* %95, align 2
  %97 = tail call signext i16 %43(i16 signext %71, i16 signext %96) #9
  %98 = load i16**, i16*** %21, align 8
  %99 = load i16*, i16** %98, align 8
  %100 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %22, align 8
  %101 = load i32, i32* %2, align 4
  %102 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 0
  %103 = load i32, i32* %102, align 4
  %104 = mul nsw i32 %103, %101
  %105 = load i32, i32* %8, align 4
  %106 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 1
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %105
  %109 = add nsw i32 %108, %104
  %110 = load i32, i32* %10, align 4
  %111 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 2
  %112 = load i32, i32* %111, align 4
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i32 %109, %113
  %115 = load i32, i32* %12, align 4
  %116 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 3
  %117 = load i32, i32* %116, align 4
  %118 = mul nsw i32 %117, %115
  %119 = add nsw i32 %114, %118
  %120 = load i32, i32* %14, align 4
  %121 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %100, i64 0, i32 1, i64 4
  %122 = load i32, i32* %121, align 4
  %123 = mul nsw i32 %122, %120
  %124 = add nsw i32 %119, %123
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i16, i16* %99, i64 %125
  store i16 %97, i16* %126, align 2
  %127 = load i32, i32* %14, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %14, align 4
  %129 = load i32, i32* %15, align 4
  %130 = icmp slt i32 %128, %129
  %131 = load i32, i32* %12, align 4
  br i1 %130, label %39, label %132

132:                                              ; preds = %39, %35
  %133 = phi i32 [ %36, %35 ], [ %131, %39 ]
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %12, align 4
  %135 = load i32, i32* %13, align 4
  %136 = icmp slt i32 %134, %135
  br i1 %136, label %35, label %137

137:                                              ; preds = %132
  %138 = load i32, i32* %10, align 4
  br label %139

139:                                              ; preds = %137, %31
  %140 = phi i32 [ %138, %137 ], [ %32, %31 ]
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %10, align 4
  %142 = load i32, i32* %11, align 4
  %143 = icmp slt i32 %141, %142
  br i1 %143, label %31, label %144

144:                                              ; preds = %139
  %145 = load i32, i32* %8, align 4
  br label %146

146:                                              ; preds = %144, %27
  %147 = phi i32 [ %145, %144 ], [ %28, %27 ]
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %8, align 4
  %149 = load i32, i32* %9, align 4
  %150 = icmp slt i32 %148, %149
  br i1 %150, label %27, label %151

151:                                              ; preds = %146
  %152 = load i32, i32* %2, align 4
  br label %153

153:                                              ; preds = %151, %23
  %154 = phi i32 [ %152, %151 ], [ %24, %23 ]
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %2, align 4
  %156 = load i32, i32* %4, align 4
  %157 = icmp slt i32 %155, %156
  br i1 %157, label %23, label %158

158:                                              ; preds = %153, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EfNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !254
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !254
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !254
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !254
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !254
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !254
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to float**
  %40 = load float*, float** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi float* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !257
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !257
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !257
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !257
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !257
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !257
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to float**
  %76 = load float*, float** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi float* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !260
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !260
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !260
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !260
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !260
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !260
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to float**
  %112 = load float*, float** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi float* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIfPFfffELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, float* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, float* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, float* %114, float (float, float)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIfEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EhNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !263
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !263
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !263
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !263
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !263
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !263
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi i8* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !266
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !266
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !266
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !266
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !266
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !266
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi i8* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !269
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !269
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !269
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !269
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !269
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !269
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to i8**
  %112 = load i8*, i8** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi i8* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIhPFhhhELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i8* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i8* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i8* %114, i8 (i8, i8)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIhEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EiNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !272
  br label %40

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !272
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !272
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !272
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !272
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !272
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1, i32 0
  %39 = load i32*, i32** %38, align 8
  br label %40

40:                                               ; preds = %11, %33
  %41 = phi i32* [ %39, %33 ], [ null, %11 ]
  %42 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #9
  %43 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %44 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %43, align 8
  %45 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %47, align 8, !alias.scope !275
  br label %75

48:                                               ; preds = %40
  %49 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %50 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %49, align 8, !noalias !275
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 0
  %52 = load i32, i32* %51, align 4, !noalias !275
  %53 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 0
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %52, i32* %54, align 8, !alias.scope !275
  %55 = icmp sgt i32 %52, 5
  br i1 %55, label %56, label %63

56:                                               ; preds = %48
  %57 = sext i32 %52 to i64
  %58 = shl nsw i64 %57, 2
  %59 = tail call i8* @_Znam(i64 %58) #10, !noalias !275
  %60 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %61 = bitcast i32** %60 to i8**
  store i8* %59, i8** %61, align 8, !alias.scope !275
  %62 = bitcast i8* %59 to i32*
  br label %68

63:                                               ; preds = %48
  %64 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %65 = bitcast %union.anon* %64 to i32*
  %66 = sext i32 %52 to i64
  %67 = shl nsw i64 %66, 2
  br label %68

68:                                               ; preds = %63, %56
  %69 = phi i64 [ %58, %56 ], [ %67, %63 ]
  %70 = phi i32* [ %62, %56 ], [ %65, %63 ]
  %71 = bitcast i32* %70 to i8*
  %72 = bitcast i32* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %72, i64 %69, i1 false) #9
  %73 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1, i32 0
  %74 = load i32*, i32** %73, align 8
  br label %75

75:                                               ; preds = %46, %68
  %76 = phi i32* [ %74, %68 ], [ null, %46 ]
  %77 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %77) #9
  %78 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %79 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %78, align 8
  %80 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %82, align 8, !alias.scope !278
  br label %110

83:                                               ; preds = %75
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %84, align 8, !noalias !278
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 4, !noalias !278
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 0
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %87, i32* %89, align 8, !alias.scope !278
  %90 = icmp sgt i32 %87, 5
  br i1 %90, label %91, label %98

91:                                               ; preds = %83
  %92 = sext i32 %87 to i64
  %93 = shl nsw i64 %92, 2
  %94 = tail call i8* @_Znam(i64 %93) #10, !noalias !278
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %96 = bitcast i32** %95 to i8**
  store i8* %94, i8** %96, align 8, !alias.scope !278
  %97 = bitcast i8* %94 to i32*
  br label %103

98:                                               ; preds = %83
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %100 = bitcast %union.anon* %99 to i32*
  %101 = sext i32 %87 to i64
  %102 = shl nsw i64 %101, 2
  br label %103

103:                                              ; preds = %98, %91
  %104 = phi i64 [ %93, %91 ], [ %102, %98 ]
  %105 = phi i32* [ %97, %91 ], [ %100, %98 ]
  %106 = bitcast i32* %105 to i8*
  %107 = bitcast i32* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 %104, i1 false) #9
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1, i32 0
  %109 = load i32*, i32** %108, align 8
  br label %110

110:                                              ; preds = %81, %103
  %111 = phi i32* [ %109, %103 ], [ null, %81 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIiPFiiiELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i32* %41, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i32* %76, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i32* %111, i32 (i32, i32)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIiEET_S5_S5_)
  %112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp sgt i32 %113, 5
  br i1 %114, label %115, label %121

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %117 = load i32*, i32** %116, align 8
  %118 = icmp eq i32* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %115
  %120 = bitcast i32* %117 to i8*
  call void @_ZdaPv(i8* %120) #10
  br label %121

121:                                              ; preds = %110, %115, %119
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %77) #9
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = icmp sgt i32 %123, 5
  br i1 %124, label %125, label %131

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = icmp eq i32* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %125
  %130 = bitcast i32* %127 to i8*
  call void @_ZdaPv(i8* %130) #10
  br label %131

131:                                              ; preds = %121, %125, %129
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #9
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %133 = load i32, i32* %132, align 8
  %134 = icmp sgt i32 %133, 5
  br i1 %134, label %135, label %141

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %137 = load i32*, i32** %136, align 8
  %138 = icmp eq i32* %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %135
  %140 = bitcast i32* %137 to i8*
  call void @_ZdaPv(i8* %140) #10
  br label %141

141:                                              ; preds = %131, %135, %139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1ElNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !281
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !281
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !281
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !281
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !281
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !281
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to i64**
  %40 = load i64*, i64** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi i64* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !284
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !284
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !284
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !284
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !284
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !284
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to i64**
  %76 = load i64*, i64** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi i64* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !287
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !287
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !287
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !287
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !287
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !287
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to i64**
  %112 = load i64*, i64** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi i64* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIlPFlllELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i64* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i64* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i64* %114, i64 (i64, i64)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIlEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EsNS2_9MaximumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !290
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !290
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !290
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !290
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !290
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !290
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to i16**
  %40 = load i16*, i16** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi i16* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !293
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !293
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !293
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !293
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !293
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !293
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to i16**
  %76 = load i16*, i16** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi i16* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !296
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !296
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !296
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !296
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !296
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !296
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to i16**
  %112 = load i16*, i16** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi i16* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIsPFsssELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i16* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i16* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i16* %114, i16 (i16, i16)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MaximumOp2opIsEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EfNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !299
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !299
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !299
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !299
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !299
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !299
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to float**
  %40 = load float*, float** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi float* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !302
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !302
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !302
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !302
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !302
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !302
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to float**
  %76 = load float*, float** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi float* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !305
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !305
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !305
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !305
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !305
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !305
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to float**
  %112 = load float*, float** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi float* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIfPFfffELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, float* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, float* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, float* %114, float (float, float)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIfEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EhNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !308
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !308
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !308
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !308
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !308
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !308
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi i8* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !311
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !311
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !311
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !311
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !311
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !311
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi i8* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !314
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !314
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !314
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !314
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !314
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !314
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to i8**
  %112 = load i8*, i8** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi i8* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIhPFhhhELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i8* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i8* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i8* %114, i8 (i8, i8)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIhEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EaNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !317
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !317
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !317
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !317
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !317
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !317
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi i8* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !320
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !320
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !320
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !320
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !320
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !320
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi i8* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !323
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !323
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !323
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !323
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !323
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !323
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to i8**
  %112 = load i8*, i8** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi i8* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIaPFaaaELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i8* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i8* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i8* %114, i8 (i8, i8)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIaEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EiNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !326
  br label %40

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !326
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !326
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !326
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !326
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !326
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1, i32 0
  %39 = load i32*, i32** %38, align 8
  br label %40

40:                                               ; preds = %11, %33
  %41 = phi i32* [ %39, %33 ], [ null, %11 ]
  %42 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #9
  %43 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %44 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %43, align 8
  %45 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %47, align 8, !alias.scope !329
  br label %75

48:                                               ; preds = %40
  %49 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %50 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %49, align 8, !noalias !329
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 0
  %52 = load i32, i32* %51, align 4, !noalias !329
  %53 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 0
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %52, i32* %54, align 8, !alias.scope !329
  %55 = icmp sgt i32 %52, 5
  br i1 %55, label %56, label %63

56:                                               ; preds = %48
  %57 = sext i32 %52 to i64
  %58 = shl nsw i64 %57, 2
  %59 = tail call i8* @_Znam(i64 %58) #10, !noalias !329
  %60 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %61 = bitcast i32** %60 to i8**
  store i8* %59, i8** %61, align 8, !alias.scope !329
  %62 = bitcast i8* %59 to i32*
  br label %68

63:                                               ; preds = %48
  %64 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %65 = bitcast %union.anon* %64 to i32*
  %66 = sext i32 %52 to i64
  %67 = shl nsw i64 %66, 2
  br label %68

68:                                               ; preds = %63, %56
  %69 = phi i64 [ %58, %56 ], [ %67, %63 ]
  %70 = phi i32* [ %62, %56 ], [ %65, %63 ]
  %71 = bitcast i32* %70 to i8*
  %72 = bitcast i32* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %72, i64 %69, i1 false) #9
  %73 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1, i32 0
  %74 = load i32*, i32** %73, align 8
  br label %75

75:                                               ; preds = %46, %68
  %76 = phi i32* [ %74, %68 ], [ null, %46 ]
  %77 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %77) #9
  %78 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %79 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %78, align 8
  %80 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %82, align 8, !alias.scope !332
  br label %110

83:                                               ; preds = %75
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %84, align 8, !noalias !332
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 4, !noalias !332
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 0
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %87, i32* %89, align 8, !alias.scope !332
  %90 = icmp sgt i32 %87, 5
  br i1 %90, label %91, label %98

91:                                               ; preds = %83
  %92 = sext i32 %87 to i64
  %93 = shl nsw i64 %92, 2
  %94 = tail call i8* @_Znam(i64 %93) #10, !noalias !332
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %96 = bitcast i32** %95 to i8**
  store i8* %94, i8** %96, align 8, !alias.scope !332
  %97 = bitcast i8* %94 to i32*
  br label %103

98:                                               ; preds = %83
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %100 = bitcast %union.anon* %99 to i32*
  %101 = sext i32 %87 to i64
  %102 = shl nsw i64 %101, 2
  br label %103

103:                                              ; preds = %98, %91
  %104 = phi i64 [ %93, %91 ], [ %102, %98 ]
  %105 = phi i32* [ %97, %91 ], [ %100, %98 ]
  %106 = bitcast i32* %105 to i8*
  %107 = bitcast i32* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 %104, i1 false) #9
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1, i32 0
  %109 = load i32*, i32** %108, align 8
  br label %110

110:                                              ; preds = %81, %103
  %111 = phi i32* [ %109, %103 ], [ null, %81 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIiPFiiiELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i32* %41, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i32* %76, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i32* %111, i32 (i32, i32)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIiEET_S5_S5_)
  %112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp sgt i32 %113, 5
  br i1 %114, label %115, label %121

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %117 = load i32*, i32** %116, align 8
  %118 = icmp eq i32* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %115
  %120 = bitcast i32* %117 to i8*
  call void @_ZdaPv(i8* %120) #10
  br label %121

121:                                              ; preds = %110, %115, %119
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %77) #9
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = icmp sgt i32 %123, 5
  br i1 %124, label %125, label %131

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = icmp eq i32* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %125
  %130 = bitcast i32* %127 to i8*
  call void @_ZdaPv(i8* %130) #10
  br label %131

131:                                              ; preds = %121, %125, %129
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #9
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %133 = load i32, i32* %132, align 8
  %134 = icmp sgt i32 %133, 5
  br i1 %134, label %135, label %141

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %137 = load i32*, i32** %136, align 8
  %138 = icmp eq i32* %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %135
  %140 = bitcast i32* %137 to i8*
  call void @_ZdaPv(i8* %140) #10
  br label %141

141:                                              ; preds = %131, %135, %139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0ElNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !335
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !335
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !335
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !335
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !335
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !335
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to i64**
  %40 = load i64*, i64** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi i64* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !338
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !338
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !338
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !338
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !338
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !338
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to i64**
  %76 = load i64*, i64** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi i64* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !341
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !341
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !341
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !341
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !341
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !341
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to i64**
  %112 = load i64*, i64** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi i64* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIlPFlllELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i64* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i64* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i64* %114, i64 (i64, i64)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIlEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE0EsNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !344
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !344
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !344
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !344
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !344
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !344
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to i16**
  %40 = load i16*, i16** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi i16* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !347
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !347
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !347
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !347
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !347
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !347
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to i16**
  %76 = load i16*, i16** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi i16* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !350
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !350
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !350
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !350
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !350
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !350
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to i16**
  %112 = load i16*, i16** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi i16* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIsPFsssELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i16* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i16* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i16* %114, i16 (i16, i16)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIsEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIfEET_S5_S5_(float, float) #0 comdat align 2 {
  %3 = fcmp olt float %0, %1
  %4 = select i1 %3, float %0, float %1
  ret float %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIhEET_S5_S5_(i8 zeroext, i8 zeroext) #0 comdat align 2 {
  %3 = icmp ult i8 %0, %1
  %4 = select i1 %3, i8 %0, i8 %1
  ret i8 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIiEET_S5_S5_(i32, i32) #0 comdat align 2 {
  %3 = icmp slt i32 %0, %1
  %4 = select i1 %3, i32 %0, i32 %1
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIlEET_S5_S5_(i64, i64) #0 comdat align 2 {
  %3 = icmp slt i64 %0, %1
  %4 = select i1 %3, i64 %0, i64 %1
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i16 @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIsEET_S5_S5_(i16 signext, i16 signext) #0 comdat align 2 {
  %3 = icmp slt i16 %0, %1
  %4 = select i1 %3, i16 %0, i16 %1
  ret i16 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EfNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !353
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !353
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !353
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !353
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !353
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !353
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to float**
  %40 = load float*, float** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi float* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !356
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !356
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !356
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !356
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !356
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !356
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to float**
  %76 = load float*, float** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi float* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !359
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !359
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !359
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !359
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !359
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !359
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to float**
  %112 = load float*, float** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi float* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIfPFfffELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, float* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, float* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, float* %114, float (float, float)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIfEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EhNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !362
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !362
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !362
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !362
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !362
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !362
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi i8* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !365
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !365
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !365
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !365
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !365
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !365
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi i8* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !368
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !368
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !368
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !368
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !368
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !368
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to i8**
  %112 = load i8*, i8** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi i8* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIhPFhhhELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i8* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i8* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i8* %114, i8 (i8, i8)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIhEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EiNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !371
  br label %40

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !371
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !371
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !371
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !371
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !371
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1, i32 0
  %39 = load i32*, i32** %38, align 8
  br label %40

40:                                               ; preds = %11, %33
  %41 = phi i32* [ %39, %33 ], [ null, %11 ]
  %42 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #9
  %43 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %44 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %43, align 8
  %45 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %47, align 8, !alias.scope !374
  br label %75

48:                                               ; preds = %40
  %49 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %50 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %49, align 8, !noalias !374
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 0
  %52 = load i32, i32* %51, align 4, !noalias !374
  %53 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 0
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %52, i32* %54, align 8, !alias.scope !374
  %55 = icmp sgt i32 %52, 5
  br i1 %55, label %56, label %63

56:                                               ; preds = %48
  %57 = sext i32 %52 to i64
  %58 = shl nsw i64 %57, 2
  %59 = tail call i8* @_Znam(i64 %58) #10, !noalias !374
  %60 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %61 = bitcast i32** %60 to i8**
  store i8* %59, i8** %61, align 8, !alias.scope !374
  %62 = bitcast i8* %59 to i32*
  br label %68

63:                                               ; preds = %48
  %64 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %65 = bitcast %union.anon* %64 to i32*
  %66 = sext i32 %52 to i64
  %67 = shl nsw i64 %66, 2
  br label %68

68:                                               ; preds = %63, %56
  %69 = phi i64 [ %58, %56 ], [ %67, %63 ]
  %70 = phi i32* [ %62, %56 ], [ %65, %63 ]
  %71 = bitcast i32* %70 to i8*
  %72 = bitcast i32* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %72, i64 %69, i1 false) #9
  %73 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1, i32 0
  %74 = load i32*, i32** %73, align 8
  br label %75

75:                                               ; preds = %46, %68
  %76 = phi i32* [ %74, %68 ], [ null, %46 ]
  %77 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %77) #9
  %78 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %79 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %78, align 8
  %80 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %82, align 8, !alias.scope !377
  br label %110

83:                                               ; preds = %75
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %84, align 8, !noalias !377
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 4, !noalias !377
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 0
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %87, i32* %89, align 8, !alias.scope !377
  %90 = icmp sgt i32 %87, 5
  br i1 %90, label %91, label %98

91:                                               ; preds = %83
  %92 = sext i32 %87 to i64
  %93 = shl nsw i64 %92, 2
  %94 = tail call i8* @_Znam(i64 %93) #10, !noalias !377
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %96 = bitcast i32** %95 to i8**
  store i8* %94, i8** %96, align 8, !alias.scope !377
  %97 = bitcast i8* %94 to i32*
  br label %103

98:                                               ; preds = %83
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %100 = bitcast %union.anon* %99 to i32*
  %101 = sext i32 %87 to i64
  %102 = shl nsw i64 %101, 2
  br label %103

103:                                              ; preds = %98, %91
  %104 = phi i64 [ %93, %91 ], [ %102, %98 ]
  %105 = phi i32* [ %97, %91 ], [ %100, %98 ]
  %106 = bitcast i32* %105 to i8*
  %107 = bitcast i32* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 %104, i1 false) #9
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1, i32 0
  %109 = load i32*, i32** %108, align 8
  br label %110

110:                                              ; preds = %81, %103
  %111 = phi i32* [ %109, %103 ], [ null, %81 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIiPFiiiELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i32* %41, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i32* %76, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i32* %111, i32 (i32, i32)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIiEET_S5_S5_)
  %112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp sgt i32 %113, 5
  br i1 %114, label %115, label %121

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %117 = load i32*, i32** %116, align 8
  %118 = icmp eq i32* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %115
  %120 = bitcast i32* %117 to i8*
  call void @_ZdaPv(i8* %120) #10
  br label %121

121:                                              ; preds = %110, %115, %119
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %77) #9
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = icmp sgt i32 %123, 5
  br i1 %124, label %125, label %131

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = icmp eq i32* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %125
  %130 = bitcast i32* %127 to i8*
  call void @_ZdaPv(i8* %130) #10
  br label %131

131:                                              ; preds = %121, %125, %129
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #9
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %133 = load i32, i32* %132, align 8
  %134 = icmp sgt i32 %133, 5
  br i1 %134, label %135, label %141

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %137 = load i32*, i32** %136, align 8
  %138 = icmp eq i32* %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %135
  %140 = bitcast i32* %137 to i8*
  call void @_ZdaPv(i8* %140) #10
  br label %141

141:                                              ; preds = %131, %135, %139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1ElNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !380
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !380
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !380
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !380
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !380
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !380
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to i64**
  %40 = load i64*, i64** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi i64* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !383
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !383
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !383
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !383
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !383
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !383
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to i64**
  %76 = load i64*, i64** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi i64* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !386
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !386
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !386
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !386
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !386
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !386
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to i64**
  %112 = load i64*, i64** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi i64* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIlPFlllELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i64* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i64* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i64* %114, i64 (i64, i64)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIlEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin15maximum_minimum15TFLiteOperationILNS2_10KernelTypeE1EsNS2_9MinimumOpEEEvP13TfLiteContextP10TfLiteNodeRKNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 0
  %9 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %8, align 8
  %10 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !389
  br label %41

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8, !noalias !389
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !389
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 8, !alias.scope !389
  %20 = icmp sgt i32 %17, 5
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = sext i32 %17 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znam(i64 %23) #10, !noalias !389
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i32** %25 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !389
  %27 = bitcast i8* %24 to i32*
  br label %33

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to i32*
  %31 = sext i32 %17 to i64
  %32 = shl nsw i64 %31, 2
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %23, %21 ], [ %32, %28 ]
  %35 = phi i32* [ %27, %21 ], [ %30, %28 ]
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %34, i1 false) #9
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to i16**
  %40 = load i16*, i16** %39, align 8
  br label %41

41:                                               ; preds = %11, %33
  %42 = phi i16* [ %40, %33 ], [ null, %11 ]
  %43 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 1
  %45 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %46 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8, !alias.scope !392
  br label %77

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %50, align 8, !noalias !392
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4, !noalias !392
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 1, i64 0
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %53, i32* %55, align 8, !alias.scope !392
  %56 = icmp sgt i32 %53, 5
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = sext i32 %53 to i64
  %59 = shl nsw i64 %58, 2
  %60 = tail call i8* @_Znam(i64 %59) #10, !noalias !392
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %62 = bitcast i32** %61 to i8**
  store i8* %60, i8** %62, align 8, !alias.scope !392
  %63 = bitcast i8* %60 to i32*
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = bitcast %union.anon* %65 to i32*
  %67 = sext i32 %53 to i64
  %68 = shl nsw i64 %67, 2
  br label %69

69:                                               ; preds = %64, %57
  %70 = phi i64 [ %59, %57 ], [ %68, %64 ]
  %71 = phi i32* [ %63, %57 ], [ %66, %64 ]
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %70, i1 false) #9
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to i16**
  %76 = load i16*, i16** %75, align 8
  br label %77

77:                                               ; preds = %47, %69
  %78 = phi i16* [ %76, %69 ], [ null, %47 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::maximum_minimum::OpContext", %"struct.tflite::ops::builtin::maximum_minimum::OpContext"* %2, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = icmp eq %struct.TfLiteTensor* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !395
  br label %113

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !395
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !395
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !395
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #10, !noalias !395
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !395
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #9
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 1
  %111 = bitcast %union.TfLitePtrUnion* %110 to i16**
  %112 = load i16*, i16** %111, align 8
  br label %113

113:                                              ; preds = %83, %105
  %114 = phi i16* [ %112, %105 ], [ null, %83 ]
  call void @_ZN6tflite13reference_ops27MaximumMinimumBroadcastSlowIsPFsssELi5EEEvRKNS_12RuntimeShapeEPKT_S6_S9_S6_PS7_T0_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i16* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i16* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i16* %114, i16 (i16, i16)* nonnull @_ZN6tflite3ops7builtin15maximum_minimum9MinimumOp2opIsEET_S5_S5_)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %118
  %123 = bitcast i32* %120 to i8*
  call void @_ZdaPv(i8* %123) #10
  br label %124

124:                                              ; preds = %113, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #9
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, 5
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %133) #10
  br label %134

134:                                              ; preds = %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #9
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i32* %140 to i8*
  call void @_ZdaPv(i8* %143) #10
  br label %144

144:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!4 = distinct !{!4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!7 = distinct !{!7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!10 = distinct !{!10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!13 = distinct !{!13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!16 = distinct !{!16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!19 = distinct !{!19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!22 = distinct !{!22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!25 = distinct !{!25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.unroll.disable"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!30 = distinct !{!30, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!31 = distinct !{!31, !27}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!34 = distinct !{!34, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!35 = distinct !{!35, !27}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = !{!42}
!42 = distinct !{!42, !38}
!43 = !{!40, !37}
!44 = distinct !{!44, !45}
!45 = !{!"llvm.loop.isvectorized", i32 1}
!46 = distinct !{!46, !45}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !45}
!53 = distinct !{!53, !27}
!54 = distinct !{!54, !45}
!55 = distinct !{!55, !45}
!56 = distinct !{!56, !27}
!57 = distinct !{!57, !58, !45}
!58 = !{!"llvm.loop.unroll.runtime.disable"}
!59 = distinct !{!59, !45}
!60 = distinct !{!60, !27}
!61 = distinct !{!61, !58, !45}
!62 = distinct !{!62, !45}
!63 = distinct !{!63, !27}
!64 = distinct !{!64, !58, !45}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!67 = distinct !{!67, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!68 = distinct !{!68, !45}
!69 = distinct !{!69, !27}
!70 = distinct !{!70, !58, !45}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!73 = distinct !{!73, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!76 = distinct !{!76, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!79 = distinct !{!79, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!82 = distinct !{!82, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!85 = distinct !{!85, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!88 = distinct !{!88, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!91 = distinct !{!91, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!94 = distinct !{!94, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!95 = !{!96}
!96 = distinct !{!96, !97}
!97 = distinct !{!97, !"LVerDomain"}
!98 = !{!99}
!99 = distinct !{!99, !97}
!100 = !{!101}
!101 = distinct !{!101, !97}
!102 = !{!99, !96}
!103 = distinct !{!103, !45}
!104 = distinct !{!104, !45}
!105 = !{!106}
!106 = distinct !{!106, !107}
!107 = distinct !{!107, !"LVerDomain"}
!108 = !{!109}
!109 = distinct !{!109, !107}
!110 = distinct !{!110, !45}
!111 = distinct !{!111, !27}
!112 = distinct !{!112, !45}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!115 = distinct !{!115, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!116 = distinct !{!116, !45}
!117 = distinct !{!117, !27}
!118 = distinct !{!118, !58, !45}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!121 = distinct !{!121, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!122 = distinct !{!122, !45}
!123 = distinct !{!123, !27}
!124 = distinct !{!124, !58, !45}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!127 = distinct !{!127, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!130 = distinct !{!130, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!131 = !{!132}
!132 = distinct !{!132, !133, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!133 = distinct !{!133, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!134 = !{!135}
!135 = distinct !{!135, !136, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!136 = distinct !{!136, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!137 = !{!138}
!138 = distinct !{!138, !139, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!139 = distinct !{!139, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!142 = distinct !{!142, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!143 = !{!144}
!144 = distinct !{!144, !145, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!145 = distinct !{!145, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!146 = !{!147}
!147 = distinct !{!147, !148, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!148 = distinct !{!148, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!149 = !{!150}
!150 = distinct !{!150, !151, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!151 = distinct !{!151, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!152 = !{!153}
!153 = distinct !{!153, !154, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!154 = distinct !{!154, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!155 = !{!156}
!156 = distinct !{!156, !157, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!157 = distinct !{!157, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!158 = !{!159}
!159 = distinct !{!159, !160, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!160 = distinct !{!160, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!161 = !{!162}
!162 = distinct !{!162, !163, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!163 = distinct !{!163, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!164 = !{!165}
!165 = distinct !{!165, !166, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!166 = distinct !{!166, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!167 = !{!168}
!168 = distinct !{!168, !169, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!169 = distinct !{!169, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!170 = !{!171}
!171 = distinct !{!171, !172, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!172 = distinct !{!172, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!173 = !{!174}
!174 = distinct !{!174, !175, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!175 = distinct !{!175, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!176 = !{!177}
!177 = distinct !{!177, !178, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!178 = distinct !{!178, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!179 = distinct !{!179, !45}
!180 = distinct !{!180, !27}
!181 = distinct !{!181, !58, !45}
!182 = distinct !{!182, !45}
!183 = distinct !{!183, !27}
!184 = distinct !{!184, !58, !45}
!185 = distinct !{!185, !45}
!186 = distinct !{!186, !27}
!187 = distinct !{!187, !58, !45}
!188 = !{!189}
!189 = distinct !{!189, !190, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!190 = distinct !{!190, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!191 = distinct !{!191, !45}
!192 = distinct !{!192, !27}
!193 = distinct !{!193, !58, !45}
!194 = distinct !{!194, !45}
!195 = distinct !{!195, !27}
!196 = distinct !{!196, !58, !45}
!197 = distinct !{!197, !45}
!198 = distinct !{!198, !27}
!199 = distinct !{!199, !58, !45}
!200 = distinct !{!200, !45}
!201 = distinct !{!201, !27}
!202 = distinct !{!202, !58, !45}
!203 = !{!204}
!204 = distinct !{!204, !205, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!205 = distinct !{!205, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!206 = distinct !{!206, !45}
!207 = distinct !{!207, !27}
!208 = distinct !{!208, !58, !45}
!209 = distinct !{!209, !45}
!210 = distinct !{!210, !27}
!211 = distinct !{!211, !58, !45}
!212 = distinct !{!212, !45}
!213 = distinct !{!213, !27}
!214 = distinct !{!214, !58, !45}
!215 = distinct !{!215, !45}
!216 = distinct !{!216, !27}
!217 = distinct !{!217, !58, !45}
!218 = !{!219}
!219 = distinct !{!219, !220, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!220 = distinct !{!220, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!221 = distinct !{!221, !45}
!222 = distinct !{!222, !27}
!223 = distinct !{!223, !58, !45}
!224 = distinct !{!224, !45}
!225 = distinct !{!225, !27}
!226 = distinct !{!226, !58, !45}
!227 = distinct !{!227, !45}
!228 = distinct !{!228, !27}
!229 = distinct !{!229, !58, !45}
!230 = distinct !{!230, !45}
!231 = distinct !{!231, !27}
!232 = distinct !{!232, !58, !45}
!233 = !{!234}
!234 = distinct !{!234, !235, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!235 = distinct !{!235, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!236 = distinct !{!236, !45}
!237 = distinct !{!237, !27}
!238 = distinct !{!238, !58, !45}
!239 = distinct !{!239, !45}
!240 = distinct !{!240, !27}
!241 = distinct !{!241, !58, !45}
!242 = distinct !{!242, !45}
!243 = distinct !{!243, !27}
!244 = distinct !{!244, !58, !45}
!245 = distinct !{!245, !45}
!246 = distinct !{!246, !27}
!247 = distinct !{!247, !58, !45}
!248 = !{!249}
!249 = distinct !{!249, !250, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!250 = distinct !{!250, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!251 = distinct !{!251, !45}
!252 = distinct !{!252, !27}
!253 = distinct !{!253, !58, !45}
!254 = !{!255}
!255 = distinct !{!255, !256, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!256 = distinct !{!256, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!257 = !{!258}
!258 = distinct !{!258, !259, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!259 = distinct !{!259, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!260 = !{!261}
!261 = distinct !{!261, !262, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!262 = distinct !{!262, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!263 = !{!264}
!264 = distinct !{!264, !265, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!265 = distinct !{!265, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!266 = !{!267}
!267 = distinct !{!267, !268, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!268 = distinct !{!268, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!269 = !{!270}
!270 = distinct !{!270, !271, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!271 = distinct !{!271, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!272 = !{!273}
!273 = distinct !{!273, !274, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!274 = distinct !{!274, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!275 = !{!276}
!276 = distinct !{!276, !277, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!277 = distinct !{!277, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!278 = !{!279}
!279 = distinct !{!279, !280, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!280 = distinct !{!280, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!281 = !{!282}
!282 = distinct !{!282, !283, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!283 = distinct !{!283, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!284 = !{!285}
!285 = distinct !{!285, !286, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!286 = distinct !{!286, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!287 = !{!288}
!288 = distinct !{!288, !289, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!289 = distinct !{!289, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!290 = !{!291}
!291 = distinct !{!291, !292, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!292 = distinct !{!292, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!293 = !{!294}
!294 = distinct !{!294, !295, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!295 = distinct !{!295, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!296 = !{!297}
!297 = distinct !{!297, !298, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!298 = distinct !{!298, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!299 = !{!300}
!300 = distinct !{!300, !301, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!301 = distinct !{!301, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!302 = !{!303}
!303 = distinct !{!303, !304, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!304 = distinct !{!304, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!305 = !{!306}
!306 = distinct !{!306, !307, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!307 = distinct !{!307, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!308 = !{!309}
!309 = distinct !{!309, !310, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!310 = distinct !{!310, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!311 = !{!312}
!312 = distinct !{!312, !313, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!313 = distinct !{!313, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!314 = !{!315}
!315 = distinct !{!315, !316, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!316 = distinct !{!316, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!317 = !{!318}
!318 = distinct !{!318, !319, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!319 = distinct !{!319, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!320 = !{!321}
!321 = distinct !{!321, !322, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!322 = distinct !{!322, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!323 = !{!324}
!324 = distinct !{!324, !325, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!325 = distinct !{!325, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!326 = !{!327}
!327 = distinct !{!327, !328, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!328 = distinct !{!328, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!329 = !{!330}
!330 = distinct !{!330, !331, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!331 = distinct !{!331, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!332 = !{!333}
!333 = distinct !{!333, !334, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!334 = distinct !{!334, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!335 = !{!336}
!336 = distinct !{!336, !337, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!337 = distinct !{!337, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!338 = !{!339}
!339 = distinct !{!339, !340, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!340 = distinct !{!340, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!341 = !{!342}
!342 = distinct !{!342, !343, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!343 = distinct !{!343, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!344 = !{!345}
!345 = distinct !{!345, !346, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!346 = distinct !{!346, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!347 = !{!348}
!348 = distinct !{!348, !349, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!349 = distinct !{!349, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!350 = !{!351}
!351 = distinct !{!351, !352, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!352 = distinct !{!352, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!353 = !{!354}
!354 = distinct !{!354, !355, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!355 = distinct !{!355, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!356 = !{!357}
!357 = distinct !{!357, !358, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!358 = distinct !{!358, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!359 = !{!360}
!360 = distinct !{!360, !361, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!361 = distinct !{!361, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!362 = !{!363}
!363 = distinct !{!363, !364, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!364 = distinct !{!364, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!365 = !{!366}
!366 = distinct !{!366, !367, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!367 = distinct !{!367, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!368 = !{!369}
!369 = distinct !{!369, !370, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!370 = distinct !{!370, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!371 = !{!372}
!372 = distinct !{!372, !373, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!373 = distinct !{!373, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!374 = !{!375}
!375 = distinct !{!375, !376, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!376 = distinct !{!376, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!377 = !{!378}
!378 = distinct !{!378, !379, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!379 = distinct !{!379, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!380 = !{!381}
!381 = distinct !{!381, !382, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!382 = distinct !{!382, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!383 = !{!384}
!384 = distinct !{!384, !385, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!385 = distinct !{!385, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!386 = !{!387}
!387 = distinct !{!387, !388, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!388 = distinct !{!388, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!389 = !{!390}
!390 = distinct !{!390, !391, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!391 = distinct !{!391, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!392 = !{!393}
!393 = distinct !{!393, !394, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!394 = distinct !{!394, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!395 = !{!396}
!396 = distinct !{!396, !397, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!397 = distinct !{!397, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
