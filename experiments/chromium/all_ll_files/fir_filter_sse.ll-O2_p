; ModuleID = '../../third_party/webrtc/common_audio/fir_filter_sse.cc'
source_filename = "../../third_party/webrtc/common_audio/fir_filter_sse.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::FIRFilterSSE2" = type { %"class.webrtc::FIRFilter", i64, i64, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr" }
%"class.webrtc::FIRFilter" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }

@_ZTVN6webrtc13FIRFilterSSE2E = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::FIRFilterSSE2"*)* @_ZN6webrtc13FIRFilterSSE2D2Ev to i8*), i8* bitcast (void (%"class.webrtc::FIRFilterSSE2"*)* @_ZN6webrtc13FIRFilterSSE2D0Ev to i8*), i8* bitcast (void (%"class.webrtc::FIRFilterSSE2"*, float*, i64, float*)* @_ZN6webrtc13FIRFilterSSE26FilterEPKfmPf to i8*)] }, align 8

@_ZN6webrtc13FIRFilterSSE2D1Ev = hidden unnamed_addr alias void (%"class.webrtc::FIRFilterSSE2"*), void (%"class.webrtc::FIRFilterSSE2"*)* @_ZN6webrtc13FIRFilterSSE2D2Ev
@_ZN6webrtc13FIRFilterSSE2C1EPKfmm = hidden unnamed_addr alias void (%"class.webrtc::FIRFilterSSE2"*, float*, i64, i64), void (%"class.webrtc::FIRFilterSSE2"*, float*, i64, i64)* @_ZN6webrtc13FIRFilterSSE2C2EPKfmm

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13FIRFilterSSE2D2Ev(%"class.webrtc::FIRFilterSSE2"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::FIRFilterSSE2", %"class.webrtc::FIRFilterSSE2"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc13FIRFilterSSE2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::FIRFilterSSE2", %"class.webrtc::FIRFilterSSE2"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  store float* null, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast float* %4 to i8*
  tail call void @_ZN6webrtc11AlignedFreeEPv(i8* nonnull %7) #5
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.webrtc::FIRFilterSSE2", %"class.webrtc::FIRFilterSSE2"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load float*, float** %9, align 8
  store float* null, float** %9, align 8
  %11 = icmp eq float* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = bitcast float* %10 to i8*
  tail call void @_ZN6webrtc11AlignedFreeEPv(i8* nonnull %13) #5
  br label %14

14:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13FIRFilterSSE2D0Ev(%"class.webrtc::FIRFilterSSE2"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::FIRFilterSSE2", %"class.webrtc::FIRFilterSSE2"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc13FIRFilterSSE2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::FIRFilterSSE2", %"class.webrtc::FIRFilterSSE2"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  store float* null, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast float* %4 to i8*
  tail call void @_ZN6webrtc11AlignedFreeEPv(i8* nonnull %7) #5
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.webrtc::FIRFilterSSE2", %"class.webrtc::FIRFilterSSE2"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load float*, float** %9, align 8
  store float* null, float** %9, align 8
  %11 = icmp eq float* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = bitcast float* %10 to i8*
  tail call void @_ZN6webrtc11AlignedFreeEPv(i8* nonnull %13) #5
  br label %14

14:                                               ; preds = %8, %12
  %15 = bitcast %"class.webrtc::FIRFilterSSE2"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13FIRFilterSSE2C2EPKfmm(%"class.webrtc::FIRFilterSSE2"* nocapture, float* nocapture readonly, i64, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::FIRFilterSSE2", %"class.webrtc::FIRFilterSSE2"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc13FIRFilterSSE2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::FIRFilterSSE2", %"class.webrtc::FIRFilterSSE2"* %0, i64 0, i32 1
  %7 = add i64 %2, 3
  %8 = and i64 %7, -4
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.webrtc::FIRFilterSSE2", %"class.webrtc::FIRFilterSSE2"* %0, i64 0, i32 2
  %10 = add i64 %8, -1
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::FIRFilterSSE2", %"class.webrtc::FIRFilterSSE2"* %0, i64 0, i32 3
  %12 = shl i64 %8, 2
  %13 = tail call i8* @_ZN6webrtc13AlignedMallocEmm(i64 %12, i64 16) #5
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.webrtc::FIRFilterSSE2", %"class.webrtc::FIRFilterSSE2"* %0, i64 0, i32 4
  %17 = load i64, i64* %9, align 8
  %18 = add i64 %17, %3
  %19 = shl i64 %18, 2
  %20 = tail call i8* @_ZN6webrtc13AlignedMallocEmm(i64 %19, i64 16) #5
  %21 = ptrtoint i8* %20 to i64
  %22 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %21, i64* %22, align 8
  %23 = load i64, i64* %6, align 8
  %24 = sub i64 %23, %2
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::unique_ptr"* %11 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = shl i64 %24, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 %28, i1 false)
  %29 = icmp eq i64 %2, 0
  br i1 %29, label %48, label %30

30:                                               ; preds = %4
  %31 = and i64 %2, 1
  %32 = icmp eq i64 %2, 1
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = sub i64 %2, %31
  br label %54

35:                                               ; preds = %54, %30
  %36 = phi i64 [ 0, %30 ], [ %76, %54 ]
  %37 = icmp eq i64 %31, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %35
  %39 = xor i64 %36, -1
  %40 = add i64 %39, %2
  %41 = getelementptr inbounds float, float* %1, i64 %40
  %42 = bitcast float* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = add i64 %36, %24
  %45 = load float*, float** %25, align 8
  %46 = getelementptr inbounds float, float* %45, i64 %44
  %47 = bitcast float* %46 to i32*
  store i32 %43, i32* %47, align 4
  br label %48

48:                                               ; preds = %38, %35, %4
  %49 = bitcast %"class.std::__1::unique_ptr"* %16 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = load i64, i64* %9, align 8
  %52 = add i64 %51, %3
  %53 = shl i64 %52, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 %53, i1 false)
  ret void

54:                                               ; preds = %54, %33
  %55 = phi i64 [ 0, %33 ], [ %76, %54 ]
  %56 = phi i64 [ %34, %33 ], [ %77, %54 ]
  %57 = xor i64 %55, -1
  %58 = add i64 %57, %2
  %59 = getelementptr inbounds float, float* %1, i64 %58
  %60 = bitcast float* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = add i64 %55, %24
  %63 = load float*, float** %25, align 8
  %64 = getelementptr inbounds float, float* %63, i64 %62
  %65 = bitcast float* %64 to i32*
  store i32 %61, i32* %65, align 4
  %66 = or i64 %55, 1
  %67 = sub nuw nsw i64 -2, %55
  %68 = add i64 %67, %2
  %69 = getelementptr inbounds float, float* %1, i64 %68
  %70 = bitcast float* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = add i64 %66, %24
  %73 = load float*, float** %25, align 8
  %74 = getelementptr inbounds float, float* %73, i64 %72
  %75 = bitcast float* %74 to i32*
  store i32 %71, i32* %75, align 4
  %76 = add nuw i64 %55, 2
  %77 = add i64 %56, -2
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %35, label %54
}

declare i8* @_ZN6webrtc13AlignedMallocEmm(i64, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13FIRFilterSSE26FilterEPKfmPf(%"class.webrtc::FIRFilterSSE2"* nocapture readonly, float* nocapture readonly, i64, float* nocapture) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::FIRFilterSSE2", %"class.webrtc::FIRFilterSSE2"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.webrtc::FIRFilterSSE2", %"class.webrtc::FIRFilterSSE2"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load float*, float** %7, align 8
  %9 = getelementptr inbounds float, float* %8, i64 %6
  %10 = bitcast float* %9 to i8*
  %11 = bitcast float* %1 to i8*
  %12 = shl i64 %2, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 %12, i1 false)
  %13 = icmp eq i64 %2, 0
  %14 = load float*, float** %7, align 8
  br i1 %13, label %18, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.webrtc::FIRFilterSSE2", %"class.webrtc::FIRFilterSSE2"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.webrtc::FIRFilterSSE2", %"class.webrtc::FIRFilterSSE2"* %0, i64 0, i32 1
  br label %25

18:                                               ; preds = %63, %4
  %19 = phi float* [ %14, %4 ], [ %72, %63 ]
  %20 = bitcast float* %19 to i8*
  %21 = getelementptr inbounds float, float* %19, i64 %2
  %22 = bitcast float* %21 to i8*
  %23 = load i64, i64* %5, align 8
  %24 = shl i64 %23, 2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %22, i64 %24, i1 false)
  ret void

25:                                               ; preds = %63, %15
  %26 = phi float* [ %14, %15 ], [ %72, %63 ]
  %27 = phi i64 [ 0, %15 ], [ %71, %63 ]
  %28 = getelementptr inbounds float, float* %26, i64 %27
  %29 = load float*, float** %16, align 8
  %30 = ptrtoint float* %28 to i64
  %31 = and i64 %30, 15
  %32 = icmp eq i64 %31, 0
  %33 = load i64, i64* %17, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %32, label %36, label %35

35:                                               ; preds = %25
  br i1 %34, label %63, label %37

36:                                               ; preds = %25
  br i1 %34, label %63, label %50

37:                                               ; preds = %35, %37
  %38 = phi i64 [ %48, %37 ], [ 0, %35 ]
  %39 = phi <4 x float> [ %47, %37 ], [ zeroinitializer, %35 ]
  %40 = getelementptr inbounds float, float* %28, i64 %38
  %41 = bitcast float* %40 to <4 x float>*
  %42 = load <4 x float>, <4 x float>* %41, align 1
  %43 = getelementptr inbounds float, float* %29, i64 %38
  %44 = bitcast float* %43 to <4 x float>*
  %45 = load <4 x float>, <4 x float>* %44, align 16
  %46 = fmul <4 x float> %42, %45
  %47 = fadd <4 x float> %39, %46
  %48 = add i64 %38, 4
  %49 = icmp ult i64 %48, %33
  br i1 %49, label %37, label %63

50:                                               ; preds = %36, %50
  %51 = phi i64 [ %61, %50 ], [ 0, %36 ]
  %52 = phi <4 x float> [ %60, %50 ], [ zeroinitializer, %36 ]
  %53 = getelementptr inbounds float, float* %28, i64 %51
  %54 = bitcast float* %53 to <4 x float>*
  %55 = load <4 x float>, <4 x float>* %54, align 16
  %56 = getelementptr inbounds float, float* %29, i64 %51
  %57 = bitcast float* %56 to <4 x float>*
  %58 = load <4 x float>, <4 x float>* %57, align 16
  %59 = fmul <4 x float> %55, %58
  %60 = fadd <4 x float> %52, %59
  %61 = add i64 %51, 4
  %62 = icmp ult i64 %61, %33
  br i1 %62, label %50, label %63

63:                                               ; preds = %37, %50, %36, %35
  %64 = phi <4 x float> [ zeroinitializer, %36 ], [ zeroinitializer, %35 ], [ %60, %50 ], [ %47, %37 ]
  %65 = shufflevector <4 x float> %64, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 2, i32 3>
  %66 = fadd <4 x float> %64, %65
  %67 = getelementptr inbounds float, float* %3, i64 %27
  %68 = extractelement <4 x float> %66, i32 1
  %69 = extractelement <4 x float> %66, i32 0
  %70 = fadd float %69, %68
  store float %70, float* %67, align 1
  %71 = add nuw i64 %27, 1
  %72 = load float*, float** %7, align 8
  %73 = icmp eq i64 %71, %2
  br i1 %73, label %18, label %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN6webrtc11AlignedFreeEPv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
