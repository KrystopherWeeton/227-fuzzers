; ModuleID = '../../third_party/blink/renderer/platform/text/text_break_iterator.cc'
source_filename = "../../third_party/blink/renderer/platform/text/text_break_iterator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::NonSharedCharacterBreakIterator" = type { i8, i8*, i32, i32, %"class.icu_69::BreakIterator"* }
%"class.icu_69::BreakIterator" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8], [6 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.blink::LazyLineBreakIterator" = type <{ %"class.WTF::String", %"class.WTF::AtomicString", %"class.icu_69::BreakIterator"*, [2 x i16], [4 x i8], %"struct.blink::LazyLineBreakIterator::PriorContext", i32, i32, i32, [4 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"struct.blink::LazyLineBreakIterator::PriorContext" = type <{ i16*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE0EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE1EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE2EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE3EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE0EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE1EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE2EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE3EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE0EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE1EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE2EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE3EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE0EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE1EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE2EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE3EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE0EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE1EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE2EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE3EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE0EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE1EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE2EEEiiPKT_i = comdat any

$_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE3EEEiiPKT_i = comdat any

@.str = private unnamed_addr constant [7 x i8] c"Normal\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"BreakAll\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"BreakCharacter\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"KeepAll\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"LineBreakType::\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"kBeforeEverySpace\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"kAfterEverySpace\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"kBeforeSpaceRun\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"kAfterSpaceRun\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"BreakSpaceType::\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.11 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.13 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.14 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"pos >= 0\00", align 1
@.str.17 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/text/text_break_iterator.cc\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"pos <= len\00", align 1
@_ZN5blinkL20kAsciiLineBreakTableE = internal unnamed_addr constant [95 x [12 x i8]] [[12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] zeroinitializer, [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] c"\F6\16\00\B8\FF\FF\FF\EF\FF\FF\FF\EF", [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] zeroinitializer, [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] c"\BC\96\FF\B9\FF\FF\FF\EF\FF\FF\FFo", [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] zeroinitializer, [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] c"\80\00\00\08\00\00\00\04\00\00\00\04", [12 x i8] zeroinitializer], align 16
@.str.19 = private unnamed_addr constant [34 x i8] c"start_offset_ <= string_.length()\00", align 1
@.str.20 = private unnamed_addr constant [69 x i8] c"../../third_party/blink/renderer/platform/text/text_break_iterator.h\00", align 1
@.str.21 = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"offset <= size()\00", align 1
@_ZN5blinkL28kBreakAllLineBreakClassTableE = internal unnamed_addr constant [40 x [6 x i8]] [[6 x i8] zeroinitializer, [6 x i8] c"\16 X\01@\00", [6 x i8] c"\16 X\01@\00", [6 x i8] zeroinitializer, [6 x i8] c"\16 X\01@\00", [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] c"\16 H\00@\00", [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] c"\16 h\00@\00", [6 x i8] zeroinitializer, [6 x i8] c"\00\00\08\00\00\00", [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] c"\16 \08\00@\00", [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] c"\16 X\01@\00", [6 x i8] zeroinitializer, [6 x i8] c"\16 h\00@\00", [6 x i8] c"\00\00 \00\00\00", [6 x i8] zeroinitializer, [6 x i8] c"\16 X\01@\00", [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] c"\16 X\01@\00", [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] c"\16 H\01@\00", [6 x i8] zeroinitializer, [6 x i8] c"\16 X\01@\00", [6 x i8] zeroinitializer], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19NumGraphemeClustersERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = alloca %"class.blink::NonSharedCharacterBreakIterator", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %67, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %67, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %44, label %16

16:                                               ; preds = %11
  %17 = load atomic i32, i32* %12 monotonic, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 1
  br i1 %19, label %29, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  %23 = zext i32 %9 to i64
  %24 = tail call i8* @memchr(i8* %22, i32 13, i64 %23) #8
  %25 = icmp eq i8* %24, null
  %26 = ptrtoint i8* %24 to i64
  %27 = ptrtoint %"class.WTF::StringImpl"* %20 to i64
  %28 = sub i64 %26, %27
  br i1 %25, label %67, label %40

29:                                               ; preds = %16
  %30 = bitcast %"class.WTF::StringImpl"* %20 to i16*
  %31 = zext i32 %9 to i64
  br label %32

32:                                               ; preds = %37, %29
  %33 = phi i64 [ %38, %37 ], [ 0, %29 ]
  %34 = getelementptr inbounds i16, i16* %30, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = icmp eq i16 %35, 13
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = add nuw nsw i64 %33, 1
  %39 = icmp eq i64 %38, %31
  br i1 %39, label %67, label %32

40:                                               ; preds = %32, %21
  %41 = phi i64 [ %28, %21 ], [ %33, %32 ]
  %42 = trunc i64 %41 to i32
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %67, label %44

44:                                               ; preds = %40, %11
  %45 = getelementptr inbounds %"class.blink::NonSharedCharacterBreakIterator", %"class.blink::NonSharedCharacterBreakIterator"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 32, i1 false)
  %46 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %47, align 8
  %48 = load i32, i32* %8, align 4
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 1
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %51 = bitcast i8** %50 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %48, i32* %52, align 8
  call void @_ZN5blink31NonSharedCharacterBreakIteratorC1ERKN3WTF10StringViewE(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #9
  %53 = load i8, i8* %45, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %44
  %56 = getelementptr inbounds %"class.blink::NonSharedCharacterBreakIterator", %"class.blink::NonSharedCharacterBreakIterator"* %2, i64 0, i32 4
  %57 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %56, align 8
  %58 = icmp eq %"class.icu_69::BreakIterator"* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %55, %44
  br label %60

60:                                               ; preds = %59, %60
  %61 = phi i32 [ %64, %60 ], [ 0, %59 ]
  %62 = call i32 @_ZN5blink31NonSharedCharacterBreakIterator4NextEv(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %2) #9
  %63 = icmp eq i32 %62, -1
  %64 = add i32 %61, 1
  br i1 %63, label %65, label %60

65:                                               ; preds = %60, %55
  %66 = phi i32 [ %9, %55 ], [ %61, %60 ]
  call void @_ZN5blink31NonSharedCharacterBreakIteratorD1Ev(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #9
  br label %67

67:                                               ; preds = %37, %40, %21, %1, %7, %65
  %68 = phi i32 [ %66, %65 ], [ 0, %7 ], [ %9, %40 ], [ 0, %1 ], [ %9, %21 ], [ %9, %37 ]
  ret i32 %68
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink31NonSharedCharacterBreakIteratorC1ERKN3WTF10StringViewE(%"class.blink::NonSharedCharacterBreakIterator"*, %"class.WTF::StringView"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN5blink31NonSharedCharacterBreakIterator4NextEv(%"class.blink::NonSharedCharacterBreakIterator"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink31NonSharedCharacterBreakIteratorD1Ev(%"class.blink::NonSharedCharacterBreakIterator"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20GraphemesClusterListERKN3WTF10StringViewEPNS0_6VectorIjLj0ENS0_18PartitionAllocatorEEE(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::Vector"*) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::NonSharedCharacterBreakIterator", align 8
  %4 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, %5
  br i1 %8, label %9, label %64

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, %5
  br i1 %12, label %13, label %52

13:                                               ; preds = %9
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %5
  %20 = select i1 %19, i32 %18, i32 %5
  %21 = icmp ult i32 %11, %20
  br i1 %21, label %22, label %52, !prof !3

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = icmp eq i32* %24, null
  %26 = zext i32 %20 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %34

29:                                               ; preds = %22
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %1 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %10, align 8
  br label %52

34:                                               ; preds = %22
  %35 = lshr i64 %27, 2
  %36 = ptrtoint i8* %28 to i64
  %37 = load i32*, i32** %23, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne i32* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast i32* %37 to i8*
  br i1 %40, label %42, label %48, !prof !3

42:                                               ; preds = %34
  %43 = load i32, i32* %6, align 4
  %44 = zext i32 %43 to i64
  %45 = shl nuw nsw i64 %44, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %41, i64 %45, i1 false) #9
  %46 = bitcast %"class.WTF::Vector"* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %42, %34
  %49 = phi i8* [ %47, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #9
  %50 = bitcast %"class.WTF::Vector"* %1 to i64*
  store atomic i64 %36, i64* %50 monotonic, align 8
  %51 = trunc i64 %35 to i32
  store i32 %51, i32* %10, align 8
  br label %52

52:                                               ; preds = %9, %13, %29, %48
  %53 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = load i32, i32* %6, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i32, i32* %54, i64 %56
  %58 = zext i32 %5 to i64
  %59 = getelementptr inbounds i32, i32* %54, i64 %58
  %60 = bitcast i32* %57 to i8*
  %61 = ptrtoint i32* %59 to i64
  %62 = ptrtoint i32* %57 to i64
  %63 = sub i64 %61, %62
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %60, i8 0, i64 %63, i1 false) #9
  store i32 %5, i32* %6, align 4
  br label %66

64:                                               ; preds = %2
  store i32 %5, i32* %6, align 4
  %65 = icmp eq i32 %5, 0
  br i1 %65, label %90, label %66

66:                                               ; preds = %52, %64
  %67 = getelementptr inbounds %"class.blink::NonSharedCharacterBreakIterator", %"class.blink::NonSharedCharacterBreakIterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 32, i1 false)
  call void @_ZN5blink31NonSharedCharacterBreakIteratorC1ERKN3WTF10StringViewE(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %3, %"class.WTF::StringView"* dereferenceable(24) %0) #9
  %68 = call i32 @_ZN5blink31NonSharedCharacterBreakIterator4NextEv(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %3) #9
  %69 = icmp sgt i32 %68, -1
  br i1 %69, label %70, label %89

70:                                               ; preds = %66, %84
  %71 = phi i32 [ %85, %84 ], [ 0, %66 ]
  %72 = phi i32 [ %87, %84 ], [ 0, %66 ]
  %73 = phi i32 [ %86, %84 ], [ %68, %66 ]
  %74 = icmp ult i32 %71, %73
  %75 = icmp ult i32 %71, %5
  %76 = and i1 %74, %75
  br i1 %76, label %77, label %84

77:                                               ; preds = %70, %77
  %78 = phi i32 [ %80, %77 ], [ %71, %70 ]
  %79 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 %78) #9
  store i32 %72, i32* %79, align 4
  %80 = add nuw i32 %78, 1
  %81 = icmp ult i32 %80, %73
  %82 = icmp ult i32 %80, %5
  %83 = and i1 %81, %82
  br i1 %83, label %77, label %84

84:                                               ; preds = %77, %70
  %85 = phi i32 [ %71, %70 ], [ %80, %77 ]
  %86 = call i32 @_ZN5blink31NonSharedCharacterBreakIterator4NextEv(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %3) #9
  %87 = add i32 %72, 1
  %88 = icmp sgt i32 %86, -1
  br i1 %88, label %70, label %89

89:                                               ; preds = %84, %66
  call void @_ZN5blink31NonSharedCharacterBreakIteratorD1Ev(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #9
  br label %90

90:                                               ; preds = %64, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink23LengthOfGraphemeClusterERKN3WTF6StringEj(%"class.WTF::String"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::NonSharedCharacterBreakIterator", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi i32 [ %10, %8 ], [ 0, %2 ]
  %13 = sub i32 %12, %1
  %14 = icmp ult i32 %13, 2
  br i1 %14, label %66, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %35, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %22 = bitcast %"class.WTF::StringImpl"* %21 to i8*
  %23 = select i1 %7, i8* null, i8* %22
  %24 = zext i32 %1 to i64
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 13
  br i1 %27, label %28, label %66

28:                                               ; preds = %20
  %29 = add i32 %1, 1
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %23, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 10
  %34 = select i1 %33, i32 2, i32 1
  br label %66

35:                                               ; preds = %15
  %36 = getelementptr inbounds %"class.blink::NonSharedCharacterBreakIterator", %"class.blink::NonSharedCharacterBreakIterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 32, i1 false)
  %37 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #9
  br i1 %7, label %38, label %42

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %39, align 8
  %40 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %41 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %40, i64* %41, align 8
  br label %49

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %48 = bitcast i8** %47 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %48, align 8
  br label %49

49:                                               ; preds = %38, %42
  %50 = phi i32 [ %45, %42 ], [ 0, %38 ]
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %50, i32* %51, align 8
  call void @_ZN5blink31NonSharedCharacterBreakIteratorC1ERKN3WTF10StringViewE(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #9
  %52 = load i8, i8* %36, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::NonSharedCharacterBreakIterator", %"class.blink::NonSharedCharacterBreakIterator"* %3, i64 0, i32 4
  %56 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %55, align 8
  %57 = icmp eq %"class.icu_69::BreakIterator"* %56, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %49, %54
  %59 = call i32 @_ZNK5blink31NonSharedCharacterBreakIterator9FollowingEi(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %3, i32 %1) #9
  %60 = icmp eq i32 %59, -1
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  %62 = call i32 @_ZN5blink31NonSharedCharacterBreakIterator7CurrentEv(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %3) #9
  %63 = sub i32 %62, %1
  br label %64

64:                                               ; preds = %58, %54, %61
  %65 = phi i32 [ %63, %61 ], [ %13, %54 ], [ %13, %58 ]
  call void @_ZN5blink31NonSharedCharacterBreakIteratorD1Ev(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #9
  br label %66

66:                                               ; preds = %20, %28, %11, %64
  %67 = phi i32 [ %65, %64 ], [ %13, %11 ], [ 1, %20 ], [ %34, %28 ]
  ret i32 %67
}

declare i32 @_ZNK5blink31NonSharedCharacterBreakIterator9FollowingEi(%"class.blink::NonSharedCharacterBreakIterator"*, i32) local_unnamed_addr #2

declare i32 @_ZN5blink31NonSharedCharacterBreakIterator7CurrentEv(%"class.blink::NonSharedCharacterBreakIterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink21LazyLineBreakIterator35NextBreakablePositionBreakCharacterEi(%"class.blink::LazyLineBreakIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NonSharedCharacterBreakIterator", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::NonSharedCharacterBreakIterator", %"class.blink::NonSharedCharacterBreakIterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %34, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sub i32 %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %15, i32* %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  br i1 %21, label %28, label %23

23:                                               ; preds = %12
  %24 = bitcast %"class.WTF::StringImpl"* %22 to i8*
  %25 = zext i32 %8 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* %26, i8** %27, align 8
  br label %39

28:                                               ; preds = %12
  %29 = bitcast %"class.WTF::StringImpl"* %22 to i16*
  %30 = zext i32 %8 to i64
  %31 = getelementptr inbounds i16, i16* %29, i64 %30
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %33 = bitcast i8** %32 to i16**
  store i16* %31, i16** %33, align 8
  br label %39

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %36, align 8
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %38 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %37, i64* %38, align 8
  br label %39

39:                                               ; preds = %23, %28, %34
  call void @_ZN5blink31NonSharedCharacterBreakIteratorC1ERKN3WTF10StringViewE(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  %40 = load i32, i32* %7, align 8
  %41 = xor i32 %40, -1
  %42 = add i32 %41, %1
  %43 = icmp sgt i32 %42, 0
  %44 = select i1 %43, i32 %42, i32 0
  %45 = call i32 @_ZNK5blink31NonSharedCharacterBreakIterator9FollowingEi(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %3, i32 %44) #9
  %46 = icmp eq i32 %45, -1
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = load i32, i32* %7, align 8
  %49 = add i32 %48, %45
  br label %56

50:                                               ; preds = %39
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  br label %56

56:                                               ; preds = %53, %50, %47
  %57 = phi i32 [ %49, %47 ], [ %55, %53 ], [ 0, %50 ]
  call void @_ZN5blink31NonSharedCharacterBreakIteratorD1Ev(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #9
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeEi(%"class.blink::LazyLineBreakIterator"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  br label %6

6:                                                ; preds = %125, %4
  %7 = phi i32 [ %2, %4 ], [ 0, %125 ]
  %8 = phi i32 [ %3, %4 ], [ %126, %125 ]
  switch i32 %7, label %122 [
    i32 0, label %9
    i32 1, label %46
    i32 3, label %83
    i32 2, label %120
  ]

9:                                                ; preds = %6
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %130, label %12, !prof !4

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  br i1 %16, label %32, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.WTF::StringImpl"* %17 to i8*
  %20 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 8
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %30 [
    i32 0, label %22
    i32 1, label %24
    i32 2, label %26
    i32 3, label %28
  ]

22:                                               ; preds = %18
  %23 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i8* %19, i32 %8) #9
  br label %130

24:                                               ; preds = %18
  %25 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE1EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i8* %19, i32 %8) #9
  br label %130

26:                                               ; preds = %18
  %27 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE2EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i8* %19, i32 %8) #9
  br label %130

28:                                               ; preds = %18
  %29 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE3EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i8* %19, i32 %8) #9
  br label %130

30:                                               ; preds = %18
  %31 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i8* %19, i32 %8) #9
  br label %130

32:                                               ; preds = %12
  %33 = bitcast %"class.WTF::StringImpl"* %17 to i16*
  %34 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 8
  %35 = load i32, i32* %34, align 8
  switch i32 %35, label %44 [
    i32 0, label %36
    i32 1, label %38
    i32 2, label %40
    i32 3, label %42
  ]

36:                                               ; preds = %32
  %37 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i16* %33, i32 %8) #9
  br label %130

38:                                               ; preds = %32
  %39 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE1EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i16* %33, i32 %8) #9
  br label %130

40:                                               ; preds = %32
  %41 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE2EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i16* %33, i32 %8) #9
  br label %130

42:                                               ; preds = %32
  %43 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE3EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i16* %33, i32 %8) #9
  br label %130

44:                                               ; preds = %32
  %45 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i16* %33, i32 %8) #9
  br label %130

46:                                               ; preds = %6
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %130, label %49, !prof !4

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 1
  br i1 %53, label %69, label %55

55:                                               ; preds = %49
  %56 = bitcast %"class.WTF::StringImpl"* %54 to i8*
  %57 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 8
  %58 = load i32, i32* %57, align 8
  switch i32 %58, label %67 [
    i32 0, label %59
    i32 1, label %61
    i32 2, label %63
    i32 3, label %65
  ]

59:                                               ; preds = %55
  %60 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i8* %56, i32 %8) #9
  br label %130

61:                                               ; preds = %55
  %62 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE1EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i8* %56, i32 %8) #9
  br label %130

63:                                               ; preds = %55
  %64 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE2EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i8* %56, i32 %8) #9
  br label %130

65:                                               ; preds = %55
  %66 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE3EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i8* %56, i32 %8) #9
  br label %130

67:                                               ; preds = %55
  %68 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i8* %56, i32 %8) #9
  br label %130

69:                                               ; preds = %49
  %70 = bitcast %"class.WTF::StringImpl"* %54 to i16*
  %71 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 8
  %72 = load i32, i32* %71, align 8
  switch i32 %72, label %81 [
    i32 0, label %73
    i32 1, label %75
    i32 2, label %77
    i32 3, label %79
  ]

73:                                               ; preds = %69
  %74 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i16* %70, i32 %8) #9
  br label %130

75:                                               ; preds = %69
  %76 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE1EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i16* %70, i32 %8) #9
  br label %130

77:                                               ; preds = %69
  %78 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE2EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i16* %70, i32 %8) #9
  br label %130

79:                                               ; preds = %69
  %80 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE3EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i16* %70, i32 %8) #9
  br label %130

81:                                               ; preds = %69
  %82 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i16* %70, i32 %8) #9
  br label %130

83:                                               ; preds = %6
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %130, label %86, !prof !4

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 1
  br i1 %90, label %106, label %92

92:                                               ; preds = %86
  %93 = bitcast %"class.WTF::StringImpl"* %91 to i8*
  %94 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 8
  %95 = load i32, i32* %94, align 8
  switch i32 %95, label %104 [
    i32 0, label %96
    i32 1, label %98
    i32 2, label %100
    i32 3, label %102
  ]

96:                                               ; preds = %92
  %97 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i8* %93, i32 %8) #9
  br label %130

98:                                               ; preds = %92
  %99 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE1EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i8* %93, i32 %8) #9
  br label %130

100:                                              ; preds = %92
  %101 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE2EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i8* %93, i32 %8) #9
  br label %130

102:                                              ; preds = %92
  %103 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE3EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i8* %93, i32 %8) #9
  br label %130

104:                                              ; preds = %92
  %105 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i8* %93, i32 %8) #9
  br label %130

106:                                              ; preds = %86
  %107 = bitcast %"class.WTF::StringImpl"* %91 to i16*
  %108 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 8
  %109 = load i32, i32* %108, align 8
  switch i32 %109, label %118 [
    i32 0, label %110
    i32 1, label %112
    i32 2, label %114
    i32 3, label %116
  ]

110:                                              ; preds = %106
  %111 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i16* %107, i32 %8) #9
  br label %130

112:                                              ; preds = %106
  %113 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE1EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i16* %107, i32 %8) #9
  br label %130

114:                                              ; preds = %106
  %115 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE2EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i16* %107, i32 %8) #9
  br label %130

116:                                              ; preds = %106
  %117 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE3EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i16* %107, i32 %8) #9
  br label %130

118:                                              ; preds = %106
  %119 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i16* %107, i32 %8) #9
  br label %130

120:                                              ; preds = %6
  %121 = tail call i32 @_ZNK5blink21LazyLineBreakIterator35NextBreakablePositionBreakCharacterEi(%"class.blink::LazyLineBreakIterator"* %0, i32 %1)
  br label %130

122:                                              ; preds = %6
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %125, label %127

125:                                              ; preds = %122, %127
  %126 = phi i32 [ 0, %122 ], [ %129, %127 ]
  br label %6

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  br label %125

130:                                              ; preds = %83, %96, %98, %100, %102, %104, %110, %112, %114, %116, %118, %46, %59, %61, %63, %65, %67, %73, %75, %77, %79, %81, %9, %22, %24, %26, %28, %30, %36, %38, %40, %42, %44, %120
  %131 = phi i32 [ %121, %120 ], [ 0, %9 ], [ %31, %30 ], [ %29, %28 ], [ %27, %26 ], [ %25, %24 ], [ %23, %22 ], [ %45, %44 ], [ %43, %42 ], [ %41, %40 ], [ %39, %38 ], [ %37, %36 ], [ 0, %46 ], [ %68, %67 ], [ %66, %65 ], [ %64, %63 ], [ %62, %61 ], [ %60, %59 ], [ %82, %81 ], [ %80, %79 ], [ %78, %77 ], [ %76, %75 ], [ %74, %73 ], [ 0, %83 ], [ %105, %104 ], [ %103, %102 ], [ %101, %100 ], [ %99, %98 ], [ %97, %96 ], [ %119, %118 ], [ %117, %116 ], [ %115, %114 ], [ %113, %112 ], [ %111, %110 ]
  ret i32 %131
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeE(%"class.blink::LazyLineBreakIterator"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %9, %7 ], [ 0, %3 ]
  %12 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeEi(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i32 %2, i32 %11)
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink21LazyLineBreakIterator20NextBreakOpportunityEj(%"class.blink::LazyLineBreakIterator"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi i32 [ %10, %8 ], [ 0, %2 ]
  %13 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeEi(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i32 %4, i32 %12) #9
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink21LazyLineBreakIterator20NextBreakOpportunityEjj(%"class.blink::LazyLineBreakIterator"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 4
  %6 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeEi(%"class.blink::LazyLineBreakIterator"* %0, i32 %1, i32 %5, i32 %2)
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink21LazyLineBreakIterator24PreviousBreakOpportunityEjj(%"class.blink::LazyLineBreakIterator"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %56, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp ult i32 %9, %1
  %11 = select i1 %10, i32 %9, i32 %1
  %12 = add i32 %11, 2
  %13 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 7
  %14 = icmp ugt i32 %11, %2
  br i1 %14, label %15, label %56

15:                                               ; preds = %7
  %16 = icmp ult i32 %9, %12
  %17 = select i1 %16, i32 %9, i32 %12
  br label %18

18:                                               ; preds = %15, %53
  %19 = phi i32 [ %20, %53 ], [ %17, %15 ]
  %20 = phi i32 [ %54, %53 ], [ %11, %15 ]
  %21 = load i32, i32* %13, align 4
  %22 = tail call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeEi(%"class.blink::LazyLineBreakIterator"* %0, i32 %20, i32 %21, i32 %19)
  %23 = icmp eq i32 %22, %20
  br i1 %23, label %56, label %24

24:                                               ; preds = %18
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = add i32 %20, -1
  br label %53

32:                                               ; preds = %24
  %33 = icmp eq %"class.WTF::StringImpl"* %25, null
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 1
  %35 = bitcast %"class.WTF::StringImpl"* %34 to i16*
  %36 = select i1 %33, i16* null, i16* %35
  %37 = add i32 %20, -1
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i16, i16* %36, i64 %38
  %40 = load i16, i16* %39, align 2
  %41 = and i16 %40, -1024
  %42 = icmp eq i16 %41, -9216
  %43 = icmp ne i32 %37, 0
  %44 = and i1 %43, %42
  br i1 %44, label %45, label %53

45:                                               ; preds = %32
  %46 = add i32 %20, -2
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i16, i16* %36, i64 %47
  %49 = load i16, i16* %48, align 2
  %50 = and i16 %49, -1024
  %51 = icmp eq i16 %50, -10240
  %52 = select i1 %51, i32 %46, i32 %37
  br label %53

53:                                               ; preds = %45, %30, %32
  %54 = phi i32 [ %31, %30 ], [ %37, %32 ], [ %52, %45 ]
  %55 = icmp ugt i32 %54, %2
  br i1 %55, label %18, label %56

56:                                               ; preds = %53, %18, %3, %7
  %57 = phi i32 [ %2, %7 ], [ %2, %3 ], [ %20, %18 ], [ %2, %53 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_13LineBreakTypeE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #0 {
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ]

3:                                                ; preds = %2
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6) #9
  br label %14

5:                                                ; preds = %2
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 8) #9
  br label %14

7:                                                ; preds = %2
  %8 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i64 14) #9
  br label %14

9:                                                ; preds = %2
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7) #9
  br label %14

11:                                               ; preds = %2
  %12 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 15) #9
  %13 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %12, i32 %1) #9
  br label %14

14:                                               ; preds = %11, %9, %7, %5, %3
  %15 = phi %"class.std::__1::basic_ostream"* [ %13, %11 ], [ %10, %9 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ]
  ret %"class.std::__1::basic_ostream"* %15
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_14BreakSpaceTypeE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #0 {
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 3, label %5
    i32 1, label %7
    i32 2, label %9
  ]

3:                                                ; preds = %2
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i64 17) #9
  br label %14

5:                                                ; preds = %2
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i64 16) #9
  br label %14

7:                                                ; preds = %2
  %8 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i64 15) #9
  br label %14

9:                                                ; preds = %2
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i64 14) #9
  br label %14

11:                                               ; preds = %2
  %12 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i64 16) #9
  %13 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %12, i32 %1) #9
  br label %14

14:                                               ; preds = %11, %9, %7, %5, %3
  %15 = phi %"class.std::__1::basic_ostream"* [ %13, %11 ], [ %10, %9 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ]
  ret %"class.std::__1::basic_ostream"* %15
}

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i8*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  br label %54

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %52 = load i16, i16* %51, align 8
  %53 = icmp eq i32 %1, 1
  br i1 %53, label %54, label %61

54:                                               ; preds = %44, %50
  %55 = phi i16 [ %49, %44 ], [ %52, %50 ]
  %56 = add nsw i32 %1, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %2, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  br label %64

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %63 = load i16, i16* %62, align 2
  br label %64

64:                                               ; preds = %61, %54
  %65 = phi i16 [ %55, %54 ], [ %52, %61 ]
  %66 = phi i16 [ %60, %54 ], [ %63, %61 ]
  %67 = add i16 %66, -9
  %68 = icmp ult i16 %67, 24
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = zext i16 %67 to i24
  %71 = lshr i24 -8388605, %70
  %72 = and i24 %71, 1
  %73 = icmp ne i24 %72, 0
  br label %74

74:                                               ; preds = %64, %69
  %75 = phi i1 [ %73, %69 ], [ false, %64 ]
  %76 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #9
  %77 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %78 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %79 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %80 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 16, i1 false)
  %81 = load i16, i16* %79, align 2
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %85 = load i16, i16* %84, align 8
  %86 = icmp eq i16 %85, 0
  %87 = select i1 %86, i16* %79, i16* %84
  %88 = select i1 %86, i32 1, i32 2
  br label %89

89:                                               ; preds = %74, %83
  %90 = phi i16* [ %87, %83 ], [ null, %74 ]
  %91 = phi i32 [ %88, %83 ], [ 0, %74 ]
  store i16* %90, i16** %77, align 8
  store i32 %91, i32* %78, align 8
  %92 = icmp slt i32 %1, %3
  br i1 %92, label %93, label %193

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %95 = sext i32 %1 to i64
  br label %96

96:                                               ; preds = %178, %93
  %97 = phi i64 [ %95, %93 ], [ %180, %178 ]
  %98 = phi i1 [ %75, %93 ], [ false, %178 ]
  %99 = phi i16 [ %66, %93 ], [ %104, %178 ]
  %100 = phi i16 [ %65, %93 ], [ %99, %178 ]
  %101 = phi i32 [ -1, %93 ], [ %179, %178 ]
  %102 = getelementptr inbounds i8, i8* %2, i64 %97
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i16
  %105 = trunc i64 %97 to i32
  switch i8 %103, label %106 [
    i8 32, label %187
    i8 9, label %187
    i8 10, label %187
  ]

106:                                              ; preds = %96
  %107 = zext i16 %99 to i64
  %108 = icmp eq i16 %99, 45
  %109 = add nsw i16 %104, -48
  %110 = icmp ult i16 %109, 10
  %111 = and i1 %108, %110
  br i1 %111, label %112, label %115

112:                                              ; preds = %106
  %113 = add i16 %100, -48
  %114 = icmp ult i16 %113, 10
  br i1 %114, label %185, label %134

115:                                              ; preds = %106
  %116 = add i16 %99, -33
  %117 = icmp ult i16 %116, 95
  %118 = add nsw i16 %104, -33
  %119 = icmp ult i16 %118, 95
  %120 = and i1 %117, %119
  br i1 %120, label %121, label %138

121:                                              ; preds = %115
  %122 = zext i8 %103 to i32
  %123 = add nsw i64 %107, -33
  %124 = add nsw i32 %122, -33
  %125 = sdiv i32 %124, 8
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %123, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = and i32 %124, 7
  %131 = shl i32 1, %130
  %132 = and i32 %131, %129
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %178, label %183

134:                                              ; preds = %112
  %135 = or i16 %100, 32
  %136 = add i16 %135, -97
  %137 = icmp ult i16 %136, 26
  br i1 %137, label %191, label %178

138:                                              ; preds = %115
  %139 = icmp slt i8 %103, 0
  %140 = icmp ne i8 %103, -96
  %141 = and i1 %139, %140
  br i1 %141, label %146, label %142

142:                                              ; preds = %138
  %143 = icmp ugt i16 %99, 127
  %144 = icmp ne i16 %99, 160
  %145 = and i1 %143, %144
  br i1 %145, label %146, label %178

146:                                              ; preds = %142, %138
  %147 = sext i32 %101 to i64
  %148 = icmp sgt i64 %97, %147
  br i1 %148, label %149, label %174

149:                                              ; preds = %146
  %150 = load i32, i32* %78, align 8
  %151 = or i32 %150, %105
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %174, label %153

153:                                              ; preds = %149
  %154 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %155 = icmp eq %"class.icu_69::BreakIterator"* %154, null
  br i1 %155, label %174, label %156

156:                                              ; preds = %153
  %157 = load i32, i32* %78, align 8
  %158 = trunc i64 %97 to i32
  %159 = add i32 %158, -1
  %160 = add i32 %159, %157
  %161 = load i32, i32* %94, align 8
  %162 = sub i32 %160, %161
  %163 = bitcast %"class.icu_69::BreakIterator"* %154 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %164 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %163, align 8
  %165 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %164, i64 15
  %166 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %165, align 8
  %167 = call i32 %166(%"class.icu_69::BreakIterator"* nonnull %154, i32 %162) #9
  %168 = icmp sgt i32 %167, -1
  br i1 %168, label %169, label %174

169:                                              ; preds = %156
  %170 = load i32, i32* %94, align 8
  %171 = add i32 %170, %167
  %172 = load i32, i32* %78, align 8
  %173 = sub i32 %171, %172
  br label %174

174:                                              ; preds = %169, %156, %153, %149, %146
  %175 = phi i32 [ %101, %146 ], [ %101, %149 ], [ %173, %169 ], [ %167, %156 ], [ %101, %153 ]
  %176 = icmp ne i32 %175, %105
  %177 = or i1 %98, %176
  br i1 %177, label %178, label %189

178:                                              ; preds = %121, %134, %174, %142
  %179 = phi i32 [ %175, %174 ], [ %101, %142 ], [ %101, %134 ], [ %101, %121 ]
  %180 = add nsw i64 %97, 1
  %181 = trunc i64 %180 to i32
  %182 = icmp eq i32 %181, %3
  br i1 %182, label %193, label %96

183:                                              ; preds = %121
  %184 = trunc i64 %97 to i32
  br label %193

185:                                              ; preds = %112
  %186 = trunc i64 %97 to i32
  br label %193

187:                                              ; preds = %96, %96, %96
  %188 = trunc i64 %97 to i32
  br label %193

189:                                              ; preds = %174
  %190 = trunc i64 %97 to i32
  br label %193

191:                                              ; preds = %134
  %192 = trunc i64 %97 to i32
  br label %193

193:                                              ; preds = %178, %183, %185, %187, %189, %191, %89
  %194 = phi i32 [ %3, %89 ], [ %184, %183 ], [ %186, %185 ], [ %188, %187 ], [ %190, %189 ], [ %192, %191 ], [ %3, %178 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #9
  ret i32 %194
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE1EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i8*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  br label %54

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %52 = load i16, i16* %51, align 8
  %53 = icmp eq i32 %1, 1
  br i1 %53, label %54, label %61

54:                                               ; preds = %44, %50
  %55 = phi i16 [ %49, %44 ], [ %52, %50 ]
  %56 = add nsw i32 %1, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %2, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  br label %64

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %63 = load i16, i16* %62, align 2
  br label %64

64:                                               ; preds = %61, %54
  %65 = phi i16 [ %55, %54 ], [ %52, %61 ]
  %66 = phi i16 [ %60, %54 ], [ %63, %61 ]
  %67 = add i16 %66, -9
  %68 = icmp ult i16 %67, 24
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = zext i16 %67 to i24
  %71 = lshr i24 -8388605, %70
  %72 = and i24 %71, 1
  %73 = icmp ne i24 %72, 0
  br label %74

74:                                               ; preds = %64, %69
  %75 = phi i1 [ %73, %69 ], [ false, %64 ]
  %76 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #9
  %77 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %78 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %79 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %80 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 16, i1 false)
  %81 = load i16, i16* %79, align 2
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %85 = load i16, i16* %84, align 8
  %86 = icmp eq i16 %85, 0
  %87 = select i1 %86, i16* %79, i16* %84
  %88 = select i1 %86, i32 1, i32 2
  br label %89

89:                                               ; preds = %74, %83
  %90 = phi i16* [ %87, %83 ], [ null, %74 ]
  %91 = phi i32 [ %88, %83 ], [ 0, %74 ]
  store i16* %90, i16** %77, align 8
  store i32 %91, i32* %78, align 8
  %92 = icmp slt i32 %1, %3
  br i1 %92, label %93, label %195

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %95 = sext i32 %1 to i64
  br label %96

96:                                               ; preds = %179, %93
  %97 = phi i64 [ %95, %93 ], [ %182, %179 ]
  %98 = phi i1 [ %75, %93 ], [ %180, %179 ]
  %99 = phi i16 [ %66, %93 ], [ %104, %179 ]
  %100 = phi i16 [ %65, %93 ], [ %99, %179 ]
  %101 = phi i32 [ -1, %93 ], [ %181, %179 ]
  %102 = getelementptr inbounds i8, i8* %2, i64 %97
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i16
  %105 = trunc i64 %97 to i32
  switch i8 %103, label %107 [
    i8 32, label %106
    i8 9, label %106
    i8 10, label %106
  ]

106:                                              ; preds = %96, %96, %96
  br i1 %98, label %179, label %193

107:                                              ; preds = %96
  %108 = zext i16 %99 to i64
  %109 = icmp eq i16 %99, 45
  %110 = add nsw i16 %104, -48
  %111 = icmp ult i16 %110, 10
  %112 = and i1 %109, %111
  br i1 %112, label %113, label %116

113:                                              ; preds = %107
  %114 = add i16 %100, -48
  %115 = icmp ult i16 %114, 10
  br i1 %115, label %187, label %135

116:                                              ; preds = %107
  %117 = add i16 %99, -33
  %118 = icmp ult i16 %117, 95
  %119 = add nsw i16 %104, -33
  %120 = icmp ult i16 %119, 95
  %121 = and i1 %118, %120
  br i1 %121, label %122, label %139

122:                                              ; preds = %116
  %123 = zext i8 %103 to i32
  %124 = add nsw i64 %108, -33
  %125 = add nsw i32 %123, -33
  %126 = sdiv i32 %125, 8
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %124, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = and i32 %125, 7
  %132 = shl i32 1, %131
  %133 = and i32 %132, %130
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %179, label %185

135:                                              ; preds = %113
  %136 = or i16 %100, 32
  %137 = add i16 %136, -97
  %138 = icmp ult i16 %137, 26
  br i1 %138, label %191, label %179

139:                                              ; preds = %116
  %140 = icmp slt i8 %103, 0
  %141 = icmp ne i8 %103, -96
  %142 = and i1 %140, %141
  br i1 %142, label %147, label %143

143:                                              ; preds = %139
  %144 = icmp ugt i16 %99, 127
  %145 = icmp ne i16 %99, 160
  %146 = and i1 %144, %145
  br i1 %146, label %147, label %179

147:                                              ; preds = %143, %139
  %148 = sext i32 %101 to i64
  %149 = icmp sgt i64 %97, %148
  br i1 %149, label %150, label %175

150:                                              ; preds = %147
  %151 = load i32, i32* %78, align 8
  %152 = or i32 %151, %105
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %175, label %154

154:                                              ; preds = %150
  %155 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %156 = icmp eq %"class.icu_69::BreakIterator"* %155, null
  br i1 %156, label %175, label %157

157:                                              ; preds = %154
  %158 = load i32, i32* %78, align 8
  %159 = trunc i64 %97 to i32
  %160 = add i32 %159, -1
  %161 = add i32 %160, %158
  %162 = load i32, i32* %94, align 8
  %163 = sub i32 %161, %162
  %164 = bitcast %"class.icu_69::BreakIterator"* %155 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %165 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %164, align 8
  %166 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %165, i64 15
  %167 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %166, align 8
  %168 = call i32 %167(%"class.icu_69::BreakIterator"* nonnull %155, i32 %163) #9
  %169 = icmp sgt i32 %168, -1
  br i1 %169, label %170, label %175

170:                                              ; preds = %157
  %171 = load i32, i32* %94, align 8
  %172 = add i32 %171, %168
  %173 = load i32, i32* %78, align 8
  %174 = sub i32 %172, %173
  br label %175

175:                                              ; preds = %170, %157, %154, %150, %147
  %176 = phi i32 [ %101, %147 ], [ %101, %150 ], [ %174, %170 ], [ %168, %157 ], [ %101, %154 ]
  %177 = icmp ne i32 %176, %105
  %178 = or i1 %98, %177
  br i1 %178, label %179, label %189

179:                                              ; preds = %122, %135, %175, %143, %106
  %180 = phi i1 [ true, %106 ], [ false, %175 ], [ false, %143 ], [ false, %135 ], [ false, %122 ]
  %181 = phi i32 [ %101, %106 ], [ %176, %175 ], [ %101, %143 ], [ %101, %135 ], [ %101, %122 ]
  %182 = add nsw i64 %97, 1
  %183 = trunc i64 %182 to i32
  %184 = icmp eq i32 %183, %3
  br i1 %184, label %195, label %96

185:                                              ; preds = %122
  %186 = trunc i64 %97 to i32
  br label %195

187:                                              ; preds = %113
  %188 = trunc i64 %97 to i32
  br label %195

189:                                              ; preds = %175
  %190 = trunc i64 %97 to i32
  br label %195

191:                                              ; preds = %135
  %192 = trunc i64 %97 to i32
  br label %195

193:                                              ; preds = %106
  %194 = trunc i64 %97 to i32
  br label %195

195:                                              ; preds = %179, %185, %187, %189, %191, %193, %89
  %196 = phi i32 [ %3, %89 ], [ %186, %185 ], [ %188, %187 ], [ %190, %189 ], [ %192, %191 ], [ %194, %193 ], [ %3, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #9
  ret i32 %196
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE2EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i8*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  br label %54

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %52 = load i16, i16* %51, align 8
  %53 = icmp eq i32 %1, 1
  br i1 %53, label %54, label %61

54:                                               ; preds = %44, %50
  %55 = phi i16 [ %49, %44 ], [ %52, %50 ]
  %56 = add nsw i32 %1, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %2, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  br label %64

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %63 = load i16, i16* %62, align 2
  br label %64

64:                                               ; preds = %61, %54
  %65 = phi i16 [ %55, %54 ], [ %52, %61 ]
  %66 = phi i16 [ %60, %54 ], [ %63, %61 ]
  %67 = add i16 %66, -9
  %68 = icmp ult i16 %67, 24
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = zext i16 %67 to i24
  %71 = lshr i24 -8388605, %70
  %72 = and i24 %71, 1
  %73 = icmp ne i24 %72, 0
  br label %74

74:                                               ; preds = %64, %69
  %75 = phi i1 [ %73, %69 ], [ false, %64 ]
  %76 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #9
  %77 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %78 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %79 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %80 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 16, i1 false)
  %81 = load i16, i16* %79, align 2
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %85 = load i16, i16* %84, align 8
  %86 = icmp eq i16 %85, 0
  %87 = select i1 %86, i16* %79, i16* %84
  %88 = select i1 %86, i32 1, i32 2
  br label %89

89:                                               ; preds = %74, %83
  %90 = phi i16* [ %87, %83 ], [ null, %74 ]
  %91 = phi i32 [ %88, %83 ], [ 0, %74 ]
  store i16* %90, i16** %77, align 8
  store i32 %91, i32* %78, align 8
  %92 = icmp slt i32 %1, %3
  br i1 %92, label %93, label %194

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %95 = sext i32 %1 to i64
  br label %96

96:                                               ; preds = %178, %93
  %97 = phi i64 [ %95, %93 ], [ %181, %178 ]
  %98 = phi i1 [ %75, %93 ], [ %179, %178 ]
  %99 = phi i16 [ %66, %93 ], [ %104, %178 ]
  %100 = phi i16 [ %65, %93 ], [ %99, %178 ]
  %101 = phi i32 [ -1, %93 ], [ %180, %178 ]
  %102 = getelementptr inbounds i8, i8* %2, i64 %97
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i16
  switch i8 %103, label %105 [
    i8 32, label %178
    i8 9, label %178
    i8 10, label %178
  ]

105:                                              ; preds = %96
  %106 = trunc i64 %97 to i32
  br i1 %98, label %192, label %107

107:                                              ; preds = %105
  %108 = zext i16 %99 to i64
  %109 = icmp eq i16 %99, 45
  %110 = add nsw i16 %104, -48
  %111 = icmp ult i16 %110, 10
  %112 = and i1 %109, %111
  br i1 %112, label %113, label %116

113:                                              ; preds = %107
  %114 = add i16 %100, -48
  %115 = icmp ult i16 %114, 10
  br i1 %115, label %186, label %135

116:                                              ; preds = %107
  %117 = add i16 %99, -33
  %118 = icmp ult i16 %117, 95
  %119 = add nsw i16 %104, -33
  %120 = icmp ult i16 %119, 95
  %121 = and i1 %118, %120
  br i1 %121, label %122, label %139

122:                                              ; preds = %116
  %123 = zext i8 %103 to i32
  %124 = add nsw i64 %108, -33
  %125 = add nsw i32 %123, -33
  %126 = sdiv i32 %125, 8
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %124, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = and i32 %125, 7
  %132 = shl i32 1, %131
  %133 = and i32 %132, %130
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %178, label %184

135:                                              ; preds = %113
  %136 = or i16 %100, 32
  %137 = add i16 %136, -97
  %138 = icmp ult i16 %137, 26
  br i1 %138, label %190, label %178

139:                                              ; preds = %116
  %140 = icmp slt i8 %103, 0
  %141 = icmp ne i8 %103, -96
  %142 = and i1 %140, %141
  br i1 %142, label %147, label %143

143:                                              ; preds = %139
  %144 = icmp ugt i16 %99, 127
  %145 = icmp ne i16 %99, 160
  %146 = and i1 %144, %145
  br i1 %146, label %147, label %178

147:                                              ; preds = %143, %139
  %148 = sext i32 %101 to i64
  %149 = icmp sgt i64 %97, %148
  br i1 %149, label %150, label %175

150:                                              ; preds = %147
  %151 = load i32, i32* %78, align 8
  %152 = or i32 %151, %106
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %175, label %154

154:                                              ; preds = %150
  %155 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %156 = icmp eq %"class.icu_69::BreakIterator"* %155, null
  br i1 %156, label %175, label %157

157:                                              ; preds = %154
  %158 = load i32, i32* %78, align 8
  %159 = trunc i64 %97 to i32
  %160 = add i32 %159, -1
  %161 = add i32 %160, %158
  %162 = load i32, i32* %94, align 8
  %163 = sub i32 %161, %162
  %164 = bitcast %"class.icu_69::BreakIterator"* %155 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %165 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %164, align 8
  %166 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %165, i64 15
  %167 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %166, align 8
  %168 = call i32 %167(%"class.icu_69::BreakIterator"* nonnull %155, i32 %163) #9
  %169 = icmp sgt i32 %168, -1
  br i1 %169, label %170, label %175

170:                                              ; preds = %157
  %171 = load i32, i32* %94, align 8
  %172 = add i32 %171, %168
  %173 = load i32, i32* %78, align 8
  %174 = sub i32 %172, %173
  br label %175

175:                                              ; preds = %170, %157, %154, %150, %147
  %176 = phi i32 [ %101, %147 ], [ %101, %150 ], [ %174, %170 ], [ %168, %157 ], [ %101, %154 ]
  %177 = icmp eq i32 %176, %106
  br i1 %177, label %188, label %178

178:                                              ; preds = %122, %135, %96, %96, %96, %143, %175
  %179 = phi i1 [ false, %175 ], [ false, %143 ], [ true, %96 ], [ true, %96 ], [ true, %96 ], [ false, %135 ], [ false, %122 ]
  %180 = phi i32 [ %176, %175 ], [ %101, %143 ], [ %101, %96 ], [ %101, %96 ], [ %101, %96 ], [ %101, %135 ], [ %101, %122 ]
  %181 = add nsw i64 %97, 1
  %182 = trunc i64 %181 to i32
  %183 = icmp eq i32 %182, %3
  br i1 %183, label %194, label %96

184:                                              ; preds = %122
  %185 = trunc i64 %97 to i32
  br label %194

186:                                              ; preds = %113
  %187 = trunc i64 %97 to i32
  br label %194

188:                                              ; preds = %175
  %189 = trunc i64 %97 to i32
  br label %194

190:                                              ; preds = %135
  %191 = trunc i64 %97 to i32
  br label %194

192:                                              ; preds = %105
  %193 = trunc i64 %97 to i32
  br label %194

194:                                              ; preds = %178, %184, %186, %188, %190, %192, %89
  %195 = phi i32 [ %3, %89 ], [ %185, %184 ], [ %187, %186 ], [ %189, %188 ], [ %191, %190 ], [ %193, %192 ], [ %3, %178 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #9
  ret i32 %195
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE3EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i8*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  br label %54

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %52 = load i16, i16* %51, align 8
  %53 = icmp eq i32 %1, 1
  br i1 %53, label %54, label %61

54:                                               ; preds = %44, %50
  %55 = phi i16 [ %49, %44 ], [ %52, %50 ]
  %56 = add nsw i32 %1, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %2, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  br label %64

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %63 = load i16, i16* %62, align 2
  br label %64

64:                                               ; preds = %61, %54
  %65 = phi i16 [ %55, %54 ], [ %52, %61 ]
  %66 = phi i16 [ %60, %54 ], [ %63, %61 ]
  %67 = add i16 %66, -9
  %68 = icmp ult i16 %67, 24
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = zext i16 %67 to i24
  %71 = lshr i24 -8388605, %70
  %72 = and i24 %71, 1
  %73 = icmp ne i24 %72, 0
  br label %74

74:                                               ; preds = %64, %69
  %75 = phi i1 [ %73, %69 ], [ false, %64 ]
  %76 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #9
  %77 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %78 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %79 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %80 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 16, i1 false)
  %81 = load i16, i16* %79, align 2
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %85 = load i16, i16* %84, align 8
  %86 = icmp eq i16 %85, 0
  %87 = select i1 %86, i16* %79, i16* %84
  %88 = select i1 %86, i32 1, i32 2
  br label %89

89:                                               ; preds = %74, %83
  %90 = phi i16* [ %87, %83 ], [ null, %74 ]
  %91 = phi i32 [ %88, %83 ], [ 0, %74 ]
  store i16* %90, i16** %77, align 8
  store i32 %91, i32* %78, align 8
  %92 = icmp slt i32 %1, %3
  br i1 %92, label %93, label %212

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %95 = sext i32 %1 to i64
  %96 = sext i32 %3 to i64
  br label %97

97:                                               ; preds = %194, %93
  %98 = phi i64 [ %95, %93 ], [ %196, %194 ]
  %99 = phi i32 [ %1, %93 ], [ %197, %194 ]
  %100 = phi i1 [ %75, %93 ], [ %115, %194 ]
  %101 = phi i16 [ %66, %93 ], [ %106, %194 ]
  %102 = phi i16 [ %65, %93 ], [ %101, %194 ]
  %103 = phi i32 [ -1, %93 ], [ %195, %194 ]
  %104 = getelementptr inbounds i8, i8* %2, i64 %98
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i16
  %107 = add i8 %105, -9
  %108 = icmp ult i8 %107, 24
  br i1 %108, label %109, label %114

109:                                              ; preds = %97
  %110 = zext i8 %107 to i24
  %111 = lshr i24 -8388605, %110
  %112 = and i24 %111, 1
  %113 = icmp ne i24 %112, 0
  br label %114

114:                                              ; preds = %97, %109
  %115 = phi i1 [ %113, %109 ], [ false, %97 ]
  %116 = icmp eq i16 %101, 12288
  %117 = or i1 %100, %116
  %118 = trunc i64 %98 to i32
  br i1 %117, label %210, label %119

119:                                              ; preds = %114
  %120 = add nsw i64 %98, 1
  %121 = icmp slt i64 %120, %96
  %122 = and i1 %115, %121
  br i1 %122, label %208, label %123

123:                                              ; preds = %119
  %124 = zext i16 %101 to i64
  %125 = icmp eq i16 %101, 45
  %126 = add nsw i16 %106, -48
  %127 = icmp ult i16 %126, 10
  %128 = and i1 %125, %127
  br i1 %128, label %129, label %132

129:                                              ; preds = %123
  %130 = add i16 %102, -48
  %131 = icmp ult i16 %130, 10
  br i1 %131, label %202, label %151

132:                                              ; preds = %123
  %133 = add i16 %101, -33
  %134 = icmp ult i16 %133, 95
  %135 = add nsw i16 %106, -33
  %136 = icmp ult i16 %135, 95
  %137 = and i1 %134, %136
  br i1 %137, label %138, label %155

138:                                              ; preds = %132
  %139 = zext i8 %105 to i32
  %140 = add nsw i64 %124, -33
  %141 = add nsw i32 %139, -33
  %142 = sdiv i32 %141, 8
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %140, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = and i32 %141, 7
  %148 = shl i32 1, %147
  %149 = and i32 %148, %146
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %194, label %200

151:                                              ; preds = %129
  %152 = or i16 %102, 32
  %153 = add i16 %152, -97
  %154 = icmp ult i16 %153, 26
  br i1 %154, label %206, label %194

155:                                              ; preds = %132
  %156 = icmp slt i8 %105, 0
  %157 = icmp ne i8 %105, -96
  %158 = and i1 %156, %157
  br i1 %158, label %163, label %159

159:                                              ; preds = %155
  %160 = icmp ugt i16 %101, 127
  %161 = icmp ne i16 %101, 160
  %162 = and i1 %160, %161
  br i1 %162, label %163, label %194

163:                                              ; preds = %159, %155
  %164 = sext i32 %103 to i64
  %165 = icmp sgt i64 %98, %164
  br i1 %165, label %166, label %191

166:                                              ; preds = %163
  %167 = load i32, i32* %78, align 8
  %168 = or i32 %167, %118
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %191, label %170

170:                                              ; preds = %166
  %171 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %172 = icmp eq %"class.icu_69::BreakIterator"* %171, null
  br i1 %172, label %191, label %173

173:                                              ; preds = %170
  %174 = load i32, i32* %78, align 8
  %175 = trunc i64 %98 to i32
  %176 = add i32 %175, -1
  %177 = add i32 %176, %174
  %178 = load i32, i32* %94, align 8
  %179 = sub i32 %177, %178
  %180 = bitcast %"class.icu_69::BreakIterator"* %171 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %181 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %180, align 8
  %182 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %181, i64 15
  %183 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %182, align 8
  %184 = call i32 %183(%"class.icu_69::BreakIterator"* nonnull %171, i32 %179) #9
  %185 = icmp sgt i32 %184, -1
  br i1 %185, label %186, label %191

186:                                              ; preds = %173
  %187 = load i32, i32* %94, align 8
  %188 = add i32 %187, %184
  %189 = load i32, i32* %78, align 8
  %190 = sub i32 %188, %189
  br label %191

191:                                              ; preds = %186, %173, %170, %166, %163
  %192 = phi i32 [ %103, %163 ], [ %103, %166 ], [ %190, %186 ], [ %184, %173 ], [ %103, %170 ]
  %193 = icmp eq i32 %192, %118
  br i1 %193, label %204, label %194

194:                                              ; preds = %138, %151, %159, %191
  %195 = phi i32 [ %192, %191 ], [ %103, %159 ], [ %103, %151 ], [ %103, %138 ]
  %196 = add nsw i64 %98, 1
  %197 = add nsw i32 %99, 1
  %198 = trunc i64 %196 to i32
  %199 = icmp eq i32 %198, %3
  br i1 %199, label %212, label %97

200:                                              ; preds = %138
  %201 = trunc i64 %98 to i32
  br label %212

202:                                              ; preds = %129
  %203 = trunc i64 %98 to i32
  br label %212

204:                                              ; preds = %191
  %205 = trunc i64 %98 to i32
  br label %212

206:                                              ; preds = %151
  %207 = trunc i64 %98 to i32
  br label %212

208:                                              ; preds = %119
  %209 = add nsw i32 %99, 1
  br label %212

210:                                              ; preds = %114
  %211 = trunc i64 %98 to i32
  br label %212

212:                                              ; preds = %194, %200, %202, %204, %206, %208, %210, %89
  %213 = phi i32 [ %3, %89 ], [ %201, %200 ], [ %203, %202 ], [ %205, %204 ], [ %207, %206 ], [ %209, %208 ], [ %211, %210 ], [ %3, %194 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #9
  ret i32 %213
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"*, %"struct.blink::LazyLineBreakIterator::PriorContext"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 2
  %9 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %8, align 8
  %10 = icmp eq %"class.icu_69::BreakIterator"* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.blink::LazyLineBreakIterator::PriorContext", %"struct.blink::LazyLineBreakIterator::PriorContext"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 5, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %106, label %17

17:                                               ; preds = %11
  tail call void @_ZN5blink24ReleaseLineBreakIteratorEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"* nonnull %9) #9
  store %"class.icu_69::BreakIterator"* null, %"class.icu_69::BreakIterator"** %8, align 8
  %18 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 5, i32 0
  store i16* null, i16** %18, align 8
  store i32 0, i32* %14, align 8
  br label %19

19:                                               ; preds = %2, %17
  %20 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 5
  %21 = bitcast %"struct.blink::LazyLineBreakIterator::PriorContext"* %20 to i8*
  %22 = bitcast %"struct.blink::LazyLineBreakIterator::PriorContext"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 12, i1 false)
  %23 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %24, align 8
  %25 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  br label %33

33:                                               ; preds = %19, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %19 ]
  %35 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = icmp ugt i32 %26, %34
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  store i8* null, i8** %24, align 8
  br label %47

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %26) #9
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %34) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.19, i64 0, i64 0), i8* %39, i8* %40) #9
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  store i8* %42, i8** %24, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.20, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %6) #9
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9
  br label %47

47:                                               ; preds = %37, %38, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %52, label %79, label %54

54:                                               ; preds = %47
  br i1 %53, label %61, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 1
  %57 = bitcast %"class.WTF::StringImpl"* %56 to i8*
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  br label %61

61:                                               ; preds = %54, %55
  %62 = phi i64 [ %60, %55 ], [ 0, %54 ]
  %63 = phi i8* [ %57, %55 ], [ null, %54 ]
  %64 = load i32, i32* %25, align 8
  %65 = zext i32 %64 to i64
  %66 = icmp ult i64 %62, %65
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)) #9
  %69 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #9
  br label %70

70:                                               ; preds = %61, %67
  %71 = sub nsw i64 %62, %65
  %72 = getelementptr inbounds i8, i8* %63, i64 %65
  %73 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 1
  %74 = getelementptr inbounds %"struct.blink::LazyLineBreakIterator::PriorContext", %"struct.blink::LazyLineBreakIterator::PriorContext"* %1, i64 0, i32 0
  %75 = load i16*, i16** %74, align 8
  %76 = getelementptr inbounds %"struct.blink::LazyLineBreakIterator::PriorContext", %"struct.blink::LazyLineBreakIterator::PriorContext"* %1, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = call %"class.icu_69::BreakIterator"* @_ZN5blink24AcquireLineBreakIteratorEN4base4spanIKhLm18446744073709551615EEERKN3WTF12AtomicStringEPKDsj(i64 %71, i8* %72, %"class.WTF::AtomicString"* dereferenceable(8) %73, i16* %75, i32 %77) #9
  br label %104

79:                                               ; preds = %47
  br i1 %53, label %86, label %80

80:                                               ; preds = %79
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 1
  %82 = bitcast %"class.WTF::StringImpl"* %81 to i16*
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  br label %86

86:                                               ; preds = %79, %80
  %87 = phi i64 [ %85, %80 ], [ 0, %79 ]
  %88 = phi i16* [ %82, %80 ], [ null, %79 ]
  %89 = load i32, i32* %25, align 8
  %90 = zext i32 %89 to i64
  %91 = icmp ult i64 %87, %90
  br i1 %91, label %92, label %95

92:                                               ; preds = %86
  %93 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)) #9
  %94 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #9
  br label %95

95:                                               ; preds = %86, %92
  %96 = sub nsw i64 %87, %90
  %97 = getelementptr inbounds i16, i16* %88, i64 %90
  %98 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 1
  %99 = getelementptr inbounds %"struct.blink::LazyLineBreakIterator::PriorContext", %"struct.blink::LazyLineBreakIterator::PriorContext"* %1, i64 0, i32 0
  %100 = load i16*, i16** %99, align 8
  %101 = getelementptr inbounds %"struct.blink::LazyLineBreakIterator::PriorContext", %"struct.blink::LazyLineBreakIterator::PriorContext"* %1, i64 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = call %"class.icu_69::BreakIterator"* @_ZN5blink24AcquireLineBreakIteratorEN4base4spanIKDsLm18446744073709551615EEERKN3WTF12AtomicStringEPS2_j(i64 %96, i16* %97, %"class.WTF::AtomicString"* dereferenceable(8) %98, i16* %100, i32 %102) #9
  br label %104

104:                                              ; preds = %95, %70
  %105 = phi %"class.icu_69::BreakIterator"* [ %103, %95 ], [ %78, %70 ]
  store %"class.icu_69::BreakIterator"* %105, %"class.icu_69::BreakIterator"** %8, align 8
  br label %106

106:                                              ; preds = %11, %104
  %107 = phi %"class.icu_69::BreakIterator"* [ %105, %104 ], [ %9, %11 ]
  ret %"class.icu_69::BreakIterator"* %107
}

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #2

declare %"class.icu_69::BreakIterator"* @_ZN5blink24AcquireLineBreakIteratorEN4base4spanIKhLm18446744073709551615EEERKN3WTF12AtomicStringEPKDsj(i64, i8*, %"class.WTF::AtomicString"* dereferenceable(8), i16*, i32) local_unnamed_addr #2

declare %"class.icu_69::BreakIterator"* @_ZN5blink24AcquireLineBreakIteratorEN4base4spanIKDsLm18446744073709551615EEERKN3WTF12AtomicStringEPS2_j(i64, i16*, %"class.WTF::AtomicString"* dereferenceable(8), i16*, i32) local_unnamed_addr #2

declare void @_ZN5blink24ReleaseLineBreakIteratorEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i16*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %2, i64 %46
  %48 = load i16, i16* %47, align 2
  br label %53

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %51 = load i16, i16* %50, align 8
  %52 = icmp eq i32 %1, 1
  br i1 %52, label %53, label %58

53:                                               ; preds = %44, %49
  %54 = phi i16 [ %48, %44 ], [ %51, %49 ]
  %55 = add nsw i32 %1, -1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %2, i64 %56
  br label %60

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i16 [ %54, %53 ], [ %51, %58 ]
  %62 = phi i16* [ %57, %53 ], [ %59, %58 ]
  %63 = load i16, i16* %62, align 2
  %64 = add i16 %63, -9
  %65 = icmp ult i16 %64, 24
  br i1 %65, label %66, label %71

66:                                               ; preds = %60
  %67 = zext i16 %64 to i24
  %68 = lshr i24 -8388605, %67
  %69 = and i24 %68, 1
  %70 = icmp ne i24 %69, 0
  br label %71

71:                                               ; preds = %60, %66
  %72 = phi i1 [ %70, %66 ], [ false, %60 ]
  %73 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #9
  %74 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %75 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %76 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %77 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 16, i1 false)
  %78 = load i16, i16* %76, align 2
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %82 = load i16, i16* %81, align 8
  %83 = icmp eq i16 %82, 0
  %84 = select i1 %83, i16* %76, i16* %81
  %85 = select i1 %83, i32 1, i32 2
  br label %86

86:                                               ; preds = %71, %80
  %87 = phi i16* [ %84, %80 ], [ null, %71 ]
  %88 = phi i32 [ %85, %80 ], [ 0, %71 ]
  store i16* %87, i16** %74, align 8
  store i32 %88, i32* %75, align 8
  %89 = icmp slt i32 %1, %3
  br i1 %89, label %90, label %189

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %92 = sext i32 %1 to i64
  br label %93

93:                                               ; preds = %174, %90
  %94 = phi i64 [ %92, %90 ], [ %176, %174 ]
  %95 = phi i1 [ %72, %90 ], [ false, %174 ]
  %96 = phi i16 [ %63, %90 ], [ %100, %174 ]
  %97 = phi i16 [ %61, %90 ], [ %96, %174 ]
  %98 = phi i32 [ -1, %90 ], [ %175, %174 ]
  %99 = getelementptr inbounds i16, i16* %2, i64 %94
  %100 = load i16, i16* %99, align 2
  %101 = trunc i64 %94 to i32
  switch i16 %100, label %102 [
    i16 32, label %181
    i16 9, label %181
    i16 10, label %181
    i16 12288, label %181
  ]

102:                                              ; preds = %93
  %103 = zext i16 %96 to i64
  %104 = icmp eq i16 %96, 45
  %105 = add i16 %100, -48
  %106 = icmp ult i16 %105, 10
  %107 = and i1 %104, %106
  br i1 %107, label %108, label %111

108:                                              ; preds = %102
  %109 = add i16 %97, -48
  %110 = icmp ult i16 %109, 10
  br i1 %110, label %183, label %130

111:                                              ; preds = %102
  %112 = add i16 %96, -33
  %113 = icmp ult i16 %112, 95
  %114 = add i16 %100, -33
  %115 = icmp ult i16 %114, 95
  %116 = and i1 %113, %115
  br i1 %116, label %117, label %134

117:                                              ; preds = %111
  %118 = zext i16 %100 to i32
  %119 = add nsw i64 %103, -33
  %120 = add nsw i32 %118, -33
  %121 = sdiv i32 %120, 8
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %119, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = and i32 %120, 7
  %127 = shl i32 1, %126
  %128 = and i32 %127, %125
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %174, label %179

130:                                              ; preds = %108
  %131 = or i16 %97, 32
  %132 = add i16 %131, -97
  %133 = icmp ult i16 %132, 26
  br i1 %133, label %187, label %174

134:                                              ; preds = %111
  %135 = icmp ugt i16 %100, 127
  %136 = icmp ne i16 %100, 160
  %137 = and i1 %135, %136
  br i1 %137, label %142, label %138

138:                                              ; preds = %134
  %139 = icmp ugt i16 %96, 127
  %140 = icmp ne i16 %96, 160
  %141 = and i1 %139, %140
  br i1 %141, label %142, label %174

142:                                              ; preds = %138, %134
  %143 = sext i32 %98 to i64
  %144 = icmp sgt i64 %94, %143
  br i1 %144, label %145, label %170

145:                                              ; preds = %142
  %146 = load i32, i32* %75, align 8
  %147 = or i32 %146, %101
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %170, label %149

149:                                              ; preds = %145
  %150 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %151 = icmp eq %"class.icu_69::BreakIterator"* %150, null
  br i1 %151, label %170, label %152

152:                                              ; preds = %149
  %153 = load i32, i32* %75, align 8
  %154 = trunc i64 %94 to i32
  %155 = add i32 %154, -1
  %156 = add i32 %155, %153
  %157 = load i32, i32* %91, align 8
  %158 = sub i32 %156, %157
  %159 = bitcast %"class.icu_69::BreakIterator"* %150 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %160 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %159, align 8
  %161 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %160, i64 15
  %162 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %161, align 8
  %163 = call i32 %162(%"class.icu_69::BreakIterator"* nonnull %150, i32 %158) #9
  %164 = icmp sgt i32 %163, -1
  br i1 %164, label %165, label %170

165:                                              ; preds = %152
  %166 = load i32, i32* %91, align 8
  %167 = add i32 %166, %163
  %168 = load i32, i32* %75, align 8
  %169 = sub i32 %167, %168
  br label %170

170:                                              ; preds = %165, %152, %149, %145, %142
  %171 = phi i32 [ %98, %142 ], [ %98, %145 ], [ %169, %165 ], [ %163, %152 ], [ %98, %149 ]
  %172 = icmp ne i32 %171, %101
  %173 = or i1 %95, %172
  br i1 %173, label %174, label %185

174:                                              ; preds = %117, %130, %170, %138
  %175 = phi i32 [ %171, %170 ], [ %98, %138 ], [ %98, %130 ], [ %98, %117 ]
  %176 = add nsw i64 %94, 1
  %177 = trunc i64 %176 to i32
  %178 = icmp eq i32 %177, %3
  br i1 %178, label %189, label %93

179:                                              ; preds = %117
  %180 = trunc i64 %94 to i32
  br label %189

181:                                              ; preds = %93, %93, %93, %93
  %182 = trunc i64 %94 to i32
  br label %189

183:                                              ; preds = %108
  %184 = trunc i64 %94 to i32
  br label %189

185:                                              ; preds = %170
  %186 = trunc i64 %94 to i32
  br label %189

187:                                              ; preds = %130
  %188 = trunc i64 %94 to i32
  br label %189

189:                                              ; preds = %174, %179, %181, %183, %185, %187, %86
  %190 = phi i32 [ %3, %86 ], [ %180, %179 ], [ %182, %181 ], [ %184, %183 ], [ %186, %185 ], [ %188, %187 ], [ %3, %174 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #9
  ret i32 %190
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE1EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i16*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %2, i64 %46
  %48 = load i16, i16* %47, align 2
  br label %53

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %51 = load i16, i16* %50, align 8
  %52 = icmp eq i32 %1, 1
  br i1 %52, label %53, label %58

53:                                               ; preds = %44, %49
  %54 = phi i16 [ %48, %44 ], [ %51, %49 ]
  %55 = add nsw i32 %1, -1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %2, i64 %56
  br label %60

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i16 [ %54, %53 ], [ %51, %58 ]
  %62 = phi i16* [ %57, %53 ], [ %59, %58 ]
  %63 = load i16, i16* %62, align 2
  %64 = add i16 %63, -9
  %65 = icmp ult i16 %64, 24
  br i1 %65, label %66, label %71

66:                                               ; preds = %60
  %67 = zext i16 %64 to i24
  %68 = lshr i24 -8388605, %67
  %69 = and i24 %68, 1
  %70 = icmp ne i24 %69, 0
  br label %71

71:                                               ; preds = %60, %66
  %72 = phi i1 [ %70, %66 ], [ false, %60 ]
  %73 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #9
  %74 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %75 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %76 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %77 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 16, i1 false)
  %78 = load i16, i16* %76, align 2
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %82 = load i16, i16* %81, align 8
  %83 = icmp eq i16 %82, 0
  %84 = select i1 %83, i16* %76, i16* %81
  %85 = select i1 %83, i32 1, i32 2
  br label %86

86:                                               ; preds = %71, %80
  %87 = phi i16* [ %84, %80 ], [ null, %71 ]
  %88 = phi i32 [ %85, %80 ], [ 0, %71 ]
  store i16* %87, i16** %74, align 8
  store i32 %88, i32* %75, align 8
  %89 = icmp slt i32 %1, %3
  br i1 %89, label %90, label %191

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %92 = sext i32 %1 to i64
  br label %93

93:                                               ; preds = %175, %90
  %94 = phi i64 [ %92, %90 ], [ %178, %175 ]
  %95 = phi i1 [ %72, %90 ], [ %176, %175 ]
  %96 = phi i16 [ %63, %90 ], [ %100, %175 ]
  %97 = phi i16 [ %61, %90 ], [ %96, %175 ]
  %98 = phi i32 [ -1, %90 ], [ %177, %175 ]
  %99 = getelementptr inbounds i16, i16* %2, i64 %94
  %100 = load i16, i16* %99, align 2
  %101 = trunc i64 %94 to i32
  switch i16 %100, label %103 [
    i16 32, label %102
    i16 9, label %102
    i16 10, label %102
  ]

102:                                              ; preds = %93, %93, %93
  br i1 %95, label %175, label %189

103:                                              ; preds = %93
  %104 = zext i16 %96 to i64
  %105 = icmp eq i16 %96, 45
  %106 = add i16 %100, -48
  %107 = icmp ult i16 %106, 10
  %108 = and i1 %105, %107
  br i1 %108, label %109, label %112

109:                                              ; preds = %103
  %110 = add i16 %97, -48
  %111 = icmp ult i16 %110, 10
  br i1 %111, label %183, label %131

112:                                              ; preds = %103
  %113 = add i16 %96, -33
  %114 = icmp ult i16 %113, 95
  %115 = add i16 %100, -33
  %116 = icmp ult i16 %115, 95
  %117 = and i1 %114, %116
  br i1 %117, label %118, label %135

118:                                              ; preds = %112
  %119 = zext i16 %100 to i32
  %120 = add nsw i64 %104, -33
  %121 = add nsw i32 %119, -33
  %122 = sdiv i32 %121, 8
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %120, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = and i32 %121, 7
  %128 = shl i32 1, %127
  %129 = and i32 %128, %126
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %175, label %181

131:                                              ; preds = %109
  %132 = or i16 %97, 32
  %133 = add i16 %132, -97
  %134 = icmp ult i16 %133, 26
  br i1 %134, label %187, label %175

135:                                              ; preds = %112
  %136 = icmp ugt i16 %100, 127
  %137 = icmp ne i16 %100, 160
  %138 = and i1 %136, %137
  br i1 %138, label %143, label %139

139:                                              ; preds = %135
  %140 = icmp ugt i16 %96, 127
  %141 = icmp ne i16 %96, 160
  %142 = and i1 %140, %141
  br i1 %142, label %143, label %175

143:                                              ; preds = %139, %135
  %144 = sext i32 %98 to i64
  %145 = icmp sgt i64 %94, %144
  br i1 %145, label %146, label %171

146:                                              ; preds = %143
  %147 = load i32, i32* %75, align 8
  %148 = or i32 %147, %101
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %171, label %150

150:                                              ; preds = %146
  %151 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %152 = icmp eq %"class.icu_69::BreakIterator"* %151, null
  br i1 %152, label %171, label %153

153:                                              ; preds = %150
  %154 = load i32, i32* %75, align 8
  %155 = trunc i64 %94 to i32
  %156 = add i32 %155, -1
  %157 = add i32 %156, %154
  %158 = load i32, i32* %91, align 8
  %159 = sub i32 %157, %158
  %160 = bitcast %"class.icu_69::BreakIterator"* %151 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %161 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %160, align 8
  %162 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %161, i64 15
  %163 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %162, align 8
  %164 = call i32 %163(%"class.icu_69::BreakIterator"* nonnull %151, i32 %159) #9
  %165 = icmp sgt i32 %164, -1
  br i1 %165, label %166, label %171

166:                                              ; preds = %153
  %167 = load i32, i32* %91, align 8
  %168 = add i32 %167, %164
  %169 = load i32, i32* %75, align 8
  %170 = sub i32 %168, %169
  br label %171

171:                                              ; preds = %166, %153, %150, %146, %143
  %172 = phi i32 [ %98, %143 ], [ %98, %146 ], [ %170, %166 ], [ %164, %153 ], [ %98, %150 ]
  %173 = icmp ne i32 %172, %101
  %174 = or i1 %95, %173
  br i1 %174, label %175, label %185

175:                                              ; preds = %118, %131, %171, %139, %102
  %176 = phi i1 [ true, %102 ], [ false, %171 ], [ false, %139 ], [ false, %131 ], [ false, %118 ]
  %177 = phi i32 [ %98, %102 ], [ %172, %171 ], [ %98, %139 ], [ %98, %131 ], [ %98, %118 ]
  %178 = add nsw i64 %94, 1
  %179 = trunc i64 %178 to i32
  %180 = icmp eq i32 %179, %3
  br i1 %180, label %191, label %93

181:                                              ; preds = %118
  %182 = trunc i64 %94 to i32
  br label %191

183:                                              ; preds = %109
  %184 = trunc i64 %94 to i32
  br label %191

185:                                              ; preds = %171
  %186 = trunc i64 %94 to i32
  br label %191

187:                                              ; preds = %131
  %188 = trunc i64 %94 to i32
  br label %191

189:                                              ; preds = %102
  %190 = trunc i64 %94 to i32
  br label %191

191:                                              ; preds = %175, %181, %183, %185, %187, %189, %86
  %192 = phi i32 [ %3, %86 ], [ %182, %181 ], [ %184, %183 ], [ %186, %185 ], [ %188, %187 ], [ %190, %189 ], [ %3, %175 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #9
  ret i32 %192
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE2EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i16*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %2, i64 %46
  %48 = load i16, i16* %47, align 2
  br label %53

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %51 = load i16, i16* %50, align 8
  %52 = icmp eq i32 %1, 1
  br i1 %52, label %53, label %58

53:                                               ; preds = %44, %49
  %54 = phi i16 [ %48, %44 ], [ %51, %49 ]
  %55 = add nsw i32 %1, -1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %2, i64 %56
  br label %60

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i16 [ %54, %53 ], [ %51, %58 ]
  %62 = phi i16* [ %57, %53 ], [ %59, %58 ]
  %63 = load i16, i16* %62, align 2
  %64 = add i16 %63, -9
  %65 = icmp ult i16 %64, 24
  br i1 %65, label %66, label %71

66:                                               ; preds = %60
  %67 = zext i16 %64 to i24
  %68 = lshr i24 -8388605, %67
  %69 = and i24 %68, 1
  %70 = icmp ne i24 %69, 0
  br label %71

71:                                               ; preds = %60, %66
  %72 = phi i1 [ %70, %66 ], [ false, %60 ]
  %73 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #9
  %74 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %75 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %76 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %77 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 16, i1 false)
  %78 = load i16, i16* %76, align 2
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %82 = load i16, i16* %81, align 8
  %83 = icmp eq i16 %82, 0
  %84 = select i1 %83, i16* %76, i16* %81
  %85 = select i1 %83, i32 1, i32 2
  br label %86

86:                                               ; preds = %71, %80
  %87 = phi i16* [ %84, %80 ], [ null, %71 ]
  %88 = phi i32 [ %85, %80 ], [ 0, %71 ]
  store i16* %87, i16** %74, align 8
  store i32 %88, i32* %75, align 8
  %89 = icmp slt i32 %1, %3
  br i1 %89, label %90, label %190

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %92 = sext i32 %1 to i64
  br label %93

93:                                               ; preds = %174, %90
  %94 = phi i64 [ %92, %90 ], [ %177, %174 ]
  %95 = phi i1 [ %72, %90 ], [ %175, %174 ]
  %96 = phi i16 [ %63, %90 ], [ %100, %174 ]
  %97 = phi i16 [ %61, %90 ], [ %96, %174 ]
  %98 = phi i32 [ -1, %90 ], [ %176, %174 ]
  %99 = getelementptr inbounds i16, i16* %2, i64 %94
  %100 = load i16, i16* %99, align 2
  switch i16 %100, label %101 [
    i16 32, label %174
    i16 9, label %174
    i16 10, label %174
  ]

101:                                              ; preds = %93
  %102 = trunc i64 %94 to i32
  br i1 %95, label %188, label %103

103:                                              ; preds = %101
  %104 = zext i16 %96 to i64
  %105 = icmp eq i16 %96, 45
  %106 = add i16 %100, -48
  %107 = icmp ult i16 %106, 10
  %108 = and i1 %105, %107
  br i1 %108, label %109, label %112

109:                                              ; preds = %103
  %110 = add i16 %97, -48
  %111 = icmp ult i16 %110, 10
  br i1 %111, label %182, label %131

112:                                              ; preds = %103
  %113 = add i16 %96, -33
  %114 = icmp ult i16 %113, 95
  %115 = add i16 %100, -33
  %116 = icmp ult i16 %115, 95
  %117 = and i1 %114, %116
  br i1 %117, label %118, label %135

118:                                              ; preds = %112
  %119 = zext i16 %100 to i32
  %120 = add nsw i64 %104, -33
  %121 = add nsw i32 %119, -33
  %122 = sdiv i32 %121, 8
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %120, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = and i32 %121, 7
  %128 = shl i32 1, %127
  %129 = and i32 %128, %126
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %174, label %180

131:                                              ; preds = %109
  %132 = or i16 %97, 32
  %133 = add i16 %132, -97
  %134 = icmp ult i16 %133, 26
  br i1 %134, label %186, label %174

135:                                              ; preds = %112
  %136 = icmp ugt i16 %100, 127
  %137 = icmp ne i16 %100, 160
  %138 = and i1 %136, %137
  br i1 %138, label %143, label %139

139:                                              ; preds = %135
  %140 = icmp ugt i16 %96, 127
  %141 = icmp ne i16 %96, 160
  %142 = and i1 %140, %141
  br i1 %142, label %143, label %174

143:                                              ; preds = %139, %135
  %144 = sext i32 %98 to i64
  %145 = icmp sgt i64 %94, %144
  br i1 %145, label %146, label %171

146:                                              ; preds = %143
  %147 = load i32, i32* %75, align 8
  %148 = or i32 %147, %102
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %171, label %150

150:                                              ; preds = %146
  %151 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %152 = icmp eq %"class.icu_69::BreakIterator"* %151, null
  br i1 %152, label %171, label %153

153:                                              ; preds = %150
  %154 = load i32, i32* %75, align 8
  %155 = trunc i64 %94 to i32
  %156 = add i32 %155, -1
  %157 = add i32 %156, %154
  %158 = load i32, i32* %91, align 8
  %159 = sub i32 %157, %158
  %160 = bitcast %"class.icu_69::BreakIterator"* %151 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %161 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %160, align 8
  %162 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %161, i64 15
  %163 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %162, align 8
  %164 = call i32 %163(%"class.icu_69::BreakIterator"* nonnull %151, i32 %159) #9
  %165 = icmp sgt i32 %164, -1
  br i1 %165, label %166, label %171

166:                                              ; preds = %153
  %167 = load i32, i32* %91, align 8
  %168 = add i32 %167, %164
  %169 = load i32, i32* %75, align 8
  %170 = sub i32 %168, %169
  br label %171

171:                                              ; preds = %166, %153, %150, %146, %143
  %172 = phi i32 [ %98, %143 ], [ %98, %146 ], [ %170, %166 ], [ %164, %153 ], [ %98, %150 ]
  %173 = icmp eq i32 %172, %102
  br i1 %173, label %184, label %174

174:                                              ; preds = %118, %131, %93, %93, %93, %139, %171
  %175 = phi i1 [ false, %171 ], [ false, %139 ], [ true, %93 ], [ true, %93 ], [ true, %93 ], [ false, %131 ], [ false, %118 ]
  %176 = phi i32 [ %172, %171 ], [ %98, %139 ], [ %98, %93 ], [ %98, %93 ], [ %98, %93 ], [ %98, %131 ], [ %98, %118 ]
  %177 = add nsw i64 %94, 1
  %178 = trunc i64 %177 to i32
  %179 = icmp eq i32 %178, %3
  br i1 %179, label %190, label %93

180:                                              ; preds = %118
  %181 = trunc i64 %94 to i32
  br label %190

182:                                              ; preds = %109
  %183 = trunc i64 %94 to i32
  br label %190

184:                                              ; preds = %171
  %185 = trunc i64 %94 to i32
  br label %190

186:                                              ; preds = %131
  %187 = trunc i64 %94 to i32
  br label %190

188:                                              ; preds = %101
  %189 = trunc i64 %94 to i32
  br label %190

190:                                              ; preds = %174, %180, %182, %184, %186, %188, %86
  %191 = phi i32 [ %3, %86 ], [ %181, %180 ], [ %183, %182 ], [ %185, %184 ], [ %187, %186 ], [ %189, %188 ], [ %3, %174 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #9
  ret i32 %191
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE0ELNS_14BreakSpaceTypeE3EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i16*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %2, i64 %46
  %48 = load i16, i16* %47, align 2
  br label %53

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %51 = load i16, i16* %50, align 8
  %52 = icmp eq i32 %1, 1
  br i1 %52, label %53, label %58

53:                                               ; preds = %44, %49
  %54 = phi i16 [ %48, %44 ], [ %51, %49 ]
  %55 = add nsw i32 %1, -1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %2, i64 %56
  br label %60

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i16 [ %54, %53 ], [ %51, %58 ]
  %62 = phi i16* [ %57, %53 ], [ %59, %58 ]
  %63 = load i16, i16* %62, align 2
  %64 = add i16 %63, -9
  %65 = icmp ult i16 %64, 24
  br i1 %65, label %66, label %71

66:                                               ; preds = %60
  %67 = zext i16 %64 to i24
  %68 = lshr i24 -8388605, %67
  %69 = and i24 %68, 1
  %70 = icmp ne i24 %69, 0
  br label %71

71:                                               ; preds = %60, %66
  %72 = phi i1 [ %70, %66 ], [ false, %60 ]
  %73 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #9
  %74 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %75 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %76 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %77 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 16, i1 false)
  %78 = load i16, i16* %76, align 2
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %82 = load i16, i16* %81, align 8
  %83 = icmp eq i16 %82, 0
  %84 = select i1 %83, i16* %76, i16* %81
  %85 = select i1 %83, i32 1, i32 2
  br label %86

86:                                               ; preds = %71, %80
  %87 = phi i16* [ %84, %80 ], [ null, %71 ]
  %88 = phi i32 [ %85, %80 ], [ 0, %71 ]
  store i16* %87, i16** %74, align 8
  store i32 %88, i32* %75, align 8
  %89 = icmp slt i32 %1, %3
  br i1 %89, label %90, label %210

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %92 = sext i32 %1 to i64
  %93 = sext i32 %3 to i64
  br label %94

94:                                               ; preds = %192, %90
  %95 = phi i64 [ %92, %90 ], [ %194, %192 ]
  %96 = phi i32 [ %1, %90 ], [ %195, %192 ]
  %97 = phi i1 [ %72, %90 ], [ %111, %192 ]
  %98 = phi i16 [ %63, %90 ], [ %102, %192 ]
  %99 = phi i16 [ %61, %90 ], [ %98, %192 ]
  %100 = phi i32 [ -1, %90 ], [ %193, %192 ]
  %101 = getelementptr inbounds i16, i16* %2, i64 %95
  %102 = load i16, i16* %101, align 2
  %103 = add i16 %102, -9
  %104 = icmp ult i16 %103, 24
  br i1 %104, label %105, label %110

105:                                              ; preds = %94
  %106 = zext i16 %103 to i24
  %107 = lshr i24 -8388605, %106
  %108 = and i24 %107, 1
  %109 = icmp ne i24 %108, 0
  br label %110

110:                                              ; preds = %94, %105
  %111 = phi i1 [ %109, %105 ], [ false, %94 ]
  %112 = icmp eq i16 %98, 12288
  %113 = or i1 %97, %112
  %114 = trunc i64 %95 to i32
  br i1 %113, label %208, label %115

115:                                              ; preds = %110
  %116 = icmp eq i16 %102, 12288
  %117 = or i1 %116, %111
  %118 = add nsw i64 %95, 1
  %119 = icmp slt i64 %118, %93
  %120 = and i1 %117, %119
  br i1 %120, label %206, label %121

121:                                              ; preds = %115
  %122 = zext i16 %98 to i64
  %123 = icmp eq i16 %98, 45
  %124 = add i16 %102, -48
  %125 = icmp ult i16 %124, 10
  %126 = and i1 %123, %125
  br i1 %126, label %127, label %130

127:                                              ; preds = %121
  %128 = add i16 %99, -48
  %129 = icmp ult i16 %128, 10
  br i1 %129, label %200, label %149

130:                                              ; preds = %121
  %131 = add i16 %98, -33
  %132 = icmp ult i16 %131, 95
  %133 = add i16 %102, -33
  %134 = icmp ult i16 %133, 95
  %135 = and i1 %132, %134
  br i1 %135, label %136, label %153

136:                                              ; preds = %130
  %137 = zext i16 %102 to i32
  %138 = add nsw i64 %122, -33
  %139 = add nsw i32 %137, -33
  %140 = sdiv i32 %139, 8
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %138, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = and i32 %139, 7
  %146 = shl i32 1, %145
  %147 = and i32 %146, %144
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %192, label %198

149:                                              ; preds = %127
  %150 = or i16 %99, 32
  %151 = add i16 %150, -97
  %152 = icmp ult i16 %151, 26
  br i1 %152, label %204, label %192

153:                                              ; preds = %130
  %154 = icmp ugt i16 %102, 127
  %155 = icmp ne i16 %102, 160
  %156 = and i1 %154, %155
  br i1 %156, label %161, label %157

157:                                              ; preds = %153
  %158 = icmp ugt i16 %98, 127
  %159 = icmp ne i16 %98, 160
  %160 = and i1 %158, %159
  br i1 %160, label %161, label %192

161:                                              ; preds = %157, %153
  %162 = sext i32 %100 to i64
  %163 = icmp sgt i64 %95, %162
  br i1 %163, label %164, label %189

164:                                              ; preds = %161
  %165 = load i32, i32* %75, align 8
  %166 = or i32 %165, %114
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %189, label %168

168:                                              ; preds = %164
  %169 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %170 = icmp eq %"class.icu_69::BreakIterator"* %169, null
  br i1 %170, label %189, label %171

171:                                              ; preds = %168
  %172 = load i32, i32* %75, align 8
  %173 = trunc i64 %95 to i32
  %174 = add i32 %173, -1
  %175 = add i32 %174, %172
  %176 = load i32, i32* %91, align 8
  %177 = sub i32 %175, %176
  %178 = bitcast %"class.icu_69::BreakIterator"* %169 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %179 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %178, align 8
  %180 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %179, i64 15
  %181 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %180, align 8
  %182 = call i32 %181(%"class.icu_69::BreakIterator"* nonnull %169, i32 %177) #9
  %183 = icmp sgt i32 %182, -1
  br i1 %183, label %184, label %189

184:                                              ; preds = %171
  %185 = load i32, i32* %91, align 8
  %186 = add i32 %185, %182
  %187 = load i32, i32* %75, align 8
  %188 = sub i32 %186, %187
  br label %189

189:                                              ; preds = %184, %171, %168, %164, %161
  %190 = phi i32 [ %100, %161 ], [ %100, %164 ], [ %188, %184 ], [ %182, %171 ], [ %100, %168 ]
  %191 = icmp eq i32 %190, %114
  br i1 %191, label %202, label %192

192:                                              ; preds = %136, %149, %157, %189
  %193 = phi i32 [ %190, %189 ], [ %100, %157 ], [ %100, %149 ], [ %100, %136 ]
  %194 = add nsw i64 %95, 1
  %195 = add nsw i32 %96, 1
  %196 = trunc i64 %194 to i32
  %197 = icmp eq i32 %196, %3
  br i1 %197, label %210, label %94

198:                                              ; preds = %136
  %199 = trunc i64 %95 to i32
  br label %210

200:                                              ; preds = %127
  %201 = trunc i64 %95 to i32
  br label %210

202:                                              ; preds = %189
  %203 = trunc i64 %95 to i32
  br label %210

204:                                              ; preds = %149
  %205 = trunc i64 %95 to i32
  br label %210

206:                                              ; preds = %115
  %207 = add nsw i32 %96, 1
  br label %210

208:                                              ; preds = %110
  %209 = trunc i64 %95 to i32
  br label %210

210:                                              ; preds = %192, %198, %200, %202, %204, %206, %208, %86
  %211 = phi i32 [ %3, %86 ], [ %199, %198 ], [ %201, %200 ], [ %203, %202 ], [ %205, %204 ], [ %207, %206 ], [ %209, %208 ], [ %3, %192 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #9
  ret i32 %211
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i8*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  br label %54

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %52 = load i16, i16* %51, align 8
  %53 = icmp eq i32 %1, 1
  br i1 %53, label %54, label %61

54:                                               ; preds = %44, %50
  %55 = phi i16 [ %49, %44 ], [ %52, %50 ]
  %56 = add nsw i32 %1, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %2, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  br label %64

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %63 = load i16, i16* %62, align 2
  br label %64

64:                                               ; preds = %61, %54
  %65 = phi i16 [ %55, %54 ], [ %52, %61 ]
  %66 = phi i16 [ %60, %54 ], [ %63, %61 ]
  switch i16 %66, label %67 [
    i16 32, label %68
    i16 9, label %68
    i16 10, label %68
    i16 43, label %84
  ]

67:                                               ; preds = %64
  br label %68

68:                                               ; preds = %64, %64, %64, %67
  %69 = phi i1 [ true, %64 ], [ true, %64 ], [ true, %64 ], [ false, %67 ]
  %70 = zext i16 %66 to i32
  %71 = zext i16 %65 to i32
  %72 = and i32 %71, 64512
  %73 = icmp eq i32 %72, 55296
  %74 = and i32 %70, 64512
  %75 = icmp eq i32 %74, 56320
  %76 = and i1 %73, %75
  br i1 %76, label %77, label %81

77:                                               ; preds = %68
  %78 = shl nuw nsw i32 %71, 10
  %79 = add nuw nsw i32 %70, -56613888
  %80 = add nsw i32 %79, %78
  br label %81

81:                                               ; preds = %77, %68
  %82 = phi i32 [ %80, %77 ], [ %70, %68 ]
  %83 = call i32 @u_getIntPropertyValue_69(i32 %82, i32 4104) #9
  br label %84

84:                                               ; preds = %64, %81
  %85 = phi i1 [ %69, %81 ], [ false, %64 ]
  %86 = phi i32 [ %83, %81 ], [ 2, %64 ]
  %87 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #9
  %88 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %89 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %90 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %91 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 16, i1 false)
  %92 = load i16, i16* %90, align 2
  %93 = icmp eq i16 %92, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %96 = load i16, i16* %95, align 8
  %97 = icmp eq i16 %96, 0
  %98 = select i1 %97, i16* %90, i16* %95
  %99 = select i1 %97, i32 1, i32 2
  br label %100

100:                                              ; preds = %84, %94
  %101 = phi i16* [ %98, %94 ], [ null, %84 ]
  %102 = phi i32 [ %99, %94 ], [ 0, %84 ]
  store i16* %101, i16** %88, align 8
  store i32 %102, i32* %89, align 8
  %103 = icmp slt i32 %1, %3
  br i1 %103, label %104, label %231

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %106 = sext i32 %1 to i64
  br label %107

107:                                              ; preds = %214, %104
  %108 = phi i64 [ %106, %104 ], [ %216, %214 ]
  %109 = phi i32 [ %86, %104 ], [ %174, %214 ]
  %110 = phi i1 [ %85, %104 ], [ false, %214 ]
  %111 = phi i16 [ %66, %104 ], [ %116, %214 ]
  %112 = phi i16 [ %65, %104 ], [ %111, %214 ]
  %113 = phi i32 [ -1, %104 ], [ %215, %214 ]
  %114 = getelementptr inbounds i8, i8* %2, i64 %108
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i16
  %117 = trunc i64 %108 to i32
  switch i8 %115, label %118 [
    i8 32, label %225
    i8 9, label %225
    i8 10, label %225
  ]

118:                                              ; preds = %107
  %119 = zext i16 %111 to i64
  %120 = icmp eq i16 %111, 45
  %121 = add nsw i16 %116, -48
  %122 = icmp ult i16 %121, 10
  %123 = and i1 %120, %122
  br i1 %123, label %124, label %127

124:                                              ; preds = %118
  %125 = add i16 %112, -48
  %126 = icmp ult i16 %125, 10
  br i1 %126, label %223, label %146

127:                                              ; preds = %118
  %128 = add i16 %111, -33
  %129 = icmp ult i16 %128, 95
  %130 = add nsw i16 %116, -33
  %131 = icmp ult i16 %130, 95
  %132 = and i1 %129, %131
  br i1 %132, label %133, label %150

133:                                              ; preds = %127
  %134 = zext i8 %115 to i32
  %135 = add nsw i64 %119, -33
  %136 = add nsw i32 %134, -33
  %137 = sdiv i32 %136, 8
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %135, i64 %138
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = and i32 %136, 7
  %143 = shl i32 1, %142
  %144 = and i32 %143, %141
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %150, label %219

146:                                              ; preds = %124
  %147 = or i16 %112, 32
  %148 = add i16 %147, -97
  %149 = icmp ult i16 %148, 26
  br i1 %149, label %229, label %152

150:                                              ; preds = %133, %127
  %151 = icmp eq i8 %115, 43
  br i1 %151, label %155, label %152

152:                                              ; preds = %146, %150
  %153 = zext i8 %115 to i32
  %154 = call i32 @u_getIntPropertyValue_69(i32 %153, i32 4104) #9
  br label %155

155:                                              ; preds = %150, %152
  %156 = phi i32 [ %154, %152 ], [ 2, %150 ]
  %157 = icmp ult i32 %156, 40
  %158 = icmp ult i32 %109, 40
  %159 = and i1 %158, %157
  br i1 %159, label %160, label %172

160:                                              ; preds = %155
  %161 = zext i32 %109 to i64
  %162 = lshr i32 %156, 3
  %163 = and i32 %162, 31
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds [40 x [6 x i8]], [40 x [6 x i8]]* @_ZN5blinkL28kBreakAllLineBreakClassTableE, i64 0, i64 %161, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i32
  %168 = and i32 %156, 7
  %169 = shl i32 1, %168
  %170 = and i32 %169, %167
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %221

172:                                              ; preds = %160, %155
  %173 = icmp eq i32 %156, 9
  %174 = select i1 %173, i32 %109, i32 %156
  %175 = icmp slt i8 %115, 0
  %176 = icmp ne i8 %115, -96
  %177 = and i1 %175, %176
  br i1 %177, label %182, label %178

178:                                              ; preds = %172
  %179 = icmp ugt i16 %111, 127
  %180 = icmp ne i16 %111, 160
  %181 = and i1 %179, %180
  br i1 %181, label %182, label %214

182:                                              ; preds = %178, %172
  %183 = sext i32 %113 to i64
  %184 = icmp sgt i64 %108, %183
  br i1 %184, label %185, label %210

185:                                              ; preds = %182
  %186 = load i32, i32* %89, align 8
  %187 = or i32 %186, %117
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %210, label %189

189:                                              ; preds = %185
  %190 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %191 = icmp eq %"class.icu_69::BreakIterator"* %190, null
  br i1 %191, label %210, label %192

192:                                              ; preds = %189
  %193 = load i32, i32* %89, align 8
  %194 = trunc i64 %108 to i32
  %195 = add i32 %194, -1
  %196 = add i32 %195, %193
  %197 = load i32, i32* %105, align 8
  %198 = sub i32 %196, %197
  %199 = bitcast %"class.icu_69::BreakIterator"* %190 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %200 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %199, align 8
  %201 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %200, i64 15
  %202 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %201, align 8
  %203 = call i32 %202(%"class.icu_69::BreakIterator"* nonnull %190, i32 %198) #9
  %204 = icmp sgt i32 %203, -1
  br i1 %204, label %205, label %210

205:                                              ; preds = %192
  %206 = load i32, i32* %105, align 8
  %207 = add i32 %206, %203
  %208 = load i32, i32* %89, align 8
  %209 = sub i32 %207, %208
  br label %210

210:                                              ; preds = %205, %192, %189, %185, %182
  %211 = phi i32 [ %113, %182 ], [ %113, %185 ], [ %209, %205 ], [ %203, %192 ], [ %113, %189 ]
  %212 = icmp ne i32 %211, %117
  %213 = or i1 %110, %212
  br i1 %213, label %214, label %227

214:                                              ; preds = %210, %178
  %215 = phi i32 [ %211, %210 ], [ %113, %178 ]
  %216 = add nsw i64 %108, 1
  %217 = trunc i64 %216 to i32
  %218 = icmp eq i32 %217, %3
  br i1 %218, label %231, label %107

219:                                              ; preds = %133
  %220 = trunc i64 %108 to i32
  br label %231

221:                                              ; preds = %160
  %222 = trunc i64 %108 to i32
  br label %231

223:                                              ; preds = %124
  %224 = trunc i64 %108 to i32
  br label %231

225:                                              ; preds = %107, %107, %107
  %226 = trunc i64 %108 to i32
  br label %231

227:                                              ; preds = %210
  %228 = trunc i64 %108 to i32
  br label %231

229:                                              ; preds = %146
  %230 = trunc i64 %108 to i32
  br label %231

231:                                              ; preds = %214, %219, %221, %223, %225, %227, %229, %100
  %232 = phi i32 [ %3, %100 ], [ %220, %219 ], [ %222, %221 ], [ %224, %223 ], [ %226, %225 ], [ %228, %227 ], [ %230, %229 ], [ %3, %214 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #9
  ret i32 %232
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE1EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i8*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  br label %54

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %52 = load i16, i16* %51, align 8
  %53 = icmp eq i32 %1, 1
  br i1 %53, label %54, label %61

54:                                               ; preds = %44, %50
  %55 = phi i16 [ %49, %44 ], [ %52, %50 ]
  %56 = add nsw i32 %1, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %2, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  br label %64

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %63 = load i16, i16* %62, align 2
  br label %64

64:                                               ; preds = %61, %54
  %65 = phi i16 [ %55, %54 ], [ %52, %61 ]
  %66 = phi i16 [ %60, %54 ], [ %63, %61 ]
  switch i16 %66, label %67 [
    i16 32, label %68
    i16 9, label %68
    i16 10, label %68
    i16 43, label %84
  ]

67:                                               ; preds = %64
  br label %68

68:                                               ; preds = %64, %64, %64, %67
  %69 = phi i1 [ true, %64 ], [ true, %64 ], [ true, %64 ], [ false, %67 ]
  %70 = zext i16 %66 to i32
  %71 = zext i16 %65 to i32
  %72 = and i32 %71, 64512
  %73 = icmp eq i32 %72, 55296
  %74 = and i32 %70, 64512
  %75 = icmp eq i32 %74, 56320
  %76 = and i1 %73, %75
  br i1 %76, label %77, label %81

77:                                               ; preds = %68
  %78 = shl nuw nsw i32 %71, 10
  %79 = add nuw nsw i32 %70, -56613888
  %80 = add nsw i32 %79, %78
  br label %81

81:                                               ; preds = %77, %68
  %82 = phi i32 [ %80, %77 ], [ %70, %68 ]
  %83 = call i32 @u_getIntPropertyValue_69(i32 %82, i32 4104) #9
  br label %84

84:                                               ; preds = %64, %81
  %85 = phi i1 [ %69, %81 ], [ false, %64 ]
  %86 = phi i32 [ %83, %81 ], [ 2, %64 ]
  %87 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #9
  %88 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %89 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %90 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %91 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 16, i1 false)
  %92 = load i16, i16* %90, align 2
  %93 = icmp eq i16 %92, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %96 = load i16, i16* %95, align 8
  %97 = icmp eq i16 %96, 0
  %98 = select i1 %97, i16* %90, i16* %95
  %99 = select i1 %97, i32 1, i32 2
  br label %100

100:                                              ; preds = %84, %94
  %101 = phi i16* [ %98, %94 ], [ null, %84 ]
  %102 = phi i32 [ %99, %94 ], [ 0, %84 ]
  store i16* %101, i16** %88, align 8
  store i32 %102, i32* %89, align 8
  %103 = icmp slt i32 %1, %3
  br i1 %103, label %104, label %234

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %106 = sext i32 %1 to i64
  br label %107

107:                                              ; preds = %215, %104
  %108 = phi i64 [ %106, %104 ], [ %219, %215 ]
  %109 = phi i32 [ %86, %104 ], [ %218, %215 ]
  %110 = phi i1 [ %85, %104 ], [ %216, %215 ]
  %111 = phi i16 [ %66, %104 ], [ %116, %215 ]
  %112 = phi i16 [ %65, %104 ], [ %111, %215 ]
  %113 = phi i32 [ -1, %104 ], [ %217, %215 ]
  %114 = getelementptr inbounds i8, i8* %2, i64 %108
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i16
  %117 = trunc i64 %108 to i32
  switch i8 %115, label %119 [
    i8 32, label %118
    i8 9, label %118
    i8 10, label %118
  ]

118:                                              ; preds = %107, %107, %107
  br i1 %110, label %215, label %232

119:                                              ; preds = %107
  %120 = zext i16 %111 to i64
  %121 = icmp eq i16 %111, 45
  %122 = add nsw i16 %116, -48
  %123 = icmp ult i16 %122, 10
  %124 = and i1 %121, %123
  br i1 %124, label %125, label %128

125:                                              ; preds = %119
  %126 = add i16 %112, -48
  %127 = icmp ult i16 %126, 10
  br i1 %127, label %226, label %147

128:                                              ; preds = %119
  %129 = add i16 %111, -33
  %130 = icmp ult i16 %129, 95
  %131 = add nsw i16 %116, -33
  %132 = icmp ult i16 %131, 95
  %133 = and i1 %130, %132
  br i1 %133, label %134, label %151

134:                                              ; preds = %128
  %135 = zext i8 %115 to i32
  %136 = add nsw i64 %120, -33
  %137 = add nsw i32 %135, -33
  %138 = sdiv i32 %137, 8
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %136, i64 %139
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = and i32 %137, 7
  %144 = shl i32 1, %143
  %145 = and i32 %144, %142
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %151, label %222

147:                                              ; preds = %125
  %148 = or i16 %112, 32
  %149 = add i16 %148, -97
  %150 = icmp ult i16 %149, 26
  br i1 %150, label %230, label %153

151:                                              ; preds = %134, %128
  %152 = icmp eq i8 %115, 43
  br i1 %152, label %156, label %153

153:                                              ; preds = %147, %151
  %154 = zext i8 %115 to i32
  %155 = call i32 @u_getIntPropertyValue_69(i32 %154, i32 4104) #9
  br label %156

156:                                              ; preds = %151, %153
  %157 = phi i32 [ %155, %153 ], [ 2, %151 ]
  %158 = icmp ult i32 %157, 40
  %159 = icmp ult i32 %109, 40
  %160 = and i1 %159, %158
  br i1 %160, label %161, label %173

161:                                              ; preds = %156
  %162 = zext i32 %109 to i64
  %163 = lshr i32 %157, 3
  %164 = and i32 %163, 31
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds [40 x [6 x i8]], [40 x [6 x i8]]* @_ZN5blinkL28kBreakAllLineBreakClassTableE, i64 0, i64 %162, i64 %165
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i32
  %169 = and i32 %157, 7
  %170 = shl i32 1, %169
  %171 = and i32 %170, %168
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %224

173:                                              ; preds = %161, %156
  %174 = icmp eq i32 %157, 9
  %175 = select i1 %174, i32 %109, i32 %157
  %176 = icmp slt i8 %115, 0
  %177 = icmp ne i8 %115, -96
  %178 = and i1 %176, %177
  br i1 %178, label %183, label %179

179:                                              ; preds = %173
  %180 = icmp ugt i16 %111, 127
  %181 = icmp ne i16 %111, 160
  %182 = and i1 %180, %181
  br i1 %182, label %183, label %215

183:                                              ; preds = %179, %173
  %184 = sext i32 %113 to i64
  %185 = icmp sgt i64 %108, %184
  br i1 %185, label %186, label %211

186:                                              ; preds = %183
  %187 = load i32, i32* %89, align 8
  %188 = or i32 %187, %117
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %211, label %190

190:                                              ; preds = %186
  %191 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %192 = icmp eq %"class.icu_69::BreakIterator"* %191, null
  br i1 %192, label %211, label %193

193:                                              ; preds = %190
  %194 = load i32, i32* %89, align 8
  %195 = trunc i64 %108 to i32
  %196 = add i32 %195, -1
  %197 = add i32 %196, %194
  %198 = load i32, i32* %105, align 8
  %199 = sub i32 %197, %198
  %200 = bitcast %"class.icu_69::BreakIterator"* %191 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %201 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %200, align 8
  %202 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %201, i64 15
  %203 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %202, align 8
  %204 = call i32 %203(%"class.icu_69::BreakIterator"* nonnull %191, i32 %199) #9
  %205 = icmp sgt i32 %204, -1
  br i1 %205, label %206, label %211

206:                                              ; preds = %193
  %207 = load i32, i32* %105, align 8
  %208 = add i32 %207, %204
  %209 = load i32, i32* %89, align 8
  %210 = sub i32 %208, %209
  br label %211

211:                                              ; preds = %206, %193, %190, %186, %183
  %212 = phi i32 [ %113, %183 ], [ %113, %186 ], [ %210, %206 ], [ %204, %193 ], [ %113, %190 ]
  %213 = icmp ne i32 %212, %117
  %214 = or i1 %110, %213
  br i1 %214, label %215, label %228

215:                                              ; preds = %211, %179, %118
  %216 = phi i1 [ true, %118 ], [ false, %211 ], [ false, %179 ]
  %217 = phi i32 [ %113, %118 ], [ %212, %211 ], [ %113, %179 ]
  %218 = phi i32 [ %109, %118 ], [ %175, %211 ], [ %175, %179 ]
  %219 = add nsw i64 %108, 1
  %220 = trunc i64 %219 to i32
  %221 = icmp eq i32 %220, %3
  br i1 %221, label %234, label %107

222:                                              ; preds = %134
  %223 = trunc i64 %108 to i32
  br label %234

224:                                              ; preds = %161
  %225 = trunc i64 %108 to i32
  br label %234

226:                                              ; preds = %125
  %227 = trunc i64 %108 to i32
  br label %234

228:                                              ; preds = %211
  %229 = trunc i64 %108 to i32
  br label %234

230:                                              ; preds = %147
  %231 = trunc i64 %108 to i32
  br label %234

232:                                              ; preds = %118
  %233 = trunc i64 %108 to i32
  br label %234

234:                                              ; preds = %215, %222, %224, %226, %228, %230, %232, %100
  %235 = phi i32 [ %3, %100 ], [ %223, %222 ], [ %225, %224 ], [ %227, %226 ], [ %229, %228 ], [ %231, %230 ], [ %233, %232 ], [ %3, %215 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #9
  ret i32 %235
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE2EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i8*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  br label %54

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %52 = load i16, i16* %51, align 8
  %53 = icmp eq i32 %1, 1
  br i1 %53, label %54, label %61

54:                                               ; preds = %44, %50
  %55 = phi i16 [ %49, %44 ], [ %52, %50 ]
  %56 = add nsw i32 %1, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %2, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  br label %64

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %63 = load i16, i16* %62, align 2
  br label %64

64:                                               ; preds = %61, %54
  %65 = phi i16 [ %55, %54 ], [ %52, %61 ]
  %66 = phi i16 [ %60, %54 ], [ %63, %61 ]
  switch i16 %66, label %67 [
    i16 32, label %68
    i16 9, label %68
    i16 10, label %68
    i16 43, label %84
  ]

67:                                               ; preds = %64
  br label %68

68:                                               ; preds = %64, %64, %64, %67
  %69 = phi i1 [ true, %64 ], [ true, %64 ], [ true, %64 ], [ false, %67 ]
  %70 = zext i16 %66 to i32
  %71 = zext i16 %65 to i32
  %72 = and i32 %71, 64512
  %73 = icmp eq i32 %72, 55296
  %74 = and i32 %70, 64512
  %75 = icmp eq i32 %74, 56320
  %76 = and i1 %73, %75
  br i1 %76, label %77, label %81

77:                                               ; preds = %68
  %78 = shl nuw nsw i32 %71, 10
  %79 = add nuw nsw i32 %70, -56613888
  %80 = add nsw i32 %79, %78
  br label %81

81:                                               ; preds = %77, %68
  %82 = phi i32 [ %80, %77 ], [ %70, %68 ]
  %83 = call i32 @u_getIntPropertyValue_69(i32 %82, i32 4104) #9
  br label %84

84:                                               ; preds = %64, %81
  %85 = phi i1 [ %69, %81 ], [ false, %64 ]
  %86 = phi i32 [ %83, %81 ], [ 2, %64 ]
  %87 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #9
  %88 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %89 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %90 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %91 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 16, i1 false)
  %92 = load i16, i16* %90, align 2
  %93 = icmp eq i16 %92, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %96 = load i16, i16* %95, align 8
  %97 = icmp eq i16 %96, 0
  %98 = select i1 %97, i16* %90, i16* %95
  %99 = select i1 %97, i32 1, i32 2
  br label %100

100:                                              ; preds = %84, %94
  %101 = phi i16* [ %98, %94 ], [ null, %84 ]
  %102 = phi i32 [ %99, %94 ], [ 0, %84 ]
  store i16* %101, i16** %88, align 8
  store i32 %102, i32* %89, align 8
  %103 = icmp slt i32 %1, %3
  br i1 %103, label %104, label %233

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %106 = sext i32 %1 to i64
  br label %107

107:                                              ; preds = %214, %104
  %108 = phi i64 [ %106, %104 ], [ %218, %214 ]
  %109 = phi i32 [ %86, %104 ], [ %217, %214 ]
  %110 = phi i1 [ %85, %104 ], [ %215, %214 ]
  %111 = phi i16 [ %66, %104 ], [ %116, %214 ]
  %112 = phi i16 [ %65, %104 ], [ %111, %214 ]
  %113 = phi i32 [ -1, %104 ], [ %216, %214 ]
  %114 = getelementptr inbounds i8, i8* %2, i64 %108
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i16
  switch i8 %115, label %117 [
    i8 32, label %214
    i8 9, label %214
    i8 10, label %214
  ]

117:                                              ; preds = %107
  %118 = trunc i64 %108 to i32
  br i1 %110, label %231, label %119

119:                                              ; preds = %117
  %120 = zext i16 %111 to i64
  %121 = icmp eq i16 %111, 45
  %122 = add nsw i16 %116, -48
  %123 = icmp ult i16 %122, 10
  %124 = and i1 %121, %123
  br i1 %124, label %125, label %128

125:                                              ; preds = %119
  %126 = add i16 %112, -48
  %127 = icmp ult i16 %126, 10
  br i1 %127, label %225, label %147

128:                                              ; preds = %119
  %129 = add i16 %111, -33
  %130 = icmp ult i16 %129, 95
  %131 = add nsw i16 %116, -33
  %132 = icmp ult i16 %131, 95
  %133 = and i1 %130, %132
  br i1 %133, label %134, label %151

134:                                              ; preds = %128
  %135 = zext i8 %115 to i32
  %136 = add nsw i64 %120, -33
  %137 = add nsw i32 %135, -33
  %138 = sdiv i32 %137, 8
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %136, i64 %139
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = and i32 %137, 7
  %144 = shl i32 1, %143
  %145 = and i32 %144, %142
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %151, label %221

147:                                              ; preds = %125
  %148 = or i16 %112, 32
  %149 = add i16 %148, -97
  %150 = icmp ult i16 %149, 26
  br i1 %150, label %229, label %153

151:                                              ; preds = %134, %128
  %152 = icmp eq i8 %115, 43
  br i1 %152, label %156, label %153

153:                                              ; preds = %147, %151
  %154 = zext i8 %115 to i32
  %155 = call i32 @u_getIntPropertyValue_69(i32 %154, i32 4104) #9
  br label %156

156:                                              ; preds = %151, %153
  %157 = phi i32 [ %155, %153 ], [ 2, %151 ]
  %158 = icmp ult i32 %157, 40
  %159 = icmp ult i32 %109, 40
  %160 = and i1 %159, %158
  br i1 %160, label %161, label %173

161:                                              ; preds = %156
  %162 = zext i32 %109 to i64
  %163 = lshr i32 %157, 3
  %164 = and i32 %163, 31
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds [40 x [6 x i8]], [40 x [6 x i8]]* @_ZN5blinkL28kBreakAllLineBreakClassTableE, i64 0, i64 %162, i64 %165
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i32
  %169 = and i32 %157, 7
  %170 = shl i32 1, %169
  %171 = and i32 %170, %168
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %223

173:                                              ; preds = %161, %156
  %174 = icmp eq i32 %157, 9
  %175 = select i1 %174, i32 %109, i32 %157
  %176 = icmp slt i8 %115, 0
  %177 = icmp ne i8 %115, -96
  %178 = and i1 %176, %177
  br i1 %178, label %183, label %179

179:                                              ; preds = %173
  %180 = icmp ugt i16 %111, 127
  %181 = icmp ne i16 %111, 160
  %182 = and i1 %180, %181
  br i1 %182, label %183, label %214

183:                                              ; preds = %179, %173
  %184 = sext i32 %113 to i64
  %185 = icmp sgt i64 %108, %184
  br i1 %185, label %186, label %211

186:                                              ; preds = %183
  %187 = load i32, i32* %89, align 8
  %188 = or i32 %187, %118
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %211, label %190

190:                                              ; preds = %186
  %191 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %192 = icmp eq %"class.icu_69::BreakIterator"* %191, null
  br i1 %192, label %211, label %193

193:                                              ; preds = %190
  %194 = load i32, i32* %89, align 8
  %195 = trunc i64 %108 to i32
  %196 = add i32 %195, -1
  %197 = add i32 %196, %194
  %198 = load i32, i32* %105, align 8
  %199 = sub i32 %197, %198
  %200 = bitcast %"class.icu_69::BreakIterator"* %191 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %201 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %200, align 8
  %202 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %201, i64 15
  %203 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %202, align 8
  %204 = call i32 %203(%"class.icu_69::BreakIterator"* nonnull %191, i32 %199) #9
  %205 = icmp sgt i32 %204, -1
  br i1 %205, label %206, label %211

206:                                              ; preds = %193
  %207 = load i32, i32* %105, align 8
  %208 = add i32 %207, %204
  %209 = load i32, i32* %89, align 8
  %210 = sub i32 %208, %209
  br label %211

211:                                              ; preds = %206, %193, %190, %186, %183
  %212 = phi i32 [ %113, %183 ], [ %113, %186 ], [ %210, %206 ], [ %204, %193 ], [ %113, %190 ]
  %213 = icmp eq i32 %212, %118
  br i1 %213, label %227, label %214

214:                                              ; preds = %107, %107, %107, %179, %211
  %215 = phi i1 [ false, %211 ], [ false, %179 ], [ true, %107 ], [ true, %107 ], [ true, %107 ]
  %216 = phi i32 [ %212, %211 ], [ %113, %179 ], [ %113, %107 ], [ %113, %107 ], [ %113, %107 ]
  %217 = phi i32 [ %175, %211 ], [ %175, %179 ], [ %109, %107 ], [ %109, %107 ], [ %109, %107 ]
  %218 = add nsw i64 %108, 1
  %219 = trunc i64 %218 to i32
  %220 = icmp eq i32 %219, %3
  br i1 %220, label %233, label %107

221:                                              ; preds = %134
  %222 = trunc i64 %108 to i32
  br label %233

223:                                              ; preds = %161
  %224 = trunc i64 %108 to i32
  br label %233

225:                                              ; preds = %125
  %226 = trunc i64 %108 to i32
  br label %233

227:                                              ; preds = %211
  %228 = trunc i64 %108 to i32
  br label %233

229:                                              ; preds = %147
  %230 = trunc i64 %108 to i32
  br label %233

231:                                              ; preds = %117
  %232 = trunc i64 %108 to i32
  br label %233

233:                                              ; preds = %214, %221, %223, %225, %227, %229, %231, %100
  %234 = phi i32 [ %3, %100 ], [ %222, %221 ], [ %224, %223 ], [ %226, %225 ], [ %228, %227 ], [ %230, %229 ], [ %232, %231 ], [ %3, %214 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #9
  ret i32 %234
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE3EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i8*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  br label %54

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %52 = load i16, i16* %51, align 8
  %53 = icmp eq i32 %1, 1
  br i1 %53, label %54, label %61

54:                                               ; preds = %44, %50
  %55 = phi i16 [ %49, %44 ], [ %52, %50 ]
  %56 = add nsw i32 %1, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %2, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  br label %64

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %63 = load i16, i16* %62, align 2
  br label %64

64:                                               ; preds = %61, %54
  %65 = phi i16 [ %55, %54 ], [ %52, %61 ]
  %66 = phi i16 [ %60, %54 ], [ %63, %61 ]
  switch i16 %66, label %67 [
    i16 32, label %68
    i16 9, label %68
    i16 10, label %68
    i16 43, label %84
  ]

67:                                               ; preds = %64
  br label %68

68:                                               ; preds = %64, %64, %64, %67
  %69 = phi i1 [ true, %64 ], [ true, %64 ], [ true, %64 ], [ false, %67 ]
  %70 = zext i16 %66 to i32
  %71 = zext i16 %65 to i32
  %72 = and i32 %71, 64512
  %73 = icmp eq i32 %72, 55296
  %74 = and i32 %70, 64512
  %75 = icmp eq i32 %74, 56320
  %76 = and i1 %73, %75
  br i1 %76, label %77, label %81

77:                                               ; preds = %68
  %78 = shl nuw nsw i32 %71, 10
  %79 = add nuw nsw i32 %70, -56613888
  %80 = add nsw i32 %79, %78
  br label %81

81:                                               ; preds = %77, %68
  %82 = phi i32 [ %80, %77 ], [ %70, %68 ]
  %83 = call i32 @u_getIntPropertyValue_69(i32 %82, i32 4104) #9
  br label %84

84:                                               ; preds = %64, %81
  %85 = phi i1 [ %69, %81 ], [ false, %64 ]
  %86 = phi i32 [ %83, %81 ], [ 2, %64 ]
  %87 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #9
  %88 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %89 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %90 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %91 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 16, i1 false)
  %92 = load i16, i16* %90, align 2
  %93 = icmp eq i16 %92, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %96 = load i16, i16* %95, align 8
  %97 = icmp eq i16 %96, 0
  %98 = select i1 %97, i16* %90, i16* %95
  %99 = select i1 %97, i32 1, i32 2
  br label %100

100:                                              ; preds = %84, %94
  %101 = phi i16* [ %98, %94 ], [ null, %84 ]
  %102 = phi i32 [ %99, %94 ], [ 0, %84 ]
  store i16* %101, i16** %88, align 8
  store i32 %102, i32* %89, align 8
  %103 = icmp slt i32 %1, %3
  br i1 %103, label %104, label %250

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %106 = sext i32 %1 to i64
  %107 = sext i32 %3 to i64
  br label %108

108:                                              ; preds = %230, %104
  %109 = phi i64 [ %106, %104 ], [ %232, %230 ]
  %110 = phi i32 [ %1, %104 ], [ %233, %230 ]
  %111 = phi i32 [ %86, %104 ], [ %191, %230 ]
  %112 = phi i1 [ %85, %104 ], [ %127, %230 ]
  %113 = phi i16 [ %66, %104 ], [ %118, %230 ]
  %114 = phi i16 [ %65, %104 ], [ %113, %230 ]
  %115 = phi i32 [ -1, %104 ], [ %231, %230 ]
  %116 = getelementptr inbounds i8, i8* %2, i64 %109
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i16
  %119 = add i8 %117, -9
  %120 = icmp ult i8 %119, 24
  br i1 %120, label %121, label %126

121:                                              ; preds = %108
  %122 = zext i8 %119 to i24
  %123 = lshr i24 -8388605, %122
  %124 = and i24 %123, 1
  %125 = icmp ne i24 %124, 0
  br label %126

126:                                              ; preds = %108, %121
  %127 = phi i1 [ %125, %121 ], [ false, %108 ]
  %128 = icmp eq i16 %113, 12288
  %129 = or i1 %112, %128
  %130 = trunc i64 %109 to i32
  br i1 %129, label %248, label %131

131:                                              ; preds = %126
  %132 = add nsw i64 %109, 1
  %133 = icmp slt i64 %132, %107
  %134 = and i1 %127, %133
  br i1 %134, label %246, label %135

135:                                              ; preds = %131
  %136 = zext i16 %113 to i64
  %137 = icmp eq i16 %113, 45
  %138 = add nsw i16 %118, -48
  %139 = icmp ult i16 %138, 10
  %140 = and i1 %137, %139
  br i1 %140, label %141, label %144

141:                                              ; preds = %135
  %142 = add i16 %114, -48
  %143 = icmp ult i16 %142, 10
  br i1 %143, label %240, label %163

144:                                              ; preds = %135
  %145 = add i16 %113, -33
  %146 = icmp ult i16 %145, 95
  %147 = add nsw i16 %118, -33
  %148 = icmp ult i16 %147, 95
  %149 = and i1 %146, %148
  br i1 %149, label %150, label %167

150:                                              ; preds = %144
  %151 = zext i8 %117 to i32
  %152 = add nsw i64 %136, -33
  %153 = add nsw i32 %151, -33
  %154 = sdiv i32 %153, 8
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %152, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = and i32 %153, 7
  %160 = shl i32 1, %159
  %161 = and i32 %160, %158
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %167, label %236

163:                                              ; preds = %141
  %164 = or i16 %114, 32
  %165 = add i16 %164, -97
  %166 = icmp ult i16 %165, 26
  br i1 %166, label %244, label %169

167:                                              ; preds = %150, %144
  %168 = icmp eq i8 %117, 43
  br i1 %168, label %172, label %169

169:                                              ; preds = %163, %167
  %170 = zext i8 %117 to i32
  %171 = call i32 @u_getIntPropertyValue_69(i32 %170, i32 4104) #9
  br label %172

172:                                              ; preds = %167, %169
  %173 = phi i32 [ %171, %169 ], [ 2, %167 ]
  %174 = icmp ult i32 %173, 40
  %175 = icmp ult i32 %111, 40
  %176 = and i1 %175, %174
  br i1 %176, label %177, label %189

177:                                              ; preds = %172
  %178 = zext i32 %111 to i64
  %179 = lshr i32 %173, 3
  %180 = and i32 %179, 31
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds [40 x [6 x i8]], [40 x [6 x i8]]* @_ZN5blinkL28kBreakAllLineBreakClassTableE, i64 0, i64 %178, i64 %181
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i32
  %185 = and i32 %173, 7
  %186 = shl i32 1, %185
  %187 = and i32 %186, %184
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %238

189:                                              ; preds = %177, %172
  %190 = icmp eq i32 %173, 9
  %191 = select i1 %190, i32 %111, i32 %173
  %192 = icmp slt i8 %117, 0
  %193 = icmp ne i8 %117, -96
  %194 = and i1 %192, %193
  br i1 %194, label %199, label %195

195:                                              ; preds = %189
  %196 = icmp ugt i16 %113, 127
  %197 = icmp ne i16 %113, 160
  %198 = and i1 %196, %197
  br i1 %198, label %199, label %230

199:                                              ; preds = %195, %189
  %200 = sext i32 %115 to i64
  %201 = icmp sgt i64 %109, %200
  br i1 %201, label %202, label %227

202:                                              ; preds = %199
  %203 = load i32, i32* %89, align 8
  %204 = or i32 %203, %130
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %227, label %206

206:                                              ; preds = %202
  %207 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %208 = icmp eq %"class.icu_69::BreakIterator"* %207, null
  br i1 %208, label %227, label %209

209:                                              ; preds = %206
  %210 = load i32, i32* %89, align 8
  %211 = trunc i64 %109 to i32
  %212 = add i32 %211, -1
  %213 = add i32 %212, %210
  %214 = load i32, i32* %105, align 8
  %215 = sub i32 %213, %214
  %216 = bitcast %"class.icu_69::BreakIterator"* %207 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %217 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %216, align 8
  %218 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %217, i64 15
  %219 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %218, align 8
  %220 = call i32 %219(%"class.icu_69::BreakIterator"* nonnull %207, i32 %215) #9
  %221 = icmp sgt i32 %220, -1
  br i1 %221, label %222, label %227

222:                                              ; preds = %209
  %223 = load i32, i32* %105, align 8
  %224 = add i32 %223, %220
  %225 = load i32, i32* %89, align 8
  %226 = sub i32 %224, %225
  br label %227

227:                                              ; preds = %222, %209, %206, %202, %199
  %228 = phi i32 [ %115, %199 ], [ %115, %202 ], [ %226, %222 ], [ %220, %209 ], [ %115, %206 ]
  %229 = icmp eq i32 %228, %130
  br i1 %229, label %242, label %230

230:                                              ; preds = %195, %227
  %231 = phi i32 [ %228, %227 ], [ %115, %195 ]
  %232 = add nsw i64 %109, 1
  %233 = add nsw i32 %110, 1
  %234 = trunc i64 %232 to i32
  %235 = icmp eq i32 %234, %3
  br i1 %235, label %250, label %108

236:                                              ; preds = %150
  %237 = trunc i64 %109 to i32
  br label %250

238:                                              ; preds = %177
  %239 = trunc i64 %109 to i32
  br label %250

240:                                              ; preds = %141
  %241 = trunc i64 %109 to i32
  br label %250

242:                                              ; preds = %227
  %243 = trunc i64 %109 to i32
  br label %250

244:                                              ; preds = %163
  %245 = trunc i64 %109 to i32
  br label %250

246:                                              ; preds = %131
  %247 = add nsw i32 %110, 1
  br label %250

248:                                              ; preds = %126
  %249 = trunc i64 %109 to i32
  br label %250

250:                                              ; preds = %230, %236, %238, %240, %242, %244, %246, %248, %100
  %251 = phi i32 [ %3, %100 ], [ %237, %236 ], [ %239, %238 ], [ %241, %240 ], [ %243, %242 ], [ %245, %244 ], [ %247, %246 ], [ %249, %248 ], [ %3, %230 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #9
  ret i32 %251
}

declare i32 @u_getIntPropertyValue_69(i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i16*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %2, i64 %46
  %48 = load i16, i16* %47, align 2
  br label %53

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %51 = load i16, i16* %50, align 8
  %52 = icmp eq i32 %1, 1
  br i1 %52, label %53, label %58

53:                                               ; preds = %44, %49
  %54 = phi i16 [ %48, %44 ], [ %51, %49 ]
  %55 = add nsw i32 %1, -1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %2, i64 %56
  br label %60

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i16 [ %54, %53 ], [ %51, %58 ]
  %62 = phi i16* [ %57, %53 ], [ %59, %58 ]
  %63 = load i16, i16* %62, align 2
  switch i16 %63, label %64 [
    i16 32, label %65
    i16 9, label %65
    i16 10, label %65
    i16 43, label %81
  ]

64:                                               ; preds = %60
  br label %65

65:                                               ; preds = %60, %60, %60, %64
  %66 = phi i1 [ true, %60 ], [ true, %60 ], [ true, %60 ], [ false, %64 ]
  %67 = zext i16 %63 to i32
  %68 = zext i16 %61 to i32
  %69 = and i32 %68, 64512
  %70 = icmp eq i32 %69, 55296
  %71 = and i32 %67, 64512
  %72 = icmp eq i32 %71, 56320
  %73 = and i1 %70, %72
  br i1 %73, label %74, label %78

74:                                               ; preds = %65
  %75 = shl nuw nsw i32 %68, 10
  %76 = add nsw i32 %75, -56613888
  %77 = add nsw i32 %76, %67
  br label %78

78:                                               ; preds = %74, %65
  %79 = phi i32 [ %77, %74 ], [ %67, %65 ]
  %80 = call i32 @u_getIntPropertyValue_69(i32 %79, i32 4104) #9
  br label %81

81:                                               ; preds = %60, %78
  %82 = phi i1 [ %66, %78 ], [ false, %60 ]
  %83 = phi i32 [ %80, %78 ], [ 2, %60 ]
  %84 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #9
  %85 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %86 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %87 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %88 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 16, i1 false)
  %89 = load i16, i16* %87, align 2
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %93 = load i16, i16* %92, align 8
  %94 = icmp eq i16 %93, 0
  %95 = select i1 %94, i16* %87, i16* %92
  %96 = select i1 %94, i32 1, i32 2
  br label %97

97:                                               ; preds = %81, %91
  %98 = phi i16* [ %95, %91 ], [ null, %81 ]
  %99 = phi i32 [ %96, %91 ], [ 0, %81 ]
  store i16* %98, i16** %85, align 8
  store i32 %99, i32* %86, align 8
  %100 = icmp slt i32 %1, %3
  br i1 %100, label %101, label %249

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %103 = sext i32 %1 to i64
  br label %104

104:                                              ; preds = %234, %101
  %105 = phi i64 [ %103, %101 ], [ %236, %234 ]
  %106 = phi i32 [ %83, %101 ], [ %194, %234 ]
  %107 = phi i1 [ %82, %101 ], [ false, %234 ]
  %108 = phi i16 [ %63, %101 ], [ %112, %234 ]
  %109 = phi i16 [ %61, %101 ], [ %108, %234 ]
  %110 = phi i32 [ -1, %101 ], [ %235, %234 ]
  %111 = getelementptr inbounds i16, i16* %2, i64 %105
  %112 = load i16, i16* %111, align 2
  %113 = trunc i64 %105 to i32
  switch i16 %112, label %114 [
    i16 32, label %241
    i16 9, label %241
    i16 10, label %241
    i16 12288, label %241
  ]

114:                                              ; preds = %104
  %115 = zext i16 %108 to i64
  %116 = icmp eq i16 %108, 45
  %117 = add i16 %112, -48
  %118 = icmp ult i16 %117, 10
  %119 = and i1 %116, %118
  br i1 %119, label %120, label %123

120:                                              ; preds = %114
  %121 = add i16 %109, -48
  %122 = icmp ult i16 %121, 10
  br i1 %122, label %243, label %142

123:                                              ; preds = %114
  %124 = add i16 %108, -33
  %125 = icmp ult i16 %124, 95
  %126 = add i16 %112, -33
  %127 = icmp ult i16 %126, 95
  %128 = and i1 %125, %127
  br i1 %128, label %129, label %146

129:                                              ; preds = %123
  %130 = zext i16 %112 to i32
  %131 = add nsw i64 %115, -33
  %132 = add nsw i32 %130, -33
  %133 = sdiv i32 %132, 8
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %131, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = and i32 %132, 7
  %139 = shl i32 1, %138
  %140 = and i32 %139, %137
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %146, label %239

142:                                              ; preds = %120
  %143 = or i16 %109, 32
  %144 = add i16 %143, -97
  %145 = icmp ult i16 %144, 26
  br i1 %145, label %247, label %146

146:                                              ; preds = %129, %123, %142
  %147 = and i16 %112, -1024
  %148 = icmp eq i16 %147, -10240
  br i1 %148, label %193, label %149

149:                                              ; preds = %146
  %150 = zext i16 %112 to i32
  %151 = icmp eq i16 %112, 43
  br i1 %151, label %166, label %152

152:                                              ; preds = %149
  %153 = zext i16 %108 to i32
  %154 = and i32 %153, 64512
  %155 = icmp eq i32 %154, 55296
  %156 = and i32 %150, 64512
  %157 = icmp eq i32 %156, 56320
  %158 = and i1 %155, %157
  br i1 %158, label %159, label %163

159:                                              ; preds = %152
  %160 = shl nuw nsw i32 %153, 10
  %161 = add nsw i32 %160, -56613888
  %162 = add nsw i32 %161, %150
  br label %163

163:                                              ; preds = %159, %152
  %164 = phi i32 [ %162, %159 ], [ %150, %152 ]
  %165 = call i32 @u_getIntPropertyValue_69(i32 %164, i32 4104) #9
  br label %166

166:                                              ; preds = %149, %163
  %167 = phi i32 [ %165, %163 ], [ 2, %149 ]
  %168 = icmp ult i32 %167, 40
  %169 = icmp ult i32 %106, 40
  %170 = and i1 %169, %168
  br i1 %170, label %171, label %183

171:                                              ; preds = %166
  %172 = zext i32 %106 to i64
  %173 = lshr i32 %167, 3
  %174 = and i32 %173, 31
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds [40 x [6 x i8]], [40 x [6 x i8]]* @_ZN5blinkL28kBreakAllLineBreakClassTableE, i64 0, i64 %172, i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i32
  %179 = and i32 %167, 7
  %180 = shl i32 1, %179
  %181 = and i32 %180, %178
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %186

183:                                              ; preds = %171, %166
  %184 = icmp eq i32 %167, 9
  %185 = select i1 %184, i32 %106, i32 %167
  br label %193

186:                                              ; preds = %171
  %187 = trunc i64 %105 to i32
  %188 = icmp sgt i32 %187, %1
  %189 = icmp eq i16 %147, -9216
  %190 = and i1 %188, %189
  %191 = zext i1 %190 to i32
  %192 = sub i32 %187, %191
  br label %249

193:                                              ; preds = %183, %146
  %194 = phi i32 [ %106, %146 ], [ %185, %183 ]
  %195 = icmp ugt i16 %112, 127
  %196 = icmp ne i16 %112, 160
  %197 = and i1 %195, %196
  br i1 %197, label %202, label %198

198:                                              ; preds = %193
  %199 = icmp ugt i16 %108, 127
  %200 = icmp ne i16 %108, 160
  %201 = and i1 %199, %200
  br i1 %201, label %202, label %234

202:                                              ; preds = %198, %193
  %203 = sext i32 %110 to i64
  %204 = icmp sgt i64 %105, %203
  br i1 %204, label %205, label %230

205:                                              ; preds = %202
  %206 = load i32, i32* %86, align 8
  %207 = or i32 %206, %113
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %230, label %209

209:                                              ; preds = %205
  %210 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %211 = icmp eq %"class.icu_69::BreakIterator"* %210, null
  br i1 %211, label %230, label %212

212:                                              ; preds = %209
  %213 = load i32, i32* %86, align 8
  %214 = trunc i64 %105 to i32
  %215 = add i32 %214, -1
  %216 = add i32 %215, %213
  %217 = load i32, i32* %102, align 8
  %218 = sub i32 %216, %217
  %219 = bitcast %"class.icu_69::BreakIterator"* %210 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %220 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %219, align 8
  %221 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %220, i64 15
  %222 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %221, align 8
  %223 = call i32 %222(%"class.icu_69::BreakIterator"* nonnull %210, i32 %218) #9
  %224 = icmp sgt i32 %223, -1
  br i1 %224, label %225, label %230

225:                                              ; preds = %212
  %226 = load i32, i32* %102, align 8
  %227 = add i32 %226, %223
  %228 = load i32, i32* %86, align 8
  %229 = sub i32 %227, %228
  br label %230

230:                                              ; preds = %225, %212, %209, %205, %202
  %231 = phi i32 [ %110, %202 ], [ %110, %205 ], [ %229, %225 ], [ %223, %212 ], [ %110, %209 ]
  %232 = icmp ne i32 %231, %113
  %233 = or i1 %107, %232
  br i1 %233, label %234, label %245

234:                                              ; preds = %230, %198
  %235 = phi i32 [ %231, %230 ], [ %110, %198 ]
  %236 = add nsw i64 %105, 1
  %237 = trunc i64 %236 to i32
  %238 = icmp eq i32 %237, %3
  br i1 %238, label %249, label %104

239:                                              ; preds = %129
  %240 = trunc i64 %105 to i32
  br label %249

241:                                              ; preds = %104, %104, %104, %104
  %242 = trunc i64 %105 to i32
  br label %249

243:                                              ; preds = %120
  %244 = trunc i64 %105 to i32
  br label %249

245:                                              ; preds = %230
  %246 = trunc i64 %105 to i32
  br label %249

247:                                              ; preds = %142
  %248 = trunc i64 %105 to i32
  br label %249

249:                                              ; preds = %234, %239, %241, %243, %245, %247, %97, %186
  %250 = phi i32 [ %192, %186 ], [ %3, %97 ], [ %240, %239 ], [ %242, %241 ], [ %244, %243 ], [ %246, %245 ], [ %248, %247 ], [ %3, %234 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #9
  ret i32 %250
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE1EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i16*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %2, i64 %46
  %48 = load i16, i16* %47, align 2
  br label %53

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %51 = load i16, i16* %50, align 8
  %52 = icmp eq i32 %1, 1
  br i1 %52, label %53, label %58

53:                                               ; preds = %44, %49
  %54 = phi i16 [ %48, %44 ], [ %51, %49 ]
  %55 = add nsw i32 %1, -1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %2, i64 %56
  br label %60

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i16 [ %54, %53 ], [ %51, %58 ]
  %62 = phi i16* [ %57, %53 ], [ %59, %58 ]
  %63 = load i16, i16* %62, align 2
  switch i16 %63, label %64 [
    i16 32, label %65
    i16 9, label %65
    i16 10, label %65
    i16 43, label %81
  ]

64:                                               ; preds = %60
  br label %65

65:                                               ; preds = %60, %60, %60, %64
  %66 = phi i1 [ true, %60 ], [ true, %60 ], [ true, %60 ], [ false, %64 ]
  %67 = zext i16 %63 to i32
  %68 = zext i16 %61 to i32
  %69 = and i32 %68, 64512
  %70 = icmp eq i32 %69, 55296
  %71 = and i32 %67, 64512
  %72 = icmp eq i32 %71, 56320
  %73 = and i1 %70, %72
  br i1 %73, label %74, label %78

74:                                               ; preds = %65
  %75 = shl nuw nsw i32 %68, 10
  %76 = add nsw i32 %75, -56613888
  %77 = add nsw i32 %76, %67
  br label %78

78:                                               ; preds = %74, %65
  %79 = phi i32 [ %77, %74 ], [ %67, %65 ]
  %80 = call i32 @u_getIntPropertyValue_69(i32 %79, i32 4104) #9
  br label %81

81:                                               ; preds = %60, %78
  %82 = phi i1 [ %66, %78 ], [ false, %60 ]
  %83 = phi i32 [ %80, %78 ], [ 2, %60 ]
  %84 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #9
  %85 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %86 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %87 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %88 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 16, i1 false)
  %89 = load i16, i16* %87, align 2
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %93 = load i16, i16* %92, align 8
  %94 = icmp eq i16 %93, 0
  %95 = select i1 %94, i16* %87, i16* %92
  %96 = select i1 %94, i32 1, i32 2
  br label %97

97:                                               ; preds = %81, %91
  %98 = phi i16* [ %95, %91 ], [ null, %81 ]
  %99 = phi i32 [ %96, %91 ], [ 0, %81 ]
  store i16* %98, i16** %85, align 8
  store i32 %99, i32* %86, align 8
  %100 = icmp slt i32 %1, %3
  br i1 %100, label %101, label %252

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %103 = sext i32 %1 to i64
  br label %104

104:                                              ; preds = %235, %101
  %105 = phi i64 [ %103, %101 ], [ %239, %235 ]
  %106 = phi i32 [ %83, %101 ], [ %238, %235 ]
  %107 = phi i1 [ %82, %101 ], [ %236, %235 ]
  %108 = phi i16 [ %63, %101 ], [ %112, %235 ]
  %109 = phi i16 [ %61, %101 ], [ %108, %235 ]
  %110 = phi i32 [ -1, %101 ], [ %237, %235 ]
  %111 = getelementptr inbounds i16, i16* %2, i64 %105
  %112 = load i16, i16* %111, align 2
  %113 = trunc i64 %105 to i32
  switch i16 %112, label %115 [
    i16 32, label %114
    i16 9, label %114
    i16 10, label %114
  ]

114:                                              ; preds = %104, %104, %104
  br i1 %107, label %235, label %250

115:                                              ; preds = %104
  %116 = zext i16 %108 to i64
  %117 = icmp eq i16 %108, 45
  %118 = add i16 %112, -48
  %119 = icmp ult i16 %118, 10
  %120 = and i1 %117, %119
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  %122 = add i16 %109, -48
  %123 = icmp ult i16 %122, 10
  br i1 %123, label %244, label %143

124:                                              ; preds = %115
  %125 = add i16 %108, -33
  %126 = icmp ult i16 %125, 95
  %127 = add i16 %112, -33
  %128 = icmp ult i16 %127, 95
  %129 = and i1 %126, %128
  br i1 %129, label %130, label %147

130:                                              ; preds = %124
  %131 = zext i16 %112 to i32
  %132 = add nsw i64 %116, -33
  %133 = add nsw i32 %131, -33
  %134 = sdiv i32 %133, 8
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %132, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = and i32 %133, 7
  %140 = shl i32 1, %139
  %141 = and i32 %140, %138
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %147, label %242

143:                                              ; preds = %121
  %144 = or i16 %109, 32
  %145 = add i16 %144, -97
  %146 = icmp ult i16 %145, 26
  br i1 %146, label %248, label %147

147:                                              ; preds = %130, %124, %143
  %148 = and i16 %112, -1024
  %149 = icmp eq i16 %148, -10240
  br i1 %149, label %194, label %150

150:                                              ; preds = %147
  %151 = zext i16 %112 to i32
  %152 = icmp eq i16 %112, 43
  br i1 %152, label %167, label %153

153:                                              ; preds = %150
  %154 = zext i16 %108 to i32
  %155 = and i32 %154, 64512
  %156 = icmp eq i32 %155, 55296
  %157 = and i32 %151, 64512
  %158 = icmp eq i32 %157, 56320
  %159 = and i1 %156, %158
  br i1 %159, label %160, label %164

160:                                              ; preds = %153
  %161 = shl nuw nsw i32 %154, 10
  %162 = add nsw i32 %161, -56613888
  %163 = add nsw i32 %162, %151
  br label %164

164:                                              ; preds = %160, %153
  %165 = phi i32 [ %163, %160 ], [ %151, %153 ]
  %166 = call i32 @u_getIntPropertyValue_69(i32 %165, i32 4104) #9
  br label %167

167:                                              ; preds = %150, %164
  %168 = phi i32 [ %166, %164 ], [ 2, %150 ]
  %169 = icmp ult i32 %168, 40
  %170 = icmp ult i32 %106, 40
  %171 = and i1 %170, %169
  br i1 %171, label %172, label %184

172:                                              ; preds = %167
  %173 = zext i32 %106 to i64
  %174 = lshr i32 %168, 3
  %175 = and i32 %174, 31
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds [40 x [6 x i8]], [40 x [6 x i8]]* @_ZN5blinkL28kBreakAllLineBreakClassTableE, i64 0, i64 %173, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = and i32 %168, 7
  %181 = shl i32 1, %180
  %182 = and i32 %181, %179
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %187

184:                                              ; preds = %172, %167
  %185 = icmp eq i32 %168, 9
  %186 = select i1 %185, i32 %106, i32 %168
  br label %194

187:                                              ; preds = %172
  %188 = trunc i64 %105 to i32
  %189 = icmp sgt i32 %188, %1
  %190 = icmp eq i16 %148, -9216
  %191 = and i1 %189, %190
  %192 = zext i1 %191 to i32
  %193 = sub i32 %188, %192
  br label %252

194:                                              ; preds = %184, %147
  %195 = phi i32 [ %106, %147 ], [ %186, %184 ]
  %196 = icmp ugt i16 %112, 127
  %197 = icmp ne i16 %112, 160
  %198 = and i1 %196, %197
  br i1 %198, label %203, label %199

199:                                              ; preds = %194
  %200 = icmp ugt i16 %108, 127
  %201 = icmp ne i16 %108, 160
  %202 = and i1 %200, %201
  br i1 %202, label %203, label %235

203:                                              ; preds = %199, %194
  %204 = sext i32 %110 to i64
  %205 = icmp sgt i64 %105, %204
  br i1 %205, label %206, label %231

206:                                              ; preds = %203
  %207 = load i32, i32* %86, align 8
  %208 = or i32 %207, %113
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %231, label %210

210:                                              ; preds = %206
  %211 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %212 = icmp eq %"class.icu_69::BreakIterator"* %211, null
  br i1 %212, label %231, label %213

213:                                              ; preds = %210
  %214 = load i32, i32* %86, align 8
  %215 = trunc i64 %105 to i32
  %216 = add i32 %215, -1
  %217 = add i32 %216, %214
  %218 = load i32, i32* %102, align 8
  %219 = sub i32 %217, %218
  %220 = bitcast %"class.icu_69::BreakIterator"* %211 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %221 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %220, align 8
  %222 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %221, i64 15
  %223 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %222, align 8
  %224 = call i32 %223(%"class.icu_69::BreakIterator"* nonnull %211, i32 %219) #9
  %225 = icmp sgt i32 %224, -1
  br i1 %225, label %226, label %231

226:                                              ; preds = %213
  %227 = load i32, i32* %102, align 8
  %228 = add i32 %227, %224
  %229 = load i32, i32* %86, align 8
  %230 = sub i32 %228, %229
  br label %231

231:                                              ; preds = %226, %213, %210, %206, %203
  %232 = phi i32 [ %110, %203 ], [ %110, %206 ], [ %230, %226 ], [ %224, %213 ], [ %110, %210 ]
  %233 = icmp ne i32 %232, %113
  %234 = or i1 %107, %233
  br i1 %234, label %235, label %246

235:                                              ; preds = %231, %199, %114
  %236 = phi i1 [ true, %114 ], [ false, %231 ], [ false, %199 ]
  %237 = phi i32 [ %110, %114 ], [ %232, %231 ], [ %110, %199 ]
  %238 = phi i32 [ %106, %114 ], [ %195, %231 ], [ %195, %199 ]
  %239 = add nsw i64 %105, 1
  %240 = trunc i64 %239 to i32
  %241 = icmp eq i32 %240, %3
  br i1 %241, label %252, label %104

242:                                              ; preds = %130
  %243 = trunc i64 %105 to i32
  br label %252

244:                                              ; preds = %121
  %245 = trunc i64 %105 to i32
  br label %252

246:                                              ; preds = %231
  %247 = trunc i64 %105 to i32
  br label %252

248:                                              ; preds = %143
  %249 = trunc i64 %105 to i32
  br label %252

250:                                              ; preds = %114
  %251 = trunc i64 %105 to i32
  br label %252

252:                                              ; preds = %235, %242, %244, %246, %248, %250, %97, %187
  %253 = phi i32 [ %193, %187 ], [ %3, %97 ], [ %243, %242 ], [ %245, %244 ], [ %247, %246 ], [ %249, %248 ], [ %251, %250 ], [ %3, %235 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #9
  ret i32 %253
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE2EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i16*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %2, i64 %46
  %48 = load i16, i16* %47, align 2
  br label %53

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %51 = load i16, i16* %50, align 8
  %52 = icmp eq i32 %1, 1
  br i1 %52, label %53, label %58

53:                                               ; preds = %44, %49
  %54 = phi i16 [ %48, %44 ], [ %51, %49 ]
  %55 = add nsw i32 %1, -1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %2, i64 %56
  br label %60

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i16 [ %54, %53 ], [ %51, %58 ]
  %62 = phi i16* [ %57, %53 ], [ %59, %58 ]
  %63 = load i16, i16* %62, align 2
  switch i16 %63, label %64 [
    i16 32, label %65
    i16 9, label %65
    i16 10, label %65
    i16 43, label %81
  ]

64:                                               ; preds = %60
  br label %65

65:                                               ; preds = %60, %60, %60, %64
  %66 = phi i1 [ true, %60 ], [ true, %60 ], [ true, %60 ], [ false, %64 ]
  %67 = zext i16 %63 to i32
  %68 = zext i16 %61 to i32
  %69 = and i32 %68, 64512
  %70 = icmp eq i32 %69, 55296
  %71 = and i32 %67, 64512
  %72 = icmp eq i32 %71, 56320
  %73 = and i1 %70, %72
  br i1 %73, label %74, label %78

74:                                               ; preds = %65
  %75 = shl nuw nsw i32 %68, 10
  %76 = add nsw i32 %75, -56613888
  %77 = add nsw i32 %76, %67
  br label %78

78:                                               ; preds = %74, %65
  %79 = phi i32 [ %77, %74 ], [ %67, %65 ]
  %80 = call i32 @u_getIntPropertyValue_69(i32 %79, i32 4104) #9
  br label %81

81:                                               ; preds = %60, %78
  %82 = phi i1 [ %66, %78 ], [ false, %60 ]
  %83 = phi i32 [ %80, %78 ], [ 2, %60 ]
  %84 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #9
  %85 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %86 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %87 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %88 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 16, i1 false)
  %89 = load i16, i16* %87, align 2
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %93 = load i16, i16* %92, align 8
  %94 = icmp eq i16 %93, 0
  %95 = select i1 %94, i16* %87, i16* %92
  %96 = select i1 %94, i32 1, i32 2
  br label %97

97:                                               ; preds = %81, %91
  %98 = phi i16* [ %95, %91 ], [ null, %81 ]
  %99 = phi i32 [ %96, %91 ], [ 0, %81 ]
  store i16* %98, i16** %85, align 8
  store i32 %99, i32* %86, align 8
  %100 = icmp slt i32 %1, %3
  br i1 %100, label %101, label %251

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %103 = sext i32 %1 to i64
  br label %104

104:                                              ; preds = %234, %101
  %105 = phi i64 [ %103, %101 ], [ %238, %234 ]
  %106 = phi i32 [ %83, %101 ], [ %237, %234 ]
  %107 = phi i1 [ %82, %101 ], [ %235, %234 ]
  %108 = phi i16 [ %63, %101 ], [ %112, %234 ]
  %109 = phi i16 [ %61, %101 ], [ %108, %234 ]
  %110 = phi i32 [ -1, %101 ], [ %236, %234 ]
  %111 = getelementptr inbounds i16, i16* %2, i64 %105
  %112 = load i16, i16* %111, align 2
  switch i16 %112, label %113 [
    i16 32, label %234
    i16 9, label %234
    i16 10, label %234
  ]

113:                                              ; preds = %104
  %114 = trunc i64 %105 to i32
  br i1 %107, label %249, label %115

115:                                              ; preds = %113
  %116 = zext i16 %108 to i64
  %117 = icmp eq i16 %108, 45
  %118 = add i16 %112, -48
  %119 = icmp ult i16 %118, 10
  %120 = and i1 %117, %119
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  %122 = add i16 %109, -48
  %123 = icmp ult i16 %122, 10
  br i1 %123, label %243, label %143

124:                                              ; preds = %115
  %125 = add i16 %108, -33
  %126 = icmp ult i16 %125, 95
  %127 = add i16 %112, -33
  %128 = icmp ult i16 %127, 95
  %129 = and i1 %126, %128
  br i1 %129, label %130, label %147

130:                                              ; preds = %124
  %131 = zext i16 %112 to i32
  %132 = add nsw i64 %116, -33
  %133 = add nsw i32 %131, -33
  %134 = sdiv i32 %133, 8
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %132, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = and i32 %133, 7
  %140 = shl i32 1, %139
  %141 = and i32 %140, %138
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %147, label %241

143:                                              ; preds = %121
  %144 = or i16 %109, 32
  %145 = add i16 %144, -97
  %146 = icmp ult i16 %145, 26
  br i1 %146, label %247, label %147

147:                                              ; preds = %130, %124, %143
  %148 = and i16 %112, -1024
  %149 = icmp eq i16 %148, -10240
  br i1 %149, label %194, label %150

150:                                              ; preds = %147
  %151 = zext i16 %112 to i32
  %152 = icmp eq i16 %112, 43
  br i1 %152, label %167, label %153

153:                                              ; preds = %150
  %154 = zext i16 %108 to i32
  %155 = and i32 %154, 64512
  %156 = icmp eq i32 %155, 55296
  %157 = and i32 %151, 64512
  %158 = icmp eq i32 %157, 56320
  %159 = and i1 %156, %158
  br i1 %159, label %160, label %164

160:                                              ; preds = %153
  %161 = shl nuw nsw i32 %154, 10
  %162 = add nsw i32 %161, -56613888
  %163 = add nsw i32 %162, %151
  br label %164

164:                                              ; preds = %160, %153
  %165 = phi i32 [ %163, %160 ], [ %151, %153 ]
  %166 = call i32 @u_getIntPropertyValue_69(i32 %165, i32 4104) #9
  br label %167

167:                                              ; preds = %150, %164
  %168 = phi i32 [ %166, %164 ], [ 2, %150 ]
  %169 = icmp ult i32 %168, 40
  %170 = icmp ult i32 %106, 40
  %171 = and i1 %170, %169
  br i1 %171, label %172, label %184

172:                                              ; preds = %167
  %173 = zext i32 %106 to i64
  %174 = lshr i32 %168, 3
  %175 = and i32 %174, 31
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds [40 x [6 x i8]], [40 x [6 x i8]]* @_ZN5blinkL28kBreakAllLineBreakClassTableE, i64 0, i64 %173, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = and i32 %168, 7
  %181 = shl i32 1, %180
  %182 = and i32 %181, %179
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %187

184:                                              ; preds = %172, %167
  %185 = icmp eq i32 %168, 9
  %186 = select i1 %185, i32 %106, i32 %168
  br label %194

187:                                              ; preds = %172
  %188 = trunc i64 %105 to i32
  %189 = icmp sgt i32 %188, %1
  %190 = icmp eq i16 %148, -9216
  %191 = and i1 %189, %190
  %192 = zext i1 %191 to i32
  %193 = sub i32 %188, %192
  br label %251

194:                                              ; preds = %184, %147
  %195 = phi i32 [ %106, %147 ], [ %186, %184 ]
  %196 = icmp ugt i16 %112, 127
  %197 = icmp ne i16 %112, 160
  %198 = and i1 %196, %197
  br i1 %198, label %203, label %199

199:                                              ; preds = %194
  %200 = icmp ugt i16 %108, 127
  %201 = icmp ne i16 %108, 160
  %202 = and i1 %200, %201
  br i1 %202, label %203, label %234

203:                                              ; preds = %199, %194
  %204 = sext i32 %110 to i64
  %205 = icmp sgt i64 %105, %204
  br i1 %205, label %206, label %231

206:                                              ; preds = %203
  %207 = load i32, i32* %86, align 8
  %208 = or i32 %207, %114
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %231, label %210

210:                                              ; preds = %206
  %211 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %212 = icmp eq %"class.icu_69::BreakIterator"* %211, null
  br i1 %212, label %231, label %213

213:                                              ; preds = %210
  %214 = load i32, i32* %86, align 8
  %215 = trunc i64 %105 to i32
  %216 = add i32 %215, -1
  %217 = add i32 %216, %214
  %218 = load i32, i32* %102, align 8
  %219 = sub i32 %217, %218
  %220 = bitcast %"class.icu_69::BreakIterator"* %211 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %221 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %220, align 8
  %222 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %221, i64 15
  %223 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %222, align 8
  %224 = call i32 %223(%"class.icu_69::BreakIterator"* nonnull %211, i32 %219) #9
  %225 = icmp sgt i32 %224, -1
  br i1 %225, label %226, label %231

226:                                              ; preds = %213
  %227 = load i32, i32* %102, align 8
  %228 = add i32 %227, %224
  %229 = load i32, i32* %86, align 8
  %230 = sub i32 %228, %229
  br label %231

231:                                              ; preds = %226, %213, %210, %206, %203
  %232 = phi i32 [ %110, %203 ], [ %110, %206 ], [ %230, %226 ], [ %224, %213 ], [ %110, %210 ]
  %233 = icmp eq i32 %232, %114
  br i1 %233, label %245, label %234

234:                                              ; preds = %104, %104, %104, %199, %231
  %235 = phi i1 [ false, %231 ], [ false, %199 ], [ true, %104 ], [ true, %104 ], [ true, %104 ]
  %236 = phi i32 [ %232, %231 ], [ %110, %199 ], [ %110, %104 ], [ %110, %104 ], [ %110, %104 ]
  %237 = phi i32 [ %195, %231 ], [ %195, %199 ], [ %106, %104 ], [ %106, %104 ], [ %106, %104 ]
  %238 = add nsw i64 %105, 1
  %239 = trunc i64 %238 to i32
  %240 = icmp eq i32 %239, %3
  br i1 %240, label %251, label %104

241:                                              ; preds = %130
  %242 = trunc i64 %105 to i32
  br label %251

243:                                              ; preds = %121
  %244 = trunc i64 %105 to i32
  br label %251

245:                                              ; preds = %231
  %246 = trunc i64 %105 to i32
  br label %251

247:                                              ; preds = %143
  %248 = trunc i64 %105 to i32
  br label %251

249:                                              ; preds = %113
  %250 = trunc i64 %105 to i32
  br label %251

251:                                              ; preds = %234, %241, %243, %245, %247, %249, %97, %187
  %252 = phi i32 [ %193, %187 ], [ %3, %97 ], [ %242, %241 ], [ %244, %243 ], [ %246, %245 ], [ %248, %247 ], [ %250, %249 ], [ %3, %234 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #9
  ret i32 %252
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE1ELNS_14BreakSpaceTypeE3EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i16*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %2, i64 %46
  %48 = load i16, i16* %47, align 2
  br label %53

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %51 = load i16, i16* %50, align 8
  %52 = icmp eq i32 %1, 1
  br i1 %52, label %53, label %58

53:                                               ; preds = %44, %49
  %54 = phi i16 [ %48, %44 ], [ %51, %49 ]
  %55 = add nsw i32 %1, -1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %2, i64 %56
  br label %60

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i16 [ %54, %53 ], [ %51, %58 ]
  %62 = phi i16* [ %57, %53 ], [ %59, %58 ]
  %63 = load i16, i16* %62, align 2
  switch i16 %63, label %64 [
    i16 32, label %65
    i16 9, label %65
    i16 10, label %65
    i16 43, label %81
  ]

64:                                               ; preds = %60
  br label %65

65:                                               ; preds = %60, %60, %60, %64
  %66 = phi i1 [ true, %60 ], [ true, %60 ], [ true, %60 ], [ false, %64 ]
  %67 = zext i16 %63 to i32
  %68 = zext i16 %61 to i32
  %69 = and i32 %68, 64512
  %70 = icmp eq i32 %69, 55296
  %71 = and i32 %67, 64512
  %72 = icmp eq i32 %71, 56320
  %73 = and i1 %70, %72
  br i1 %73, label %74, label %78

74:                                               ; preds = %65
  %75 = shl nuw nsw i32 %68, 10
  %76 = add nsw i32 %75, -56613888
  %77 = add nsw i32 %76, %67
  br label %78

78:                                               ; preds = %74, %65
  %79 = phi i32 [ %77, %74 ], [ %67, %65 ]
  %80 = call i32 @u_getIntPropertyValue_69(i32 %79, i32 4104) #9
  br label %81

81:                                               ; preds = %60, %78
  %82 = phi i1 [ %66, %78 ], [ false, %60 ]
  %83 = phi i32 [ %80, %78 ], [ 2, %60 ]
  %84 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #9
  %85 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %86 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %87 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %88 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 16, i1 false)
  %89 = load i16, i16* %87, align 2
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %93 = load i16, i16* %92, align 8
  %94 = icmp eq i16 %93, 0
  %95 = select i1 %94, i16* %87, i16* %92
  %96 = select i1 %94, i32 1, i32 2
  br label %97

97:                                               ; preds = %81, %91
  %98 = phi i16* [ %95, %91 ], [ null, %81 ]
  %99 = phi i32 [ %96, %91 ], [ 0, %81 ]
  store i16* %98, i16** %85, align 8
  store i32 %99, i32* %86, align 8
  %100 = icmp slt i32 %1, %3
  br i1 %100, label %101, label %270

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %103 = sext i32 %1 to i64
  %104 = sext i32 %3 to i64
  br label %105

105:                                              ; preds = %252, %101
  %106 = phi i64 [ %103, %101 ], [ %254, %252 ]
  %107 = phi i32 [ %1, %101 ], [ %255, %252 ]
  %108 = phi i32 [ %83, %101 ], [ %213, %252 ]
  %109 = phi i1 [ %82, %101 ], [ %123, %252 ]
  %110 = phi i16 [ %63, %101 ], [ %114, %252 ]
  %111 = phi i16 [ %61, %101 ], [ %110, %252 ]
  %112 = phi i32 [ -1, %101 ], [ %253, %252 ]
  %113 = getelementptr inbounds i16, i16* %2, i64 %106
  %114 = load i16, i16* %113, align 2
  %115 = add i16 %114, -9
  %116 = icmp ult i16 %115, 24
  br i1 %116, label %117, label %122

117:                                              ; preds = %105
  %118 = zext i16 %115 to i24
  %119 = lshr i24 -8388605, %118
  %120 = and i24 %119, 1
  %121 = icmp ne i24 %120, 0
  br label %122

122:                                              ; preds = %105, %117
  %123 = phi i1 [ %121, %117 ], [ false, %105 ]
  %124 = icmp eq i16 %110, 12288
  %125 = or i1 %109, %124
  %126 = trunc i64 %106 to i32
  br i1 %125, label %268, label %127

127:                                              ; preds = %122
  %128 = icmp eq i16 %114, 12288
  %129 = or i1 %128, %123
  %130 = add nsw i64 %106, 1
  %131 = icmp slt i64 %130, %104
  %132 = and i1 %129, %131
  br i1 %132, label %266, label %133

133:                                              ; preds = %127
  %134 = zext i16 %110 to i64
  %135 = icmp eq i16 %110, 45
  %136 = add i16 %114, -48
  %137 = icmp ult i16 %136, 10
  %138 = and i1 %135, %137
  br i1 %138, label %139, label %142

139:                                              ; preds = %133
  %140 = add i16 %111, -48
  %141 = icmp ult i16 %140, 10
  br i1 %141, label %260, label %161

142:                                              ; preds = %133
  %143 = add i16 %110, -33
  %144 = icmp ult i16 %143, 95
  %145 = add i16 %114, -33
  %146 = icmp ult i16 %145, 95
  %147 = and i1 %144, %146
  br i1 %147, label %148, label %165

148:                                              ; preds = %142
  %149 = zext i16 %114 to i32
  %150 = add nsw i64 %134, -33
  %151 = add nsw i32 %149, -33
  %152 = sdiv i32 %151, 8
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %150, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  %157 = and i32 %151, 7
  %158 = shl i32 1, %157
  %159 = and i32 %158, %156
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %165, label %258

161:                                              ; preds = %139
  %162 = or i16 %111, 32
  %163 = add i16 %162, -97
  %164 = icmp ult i16 %163, 26
  br i1 %164, label %264, label %165

165:                                              ; preds = %148, %142, %161
  %166 = and i16 %114, -1024
  %167 = icmp eq i16 %166, -10240
  br i1 %167, label %212, label %168

168:                                              ; preds = %165
  %169 = zext i16 %114 to i32
  %170 = icmp eq i16 %114, 43
  br i1 %170, label %185, label %171

171:                                              ; preds = %168
  %172 = zext i16 %110 to i32
  %173 = and i32 %172, 64512
  %174 = icmp eq i32 %173, 55296
  %175 = and i32 %169, 64512
  %176 = icmp eq i32 %175, 56320
  %177 = and i1 %174, %176
  br i1 %177, label %178, label %182

178:                                              ; preds = %171
  %179 = shl nuw nsw i32 %172, 10
  %180 = add nsw i32 %179, -56613888
  %181 = add nsw i32 %180, %169
  br label %182

182:                                              ; preds = %178, %171
  %183 = phi i32 [ %181, %178 ], [ %169, %171 ]
  %184 = call i32 @u_getIntPropertyValue_69(i32 %183, i32 4104) #9
  br label %185

185:                                              ; preds = %168, %182
  %186 = phi i32 [ %184, %182 ], [ 2, %168 ]
  %187 = icmp ult i32 %186, 40
  %188 = icmp ult i32 %108, 40
  %189 = and i1 %188, %187
  br i1 %189, label %190, label %202

190:                                              ; preds = %185
  %191 = zext i32 %108 to i64
  %192 = lshr i32 %186, 3
  %193 = and i32 %192, 31
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds [40 x [6 x i8]], [40 x [6 x i8]]* @_ZN5blinkL28kBreakAllLineBreakClassTableE, i64 0, i64 %191, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = and i32 %186, 7
  %199 = shl i32 1, %198
  %200 = and i32 %199, %197
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %190, %185
  %203 = icmp eq i32 %186, 9
  %204 = select i1 %203, i32 %108, i32 %186
  br label %212

205:                                              ; preds = %190
  %206 = trunc i64 %106 to i32
  %207 = icmp sgt i32 %206, %1
  %208 = icmp eq i16 %166, -9216
  %209 = and i1 %207, %208
  %210 = zext i1 %209 to i32
  %211 = sub i32 %206, %210
  br label %270

212:                                              ; preds = %202, %165
  %213 = phi i32 [ %108, %165 ], [ %204, %202 ]
  %214 = icmp ugt i16 %114, 127
  %215 = icmp ne i16 %114, 160
  %216 = and i1 %214, %215
  br i1 %216, label %221, label %217

217:                                              ; preds = %212
  %218 = icmp ugt i16 %110, 127
  %219 = icmp ne i16 %110, 160
  %220 = and i1 %218, %219
  br i1 %220, label %221, label %252

221:                                              ; preds = %217, %212
  %222 = sext i32 %112 to i64
  %223 = icmp sgt i64 %106, %222
  br i1 %223, label %224, label %249

224:                                              ; preds = %221
  %225 = load i32, i32* %86, align 8
  %226 = or i32 %225, %126
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %249, label %228

228:                                              ; preds = %224
  %229 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %230 = icmp eq %"class.icu_69::BreakIterator"* %229, null
  br i1 %230, label %249, label %231

231:                                              ; preds = %228
  %232 = load i32, i32* %86, align 8
  %233 = trunc i64 %106 to i32
  %234 = add i32 %233, -1
  %235 = add i32 %234, %232
  %236 = load i32, i32* %102, align 8
  %237 = sub i32 %235, %236
  %238 = bitcast %"class.icu_69::BreakIterator"* %229 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %239 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %238, align 8
  %240 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %239, i64 15
  %241 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %240, align 8
  %242 = call i32 %241(%"class.icu_69::BreakIterator"* nonnull %229, i32 %237) #9
  %243 = icmp sgt i32 %242, -1
  br i1 %243, label %244, label %249

244:                                              ; preds = %231
  %245 = load i32, i32* %102, align 8
  %246 = add i32 %245, %242
  %247 = load i32, i32* %86, align 8
  %248 = sub i32 %246, %247
  br label %249

249:                                              ; preds = %244, %231, %228, %224, %221
  %250 = phi i32 [ %112, %221 ], [ %112, %224 ], [ %248, %244 ], [ %242, %231 ], [ %112, %228 ]
  %251 = icmp eq i32 %250, %126
  br i1 %251, label %262, label %252

252:                                              ; preds = %217, %249
  %253 = phi i32 [ %250, %249 ], [ %112, %217 ]
  %254 = add nsw i64 %106, 1
  %255 = add nsw i32 %107, 1
  %256 = trunc i64 %254 to i32
  %257 = icmp eq i32 %256, %3
  br i1 %257, label %270, label %105

258:                                              ; preds = %148
  %259 = trunc i64 %106 to i32
  br label %270

260:                                              ; preds = %139
  %261 = trunc i64 %106 to i32
  br label %270

262:                                              ; preds = %249
  %263 = trunc i64 %106 to i32
  br label %270

264:                                              ; preds = %161
  %265 = trunc i64 %106 to i32
  br label %270

266:                                              ; preds = %127
  %267 = add nsw i32 %107, 1
  br label %270

268:                                              ; preds = %122
  %269 = trunc i64 %106 to i32
  br label %270

270:                                              ; preds = %252, %258, %260, %262, %264, %266, %268, %97, %205
  %271 = phi i32 [ %211, %205 ], [ %3, %97 ], [ %259, %258 ], [ %261, %260 ], [ %263, %262 ], [ %265, %264 ], [ %267, %266 ], [ %269, %268 ], [ %3, %252 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #9
  ret i32 %271
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i8*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  br label %54

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %52 = load i16, i16* %51, align 8
  %53 = icmp eq i32 %1, 1
  br i1 %53, label %54, label %61

54:                                               ; preds = %44, %50
  %55 = phi i16 [ %49, %44 ], [ %52, %50 ]
  %56 = add nsw i32 %1, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %2, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  br label %64

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %63 = load i16, i16* %62, align 2
  br label %64

64:                                               ; preds = %61, %54
  %65 = phi i16 [ %55, %54 ], [ %52, %61 ]
  %66 = phi i16 [ %60, %54 ], [ %63, %61 ]
  %67 = add i16 %66, -9
  %68 = icmp ult i16 %67, 24
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = zext i16 %67 to i24
  %71 = lshr i24 -8388605, %70
  %72 = and i24 %71, 1
  %73 = icmp ne i24 %72, 0
  br label %74

74:                                               ; preds = %64, %69
  %75 = phi i1 [ %73, %69 ], [ false, %64 ]
  %76 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #9
  %77 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %78 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %79 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %80 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 16, i1 false)
  %81 = load i16, i16* %79, align 2
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %85 = load i16, i16* %84, align 8
  %86 = icmp eq i16 %85, 0
  %87 = select i1 %86, i16* %79, i16* %84
  %88 = select i1 %86, i32 1, i32 2
  br label %89

89:                                               ; preds = %74, %83
  %90 = phi i16* [ %87, %83 ], [ null, %74 ]
  %91 = phi i32 [ %88, %83 ], [ 0, %74 ]
  store i16* %90, i16** %77, align 8
  store i32 %91, i32* %78, align 8
  %92 = icmp slt i32 %1, %3
  br i1 %92, label %93, label %220

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %95 = sext i32 %1 to i64
  br label %96

96:                                               ; preds = %205, %93
  %97 = phi i64 [ %95, %93 ], [ %207, %205 ]
  %98 = phi i1 [ %75, %93 ], [ false, %205 ]
  %99 = phi i16 [ %66, %93 ], [ %104, %205 ]
  %100 = phi i16 [ %65, %93 ], [ %99, %205 ]
  %101 = phi i32 [ -1, %93 ], [ %206, %205 ]
  %102 = getelementptr inbounds i8, i8* %2, i64 %97
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i16
  %105 = trunc i64 %97 to i32
  switch i8 %103, label %106 [
    i8 32, label %214
    i8 9, label %214
    i8 10, label %214
  ]

106:                                              ; preds = %96
  %107 = zext i16 %99 to i64
  %108 = icmp eq i16 %99, 45
  %109 = add nsw i16 %104, -48
  %110 = icmp ult i16 %109, 10
  %111 = and i1 %108, %110
  br i1 %111, label %112, label %115

112:                                              ; preds = %106
  %113 = add i16 %100, -48
  %114 = icmp ult i16 %113, 10
  br i1 %114, label %212, label %134

115:                                              ; preds = %106
  %116 = add i16 %99, -33
  %117 = icmp ult i16 %116, 95
  %118 = add nsw i16 %104, -33
  %119 = icmp ult i16 %118, 95
  %120 = and i1 %117, %119
  br i1 %120, label %121, label %138

121:                                              ; preds = %115
  %122 = zext i8 %103 to i32
  %123 = add nsw i64 %107, -33
  %124 = add nsw i32 %122, -33
  %125 = sdiv i32 %124, 8
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %123, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = and i32 %124, 7
  %131 = shl i32 1, %130
  %132 = and i32 %131, %129
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %138, label %210

134:                                              ; preds = %112
  %135 = or i16 %100, 32
  %136 = add i16 %135, -97
  %137 = icmp ult i16 %136, 26
  br i1 %137, label %218, label %138

138:                                              ; preds = %121, %115, %134
  %139 = zext i16 %99 to i32
  %140 = call signext i8 @u_charType_69(i32 %139) #9
  %141 = sext i8 %140 to i32
  %142 = shl i32 1, %141
  %143 = and i32 %142, 448
  %144 = icmp eq i32 %143, 0
  %145 = select i1 %144, i16 %99, i16 %100
  %146 = zext i16 %145 to i32
  %147 = call signext i8 @u_charType_69(i32 %146) #9
  %148 = sext i8 %147 to i32
  %149 = shl i32 1, %148
  %150 = and i32 %149, 3646
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %165, label %152

152:                                              ; preds = %138
  %153 = call i32 @u_getIntPropertyValue_69(i32 %146, i32 4104) #9
  %154 = icmp eq i32 %153, 24
  br i1 %154, label %165, label %155

155:                                              ; preds = %152
  %156 = zext i8 %103 to i32
  %157 = call signext i8 @u_charType_69(i32 %156) #9
  %158 = sext i8 %157 to i32
  %159 = shl i32 1, %158
  %160 = and i32 %159, 3646
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %165, label %162

162:                                              ; preds = %155
  %163 = call i32 @u_getIntPropertyValue_69(i32 %156, i32 4104) #9
  %164 = icmp eq i32 %163, 24
  br i1 %164, label %165, label %205

165:                                              ; preds = %162, %138, %152, %155
  %166 = icmp slt i8 %103, 0
  %167 = icmp ne i8 %103, -96
  %168 = and i1 %166, %167
  br i1 %168, label %173, label %169

169:                                              ; preds = %165
  %170 = icmp ugt i16 %99, 127
  %171 = icmp ne i16 %99, 160
  %172 = and i1 %170, %171
  br i1 %172, label %173, label %205

173:                                              ; preds = %169, %165
  %174 = sext i32 %101 to i64
  %175 = icmp sgt i64 %97, %174
  br i1 %175, label %176, label %201

176:                                              ; preds = %173
  %177 = load i32, i32* %78, align 8
  %178 = or i32 %177, %105
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %201, label %180

180:                                              ; preds = %176
  %181 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %182 = icmp eq %"class.icu_69::BreakIterator"* %181, null
  br i1 %182, label %201, label %183

183:                                              ; preds = %180
  %184 = load i32, i32* %78, align 8
  %185 = trunc i64 %97 to i32
  %186 = add i32 %185, -1
  %187 = add i32 %186, %184
  %188 = load i32, i32* %94, align 8
  %189 = sub i32 %187, %188
  %190 = bitcast %"class.icu_69::BreakIterator"* %181 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %191 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %190, align 8
  %192 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %191, i64 15
  %193 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %192, align 8
  %194 = call i32 %193(%"class.icu_69::BreakIterator"* nonnull %181, i32 %189) #9
  %195 = icmp sgt i32 %194, -1
  br i1 %195, label %196, label %201

196:                                              ; preds = %183
  %197 = load i32, i32* %94, align 8
  %198 = add i32 %197, %194
  %199 = load i32, i32* %78, align 8
  %200 = sub i32 %198, %199
  br label %201

201:                                              ; preds = %196, %183, %180, %176, %173
  %202 = phi i32 [ %101, %173 ], [ %101, %176 ], [ %200, %196 ], [ %194, %183 ], [ %101, %180 ]
  %203 = icmp ne i32 %202, %105
  %204 = or i1 %98, %203
  br i1 %204, label %205, label %216

205:                                              ; preds = %162, %201, %169
  %206 = phi i32 [ %101, %162 ], [ %202, %201 ], [ %101, %169 ]
  %207 = add nsw i64 %97, 1
  %208 = trunc i64 %207 to i32
  %209 = icmp eq i32 %208, %3
  br i1 %209, label %220, label %96

210:                                              ; preds = %121
  %211 = trunc i64 %97 to i32
  br label %220

212:                                              ; preds = %112
  %213 = trunc i64 %97 to i32
  br label %220

214:                                              ; preds = %96, %96, %96
  %215 = trunc i64 %97 to i32
  br label %220

216:                                              ; preds = %201
  %217 = trunc i64 %97 to i32
  br label %220

218:                                              ; preds = %134
  %219 = trunc i64 %97 to i32
  br label %220

220:                                              ; preds = %205, %210, %212, %214, %216, %218, %89
  %221 = phi i32 [ %3, %89 ], [ %211, %210 ], [ %213, %212 ], [ %215, %214 ], [ %217, %216 ], [ %219, %218 ], [ %3, %205 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #9
  ret i32 %221
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE1EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i8*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  br label %54

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %52 = load i16, i16* %51, align 8
  %53 = icmp eq i32 %1, 1
  br i1 %53, label %54, label %61

54:                                               ; preds = %44, %50
  %55 = phi i16 [ %49, %44 ], [ %52, %50 ]
  %56 = add nsw i32 %1, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %2, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  br label %64

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %63 = load i16, i16* %62, align 2
  br label %64

64:                                               ; preds = %61, %54
  %65 = phi i16 [ %55, %54 ], [ %52, %61 ]
  %66 = phi i16 [ %60, %54 ], [ %63, %61 ]
  %67 = add i16 %66, -9
  %68 = icmp ult i16 %67, 24
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = zext i16 %67 to i24
  %71 = lshr i24 -8388605, %70
  %72 = and i24 %71, 1
  %73 = icmp ne i24 %72, 0
  br label %74

74:                                               ; preds = %64, %69
  %75 = phi i1 [ %73, %69 ], [ false, %64 ]
  %76 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #9
  %77 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %78 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %79 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %80 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 16, i1 false)
  %81 = load i16, i16* %79, align 2
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %85 = load i16, i16* %84, align 8
  %86 = icmp eq i16 %85, 0
  %87 = select i1 %86, i16* %79, i16* %84
  %88 = select i1 %86, i32 1, i32 2
  br label %89

89:                                               ; preds = %74, %83
  %90 = phi i16* [ %87, %83 ], [ null, %74 ]
  %91 = phi i32 [ %88, %83 ], [ 0, %74 ]
  store i16* %90, i16** %77, align 8
  store i32 %91, i32* %78, align 8
  %92 = icmp slt i32 %1, %3
  br i1 %92, label %93, label %222

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %95 = sext i32 %1 to i64
  br label %96

96:                                               ; preds = %206, %93
  %97 = phi i64 [ %95, %93 ], [ %209, %206 ]
  %98 = phi i1 [ %75, %93 ], [ %207, %206 ]
  %99 = phi i16 [ %66, %93 ], [ %104, %206 ]
  %100 = phi i16 [ %65, %93 ], [ %99, %206 ]
  %101 = phi i32 [ -1, %93 ], [ %208, %206 ]
  %102 = getelementptr inbounds i8, i8* %2, i64 %97
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i16
  %105 = trunc i64 %97 to i32
  switch i8 %103, label %107 [
    i8 32, label %106
    i8 9, label %106
    i8 10, label %106
  ]

106:                                              ; preds = %96, %96, %96
  br i1 %98, label %206, label %220

107:                                              ; preds = %96
  %108 = zext i16 %99 to i64
  %109 = icmp eq i16 %99, 45
  %110 = add nsw i16 %104, -48
  %111 = icmp ult i16 %110, 10
  %112 = and i1 %109, %111
  br i1 %112, label %113, label %116

113:                                              ; preds = %107
  %114 = add i16 %100, -48
  %115 = icmp ult i16 %114, 10
  br i1 %115, label %214, label %135

116:                                              ; preds = %107
  %117 = add i16 %99, -33
  %118 = icmp ult i16 %117, 95
  %119 = add nsw i16 %104, -33
  %120 = icmp ult i16 %119, 95
  %121 = and i1 %118, %120
  br i1 %121, label %122, label %139

122:                                              ; preds = %116
  %123 = zext i8 %103 to i32
  %124 = add nsw i64 %108, -33
  %125 = add nsw i32 %123, -33
  %126 = sdiv i32 %125, 8
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %124, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = and i32 %125, 7
  %132 = shl i32 1, %131
  %133 = and i32 %132, %130
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %139, label %212

135:                                              ; preds = %113
  %136 = or i16 %100, 32
  %137 = add i16 %136, -97
  %138 = icmp ult i16 %137, 26
  br i1 %138, label %218, label %139

139:                                              ; preds = %122, %116, %135
  %140 = zext i16 %99 to i32
  %141 = call signext i8 @u_charType_69(i32 %140) #9
  %142 = sext i8 %141 to i32
  %143 = shl i32 1, %142
  %144 = and i32 %143, 448
  %145 = icmp eq i32 %144, 0
  %146 = select i1 %145, i16 %99, i16 %100
  %147 = zext i16 %146 to i32
  %148 = call signext i8 @u_charType_69(i32 %147) #9
  %149 = sext i8 %148 to i32
  %150 = shl i32 1, %149
  %151 = and i32 %150, 3646
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %166, label %153

153:                                              ; preds = %139
  %154 = call i32 @u_getIntPropertyValue_69(i32 %147, i32 4104) #9
  %155 = icmp eq i32 %154, 24
  br i1 %155, label %166, label %156

156:                                              ; preds = %153
  %157 = zext i8 %103 to i32
  %158 = call signext i8 @u_charType_69(i32 %157) #9
  %159 = sext i8 %158 to i32
  %160 = shl i32 1, %159
  %161 = and i32 %160, 3646
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %166, label %163

163:                                              ; preds = %156
  %164 = call i32 @u_getIntPropertyValue_69(i32 %157, i32 4104) #9
  %165 = icmp eq i32 %164, 24
  br i1 %165, label %166, label %206

166:                                              ; preds = %163, %139, %153, %156
  %167 = icmp slt i8 %103, 0
  %168 = icmp ne i8 %103, -96
  %169 = and i1 %167, %168
  br i1 %169, label %174, label %170

170:                                              ; preds = %166
  %171 = icmp ugt i16 %99, 127
  %172 = icmp ne i16 %99, 160
  %173 = and i1 %171, %172
  br i1 %173, label %174, label %206

174:                                              ; preds = %170, %166
  %175 = sext i32 %101 to i64
  %176 = icmp sgt i64 %97, %175
  br i1 %176, label %177, label %202

177:                                              ; preds = %174
  %178 = load i32, i32* %78, align 8
  %179 = or i32 %178, %105
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %202, label %181

181:                                              ; preds = %177
  %182 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %183 = icmp eq %"class.icu_69::BreakIterator"* %182, null
  br i1 %183, label %202, label %184

184:                                              ; preds = %181
  %185 = load i32, i32* %78, align 8
  %186 = trunc i64 %97 to i32
  %187 = add i32 %186, -1
  %188 = add i32 %187, %185
  %189 = load i32, i32* %94, align 8
  %190 = sub i32 %188, %189
  %191 = bitcast %"class.icu_69::BreakIterator"* %182 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %192 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %191, align 8
  %193 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %192, i64 15
  %194 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %193, align 8
  %195 = call i32 %194(%"class.icu_69::BreakIterator"* nonnull %182, i32 %190) #9
  %196 = icmp sgt i32 %195, -1
  br i1 %196, label %197, label %202

197:                                              ; preds = %184
  %198 = load i32, i32* %94, align 8
  %199 = add i32 %198, %195
  %200 = load i32, i32* %78, align 8
  %201 = sub i32 %199, %200
  br label %202

202:                                              ; preds = %197, %184, %181, %177, %174
  %203 = phi i32 [ %101, %174 ], [ %101, %177 ], [ %201, %197 ], [ %195, %184 ], [ %101, %181 ]
  %204 = icmp ne i32 %203, %105
  %205 = or i1 %98, %204
  br i1 %205, label %206, label %216

206:                                              ; preds = %163, %202, %170, %106
  %207 = phi i1 [ true, %106 ], [ false, %163 ], [ false, %202 ], [ false, %170 ]
  %208 = phi i32 [ %101, %106 ], [ %101, %163 ], [ %203, %202 ], [ %101, %170 ]
  %209 = add nsw i64 %97, 1
  %210 = trunc i64 %209 to i32
  %211 = icmp eq i32 %210, %3
  br i1 %211, label %222, label %96

212:                                              ; preds = %122
  %213 = trunc i64 %97 to i32
  br label %222

214:                                              ; preds = %113
  %215 = trunc i64 %97 to i32
  br label %222

216:                                              ; preds = %202
  %217 = trunc i64 %97 to i32
  br label %222

218:                                              ; preds = %135
  %219 = trunc i64 %97 to i32
  br label %222

220:                                              ; preds = %106
  %221 = trunc i64 %97 to i32
  br label %222

222:                                              ; preds = %206, %212, %214, %216, %218, %220, %89
  %223 = phi i32 [ %3, %89 ], [ %213, %212 ], [ %215, %214 ], [ %217, %216 ], [ %219, %218 ], [ %221, %220 ], [ %3, %206 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #9
  ret i32 %223
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE2EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i8*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  br label %54

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %52 = load i16, i16* %51, align 8
  %53 = icmp eq i32 %1, 1
  br i1 %53, label %54, label %61

54:                                               ; preds = %44, %50
  %55 = phi i16 [ %49, %44 ], [ %52, %50 ]
  %56 = add nsw i32 %1, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %2, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  br label %64

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %63 = load i16, i16* %62, align 2
  br label %64

64:                                               ; preds = %61, %54
  %65 = phi i16 [ %55, %54 ], [ %52, %61 ]
  %66 = phi i16 [ %60, %54 ], [ %63, %61 ]
  %67 = add i16 %66, -9
  %68 = icmp ult i16 %67, 24
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = zext i16 %67 to i24
  %71 = lshr i24 -8388605, %70
  %72 = and i24 %71, 1
  %73 = icmp ne i24 %72, 0
  br label %74

74:                                               ; preds = %64, %69
  %75 = phi i1 [ %73, %69 ], [ false, %64 ]
  %76 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #9
  %77 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %78 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %79 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %80 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 16, i1 false)
  %81 = load i16, i16* %79, align 2
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %85 = load i16, i16* %84, align 8
  %86 = icmp eq i16 %85, 0
  %87 = select i1 %86, i16* %79, i16* %84
  %88 = select i1 %86, i32 1, i32 2
  br label %89

89:                                               ; preds = %74, %83
  %90 = phi i16* [ %87, %83 ], [ null, %74 ]
  %91 = phi i32 [ %88, %83 ], [ 0, %74 ]
  store i16* %90, i16** %77, align 8
  store i32 %91, i32* %78, align 8
  %92 = icmp slt i32 %1, %3
  br i1 %92, label %93, label %221

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %95 = sext i32 %1 to i64
  br label %96

96:                                               ; preds = %205, %93
  %97 = phi i64 [ %95, %93 ], [ %208, %205 ]
  %98 = phi i1 [ %75, %93 ], [ %206, %205 ]
  %99 = phi i16 [ %66, %93 ], [ %104, %205 ]
  %100 = phi i16 [ %65, %93 ], [ %99, %205 ]
  %101 = phi i32 [ -1, %93 ], [ %207, %205 ]
  %102 = getelementptr inbounds i8, i8* %2, i64 %97
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i16
  switch i8 %103, label %105 [
    i8 32, label %205
    i8 9, label %205
    i8 10, label %205
  ]

105:                                              ; preds = %96
  %106 = trunc i64 %97 to i32
  br i1 %98, label %219, label %107

107:                                              ; preds = %105
  %108 = zext i16 %99 to i64
  %109 = icmp eq i16 %99, 45
  %110 = add nsw i16 %104, -48
  %111 = icmp ult i16 %110, 10
  %112 = and i1 %109, %111
  br i1 %112, label %113, label %116

113:                                              ; preds = %107
  %114 = add i16 %100, -48
  %115 = icmp ult i16 %114, 10
  br i1 %115, label %213, label %135

116:                                              ; preds = %107
  %117 = add i16 %99, -33
  %118 = icmp ult i16 %117, 95
  %119 = add nsw i16 %104, -33
  %120 = icmp ult i16 %119, 95
  %121 = and i1 %118, %120
  br i1 %121, label %122, label %139

122:                                              ; preds = %116
  %123 = zext i8 %103 to i32
  %124 = add nsw i64 %108, -33
  %125 = add nsw i32 %123, -33
  %126 = sdiv i32 %125, 8
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %124, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = and i32 %125, 7
  %132 = shl i32 1, %131
  %133 = and i32 %132, %130
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %139, label %211

135:                                              ; preds = %113
  %136 = or i16 %100, 32
  %137 = add i16 %136, -97
  %138 = icmp ult i16 %137, 26
  br i1 %138, label %217, label %139

139:                                              ; preds = %122, %116, %135
  %140 = zext i16 %99 to i32
  %141 = call signext i8 @u_charType_69(i32 %140) #9
  %142 = sext i8 %141 to i32
  %143 = shl i32 1, %142
  %144 = and i32 %143, 448
  %145 = icmp eq i32 %144, 0
  %146 = select i1 %145, i16 %99, i16 %100
  %147 = zext i16 %146 to i32
  %148 = call signext i8 @u_charType_69(i32 %147) #9
  %149 = sext i8 %148 to i32
  %150 = shl i32 1, %149
  %151 = and i32 %150, 3646
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %166, label %153

153:                                              ; preds = %139
  %154 = call i32 @u_getIntPropertyValue_69(i32 %147, i32 4104) #9
  %155 = icmp eq i32 %154, 24
  br i1 %155, label %166, label %156

156:                                              ; preds = %153
  %157 = zext i8 %103 to i32
  %158 = call signext i8 @u_charType_69(i32 %157) #9
  %159 = sext i8 %158 to i32
  %160 = shl i32 1, %159
  %161 = and i32 %160, 3646
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %166, label %163

163:                                              ; preds = %156
  %164 = call i32 @u_getIntPropertyValue_69(i32 %157, i32 4104) #9
  %165 = icmp eq i32 %164, 24
  br i1 %165, label %166, label %205

166:                                              ; preds = %163, %139, %153, %156
  %167 = icmp slt i8 %103, 0
  %168 = icmp ne i8 %103, -96
  %169 = and i1 %167, %168
  br i1 %169, label %174, label %170

170:                                              ; preds = %166
  %171 = icmp ugt i16 %99, 127
  %172 = icmp ne i16 %99, 160
  %173 = and i1 %171, %172
  br i1 %173, label %174, label %205

174:                                              ; preds = %170, %166
  %175 = sext i32 %101 to i64
  %176 = icmp sgt i64 %97, %175
  br i1 %176, label %177, label %202

177:                                              ; preds = %174
  %178 = load i32, i32* %78, align 8
  %179 = or i32 %178, %106
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %202, label %181

181:                                              ; preds = %177
  %182 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %183 = icmp eq %"class.icu_69::BreakIterator"* %182, null
  br i1 %183, label %202, label %184

184:                                              ; preds = %181
  %185 = load i32, i32* %78, align 8
  %186 = trunc i64 %97 to i32
  %187 = add i32 %186, -1
  %188 = add i32 %187, %185
  %189 = load i32, i32* %94, align 8
  %190 = sub i32 %188, %189
  %191 = bitcast %"class.icu_69::BreakIterator"* %182 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %192 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %191, align 8
  %193 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %192, i64 15
  %194 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %193, align 8
  %195 = call i32 %194(%"class.icu_69::BreakIterator"* nonnull %182, i32 %190) #9
  %196 = icmp sgt i32 %195, -1
  br i1 %196, label %197, label %202

197:                                              ; preds = %184
  %198 = load i32, i32* %94, align 8
  %199 = add i32 %198, %195
  %200 = load i32, i32* %78, align 8
  %201 = sub i32 %199, %200
  br label %202

202:                                              ; preds = %197, %184, %181, %177, %174
  %203 = phi i32 [ %101, %174 ], [ %101, %177 ], [ %201, %197 ], [ %195, %184 ], [ %101, %181 ]
  %204 = icmp eq i32 %203, %106
  br i1 %204, label %215, label %205

205:                                              ; preds = %163, %96, %96, %96, %170, %202
  %206 = phi i1 [ false, %163 ], [ false, %202 ], [ false, %170 ], [ true, %96 ], [ true, %96 ], [ true, %96 ]
  %207 = phi i32 [ %101, %163 ], [ %203, %202 ], [ %101, %170 ], [ %101, %96 ], [ %101, %96 ], [ %101, %96 ]
  %208 = add nsw i64 %97, 1
  %209 = trunc i64 %208 to i32
  %210 = icmp eq i32 %209, %3
  br i1 %210, label %221, label %96

211:                                              ; preds = %122
  %212 = trunc i64 %97 to i32
  br label %221

213:                                              ; preds = %113
  %214 = trunc i64 %97 to i32
  br label %221

215:                                              ; preds = %202
  %216 = trunc i64 %97 to i32
  br label %221

217:                                              ; preds = %135
  %218 = trunc i64 %97 to i32
  br label %221

219:                                              ; preds = %105
  %220 = trunc i64 %97 to i32
  br label %221

221:                                              ; preds = %205, %211, %213, %215, %217, %219, %89
  %222 = phi i32 [ %3, %89 ], [ %212, %211 ], [ %214, %213 ], [ %216, %215 ], [ %218, %217 ], [ %220, %219 ], [ %3, %205 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #9
  ret i32 %222
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIhLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE3EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i8*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  br label %54

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %52 = load i16, i16* %51, align 8
  %53 = icmp eq i32 %1, 1
  br i1 %53, label %54, label %61

54:                                               ; preds = %44, %50
  %55 = phi i16 [ %49, %44 ], [ %52, %50 ]
  %56 = add nsw i32 %1, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %2, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  br label %64

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %63 = load i16, i16* %62, align 2
  br label %64

64:                                               ; preds = %61, %54
  %65 = phi i16 [ %55, %54 ], [ %52, %61 ]
  %66 = phi i16 [ %60, %54 ], [ %63, %61 ]
  %67 = add i16 %66, -9
  %68 = icmp ult i16 %67, 24
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = zext i16 %67 to i24
  %71 = lshr i24 -8388605, %70
  %72 = and i24 %71, 1
  %73 = icmp ne i24 %72, 0
  br label %74

74:                                               ; preds = %64, %69
  %75 = phi i1 [ %73, %69 ], [ false, %64 ]
  %76 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #9
  %77 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %78 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %79 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %80 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 16, i1 false)
  %81 = load i16, i16* %79, align 2
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %85 = load i16, i16* %84, align 8
  %86 = icmp eq i16 %85, 0
  %87 = select i1 %86, i16* %79, i16* %84
  %88 = select i1 %86, i32 1, i32 2
  br label %89

89:                                               ; preds = %74, %83
  %90 = phi i16* [ %87, %83 ], [ null, %74 ]
  %91 = phi i32 [ %88, %83 ], [ 0, %74 ]
  store i16* %90, i16** %77, align 8
  store i32 %91, i32* %78, align 8
  %92 = icmp slt i32 %1, %3
  br i1 %92, label %93, label %239

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %95 = sext i32 %1 to i64
  %96 = sext i32 %3 to i64
  br label %97

97:                                               ; preds = %221, %93
  %98 = phi i64 [ %95, %93 ], [ %223, %221 ]
  %99 = phi i32 [ %1, %93 ], [ %224, %221 ]
  %100 = phi i1 [ %75, %93 ], [ %115, %221 ]
  %101 = phi i16 [ %66, %93 ], [ %106, %221 ]
  %102 = phi i16 [ %65, %93 ], [ %101, %221 ]
  %103 = phi i32 [ -1, %93 ], [ %222, %221 ]
  %104 = getelementptr inbounds i8, i8* %2, i64 %98
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i16
  %107 = add i8 %105, -9
  %108 = icmp ult i8 %107, 24
  br i1 %108, label %109, label %114

109:                                              ; preds = %97
  %110 = zext i8 %107 to i24
  %111 = lshr i24 -8388605, %110
  %112 = and i24 %111, 1
  %113 = icmp ne i24 %112, 0
  br label %114

114:                                              ; preds = %97, %109
  %115 = phi i1 [ %113, %109 ], [ false, %97 ]
  %116 = icmp eq i16 %101, 12288
  %117 = or i1 %100, %116
  %118 = trunc i64 %98 to i32
  br i1 %117, label %237, label %119

119:                                              ; preds = %114
  %120 = add nsw i64 %98, 1
  %121 = icmp slt i64 %120, %96
  %122 = and i1 %115, %121
  br i1 %122, label %235, label %123

123:                                              ; preds = %119
  %124 = zext i16 %101 to i64
  %125 = icmp eq i16 %101, 45
  %126 = add nsw i16 %106, -48
  %127 = icmp ult i16 %126, 10
  %128 = and i1 %125, %127
  br i1 %128, label %129, label %132

129:                                              ; preds = %123
  %130 = add i16 %102, -48
  %131 = icmp ult i16 %130, 10
  br i1 %131, label %229, label %151

132:                                              ; preds = %123
  %133 = add i16 %101, -33
  %134 = icmp ult i16 %133, 95
  %135 = add nsw i16 %106, -33
  %136 = icmp ult i16 %135, 95
  %137 = and i1 %134, %136
  br i1 %137, label %138, label %155

138:                                              ; preds = %132
  %139 = zext i8 %105 to i32
  %140 = add nsw i64 %124, -33
  %141 = add nsw i32 %139, -33
  %142 = sdiv i32 %141, 8
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %140, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = and i32 %141, 7
  %148 = shl i32 1, %147
  %149 = and i32 %148, %146
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %155, label %227

151:                                              ; preds = %129
  %152 = or i16 %102, 32
  %153 = add i16 %152, -97
  %154 = icmp ult i16 %153, 26
  br i1 %154, label %233, label %155

155:                                              ; preds = %138, %132, %151
  %156 = zext i16 %101 to i32
  %157 = call signext i8 @u_charType_69(i32 %156) #9
  %158 = sext i8 %157 to i32
  %159 = shl i32 1, %158
  %160 = and i32 %159, 448
  %161 = icmp eq i32 %160, 0
  %162 = select i1 %161, i16 %101, i16 %102
  %163 = zext i16 %162 to i32
  %164 = call signext i8 @u_charType_69(i32 %163) #9
  %165 = sext i8 %164 to i32
  %166 = shl i32 1, %165
  %167 = and i32 %166, 3646
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %182, label %169

169:                                              ; preds = %155
  %170 = call i32 @u_getIntPropertyValue_69(i32 %163, i32 4104) #9
  %171 = icmp eq i32 %170, 24
  br i1 %171, label %182, label %172

172:                                              ; preds = %169
  %173 = zext i8 %105 to i32
  %174 = call signext i8 @u_charType_69(i32 %173) #9
  %175 = sext i8 %174 to i32
  %176 = shl i32 1, %175
  %177 = and i32 %176, 3646
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %182, label %179

179:                                              ; preds = %172
  %180 = call i32 @u_getIntPropertyValue_69(i32 %173, i32 4104) #9
  %181 = icmp eq i32 %180, 24
  br i1 %181, label %182, label %221

182:                                              ; preds = %179, %155, %169, %172
  %183 = icmp slt i8 %105, 0
  %184 = icmp ne i8 %105, -96
  %185 = and i1 %183, %184
  br i1 %185, label %190, label %186

186:                                              ; preds = %182
  %187 = icmp ugt i16 %101, 127
  %188 = icmp ne i16 %101, 160
  %189 = and i1 %187, %188
  br i1 %189, label %190, label %221

190:                                              ; preds = %186, %182
  %191 = sext i32 %103 to i64
  %192 = icmp sgt i64 %98, %191
  br i1 %192, label %193, label %218

193:                                              ; preds = %190
  %194 = load i32, i32* %78, align 8
  %195 = or i32 %194, %118
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %218, label %197

197:                                              ; preds = %193
  %198 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %199 = icmp eq %"class.icu_69::BreakIterator"* %198, null
  br i1 %199, label %218, label %200

200:                                              ; preds = %197
  %201 = load i32, i32* %78, align 8
  %202 = trunc i64 %98 to i32
  %203 = add i32 %202, -1
  %204 = add i32 %203, %201
  %205 = load i32, i32* %94, align 8
  %206 = sub i32 %204, %205
  %207 = bitcast %"class.icu_69::BreakIterator"* %198 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %208 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %207, align 8
  %209 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %208, i64 15
  %210 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %209, align 8
  %211 = call i32 %210(%"class.icu_69::BreakIterator"* nonnull %198, i32 %206) #9
  %212 = icmp sgt i32 %211, -1
  br i1 %212, label %213, label %218

213:                                              ; preds = %200
  %214 = load i32, i32* %94, align 8
  %215 = add i32 %214, %211
  %216 = load i32, i32* %78, align 8
  %217 = sub i32 %215, %216
  br label %218

218:                                              ; preds = %213, %200, %197, %193, %190
  %219 = phi i32 [ %103, %190 ], [ %103, %193 ], [ %217, %213 ], [ %211, %200 ], [ %103, %197 ]
  %220 = icmp eq i32 %219, %118
  br i1 %220, label %231, label %221

221:                                              ; preds = %179, %186, %218
  %222 = phi i32 [ %103, %179 ], [ %219, %218 ], [ %103, %186 ]
  %223 = add nsw i64 %98, 1
  %224 = add nsw i32 %99, 1
  %225 = trunc i64 %223 to i32
  %226 = icmp eq i32 %225, %3
  br i1 %226, label %239, label %97

227:                                              ; preds = %138
  %228 = trunc i64 %98 to i32
  br label %239

229:                                              ; preds = %129
  %230 = trunc i64 %98 to i32
  br label %239

231:                                              ; preds = %218
  %232 = trunc i64 %98 to i32
  br label %239

233:                                              ; preds = %151
  %234 = trunc i64 %98 to i32
  br label %239

235:                                              ; preds = %119
  %236 = add nsw i32 %99, 1
  br label %239

237:                                              ; preds = %114
  %238 = trunc i64 %98 to i32
  br label %239

239:                                              ; preds = %221, %227, %229, %231, %233, %235, %237, %89
  %240 = phi i32 [ %3, %89 ], [ %228, %227 ], [ %230, %229 ], [ %232, %231 ], [ %234, %233 ], [ %236, %235 ], [ %238, %237 ], [ %3, %221 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #9
  ret i32 %240
}

declare signext i8 @u_charType_69(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE0EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i16*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %2, i64 %46
  %48 = load i16, i16* %47, align 2
  br label %53

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %51 = load i16, i16* %50, align 8
  %52 = icmp eq i32 %1, 1
  br i1 %52, label %53, label %58

53:                                               ; preds = %44, %49
  %54 = phi i16 [ %48, %44 ], [ %51, %49 ]
  %55 = add nsw i32 %1, -1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %2, i64 %56
  br label %60

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i16 [ %54, %53 ], [ %51, %58 ]
  %62 = phi i16* [ %57, %53 ], [ %59, %58 ]
  %63 = load i16, i16* %62, align 2
  %64 = add i16 %63, -9
  %65 = icmp ult i16 %64, 24
  br i1 %65, label %66, label %71

66:                                               ; preds = %60
  %67 = zext i16 %64 to i24
  %68 = lshr i24 -8388605, %67
  %69 = and i24 %68, 1
  %70 = icmp ne i24 %69, 0
  br label %71

71:                                               ; preds = %60, %66
  %72 = phi i1 [ %70, %66 ], [ false, %60 ]
  %73 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #9
  %74 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %75 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %76 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %77 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 16, i1 false)
  %78 = load i16, i16* %76, align 2
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %82 = load i16, i16* %81, align 8
  %83 = icmp eq i16 %82, 0
  %84 = select i1 %83, i16* %76, i16* %81
  %85 = select i1 %83, i32 1, i32 2
  br label %86

86:                                               ; preds = %71, %80
  %87 = phi i16* [ %84, %80 ], [ null, %71 ]
  %88 = phi i32 [ %85, %80 ], [ 0, %71 ]
  store i16* %87, i16** %74, align 8
  store i32 %88, i32* %75, align 8
  %89 = icmp slt i32 %1, %3
  br i1 %89, label %90, label %216

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %92 = sext i32 %1 to i64
  br label %93

93:                                               ; preds = %201, %90
  %94 = phi i64 [ %92, %90 ], [ %203, %201 ]
  %95 = phi i1 [ %72, %90 ], [ false, %201 ]
  %96 = phi i16 [ %63, %90 ], [ %100, %201 ]
  %97 = phi i16 [ %61, %90 ], [ %96, %201 ]
  %98 = phi i32 [ -1, %90 ], [ %202, %201 ]
  %99 = getelementptr inbounds i16, i16* %2, i64 %94
  %100 = load i16, i16* %99, align 2
  %101 = trunc i64 %94 to i32
  switch i16 %100, label %102 [
    i16 32, label %208
    i16 9, label %208
    i16 10, label %208
    i16 12288, label %208
  ]

102:                                              ; preds = %93
  %103 = zext i16 %96 to i64
  %104 = icmp eq i16 %96, 45
  %105 = add i16 %100, -48
  %106 = icmp ult i16 %105, 10
  %107 = and i1 %104, %106
  br i1 %107, label %108, label %111

108:                                              ; preds = %102
  %109 = add i16 %97, -48
  %110 = icmp ult i16 %109, 10
  br i1 %110, label %210, label %130

111:                                              ; preds = %102
  %112 = add i16 %96, -33
  %113 = icmp ult i16 %112, 95
  %114 = add i16 %100, -33
  %115 = icmp ult i16 %114, 95
  %116 = and i1 %113, %115
  br i1 %116, label %117, label %134

117:                                              ; preds = %111
  %118 = zext i16 %100 to i32
  %119 = add nsw i64 %103, -33
  %120 = add nsw i32 %118, -33
  %121 = sdiv i32 %120, 8
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %119, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = and i32 %120, 7
  %127 = shl i32 1, %126
  %128 = and i32 %127, %125
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %134, label %206

130:                                              ; preds = %108
  %131 = or i16 %97, 32
  %132 = add i16 %131, -97
  %133 = icmp ult i16 %132, 26
  br i1 %133, label %214, label %134

134:                                              ; preds = %117, %111, %130
  %135 = zext i16 %96 to i32
  %136 = call signext i8 @u_charType_69(i32 %135) #9
  %137 = sext i8 %136 to i32
  %138 = shl i32 1, %137
  %139 = and i32 %138, 448
  %140 = icmp eq i32 %139, 0
  %141 = select i1 %140, i16 %96, i16 %97
  %142 = zext i16 %141 to i32
  %143 = call signext i8 @u_charType_69(i32 %142) #9
  %144 = sext i8 %143 to i32
  %145 = shl i32 1, %144
  %146 = and i32 %145, 3646
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %161, label %148

148:                                              ; preds = %134
  %149 = call i32 @u_getIntPropertyValue_69(i32 %142, i32 4104) #9
  %150 = icmp eq i32 %149, 24
  br i1 %150, label %161, label %151

151:                                              ; preds = %148
  %152 = zext i16 %100 to i32
  %153 = call signext i8 @u_charType_69(i32 %152) #9
  %154 = sext i8 %153 to i32
  %155 = shl i32 1, %154
  %156 = and i32 %155, 3646
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %161, label %158

158:                                              ; preds = %151
  %159 = call i32 @u_getIntPropertyValue_69(i32 %152, i32 4104) #9
  %160 = icmp eq i32 %159, 24
  br i1 %160, label %161, label %201

161:                                              ; preds = %158, %134, %148, %151
  %162 = icmp ugt i16 %100, 127
  %163 = icmp ne i16 %100, 160
  %164 = and i1 %162, %163
  br i1 %164, label %169, label %165

165:                                              ; preds = %161
  %166 = icmp ugt i16 %96, 127
  %167 = icmp ne i16 %96, 160
  %168 = and i1 %166, %167
  br i1 %168, label %169, label %201

169:                                              ; preds = %165, %161
  %170 = sext i32 %98 to i64
  %171 = icmp sgt i64 %94, %170
  br i1 %171, label %172, label %197

172:                                              ; preds = %169
  %173 = load i32, i32* %75, align 8
  %174 = or i32 %173, %101
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %197, label %176

176:                                              ; preds = %172
  %177 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %178 = icmp eq %"class.icu_69::BreakIterator"* %177, null
  br i1 %178, label %197, label %179

179:                                              ; preds = %176
  %180 = load i32, i32* %75, align 8
  %181 = trunc i64 %94 to i32
  %182 = add i32 %181, -1
  %183 = add i32 %182, %180
  %184 = load i32, i32* %91, align 8
  %185 = sub i32 %183, %184
  %186 = bitcast %"class.icu_69::BreakIterator"* %177 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %187 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %186, align 8
  %188 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %187, i64 15
  %189 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %188, align 8
  %190 = call i32 %189(%"class.icu_69::BreakIterator"* nonnull %177, i32 %185) #9
  %191 = icmp sgt i32 %190, -1
  br i1 %191, label %192, label %197

192:                                              ; preds = %179
  %193 = load i32, i32* %91, align 8
  %194 = add i32 %193, %190
  %195 = load i32, i32* %75, align 8
  %196 = sub i32 %194, %195
  br label %197

197:                                              ; preds = %192, %179, %176, %172, %169
  %198 = phi i32 [ %98, %169 ], [ %98, %172 ], [ %196, %192 ], [ %190, %179 ], [ %98, %176 ]
  %199 = icmp ne i32 %198, %101
  %200 = or i1 %95, %199
  br i1 %200, label %201, label %212

201:                                              ; preds = %158, %197, %165
  %202 = phi i32 [ %98, %158 ], [ %198, %197 ], [ %98, %165 ]
  %203 = add nsw i64 %94, 1
  %204 = trunc i64 %203 to i32
  %205 = icmp eq i32 %204, %3
  br i1 %205, label %216, label %93

206:                                              ; preds = %117
  %207 = trunc i64 %94 to i32
  br label %216

208:                                              ; preds = %93, %93, %93, %93
  %209 = trunc i64 %94 to i32
  br label %216

210:                                              ; preds = %108
  %211 = trunc i64 %94 to i32
  br label %216

212:                                              ; preds = %197
  %213 = trunc i64 %94 to i32
  br label %216

214:                                              ; preds = %130
  %215 = trunc i64 %94 to i32
  br label %216

216:                                              ; preds = %201, %206, %208, %210, %212, %214, %86
  %217 = phi i32 [ %3, %86 ], [ %207, %206 ], [ %209, %208 ], [ %211, %210 ], [ %213, %212 ], [ %215, %214 ], [ %3, %201 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #9
  ret i32 %217
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE1EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i16*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %2, i64 %46
  %48 = load i16, i16* %47, align 2
  br label %53

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %51 = load i16, i16* %50, align 8
  %52 = icmp eq i32 %1, 1
  br i1 %52, label %53, label %58

53:                                               ; preds = %44, %49
  %54 = phi i16 [ %48, %44 ], [ %51, %49 ]
  %55 = add nsw i32 %1, -1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %2, i64 %56
  br label %60

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i16 [ %54, %53 ], [ %51, %58 ]
  %62 = phi i16* [ %57, %53 ], [ %59, %58 ]
  %63 = load i16, i16* %62, align 2
  %64 = add i16 %63, -9
  %65 = icmp ult i16 %64, 24
  br i1 %65, label %66, label %71

66:                                               ; preds = %60
  %67 = zext i16 %64 to i24
  %68 = lshr i24 -8388605, %67
  %69 = and i24 %68, 1
  %70 = icmp ne i24 %69, 0
  br label %71

71:                                               ; preds = %60, %66
  %72 = phi i1 [ %70, %66 ], [ false, %60 ]
  %73 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #9
  %74 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %75 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %76 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %77 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 16, i1 false)
  %78 = load i16, i16* %76, align 2
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %82 = load i16, i16* %81, align 8
  %83 = icmp eq i16 %82, 0
  %84 = select i1 %83, i16* %76, i16* %81
  %85 = select i1 %83, i32 1, i32 2
  br label %86

86:                                               ; preds = %71, %80
  %87 = phi i16* [ %84, %80 ], [ null, %71 ]
  %88 = phi i32 [ %85, %80 ], [ 0, %71 ]
  store i16* %87, i16** %74, align 8
  store i32 %88, i32* %75, align 8
  %89 = icmp slt i32 %1, %3
  br i1 %89, label %90, label %218

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %92 = sext i32 %1 to i64
  br label %93

93:                                               ; preds = %202, %90
  %94 = phi i64 [ %92, %90 ], [ %205, %202 ]
  %95 = phi i1 [ %72, %90 ], [ %203, %202 ]
  %96 = phi i16 [ %63, %90 ], [ %100, %202 ]
  %97 = phi i16 [ %61, %90 ], [ %96, %202 ]
  %98 = phi i32 [ -1, %90 ], [ %204, %202 ]
  %99 = getelementptr inbounds i16, i16* %2, i64 %94
  %100 = load i16, i16* %99, align 2
  %101 = trunc i64 %94 to i32
  switch i16 %100, label %103 [
    i16 32, label %102
    i16 9, label %102
    i16 10, label %102
  ]

102:                                              ; preds = %93, %93, %93
  br i1 %95, label %202, label %216

103:                                              ; preds = %93
  %104 = zext i16 %96 to i64
  %105 = icmp eq i16 %96, 45
  %106 = add i16 %100, -48
  %107 = icmp ult i16 %106, 10
  %108 = and i1 %105, %107
  br i1 %108, label %109, label %112

109:                                              ; preds = %103
  %110 = add i16 %97, -48
  %111 = icmp ult i16 %110, 10
  br i1 %111, label %210, label %131

112:                                              ; preds = %103
  %113 = add i16 %96, -33
  %114 = icmp ult i16 %113, 95
  %115 = add i16 %100, -33
  %116 = icmp ult i16 %115, 95
  %117 = and i1 %114, %116
  br i1 %117, label %118, label %135

118:                                              ; preds = %112
  %119 = zext i16 %100 to i32
  %120 = add nsw i64 %104, -33
  %121 = add nsw i32 %119, -33
  %122 = sdiv i32 %121, 8
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %120, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = and i32 %121, 7
  %128 = shl i32 1, %127
  %129 = and i32 %128, %126
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %135, label %208

131:                                              ; preds = %109
  %132 = or i16 %97, 32
  %133 = add i16 %132, -97
  %134 = icmp ult i16 %133, 26
  br i1 %134, label %214, label %135

135:                                              ; preds = %118, %112, %131
  %136 = zext i16 %96 to i32
  %137 = call signext i8 @u_charType_69(i32 %136) #9
  %138 = sext i8 %137 to i32
  %139 = shl i32 1, %138
  %140 = and i32 %139, 448
  %141 = icmp eq i32 %140, 0
  %142 = select i1 %141, i16 %96, i16 %97
  %143 = zext i16 %142 to i32
  %144 = call signext i8 @u_charType_69(i32 %143) #9
  %145 = sext i8 %144 to i32
  %146 = shl i32 1, %145
  %147 = and i32 %146, 3646
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %162, label %149

149:                                              ; preds = %135
  %150 = call i32 @u_getIntPropertyValue_69(i32 %143, i32 4104) #9
  %151 = icmp eq i32 %150, 24
  br i1 %151, label %162, label %152

152:                                              ; preds = %149
  %153 = zext i16 %100 to i32
  %154 = call signext i8 @u_charType_69(i32 %153) #9
  %155 = sext i8 %154 to i32
  %156 = shl i32 1, %155
  %157 = and i32 %156, 3646
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %162, label %159

159:                                              ; preds = %152
  %160 = call i32 @u_getIntPropertyValue_69(i32 %153, i32 4104) #9
  %161 = icmp eq i32 %160, 24
  br i1 %161, label %162, label %202

162:                                              ; preds = %159, %135, %149, %152
  %163 = icmp ugt i16 %100, 127
  %164 = icmp ne i16 %100, 160
  %165 = and i1 %163, %164
  br i1 %165, label %170, label %166

166:                                              ; preds = %162
  %167 = icmp ugt i16 %96, 127
  %168 = icmp ne i16 %96, 160
  %169 = and i1 %167, %168
  br i1 %169, label %170, label %202

170:                                              ; preds = %166, %162
  %171 = sext i32 %98 to i64
  %172 = icmp sgt i64 %94, %171
  br i1 %172, label %173, label %198

173:                                              ; preds = %170
  %174 = load i32, i32* %75, align 8
  %175 = or i32 %174, %101
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %198, label %177

177:                                              ; preds = %173
  %178 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %179 = icmp eq %"class.icu_69::BreakIterator"* %178, null
  br i1 %179, label %198, label %180

180:                                              ; preds = %177
  %181 = load i32, i32* %75, align 8
  %182 = trunc i64 %94 to i32
  %183 = add i32 %182, -1
  %184 = add i32 %183, %181
  %185 = load i32, i32* %91, align 8
  %186 = sub i32 %184, %185
  %187 = bitcast %"class.icu_69::BreakIterator"* %178 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %188 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %187, align 8
  %189 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %188, i64 15
  %190 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %189, align 8
  %191 = call i32 %190(%"class.icu_69::BreakIterator"* nonnull %178, i32 %186) #9
  %192 = icmp sgt i32 %191, -1
  br i1 %192, label %193, label %198

193:                                              ; preds = %180
  %194 = load i32, i32* %91, align 8
  %195 = add i32 %194, %191
  %196 = load i32, i32* %75, align 8
  %197 = sub i32 %195, %196
  br label %198

198:                                              ; preds = %193, %180, %177, %173, %170
  %199 = phi i32 [ %98, %170 ], [ %98, %173 ], [ %197, %193 ], [ %191, %180 ], [ %98, %177 ]
  %200 = icmp ne i32 %199, %101
  %201 = or i1 %95, %200
  br i1 %201, label %202, label %212

202:                                              ; preds = %159, %198, %166, %102
  %203 = phi i1 [ true, %102 ], [ false, %159 ], [ false, %198 ], [ false, %166 ]
  %204 = phi i32 [ %98, %102 ], [ %98, %159 ], [ %199, %198 ], [ %98, %166 ]
  %205 = add nsw i64 %94, 1
  %206 = trunc i64 %205 to i32
  %207 = icmp eq i32 %206, %3
  br i1 %207, label %218, label %93

208:                                              ; preds = %118
  %209 = trunc i64 %94 to i32
  br label %218

210:                                              ; preds = %109
  %211 = trunc i64 %94 to i32
  br label %218

212:                                              ; preds = %198
  %213 = trunc i64 %94 to i32
  br label %218

214:                                              ; preds = %131
  %215 = trunc i64 %94 to i32
  br label %218

216:                                              ; preds = %102
  %217 = trunc i64 %94 to i32
  br label %218

218:                                              ; preds = %202, %208, %210, %212, %214, %216, %86
  %219 = phi i32 [ %3, %86 ], [ %209, %208 ], [ %211, %210 ], [ %213, %212 ], [ %215, %214 ], [ %217, %216 ], [ %3, %202 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #9
  ret i32 %219
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE2EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i16*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %2, i64 %46
  %48 = load i16, i16* %47, align 2
  br label %53

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %51 = load i16, i16* %50, align 8
  %52 = icmp eq i32 %1, 1
  br i1 %52, label %53, label %58

53:                                               ; preds = %44, %49
  %54 = phi i16 [ %48, %44 ], [ %51, %49 ]
  %55 = add nsw i32 %1, -1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %2, i64 %56
  br label %60

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i16 [ %54, %53 ], [ %51, %58 ]
  %62 = phi i16* [ %57, %53 ], [ %59, %58 ]
  %63 = load i16, i16* %62, align 2
  %64 = add i16 %63, -9
  %65 = icmp ult i16 %64, 24
  br i1 %65, label %66, label %71

66:                                               ; preds = %60
  %67 = zext i16 %64 to i24
  %68 = lshr i24 -8388605, %67
  %69 = and i24 %68, 1
  %70 = icmp ne i24 %69, 0
  br label %71

71:                                               ; preds = %60, %66
  %72 = phi i1 [ %70, %66 ], [ false, %60 ]
  %73 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #9
  %74 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %75 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %76 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %77 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 16, i1 false)
  %78 = load i16, i16* %76, align 2
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %82 = load i16, i16* %81, align 8
  %83 = icmp eq i16 %82, 0
  %84 = select i1 %83, i16* %76, i16* %81
  %85 = select i1 %83, i32 1, i32 2
  br label %86

86:                                               ; preds = %71, %80
  %87 = phi i16* [ %84, %80 ], [ null, %71 ]
  %88 = phi i32 [ %85, %80 ], [ 0, %71 ]
  store i16* %87, i16** %74, align 8
  store i32 %88, i32* %75, align 8
  %89 = icmp slt i32 %1, %3
  br i1 %89, label %90, label %217

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %92 = sext i32 %1 to i64
  br label %93

93:                                               ; preds = %201, %90
  %94 = phi i64 [ %92, %90 ], [ %204, %201 ]
  %95 = phi i1 [ %72, %90 ], [ %202, %201 ]
  %96 = phi i16 [ %63, %90 ], [ %100, %201 ]
  %97 = phi i16 [ %61, %90 ], [ %96, %201 ]
  %98 = phi i32 [ -1, %90 ], [ %203, %201 ]
  %99 = getelementptr inbounds i16, i16* %2, i64 %94
  %100 = load i16, i16* %99, align 2
  switch i16 %100, label %101 [
    i16 32, label %201
    i16 9, label %201
    i16 10, label %201
  ]

101:                                              ; preds = %93
  %102 = trunc i64 %94 to i32
  br i1 %95, label %215, label %103

103:                                              ; preds = %101
  %104 = zext i16 %96 to i64
  %105 = icmp eq i16 %96, 45
  %106 = add i16 %100, -48
  %107 = icmp ult i16 %106, 10
  %108 = and i1 %105, %107
  br i1 %108, label %109, label %112

109:                                              ; preds = %103
  %110 = add i16 %97, -48
  %111 = icmp ult i16 %110, 10
  br i1 %111, label %209, label %131

112:                                              ; preds = %103
  %113 = add i16 %96, -33
  %114 = icmp ult i16 %113, 95
  %115 = add i16 %100, -33
  %116 = icmp ult i16 %115, 95
  %117 = and i1 %114, %116
  br i1 %117, label %118, label %135

118:                                              ; preds = %112
  %119 = zext i16 %100 to i32
  %120 = add nsw i64 %104, -33
  %121 = add nsw i32 %119, -33
  %122 = sdiv i32 %121, 8
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %120, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = and i32 %121, 7
  %128 = shl i32 1, %127
  %129 = and i32 %128, %126
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %135, label %207

131:                                              ; preds = %109
  %132 = or i16 %97, 32
  %133 = add i16 %132, -97
  %134 = icmp ult i16 %133, 26
  br i1 %134, label %213, label %135

135:                                              ; preds = %118, %112, %131
  %136 = zext i16 %96 to i32
  %137 = call signext i8 @u_charType_69(i32 %136) #9
  %138 = sext i8 %137 to i32
  %139 = shl i32 1, %138
  %140 = and i32 %139, 448
  %141 = icmp eq i32 %140, 0
  %142 = select i1 %141, i16 %96, i16 %97
  %143 = zext i16 %142 to i32
  %144 = call signext i8 @u_charType_69(i32 %143) #9
  %145 = sext i8 %144 to i32
  %146 = shl i32 1, %145
  %147 = and i32 %146, 3646
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %162, label %149

149:                                              ; preds = %135
  %150 = call i32 @u_getIntPropertyValue_69(i32 %143, i32 4104) #9
  %151 = icmp eq i32 %150, 24
  br i1 %151, label %162, label %152

152:                                              ; preds = %149
  %153 = zext i16 %100 to i32
  %154 = call signext i8 @u_charType_69(i32 %153) #9
  %155 = sext i8 %154 to i32
  %156 = shl i32 1, %155
  %157 = and i32 %156, 3646
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %162, label %159

159:                                              ; preds = %152
  %160 = call i32 @u_getIntPropertyValue_69(i32 %153, i32 4104) #9
  %161 = icmp eq i32 %160, 24
  br i1 %161, label %162, label %201

162:                                              ; preds = %159, %135, %149, %152
  %163 = icmp ugt i16 %100, 127
  %164 = icmp ne i16 %100, 160
  %165 = and i1 %163, %164
  br i1 %165, label %170, label %166

166:                                              ; preds = %162
  %167 = icmp ugt i16 %96, 127
  %168 = icmp ne i16 %96, 160
  %169 = and i1 %167, %168
  br i1 %169, label %170, label %201

170:                                              ; preds = %166, %162
  %171 = sext i32 %98 to i64
  %172 = icmp sgt i64 %94, %171
  br i1 %172, label %173, label %198

173:                                              ; preds = %170
  %174 = load i32, i32* %75, align 8
  %175 = or i32 %174, %102
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %198, label %177

177:                                              ; preds = %173
  %178 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %179 = icmp eq %"class.icu_69::BreakIterator"* %178, null
  br i1 %179, label %198, label %180

180:                                              ; preds = %177
  %181 = load i32, i32* %75, align 8
  %182 = trunc i64 %94 to i32
  %183 = add i32 %182, -1
  %184 = add i32 %183, %181
  %185 = load i32, i32* %91, align 8
  %186 = sub i32 %184, %185
  %187 = bitcast %"class.icu_69::BreakIterator"* %178 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %188 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %187, align 8
  %189 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %188, i64 15
  %190 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %189, align 8
  %191 = call i32 %190(%"class.icu_69::BreakIterator"* nonnull %178, i32 %186) #9
  %192 = icmp sgt i32 %191, -1
  br i1 %192, label %193, label %198

193:                                              ; preds = %180
  %194 = load i32, i32* %91, align 8
  %195 = add i32 %194, %191
  %196 = load i32, i32* %75, align 8
  %197 = sub i32 %195, %196
  br label %198

198:                                              ; preds = %193, %180, %177, %173, %170
  %199 = phi i32 [ %98, %170 ], [ %98, %173 ], [ %197, %193 ], [ %191, %180 ], [ %98, %177 ]
  %200 = icmp eq i32 %199, %102
  br i1 %200, label %211, label %201

201:                                              ; preds = %159, %93, %93, %93, %166, %198
  %202 = phi i1 [ false, %159 ], [ false, %198 ], [ false, %166 ], [ true, %93 ], [ true, %93 ], [ true, %93 ]
  %203 = phi i32 [ %98, %159 ], [ %199, %198 ], [ %98, %166 ], [ %98, %93 ], [ %98, %93 ], [ %98, %93 ]
  %204 = add nsw i64 %94, 1
  %205 = trunc i64 %204 to i32
  %206 = icmp eq i32 %205, %3
  br i1 %206, label %217, label %93

207:                                              ; preds = %118
  %208 = trunc i64 %94 to i32
  br label %217

209:                                              ; preds = %109
  %210 = trunc i64 %94 to i32
  br label %217

211:                                              ; preds = %198
  %212 = trunc i64 %94 to i32
  br label %217

213:                                              ; preds = %131
  %214 = trunc i64 %94 to i32
  br label %217

215:                                              ; preds = %101
  %216 = trunc i64 %94 to i32
  br label %217

217:                                              ; preds = %201, %207, %209, %211, %213, %215, %86
  %218 = phi i32 [ %3, %86 ], [ %208, %207 ], [ %210, %209 ], [ %212, %211 ], [ %214, %213 ], [ %216, %215 ], [ %3, %201 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #9
  ret i32 %218
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionIDsLNS_13LineBreakTypeE3ELNS_14BreakSpaceTypeE3EEEiiPKT_i(%"class.blink::LazyLineBreakIterator"*, i32, i16*, i32) local_unnamed_addr #7 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca { i16*, i32 }, align 8
  %12 = bitcast { i16*, i32 }* %11 to %"struct.blink::LazyLineBreakIterator::PriorContext"*
  %13 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %19, i8* %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 303, %"class.logging::CheckOpResult"* nonnull %7) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %28 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp sgt i32 %1, %3
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %27
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %1) #9
  %35 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %3) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %9) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %32, %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = icmp sgt i32 %1, 1
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = add nsw i32 %1, -2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %2, i64 %46
  %48 = load i16, i16* %47, align 2
  br label %53

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %51 = load i16, i16* %50, align 8
  %52 = icmp eq i32 %1, 1
  br i1 %52, label %53, label %58

53:                                               ; preds = %44, %49
  %54 = phi i16 [ %48, %44 ], [ %51, %49 ]
  %55 = add nsw i32 %1, -1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %2, i64 %56
  br label %60

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i16 [ %54, %53 ], [ %51, %58 ]
  %62 = phi i16* [ %57, %53 ], [ %59, %58 ]
  %63 = load i16, i16* %62, align 2
  %64 = add i16 %63, -9
  %65 = icmp ult i16 %64, 24
  br i1 %65, label %66, label %71

66:                                               ; preds = %60
  %67 = zext i16 %64 to i24
  %68 = lshr i24 -8388605, %67
  %69 = and i24 %68, 1
  %70 = icmp ne i24 %69, 0
  br label %71

71:                                               ; preds = %60, %66
  %72 = phi i1 [ %70, %66 ], [ false, %60 ]
  %73 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #9
  %74 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 0
  %75 = getelementptr inbounds { i16*, i32 }, { i16*, i32 }* %11, i64 0, i32 1
  %76 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  %77 = bitcast { i16*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 16, i1 false)
  %78 = load i16, i16* %76, align 2
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  %82 = load i16, i16* %81, align 8
  %83 = icmp eq i16 %82, 0
  %84 = select i1 %83, i16* %76, i16* %81
  %85 = select i1 %83, i32 1, i32 2
  br label %86

86:                                               ; preds = %71, %80
  %87 = phi i16* [ %84, %80 ], [ null, %71 ]
  %88 = phi i32 [ %85, %80 ], [ 0, %71 ]
  store i16* %87, i16** %74, align 8
  store i32 %88, i32* %75, align 8
  %89 = icmp slt i32 %1, %3
  br i1 %89, label %90, label %237

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  %92 = sext i32 %1 to i64
  %93 = sext i32 %3 to i64
  br label %94

94:                                               ; preds = %219, %90
  %95 = phi i64 [ %92, %90 ], [ %221, %219 ]
  %96 = phi i32 [ %1, %90 ], [ %222, %219 ]
  %97 = phi i1 [ %72, %90 ], [ %111, %219 ]
  %98 = phi i16 [ %63, %90 ], [ %102, %219 ]
  %99 = phi i16 [ %61, %90 ], [ %98, %219 ]
  %100 = phi i32 [ -1, %90 ], [ %220, %219 ]
  %101 = getelementptr inbounds i16, i16* %2, i64 %95
  %102 = load i16, i16* %101, align 2
  %103 = add i16 %102, -9
  %104 = icmp ult i16 %103, 24
  br i1 %104, label %105, label %110

105:                                              ; preds = %94
  %106 = zext i16 %103 to i24
  %107 = lshr i24 -8388605, %106
  %108 = and i24 %107, 1
  %109 = icmp ne i24 %108, 0
  br label %110

110:                                              ; preds = %94, %105
  %111 = phi i1 [ %109, %105 ], [ false, %94 ]
  %112 = icmp eq i16 %98, 12288
  %113 = or i1 %97, %112
  %114 = trunc i64 %95 to i32
  br i1 %113, label %235, label %115

115:                                              ; preds = %110
  %116 = icmp eq i16 %102, 12288
  %117 = or i1 %116, %111
  %118 = add nsw i64 %95, 1
  %119 = icmp slt i64 %118, %93
  %120 = and i1 %117, %119
  br i1 %120, label %233, label %121

121:                                              ; preds = %115
  %122 = zext i16 %98 to i64
  %123 = icmp eq i16 %98, 45
  %124 = add i16 %102, -48
  %125 = icmp ult i16 %124, 10
  %126 = and i1 %123, %125
  br i1 %126, label %127, label %130

127:                                              ; preds = %121
  %128 = add i16 %99, -48
  %129 = icmp ult i16 %128, 10
  br i1 %129, label %227, label %149

130:                                              ; preds = %121
  %131 = add i16 %98, -33
  %132 = icmp ult i16 %131, 95
  %133 = add i16 %102, -33
  %134 = icmp ult i16 %133, 95
  %135 = and i1 %132, %134
  br i1 %135, label %136, label %153

136:                                              ; preds = %130
  %137 = zext i16 %102 to i32
  %138 = add nsw i64 %122, -33
  %139 = add nsw i32 %137, -33
  %140 = sdiv i32 %139, 8
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [95 x [12 x i8]], [95 x [12 x i8]]* @_ZN5blinkL20kAsciiLineBreakTableE, i64 0, i64 %138, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = and i32 %139, 7
  %146 = shl i32 1, %145
  %147 = and i32 %146, %144
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %153, label %225

149:                                              ; preds = %127
  %150 = or i16 %99, 32
  %151 = add i16 %150, -97
  %152 = icmp ult i16 %151, 26
  br i1 %152, label %231, label %153

153:                                              ; preds = %136, %130, %149
  %154 = zext i16 %98 to i32
  %155 = call signext i8 @u_charType_69(i32 %154) #9
  %156 = sext i8 %155 to i32
  %157 = shl i32 1, %156
  %158 = and i32 %157, 448
  %159 = icmp eq i32 %158, 0
  %160 = select i1 %159, i16 %98, i16 %99
  %161 = zext i16 %160 to i32
  %162 = call signext i8 @u_charType_69(i32 %161) #9
  %163 = sext i8 %162 to i32
  %164 = shl i32 1, %163
  %165 = and i32 %164, 3646
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %180, label %167

167:                                              ; preds = %153
  %168 = call i32 @u_getIntPropertyValue_69(i32 %161, i32 4104) #9
  %169 = icmp eq i32 %168, 24
  br i1 %169, label %180, label %170

170:                                              ; preds = %167
  %171 = zext i16 %102 to i32
  %172 = call signext i8 @u_charType_69(i32 %171) #9
  %173 = sext i8 %172 to i32
  %174 = shl i32 1, %173
  %175 = and i32 %174, 3646
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %180, label %177

177:                                              ; preds = %170
  %178 = call i32 @u_getIntPropertyValue_69(i32 %171, i32 4104) #9
  %179 = icmp eq i32 %178, 24
  br i1 %179, label %180, label %219

180:                                              ; preds = %177, %153, %167, %170
  %181 = icmp ugt i16 %102, 127
  %182 = icmp ne i16 %102, 160
  %183 = and i1 %181, %182
  br i1 %183, label %188, label %184

184:                                              ; preds = %180
  %185 = icmp ugt i16 %98, 127
  %186 = icmp ne i16 %98, 160
  %187 = and i1 %185, %186
  br i1 %187, label %188, label %219

188:                                              ; preds = %184, %180
  %189 = sext i32 %100 to i64
  %190 = icmp sgt i64 %95, %189
  br i1 %190, label %191, label %216

191:                                              ; preds = %188
  %192 = load i32, i32* %75, align 8
  %193 = or i32 %192, %114
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %216, label %195

195:                                              ; preds = %191
  %196 = call %"class.icu_69::BreakIterator"* @_ZNK5blink21LazyLineBreakIterator11GetIteratorERKNS0_12PriorContextE(%"class.blink::LazyLineBreakIterator"* %0, %"struct.blink::LazyLineBreakIterator::PriorContext"* nonnull dereferenceable(16) %12)
  %197 = icmp eq %"class.icu_69::BreakIterator"* %196, null
  br i1 %197, label %216, label %198

198:                                              ; preds = %195
  %199 = load i32, i32* %75, align 8
  %200 = trunc i64 %95 to i32
  %201 = add i32 %200, -1
  %202 = add i32 %201, %199
  %203 = load i32, i32* %91, align 8
  %204 = sub i32 %202, %203
  %205 = bitcast %"class.icu_69::BreakIterator"* %196 to i32 (%"class.icu_69::BreakIterator"*, i32)***
  %206 = load i32 (%"class.icu_69::BreakIterator"*, i32)**, i32 (%"class.icu_69::BreakIterator"*, i32)*** %205, align 8
  %207 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %206, i64 15
  %208 = load i32 (%"class.icu_69::BreakIterator"*, i32)*, i32 (%"class.icu_69::BreakIterator"*, i32)** %207, align 8
  %209 = call i32 %208(%"class.icu_69::BreakIterator"* nonnull %196, i32 %204) #9
  %210 = icmp sgt i32 %209, -1
  br i1 %210, label %211, label %216

211:                                              ; preds = %198
  %212 = load i32, i32* %91, align 8
  %213 = add i32 %212, %209
  %214 = load i32, i32* %75, align 8
  %215 = sub i32 %213, %214
  br label %216

216:                                              ; preds = %211, %198, %195, %191, %188
  %217 = phi i32 [ %100, %188 ], [ %100, %191 ], [ %215, %211 ], [ %209, %198 ], [ %100, %195 ]
  %218 = icmp eq i32 %217, %114
  br i1 %218, label %229, label %219

219:                                              ; preds = %177, %184, %216
  %220 = phi i32 [ %100, %177 ], [ %217, %216 ], [ %100, %184 ]
  %221 = add nsw i64 %95, 1
  %222 = add nsw i32 %96, 1
  %223 = trunc i64 %221 to i32
  %224 = icmp eq i32 %223, %3
  br i1 %224, label %237, label %94

225:                                              ; preds = %136
  %226 = trunc i64 %95 to i32
  br label %237

227:                                              ; preds = %127
  %228 = trunc i64 %95 to i32
  br label %237

229:                                              ; preds = %216
  %230 = trunc i64 %95 to i32
  br label %237

231:                                              ; preds = %149
  %232 = trunc i64 %95 to i32
  br label %237

233:                                              ; preds = %115
  %234 = add nsw i32 %96, 1
  br label %237

235:                                              ; preds = %110
  %236 = trunc i64 %95 to i32
  br label %237

237:                                              ; preds = %219, %225, %227, %229, %231, %233, %235, %86
  %238 = phi i32 [ %3, %86 ], [ %226, %225 ], [ %228, %227 ], [ %230, %229 ], [ %232, %231 ], [ %234, %233 ], [ %236, %235 ], [ %3, %219 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #9
  ret i32 %238
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
