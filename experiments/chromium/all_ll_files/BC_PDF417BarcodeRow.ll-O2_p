; ModuleID = '../../third_party/pdfium/fxbarcode/pdf417/BC_PDF417BarcodeRow.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/pdf417/BC_PDF417BarcodeRow.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.CBC_BarcodeRow = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN14CBC_BarcodeRowC1Em = hidden unnamed_addr alias void (%class.CBC_BarcodeRow*, i64), void (%class.CBC_BarcodeRow*, i64)* @_ZN14CBC_BarcodeRowC2Em
@_ZN14CBC_BarcodeRowD1Ev = hidden unnamed_addr alias void (%class.CBC_BarcodeRow*), void (%class.CBC_BarcodeRow*)* @_ZN14CBC_BarcodeRowD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CBC_BarcodeRowC2Em(%class.CBC_BarcodeRow*, i64) unnamed_addr #0 align 2 {
  %3 = bitcast %class.CBC_BarcodeRow* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #4
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %2
  %6 = icmp slt i64 %1, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = bitcast %class.CBC_BarcodeRow* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %8) #5
  unreachable

9:                                                ; preds = %5
  %10 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %1, i64 1) #4
  %11 = getelementptr inbounds %class.CBC_BarcodeRow, %class.CBC_BarcodeRow* %0, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %class.CBC_BarcodeRow, %class.CBC_BarcodeRow* %0, i64 0, i32 0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 %1
  %14 = getelementptr inbounds %class.CBC_BarcodeRow, %class.CBC_BarcodeRow* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = bitcast i8** %11 to i64*
  %16 = ptrtoint i8* %10 to i64
  %17 = sub i64 %1, %16
  %18 = getelementptr i8, i8* %10, i64 %17
  %19 = ptrtoint i8* %18 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 0, i64 %19, i1 false) #4
  %20 = ptrtoint i8* %13 to i64
  store i64 %20, i64* %15, align 8
  br label %21

21:                                               ; preds = %2, %9
  %22 = getelementptr inbounds %class.CBC_BarcodeRow, %class.CBC_BarcodeRow* %0, i64 0, i32 1
  store i64 0, i64* %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CBC_BarcodeRowD2Ev(%class.CBC_BarcodeRow* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_BarcodeRow, %class.CBC_BarcodeRow* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %class.CBC_BarcodeRow, %class.CBC_BarcodeRow* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %3) #4
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CBC_BarcodeRow6AddBarEbm(%class.CBC_BarcodeRow* nocapture, i1 zeroext, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CBC_BarcodeRow, %class.CBC_BarcodeRow* %0, i64 0, i32 1
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.CBC_BarcodeRow, %class.CBC_BarcodeRow* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = load i64, i64* %4, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  %11 = zext i1 %1 to i8
  call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 %11, i64 %2, i1 false)
  br label %12

12:                                               ; preds = %6, %3
  %13 = load i64, i64* %4, align 8
  %14 = add i64 %13, %2
  store i64 %14, i64* %4, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #1

declare i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64, i64) local_unnamed_addr #2

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
