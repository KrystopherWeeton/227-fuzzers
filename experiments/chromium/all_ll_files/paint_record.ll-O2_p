; ModuleID = '../../cc/paint/paint_record.cc'
source_filename = "../../cc/paint/paint_record.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%class.sk_sp.7 = type { %class.SkBBoxHierarchy* }
%class.SkBBoxHierarchy = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.SkRecorder* }
%class.SkRecorder = type opaque
%class.sk_sp.12 = type { %class.SkRecord* }
%class.SkRecord = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.SkMiniRecorder* }
%class.SkMiniRecorder = type opaque
%"struct.cc::PlaybackParams" = type <{ %"class.cc::ImageProvider"*, %class.SkM44, %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.33", %"class.absl::optional", [6 x i8] }>
%"class.cc::ImageProvider" = type opaque
%class.SkM44 = type { [16 x float] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::RepeatingCallback.33" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i8 }
%class.sk_sp = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.1", [7 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i8 }
%class.sk_sp.5 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%class.SkPictureRecorder = type { i8, %struct.SkRect, %class.sk_sp.7, %"class.std::__1::unique_ptr.8", %class.sk_sp.12, %"class.std::__1::unique_ptr.13" }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.19, [384 x i64], %class.sk_sp.20, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.21", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.27" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.19 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.20 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBBHFactory = type { i32 (...)** }
%class.sk_sp.34 = type { %class.SkPicture* }
%class.sk_sp.35 = type { %"class.cc::PaintOpBuffer"* }

@__const._ZN2cc11ToSkPictureE5sk_spIKNS_13PaintOpBufferEERK6SkRectPNS_13ImageProviderEN4base17RepeatingCallbackIFvP8SkCanvasjEEE.recorder = private unnamed_addr constant { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.7, %"class.std::__1::unique_ptr.8", %class.sk_sp.12, %"class.std::__1::unique_ptr.13" } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.7 { %class.SkBBoxHierarchy* inttoptr (i64 -6148914691236517206 to %class.SkBBoxHierarchy*) }, %"class.std::__1::unique_ptr.8" { %"class.std::__1::__compressed_pair.9" { %"struct.std::__1::__compressed_pair_elem.10" { %class.SkRecorder* inttoptr (i64 -6148914691236517206 to %class.SkRecorder*) } } }, %class.sk_sp.12 { %class.SkRecord* inttoptr (i64 -6148914691236517206 to %class.SkRecord*) }, %"class.std::__1::unique_ptr.13" { %"class.std::__1::__compressed_pair.14" { %"struct.std::__1::__compressed_pair_elem.15" { %class.SkMiniRecorder* inttoptr (i64 -6148914691236517206 to %class.SkMiniRecorder*) } } } }, align 8
@__const._ZN2cc11ToSkPictureE5sk_spIKNS_13PaintOpBufferEERK6SkRectPNS_13ImageProviderEN4base17RepeatingCallbackIFvP8SkCanvasjEEE.params = private unnamed_addr constant %"struct.cc::PlaybackParams" <{ %"class.cc::ImageProvider"* inttoptr (i64 -6148914691236517206 to %"class.cc::ImageProvider"*), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.base::RepeatingCallback" { %"class.base::internal::CallbackBaseCopyable" { %"class.base::internal::CallbackBase" { %class.scoped_refptr { %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*) } } } }, %"class.base::RepeatingCallback.33" { %"class.base::internal::CallbackBaseCopyable" { %"class.base::internal::CallbackBase" { %class.scoped_refptr { %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*) } } } }, %"class.absl::optional" { %"class.absl::optional_internal::optional_data" { %"class.absl::optional_internal::optional_data_base" { %"class.absl::optional_internal::optional_data_dtor_base" { i8 -86, %union.anon { i8 -86 } } } } }, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11ToSkPictureE5sk_spINS_13PaintOpBufferEERK6SkRectPNS_13ImageProviderEN4base17RepeatingCallbackIFvP8SkCanvasjEEE(%class.sk_sp* noalias sret, %class.sk_sp.5* nocapture readonly, %struct.SkRect* dereferenceable(16), %"class.cc::ImageProvider"*, %"class.base::RepeatingCallback"*) local_unnamed_addr #0 {
  %6 = alloca %class.SkPictureRecorder, align 8
  %7 = alloca %"struct.cc::PlaybackParams", align 8
  %8 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 getelementptr inbounds ({ i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.7, %"class.std::__1::unique_ptr.8", %class.sk_sp.12, %"class.std::__1::unique_ptr.13" }, { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.7, %"class.std::__1::unique_ptr.8", %class.sk_sp.12, %"class.std::__1::unique_ptr.13" }* @__const._ZN2cc11ToSkPictureE5sk_spIKNS_13PaintOpBufferEERK6SkRectPNS_13ImageProviderEN4base17RepeatingCallbackIFvP8SkCanvasjEEE.recorder, i64 0, i32 0), i64 56, i1 false)
  call void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder* nonnull %6) #4
  %9 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* nonnull %6, %struct.SkRect* dereferenceable(16) %2, %class.SkBBHFactory* null) #4
  %10 = bitcast %"struct.cc::PlaybackParams"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %10) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 bitcast (%"struct.cc::PlaybackParams"* @__const._ZN2cc11ToSkPictureE5sk_spIKNS_13PaintOpBufferEERK6SkRectPNS_13ImageProviderEN4base17RepeatingCallbackIFvP8SkCanvasjEEE.params to i8*), i64 96, i1 false)
  call void @_ZN2cc14PlaybackParamsC1EPNS_13ImageProviderE(%"struct.cc::PlaybackParams"* nonnull %7, %"class.cc::ImageProvider"* %3) #4
  %11 = getelementptr inbounds %"struct.cc::PlaybackParams", %"struct.cc::PlaybackParams"* %7, i64 0, i32 2, i32 0
  %12 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0
  %13 = call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %11, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %12) #4
  %14 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %1, i64 0, i32 0
  %15 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %14, align 8
  call void @_ZNK2cc13PaintOpBuffer8PlaybackEP8SkCanvasRKNS_14PlaybackParamsE(%"class.cc::PaintOpBuffer"* %15, %class.SkCanvas* %9, %"struct.cc::PlaybackParams"* nonnull dereferenceable(96) %7) #4
  call void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp* sret %0, %class.SkPictureRecorder* nonnull %6) #4
  call void @_ZN2cc14PlaybackParamsD1Ev(%"struct.cc::PlaybackParams"* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %10) #4
  call void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder*) unnamed_addr #2

declare %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder*, %struct.SkRect* dereferenceable(16), %class.SkBBHFactory*) local_unnamed_addr #2

declare void @_ZN2cc14PlaybackParamsC1EPNS_13ImageProviderE(%"struct.cc::PlaybackParams"*, %"class.cc::ImageProvider"*) unnamed_addr #2

declare void @_ZNK2cc13PaintOpBuffer8PlaybackEP8SkCanvasRKNS_14PlaybackParamsE(%"class.cc::PaintOpBuffer"*, %class.SkCanvas*, %"struct.cc::PlaybackParams"* dereferenceable(96)) local_unnamed_addr #2

declare void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp* sret, %class.SkPictureRecorder*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc14PlaybackParamsD1Ev(%"struct.cc::PlaybackParams"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11ToSkPictureE5sk_spIKNS_13PaintOpBufferEERK6SkRectPNS_13ImageProviderEN4base17RepeatingCallbackIFvP8SkCanvasjEEE(%class.sk_sp.34* noalias nocapture sret, %class.sk_sp.35* nocapture readonly, %struct.SkRect* dereferenceable(16), %"class.cc::ImageProvider"*, %"class.base::RepeatingCallback"*) local_unnamed_addr #0 {
  %6 = alloca %class.SkPictureRecorder, align 8
  %7 = alloca %"struct.cc::PlaybackParams", align 8
  %8 = alloca %class.sk_sp, align 8
  %9 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 getelementptr inbounds ({ i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.7, %"class.std::__1::unique_ptr.8", %class.sk_sp.12, %"class.std::__1::unique_ptr.13" }, { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.7, %"class.std::__1::unique_ptr.8", %class.sk_sp.12, %"class.std::__1::unique_ptr.13" }* @__const._ZN2cc11ToSkPictureE5sk_spIKNS_13PaintOpBufferEERK6SkRectPNS_13ImageProviderEN4base17RepeatingCallbackIFvP8SkCanvasjEEE.recorder, i64 0, i32 0), i64 56, i1 false)
  call void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder* nonnull %6) #4
  %10 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* nonnull %6, %struct.SkRect* dereferenceable(16) %2, %class.SkBBHFactory* null) #4
  %11 = bitcast %"struct.cc::PlaybackParams"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast (%"struct.cc::PlaybackParams"* @__const._ZN2cc11ToSkPictureE5sk_spIKNS_13PaintOpBufferEERK6SkRectPNS_13ImageProviderEN4base17RepeatingCallbackIFvP8SkCanvasjEEE.params to i8*), i64 96, i1 false)
  call void @_ZN2cc14PlaybackParamsC1EPNS_13ImageProviderE(%"struct.cc::PlaybackParams"* nonnull %7, %"class.cc::ImageProvider"* %3) #4
  %12 = getelementptr inbounds %"struct.cc::PlaybackParams", %"struct.cc::PlaybackParams"* %7, i64 0, i32 2, i32 0
  %13 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0
  %14 = call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %12, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %13) #4
  %15 = getelementptr inbounds %class.sk_sp.35, %class.sk_sp.35* %1, i64 0, i32 0
  %16 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %15, align 8
  call void @_ZNK2cc13PaintOpBuffer8PlaybackEP8SkCanvasRKNS_14PlaybackParamsE(%"class.cc::PaintOpBuffer"* %16, %class.SkCanvas* %10, %"struct.cc::PlaybackParams"* nonnull dereferenceable(96) %7) #4
  %17 = bitcast %class.sk_sp* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp* nonnull sret %8, %class.SkPictureRecorder* nonnull %6) #4
  %18 = bitcast %class.sk_sp* %8 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %class.sk_sp.34* %0 to i64*
  store i64 %19, i64* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN2cc14PlaybackParamsD1Ev(%"struct.cc::PlaybackParams"* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #4
  call void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9) #4
  ret void
}

declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
