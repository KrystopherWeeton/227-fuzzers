; ModuleID = '../../third_party/libaddressinput/src/cpp/src/post_box_matchers.cc'
source_filename = "../../third_party/libaddressinput/src/cpp/src/post_box_matchers.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.i18n::addressinput::(anonymous namespace)::StaticRE2Array" = type { [20 x %"struct.i18n::addressinput::RE2PlainPtr"] }
%"struct.i18n::addressinput::RE2PlainPtr" = type { %"class.re2::RE2"* }
%"class.re2::RE2" = type { %"class.std::__1::basic_string", %"class.re2::RE2::Options", %"class.re2::Regexp"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.re2::Regexp"*, %"class.re2::Prog"*, i32, i8, %"class.re2::Prog"*, %"class.std::__1::map"*, %"class.std::__1::map.22"*, %"struct.std::__1::once_flag", %"struct.std::__1::once_flag", %"struct.std::__1::once_flag" }
%"class.re2::RE2::Options" = type { i32, i8, i8, i8, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.re2::Regexp" = type opaque
%"class.re2::Prog" = type opaque
%"class.std::__1::map" = type opaque
%"class.std::__1::map.22" = type opaque
%"struct.std::__1::once_flag" = type { i64 }
%"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" = type { i8*, i8* }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.i18n::addressinput::RE2PlainPtr"**, %"struct.i18n::addressinput::RE2PlainPtr"**, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.i18n::addressinput::RE2PlainPtr"** }
%"class.i18n::addressinput::Rule" = type { %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.6", %"class.std::__1::vector.13", %"class.std::__1::vector.13", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", i32, i32, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"*, %"class.std::__1::__compressed_pair.1" }
%"class.i18n::addressinput::FormatElement" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.i18n::addressinput::FormatElement"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.i18n::addressinput::RE2ptr"* }
%"struct.i18n::addressinput::RE2ptr" = type { %"class.re2::RE2"* }
%"struct.i18n::addressinput::Language" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

@_ZZN4i18n12addressinput15PostBoxMatchers11GetMatchersERKNS0_4RuleEE9kMatchers = internal global %"class.i18n::addressinput::(anonymous namespace)::StaticRE2Array" zeroinitializer, align 8
@_ZGVZN4i18n12addressinput15PostBoxMatchers11GetMatchersERKNS0_4RuleEE9kMatchers = internal global i64 0, align 8
@__dso_handle = external hidden global i8
@.str = private unnamed_addr constant [4 x i8] c"und\00", align 1
@_ZN4i18n12addressinput12_GLOBAL__N_116kLanguageInfoMapE = internal constant [20 x %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"] [%"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.18, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.28, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.32, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.37, i32 0, i32 0) }], align 16
@.str.1 = private unnamed_addr constant [3 x i8] c"ar\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"\D8\B5\D9\86\D8\AF\D9\88\D9\82 \D8\A8\D8\B1\D9\8A\D8\AF|\D8\B5[-. ]\D8\A8\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"cs\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"(?i)p\5C.? ?p\5C.? \5Cd\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"da\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"(?i)Postboks\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"de\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"(?i)Postfach\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"el\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"(?i)T\5C.? ?\CE\98\5C.? \5Cd{2}\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"en\00", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"Private Bag|Post(?:al)? Box\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"es\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"(?i)(?:Apartado|Casillas) de correos?\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"fi\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"(?i)Postilokero|P\5C.?L\5C.? \5Cd\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"fr\00", align 1
@.str.18 = private unnamed_addr constant [45 x i8] c"(?i)Bo(?:[i\C3\AE]|i\CC\82)te Postale|BP \5Cd|CEDEX \5Cd\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"hr\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"hu\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"(?i)Postafi(?:[o\C3\B3]|o\CC\81)k|Pf\5C.? \5Cd\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"ja\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"\E7\A7\81\E6\9B\B8\E7\AE\B1\5Cd{1,5}\E5\8F\B7\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"nl\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"(?i)Postbus\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"pl\00", align 1
@.str.28 = private unnamed_addr constant [37 x i8] c"(?i)Skr(?:\5C.?|ytka) poczt(?:\5C.?|owa)\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"pt\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"(?i)Apartado\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"ru\00", align 1
@.str.32 = private unnamed_addr constant [66 x i8] c"(?i)\D0\B0\D0\B1\D0\BE\D0\BD\D0\B5\D0\BD\D1\82\D1\81\D0\BA\D0\B8\D0\B9 \D1\8F\D1\89\D0\B8\D0\BA|[\D0\B0a]\22\D1\8F (?:(?:\E2\84\96|#|N) ?)?\5Cd\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"sv\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"(?i)Box \5Cd\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"P\5C.? ?O\5C.? Box\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c"zh\00", align 1
@.str.37 = private unnamed_addr constant [48 x i8] c"\E9\83\B5\E6\94\BF\E4\BF\A1\E7\AE\B1.{1,5}\E8\99\9F|\E9\83\B5\E5\B1\80\E7\AC\AC.{1,10}\E8\99\9F\E4\BF\A1\E7\AE\B1\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4i18n12addressinput15PostBoxMatchers11GetMatchersERKNS0_4RuleE(%"class.std::__1::vector.24"* noalias sret, %"class.i18n::addressinput::Rule"* nocapture readonly dereferenceable(288)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.13", align 8
  %4 = alloca [1 x %"class.std::__1::basic_string"], align 8
  %5 = alloca %"struct.i18n::addressinput::Language", align 8
  %6 = load atomic i8, i8* bitcast (i64* @_ZGVZN4i18n12addressinput15PostBoxMatchers11GetMatchersERKNS0_4RuleEE9kMatchers to i8*) acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %23, !prof !2

8:                                                ; preds = %2
  %9 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4i18n12addressinput15PostBoxMatchers11GetMatchersERKNS0_4RuleEE9kMatchers) #12
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %8, %11
  %12 = phi i64 [ %19, %11 ], [ 0, %8 ]
  %13 = tail call i8* @_Znwm(i64 200) #13
  %14 = bitcast i8* %13 to %"class.re2::RE2"*
  %15 = getelementptr inbounds [20 x %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"], [20 x %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"]* @_ZN4i18n12addressinput12_GLOBAL__N_116kLanguageInfoMapE, i64 0, i64 %12, i32 1
  %16 = load i8*, i8** %15, align 8
  tail call void @_ZN3re23RE2C1EPKc(%"class.re2::RE2"* nonnull %14, i8* %16) #12
  %17 = getelementptr inbounds %"class.i18n::addressinput::(anonymous namespace)::StaticRE2Array", %"class.i18n::addressinput::(anonymous namespace)::StaticRE2Array"* @_ZZN4i18n12addressinput15PostBoxMatchers11GetMatchersERKNS0_4RuleEE9kMatchers, i64 0, i32 0, i64 %12, i32 0
  %18 = bitcast %"class.re2::RE2"** %17 to i8**
  store i8* %13, i8** %18, align 8
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, 20
  br i1 %20, label %21, label %11

21:                                               ; preds = %11
  %22 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.i18n::addressinput::(anonymous namespace)::StaticRE2Array"*)* @_ZN4i18n12addressinput12_GLOBAL__N_114StaticRE2ArrayD2Ev to void (i8*)*), i8* bitcast (%"class.i18n::addressinput::(anonymous namespace)::StaticRE2Array"* @_ZZN4i18n12addressinput15PostBoxMatchers11GetMatchersERKNS0_4RuleEE9kMatchers to i8*), i8* nonnull @__dso_handle) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4i18n12addressinput15PostBoxMatchers11GetMatchersERKNS0_4RuleEE9kMatchers) #12
  br label %23

23:                                               ; preds = %8, %21, %2
  %24 = bitcast %"class.std::__1::vector.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %3, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %3, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast [1 x %"class.std::__1::basic_string"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #12
  %29 = bitcast [1 x %"class.std::__1::basic_string"]* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 3, i8* %30, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #12
  %31 = getelementptr inbounds i8, i8* %28, i64 3
  store i8 0, i8* %31, align 1
  %32 = tail call i8* @_Znwm(i64 24) #13
  %33 = bitcast i8* %32 to %"class.std::__1::basic_string"*
  %34 = bitcast %"class.std::__1::vector.13"* %3 to i8**
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds i8, i8* %32, i64 24
  %36 = bitcast %"class.std::__1::basic_string"** %27 to i8**
  store i8* %35, i8** %36, align 8
  %37 = bitcast [1 x %"class.std::__1::basic_string"]* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %37, i64 24, i1 false) #12
  %38 = getelementptr inbounds i8, i8* %32, i64 24
  %39 = bitcast i8* %38 to %"class.std::__1::basic_string"*
  %40 = bitcast %"class.std::__1::basic_string"** %26 to i64*
  %41 = ptrtoint i8* %38 to i64
  store i64 %41, i64* %40, align 8
  %42 = getelementptr inbounds %"class.i18n::addressinput::Rule", %"class.i18n::addressinput::Rule"* %1, i64 0, i32 5, i32 0, i32 0
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %42, align 8
  %44 = getelementptr inbounds %"class.i18n::addressinput::Rule", %"class.i18n::addressinput::Rule"* %1, i64 0, i32 5, i32 0, i32 1
  %45 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #12
  %46 = icmp eq %"class.std::__1::basic_string"* %43, %45
  br i1 %46, label %59, label %47

47:                                               ; preds = %23
  %48 = bitcast %"struct.i18n::addressinput::Language"* %5 to i8*
  %49 = getelementptr inbounds %"struct.i18n::addressinput::Language", %"struct.i18n::addressinput::Language"* %5, i64 0, i32 1
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.i18n::addressinput::Language", %"struct.i18n::addressinput::Language"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %71

55:                                               ; preds = %88
  %56 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %57 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  %58 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  br label %59

59:                                               ; preds = %55, %23
  %60 = phi i8* [ %57, %55 ], [ %32, %23 ]
  %61 = phi %"class.std::__1::basic_string"* [ %56, %55 ], [ %33, %23 ]
  %62 = phi %"class.std::__1::basic_string"* [ %58, %55 ], [ %39, %23 ]
  %63 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %"class.std::__1::vector.24"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #12
  %66 = icmp eq %"class.std::__1::basic_string"* %61, %62
  br i1 %66, label %94, label %67

67:                                               ; preds = %59
  %68 = bitcast %"struct.i18n::addressinput::RE2PlainPtr"*** %63 to i64*
  %69 = bitcast %"class.std::__1::vector.24"* %0 to i64*
  %70 = bitcast %"struct.i18n::addressinput::RE2PlainPtr"*** %64 to i64*
  br label %119

71:                                               ; preds = %47, %88
  %72 = phi %"class.std::__1::basic_string"* [ %43, %47 ], [ %89, %88 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %48) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 56, i1 false)
  call void @_ZN4i18n12addressinput8LanguageC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.i18n::addressinput::Language"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %72) #12
  %73 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %74 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %75 = icmp eq %"class.std::__1::basic_string"* %73, %74
  br i1 %75, label %87, label %76

76:                                               ; preds = %71
  %77 = load i8, i8* %51, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %52, i64 24, i1 false) #12
  br label %84

81:                                               ; preds = %76
  %82 = load i8*, i8** %53, align 8
  %83 = load i64, i64* %54, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %73, i8* %82, i64 %83) #12
  br label %84

84:                                               ; preds = %81, %79
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1
  %86 = ptrtoint %"class.std::__1::basic_string"* %85 to i64
  store i64 %86, i64* %40, align 8
  br label %88

87:                                               ; preds = %71
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.13"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %49) #12
  br label %88

88:                                               ; preds = %84, %87
  call void @_ZN4i18n12addressinput8LanguageD1Ev(%"struct.i18n::addressinput::Language"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %48) #12
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %90 = icmp eq %"class.std::__1::basic_string"* %89, %45
  br i1 %90, label %55, label %71

91:                                               ; preds = %220
  %92 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %93 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  br label %94

94:                                               ; preds = %91, %59
  %95 = phi i8* [ %93, %91 ], [ %60, %59 ]
  %96 = phi %"class.std::__1::basic_string"* [ %92, %91 ], [ %61, %59 ]
  %97 = icmp eq %"class.std::__1::basic_string"* %96, null
  br i1 %97, label %118, label %98

98:                                               ; preds = %94
  %99 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %100 = icmp eq %"class.std::__1::basic_string"* %99, %96
  br i1 %100, label %115, label %101

101:                                              ; preds = %98, %111
  %102 = phi %"class.std::__1::basic_string"* [ %103, %111 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %102, i64 -1
  %104 = bitcast %"class.std::__1::basic_string"* %103 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %101
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  call void @_ZdlPv(i8* %110) #13
  br label %111

111:                                              ; preds = %108, %101
  %112 = icmp eq %"class.std::__1::basic_string"* %103, %96
  br i1 %112, label %113, label %101

113:                                              ; preds = %111
  %114 = load i8*, i8** %34, align 8
  br label %115

115:                                              ; preds = %113, %98
  %116 = phi i8* [ %114, %113 ], [ %95, %98 ]
  %117 = bitcast %"class.std::__1::basic_string"** %26 to i8**
  store i8* %95, i8** %117, align 8
  call void @_ZdlPv(i8* %116) #13
  br label %118

118:                                              ; preds = %94, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  ret void

119:                                              ; preds = %67, %220
  %120 = phi %"class.std::__1::basic_string"* [ %61, %67 ], [ %221, %220 ]
  %121 = bitcast %"class.std::__1::basic_string"* %120 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = bitcast %"class.std::__1::basic_string"* %120 to i8*
  %128 = select i1 %124, i8* %126, i8* %127
  br label %129

129:                                              ; preds = %129, %119
  %130 = phi i64 [ 20, %119 ], [ %142, %129 ]
  %131 = phi %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"* [ getelementptr inbounds ([20 x %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"], [20 x %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"]* @_ZN4i18n12addressinput12_GLOBAL__N_116kLanguageInfoMapE, i64 0, i64 0), %119 ], [ %141, %129 ]
  %132 = lshr i64 %130, 1
  %133 = getelementptr inbounds %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo", %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"* %131, i64 %132
  %134 = getelementptr inbounds %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo", %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"* %133, i64 0, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = call i32 @strcmp(i8* %135, i8* %128) #14
  %137 = icmp slt i32 %136, 0
  %138 = getelementptr inbounds %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo", %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"* %133, i64 1
  %139 = xor i64 %132, -1
  %140 = add i64 %130, %139
  %141 = select i1 %137, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"* %138, %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"* %131
  %142 = select i1 %137, i64 %140, i64 %132
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %129

144:                                              ; preds = %129
  %145 = icmp eq %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"* %141, getelementptr inbounds ([20 x %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"], [20 x %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"]* @_ZN4i18n12addressinput12_GLOBAL__N_116kLanguageInfoMapE, i64 1, i64 0)
  br i1 %145, label %220, label %146

146:                                              ; preds = %144
  %147 = getelementptr inbounds %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo", %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"* %141, i64 0, i32 0
  %148 = load i8*, i8** %147, align 8
  %149 = call i64 @strlen(i8* %148) #12
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = zext i8 %123 to i64
  %153 = select i1 %124, i64 %151, i64 %152
  %154 = icmp eq i64 %149, %153
  br i1 %154, label %155, label %220

155:                                              ; preds = %146
  %156 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %120, i64 0, i64 -1, i8* %148, i64 %149) #12
  %157 = icmp ne i32 %156, 0
  %158 = icmp eq %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"* %141, null
  %159 = or i1 %158, %157
  br i1 %159, label %220, label %160

160:                                              ; preds = %155
  %161 = ptrtoint %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"* %141 to i64
  %162 = sub i64 %161, ptrtoint ([20 x %"struct.i18n::addressinput::(anonymous namespace)::LanguageInfo"]* @_ZN4i18n12addressinput12_GLOBAL__N_116kLanguageInfoMapE to i64)
  %163 = ashr exact i64 %162, 4
  %164 = getelementptr inbounds %"class.i18n::addressinput::(anonymous namespace)::StaticRE2Array", %"class.i18n::addressinput::(anonymous namespace)::StaticRE2Array"* @_ZZN4i18n12addressinput15PostBoxMatchers11GetMatchersERKNS0_4RuleEE9kMatchers, i64 0, i32 0, i64 %163
  %165 = ptrtoint %"struct.i18n::addressinput::RE2PlainPtr"* %164 to i64
  %166 = icmp eq %"struct.i18n::addressinput::RE2PlainPtr"* %164, null
  br i1 %166, label %220, label %167

167:                                              ; preds = %160
  %168 = load %"struct.i18n::addressinput::RE2PlainPtr"**, %"struct.i18n::addressinput::RE2PlainPtr"*** %63, align 8
  %169 = load %"struct.i18n::addressinput::RE2PlainPtr"**, %"struct.i18n::addressinput::RE2PlainPtr"*** %64, align 8
  %170 = icmp eq %"struct.i18n::addressinput::RE2PlainPtr"** %168, %169
  %171 = ptrtoint %"struct.i18n::addressinput::RE2PlainPtr"** %169 to i64
  br i1 %170, label %176, label %172

172:                                              ; preds = %167
  %173 = bitcast %"struct.i18n::addressinput::RE2PlainPtr"** %168 to i64*
  store i64 %165, i64* %173, align 8
  %174 = getelementptr inbounds %"struct.i18n::addressinput::RE2PlainPtr"*, %"struct.i18n::addressinput::RE2PlainPtr"** %168, i64 1
  %175 = ptrtoint %"struct.i18n::addressinput::RE2PlainPtr"** %174 to i64
  store i64 %175, i64* %68, align 8
  br label %220

176:                                              ; preds = %167
  %177 = ptrtoint %"struct.i18n::addressinput::RE2PlainPtr"** %168 to i64
  %178 = load i64, i64* %69, align 8
  %179 = sub i64 %177, %178
  %180 = ashr exact i64 %179, 3
  %181 = add nsw i64 %180, 1
  %182 = icmp ugt i64 %181, 2305843009213693951
  br i1 %182, label %183, label %185

183:                                              ; preds = %176
  %184 = bitcast %"class.std::__1::vector.24"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %184) #15
  unreachable

185:                                              ; preds = %176
  %186 = sub i64 %171, %178
  %187 = ashr exact i64 %186, 3
  %188 = icmp ult i64 %187, 1152921504606846975
  br i1 %188, label %189, label %197

189:                                              ; preds = %185
  %190 = ashr exact i64 %186, 2
  %191 = icmp ult i64 %190, %181
  %192 = select i1 %191, i64 %181, i64 %190
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %202, label %194

194:                                              ; preds = %189
  %195 = icmp ugt i64 %192, 2305843009213693951
  br i1 %195, label %196, label %197

196:                                              ; preds = %194
  call void @abort() #15
  unreachable

197:                                              ; preds = %194, %185
  %198 = phi i64 [ %192, %194 ], [ 2305843009213693951, %185 ]
  %199 = shl i64 %198, 3
  %200 = call i8* @_Znwm(i64 %199) #13
  %201 = bitcast i8* %200 to %"struct.i18n::addressinput::RE2PlainPtr"**
  br label %202

202:                                              ; preds = %197, %189
  %203 = phi i64 [ %198, %197 ], [ 0, %189 ]
  %204 = phi i8* [ %200, %197 ], [ null, %189 ]
  %205 = phi %"struct.i18n::addressinput::RE2PlainPtr"** [ %201, %197 ], [ null, %189 ]
  %206 = getelementptr inbounds %"struct.i18n::addressinput::RE2PlainPtr"*, %"struct.i18n::addressinput::RE2PlainPtr"** %205, i64 %180
  %207 = getelementptr inbounds %"struct.i18n::addressinput::RE2PlainPtr"*, %"struct.i18n::addressinput::RE2PlainPtr"** %205, i64 %203
  %208 = ptrtoint %"struct.i18n::addressinput::RE2PlainPtr"** %207 to i64
  %209 = bitcast %"struct.i18n::addressinput::RE2PlainPtr"** %206 to i64*
  store i64 %165, i64* %209, align 8
  %210 = getelementptr inbounds %"struct.i18n::addressinput::RE2PlainPtr"*, %"struct.i18n::addressinput::RE2PlainPtr"** %206, i64 1
  %211 = ptrtoint %"struct.i18n::addressinput::RE2PlainPtr"** %210 to i64
  %212 = ptrtoint %"struct.i18n::addressinput::RE2PlainPtr"** %205 to i64
  %213 = icmp sgt i64 %179, 0
  br i1 %213, label %214, label %216

214:                                              ; preds = %202
  %215 = inttoptr i64 %178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %204, i8* align 8 %215, i64 %179, i1 false) #12
  br label %216

216:                                              ; preds = %214, %202
  store i64 %212, i64* %69, align 8
  store i64 %211, i64* %68, align 8
  store i64 %208, i64* %70, align 8
  %217 = icmp eq i64 %178, 0
  br i1 %217, label %220, label %218

218:                                              ; preds = %216
  %219 = inttoptr i64 %178 to i8*
  call void @_ZdlPv(i8* %219) #13
  br label %220

220:                                              ; preds = %155, %146, %144, %218, %216, %172, %160
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %120, i64 1
  %222 = icmp eq %"class.std::__1::basic_string"* %221, %62
  br i1 %222, label %91, label %119
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4i18n12addressinput12_GLOBAL__N_114StaticRE2ArrayD2Ev(%"class.i18n::addressinput::(anonymous namespace)::StaticRE2Array"* readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.i18n::addressinput::(anonymous namespace)::StaticRE2Array", %"class.i18n::addressinput::(anonymous namespace)::StaticRE2Array"* %0, i64 0, i32 0, i64 0
  %3 = getelementptr inbounds %"class.i18n::addressinput::(anonymous namespace)::StaticRE2Array", %"class.i18n::addressinput::(anonymous namespace)::StaticRE2Array"* %0, i64 0, i32 0, i64 20
  br label %5

4:                                                ; preds = %12
  ret void

5:                                                ; preds = %1, %12
  %6 = phi %"struct.i18n::addressinput::RE2PlainPtr"* [ %2, %1 ], [ %13, %12 ]
  %7 = getelementptr inbounds %"struct.i18n::addressinput::RE2PlainPtr", %"struct.i18n::addressinput::RE2PlainPtr"* %6, i64 0, i32 0
  %8 = load %"class.re2::RE2"*, %"class.re2::RE2"** %7, align 8
  %9 = icmp eq %"class.re2::RE2"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  tail call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* nonnull %8) #12
  %11 = bitcast %"class.re2::RE2"* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #13
  br label %12

12:                                               ; preds = %10, %5
  %13 = getelementptr inbounds %"struct.i18n::addressinput::RE2PlainPtr", %"struct.i18n::addressinput::RE2PlainPtr"* %6, i64 1
  %14 = icmp eq %"struct.i18n::addressinput::RE2PlainPtr"* %13, %3
  br i1 %14, label %4, label %5
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4i18n12addressinput8LanguageC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.i18n::addressinput::Language"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4i18n12addressinput8LanguageD1Ev(%"struct.i18n::addressinput::Language"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN3re23RE2C1EPKc(%"class.re2::RE2"*, i8*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3re23RE2D1Ev(%"class.re2::RE2"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #7

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.13"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.13"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.13"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #12
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #12
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #12
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #13
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #13
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
