; ModuleID = '../../components/viz/service/display/bsp_tree.cc'
source_filename = "../../components/viz/service/display/bsp_tree.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.viz::BspNode" = type { %"class.std::__1::unique_ptr", %"class.std::__1::vector.4", %"class.std::__1::vector.4", %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.viz::DrawPolygon"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.viz::BspNode"* }
%"class.viz::DrawPolygon" = type <{ %"class.std::__1::vector", %"class.gfx::Vector3dF", i32, %"class.viz::DrawQuad"*, i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Point3F"*, %"class.gfx::Point3F"*, %"class.std::__1::__compressed_pair.0" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.gfx::Point3F"* }
%"class.gfx::Vector3dF" = type { float, float, float }
%"class.viz::DrawQuad" = type opaque
%"class.viz::BspTree" = type { %"class.std::__1::unique_ptr.11" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm = comdat any

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_ = comdat any

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE13DestructRangeEmm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3viz11DrawPolygonENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm = comdat any

@.str = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1

@_ZN3viz7BspNodeC1ENSt3__110unique_ptrINS_11DrawPolygonENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"struct.viz::BspNode"*, %"class.viz::DrawPolygon"*), void (%"struct.viz::BspNode"*, %"class.viz::DrawPolygon"*)* @_ZN3viz7BspNodeC2ENSt3__110unique_ptrINS_11DrawPolygonENS1_14default_deleteIS3_EEEE
@_ZN3viz7BspNodeD1Ev = hidden unnamed_addr alias void (%"struct.viz::BspNode"*), void (%"struct.viz::BspNode"*)* @_ZN3viz7BspNodeD2Ev
@_ZN3viz7BspTreeC1EPN4base14circular_dequeINSt3__110unique_ptrINS_11DrawPolygonENS3_14default_deleteIS5_EEEEEE = hidden unnamed_addr alias void (%"class.viz::BspTree"*, %"class.base::circular_deque"*), void (%"class.viz::BspTree"*, %"class.base::circular_deque"*)* @_ZN3viz7BspTreeC2EPN4base14circular_dequeINSt3__110unique_ptrINS_11DrawPolygonENS3_14default_deleteIS5_EEEEEE
@_ZN3viz7BspTreeD1Ev = hidden unnamed_addr alias void (%"class.viz::BspTree"*), void (%"class.viz::BspTree"*)* @_ZN3viz7BspTreeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz7BspNodeC2ENSt3__110unique_ptrINS_11DrawPolygonENS1_14default_deleteIS3_EEEE(%"struct.viz::BspNode"* nocapture, %"class.viz::DrawPolygon"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.viz::DrawPolygon"* %1 to i64
  %4 = bitcast %"struct.viz::BspNode"* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector.4"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 64, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz7BspNodeD2Ev(%"struct.viz::BspNode"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"struct.viz::BspNode"*, %"struct.viz::BspNode"** %2, align 8
  store %"struct.viz::BspNode"* null, %"struct.viz::BspNode"** %2, align 8
  %4 = icmp eq %"struct.viz::BspNode"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN3viz7BspNodeD2Ev(%"struct.viz::BspNode"* nonnull %3) #13
  %6 = bitcast %"struct.viz::BspNode"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"struct.viz::BspNode"*, %"struct.viz::BspNode"** %8, align 8
  store %"struct.viz::BspNode"* null, %"struct.viz::BspNode"** %8, align 8
  %10 = icmp eq %"struct.viz::BspNode"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN3viz7BspNodeD2Ev(%"struct.viz::BspNode"* nonnull %9) #13
  %12 = bitcast %"struct.viz::BspNode"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %15, align 8
  %17 = icmp eq %"class.std::__1::unique_ptr"* %16, null
  br i1 %17, label %38, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.std::__1::unique_ptr"* %16 to i8*
  %20 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %22 = icmp eq %"class.std::__1::unique_ptr"* %21, %16
  br i1 %22, label %36, label %23

23:                                               ; preds = %18, %31
  %24 = phi %"class.std::__1::unique_ptr"* [ %25, %31 ], [ %21, %18 ]
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 -1
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %26, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %26, align 8
  %28 = icmp eq %"class.viz::DrawPolygon"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  tail call void @_ZN3viz11DrawPolygonD1Ev(%"class.viz::DrawPolygon"* nonnull %27) #13
  %30 = bitcast %"class.viz::DrawPolygon"* %27 to i8*
  tail call void @_ZdlPv(i8* %30) #14
  br label %31

31:                                               ; preds = %29, %23
  %32 = icmp eq %"class.std::__1::unique_ptr"* %25, %16
  br i1 %32, label %33, label %23

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector.4"* %14 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %18
  %37 = phi i8* [ %35, %33 ], [ %19, %18 ]
  store %"class.std::__1::unique_ptr"* %16, %"class.std::__1::unique_ptr"** %20, align 8
  tail call void @_ZdlPv(i8* %37) #14
  br label %38

38:                                               ; preds = %13, %36
  %39 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %0, i64 0, i32 1
  %40 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %40, align 8
  %42 = icmp eq %"class.std::__1::unique_ptr"* %41, null
  br i1 %42, label %63, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.std::__1::unique_ptr"* %41 to i8*
  %45 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %0, i64 0, i32 1, i32 0, i32 1
  %46 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %45, align 8
  %47 = icmp eq %"class.std::__1::unique_ptr"* %46, %41
  br i1 %47, label %61, label %48

48:                                               ; preds = %43, %56
  %49 = phi %"class.std::__1::unique_ptr"* [ %50, %56 ], [ %46, %43 ]
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %51, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %51, align 8
  %53 = icmp eq %"class.viz::DrawPolygon"* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %48
  tail call void @_ZN3viz11DrawPolygonD1Ev(%"class.viz::DrawPolygon"* nonnull %52) #13
  %55 = bitcast %"class.viz::DrawPolygon"* %52 to i8*
  tail call void @_ZdlPv(i8* %55) #14
  br label %56

56:                                               ; preds = %54, %48
  %57 = icmp eq %"class.std::__1::unique_ptr"* %50, %41
  br i1 %57, label %58, label %48

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector.4"* %39 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %43
  %62 = phi i8* [ %60, %58 ], [ %44, %43 ]
  store %"class.std::__1::unique_ptr"* %41, %"class.std::__1::unique_ptr"** %45, align 8
  tail call void @_ZdlPv(i8* %62) #14
  br label %63

63:                                               ; preds = %38, %61
  %64 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %64, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %64, align 8
  %66 = icmp eq %"class.viz::DrawPolygon"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  tail call void @_ZN3viz11DrawPolygonD1Ev(%"class.viz::DrawPolygon"* nonnull %65) #13
  %68 = bitcast %"class.viz::DrawPolygon"* %65 to i8*
  tail call void @_ZdlPv(i8* %68) #14
  br label %69

69:                                               ; preds = %63, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz7BspTreeC2EPN4base14circular_dequeINSt3__110unique_ptrINS_11DrawPolygonENS3_14default_deleteIS5_EEEEEE(%"class.viz::BspTree"*, %"class.base::circular_deque"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::BspTree"* %0 to i64*
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %1, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %1, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %5
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = sub i64 %7, %5
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %1, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %7, %5
  %15 = add i64 %14, %13
  br label %16

16:                                               ; preds = %9, %11
  %17 = phi i64 [ %10, %9 ], [ %15, %11 ]
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %49, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %1, i64 0, i32 0
  %21 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %20, i64 %5) #13
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr"* %21 to i64*
  %24 = load i64, i64* %23, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %22, align 8
  %25 = load i64, i64* %4, align 8
  %26 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %20, i64 %25) #13
  %27 = load i64, i64* %4, align 8
  %28 = add i64 %27, 1
  %29 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %20, i64 %28) #13
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %20, %"class.std::__1::unique_ptr"* %26, %"class.std::__1::unique_ptr"* %29) #13
  %30 = load i64, i64* %4, align 8
  %31 = add i64 %30, 1
  %32 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %1, i64 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %31, %33
  %35 = select i1 %34, i64 0, i64 %31
  store i64 %35, i64* %4, align 8
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %1) #13
  %36 = tail call i8* @_Znwm(i64 72) #14
  %37 = bitcast i8* %36 to i64*
  store i64 %24, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 64, i1 false) #13
  %39 = ptrtoint i8* %36 to i64
  %40 = getelementptr inbounds %"class.viz::BspTree", %"class.viz::BspTree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.viz::BspNode"*, %"struct.viz::BspNode"** %40, align 8
  store i64 %39, i64* %3, align 8
  %42 = icmp eq %"struct.viz::BspNode"* %41, null
  %43 = bitcast i8* %36 to %"struct.viz::BspNode"*
  br i1 %42, label %47, label %44

44:                                               ; preds = %19
  tail call void @_ZN3viz7BspNodeD2Ev(%"struct.viz::BspNode"* nonnull %41) #13
  %45 = bitcast %"struct.viz::BspNode"* %41 to i8*
  tail call void @_ZdlPv(i8* %45) #14
  %46 = load %"struct.viz::BspNode"*, %"struct.viz::BspNode"** %40, align 8
  br label %47

47:                                               ; preds = %19, %44
  %48 = phi %"struct.viz::BspNode"* [ %43, %19 ], [ %46, %44 ]
  tail call void @_ZN3viz7BspTree9BuildTreeEPNS_7BspNodeEPN4base14circular_dequeINSt3__110unique_ptrINS_11DrawPolygonENS5_14default_deleteIS7_EEEEEE(%"class.viz::BspTree"* %0, %"struct.viz::BspNode"* %48, %"class.base::circular_deque"* %1)
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz7BspTree9BuildTreeEPNS_7BspNodeEPN4base14circular_dequeINSt3__110unique_ptrINS_11DrawPolygonENS5_14default_deleteIS7_EEEEEE(%"class.viz::BspTree"* readnone, %"struct.viz::BspNode"*, %"class.base::circular_deque"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::circular_deque", align 8
  %5 = alloca %"class.base::circular_deque", align 8
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = alloca i8, align 1
  %9 = bitcast %"class.base::circular_deque"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %4, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %4, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 32, i1 false) #13
  %13 = bitcast %"class.base::circular_deque"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %5, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %5, i64 0, i32 1
  %16 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %5, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false) #13
  %17 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %18, %20
  br i1 %21, label %143, label %22

22:                                               ; preds = %3
  %23 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  %26 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  %29 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 0
  %30 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %1, i64 0, i32 1, i32 0, i32 1
  %33 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %1, i64 0, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr"** %32 to i64*
  %36 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %1, i64 0, i32 2, i32 0, i32 1
  %37 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %1, i64 0, i32 2
  %39 = bitcast %"class.std::__1::unique_ptr"** %36 to i64*
  %40 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %4, i64 0, i32 0
  %41 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %5, i64 0, i32 0
  br label %42

42:                                               ; preds = %22, %135
  %43 = phi i64 [ %18, %22 ], [ %136, %135 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  store i64 0, i64* %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  store i64 0, i64* %28, align 8
  %44 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %43) #13
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %45, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %45, align 8
  %47 = load i64, i64* %17, align 8
  %48 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %47) #13
  %49 = load i64, i64* %17, align 8
  %50 = add i64 %49, 1
  %51 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %50) #13
  call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %29, %"class.std::__1::unique_ptr"* %48, %"class.std::__1::unique_ptr"* %51) #13
  %52 = load i64, i64* %17, align 8
  %53 = add i64 %52, 1
  %54 = load i64, i64* %30, align 8
  %55 = icmp eq i64 %53, %54
  %56 = select i1 %55, i64 0, i64 %53
  store i64 %56, i64* %17, align 8
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %2) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #13
  store i8 -86, i8* %8, align 1
  %57 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %31, align 8
  call void @_ZNK3viz11DrawPolygon12SplitPolygonENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEEPS5_S6_Pb(%"class.viz::DrawPolygon"* %57, %"class.viz::DrawPolygon"* %46, %"class.std::__1::unique_ptr"* nonnull %6, %"class.std::__1::unique_ptr"* nonnull %7, i8* nonnull %8) #13
  %58 = load i8, i8* %8, align 1, !range !2
  %59 = icmp eq i8 %58, 0
  %60 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %24, align 8
  %61 = icmp ne %"class.viz::DrawPolygon"* %60, null
  %62 = ptrtoint %"class.viz::DrawPolygon"* %60 to i64
  br i1 %59, label %86, label %63

63:                                               ; preds = %42
  br i1 %61, label %64, label %73

64:                                               ; preds = %63
  %65 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %66 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %33, align 8
  %67 = icmp ult %"class.std::__1::unique_ptr"* %65, %66
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %24, align 8
  %69 = bitcast %"class.std::__1::unique_ptr"* %65 to i64*
  store i64 %62, i64* %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %65, i64 1
  %71 = ptrtoint %"class.std::__1::unique_ptr"* %70 to i64
  store i64 %71, i64* %35, align 8
  br label %73

72:                                               ; preds = %64
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3viz11DrawPolygonENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.4"* %34, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #13
  br label %73

73:                                               ; preds = %72, %68, %63
  %74 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %27, align 8
  %75 = icmp eq %"class.viz::DrawPolygon"* %74, null
  %76 = ptrtoint %"class.viz::DrawPolygon"* %74 to i64
  br i1 %75, label %124, label %77

77:                                               ; preds = %73
  %78 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %36, align 8
  %79 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %37, align 8
  %80 = icmp ult %"class.std::__1::unique_ptr"* %78, %79
  br i1 %80, label %81, label %85

81:                                               ; preds = %77
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %27, align 8
  %82 = bitcast %"class.std::__1::unique_ptr"* %78 to i64*
  store i64 %76, i64* %82, align 8
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 1
  %84 = ptrtoint %"class.std::__1::unique_ptr"* %83 to i64
  store i64 %84, i64* %39, align 8
  br label %125

85:                                               ; preds = %77
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3viz11DrawPolygonENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.4"* %38, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7) #13
  br label %125

86:                                               ; preds = %42
  br i1 %61, label %87, label %104

87:                                               ; preds = %86
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* nonnull %4, i64 1) #13
  %88 = load i64, i64* %12, align 8
  %89 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* nonnull %40, i64 %88) #13
  %90 = load i64, i64* %25, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %24, align 8
  %91 = bitcast %"class.std::__1::unique_ptr"* %89 to i64*
  store i64 %90, i64* %91, align 8
  %92 = load i64, i64* %12, align 8
  %93 = load i64, i64* %10, align 8
  %94 = add i64 %93, -1
  %95 = icmp eq i64 %92, %94
  br i1 %95, label %96, label %97

96:                                               ; preds = %87
  store i64 0, i64* %12, align 8
  br label %100

97:                                               ; preds = %87
  %98 = add i64 %92, 1
  store i64 %98, i64* %12, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97, %96
  br label %101

101:                                              ; preds = %97, %100
  %102 = phi i64 [ %94, %100 ], [ %92, %97 ]
  %103 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* nonnull %40, i64 %102) #13
  br label %104

104:                                              ; preds = %101, %86
  %105 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %27, align 8
  %106 = icmp eq %"class.viz::DrawPolygon"* %105, null
  br i1 %106, label %124, label %107

107:                                              ; preds = %104
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* nonnull %5, i64 1) #13
  %108 = load i64, i64* %16, align 8
  %109 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* nonnull %41, i64 %108) #13
  %110 = load i64, i64* %28, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %27, align 8
  %111 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %110, i64* %111, align 8
  %112 = load i64, i64* %16, align 8
  %113 = load i64, i64* %14, align 8
  %114 = add i64 %113, -1
  %115 = icmp eq i64 %112, %114
  br i1 %115, label %116, label %117

116:                                              ; preds = %107
  store i64 0, i64* %16, align 8
  br label %120

117:                                              ; preds = %107
  %118 = add i64 %112, 1
  store i64 %118, i64* %16, align 8
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117, %116
  br label %121

121:                                              ; preds = %117, %120
  %122 = phi i64 [ %114, %120 ], [ %112, %117 ]
  %123 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* nonnull %41, i64 %122) #13
  br label %125

124:                                              ; preds = %104, %73
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #13
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %27, align 8
  br label %130

125:                                              ; preds = %85, %81, %121
  %126 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #13
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %27, align 8
  %127 = icmp eq %"class.viz::DrawPolygon"* %126, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %125
  call void @_ZN3viz11DrawPolygonD1Ev(%"class.viz::DrawPolygon"* nonnull %126) #13
  %129 = bitcast %"class.viz::DrawPolygon"* %126 to i8*
  call void @_ZdlPv(i8* %129) #14
  br label %130

130:                                              ; preds = %124, %125, %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  %131 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %24, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %24, align 8
  %132 = icmp eq %"class.viz::DrawPolygon"* %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %130
  call void @_ZN3viz11DrawPolygonD1Ev(%"class.viz::DrawPolygon"* nonnull %131) #13
  %134 = bitcast %"class.viz::DrawPolygon"* %131 to i8*
  call void @_ZdlPv(i8* %134) #14
  br label %135

135:                                              ; preds = %133, %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  %136 = load i64, i64* %17, align 8
  %137 = load i64, i64* %19, align 8
  %138 = icmp eq i64 %136, %137
  br i1 %138, label %139, label %42

139:                                              ; preds = %135
  %140 = load i64, i64* %15, align 8
  %141 = load i64, i64* %16, align 8
  %142 = icmp ult i64 %141, %140
  br i1 %142, label %147, label %143

143:                                              ; preds = %3, %139
  %144 = phi i64 [ %140, %139 ], [ 0, %3 ]
  %145 = phi i64 [ %141, %139 ], [ 0, %3 ]
  %146 = sub i64 %145, %144
  br label %151

147:                                              ; preds = %139
  %148 = load i64, i64* %14, align 8
  %149 = sub i64 %141, %140
  %150 = add i64 %149, %148
  br label %151

151:                                              ; preds = %143, %147
  %152 = phi i64 [ %144, %143 ], [ %140, %147 ]
  %153 = phi i64 [ %146, %143 ], [ %150, %147 ]
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %186, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %5, i64 0, i32 0
  %157 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* nonnull %156, i64 %152) #13
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %157, i64 0, i32 0, i32 0, i32 0
  %159 = bitcast %"class.std::__1::unique_ptr"* %157 to i64*
  %160 = load i64, i64* %159, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %158, align 8
  %161 = load i64, i64* %15, align 8
  %162 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* nonnull %156, i64 %161) #13
  %163 = load i64, i64* %15, align 8
  %164 = add i64 %163, 1
  %165 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* nonnull %156, i64 %164) #13
  call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* nonnull %156, %"class.std::__1::unique_ptr"* %162, %"class.std::__1::unique_ptr"* %165) #13
  %166 = load i64, i64* %15, align 8
  %167 = add i64 %166, 1
  %168 = load i64, i64* %14, align 8
  %169 = icmp eq i64 %167, %168
  %170 = select i1 %169, i64 0, i64 %167
  store i64 %170, i64* %15, align 8
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* nonnull %5) #13
  %171 = call i8* @_Znwm(i64 72) #14
  %172 = bitcast i8* %171 to i64*
  store i64 %160, i64* %172, align 8
  %173 = getelementptr inbounds i8, i8* %171, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %173, i8 0, i64 64, i1 false) #13
  %174 = ptrtoint i8* %171 to i64
  %175 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %1, i64 0, i32 3
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %175, i64 0, i32 0, i32 0, i32 0
  %177 = load %"struct.viz::BspNode"*, %"struct.viz::BspNode"** %176, align 8
  %178 = bitcast %"class.std::__1::unique_ptr.11"* %175 to i64*
  store i64 %174, i64* %178, align 8
  %179 = icmp eq %"struct.viz::BspNode"* %177, null
  %180 = bitcast i8* %171 to %"struct.viz::BspNode"*
  br i1 %179, label %184, label %181

181:                                              ; preds = %155
  call void @_ZN3viz7BspNodeD2Ev(%"struct.viz::BspNode"* nonnull %177) #13
  %182 = bitcast %"struct.viz::BspNode"* %177 to i8*
  call void @_ZdlPv(i8* %182) #14
  %183 = load %"struct.viz::BspNode"*, %"struct.viz::BspNode"** %176, align 8
  br label %184

184:                                              ; preds = %155, %181
  %185 = phi %"struct.viz::BspNode"* [ %180, %155 ], [ %183, %181 ]
  call void @_ZN3viz7BspTree9BuildTreeEPNS_7BspNodeEPN4base14circular_dequeINSt3__110unique_ptrINS_11DrawPolygonENS5_14default_deleteIS7_EEEEEE(%"class.viz::BspTree"* %0, %"struct.viz::BspNode"* %185, %"class.base::circular_deque"* nonnull %5)
  br label %186

186:                                              ; preds = %151, %184
  %187 = load i64, i64* %11, align 8
  %188 = load i64, i64* %12, align 8
  %189 = icmp ult i64 %188, %187
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = sub i64 %188, %187
  br label %196

192:                                              ; preds = %186
  %193 = load i64, i64* %10, align 8
  %194 = sub i64 %188, %187
  %195 = add i64 %194, %193
  br label %196

196:                                              ; preds = %190, %192
  %197 = phi i64 [ %191, %190 ], [ %195, %192 ]
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %230, label %199

199:                                              ; preds = %196
  %200 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %4, i64 0, i32 0
  %201 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* nonnull %200, i64 %187) #13
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %201, i64 0, i32 0, i32 0, i32 0
  %203 = bitcast %"class.std::__1::unique_ptr"* %201 to i64*
  %204 = load i64, i64* %203, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %202, align 8
  %205 = load i64, i64* %11, align 8
  %206 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* nonnull %200, i64 %205) #13
  %207 = load i64, i64* %11, align 8
  %208 = add i64 %207, 1
  %209 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* nonnull %200, i64 %208) #13
  call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* nonnull %200, %"class.std::__1::unique_ptr"* %206, %"class.std::__1::unique_ptr"* %209) #13
  %210 = load i64, i64* %11, align 8
  %211 = add i64 %210, 1
  %212 = load i64, i64* %10, align 8
  %213 = icmp eq i64 %211, %212
  %214 = select i1 %213, i64 0, i64 %211
  store i64 %214, i64* %11, align 8
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* nonnull %4) #13
  %215 = call i8* @_Znwm(i64 72) #14
  %216 = bitcast i8* %215 to i64*
  store i64 %204, i64* %216, align 8
  %217 = getelementptr inbounds i8, i8* %215, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 64, i1 false) #13
  %218 = ptrtoint i8* %215 to i64
  %219 = getelementptr inbounds %"struct.viz::BspNode", %"struct.viz::BspNode"* %1, i64 0, i32 4
  %220 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %219, i64 0, i32 0, i32 0, i32 0
  %221 = load %"struct.viz::BspNode"*, %"struct.viz::BspNode"** %220, align 8
  %222 = bitcast %"class.std::__1::unique_ptr.11"* %219 to i64*
  store i64 %218, i64* %222, align 8
  %223 = icmp eq %"struct.viz::BspNode"* %221, null
  %224 = bitcast i8* %215 to %"struct.viz::BspNode"*
  br i1 %223, label %228, label %225

225:                                              ; preds = %199
  call void @_ZN3viz7BspNodeD2Ev(%"struct.viz::BspNode"* nonnull %221) #13
  %226 = bitcast %"struct.viz::BspNode"* %221 to i8*
  call void @_ZdlPv(i8* %226) #14
  %227 = load %"struct.viz::BspNode"*, %"struct.viz::BspNode"** %220, align 8
  br label %228

228:                                              ; preds = %199, %225
  %229 = phi %"struct.viz::BspNode"* [ %224, %199 ], [ %227, %225 ]
  call void @_ZN3viz7BspTree9BuildTreeEPNS_7BspNodeEPN4base14circular_dequeINSt3__110unique_ptrINS_11DrawPolygonENS5_14default_deleteIS7_EEEEEE(%"class.viz::BspTree"* %0, %"struct.viz::BspNode"* %229, %"class.base::circular_deque"* nonnull %4)
  br label %230

230:                                              ; preds = %196, %228
  %231 = load i64, i64* %15, align 8
  %232 = load i64, i64* %16, align 8
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE13DestructRangeEmm(%"class.base::circular_deque"* nonnull %5, i64 %231, i64 %232) #13
  %233 = bitcast %"class.base::circular_deque"* %5 to i8**
  %234 = load i8*, i8** %233, align 8
  call void @free(i8* %234) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #13
  %235 = load i64, i64* %11, align 8
  %236 = load i64, i64* %12, align 8
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE13DestructRangeEmm(%"class.base::circular_deque"* nonnull %4, i64 %235, i64 %236) #13
  %237 = bitcast %"class.base::circular_deque"* %4 to i8**
  %238 = load i8*, i8** %237, align 8
  call void @free(i8* %238) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz7BspTreeD2Ev(%"class.viz::BspTree"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::BspTree", %"class.viz::BspTree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.viz::BspNode"*, %"struct.viz::BspNode"** %2, align 8
  store %"struct.viz::BspNode"* null, %"struct.viz::BspNode"** %2, align 8
  %4 = icmp eq %"struct.viz::BspNode"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN3viz7BspNodeD2Ev(%"struct.viz::BspNode"* nonnull %3) #13
  %6 = bitcast %"struct.viz::BspNode"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

declare void @_ZNK3viz11DrawPolygon12SplitPolygonENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEEPS5_S6_Pb(%"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN3viz7BspTree25GetCameraPositionRelativeERKNS_11DrawPolygonE(%"class.viz::DrawPolygon"* nocapture readonly dereferenceable(56)) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1, i32 2
  %3 = load float, float* %2, align 4
  %4 = fcmp ule float %3, 0.000000e+00
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: nounwind
declare void @_ZN3viz11DrawPolygonD1Ev(%"class.viz::DrawPolygon"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %1
  ret %"class.std::__1::unique_ptr"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.std::__1::unique_ptr"*, align 8
  %6 = alloca %"class.std::__1::unique_ptr"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"** %5, align 8
  store %"class.std::__1::unique_ptr"* %2, %"class.std::__1::unique_ptr"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"class.std::__1::unique_ptr"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::unique_ptr"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  %17 = bitcast %"class.std::__1::unique_ptr"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %26 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr"* %26, %27
  br i1 %28, label %41, label %29

29:                                               ; preds = %25, %36
  %30 = phi %"class.std::__1::unique_ptr"* [ %38, %36 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %31, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %31, align 8
  %33 = icmp eq %"class.viz::DrawPolygon"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  call void @_ZN3viz11DrawPolygonD1Ev(%"class.viz::DrawPolygon"* nonnull %32) #13
  %35 = bitcast %"class.viz::DrawPolygon"* %32 to i8*
  call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %29, %34
  %37 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  store %"class.std::__1::unique_ptr"* %38, %"class.std::__1::unique_ptr"** %5, align 8
  %39 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %40 = icmp eq %"class.std::__1::unique_ptr"* %38, %39
  br i1 %40, label %41, label %29

41:                                               ; preds = %36, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #13
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #13
  br i1 %31, label %32, label %33, !prof !3

32:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #13
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #13
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #13
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #6 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"class.std::__1::unique_ptr"* %11, %"class.std::__1::unique_ptr"* %12, %"class.std::__1::unique_ptr"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"class.std::__1::unique_ptr"* %19, %"class.std::__1::unique_ptr"* %20, %"class.std::__1::unique_ptr"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"class.std::__1::unique_ptr"* %24, %"class.std::__1::unique_ptr"* %25, %"class.std::__1::unique_ptr"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"class.std::__1::unique_ptr"* %0 to i64
  %6 = icmp ult %"class.std::__1::unique_ptr"* %2, %1
  br i1 %6, label %7, label %23

7:                                                ; preds = %3
  %8 = ptrtoint %"class.std::__1::unique_ptr"* %2 to i64
  %9 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #13
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #13
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !3

16:                                               ; preds = %7
  tail call void @llvm.trap() #13
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %3, %17, %20
  %24 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %24, label %40, label %25

25:                                               ; preds = %23, %36
  %26 = phi %"class.std::__1::unique_ptr"* [ %38, %36 ], [ %2, %23 ]
  %27 = phi %"class.std::__1::unique_ptr"* [ %37, %36 ], [ %0, %23 ]
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::unique_ptr"* %27 to i64*
  %30 = load i64, i64* %29, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %28, align 8
  %31 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  store i64 %30, i64* %31, align 8
  %32 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %28, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %28, align 8
  %33 = icmp eq %"class.viz::DrawPolygon"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %25
  call void @_ZN3viz11DrawPolygonD1Ev(%"class.viz::DrawPolygon"* nonnull %32) #13
  %35 = bitcast %"class.viz::DrawPolygon"* %32 to i8*
  call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %25, %34
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 1
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 1
  %39 = icmp eq %"class.std::__1::unique_ptr"* %37, %1
  br i1 %39, label %40, label %25

40:                                               ; preds = %36, %23
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %7, %"class.std::__1::unique_ptr"* %8, %"class.std::__1::unique_ptr"* %12)
  %13 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"class.std::__1::unique_ptr"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %7, %"class.std::__1::unique_ptr"* %15, %"class.std::__1::unique_ptr"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3viz11DrawPolygonENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.4"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.viz::DrawPolygon"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !4

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %142, align 8
  store %"class.viz::DrawPolygon"* null, %"class.viz::DrawPolygon"** %142, align 8
  %144 = icmp eq %"class.viz::DrawPolygon"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN3viz11DrawPolygonD1Ev(%"class.viz::DrawPolygon"* nonnull %143) #13
  %146 = bitcast %"class.viz::DrawPolygon"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #14
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #14
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #13
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #13
  br i1 %37, label %38, label %39, !prof !3

38:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #13
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN3viz11DrawPolygonENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #13
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #13
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN3viz11DrawPolygonENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %1
  ret %"class.std::__1::unique_ptr"* %25
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
