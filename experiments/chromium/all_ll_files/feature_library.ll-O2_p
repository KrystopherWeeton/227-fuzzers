; ModuleID = '../../media/learning/common/feature_library.cc'
source_filename = "../../media/learning/common/feature_library.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.media::learning::LearningTask::ValueDescription" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [12 x i8] c"NetworkType\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"BatteryPower\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning14FeatureLibrary11NetworkTypeEv(%"struct.media::learning::LearningTask::ValueDescription"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  store i8 11, i8* %3, align 1
  %4 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i64 11, i1 false) #2
  %5 = getelementptr inbounds i8, i8* %4, i64 11
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %0, i64 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %0, i64 0, i32 2
  store i32 1, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning14FeatureLibrary12BatteryPowerEv(%"struct.media::learning::LearningTask::ValueDescription"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  store i8 12, i8* %3, align 1
  %4 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12, i1 false) #2
  %5 = getelementptr inbounds i8, i8* %4, i64 12
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %0, i64 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %0, i64 0, i32 2
  store i32 1, i32* %7, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
