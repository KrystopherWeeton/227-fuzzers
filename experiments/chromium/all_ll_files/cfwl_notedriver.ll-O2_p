; ModuleID = '../../third_party/pdfium/xfa/fwl/cfwl_notedriver.cpp'
source_filename = "../../third_party/pdfium/xfa/fwl/cfwl_notedriver.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.fxcrt::UnownedPtr" = type { %class.CFWL_Widget* }
%class.CFWL_Widget = type { %class.IFWL_WidgetDelegate, %"class.CFWL_Widget::Properties", %class.CFX_RectF, i32, i64, %"class.cppgc::internal::BasicMember.17", %"class.cppgc::internal::BasicMember.18", %"class.cppgc::internal::BasicMember.19", %"class.cppgc::internal::BasicMember.20", %"class.cppgc::internal::BasicMember" }
%class.IFWL_WidgetDelegate = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.CFWL_Widget::Properties" = type { i32, i32, i32 }
%class.CFX_RectF = type { float, float, float, float }
%"class.cppgc::internal::BasicMember.17" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.18" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.19" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.20" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%class.CFX_PTemplate = type { float, float }
%class.CFWL_NoteDriver = type { %"class.std::__1::map", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.CFWL_NoteDriver::Target" = type { i8, %"class.cppgc::internal::BasicMember", %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.CFWL_NoteDriver::Target"* }
%"class.cppgc::Visitor" = type { i32 (...)** }
%class.CFWL_Event = type { i32 (...)**, i32, %class.CFWL_Widget*, %class.CFWL_Widget* }
%"class.std::__1::__tree_node.49" = type { %"class.std::__1::__tree_node_base.base", %"class.cppgc::internal::BasicMember" }
%class.CFWL_Message = type { i32 (...)**, i32, %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr" }
%"struct.cppgc::internal::CagedHeapLocalData" = type { i8, %"class.cppgc::internal::HeapBase"* }
%"class.cppgc::internal::HeapBase" = type opaque
%class.CFWL_App = type { %"class.cppgc::internal::BasicMember.35", %"class.cppgc::internal::BasicMember.19", %"class.cppgc::internal::BasicMember.36" }
%"class.cppgc::internal::BasicMember.35" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.36" = type { %"class.cppgc::internal::MemberBase" }
%class.CFWL_WidgetMgr = type { %"class.cppgc::internal::BasicMember.22", %"class.cppgc::internal::BasicMember.18", %"class.std::__1::map.23" }
%"class.cppgc::internal::BasicMember.22" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::map.23" = type { %"class.std::__1::__tree.24" }
%"class.std::__1::__tree.24" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.CFWL_MessageMouseWheel = type { %class.CFWL_Message, %class.CFX_PTemplate, %class.CFX_VTemplate }
%class.CFX_VTemplate = type { %class.CFX_PTemplate.37 }
%class.CFX_PTemplate.37 = type { i32, i32 }
%class.CFWL_MessageMouse = type <{ %class.CFWL_Message, i8, i8, [2 x i8], %class.CFX_PTemplate, [4 x i8] }>

$_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN15CFWL_NoteDriver6TargetENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIN5cppgc8internal11BasicMemberI11CFWL_WidgetNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_4lessIS8_EENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

@_ZN12_GLOBAL__N_119g_next_listener_keyE = internal unnamed_addr global i64 1, align 8
@__const._ZN15CFWL_NoteDriver14MouseSecondaryEP12CFWL_Message.msHover = private unnamed_addr constant <{ { i32 (...)**, i32, [4 x i8], %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr" }, i8, i8, [2 x i8], %class.CFX_PTemplate, [4 x i8] }> <{ { i32 (...)**, i32, [4 x i8], %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.fxcrt::UnownedPtr" { %class.CFWL_Widget* inttoptr (i64 -6148914691236517206 to %class.CFWL_Widget*) }, %"class.fxcrt::UnownedPtr" { %class.CFWL_Widget* inttoptr (i64 -6148914691236517206 to %class.CFWL_Widget*) } }, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %class.CFX_PTemplate { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN15CFWL_NoteDriverC1Ev = hidden unnamed_addr alias void (%class.CFWL_NoteDriver*), void (%class.CFWL_NoteDriver*)* @_ZN15CFWL_NoteDriverC2Ev
@_ZN15CFWL_NoteDriverD1Ev = hidden unnamed_addr alias void (%class.CFWL_NoteDriver*), void (%class.CFWL_NoteDriver*)* @_ZN15CFWL_NoteDriverD2Ev
@_ZN15CFWL_NoteDriver6TargetC1EP11CFWL_Widget = hidden unnamed_addr alias void (%"class.CFWL_NoteDriver::Target"*, %class.CFWL_Widget*), void (%"class.CFWL_NoteDriver::Target"*, %class.CFWL_Widget*)* @_ZN15CFWL_NoteDriver6TargetC2EP11CFWL_Widget
@_ZN15CFWL_NoteDriver6TargetD1Ev = hidden unnamed_addr alias void (%"class.CFWL_NoteDriver::Target"*), void (%"class.CFWL_NoteDriver::Target"*)* @_ZN15CFWL_NoteDriver6TargetD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_NoteDriverC2Ev(%class.CFWL_NoteDriver*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_node_base"** %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %3, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast i8** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_NoteDriverD2Ev(%class.CFWL_NoteDriver*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN15CFWL_NoteDriver6TargetENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %2, %"class.std::__1::__tree_node"* %5) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CFWL_NoteDriver5TraceEPN5cppgc7VisitorE(%class.CFWL_NoteDriver*, %"class.cppgc::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  br label %43

9:                                                ; preds = %132, %2
  %10 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 1
  %11 = bitcast %"class.cppgc::internal::BasicMember"* %10 to i64*
  %12 = load atomic i64, i64* %11 monotonic, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %9
  %15 = inttoptr i64 %12 to i8*
  %16 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %17 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %17, i64 4
  %19 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %18, align 8
  tail call void %19(%"class.cppgc::Visitor"* %1, i8* nonnull %15, i8* nonnull %15, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv) #7
  br label %20

20:                                               ; preds = %9, %14
  %21 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 2
  %22 = bitcast %"class.cppgc::internal::BasicMember"* %21 to i64*
  %23 = load atomic i64, i64* %22 monotonic, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %23 to i8*
  %27 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %28 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %28, i64 4
  %30 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %29, align 8
  tail call void %30(%"class.cppgc::Visitor"* %1, i8* nonnull %26, i8* nonnull %26, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv) #7
  br label %31

31:                                               ; preds = %20, %25
  %32 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 3
  %33 = bitcast %"class.cppgc::internal::BasicMember"* %32 to i64*
  %34 = load atomic i64, i64* %33 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = inttoptr i64 %34 to i8*
  %38 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %39 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %39, i64 4
  %41 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %40, align 8
  tail call void %41(%"class.cppgc::Visitor"* %1, i8* nonnull %37, i8* nonnull %37, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv) #7
  br label %42

42:                                               ; preds = %31, %36
  ret void

43:                                               ; preds = %7, %132
  %44 = phi %"class.std::__1::__tree_end_node"* [ %4, %7 ], [ %133, %132 ]
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 5
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.CFWL_NoteDriver::Target"**
  %47 = load %"class.CFWL_NoteDriver::Target"*, %"class.CFWL_NoteDriver::Target"** %46, align 8
  %48 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %47, i64 0, i32 1
  %49 = bitcast %"class.cppgc::internal::BasicMember"* %48 to i64*
  %50 = load atomic i64, i64* %49 monotonic, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %43
  %53 = inttoptr i64 %50 to i8*
  %54 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %8, align 8
  %55 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %54, i64 4
  %56 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.cppgc::Visitor"* %1, i8* nonnull %53, i8* nonnull %53, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv) #7
  br label %57

57:                                               ; preds = %52, %43
  %58 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %47, i64 0, i32 2, i32 0, i32 0
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %47, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %61 = icmp eq %"class.std::__1::__tree_end_node"* %59, %60
  br i1 %61, label %104, label %62

62:                                               ; preds = %57, %101
  %63 = phi %"class.std::__1::__tree_end_node"* [ %102, %101 ], [ %59, %57 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 4
  %65 = bitcast %"class.std::__1::__tree_end_node"* %64 to i64*
  %66 = load atomic i64, i64* %65 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %62
  %69 = inttoptr i64 %66 to i8*
  %70 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %8, align 8
  %71 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %70, i64 4
  %72 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.cppgc::Visitor"* %1, i8* nonnull %69, i8* nonnull %69, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv) #7
  br label %73

73:                                               ; preds = %68, %62
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 1, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, null
  br i1 %76, label %77, label %85

77:                                               ; preds = %73
  %78 = bitcast %"class.std::__1::__tree_end_node"* %63 to %"class.std::__1::__tree_node_base"*
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 2
  %80 = bitcast %"class.std::__1::__tree_end_node"* %79 to %"class.std::__1::__tree_end_node"**
  %81 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %80, align 8
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 0, i32 0
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node_base"* %83, %78
  br i1 %84, label %101, label %92

85:                                               ; preds = %73, %85
  %86 = phi %"class.std::__1::__tree_node_base"* [ %88, %85 ], [ %75, %73 ]
  %87 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %90, label %85

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %86, i64 0, i32 0
  br label %101

92:                                               ; preds = %77, %92
  %93 = phi %"class.std::__1::__tree_end_node"** [ %96, %92 ], [ %80, %77 ]
  %94 = bitcast %"class.std::__1::__tree_end_node"** %93 to %"class.std::__1::__tree_node_base"**
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 0, i32 2
  %97 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, %95
  br i1 %100, label %101, label %92

101:                                              ; preds = %92, %90, %77
  %102 = phi %"class.std::__1::__tree_end_node"* [ %91, %90 ], [ %81, %77 ], [ %97, %92 ]
  %103 = icmp eq %"class.std::__1::__tree_end_node"* %102, %60
  br i1 %103, label %104, label %62

104:                                              ; preds = %101, %57
  %105 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 1, i32 0
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node_base"* %106, null
  br i1 %107, label %108, label %116

108:                                              ; preds = %104
  %109 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::__tree_node_base"*
  %110 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 2
  %111 = bitcast %"class.std::__1::__tree_end_node"* %110 to %"class.std::__1::__tree_end_node"**
  %112 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 0, i32 0
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node_base"* %114, %109
  br i1 %115, label %132, label %123

116:                                              ; preds = %104, %116
  %117 = phi %"class.std::__1::__tree_node_base"* [ %119, %116 ], [ %106, %104 ]
  %118 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 0, i32 0
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node_base"* %119, null
  br i1 %120, label %121, label %116

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 0
  br label %132

123:                                              ; preds = %108, %123
  %124 = phi %"class.std::__1::__tree_end_node"** [ %127, %123 ], [ %111, %108 ]
  %125 = bitcast %"class.std::__1::__tree_end_node"** %124 to %"class.std::__1::__tree_node_base"**
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %126, i64 0, i32 2
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %127, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %126
  br i1 %131, label %132, label %123

132:                                              ; preds = %123, %108, %121
  %133 = phi %"class.std::__1::__tree_end_node"* [ %122, %121 ], [ %112, %108 ], [ %128, %123 ]
  %134 = icmp eq %"class.std::__1::__tree_end_node"* %133, %5
  br i1 %134, label %9, label %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CFWL_NoteDriver6Target5TraceEPN5cppgc7VisitorE(%"class.CFWL_NoteDriver::Target"*, %"class.cppgc::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 1
  %4 = bitcast %"class.cppgc::internal::BasicMember"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %10 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %10, i64 4
  %12 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.cppgc::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %14, align 8
  %16 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %17 = icmp eq %"class.std::__1::__tree_end_node"* %15, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  br label %21

20:                                               ; preds = %60, %13
  ret void

21:                                               ; preds = %18, %60
  %22 = phi %"class.std::__1::__tree_end_node"* [ %15, %18 ], [ %61, %60 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 4
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to i64*
  %25 = load atomic i64, i64* %24 monotonic, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %21
  %28 = inttoptr i64 %25 to i8*
  %29 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %19, align 8
  %30 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %29, i64 4
  %31 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %30, align 8
  tail call void %31(%"class.cppgc::Visitor"* %1, i8* nonnull %28, i8* nonnull %28, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv) #7
  br label %32

32:                                               ; preds = %21, %27
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 1, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %44

36:                                               ; preds = %32
  %37 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node_base"*
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 2
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_end_node"**
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %37
  br i1 %43, label %60, label %51

44:                                               ; preds = %32, %44
  %45 = phi %"class.std::__1::__tree_node_base"* [ %47, %44 ], [ %34, %32 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %44

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0
  br label %60

51:                                               ; preds = %36, %51
  %52 = phi %"class.std::__1::__tree_end_node"** [ %55, %51 ], [ %39, %36 ]
  %53 = bitcast %"class.std::__1::__tree_end_node"** %52 to %"class.std::__1::__tree_node_base"**
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 2
  %56 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, %54
  br i1 %59, label %60, label %51

60:                                               ; preds = %51, %36, %49
  %61 = phi %"class.std::__1::__tree_end_node"* [ %50, %49 ], [ %40, %36 ], [ %56, %51 ]
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %61, %16
  br i1 %62, label %20, label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_NoteDriver9SendEventEP10CFWL_Event(%class.CFWL_NoteDriver*, %class.CFWL_Event*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CFWL_Event, %class.CFWL_Event* %1, i64 0, i32 2
  br label %10

9:                                                ; preds = %89, %2
  ret void

10:                                               ; preds = %7, %89
  %11 = phi %"class.std::__1::__tree_end_node"* [ %4, %7 ], [ %90, %89 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 5
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.CFWL_NoteDriver::Target"**
  %14 = load %"class.CFWL_NoteDriver::Target"*, %"class.CFWL_NoteDriver::Target"** %13, align 8
  %15 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %14, i64 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %61, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %14, i64 0, i32 1
  %20 = bitcast %"class.cppgc::internal::BasicMember"* %19 to %class.CFWL_Widget**
  %21 = load %class.CFWL_Widget*, %class.CFWL_Widget** %20, align 8
  %22 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %21, i64 0, i32 8
  %23 = bitcast %"class.cppgc::internal::BasicMember.20"* %22 to %class.IFWL_WidgetDelegate**
  %24 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %23, align 8
  %25 = icmp eq %class.IFWL_WidgetDelegate* %24, null
  %26 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %21, i64 0, i32 0
  %27 = select i1 %25, %class.IFWL_WidgetDelegate* %26, %class.IFWL_WidgetDelegate* %24
  %28 = icmp eq %class.IFWL_WidgetDelegate* %27, null
  br i1 %28, label %61, label %29

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %14, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %56, label %33

33:                                               ; preds = %29
  %34 = load %class.CFWL_Widget*, %class.CFWL_Widget** %8, align 8
  %35 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %14, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node.49"**
  %37 = load %"class.std::__1::__tree_node.49"*, %"class.std::__1::__tree_node.49"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node.49"* %37, null
  br i1 %38, label %61, label %39

39:                                               ; preds = %33, %52
  %40 = phi %"class.std::__1::__tree_node.49"* [ %54, %52 ], [ %37, %33 ]
  %41 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %40, i64 0, i32 1
  %42 = bitcast %"class.cppgc::internal::BasicMember"* %41 to %class.CFWL_Widget**
  %43 = load %class.CFWL_Widget*, %class.CFWL_Widget** %42, align 8
  %44 = icmp ult %class.CFWL_Widget* %34, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = bitcast %"class.std::__1::__tree_node.49"* %40 to %"class.std::__1::__tree_node.49"**
  br label %52

47:                                               ; preds = %39
  %48 = icmp ult %class.CFWL_Widget* %43, %34
  br i1 %48, label %49, label %56

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %40, i64 0, i32 0, i32 1
  %51 = bitcast %"class.std::__1::__tree_node_base"** %50 to %"class.std::__1::__tree_node.49"**
  br label %52

52:                                               ; preds = %49, %45
  %53 = phi %"class.std::__1::__tree_node.49"** [ %46, %45 ], [ %51, %49 ]
  %54 = load %"class.std::__1::__tree_node.49"*, %"class.std::__1::__tree_node.49"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node.49"* %54, null
  br i1 %55, label %61, label %39

56:                                               ; preds = %47, %29
  %57 = bitcast %class.IFWL_WidgetDelegate* %27 to void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)***
  %58 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)**, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)*** %57, align 8
  %59 = getelementptr inbounds void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)** %58, i64 4
  %60 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)** %59, align 8
  tail call void %60(%class.IFWL_WidgetDelegate* nonnull %27, %class.CFWL_Event* %1) #7
  br label %61

61:                                               ; preds = %52, %10, %56, %33, %18
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 1, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, null
  br i1 %64, label %65, label %73

65:                                               ; preds = %61
  %66 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node_base"*
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 2
  %68 = bitcast %"class.std::__1::__tree_end_node"* %67 to %"class.std::__1::__tree_end_node"**
  %69 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, %66
  br i1 %72, label %89, label %80

73:                                               ; preds = %61, %73
  %74 = phi %"class.std::__1::__tree_node_base"* [ %76, %73 ], [ %63, %61 ]
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node_base"* %76, null
  br i1 %77, label %78, label %73

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %74, i64 0, i32 0
  br label %89

80:                                               ; preds = %65, %80
  %81 = phi %"class.std::__1::__tree_end_node"** [ %84, %80 ], [ %68, %65 ]
  %82 = bitcast %"class.std::__1::__tree_end_node"** %81 to %"class.std::__1::__tree_node_base"**
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %83, i64 0, i32 2
  %85 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 0, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, %83
  br i1 %88, label %89, label %80

89:                                               ; preds = %80, %65, %78
  %90 = phi %"class.std::__1::__tree_end_node"* [ %79, %78 ], [ %69, %65 ], [ %85, %80 ]
  %91 = icmp eq %"class.std::__1::__tree_end_node"* %90, %5
  br i1 %91, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CFWL_NoteDriver6Target12ProcessEventEP10CFWL_Event(%"class.CFWL_NoteDriver::Target"* nocapture readonly, %class.CFWL_Event*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 1
  %4 = bitcast %"class.cppgc::internal::BasicMember"* %3 to %class.CFWL_Widget**
  %5 = load %class.CFWL_Widget*, %class.CFWL_Widget** %4, align 8
  %6 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %5, i64 0, i32 8
  %7 = bitcast %"class.cppgc::internal::BasicMember.20"* %6 to %class.IFWL_WidgetDelegate**
  %8 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %7, align 8
  %9 = icmp eq %class.IFWL_WidgetDelegate* %8, null
  %10 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %5, i64 0, i32 0
  %11 = select i1 %9, %class.IFWL_WidgetDelegate* %10, %class.IFWL_WidgetDelegate* %8
  %12 = icmp eq %class.IFWL_WidgetDelegate* %11, null
  br i1 %12, label %46, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %41, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.CFWL_Event, %class.CFWL_Event* %1, i64 0, i32 2
  %19 = load %class.CFWL_Widget*, %class.CFWL_Widget** %18, align 8
  %20 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node.49"**
  %22 = load %"class.std::__1::__tree_node.49"*, %"class.std::__1::__tree_node.49"** %21, align 8
  %23 = icmp eq %"class.std::__1::__tree_node.49"* %22, null
  br i1 %23, label %46, label %24

24:                                               ; preds = %17, %37
  %25 = phi %"class.std::__1::__tree_node.49"* [ %39, %37 ], [ %22, %17 ]
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %25, i64 0, i32 1
  %27 = bitcast %"class.cppgc::internal::BasicMember"* %26 to %class.CFWL_Widget**
  %28 = load %class.CFWL_Widget*, %class.CFWL_Widget** %27, align 8
  %29 = icmp ult %class.CFWL_Widget* %19, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = bitcast %"class.std::__1::__tree_node.49"* %25 to %"class.std::__1::__tree_node.49"**
  br label %37

32:                                               ; preds = %24
  %33 = icmp ult %class.CFWL_Widget* %28, %19
  br i1 %33, label %34, label %41

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %25, i64 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::__tree_node_base"** %35 to %"class.std::__1::__tree_node.49"**
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi %"class.std::__1::__tree_node.49"** [ %31, %30 ], [ %36, %34 ]
  %39 = load %"class.std::__1::__tree_node.49"*, %"class.std::__1::__tree_node.49"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node.49"* %39, null
  br i1 %40, label %46, label %24

41:                                               ; preds = %32, %13
  %42 = bitcast %class.IFWL_WidgetDelegate* %11 to void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)***
  %43 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)**, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)** %43, i64 4
  %45 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)** %44, align 8
  tail call void %45(%class.IFWL_WidgetDelegate* nonnull %11, %class.CFWL_Event* %1) #7
  br label %46

46:                                               ; preds = %37, %17, %2, %41
  %47 = phi i1 [ true, %41 ], [ false, %2 ], [ false, %17 ], [ false, %37 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_NoteDriver19RegisterEventTargetEP11CFWL_WidgetS1_(%class.CFWL_NoteDriver*, %class.CFWL_Widget*, %class.CFWL_Widget*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %class.CFWL_Widget* %1 to i64
  %5 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %1, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = load i64, i64* @_ZN12_GLOBAL__N_119g_next_listener_keyE, align 8
  %10 = add i64 %9, 1
  store i64 %10, i64* @_ZN12_GLOBAL__N_119g_next_listener_keyE, align 8
  store i64 %9, i64* %5, align 8
  br label %11

11:                                               ; preds = %8, %3
  %12 = phi i64 [ %9, %8 ], [ %6, %3 ]
  %13 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node"**
  %15 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  %16 = icmp eq %"class.std::__1::__tree_node"* %15, null
  br i1 %16, label %45, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %19

19:                                               ; preds = %41, %17
  %20 = phi %"class.std::__1::__tree_node"* [ %44, %41 ], [ %15, %17 ]
  %21 = phi %"class.std::__1::__tree_node_base"** [ %43, %41 ], [ %18, %17 ]
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 1, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %12, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %41

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 0
  br label %47

31:                                               ; preds = %19
  %32 = icmp ult i64 %23, %12
  br i1 %32, label %33, label %39

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 1
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 0
  br label %47

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 0
  br label %47

41:                                               ; preds = %33, %25
  %42 = phi %"class.std::__1::__tree_node_base"* [ %27, %25 ], [ %35, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %26, %25 ], [ %34, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"* %42 to %"class.std::__1::__tree_node"*
  br label %19

45:                                               ; preds = %11
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 0, i32 0
  br label %47

47:                                               ; preds = %45, %39, %37, %29
  %48 = phi %"class.std::__1::__tree_end_node"* [ %13, %45 ], [ %30, %29 ], [ %38, %37 ], [ %40, %39 ]
  %49 = phi %"class.std::__1::__tree_node_base"** [ %46, %45 ], [ %26, %29 ], [ %34, %37 ], [ %21, %39 ]
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node"* %51, null
  br i1 %52, label %53, label %80

53:                                               ; preds = %47
  %54 = tail call i8* @_Znwm(i64 48) #8, !noalias !3
  %55 = getelementptr inbounds i8, i8* %54, i64 32
  %56 = bitcast i8* %55 to i64*
  store i64 %12, i64* %56, align 8, !noalias !3
  %57 = getelementptr inbounds i8, i8* %54, i64 40
  %58 = bitcast i8* %57 to i64*
  store i64 0, i64* %58, align 8, !noalias !3
  %59 = bitcast i8* %54 to %"class.std::__1::__tree_node"*
  %60 = bitcast i8* %54 to %"class.std::__1::__tree_node_base"*
  %61 = getelementptr inbounds i8, i8* %54, i64 16
  %62 = bitcast i8* %61 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %48, %"class.std::__1::__tree_end_node"** %62, align 8
  %63 = bitcast %"class.std::__1::__tree_node_base"** %49 to i8**
  store i8* %54, i8** %63, align 8
  %64 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %65, i64 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %53
  %70 = ptrtoint %"class.std::__1::__tree_node_base"* %67 to i64
  %71 = bitcast %class.CFWL_NoteDriver* %0 to i64*
  store i64 %70, i64* %71, align 8
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  br label %73

73:                                               ; preds = %69, %53
  %74 = phi %"class.std::__1::__tree_node_base"* [ %60, %53 ], [ %72, %69 ]
  %75 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"* %74) #7
  %77 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 1
  store i64 %79, i64* %77, align 8
  br label %80

80:                                               ; preds = %47, %73
  %81 = phi %"class.std::__1::__tree_node"* [ %59, %73 ], [ %51, %47 ]
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %83 = load %"class.CFWL_NoteDriver::Target"*, %"class.CFWL_NoteDriver::Target"** %82, align 8
  %84 = icmp eq %"class.CFWL_NoteDriver::Target"* %83, null
  br i1 %84, label %85, label %171

85:                                               ; preds = %80
  %86 = tail call i8* @_Znwm(i64 40) #8
  store i8 1, i8* %86, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 8
  %88 = bitcast i8* %87 to i64*
  store i64 %4, i64* %88, align 8
  %89 = getelementptr inbounds i8, i8* %86, i64 24
  %90 = getelementptr inbounds i8, i8* %86, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #7
  %91 = bitcast i8* %90 to i8**
  store i8* %89, i8** %91, align 8
  %92 = ptrtoint i8* %86 to i64
  %93 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  %94 = icmp eq %"class.std::__1::__tree_node"* %93, null
  br i1 %94, label %123, label %95

95:                                               ; preds = %85
  %96 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %97

97:                                               ; preds = %119, %95
  %98 = phi %"class.std::__1::__tree_node"* [ %122, %119 ], [ %93, %95 ]
  %99 = phi %"class.std::__1::__tree_node_base"** [ %121, %119 ], [ %96, %95 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %98, i64 0, i32 1, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = icmp ult i64 %12, %101
  br i1 %102, label %103, label %109

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %98, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node_base"* %105, null
  br i1 %106, label %107, label %119

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %98, i64 0, i32 0, i32 0
  br label %125

109:                                              ; preds = %97
  %110 = icmp ult i64 %101, %12
  br i1 %110, label %111, label %117

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %98, i64 0, i32 0, i32 1
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, null
  br i1 %114, label %115, label %119

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %98, i64 0, i32 0, i32 0
  br label %125

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %98, i64 0, i32 0, i32 0
  br label %125

119:                                              ; preds = %111, %103
  %120 = phi %"class.std::__1::__tree_node_base"* [ %105, %103 ], [ %113, %111 ]
  %121 = phi %"class.std::__1::__tree_node_base"** [ %104, %103 ], [ %112, %111 ]
  %122 = bitcast %"class.std::__1::__tree_node_base"* %120 to %"class.std::__1::__tree_node"*
  br label %97

123:                                              ; preds = %85
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 0, i32 0
  br label %125

125:                                              ; preds = %123, %117, %115, %107
  %126 = phi %"class.std::__1::__tree_end_node"* [ %13, %123 ], [ %108, %107 ], [ %116, %115 ], [ %118, %117 ]
  %127 = phi %"class.std::__1::__tree_node_base"** [ %124, %123 ], [ %104, %107 ], [ %112, %115 ], [ %99, %117 ]
  %128 = bitcast %"class.std::__1::__tree_node_base"** %127 to %"class.std::__1::__tree_node"**
  %129 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %128, align 8
  %130 = icmp eq %"class.std::__1::__tree_node"* %129, null
  br i1 %130, label %131, label %158

131:                                              ; preds = %125
  %132 = tail call i8* @_Znwm(i64 48) #8, !noalias !6
  %133 = getelementptr inbounds i8, i8* %132, i64 32
  %134 = bitcast i8* %133 to i64*
  store i64 %12, i64* %134, align 8, !noalias !6
  %135 = getelementptr inbounds i8, i8* %132, i64 40
  %136 = bitcast i8* %135 to i64*
  store i64 0, i64* %136, align 8, !noalias !6
  %137 = bitcast i8* %132 to %"class.std::__1::__tree_node"*
  %138 = bitcast i8* %132 to %"class.std::__1::__tree_node_base"*
  %139 = getelementptr inbounds i8, i8* %132, i64 16
  %140 = bitcast i8* %139 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %126, %"class.std::__1::__tree_end_node"** %140, align 8
  %141 = bitcast %"class.std::__1::__tree_node_base"** %127 to i8**
  store i8* %132, i8** %141, align 8
  %142 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %142, align 8
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %143, i64 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %131
  %148 = ptrtoint %"class.std::__1::__tree_node_base"* %145 to i64
  %149 = bitcast %class.CFWL_NoteDriver* %0 to i64*
  store i64 %148, i64* %149, align 8
  %150 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  br label %151

151:                                              ; preds = %147, %131
  %152 = phi %"class.std::__1::__tree_node_base"* [ %138, %131 ], [ %150, %147 ]
  %153 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %154 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %153, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %154, %"class.std::__1::__tree_node_base"* %152) #7
  %155 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %156 = load i64, i64* %155, align 8
  %157 = add i64 %156, 1
  store i64 %157, i64* %155, align 8
  br label %158

158:                                              ; preds = %125, %151
  %159 = phi %"class.std::__1::__tree_node"* [ %137, %151 ], [ %129, %125 ]
  %160 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %159, i64 0, i32 1, i32 0, i32 1
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 0, i32 0, i32 0, i32 0
  %162 = load %"class.CFWL_NoteDriver::Target"*, %"class.CFWL_NoteDriver::Target"** %161, align 8
  %163 = bitcast %"class.std::__1::unique_ptr"* %160 to i64*
  store i64 %92, i64* %163, align 8
  %164 = icmp eq %"class.CFWL_NoteDriver::Target"* %162, null
  br i1 %164, label %171, label %165

165:                                              ; preds = %158
  %166 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %162, i64 0, i32 2, i32 0
  %167 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %162, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %168 = bitcast %"class.std::__1::__tree_end_node"* %167 to %"class.std::__1::__tree_node.49"**
  %169 = load %"class.std::__1::__tree_node.49"*, %"class.std::__1::__tree_node.49"** %168, align 8
  tail call void @_ZNSt3__16__treeIN5cppgc8internal11BasicMemberI11CFWL_WidgetNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_4lessIS8_EENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.6"* %166, %"class.std::__1::__tree_node.49"* %169) #7
  %170 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %162, i64 0, i32 0
  tail call void @_ZdlPv(i8* %170) #8
  br label %171

171:                                              ; preds = %80, %158, %165
  %172 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  %173 = icmp eq %"class.std::__1::__tree_node"* %172, null
  br i1 %173, label %202, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %176

176:                                              ; preds = %198, %174
  %177 = phi %"class.std::__1::__tree_node"* [ %201, %198 ], [ %172, %174 ]
  %178 = phi %"class.std::__1::__tree_node_base"** [ %200, %198 ], [ %175, %174 ]
  %179 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %177, i64 0, i32 1, i32 0, i32 0
  %180 = load i64, i64* %179, align 8
  %181 = icmp ult i64 %12, %180
  br i1 %181, label %182, label %188

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %177, i64 0, i32 0, i32 0, i32 0
  %184 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %183, align 8
  %185 = icmp eq %"class.std::__1::__tree_node_base"* %184, null
  br i1 %185, label %186, label %198

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %177, i64 0, i32 0, i32 0
  br label %204

188:                                              ; preds = %176
  %189 = icmp ult i64 %180, %12
  br i1 %189, label %190, label %196

190:                                              ; preds = %188
  %191 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %177, i64 0, i32 0, i32 1
  %192 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %191, align 8
  %193 = icmp eq %"class.std::__1::__tree_node_base"* %192, null
  br i1 %193, label %194, label %198

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %177, i64 0, i32 0, i32 0
  br label %204

196:                                              ; preds = %188
  %197 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %177, i64 0, i32 0, i32 0
  br label %204

198:                                              ; preds = %190, %182
  %199 = phi %"class.std::__1::__tree_node_base"* [ %184, %182 ], [ %192, %190 ]
  %200 = phi %"class.std::__1::__tree_node_base"** [ %183, %182 ], [ %191, %190 ]
  %201 = bitcast %"class.std::__1::__tree_node_base"* %199 to %"class.std::__1::__tree_node"*
  br label %176

202:                                              ; preds = %171
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 0, i32 0
  br label %204

204:                                              ; preds = %202, %196, %194, %186
  %205 = phi %"class.std::__1::__tree_end_node"* [ %13, %202 ], [ %187, %186 ], [ %195, %194 ], [ %197, %196 ]
  %206 = phi %"class.std::__1::__tree_node_base"** [ %203, %202 ], [ %183, %186 ], [ %191, %194 ], [ %178, %196 ]
  %207 = bitcast %"class.std::__1::__tree_node_base"** %206 to %"class.std::__1::__tree_node"**
  %208 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %207, align 8
  %209 = icmp eq %"class.std::__1::__tree_node"* %208, null
  br i1 %209, label %210, label %237

210:                                              ; preds = %204
  %211 = tail call i8* @_Znwm(i64 48) #8, !noalias !9
  %212 = getelementptr inbounds i8, i8* %211, i64 32
  %213 = bitcast i8* %212 to i64*
  store i64 %12, i64* %213, align 8, !noalias !9
  %214 = getelementptr inbounds i8, i8* %211, i64 40
  %215 = bitcast i8* %214 to i64*
  store i64 0, i64* %215, align 8, !noalias !9
  %216 = bitcast i8* %211 to %"class.std::__1::__tree_node"*
  %217 = bitcast i8* %211 to %"class.std::__1::__tree_node_base"*
  %218 = getelementptr inbounds i8, i8* %211, i64 16
  %219 = bitcast i8* %218 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %211, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %205, %"class.std::__1::__tree_end_node"** %219, align 8
  %220 = bitcast %"class.std::__1::__tree_node_base"** %206 to i8**
  store i8* %211, i8** %220, align 8
  %221 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 0
  %222 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %222, i64 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %230, label %226

226:                                              ; preds = %210
  %227 = ptrtoint %"class.std::__1::__tree_node_base"* %224 to i64
  %228 = bitcast %class.CFWL_NoteDriver* %0 to i64*
  store i64 %227, i64* %228, align 8
  %229 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %206, align 8
  br label %230

230:                                              ; preds = %226, %210
  %231 = phi %"class.std::__1::__tree_node_base"* [ %217, %210 ], [ %229, %226 ]
  %232 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %233 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %232, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %233, %"class.std::__1::__tree_node_base"* %231) #7
  %234 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %235 = load i64, i64* %234, align 8
  %236 = add i64 %235, 1
  store i64 %236, i64* %234, align 8
  br label %237

237:                                              ; preds = %204, %230
  %238 = phi %"class.std::__1::__tree_node"* [ %216, %230 ], [ %208, %204 ]
  %239 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %238, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %240 = load %"class.CFWL_NoteDriver::Target"*, %"class.CFWL_NoteDriver::Target"** %239, align 8
  %241 = icmp eq %class.CFWL_Widget* %2, null
  br i1 %241, label %310, label %242

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %240, i64 0, i32 2
  %244 = ptrtoint %class.CFWL_Widget* %2 to i64
  %245 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %240, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to %"class.std::__1::__tree_node.49"**
  %247 = load %"class.std::__1::__tree_node.49"*, %"class.std::__1::__tree_node.49"** %246, align 8
  %248 = icmp eq %"class.std::__1::__tree_node.49"* %247, null
  br i1 %248, label %278, label %249

249:                                              ; preds = %242
  %250 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %240, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %251

251:                                              ; preds = %274, %249
  %252 = phi %"class.std::__1::__tree_node.49"* [ %277, %274 ], [ %247, %249 ]
  %253 = phi %"class.std::__1::__tree_node_base"** [ %276, %274 ], [ %250, %249 ]
  %254 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %252, i64 0, i32 1
  %255 = bitcast %"class.cppgc::internal::BasicMember"* %254 to %class.CFWL_Widget**
  %256 = load %class.CFWL_Widget*, %class.CFWL_Widget** %255, align 8
  %257 = icmp ugt %class.CFWL_Widget* %256, %2
  br i1 %257, label %258, label %264

258:                                              ; preds = %251
  %259 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %252, i64 0, i32 0, i32 0, i32 0
  %260 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %259, align 8
  %261 = icmp eq %"class.std::__1::__tree_node_base"* %260, null
  br i1 %261, label %262, label %274

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %252, i64 0, i32 0, i32 0
  br label %280

264:                                              ; preds = %251
  %265 = icmp ult %class.CFWL_Widget* %256, %2
  br i1 %265, label %266, label %272

266:                                              ; preds = %264
  %267 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %252, i64 0, i32 0, i32 1
  %268 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %267, align 8
  %269 = icmp eq %"class.std::__1::__tree_node_base"* %268, null
  br i1 %269, label %270, label %274

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %252, i64 0, i32 0, i32 0
  br label %280

272:                                              ; preds = %264
  %273 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %252, i64 0, i32 0, i32 0
  br label %280

274:                                              ; preds = %266, %258
  %275 = phi %"class.std::__1::__tree_node_base"* [ %260, %258 ], [ %268, %266 ]
  %276 = phi %"class.std::__1::__tree_node_base"** [ %259, %258 ], [ %267, %266 ]
  %277 = bitcast %"class.std::__1::__tree_node_base"* %275 to %"class.std::__1::__tree_node.49"*
  br label %251

278:                                              ; preds = %242
  %279 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %245, i64 0, i32 0
  br label %280

280:                                              ; preds = %278, %272, %270, %262
  %281 = phi %"class.std::__1::__tree_end_node"* [ %245, %278 ], [ %263, %262 ], [ %271, %270 ], [ %273, %272 ]
  %282 = phi %"class.std::__1::__tree_node_base"** [ %279, %278 ], [ %259, %262 ], [ %267, %270 ], [ %253, %272 ]
  %283 = bitcast %"class.std::__1::__tree_node_base"** %282 to %"class.std::__1::__tree_node.49"**
  %284 = load %"class.std::__1::__tree_node.49"*, %"class.std::__1::__tree_node.49"** %283, align 8
  %285 = icmp eq %"class.std::__1::__tree_node.49"* %284, null
  br i1 %285, label %286, label %310

286:                                              ; preds = %280
  %287 = tail call i8* @_Znwm(i64 40) #8, !noalias !12
  %288 = getelementptr inbounds i8, i8* %287, i64 32
  %289 = bitcast i8* %288 to i64*
  store i64 %244, i64* %289, align 8, !noalias !12
  %290 = bitcast i8* %287 to %"class.std::__1::__tree_node_base"*
  %291 = getelementptr inbounds i8, i8* %287, i64 16
  %292 = bitcast i8* %291 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %287, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %281, %"class.std::__1::__tree_end_node"** %292, align 8
  %293 = bitcast %"class.std::__1::__tree_node_base"** %282 to i8**
  store i8* %287, i8** %293, align 8
  %294 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %243, i64 0, i32 0, i32 0
  %295 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %294, align 8
  %296 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %295, i64 0, i32 0
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = icmp eq %"class.std::__1::__tree_node_base"* %297, null
  br i1 %298, label %303, label %299

299:                                              ; preds = %286
  %300 = ptrtoint %"class.std::__1::__tree_node_base"* %297 to i64
  %301 = bitcast %"class.std::__1::set"* %243 to i64*
  store i64 %300, i64* %301, align 8
  %302 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %282, align 8
  br label %303

303:                                              ; preds = %299, %286
  %304 = phi %"class.std::__1::__tree_node_base"* [ %290, %286 ], [ %302, %299 ]
  %305 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %240, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %306 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %305, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %306, %"class.std::__1::__tree_node_base"* %304) #7
  %307 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %240, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %308 = load i64, i64* %307, align 8
  %309 = add i64 %308, 1
  store i64 %309, i64* %307, align 8
  br label %310

310:                                              ; preds = %237, %280, %303
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_NoteDriver6Target14SetEventSourceEP11CFWL_Widget(%"class.CFWL_NoteDriver::Target"*, %class.CFWL_Widget*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.CFWL_Widget* %1, null
  br i1 %3, label %72, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 2
  %6 = ptrtoint %class.CFWL_Widget* %1 to i64
  %7 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.49"**
  %9 = load %"class.std::__1::__tree_node.49"*, %"class.std::__1::__tree_node.49"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node.49"* %9, null
  br i1 %10, label %40, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %36, %11
  %14 = phi %"class.std::__1::__tree_node.49"* [ %39, %36 ], [ %9, %11 ]
  %15 = phi %"class.std::__1::__tree_node_base"** [ %38, %36 ], [ %12, %11 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %14, i64 0, i32 1
  %17 = bitcast %"class.cppgc::internal::BasicMember"* %16 to %class.CFWL_Widget**
  %18 = load %class.CFWL_Widget*, %class.CFWL_Widget** %17, align 8
  %19 = icmp ugt %class.CFWL_Widget* %18, %1
  br i1 %19, label %20, label %26

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %14, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  %23 = icmp eq %"class.std::__1::__tree_node_base"* %22, null
  br i1 %23, label %24, label %36

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %14, i64 0, i32 0, i32 0
  br label %42

26:                                               ; preds = %13
  %27 = icmp ult %class.CFWL_Widget* %18, %1
  br i1 %27, label %28, label %34

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %14, i64 0, i32 0, i32 1
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %14, i64 0, i32 0, i32 0
  br label %42

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %14, i64 0, i32 0, i32 0
  br label %42

36:                                               ; preds = %28, %20
  %37 = phi %"class.std::__1::__tree_node_base"* [ %22, %20 ], [ %30, %28 ]
  %38 = phi %"class.std::__1::__tree_node_base"** [ %21, %20 ], [ %29, %28 ]
  %39 = bitcast %"class.std::__1::__tree_node_base"* %37 to %"class.std::__1::__tree_node.49"*
  br label %13

40:                                               ; preds = %4
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %42

42:                                               ; preds = %40, %34, %32, %24
  %43 = phi %"class.std::__1::__tree_end_node"* [ %7, %40 ], [ %25, %24 ], [ %33, %32 ], [ %35, %34 ]
  %44 = phi %"class.std::__1::__tree_node_base"** [ %41, %40 ], [ %21, %24 ], [ %29, %32 ], [ %15, %34 ]
  %45 = bitcast %"class.std::__1::__tree_node_base"** %44 to %"class.std::__1::__tree_node.49"**
  %46 = load %"class.std::__1::__tree_node.49"*, %"class.std::__1::__tree_node.49"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node.49"* %46, null
  br i1 %47, label %48, label %72

48:                                               ; preds = %42
  %49 = tail call i8* @_Znwm(i64 40) #8, !noalias !15
  %50 = getelementptr inbounds i8, i8* %49, i64 32
  %51 = bitcast i8* %50 to i64*
  store i64 %6, i64* %51, align 8, !noalias !15
  %52 = bitcast i8* %49 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds i8, i8* %49, i64 16
  %54 = bitcast i8* %53 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %54, align 8
  %55 = bitcast %"class.std::__1::__tree_node_base"** %44 to i8**
  store i8* %49, i8** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %48
  %62 = ptrtoint %"class.std::__1::__tree_node_base"* %59 to i64
  %63 = bitcast %"class.std::__1::set"* %5 to i64*
  store i64 %62, i64* %63, align 8
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  br label %65

65:                                               ; preds = %61, %48
  %66 = phi %"class.std::__1::__tree_node_base"* [ %52, %48 ], [ %64, %61 ]
  %67 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %68, %"class.std::__1::__tree_node_base"* %66) #7
  %69 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %69, align 8
  br label %72

72:                                               ; preds = %65, %42, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_NoteDriver21UnregisterEventTargetEP11CFWL_Widget(%class.CFWL_NoteDriver*, %class.CFWL_Widget* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %1, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %37, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"class.std::__1::__tree_end_node"* [ %22, %11 ], [ %7, %6 ]
  %13 = phi %"class.std::__1::__tree_node"* [ %23, %11 ], [ %9, %6 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, %4
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::__tree_node_base"** %17 to %"class.std::__1::__tree_node"**
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_node"* %13 to %"class.std::__1::__tree_node"**
  %21 = select i1 %16, %"class.std::__1::__tree_node"** %18, %"class.std::__1::__tree_node"** %20
  %22 = select i1 %16, %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"* %19
  %23 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %21, align 8
  %24 = icmp eq %"class.std::__1::__tree_node"* %23, null
  br i1 %24, label %25, label %11

25:                                               ; preds = %11
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %22, %7
  br i1 %26, label %37, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 4
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = icmp ult i64 %4, %30
  br i1 %31, label %37, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 5
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.CFWL_NoteDriver::Target"**
  %35 = load %"class.CFWL_NoteDriver::Target"*, %"class.CFWL_NoteDriver::Target"** %34, align 8
  %36 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %35, i64 0, i32 0
  store i8 0, i8* %36, align 8
  br label %37

37:                                               ; preds = %27, %25, %6, %32, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15CFWL_NoteDriver16NotifyTargetHideEP11CFWL_Widget(%class.CFWL_NoteDriver* nocapture, %class.CFWL_Widget* readnone) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 2
  %4 = bitcast %"class.cppgc::internal::BasicMember"* %3 to %class.CFWL_Widget**
  %5 = load %class.CFWL_Widget*, %class.CFWL_Widget** %4, align 8
  %6 = icmp eq %class.CFWL_Widget* %5, %1
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast %"class.cppgc::internal::BasicMember"* %3 to i64*
  store atomic i64 0, i64* %8 monotonic, align 8
  br label %9

9:                                                ; preds = %7, %2
  %10 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 1
  %11 = bitcast %"class.cppgc::internal::BasicMember"* %10 to %class.CFWL_Widget**
  %12 = load %class.CFWL_Widget*, %class.CFWL_Widget** %11, align 8
  %13 = icmp eq %class.CFWL_Widget* %12, %1
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  %15 = bitcast %"class.cppgc::internal::BasicMember"* %10 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  br label %16

16:                                               ; preds = %14, %9
  %17 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 3
  %18 = bitcast %"class.cppgc::internal::BasicMember"* %17 to %class.CFWL_Widget**
  %19 = load %class.CFWL_Widget*, %class.CFWL_Widget** %18, align 8
  %20 = icmp eq %class.CFWL_Widget* %19, %1
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = bitcast %"class.cppgc::internal::BasicMember"* %17 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  br label %23

23:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15CFWL_NoteDriver19NotifyTargetDestroyEP11CFWL_Widget(%class.CFWL_NoteDriver*, %class.CFWL_Widget* readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 2
  %4 = bitcast %"class.cppgc::internal::BasicMember"* %3 to %class.CFWL_Widget**
  %5 = load %class.CFWL_Widget*, %class.CFWL_Widget** %4, align 8
  %6 = icmp eq %class.CFWL_Widget* %5, %1
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast %"class.cppgc::internal::BasicMember"* %3 to i64*
  store atomic i64 0, i64* %8 monotonic, align 8
  br label %9

9:                                                ; preds = %7, %2
  %10 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 1
  %11 = bitcast %"class.cppgc::internal::BasicMember"* %10 to %class.CFWL_Widget**
  %12 = load %class.CFWL_Widget*, %class.CFWL_Widget** %11, align 8
  %13 = icmp eq %class.CFWL_Widget* %12, %1
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  %15 = bitcast %"class.cppgc::internal::BasicMember"* %10 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  br label %16

16:                                               ; preds = %14, %9
  %17 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 3
  %18 = bitcast %"class.cppgc::internal::BasicMember"* %17 to %class.CFWL_Widget**
  %19 = load %class.CFWL_Widget*, %class.CFWL_Widget** %18, align 8
  %20 = icmp eq %class.CFWL_Widget* %19, %1
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = bitcast %"class.cppgc::internal::BasicMember"* %17 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  br label %23

23:                                               ; preds = %21, %16
  %24 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %1, i64 0, i32 4
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %58, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node"**
  %30 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node"* %30, null
  br i1 %31, label %58, label %32

32:                                               ; preds = %27, %32
  %33 = phi %"class.std::__1::__tree_end_node"* [ %43, %32 ], [ %28, %27 ]
  %34 = phi %"class.std::__1::__tree_node"* [ %44, %32 ], [ %30, %27 ]
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 1, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp ult i64 %36, %25
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::__tree_node_base"** %38 to %"class.std::__1::__tree_node"**
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::__tree_node"* %34 to %"class.std::__1::__tree_node"**
  %42 = select i1 %37, %"class.std::__1::__tree_node"** %39, %"class.std::__1::__tree_node"** %41
  %43 = select i1 %37, %"class.std::__1::__tree_end_node"* %33, %"class.std::__1::__tree_end_node"* %40
  %44 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %45 = icmp eq %"class.std::__1::__tree_node"* %44, null
  br i1 %45, label %46, label %32

46:                                               ; preds = %32
  %47 = icmp eq %"class.std::__1::__tree_end_node"* %43, %28
  br i1 %47, label %58, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 4
  %50 = bitcast %"class.std::__1::__tree_end_node"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %25, %51
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 5
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.CFWL_NoteDriver::Target"**
  %56 = load %"class.CFWL_NoteDriver::Target"*, %"class.CFWL_NoteDriver::Target"** %55, align 8
  %57 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %56, i64 0, i32 0
  store i8 0, i8* %57, align 8
  br label %58

58:                                               ; preds = %23, %27, %46, %48, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_NoteDriver14ProcessMessageEP12CFWL_Message(%class.CFWL_NoteDriver*, %class.CFWL_Message*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  %4 = load %class.CFWL_Widget*, %class.CFWL_Widget** %3, align 8
  %5 = icmp eq %class.CFWL_Widget* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN15CFWL_NoteDriver15DispatchMessageEP12CFWL_MessageP11CFWL_Widget(%class.CFWL_NoteDriver* %0, %class.CFWL_Message* %1, %class.CFWL_Widget* nonnull %4)
  br i1 %7, label %8, label %13

8:                                                ; preds = %6
  %9 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  tail call void @_ZN15CFWL_NoteDriver14MouseSecondaryEP12CFWL_Message(%class.CFWL_NoteDriver* %0, %class.CFWL_Message* %1)
  br label %13

13:                                               ; preds = %8, %12, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CFWL_NoteDriver15DispatchMessageEP12CFWL_MessageP11CFWL_Widget(%class.CFWL_NoteDriver*, %class.CFWL_Message*, %class.CFWL_Widget*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %93 [
    i32 4, label %7
    i32 1, label %24
    i32 0, label %33
    i32 2, label %65
    i32 3, label %67
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  %9 = load %class.CFWL_Widget*, %class.CFWL_Widget** %8, align 8
  %10 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 2
  %11 = ptrtoint %class.CFWL_Widget* %9 to i64
  %12 = bitcast %"class.cppgc::internal::BasicMember"* %10 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = bitcast %class.CFWL_Widget* %9 to i8*
  %14 = and i64 %11, -4294967296
  %15 = ptrtoint %"class.cppgc::internal::BasicMember"* %10 to i64
  %16 = sub i64 %15, %14
  %17 = icmp ult i64 %16, 4294967297
  br i1 %17, label %18, label %93

18:                                               ; preds = %7
  %19 = inttoptr i64 %14 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %20 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %19, i64 0, i32 0
  %21 = load i8, i8* %20, align 536870912, !range !2
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %93, !prof !18

23:                                               ; preds = %18
  tail call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %13) #7
  br label %93

24:                                               ; preds = %3
  %25 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 2
  %26 = bitcast %"class.cppgc::internal::BasicMember"* %25 to %class.CFWL_Widget**
  %27 = load %class.CFWL_Widget*, %class.CFWL_Widget** %26, align 8
  %28 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  %29 = load %class.CFWL_Widget*, %class.CFWL_Widget** %28, align 8
  %30 = icmp eq %class.CFWL_Widget* %27, %29
  br i1 %30, label %31, label %93

31:                                               ; preds = %24
  %32 = bitcast %"class.cppgc::internal::BasicMember"* %25 to i64*
  store atomic i64 0, i64* %32 monotonic, align 8
  br label %93

33:                                               ; preds = %3
  %34 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1
  %35 = bitcast %class.CFWL_Message* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 9
  br i1 %41, label %93, label %42

42:                                               ; preds = %38, %33
  %43 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 2
  %44 = bitcast %"class.cppgc::internal::BasicMember"* %43 to %class.CFWL_Widget**
  %45 = load %class.CFWL_Widget*, %class.CFWL_Widget** %44, align 8
  %46 = icmp eq %class.CFWL_Widget* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  store %class.CFWL_Widget* %45, %class.CFWL_Widget** %48, align 8
  br label %93

49:                                               ; preds = %42
  br i1 %37, label %50, label %108

50:                                               ; preds = %49
  %51 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 13
  br i1 %53, label %54, label %108

54:                                               ; preds = %50
  %55 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %2, i64 0, i32 6
  %56 = bitcast %"class.cppgc::internal::BasicMember.18"* %55 to %class.CFWL_App**
  %57 = load %class.CFWL_App*, %class.CFWL_App** %56, align 8
  %58 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %57, i64 0, i32 1
  %59 = bitcast %"class.cppgc::internal::BasicMember.19"* %58 to %class.CFWL_WidgetMgr**
  %60 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %59, align 8
  %61 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr16GetDefaultButtonEP11CFWL_Widget(%class.CFWL_WidgetMgr* %60, %class.CFWL_Widget* %2) #7
  %62 = icmp eq %class.CFWL_Widget* %61, null
  br i1 %62, label %108, label %63

63:                                               ; preds = %54
  %64 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  store %class.CFWL_Widget* %61, %class.CFWL_Widget** %64, align 8
  br label %93

65:                                               ; preds = %3
  %66 = tail call zeroext i1 @_ZN15CFWL_NoteDriver7DoMouseEP12CFWL_MessageP11CFWL_Widget(%class.CFWL_NoteDriver* %0, %class.CFWL_Message* %1, %class.CFWL_Widget* %2)
  br i1 %66, label %93, label %108

67:                                               ; preds = %3
  %68 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %2, i64 0, i32 6
  %69 = bitcast %"class.cppgc::internal::BasicMember.18"* %68 to %class.CFWL_App**
  %70 = load %class.CFWL_App*, %class.CFWL_App** %69, align 8
  %71 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %70, i64 0, i32 1
  %72 = bitcast %"class.cppgc::internal::BasicMember.19"* %71 to %class.CFWL_WidgetMgr**
  %73 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %72, align 8
  %74 = bitcast %class.CFWL_Message* %1 to %class.CFWL_MessageMouseWheel*
  %75 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1
  %76 = bitcast %class.CFWL_Message* %75 to %class.CFX_PTemplate*
  %77 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr16GetWidgetAtPointEP11CFWL_WidgetRK13CFX_PTemplateIfE(%class.CFWL_WidgetMgr* %73, %class.CFWL_Widget* %2, %class.CFX_PTemplate* dereferenceable(8) %76) #7
  %78 = icmp eq %class.CFWL_Widget* %77, null
  br i1 %78, label %108, label %79

79:                                               ; preds = %67
  %80 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #7
  call void @_ZN11CFWL_Widget11TransformToEPS_RK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %4, %class.CFWL_Widget* %2, %class.CFWL_Widget* nonnull %77, %class.CFX_PTemplate* dereferenceable(8) %76) #7
  %81 = icmp eq %class.CFX_PTemplate* %4, %76
  br i1 %81, label %91, label %82

82:                                               ; preds = %79
  %83 = bitcast %class.CFX_PTemplate* %4 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = bitcast %class.CFWL_Message* %75 to i32*
  store i32 %84, i32* %85, align 4
  %86 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  %87 = bitcast float* %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %class.CFWL_MessageMouseWheel, %class.CFWL_MessageMouseWheel* %74, i64 0, i32 1, i32 1
  %90 = bitcast float* %89 to i32*
  store i32 %88, i32* %90, align 4
  br label %91

91:                                               ; preds = %79, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #7
  %92 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  store %class.CFWL_Widget* %77, %class.CFWL_Widget** %92, align 8
  br label %93

93:                                               ; preds = %63, %38, %47, %91, %31, %24, %23, %18, %7, %3, %65
  %94 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  %95 = load %class.CFWL_Widget*, %class.CFWL_Widget** %94, align 8
  %96 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %95, i64 0, i32 8
  %97 = bitcast %"class.cppgc::internal::BasicMember.20"* %96 to %class.IFWL_WidgetDelegate**
  %98 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %97, align 8
  %99 = icmp eq %class.IFWL_WidgetDelegate* %98, null
  %100 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %95, i64 0, i32 0
  %101 = select i1 %99, %class.IFWL_WidgetDelegate* %100, %class.IFWL_WidgetDelegate* %98
  %102 = icmp eq %class.IFWL_WidgetDelegate* %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %93
  %104 = bitcast %class.IFWL_WidgetDelegate* %101 to void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)***
  %105 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)**, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*** %104, align 8
  %106 = getelementptr inbounds void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %105, i64 3
  %107 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %106, align 8
  call void %107(%class.IFWL_WidgetDelegate* nonnull %101, %class.CFWL_Message* %1) #7
  br label %108

108:                                              ; preds = %67, %54, %50, %49, %103, %93, %65
  %109 = phi i1 [ false, %65 ], [ true, %93 ], [ true, %103 ], [ false, %49 ], [ false, %50 ], [ false, %54 ], [ false, %67 ]
  ret i1 %109
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_NoteDriver14MouseSecondaryEP12CFWL_Message(%class.CFWL_NoteDriver*, %class.CFWL_Message*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.CFWL_MessageMouse, align 8
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = alloca %class.CFWL_MessageMouse, align 8
  %6 = alloca %class.CFX_PTemplate, align 4
  %7 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  %8 = load %class.CFWL_Widget*, %class.CFWL_Widget** %7, align 8
  %9 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 1
  %10 = bitcast %"class.cppgc::internal::BasicMember"* %9 to %class.CFWL_Widget**
  %11 = load %class.CFWL_Widget*, %class.CFWL_Widget** %10, align 8
  %12 = icmp eq %class.CFWL_Widget* %8, %11
  br i1 %12, label %56, label %13

13:                                               ; preds = %2
  %14 = bitcast %class.CFWL_Message* %1 to %class.CFWL_MessageMouse*
  %15 = icmp eq %class.CFWL_Widget* %11, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  %17 = bitcast %class.CFWL_MessageMouse* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 bitcast (<{ { i32 (...)**, i32, [4 x i8], %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr" }, i8, i8, [2 x i8], %class.CFX_PTemplate, [4 x i8] }>* @__const._ZN15CFWL_NoteDriver14MouseSecondaryEP12CFWL_Message.msHover to i8*), i64 48, i1 false)
  %18 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %14, i64 0, i32 4
  call void @_ZN11CFWL_Widget11TransformToEPS_RK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %4, %class.CFWL_Widget* %8, %class.CFWL_Widget* nonnull %11, %class.CFX_PTemplate* dereferenceable(8) %18) #7
  call void @_ZN17CFWL_MessageMouseC1EP11CFWL_Widget16FWL_MouseCommandh13CFX_PTemplateIfE(%class.CFWL_MessageMouse* nonnull %3, %class.CFWL_Widget* nonnull %11, i8 zeroext 8, i8 zeroext 0, %class.CFX_PTemplate* nonnull %4) #7
  %19 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %3, i64 0, i32 0
  %20 = call zeroext i1 @_ZN15CFWL_NoteDriver15DispatchMessageEP12CFWL_MessageP11CFWL_Widget(%class.CFWL_NoteDriver* %0, %class.CFWL_Message* nonnull %19, %class.CFWL_Widget* null)
  call void @_ZN17CFWL_MessageMouseD1Ev(%class.CFWL_MessageMouse* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #7
  br label %21

21:                                               ; preds = %13, %16
  %22 = bitcast %class.CFWL_Widget* %8 to i32 (%class.CFWL_Widget*)***
  %23 = load i32 (%class.CFWL_Widget*)**, i32 (%class.CFWL_Widget*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%class.CFWL_Widget*)*, i32 (%class.CFWL_Widget*)** %23, i64 7
  %25 = load i32 (%class.CFWL_Widget*)*, i32 (%class.CFWL_Widget*)** %24, align 8
  %26 = call i32 %25(%class.CFWL_Widget* %8) #7
  %27 = icmp eq i32 %26, 7
  br i1 %27, label %28, label %30

28:                                               ; preds = %21
  %29 = bitcast %"class.cppgc::internal::BasicMember"* %9 to i64*
  store atomic i64 0, i64* %29 monotonic, align 8
  br label %56

30:                                               ; preds = %21
  %31 = ptrtoint %class.CFWL_Widget* %8 to i64
  %32 = bitcast %"class.cppgc::internal::BasicMember"* %9 to i64*
  store atomic i64 %31, i64* %32 monotonic, align 8
  %33 = bitcast %class.CFWL_Widget* %8 to i8*
  %34 = and i64 %31, -4294967296
  %35 = ptrtoint %"class.cppgc::internal::BasicMember"* %9 to i64
  %36 = sub i64 %35, %34
  %37 = icmp ult i64 %36, 4294967297
  br i1 %37, label %38, label %44

38:                                               ; preds = %30
  %39 = inttoptr i64 %34 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %40 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %39, i64 0, i32 0
  %41 = load i8, i8* %40, align 536870912, !range !2
  %42 = icmp eq i8 %41, 1
  br i1 %42, label %43, label %44, !prof !18

43:                                               ; preds = %38
  call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %33) #7
  br label %44

44:                                               ; preds = %30, %38, %43
  %45 = bitcast %class.CFWL_MessageMouse* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %45) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* align 8 bitcast (<{ { i32 (...)**, i32, [4 x i8], %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr" }, i8, i8, [2 x i8], %class.CFX_PTemplate, [4 x i8] }>* @__const._ZN15CFWL_NoteDriver14MouseSecondaryEP12CFWL_Message.msHover to i8*), i64 48, i1 false)
  %46 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %14, i64 0, i32 4
  %47 = bitcast %class.CFX_PTemplate* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = bitcast %class.CFX_PTemplate* %6 to i32*
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 1
  %51 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = bitcast float* %50 to i32*
  store i32 %52, i32* %53, align 4
  call void @_ZN17CFWL_MessageMouseC1EP11CFWL_Widget16FWL_MouseCommandh13CFX_PTemplateIfE(%class.CFWL_MessageMouse* nonnull %5, %class.CFWL_Widget* %8, i8 zeroext 9, i8 zeroext 0, %class.CFX_PTemplate* nonnull %6) #7
  %54 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %5, i64 0, i32 0
  %55 = call zeroext i1 @_ZN15CFWL_NoteDriver15DispatchMessageEP12CFWL_MessageP11CFWL_Widget(%class.CFWL_NoteDriver* %0, %class.CFWL_Message* nonnull %54, %class.CFWL_Widget* null)
  call void @_ZN17CFWL_MessageMouseD1Ev(%class.CFWL_MessageMouse* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %45) #7
  br label %56

56:                                               ; preds = %28, %44, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CFWL_NoteDriver10DoSetFocusEP12CFWL_MessageP11CFWL_Widget(%class.CFWL_NoteDriver*, %class.CFWL_Message* nocapture readonly, %class.CFWL_Widget* nocapture readnone) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  %5 = load %class.CFWL_Widget*, %class.CFWL_Widget** %4, align 8
  %6 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 2
  %7 = ptrtoint %class.CFWL_Widget* %5 to i64
  %8 = bitcast %"class.cppgc::internal::BasicMember"* %6 to i64*
  store atomic i64 %7, i64* %8 monotonic, align 8
  %9 = bitcast %class.CFWL_Widget* %5 to i8*
  %10 = and i64 %7, -4294967296
  %11 = ptrtoint %"class.cppgc::internal::BasicMember"* %6 to i64
  %12 = sub i64 %11, %10
  %13 = icmp ult i64 %12, 4294967297
  br i1 %13, label %14, label %20

14:                                               ; preds = %3
  %15 = inttoptr i64 %10 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %16 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %15, i64 0, i32 0
  %17 = load i8, i8* %16, align 536870912, !range !2
  %18 = icmp eq i8 %17, 1
  br i1 %18, label %19, label %20, !prof !18

19:                                               ; preds = %14
  tail call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %9) #7
  br label %20

20:                                               ; preds = %3, %14, %19
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CFWL_NoteDriver11DoKillFocusEP12CFWL_MessageP11CFWL_Widget(%class.CFWL_NoteDriver* nocapture, %class.CFWL_Message* nocapture readonly, %class.CFWL_Widget* nocapture readnone) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 2
  %5 = bitcast %"class.cppgc::internal::BasicMember"* %4 to %class.CFWL_Widget**
  %6 = load %class.CFWL_Widget*, %class.CFWL_Widget** %5, align 8
  %7 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  %8 = load %class.CFWL_Widget*, %class.CFWL_Widget** %7, align 8
  %9 = icmp eq %class.CFWL_Widget* %6, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = bitcast %"class.cppgc::internal::BasicMember"* %4 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  br label %12

12:                                               ; preds = %10, %3
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CFWL_NoteDriver5DoKeyEP12CFWL_MessageP11CFWL_Widget(%class.CFWL_NoteDriver* nocapture readonly, %class.CFWL_Message* nocapture, %class.CFWL_Widget*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1
  %5 = bitcast %class.CFWL_Message* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 9
  br i1 %11, label %35, label %12

12:                                               ; preds = %8, %3
  %13 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 2
  %14 = bitcast %"class.cppgc::internal::BasicMember"* %13 to %class.CFWL_Widget**
  %15 = load %class.CFWL_Widget*, %class.CFWL_Widget** %14, align 8
  %16 = icmp eq %class.CFWL_Widget* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  store %class.CFWL_Widget* %15, %class.CFWL_Widget** %18, align 8
  br label %35

19:                                               ; preds = %12
  br i1 %7, label %20, label %35

20:                                               ; preds = %19
  %21 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 13
  br i1 %23, label %24, label %35

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %2, i64 0, i32 6
  %26 = bitcast %"class.cppgc::internal::BasicMember.18"* %25 to %class.CFWL_App**
  %27 = load %class.CFWL_App*, %class.CFWL_App** %26, align 8
  %28 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %27, i64 0, i32 1
  %29 = bitcast %"class.cppgc::internal::BasicMember.19"* %28 to %class.CFWL_WidgetMgr**
  %30 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %29, align 8
  %31 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr16GetDefaultButtonEP11CFWL_Widget(%class.CFWL_WidgetMgr* %30, %class.CFWL_Widget* %2) #7
  %32 = icmp eq %class.CFWL_Widget* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %24
  %34 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  store %class.CFWL_Widget* %31, %class.CFWL_Widget** %34, align 8
  br label %35

35:                                               ; preds = %19, %20, %24, %33, %8, %17
  %36 = phi i1 [ true, %17 ], [ true, %8 ], [ true, %33 ], [ false, %24 ], [ false, %20 ], [ false, %19 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CFWL_NoteDriver7DoMouseEP12CFWL_MessageP11CFWL_Widget(%class.CFWL_NoteDriver* nocapture readonly, %class.CFWL_Message*, %class.CFWL_Widget*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = alloca %class.CFX_PTemplate, align 4
  %6 = bitcast %class.CFWL_Message* %1 to %class.CFWL_MessageMouse*
  %7 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1
  %8 = bitcast %class.CFWL_Message* %7 to i8*
  %9 = load i8, i8* %8, align 8
  %10 = add i8 %9, -7
  %11 = icmp ult i8 %10, 3
  %12 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  %13 = load %class.CFWL_Widget*, %class.CFWL_Widget** %12, align 8
  br i1 %11, label %14, label %16

14:                                               ; preds = %3
  %15 = icmp ne %class.CFWL_Widget* %13, null
  br label %64

16:                                               ; preds = %3
  %17 = icmp eq %class.CFWL_Widget* %13, %2
  br i1 %17, label %31, label %18

18:                                               ; preds = %16
  %19 = bitcast %class.CFX_PTemplate* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7
  %20 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %6, i64 0, i32 4
  call void @_ZN11CFWL_Widget11TransformToEPS_RK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %5, %class.CFWL_Widget* %13, %class.CFWL_Widget* %2, %class.CFX_PTemplate* dereferenceable(8) %20) #7
  %21 = icmp eq %class.CFX_PTemplate* %20, %5
  br i1 %21, label %30, label %22

22:                                               ; preds = %18
  %23 = bitcast %class.CFX_PTemplate* %5 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = bitcast %class.CFX_PTemplate* %20 to i32*
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 1
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1, i32 1
  store i32 %28, i32* %29, align 4
  br label %30

30:                                               ; preds = %18, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #7
  br label %31

31:                                               ; preds = %16, %30
  %32 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 3
  %33 = bitcast %"class.cppgc::internal::BasicMember"* %32 to %class.CFWL_Widget**
  %34 = load %class.CFWL_Widget*, %class.CFWL_Widget** %33, align 8
  %35 = icmp eq %class.CFWL_Widget* %34, null
  br i1 %35, label %36, label %46

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %2, i64 0, i32 6
  %38 = bitcast %"class.cppgc::internal::BasicMember.18"* %37 to %class.CFWL_App**
  %39 = load %class.CFWL_App*, %class.CFWL_App** %38, align 8
  %40 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %39, i64 0, i32 1
  %41 = bitcast %"class.cppgc::internal::BasicMember.19"* %40 to %class.CFWL_WidgetMgr**
  %42 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %41, align 8
  %43 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %6, i64 0, i32 4
  %44 = call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr16GetWidgetAtPointEP11CFWL_WidgetRK13CFX_PTemplateIfE(%class.CFWL_WidgetMgr* %42, %class.CFWL_Widget* %2, %class.CFX_PTemplate* dereferenceable(8) %43) #7
  %45 = icmp eq %class.CFWL_Widget* %44, null
  br i1 %45, label %63, label %46

46:                                               ; preds = %36, %31
  %47 = phi %class.CFWL_Widget* [ %44, %36 ], [ %34, %31 ]
  %48 = icmp eq %class.CFWL_Widget* %47, %2
  br i1 %48, label %62, label %49

49:                                               ; preds = %46
  %50 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #7
  %51 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %6, i64 0, i32 4
  call void @_ZN11CFWL_Widget11TransformToEPS_RK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %4, %class.CFWL_Widget* %2, %class.CFWL_Widget* nonnull %47, %class.CFX_PTemplate* dereferenceable(8) %51) #7
  %52 = icmp eq %class.CFX_PTemplate* %51, %4
  br i1 %52, label %61, label %53

53:                                               ; preds = %49
  %54 = bitcast %class.CFX_PTemplate* %4 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = bitcast %class.CFX_PTemplate* %51 to i32*
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1, i32 1
  store i32 %59, i32* %60, align 4
  br label %61

61:                                               ; preds = %53, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #7
  br label %62

62:                                               ; preds = %46, %61
  store %class.CFWL_Widget* %47, %class.CFWL_Widget** %12, align 8
  br label %64

63:                                               ; preds = %36
  store %class.CFWL_Widget* %2, %class.CFWL_Widget** %12, align 8
  br label %64

64:                                               ; preds = %62, %63, %14
  %65 = phi i1 [ %15, %14 ], [ true, %63 ], [ true, %62 ]
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CFWL_NoteDriver7DoWheelEP12CFWL_MessageP11CFWL_Widget(%class.CFWL_NoteDriver* nocapture readnone, %class.CFWL_Message*, %class.CFWL_Widget*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %2, i64 0, i32 6
  %6 = bitcast %"class.cppgc::internal::BasicMember.18"* %5 to %class.CFWL_App**
  %7 = load %class.CFWL_App*, %class.CFWL_App** %6, align 8
  %8 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %7, i64 0, i32 1
  %9 = bitcast %"class.cppgc::internal::BasicMember.19"* %8 to %class.CFWL_WidgetMgr**
  %10 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %9, align 8
  %11 = bitcast %class.CFWL_Message* %1 to %class.CFWL_MessageMouseWheel*
  %12 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1
  %13 = bitcast %class.CFWL_Message* %12 to %class.CFX_PTemplate*
  %14 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr16GetWidgetAtPointEP11CFWL_WidgetRK13CFX_PTemplateIfE(%class.CFWL_WidgetMgr* %10, %class.CFWL_Widget* %2, %class.CFX_PTemplate* dereferenceable(8) %13) #7
  %15 = icmp eq %class.CFWL_Widget* %14, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %3
  %17 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN11CFWL_Widget11TransformToEPS_RK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %4, %class.CFWL_Widget* %2, %class.CFWL_Widget* nonnull %14, %class.CFX_PTemplate* dereferenceable(8) %13) #7
  %18 = icmp eq %class.CFX_PTemplate* %4, %13
  br i1 %18, label %28, label %19

19:                                               ; preds = %16
  %20 = bitcast %class.CFX_PTemplate* %4 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = bitcast %class.CFWL_Message* %12 to i32*
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  %24 = bitcast float* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.CFWL_MessageMouseWheel, %class.CFWL_MessageMouseWheel* %11, i64 0, i32 1, i32 1
  %27 = bitcast float* %26 to i32*
  store i32 %25, i32* %27, align 4
  br label %28

28:                                               ; preds = %16, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  %29 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  store %class.CFWL_Widget* %14, %class.CFWL_Widget** %29, align 8
  br label %30

30:                                               ; preds = %3, %28
  %31 = phi i1 [ true, %28 ], [ false, %3 ]
  ret i1 %31
}

declare %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr16GetDefaultButtonEP11CFWL_Widget(%class.CFWL_WidgetMgr*, %class.CFWL_Widget*) local_unnamed_addr #3

declare void @_ZN11CFWL_Widget11TransformToEPS_RK13CFX_PTemplateIfE(%class.CFX_PTemplate* sret, %class.CFWL_Widget*, %class.CFWL_Widget*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CFWL_NoteDriver9DoMouseExEP12CFWL_MessageP11CFWL_Widget(%class.CFWL_NoteDriver* nocapture readonly, %class.CFWL_Message*, %class.CFWL_Widget*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %0, i64 0, i32 3
  %6 = bitcast %"class.cppgc::internal::BasicMember"* %5 to %class.CFWL_Widget**
  %7 = load %class.CFWL_Widget*, %class.CFWL_Widget** %6, align 8
  %8 = icmp eq %class.CFWL_Widget* %7, null
  %9 = bitcast %class.CFWL_Message* %1 to %class.CFWL_MessageMouse*
  br i1 %8, label %10, label %20

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %2, i64 0, i32 6
  %12 = bitcast %"class.cppgc::internal::BasicMember.18"* %11 to %class.CFWL_App**
  %13 = load %class.CFWL_App*, %class.CFWL_App** %12, align 8
  %14 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %13, i64 0, i32 1
  %15 = bitcast %"class.cppgc::internal::BasicMember.19"* %14 to %class.CFWL_WidgetMgr**
  %16 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %15, align 8
  %17 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %9, i64 0, i32 4
  %18 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr16GetWidgetAtPointEP11CFWL_WidgetRK13CFX_PTemplateIfE(%class.CFWL_WidgetMgr* %16, %class.CFWL_Widget* %2, %class.CFX_PTemplate* dereferenceable(8) %17) #7
  %19 = icmp eq %class.CFWL_Widget* %18, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %3, %10
  %21 = phi %class.CFWL_Widget* [ %18, %10 ], [ %7, %3 ]
  %22 = icmp eq %class.CFWL_Widget* %21, %2
  br i1 %22, label %36, label %23

23:                                               ; preds = %20
  %24 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  %25 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %9, i64 0, i32 4
  call void @_ZN11CFWL_Widget11TransformToEPS_RK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %4, %class.CFWL_Widget* %2, %class.CFWL_Widget* nonnull %21, %class.CFX_PTemplate* dereferenceable(8) %25) #7
  %26 = icmp eq %class.CFX_PTemplate* %25, %4
  br i1 %26, label %35, label %27

27:                                               ; preds = %23
  %28 = bitcast %class.CFX_PTemplate* %4 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = bitcast %class.CFX_PTemplate* %25 to i32*
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1, i32 1
  store i32 %33, i32* %34, align 4
  br label %35

35:                                               ; preds = %23, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  br label %36

36:                                               ; preds = %20, %35
  %37 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  store %class.CFWL_Widget* %21, %class.CFWL_Widget** %37, align 8
  br label %38

38:                                               ; preds = %10, %36
  %39 = phi i1 [ true, %36 ], [ false, %10 ]
  ret i1 %39
}

declare %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr16GetWidgetAtPointEP11CFWL_WidgetRK13CFX_PTemplateIfE(%class.CFWL_WidgetMgr*, %class.CFWL_Widget*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN17CFWL_MessageMouseC1EP11CFWL_Widget16FWL_MouseCommandh13CFX_PTemplateIfE(%class.CFWL_MessageMouse*, %class.CFWL_Widget*, i8 zeroext, i8 zeroext, %class.CFX_PTemplate*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN17CFWL_MessageMouseD1Ev(%class.CFWL_MessageMouse*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_NoteDriver6TargetC2EP11CFWL_Widget(%"class.CFWL_NoteDriver::Target"*, %class.CFWL_Widget*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 0
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 1
  %5 = bitcast %"class.cppgc::internal::BasicMember"* %4 to %class.CFWL_Widget**
  store %class.CFWL_Widget* %1, %class.CFWL_Widget** %5, align 8
  %6 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_NoteDriver6TargetD2Ev(%"class.CFWL_NoteDriver::Target"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 2, i32 0
  %3 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.49"**
  %5 = load %"class.std::__1::__tree_node.49"*, %"class.std::__1::__tree_node.49"** %4, align 8
  tail call void @_ZNSt3__16__treeIN5cppgc8internal11BasicMemberI11CFWL_WidgetNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_4lessIS8_EENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.6"* %2, %"class.std::__1::__tree_node.49"* %5) #7
  ret void
}

declare void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN15CFWL_NoteDriver6TargetENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN15CFWL_NoteDriver6TargetENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #7
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN15CFWL_NoteDriver6TargetENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #7
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.CFWL_NoteDriver::Target"*, %"class.CFWL_NoteDriver::Target"** %10, align 8
  store %"class.CFWL_NoteDriver::Target"* null, %"class.CFWL_NoteDriver::Target"** %10, align 8
  %12 = icmp eq %"class.CFWL_NoteDriver::Target"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %11, i64 0, i32 2, i32 0
  %15 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %11, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node.49"**
  %17 = load %"class.std::__1::__tree_node.49"*, %"class.std::__1::__tree_node.49"** %16, align 8
  tail call void @_ZNSt3__16__treeIN5cppgc8internal11BasicMemberI11CFWL_WidgetNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_4lessIS8_EENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.6"* %14, %"class.std::__1::__tree_node.49"* %17) #7
  %18 = getelementptr inbounds %"class.CFWL_NoteDriver::Target", %"class.CFWL_NoteDriver::Target"* %11, i64 0, i32 0
  tail call void @_ZdlPv(i8* %18) #8
  br label %19

19:                                               ; preds = %4, %13
  %20 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %20) #8
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CFWL_Widget*
  %4 = bitcast i8* %1 to void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)***
  %5 = load void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)**, void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)*** %4, align 8
  %6 = load void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)*, void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)** %5, align 8
  tail call void %6(%class.CFWL_Widget* %3, %"class.cppgc::Visitor"* %0) #7
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN5cppgc8internal11BasicMemberI11CFWL_WidgetNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_4lessIS8_EENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.6"*, %"class.std::__1::__tree_node.49"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.49"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.49"* %1 to %"class.std::__1::__tree_node.49"**
  %6 = load %"class.std::__1::__tree_node.49"*, %"class.std::__1::__tree_node.49"** %5, align 8
  tail call void @_ZNSt3__16__treeIN5cppgc8internal11BasicMemberI11CFWL_WidgetNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_4lessIS8_EENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.6"* %0, %"class.std::__1::__tree_node.49"* %6) #7
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.49", %"class.std::__1::__tree_node.49"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.49"**
  %9 = load %"class.std::__1::__tree_node.49"*, %"class.std::__1::__tree_node.49"** %8, align 8
  tail call void @_ZNSt3__16__treeIN5cppgc8internal11BasicMemberI11CFWL_WidgetNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_4lessIS8_EENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.6"* %0, %"class.std::__1::__tree_node.49"* %9) #7
  %10 = bitcast %"class.std::__1::__tree_node.49"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN15CFWL_NoteDriver6TargetENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSK_IJEEEEEENS2_INS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISR_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN15CFWL_NoteDriver6TargetENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSK_IJEEEEEENS2_INS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISR_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN15CFWL_NoteDriver6TargetENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSK_IJEEEEEENS2_INS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISR_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN15CFWL_NoteDriver6TargetENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSK_IJEEEEEENS2_INS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISR_EEEEEEDpOT_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN15CFWL_NoteDriver6TargetENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSK_IJEEEEEENS2_INS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISR_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN15CFWL_NoteDriver6TargetENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSK_IJEEEEEENS2_INS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISR_EEEEEEDpOT_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeIN5cppgc8internal11BasicMemberI11CFWL_WidgetNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_4lessIS8_EENS_9allocatorIS8_EEE16__construct_nodeIJS8_EEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSB_ISI_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeIN5cppgc8internal11BasicMemberI11CFWL_WidgetNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_4lessIS8_EENS_9allocatorIS8_EEE16__construct_nodeIJS8_EEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSB_ISI_EEEEEEDpOT_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__16__treeIN5cppgc8internal11BasicMemberI11CFWL_WidgetNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_4lessIS8_EENS_9allocatorIS8_EEE16__construct_nodeIJS8_EEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSB_ISI_EEEEEEDpOT_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__16__treeIN5cppgc8internal11BasicMemberI11CFWL_WidgetNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_4lessIS8_EENS_9allocatorIS8_EEE16__construct_nodeIJS8_EEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSB_ISI_EEEEEEDpOT_"}
!18 = !{!"branch_weights", i32 1, i32 2000}
