; ModuleID = '../../third_party/blink/renderer/platform/audio/hrtf_database.cc'
source_filename = "../../third_party/blink/renderer/platform/audio/hrtf_database.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HRTFDatabase" = type <{ %"class.WTF::Vector", float, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::HRTFElevation"* }
%"class.blink::HRTFElevation" = type <{ %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0", double, float, [4 x i8] }>
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.WTF::Vector.3"* }
%"class.WTF::Vector.3" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.std::__1::unique_ptr.16"*, i32, i32 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::HRTFKernel"* }
%"class.blink::HRTFKernel" = type { %"class.std::__1::unique_ptr.8", float, float }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::FFTFrame"* }
%"class.blink::FFTFrame" = type { i32, i32, %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray" }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"struct.std::__1::default_delete" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNKSt3__114default_deleteIN3WTF6VectorINS_10unique_ptrIN5blink10HRTFKernelENS0_IS5_EEEELj0ENS1_18PartitionAllocatorEEEEclEPS9_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink13HRTFElevationENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZN5blink12HRTFDatabase13kMinElevationE = hidden local_unnamed_addr constant i32 -45, align 4
@_ZN5blink12HRTFDatabase13kMaxElevationE = hidden local_unnamed_addr constant i32 90, align 4
@_ZN5blink12HRTFDatabase25kRawElevationAngleSpacingE = hidden local_unnamed_addr constant i32 15, align 4
@_ZN5blink12HRTFDatabase22kNumberOfRawElevationsE = hidden local_unnamed_addr constant i32 10, align 4
@_ZN5blink12HRTFDatabase20kInterpolationFactorE = hidden local_unnamed_addr constant i32 1, align 4
@_ZN5blink12HRTFDatabase24kNumberOfTotalElevationsE = hidden local_unnamed_addr constant i32 10, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink13HRTFElevationENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [139 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::HRTFElevation, std::__1::default_delete<blink::HRTFElevation> >]\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

@_ZN5blink12HRTFDatabaseC1Ef = hidden unnamed_addr alias void (%"class.blink::HRTFDatabase"*, float), void (%"class.blink::HRTFDatabase"*, float)* @_ZN5blink12HRTFDatabaseC2Ef

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12HRTFDatabaseC2Ef(%"class.blink::HRTFDatabase"*, float) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HRTFDatabase", %"class.blink::HRTFDatabase"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::HRTFDatabase", %"class.blink::HRTFDatabase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HRTFDatabase", %"class.blink::HRTFDatabase"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = tail call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 80) #5
  %7 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %6, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink13HRTFElevationENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #5
  %8 = ptrtoint i8* %7 to i64
  %9 = bitcast %"class.blink::HRTFDatabase"* %0 to i64*
  store atomic i64 %8, i64* %9 monotonic, align 8
  %10 = lshr i64 %6, 3
  %11 = trunc i64 %10 to i32
  store i32 %11, i32* %5, align 8
  %12 = getelementptr inbounds %"class.blink::HRTFDatabase", %"class.blink::HRTFDatabase"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 10, i32* %12, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 80, i1 false) #5
  %13 = getelementptr inbounds %"class.blink::HRTFDatabase", %"class.blink::HRTFDatabase"* %0, i64 0, i32 1
  store float %1, float* %13, align 8
  br label %15

14:                                               ; preds = %40
  ret void

15:                                               ; preds = %40, %2
  %16 = phi i32 [ -45, %2 ], [ %42, %40 ]
  %17 = phi i32 [ 0, %2 ], [ %41, %40 ]
  %18 = tail call %"class.blink::HRTFElevation"* @_ZN5blink13HRTFElevation16CreateForSubjectEiif(i32 24734, i32 %16, float %1) #5
  %19 = ptrtoint %"class.blink::HRTFElevation"* %18 to i64
  %20 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink13HRTFElevationENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %17) #5
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::HRTFElevation"*, %"class.blink::HRTFElevation"** %21, align 8
  %23 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  store i64 %19, i64* %23, align 8
  %24 = icmp eq %"class.blink::HRTFElevation"* %22, null
  br i1 %24, label %40, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.blink::HRTFElevation", %"class.blink::HRTFElevation"* %22, i64 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::Vector.3"*, %"class.WTF::Vector.3"** %27, align 8
  store %"class.WTF::Vector.3"* null, %"class.WTF::Vector.3"** %27, align 8
  %29 = icmp eq %"class.WTF::Vector.3"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::unique_ptr.0"* %26 to %"struct.std::__1::default_delete"*
  tail call void @_ZNKSt3__114default_deleteIN3WTF6VectorINS_10unique_ptrIN5blink10HRTFKernelENS0_IS5_EEEELj0ENS1_18PartitionAllocatorEEEEclEPS9_(%"struct.std::__1::default_delete"* %31, %"class.WTF::Vector.3"* nonnull %28) #5
  br label %32

32:                                               ; preds = %30, %25
  %33 = getelementptr inbounds %"class.blink::HRTFElevation", %"class.blink::HRTFElevation"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::Vector.3"*, %"class.WTF::Vector.3"** %33, align 8
  store %"class.WTF::Vector.3"* null, %"class.WTF::Vector.3"** %33, align 8
  %35 = icmp eq %"class.WTF::Vector.3"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.blink::HRTFElevation"* %22 to %"struct.std::__1::default_delete"*
  tail call void @_ZNKSt3__114default_deleteIN3WTF6VectorINS_10unique_ptrIN5blink10HRTFKernelENS0_IS5_EEEELj0ENS1_18PartitionAllocatorEEEEclEPS9_(%"struct.std::__1::default_delete"* nonnull %37, %"class.WTF::Vector.3"* nonnull %34) #5
  br label %38

38:                                               ; preds = %36, %32
  %39 = bitcast %"class.blink::HRTFElevation"* %22 to i8*
  tail call void @free(i8* %39) #5
  br label %40

40:                                               ; preds = %38, %15
  %41 = add nuw nsw i32 %17, 1
  %42 = add nsw i32 %16, 15
  %43 = icmp eq i32 %41, 10
  br i1 %43, label %14, label %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::HRTFElevation"* @_ZN5blink13HRTFElevation16CreateForSubjectEiif(i32, i32, float) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12HRTFDatabase30GetKernelsFromAzimuthElevationEdjdRPNS_10HRTFKernelES3_RdS4_(%"class.blink::HRTFDatabase"*, double, i32, double, %"class.blink::HRTFKernel"** dereferenceable(8), %"class.blink::HRTFKernel"** dereferenceable(8), double* dereferenceable(8), double* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %9 = fcmp ult double %3, 9.000000e+01
  %10 = fcmp ole double %3, -4.500000e+01
  %11 = select i1 %10, double -4.500000e+01, double %3
  %12 = fadd double %11, 4.500000e+01
  %13 = fdiv double %12, 1.500000e+01
  %14 = select i1 %9, double %13, double 9.000000e+00
  %15 = fptosi double %14 to i32
  %16 = getelementptr inbounds %"class.blink::HRTFDatabase", %"class.blink::HRTFDatabase"* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::HRTFDatabase", %"class.blink::HRTFDatabase"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, -1
  %20 = icmp ult i32 %19, %15
  %21 = select i1 %20, i32 %19, i32 %15
  %22 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink13HRTFElevationENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %16, i32 %21) #5
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::HRTFElevation"*, %"class.blink::HRTFElevation"** %23, align 8
  tail call void @_ZN5blink13HRTFElevation21GetKernelsFromAzimuthEdjRPNS_10HRTFKernelES3_RdS4_(%"class.blink::HRTFElevation"* %24, double %1, i32 %2, %"class.blink::HRTFKernel"** dereferenceable(8) %4, %"class.blink::HRTFKernel"** dereferenceable(8) %5, double* dereferenceable(8) %6, double* dereferenceable(8) %7) #5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink12HRTFDatabase23IndexFromElevationAngleEd(double) local_unnamed_addr #3 align 2 {
  %2 = fcmp ult double %0, 9.000000e+01
  %3 = fcmp ole double %0, -4.500000e+01
  %4 = select i1 %3, double -4.500000e+01, double %0
  %5 = fadd double %4, 4.500000e+01
  %6 = fdiv double %5, 1.500000e+01
  %7 = select i1 %2, double %6, double 9.000000e+00
  %8 = fptosi double %7 to i32
  ret i32 %8
}

declare void @_ZN5blink13HRTFElevation21GetKernelsFromAzimuthEdjRPNS_10HRTFKernelES3_RdS4_(%"class.blink::HRTFElevation"*, double, i32, %"class.blink::HRTFKernel"** dereferenceable(8), %"class.blink::HRTFKernel"** dereferenceable(8), double* dereferenceable(8), double* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN3WTF6VectorINS_10unique_ptrIN5blink10HRTFKernelENS0_IS5_EEEELj0ENS1_18PartitionAllocatorEEEEclEPS9_(%"struct.std::__1::default_delete"*, %"class.WTF::Vector.3"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.3"* %1, null
  br i1 %3, label %39, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.16"* %6, null
  br i1 %7, label %37, label %8, !prof !2

8:                                                ; preds = %4
  %9 = bitcast %"class.std::__1::unique_ptr.16"* %6 to i8*
  %10 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %1, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %35, label %13, !prof !3

13:                                               ; preds = %8
  %14 = zext i32 %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %6, i64 %14
  br label %16

16:                                               ; preds = %29, %13
  %17 = phi %"class.std::__1::unique_ptr.16"* [ %30, %29 ], [ %6, %13 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::HRTFKernel"*, %"class.blink::HRTFKernel"** %18, align 8
  store %"class.blink::HRTFKernel"* null, %"class.blink::HRTFKernel"** %18, align 8
  %20 = icmp eq %"class.blink::HRTFKernel"* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::HRTFKernel", %"class.blink::HRTFKernel"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::FFTFrame"*, %"class.blink::FFTFrame"** %22, align 8
  store %"class.blink::FFTFrame"* null, %"class.blink::FFTFrame"** %22, align 8
  %24 = icmp eq %"class.blink::FFTFrame"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* nonnull %23) #5
  %26 = bitcast %"class.blink::FFTFrame"* %23 to i8*
  tail call void @free(i8* %26) #5
  br label %27

27:                                               ; preds = %25, %21
  %28 = bitcast %"class.blink::HRTFKernel"* %19 to i8*
  tail call void @free(i8* %28) #5
  br label %29

29:                                               ; preds = %27, %16
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %17, i64 1
  %31 = icmp eq %"class.std::__1::unique_ptr.16"* %30, %15
  br i1 %31, label %32, label %16

32:                                               ; preds = %29
  store i32 0, i32* %10, align 4
  %33 = bitcast %"class.WTF::Vector.3"* %1 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %8
  %36 = phi i8* [ %34, %32 ], [ %9, %8 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %36) #5
  store %"class.std::__1::unique_ptr.16"* null, %"class.std::__1::unique_ptr.16"** %5, align 8
  br label %37

37:                                               ; preds = %4, %35
  %38 = bitcast %"class.WTF::Vector.3"* %1 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %38) #5
  br label %39

39:                                               ; preds = %37, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink13HRTFElevationENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #5
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #5
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #5
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
