; ModuleID = '../../third_party/unrar/src/scantree.cpp'
source_filename = "../../third_party/unrar/src/scantree.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.ErrorHandler = type <{ i32, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%class.ScanTree = type { [1024 x %class.FindFile*], i32, i32, %class.StringList*, i32, i8, i32, i32, i8, [2048 x i32], [2048 x i32], %class.StringList, %class.StringList, %class.StringList*, %class.Array.0*, i8, i8, i64, [2048 x i32], %class.CommandData* }
%class.FindFile = type { [2048 x i32], i8, %struct.__dirstream* }
%struct.__dirstream = type opaque
%class.StringList = type { %class.Array, i64, i64, [16 x i64], i64 }
%class.Array = type <{ i32*, i64, i64, i64, i8, [7 x i8] }>
%class.Array.0 = type <{ i32*, i64, i64, i64, i8, [7 x i8] }>
%class.CommandData = type { %class.RAROptions.base, i8, i8, i32, i8, [2064 x i32], [2048 x i32], %class.StringList, %class.StringList, %class.StringList, %class.StringList, %class.StringList }
%class.RAROptions.base = type <{ i32, i32, i8, i8, i8, [5 x i8], i64, [2048 x i32], [2048 x i32], i32, i8, [3 x i8], [2048 x i32], [2048 x i32], i32, i32, i32, i32, [2048 x i32], %class.SecPassword, i8, i8, [2 x i8], [2048 x i32], i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, [4 x i8], i64, %class.Array.1, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, [128 x i32], [128 x i32], i8, i8, i8, i8, i8, [3 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], i64, i64, i8, i8, i8, i8, [16 x %struct.FilterMode], [2048 x i32], i32, i32, i32, i32, i32, i32, i8, [3 x i8], [2048 x i32], i32 }>
%class.SecPassword = type <{ [128 x i32], i8, i8, [2 x i8] }>
%class.Array.1 = type <{ i64*, i64, i64, i64, i8, [7 x i8] }>
%class.RarTime = type { i64 }
%struct.FilterMode = type { i32, i32, i32 }
%struct.FindData = type <{ [2048 x i32], i64, i32, i8, i8, [2 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i32, i8, [3 x i8] }>
%class.uiMsgStore = type <{ [8 x i32*], [8 x i32], i32, i32, i32, [4 x i8] }>

$_ZN5ArrayIjE3AddEm = comdat any

@.str = private unnamed_addr constant [2 x i32] [i32 42, i32 0], align 4
@.str.1 = private unnamed_addr constant [4 x i32] [i32 42, i32 46, i32 42, i32 0], align 4
@ErrHandler = external global %class.ErrorHandler, align 4
@.str.2 = private unnamed_addr constant [2 x i32] [i32 47, i32 0], align 4
@.str.3 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4
@.str.4 = private unnamed_addr constant [44 x i32] [i32 77, i32 97, i32 120, i32 105, i32 109, i32 117, i32 109, i32 32, i32 97, i32 108, i32 108, i32 111, i32 119, i32 101, i32 100, i32 32, i32 97, i32 114, i32 114, i32 97, i32 121, i32 32, i32 115, i32 105, i32 122, i32 101, i32 32, i32 40, i32 37, i32 117, i32 41, i32 32, i32 105, i32 115, i32 32, i32 101, i32 120, i32 99, i32 101, i32 101, i32 100, i32 101, i32 100, i32 0], align 4

@_ZN8ScanTreeC1EP10StringList12RECURSE_MODEb9SCAN_DIRS = hidden unnamed_addr alias void (%class.ScanTree*, %class.StringList*, i32, i1, i32), void (%class.ScanTree*, %class.StringList*, i32, i1, i32)* @_ZN8ScanTreeC2EP10StringList12RECURSE_MODEb9SCAN_DIRS
@_ZN8ScanTreeD1Ev = hidden unnamed_addr alias void (%class.ScanTree*), void (%class.ScanTree*)* @_ZN8ScanTreeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8ScanTreeC2EP10StringList12RECURSE_MODEb9SCAN_DIRS(%class.ScanTree*, %class.StringList*, i32, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %6 = zext i1 %3 to i8
  %7 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 11
  tail call void @_ZN10StringListC1Ev(%class.StringList* %7) #9
  %8 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 12
  tail call void @_ZN10StringListC1Ev(%class.StringList* %8) #9
  %9 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 3
  store %class.StringList* %1, %class.StringList** %9, align 8
  %10 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 4
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 5
  store i8 %6, i8* %11, align 4
  %12 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 6
  store i32 %4, i32* %12, align 8
  %13 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 8
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9, i64 0
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 7
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 18, i64 0
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 19
  store %class.CommandData* null, %class.CommandData** %17, align 8
  %18 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 13
  %19 = bitcast %class.ScanTree* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 8200, i1 false)
  %20 = bitcast %class.StringList** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 17, i1 false)
  ret void
}

declare void @_ZN10StringListC1Ev(%class.StringList*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8ScanTreeD2Ev(%class.ScanTree* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, -1
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  br label %44

7:                                                ; preds = %51, %1
  %8 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 12
  %9 = getelementptr inbounds %class.StringList, %class.StringList* %8, i64 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %10, null
  %12 = bitcast i32* %10 to i8*
  br i1 %11, label %25, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 12, i32 0, i32 4
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 12, i32 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = shl i64 %19, 2
  tail call void @_Z9cleandataPvm(i8* nonnull %12, i64 %20) #9
  %21 = bitcast %class.StringList* %8 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %17, %13
  %24 = phi i8* [ %22, %17 ], [ %12, %13 ]
  tail call void @free(i8* %24) #9
  br label %25

25:                                               ; preds = %7, %23
  %26 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 11
  %27 = getelementptr inbounds %class.StringList, %class.StringList* %26, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  %30 = bitcast i32* %28 to i8*
  br i1 %29, label %43, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 11, i32 0, i32 4
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 11, i32 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = shl i64 %37, 2
  tail call void @_Z9cleandataPvm(i8* nonnull %30, i64 %38) #9
  %39 = bitcast %class.StringList* %26 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %35, %31
  %42 = phi i8* [ %40, %35 ], [ %30, %31 ]
  tail call void @free(i8* %42) #9
  br label %43

43:                                               ; preds = %25, %41
  ret void

44:                                               ; preds = %5, %51
  %45 = phi i64 [ %6, %5 ], [ %52, %51 ]
  %46 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 0, i64 %45
  %47 = load %class.FindFile*, %class.FindFile** %46, align 8
  %48 = icmp eq %class.FindFile* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %44
  tail call void @_ZN8FindFileD1Ev(%class.FindFile* nonnull %47) #9
  %50 = bitcast %class.FindFile* %47 to i8*
  tail call void @_ZdlPv(i8* %50) #10
  br label %51

51:                                               ; preds = %44, %49
  %52 = add nsw i64 %45, -1
  %53 = icmp sgt i64 %45, 0
  br i1 %53, label %44, label %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN8FindFileD1Ev(%class.FindFile*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8ScanTree7GetNextEP8FindData(%class.ScanTree*, %struct.FindData*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %39, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9, i64 0
  %8 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 7
  %9 = getelementptr inbounds %struct.FindData, %struct.FindData* %1, i64 0, i32 3
  %10 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 6
  %11 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 12, i32 2
  %12 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 12
  %13 = getelementptr inbounds %struct.FindData, %struct.FindData* %1, i64 0, i32 0, i64 0
  br label %14

14:                                               ; preds = %21, %6
  %15 = load i32, i32* %7, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = tail call zeroext i1 @_ZN8ScanTree11GetNextMaskEv(%class.ScanTree* %0)
  br i1 %18, label %19, label %39

19:                                               ; preds = %17, %14
  %20 = tail call i32 @_ZN8ScanTree8FindProcEP8FindData(%class.ScanTree* %0, %struct.FindData* %1)
  switch i32 %20, label %39 [
    i32 2, label %22
    i32 3, label %21
    i32 0, label %25
    i32 1, label %31
  ]

21:                                               ; preds = %19, %22, %28, %31, %36
  br label %14

22:                                               ; preds = %19
  %23 = load i32, i32* %8, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %8, align 4
  br label %21

25:                                               ; preds = %19
  %26 = load i8, i8* %9, align 4, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  %29 = load i32, i32* %10, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %21, label %33

31:                                               ; preds = %19
  %32 = tail call zeroext i1 @_ZN8ScanTree11GetNextMaskEv(%class.ScanTree* %0)
  br i1 %32, label %21, label %39

33:                                               ; preds = %25, %28
  %34 = load i64, i64* %11, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = icmp ne i8 %26, 0
  %38 = tail call zeroext i1 @_ZN11CommandData9CheckArgsEP10StringListbPKwbi(%class.StringList* %12, i1 zeroext %37, i32* %13, i1 zeroext false, i32 6) #9
  br i1 %38, label %39, label %21

39:                                               ; preds = %31, %17, %36, %33, %19, %2
  %40 = phi i32 [ 1, %2 ], [ 1, %31 ], [ 0, %36 ], [ 0, %33 ], [ 1, %17 ], [ %20, %19 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8ScanTree11GetNextMaskEv(%class.ScanTree*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN8ScanTree15GetFilteredMaskEv(%class.ScanTree* %0)
  br i1 %2, label %3, label %43

3:                                                ; preds = %1
  %4 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9
  %5 = getelementptr inbounds [2048 x i32], [2048 x i32]* %4, i64 0, i64 0
  %6 = tail call zeroext i1 @_Z13IsDriveLetterPKw(i32* %5) #9
  br i1 %6, label %7, label %16

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9, i64 2
  %9 = load i32, i32* %8, align 4
  %10 = tail call zeroext i1 @_Z9IsPathDivi(i32 %9) #9
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9, i64 3
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = zext i1 %14 to i8
  br label %16

16:                                               ; preds = %11, %7, %3
  %17 = phi i8 [ 0, %7 ], [ 0, %3 ], [ %15, %11 ]
  %18 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 8
  store i8 %17, i8* %18, align 8
  %19 = tail call i32* @_Z11PointToNamePKw(i32* %5) #9
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  tail call void @_Z8wcsncatzPwPKwm(i32* %5, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str, i64 0, i64 0), i64 2048) #9
  %23 = load i32, i32* %19, align 4
  br label %24

24:                                               ; preds = %22, %16
  %25 = phi i32 [ %23, %22 ], [ %20, %16 ]
  %26 = icmp eq i32 %25, 46
  br i1 %26, label %27, label %35

27:                                               ; preds = %24
  %28 = getelementptr inbounds i32, i32* %19, i64 1
  %29 = load i32, i32* %28, align 4
  switch i32 %29, label %35 [
    i32 0, label %34
    i32 46, label %30
  ]

30:                                               ; preds = %27
  %31 = getelementptr inbounds i32, i32* %19, i64 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %27, %30
  tail call void @_Z11AddEndSlashPwm(i32* %5, i64 2048) #9
  tail call void @_Z8wcsncatzPwPKwm(i32* %5, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str, i64 0, i64 0), i64 2048) #9
  br label %35

35:                                               ; preds = %27, %34, %30, %24
  %36 = ptrtoint i32* %19 to i64
  %37 = ptrtoint [2048 x i32]* %4 to i64
  %38 = sub i64 %36, %37
  %39 = ashr exact i64 %38, 2
  %40 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 17
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 1
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 10, i64 0
  tail call void @_Z8wcsncpyzPwPKwm(i32* %42, i32* %5, i64 2048) #9
  br label %43

43:                                               ; preds = %1, %35
  %44 = phi i1 [ true, %35 ], [ false, %1 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8ScanTree8FindProcEP8FindData(%class.ScanTree*, %struct.FindData*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.uiMsgStore, align 8
  %4 = alloca [2048 x i32], align 16
  %5 = alloca i8, align 1
  %6 = alloca [2048 x i32], align 16
  %7 = alloca [2048 x i32], align 16
  %8 = alloca [2048 x i32], align 16
  %9 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9, i64 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %287, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 0, i64 %15
  %17 = load %class.FindFile*, %class.FindFile** %16, align 8
  %18 = icmp eq %class.FindFile* %17, null
  br i1 %18, label %19, label %112

19:                                               ; preds = %12
  %20 = tail call zeroext i1 @_Z10IsWildcardPKw(i32* %9) #9
  br i1 %20, label %37, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 5
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = icmp ne i8 %23, 0
  %25 = tail call zeroext i1 @_ZN8FindFile8FastFindEPKwP8FindDatab(i32* %9, %struct.FindData* %1, i1 zeroext %24) #9
  br i1 %25, label %26, label %37

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.FindData, %struct.FindData* %1, i64 0, i32 3
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %26
  %31 = load i8, i8* %22, align 4, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %59, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.FindData, %struct.FindData* %1, i64 0, i32 4
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %59, label %37

37:                                               ; preds = %19, %21, %26, %33
  %38 = phi i1 [ true, %33 ], [ false, %21 ], [ true, %26 ], [ false, %19 ]
  %39 = load i32, i32* %13, align 8
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %70, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 2
  br i1 %44, label %59, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 15
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp ne i8 %47, 0
  %49 = icmp ne i32 %43, 1
  %50 = and i1 %49, %48
  %51 = icmp eq i32 %43, 3
  %52 = and i1 %20, %51
  %53 = or i1 %52, %50
  br i1 %53, label %59, label %54

54:                                               ; preds = %45
  %55 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 8
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp ne i8 %56, 0
  %58 = and i1 %49, %57
  br label %59

59:                                               ; preds = %54, %45, %30, %41, %33
  %60 = phi i1 [ true, %45 ], [ true, %41 ], [ false, %33 ], [ false, %30 ], [ true, %54 ]
  %61 = phi i1 [ %38, %45 ], [ %38, %41 ], [ true, %33 ], [ true, %30 ], [ %38, %54 ]
  %62 = phi i1 [ true, %45 ], [ true, %41 ], [ false, %33 ], [ false, %30 ], [ %58, %54 ]
  %63 = load i32, i32* %13, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = zext i1 %62 to i8
  %67 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 16
  store i8 %66, i8* %67, align 1
  br label %68

68:                                               ; preds = %65, %59
  %69 = or i1 %20, %62
  br i1 %69, label %70, label %81

70:                                               ; preds = %37, %68
  %71 = phi i1 [ %62, %68 ], [ true, %37 ]
  %72 = tail call i8* @_Znwm(i64 8208) #10
  %73 = bitcast i8* %72 to %class.FindFile*
  tail call void @_ZN8FindFileC1Ev(%class.FindFile* nonnull %73) #9
  %74 = load i32, i32* %13, align 8
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 0, i64 %75
  %77 = bitcast %class.FindFile** %76 to i8**
  store i8* %72, i8** %77, align 8
  %78 = bitcast [2048 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %78) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %78, i8 -86, i64 8192, i1 false)
  %79 = getelementptr inbounds [2048 x i32], [2048 x i32]* %4, i64 0, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %79, i32* %9, i64 2048) #9
  br i1 %71, label %80, label %103

80:                                               ; preds = %70
  call void @_Z7SetNamePwPKwm(i32* nonnull %79, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str, i64 0, i64 0), i64 2048) #9
  br label %103

81:                                               ; preds = %68
  %82 = xor i1 %61, true
  %83 = or i1 %60, %82
  br i1 %83, label %88, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 4
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %206

88:                                               ; preds = %81, %84
  br i1 %61, label %101, label %89

89:                                               ; preds = %88
  %90 = getelementptr inbounds %struct.FindData, %struct.FindData* %1, i64 0, i32 10
  %91 = load i8, i8* %90, align 4, !range !2
  %92 = icmp eq i8 %91, 0
  %93 = select i1 %92, i32 3, i32 2
  %94 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 19
  %95 = load %class.CommandData*, %class.CommandData** %94, align 8
  %96 = icmp eq %class.CommandData* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %89
  %98 = tail call zeroext i1 @_ZN11CommandData9ExclCheckEPKwbbb(%class.CommandData* nonnull %95, i32* %9, i1 zeroext false, i1 zeroext true, i1 zeroext true) #9
  br i1 %98, label %101, label %99

99:                                               ; preds = %89, %97
  %100 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 18, i64 0
  tail call void @_ZN12ErrorHandler12OpenErrorMsgEPKwS1_(%class.ErrorHandler* nonnull @ErrHandler, i32* %100, i32* %9) #9
  tail call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 10) #9
  br label %101

101:                                              ; preds = %88, %99, %97
  %102 = phi i32 [ 0, %88 ], [ %93, %99 ], [ 3, %97 ]
  store i32 0, i32* %9, align 4
  br label %287

103:                                              ; preds = %70, %80
  %104 = load i32, i32* %13, align 8
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 0, i64 %105
  %107 = load %class.FindFile*, %class.FindFile** %106, align 8
  call void @_ZN8FindFile7SetMaskEPKw(%class.FindFile* %107, i32* nonnull %79) #9
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %78) #9
  %108 = load i32, i32* %13, align 8
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 0, i64 %109
  %111 = load %class.FindFile*, %class.FindFile** %110, align 8
  br label %112

112:                                              ; preds = %12, %103
  %113 = phi %class.FindFile* [ %17, %12 ], [ %111, %103 ]
  %114 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 5
  %115 = load i8, i8* %114, align 4, !range !2
  %116 = icmp ne i8 %115, 0
  %117 = call zeroext i1 @_ZN8FindFile4NextEP8FindDatab(%class.FindFile* %113, %struct.FindData* %1, i1 zeroext %116) #9
  br i1 %117, label %206, label %118

118:                                              ; preds = %112
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  %119 = getelementptr inbounds %struct.FindData, %struct.FindData* %1, i64 0, i32 10
  %120 = load i8, i8* %119, align 4, !range !2
  %121 = icmp eq i8 %120, 0
  store i8 %120, i8* %5, align 1
  br i1 %121, label %123, label %122

122:                                              ; preds = %118
  call void @_ZN8ScanTree9ScanErrorERb(%class.ScanTree* %0, i8* nonnull dereferenceable(1) %5)
  br label %123

123:                                              ; preds = %118, %122
  %124 = bitcast [2048 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %124) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %124, i8 -86, i64 8192, i1 false)
  %125 = getelementptr inbounds [2048 x i32], [2048 x i32]* %6, i64 0, i64 0
  store i32 0, i32* %125, align 16
  %126 = load i32, i32* %13, align 8
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 0, i64 %127
  %129 = load %class.FindFile*, %class.FindFile** %128, align 8
  %130 = icmp eq %class.FindFile* %129, null
  br i1 %130, label %135, label %131

131:                                              ; preds = %123
  call void @_ZN8FindFileD1Ev(%class.FindFile* nonnull %129) #9
  %132 = bitcast %class.FindFile* %129 to i8*
  call void @_ZdlPv(i8* %132) #10
  %133 = load i32, i32* %13, align 8
  %134 = sext i32 %133 to i64
  br label %135

135:                                              ; preds = %131, %123
  %136 = phi i64 [ %134, %131 ], [ %127, %123 ]
  %137 = phi i32 [ %133, %131 ], [ %126, %123 ]
  %138 = add nsw i32 %137, -1
  store i32 %138, i32* %13, align 8
  %139 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 0, i64 %136
  store %class.FindFile* null, %class.FindFile** %139, align 8
  %140 = load i32, i32* %13, align 8
  %141 = icmp sgt i32 %140, -1
  br i1 %141, label %142, label %153

142:                                              ; preds = %135
  %143 = sext i32 %140 to i64
  br label %144

144:                                              ; preds = %142, %149
  %145 = phi i64 [ %143, %142 ], [ %150, %149 ]
  %146 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 0, i64 %145
  %147 = load %class.FindFile*, %class.FindFile** %146, align 8
  %148 = icmp eq %class.FindFile* %147, null
  br i1 %148, label %149, label %160

149:                                              ; preds = %144
  %150 = add nsw i64 %145, -1
  %151 = trunc i64 %150 to i32
  store i32 %151, i32* %13, align 8
  %152 = icmp sgt i64 %145, 0
  br i1 %152, label %144, label %153

153:                                              ; preds = %149, %135
  %154 = load i8, i8* %5, align 1, !range !2
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %204, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 7
  %158 = load i32, i32* %157, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %157, align 4
  br label %204

160:                                              ; preds = %144
  %161 = call i32* @wcsrchr(i32* %9, i32 signext 47) #11
  %162 = icmp eq i32* %161, null
  br i1 %162, label %181, label %163

163:                                              ; preds = %160
  %164 = bitcast [2048 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %164) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %164, i8 -86, i64 8192, i1 false)
  %165 = getelementptr inbounds [2048 x i32], [2048 x i32]* %7, i64 0, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %165, i32* nonnull %161, i64 2048) #9
  %166 = load i32, i32* %13, align 8
  %167 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 2
  %168 = load i32, i32* %167, align 4
  %169 = icmp slt i32 %166, %168
  br i1 %169, label %170, label %174

170:                                              ; preds = %163
  %171 = getelementptr inbounds [2048 x i32], [2048 x i32]* %7, i64 0, i64 1
  %172 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 10, i64 0
  %173 = call i32* @_Z11PointToNamePKw(i32* %172) #9
  call void @_Z8wcsncpyzPwPKwm(i32* %171, i32* %173, i64 2047) #9
  br label %174

174:                                              ; preds = %170, %163
  store i32 0, i32* %161, align 4
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %125, i32* %9, i64 2048) #9
  %175 = call i32* @wcsrchr(i32* %9, i32 signext 47) #11
  %176 = icmp eq i32* %175, null
  br i1 %176, label %177, label %179

177:                                              ; preds = %174
  %178 = getelementptr inbounds [2048 x i32], [2048 x i32]* %7, i64 0, i64 1
  call void @_Z8wcsncpyzPwPKwm(i32* %9, i32* %178, i64 2048) #9
  br label %180

179:                                              ; preds = %174
  store i32 0, i32* %175, align 4
  call void @_Z8wcsncatzPwPKwm(i32* %9, i32* nonnull %165, i64 2048) #9
  br label %180

180:                                              ; preds = %179, %177
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %164) #9
  br label %181

181:                                              ; preds = %160, %180
  %182 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 6
  %183 = load i32, i32* %182, align 8
  %184 = icmp eq i32 %183, 2
  br i1 %184, label %185, label %200

185:                                              ; preds = %181
  %186 = load i8, i8* %114, align 4, !range !2
  %187 = icmp ne i8 %186, 0
  %188 = call zeroext i1 @_ZN8FindFile8FastFindEPKwP8FindDatab(i32* nonnull %125, %struct.FindData* %1, i1 zeroext %187) #9
  br i1 %188, label %189, label %200

189:                                              ; preds = %185
  %190 = getelementptr inbounds %struct.FindData, %struct.FindData* %1, i64 0, i32 3
  %191 = load i8, i8* %190, align 4, !range !2
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %200, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %struct.FindData, %struct.FindData* %1, i64 0, i32 9
  %195 = load i32, i32* %194, align 8
  %196 = or i32 %195, 1
  store i32 %196, i32* %194, align 8
  %197 = load i8, i8* %5, align 1, !range !2
  %198 = icmp eq i8 %197, 0
  %199 = select i1 %198, i32 0, i32 2
  br label %204

200:                                              ; preds = %189, %185, %181
  %201 = load i8, i8* %5, align 1, !range !2
  %202 = icmp eq i8 %201, 0
  %203 = select i1 %202, i32 3, i32 2
  br label %204

204:                                              ; preds = %193, %200, %156, %153
  %205 = phi i32 [ 1, %153 ], [ 1, %156 ], [ %199, %193 ], [ %203, %200 ]
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %124) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  br label %287

206:                                              ; preds = %84, %112
  %207 = phi i1 [ false, %112 ], [ true, %84 ]
  %208 = getelementptr inbounds %struct.FindData, %struct.FindData* %1, i64 0, i32 3
  %209 = load i8, i8* %208, align 4, !range !2
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %282, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 5
  %213 = load i8, i8* %212, align 4, !range !2
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %219, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %struct.FindData, %struct.FindData* %1, i64 0, i32 4
  %217 = load i8, i8* %216, align 1, !range !2
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %219, label %282

219:                                              ; preds = %215, %211
  br i1 %207, label %232, label %220

220:                                              ; preds = %219
  %221 = load i32, i32* %13, align 8
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %232

223:                                              ; preds = %220
  %224 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 16
  %225 = load i8, i8* %224, align 1, !range !2
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %227, label %232

227:                                              ; preds = %223
  %228 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 6
  %229 = load i32, i32* %228, align 8
  %230 = icmp eq i32 %229, 3
  %231 = select i1 %230, i32 0, i32 3
  br label %287

232:                                              ; preds = %223, %220, %219
  %233 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 19
  %234 = load %class.CommandData*, %class.CommandData** %233, align 8
  %235 = icmp eq %class.CommandData* %234, null
  br i1 %235, label %246, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %struct.FindData, %struct.FindData* %1, i64 0, i32 0, i64 0
  %238 = call zeroext i1 @_ZN11CommandData9ExclCheckEPKwbbb(%class.CommandData* nonnull %234, i32* %237, i1 zeroext true, i1 zeroext false, i1 zeroext false) #9
  br i1 %238, label %244, label %239

239:                                              ; preds = %236
  %240 = load %class.CommandData*, %class.CommandData** %233, align 8
  %241 = getelementptr inbounds %struct.FindData, %struct.FindData* %1, i64 0, i32 2
  %242 = load i32, i32* %241, align 8
  %243 = call zeroext i1 @_ZN11CommandData13ExclDirByAttrEj(%class.CommandData* %240, i32 %242) #9
  br i1 %243, label %244, label %246

244:                                              ; preds = %239, %236
  %245 = select i1 %207, i32 1, i32 3
  br label %287

246:                                              ; preds = %232, %239
  %247 = bitcast [2048 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %247) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %247, i8 -86, i64 8192, i1 false)
  %248 = getelementptr inbounds [2048 x i32], [2048 x i32]* %8, i64 0, i64 0
  br i1 %207, label %251, label %249

249:                                              ; preds = %246
  %250 = call i32* @_Z11PointToNamePKw(i32* %9) #9
  br label %251

251:                                              ; preds = %246, %249
  %252 = phi i32* [ %250, %249 ], [ getelementptr inbounds ([2 x i32], [2 x i32]* @.str, i64 0, i64 0), %246 ]
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %248, i32* %252, i64 2048) #9
  %253 = getelementptr inbounds %struct.FindData, %struct.FindData* %1, i64 0, i32 0, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* %9, i32* %253, i64 2048) #9
  %254 = call i64 @wcslen(i32* %9) #11
  %255 = call i64 @wcslen(i32* nonnull %248) #11
  %256 = add i64 %254, 1
  %257 = add i64 %256, %255
  %258 = icmp ugt i64 %257, 2047
  br i1 %258, label %268, label %259

259:                                              ; preds = %251
  %260 = load i32, i32* %13, align 8
  %261 = icmp sgt i32 %260, 1022
  br i1 %261, label %268, label %262

262:                                              ; preds = %259
  call void @_Z11AddEndSlashPwm(i32* %9, i64 2048) #9
  call void @_Z8wcsncatzPwPKwm(i32* %9, i32* nonnull %248, i64 2048) #9
  %263 = load i32, i32* %13, align 8
  %264 = add nsw i32 %263, 1
  store i32 %264, i32* %13, align 8
  br i1 %207, label %265, label %267

265:                                              ; preds = %262
  %266 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 2
  store i32 %264, i32* %266, align 4
  br label %267

267:                                              ; preds = %265, %262
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %247) #9
  br label %282

268:                                              ; preds = %251, %259
  %269 = bitcast %class.uiMsgStore* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %269) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %269, i8 -86, i64 112, i1 false) #9
  %270 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 0
  %271 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 1
  %272 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 2
  %273 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 3
  %274 = bitcast i32** %273 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.3, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.3, i64 0, i64 0)>, <2 x i32*>* %274, align 8
  %275 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 5
  %276 = bitcast i32** %275 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.3, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.3, i64 0, i64 0)>, <2 x i32*>* %276, align 8
  %277 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.3, i64 0, i64 0), i32** %277, align 8
  %278 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 1, i64 0
  %279 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 4
  %280 = bitcast i32* %278 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %280, i8 0, i64 40, i1 false) #9
  store i32 86, i32* %279, align 8
  %281 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 2
  store i32* %9, i32** %270, align 8
  store i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str.2, i64 0, i64 0), i32** %271, align 8
  store i32 3, i32* %281, align 8
  store i32* %248, i32** %272, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %269) #9
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %247) #9
  br label %287

282:                                              ; preds = %267, %215, %206
  br i1 %207, label %286, label %283

283:                                              ; preds = %282
  %284 = getelementptr inbounds %struct.FindData, %struct.FindData* %1, i64 0, i32 0, i64 0
  %285 = call zeroext i1 @_Z7CmpNamePKwS0_i(i32* %9, i32* %284, i32 0) #9
  br i1 %285, label %286, label %287

286:                                              ; preds = %283, %282
  br label %287

287:                                              ; preds = %268, %101, %204, %227, %244, %286, %283, %2
  %288 = phi i32 [ 3, %2 ], [ 0, %286 ], [ %245, %244 ], [ 2, %268 ], [ %231, %227 ], [ %205, %204 ], [ %102, %101 ], [ 3, %283 ]
  ret i32 %288
}

declare zeroext i1 @_ZN11CommandData9CheckArgsEP10StringListbPKwbi(%class.StringList*, i1 zeroext, i32*, i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8ScanTree16ExpandFolderMaskEv(%class.ScanTree*) local_unnamed_addr #0 align 2 {
  %2 = alloca [2048 x i32], align 16
  %3 = alloca %class.FindFile, align 8
  %4 = alloca %struct.FindData, align 8
  br label %5

5:                                                ; preds = %16, %1
  %6 = phi i64 [ %18, %16 ], [ 0, %1 ]
  %7 = phi i8 [ %17, %16 ], [ 0, %1 ]
  %8 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9, i64 %6
  %9 = load i32, i32* %8, align 4
  switch i32 %9, label %10 [
    i32 0, label %19
    i32 63, label %13
    i32 42, label %13
  ]

10:                                               ; preds = %5
  %11 = and i8 %7, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %5, %5, %10
  %14 = phi i8 [ %7, %10 ], [ 1, %5 ], [ 1, %5 ]
  %15 = tail call zeroext i1 @_Z9IsPathDivi(i32 %9) #9
  br i1 %15, label %19, label %16

16:                                               ; preds = %10, %13
  %17 = phi i8 [ %7, %10 ], [ %14, %13 ]
  %18 = add nuw i64 %6, 1
  br label %5

19:                                               ; preds = %13, %5
  %20 = phi i64 [ 0, %5 ], [ %6, %13 ]
  %21 = bitcast [2048 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %21) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 8192, i1 false)
  %22 = getelementptr inbounds [2048 x i32], [2048 x i32]* %2, i64 0, i64 0
  %23 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %22, i32* %23, i64 2048) #9
  %24 = and i64 %20, 4294967295
  %25 = getelementptr inbounds [2048 x i32], [2048 x i32]* %2, i64 0, i64 %24
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 11
  call void @_ZN10StringList5ResetEv(%class.StringList* %26) #9
  %27 = bitcast %class.FindFile* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8208, i8* nonnull %27) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 8208, i1 false)
  call void @_ZN8FindFileC1Ev(%class.FindFile* nonnull %3) #9
  call void @_ZN8FindFile7SetMaskEPKw(%class.FindFile* nonnull %3, i32* nonnull %22) #9
  %28 = bitcast %struct.FindData* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8240, i8* nonnull %28) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 8240, i1 false)
  %29 = getelementptr inbounds %struct.FindData, %struct.FindData* %4, i64 0, i32 6, i32 0
  %30 = bitcast i64* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #9
  %31 = call zeroext i1 @_ZN8FindFile4NextEP8FindDatab(%class.FindFile* nonnull %3, %struct.FindData* nonnull %4, i1 zeroext false) #9
  br i1 %31, label %32, label %50

32:                                               ; preds = %19
  %33 = getelementptr inbounds %struct.FindData, %struct.FindData* %4, i64 0, i32 3
  %34 = getelementptr inbounds %struct.FindData, %struct.FindData* %4, i64 0, i32 0, i64 0
  %35 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9, i64 %24
  br label %36

36:                                               ; preds = %32, %48
  %37 = load i8, i8* %33, align 4, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %48, label %39

39:                                               ; preds = %36
  call void @_Z8wcsncatzPwPKwm(i32* nonnull %34, i32* %35, i64 2048) #9
  %40 = call i32* @_Z11PointToNamePKw(i32* nonnull %34) #9
  %41 = call i32 @wcscmp(i32* %40, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str, i64 0, i64 0)) #11
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = call i32 @wcscmp(i32* %40, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.1, i64 0, i64 0)) #11
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43, %39
  call void @_Z18RemoveNameFromPathPw(i32* nonnull %34) #9
  br label %47

47:                                               ; preds = %46, %43
  call void @_ZN10StringList9AddStringEPKw(%class.StringList* %26, i32* nonnull %34) #9
  br label %48

48:                                               ; preds = %36, %47
  %49 = call zeroext i1 @_ZN8FindFile4NextEP8FindDatab(%class.FindFile* nonnull %3, %struct.FindData* nonnull %4, i1 zeroext false) #9
  br i1 %49, label %36, label %50

50:                                               ; preds = %48, %19
  %51 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 11, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = call zeroext i1 @_ZN10StringList9GetStringEPwm(%class.StringList* %26, i32* %23, i64 2048) #9
  br label %56

56:                                               ; preds = %50, %54
  %57 = phi i1 [ true, %54 ], [ false, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 8240, i8* nonnull %28) #9
  call void @_ZN8FindFileD1Ev(%class.FindFile* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8208, i8* nonnull %27) #9
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %21) #9
  ret i1 %57
}

declare zeroext i1 @_Z9IsPathDivi(i32) local_unnamed_addr #1

declare void @_Z8wcsncpyzPwPKwm(i32*, i32*, i64) local_unnamed_addr #1

declare void @_ZN10StringList5ResetEv(%class.StringList*) local_unnamed_addr #1

declare void @_ZN8FindFileC1Ev(%class.FindFile*) unnamed_addr #1

declare void @_ZN8FindFile7SetMaskEPKw(%class.FindFile*, i32*) local_unnamed_addr #1

declare zeroext i1 @_ZN8FindFile4NextEP8FindDatab(%class.FindFile*, %struct.FindData*, i1 zeroext) local_unnamed_addr #1

declare void @_Z8wcsncatzPwPKwm(i32*, i32*, i64) local_unnamed_addr #1

declare i32* @_Z11PointToNamePKw(i32*) local_unnamed_addr #1

; Function Attrs: nounwind readonly
declare i32 @wcscmp(i32*, i32*) local_unnamed_addr #5

declare void @_Z18RemoveNameFromPathPw(i32*) local_unnamed_addr #1

declare void @_ZN10StringList9AddStringEPKw(%class.StringList*, i32*) local_unnamed_addr #1

declare zeroext i1 @_ZN10StringList9GetStringEPwm(%class.StringList*, i32*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8ScanTree15GetFilteredMaskEv(%class.ScanTree*) local_unnamed_addr #0 align 2 {
  %2 = alloca [2048 x i32], align 16
  %3 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 11, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 11
  %8 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9, i64 0
  %9 = tail call zeroext i1 @_ZN10StringList9GetStringEPwm(%class.StringList* %7, i32* %8, i64 2048) #9
  br i1 %9, label %86, label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 15
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 12
  tail call void @_ZN10StringList5ResetEv(%class.StringList* %12) #9
  %13 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 3
  %14 = load %class.StringList*, %class.StringList** %13, align 8
  %15 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9, i64 0
  %16 = tail call zeroext i1 @_ZN10StringList9GetStringEPwm(%class.StringList* %14, i32* %15, i64 2048) #9
  br i1 %16, label %17, label %86

17:                                               ; preds = %10, %43
  %18 = phi i8 [ %44, %43 ], [ 0, %10 ]
  %19 = phi i32 [ %45, %43 ], [ 0, %10 ]
  %20 = phi i32 [ %46, %43 ], [ 0, %10 ]
  %21 = phi i32 [ %47, %43 ], [ 0, %10 ]
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9, i64 %22
  %24 = load i32, i32* %23, align 4
  switch i32 %24, label %28 [
    i32 0, label %25
    i32 63, label %27
    i32 42, label %27
  ]

25:                                               ; preds = %17
  %26 = icmp eq i32 %19, 0
  br i1 %26, label %86, label %48

27:                                               ; preds = %17, %17
  br label %28

28:                                               ; preds = %17, %27
  %29 = phi i8 [ 1, %27 ], [ %18, %17 ]
  %30 = tail call zeroext i1 @_Z9IsPathDivi(i32 %24) #9
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = load i32, i32* %23, align 4
  %33 = tail call zeroext i1 @_Z10IsDriveDivi(i32 %32) #9
  br i1 %33, label %34, label %43

34:                                               ; preds = %31, %28
  %35 = and i8 %29, 1
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %36, i8 %29, i8 0
  %38 = xor i1 %36, true
  %39 = zext i1 %38 to i32
  %40 = add i32 %19, %39
  %41 = icmp eq i32 %40, 0
  %42 = select i1 %41, i32 %21, i32 %20
  br label %43

43:                                               ; preds = %34, %31
  %44 = phi i8 [ %29, %31 ], [ %37, %34 ]
  %45 = phi i32 [ %19, %31 ], [ %40, %34 ]
  %46 = phi i32 [ %20, %31 ], [ %42, %34 ]
  %47 = add i32 %21, 1
  br label %17

48:                                               ; preds = %25
  store i8 1, i8* %11, align 8
  %49 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = icmp ult i32 %50, 2
  %52 = icmp eq i32 %19, 1
  %53 = and i1 %52, %51
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = tail call zeroext i1 @_ZN8ScanTree16ExpandFolderMaskEv(%class.ScanTree* %0)
  br label %86

56:                                               ; preds = %48
  %57 = bitcast [2048 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %57) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %57, i8 -86, i64 8192, i1 false)
  %58 = getelementptr inbounds [2048 x i32], [2048 x i32]* %2, i64 0, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %58, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str, i64 0, i64 0), i64 2048) #9
  call void @_Z11AddEndSlashPwm(i32* nonnull %58, i64 2048) #9
  %59 = zext i32 %20 to i64
  %60 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = call zeroext i1 @_Z9IsPathDivi(i32 %61) #9
  br i1 %62, label %66, label %63

63:                                               ; preds = %56
  %64 = load i32, i32* %60, align 4
  %65 = call zeroext i1 @_Z10IsDriveDivi(i32 %64) #9
  br i1 %65, label %66, label %68

66:                                               ; preds = %63, %56
  %67 = getelementptr inbounds i32, i32* %60, i64 1
  br label %68

68:                                               ; preds = %63, %66
  %69 = phi i32* [ %67, %66 ], [ %60, %63 ]
  call void @_Z8wcsncatzPwPKwm(i32* nonnull %58, i32* %69, i64 2048) #9
  %70 = call i32* @_Z11PointToNamePKw(i32* nonnull %58) #9
  %71 = call i32 @wcscmp(i32* %70, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str, i64 0, i64 0)) #11
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = call i32 @wcscmp(i32* %70, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.1, i64 0, i64 0)) #11
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73, %68
  store i32 0, i32* %70, align 4
  br label %77

77:                                               ; preds = %76, %73
  call void @_ZN10StringList9AddStringEPKw(%class.StringList* %12, i32* nonnull %58) #9
  %78 = load i32, i32* %60, align 4
  %79 = call zeroext i1 @_Z10IsDriveDivi(i32 %78) #9
  %80 = zext i1 %79 to i32
  %81 = add i32 %20, %80
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9, i64 %82
  store i32 0, i32* %83, align 4
  br i1 %79, label %85, label %84

84:                                               ; preds = %77
  call void @_Z11AddEndSlashPwm(i32* %15, i64 2048) #9
  call void @_Z8wcsncatzPwPKwm(i32* %15, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str, i64 0, i64 0), i64 2048) #9
  br label %85

85:                                               ; preds = %84, %77
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %57) #9
  br label %86

86:                                               ; preds = %54, %85, %25, %10, %6
  %87 = phi i1 [ true, %6 ], [ false, %10 ], [ %55, %54 ], [ true, %85 ], [ true, %25 ]
  ret i1 %87
}

declare zeroext i1 @_Z10IsDriveDivi(i32) local_unnamed_addr #1

declare void @_Z11AddEndSlashPwm(i32*, i64) local_unnamed_addr #1

declare zeroext i1 @_Z13IsDriveLetterPKw(i32*) local_unnamed_addr #1

declare zeroext i1 @_Z10IsWildcardPKw(i32*) local_unnamed_addr #1

declare zeroext i1 @_ZN8FindFile8FastFindEPKwP8FindDatab(i32*, %struct.FindData*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_Z7SetNamePwPKwm(i32*, i32*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN11CommandData9ExclCheckEPKwbbb(%class.CommandData*, i32*, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN12ErrorHandler12OpenErrorMsgEPKwS1_(%class.ErrorHandler*, i32*, i32*) local_unnamed_addr #1

declare void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8ScanTree9ScanErrorERb(%class.ScanTree*, i8* nocapture dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.uiMsgStore, align 8
  %4 = alloca [2048 x i32], align 16
  %5 = load i8, i8* %1, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %55, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 19
  %9 = load %class.CommandData*, %class.CommandData** %8, align 8
  %10 = icmp eq %class.CommandData* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9, i64 0
  %13 = tail call zeroext i1 @_ZN11CommandData9ExclCheckEPKwbbb(%class.CommandData* nonnull %9, i32* %12, i1 zeroext false, i1 zeroext true, i1 zeroext true) #9
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  store i8 0, i8* %1, align 1
  br label %55

15:                                               ; preds = %11
  %16 = load i8, i8* %1, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %55, label %18

18:                                               ; preds = %7, %15
  %19 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 13
  %20 = load %class.StringList*, %class.StringList** %19, align 8
  %21 = icmp eq %class.StringList* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9, i64 0
  tail call void @_ZN10StringList9AddStringEPKw(%class.StringList* nonnull %20, i32* %23) #9
  br label %24

24:                                               ; preds = %18, %22
  %25 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 14
  %26 = load %class.Array.0*, %class.Array.0** %25, align 8
  %27 = icmp eq %class.Array.0* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 17
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  tail call void @_ZN5ArrayIjE3AddEm(%class.Array.0* nonnull %26, i64 1) #9
  %32 = getelementptr inbounds %class.Array.0, %class.Array.0* %26, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, -1
  %35 = getelementptr inbounds %class.Array.0, %class.Array.0* %26, i64 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = getelementptr inbounds i32, i32* %36, i64 %34
  store i32 %31, i32* %37, align 4
  br label %38

38:                                               ; preds = %24, %28
  %39 = bitcast [2048 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %39) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %39, i8 -86, i64 8192, i1 false)
  %40 = getelementptr inbounds %class.ScanTree, %class.ScanTree* %0, i64 0, i32 9, i64 0
  %41 = getelementptr inbounds [2048 x i32], [2048 x i32]* %4, i64 0, i64 0
  call void @_Z17ConvertNameToFullPKwPwm(i32* %40, i32* nonnull %41, i64 2048) #9
  %42 = bitcast %class.uiMsgStore* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %42) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 112, i1 false) #9
  %43 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 0
  %44 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 1
  %45 = bitcast i32** %44 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.3, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.3, i64 0, i64 0)>, <2 x i32*>* %45, align 8
  %46 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 3
  %47 = bitcast i32** %46 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.3, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.3, i64 0, i64 0)>, <2 x i32*>* %47, align 8
  %48 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 5
  %49 = bitcast i32** %48 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.3, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.3, i64 0, i64 0)>, <2 x i32*>* %49, align 8
  %50 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.3, i64 0, i64 0), i32** %50, align 8
  %51 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 1, i64 0
  %52 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 4
  %53 = bitcast i32* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 40, i1 false) #9
  store i32 87, i32* %52, align 8
  %54 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 2
  store i32 1, i32* %54, align 8
  store i32* %41, i32** %43, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %42) #9
  call void @_ZN12ErrorHandler9SysErrMsgEv(%class.ErrorHandler* nonnull @ErrHandler) #9
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %39) #9
  br label %55

55:                                               ; preds = %14, %2, %15, %38
  ret void
}

; Function Attrs: nounwind readonly
declare i32* @wcsrchr(i32*, i32 signext) local_unnamed_addr #5

declare zeroext i1 @_ZN11CommandData13ExclDirByAttrEj(%class.CommandData*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @wcslen(i32* nocapture) local_unnamed_addr #7

declare zeroext i1 @_Z7CmpNamePKwS0_i(i32*, i32*, i32) local_unnamed_addr #1

declare void @_Z17ConvertNameToFullPKwPwm(i32*, i32*, i64) local_unnamed_addr #1

declare void @_ZN12ErrorHandler9SysErrMsgEv(%class.ErrorHandler*) local_unnamed_addr #1

declare void @_Z9cleandataPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5ArrayIjE3AddEm(%class.Array.0*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %5, %7
  br i1 %8, label %9, label %56

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp ne i64 %11, 0
  %13 = icmp ugt i64 %5, %11
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  tail call void (%class.ErrorHandler*, i32*, ...) @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler* nonnull @ErrHandler, i32* getelementptr inbounds ([44 x i32], [44 x i32]* @.str.4, i64 0, i64 0), i64 %11) #9
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #9
  %16 = load i64, i64* %6, align 8
  %17 = load i64, i64* %3, align 8
  br label %18

18:                                               ; preds = %9, %15
  %19 = phi i64 [ %5, %9 ], [ %17, %15 ]
  %20 = phi i64 [ %7, %9 ], [ %16, %15 ]
  %21 = lshr i64 %20, 2
  %22 = add i64 %20, 32
  %23 = add i64 %22, %21
  %24 = icmp ugt i64 %19, %23
  %25 = select i1 %24, i64 %19, i64 %23
  %26 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %18
  %30 = shl i64 %25, 2
  %31 = tail call noalias i8* @malloc(i64 %30) #9
  %32 = bitcast i8* %31 to i32*
  %33 = icmp eq i8* %31, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #9
  br label %35

35:                                               ; preds = %34, %29
  %36 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = icmp eq i32* %37, null
  %39 = bitcast i32* %37 to i8*
  br i1 %38, label %53, label %40

40:                                               ; preds = %35
  %41 = load i64, i64* %6, align 8
  %42 = shl i64 %41, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* nonnull align 4 %39, i64 %42, i1 false)
  %43 = bitcast %class.Array.0* %0 to i8**
  tail call void @_Z9cleandataPvm(i8* nonnull %39, i64 %42) #9
  %44 = load i8*, i8** %43, align 8
  tail call void @free(i8* %44) #9
  br label %53

45:                                               ; preds = %18
  %46 = bitcast %class.Array.0* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = shl i64 %25, 2
  %49 = tail call i8* @realloc(i8* %47, i64 %48) #9
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i8* %49, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %45
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #9
  br label %53

53:                                               ; preds = %35, %45, %52, %40
  %54 = phi i32* [ %32, %40 ], [ %32, %35 ], [ null, %52 ], [ %50, %45 ]
  %55 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 0
  store i32* %54, i32** %55, align 8
  store i64 %25, i64* %6, align 8
  br label %56

56:                                               ; preds = %53, %2
  ret void
}

declare void @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler*, i32*, ...) local_unnamed_addr #1

declare void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
