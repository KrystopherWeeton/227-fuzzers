; ModuleID = '../../base/profiler/thread_delegate_posix.cc'
source_filename = "../../base/profiler/thread_delegate_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::ThreadDelegatePosix" = type { %"class.base::ThreadDelegate", i32, i64 }
%"class.base::ThreadDelegate" = type { i32 (...)** }
%union.pthread_attr_t = type { i64, [48 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64**, i64**, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64** }
%struct.mcontext_t = type { [23 x i64], %struct._libc_fpstate*, [8 x i64] }
%struct._libc_fpstate = type { i16, i16, i16, i16, i64, i64, i32, i32, [8 x %struct._libc_fpxreg], [16 x %struct._libc_xmmreg], [24 x i32] }
%struct._libc_fpxreg = type { [4 x i16], i16, [3 x i16] }
%struct._libc_xmmreg = type { [4 x i32] }

@_ZTVN4base19ThreadDelegatePosixE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ThreadDelegatePosix"*)* @_ZN4base19ThreadDelegatePosixD2Ev to i8*), i8* bitcast (void (%"class.base::ThreadDelegatePosix"*)* @_ZN4base19ThreadDelegatePosixD0Ev to i8*), i8* bitcast (i32 (%"class.base::ThreadDelegatePosix"*)* @_ZNK4base19ThreadDelegatePosix11GetThreadIdEv to i8*), i8* bitcast (i64 (%"class.base::ThreadDelegatePosix"*)* @_ZNK4base19ThreadDelegatePosix19GetStackBaseAddressEv to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %"class.base::ThreadDelegatePosix"*, %struct.mcontext_t*)* @_ZN4base19ThreadDelegatePosix21GetRegistersToRewriteEP10mcontext_t to i8*)] }, align 8

@_ZN4base19ThreadDelegatePosixD1Ev = hidden unnamed_addr alias void (%"class.base::ThreadDelegatePosix"*), void (%"class.base::ThreadDelegatePosix"*)* @_ZN4base19ThreadDelegatePosixD2Ev
@_ZN4base19ThreadDelegatePosixC1Eim = hidden unnamed_addr alias void (%"class.base::ThreadDelegatePosix"*, i32, i64), void (%"class.base::ThreadDelegatePosix"*, i32, i64)* @_ZN4base19ThreadDelegatePosixC2Eim

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::ThreadDelegatePosix"* @_ZN4base19ThreadDelegatePosix6CreateENS_27SamplingProfilerThreadTokenE(i32, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %union.pthread_attr_t, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = bitcast %union.pthread_attr_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false) #8
  %7 = call i32 @pthread_getattr_np(i64 %1, %union.pthread_attr_t* nonnull %3) #8
  %8 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %9 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  store i64 -6148914691236517206, i64* %5, align 8
  %10 = call i32 @pthread_attr_getstack(%union.pthread_attr_t* nonnull %3, i8** nonnull %4, i64* nonnull %5) #8
  %11 = call i32 @pthread_attr_destroy(%union.pthread_attr_t* nonnull %3) #8
  %12 = bitcast i8** %4 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = load i64, i64* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #8
  %15 = add i64 %14, %13
  %16 = call i8* @_Znwm(i64 24) #9
  %17 = bitcast i8* %16 to %"class.base::ThreadDelegatePosix"*
  %18 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base19ThreadDelegatePosixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %16, i64 8
  %20 = bitcast i8* %19 to i32*
  store i32 %0, i32* %20, align 8
  %21 = getelementptr inbounds i8, i8* %16, i64 16
  %22 = bitcast i8* %21 to i64*
  store i64 %15, i64* %22, align 8
  ret %"class.base::ThreadDelegatePosix"* %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base19ThreadDelegatePosixD2Ev(%"class.base::ThreadDelegatePosix"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19ThreadDelegatePosixD0Ev(%"class.base::ThreadDelegatePosix"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.base::ThreadDelegatePosix"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4base19ThreadDelegatePosix11GetThreadIdEv(%"class.base::ThreadDelegatePosix"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::ThreadDelegatePosix", %"class.base::ThreadDelegatePosix"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4base19ThreadDelegatePosix19GetStackBaseAddressEv(%"class.base::ThreadDelegatePosix"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::ThreadDelegatePosix", %"class.base::ThreadDelegatePosix"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19ThreadDelegatePosix21GetRegistersToRewriteEP10mcontext_t(%"class.std::__1::vector"* noalias nocapture sret, %"class.base::ThreadDelegatePosix"* nocapture readnone, %struct.mcontext_t*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.mcontext_t, %struct.mcontext_t* %2, i64 0, i32 0, i64 10
  %5 = getelementptr inbounds %struct.mcontext_t, %struct.mcontext_t* %2, i64 0, i32 0, i64 11
  %6 = getelementptr inbounds %struct.mcontext_t, %struct.mcontext_t* %2, i64 0, i32 0, i64 4
  %7 = getelementptr inbounds %struct.mcontext_t, %struct.mcontext_t* %2, i64 0, i32 0, i64 5
  %8 = getelementptr inbounds %struct.mcontext_t, %struct.mcontext_t* %2, i64 0, i32 0, i64 6
  %9 = getelementptr inbounds %struct.mcontext_t, %struct.mcontext_t* %2, i64 0, i32 0, i64 7
  %10 = getelementptr inbounds %struct.mcontext_t, %struct.mcontext_t* %2, i64 0, i32 0, i64 15
  %11 = tail call i8* @_Znwm(i64 56) #9
  %12 = bitcast i8* %11 to i64**
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %11, i8** %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 56
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast i64*** %16 to i8**
  store i8* %15, i8** %17, align 8
  %18 = bitcast i64*** %13 to i64*
  store i64* %4, i64** %12, align 8
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to i64**
  store i64* %5, i64** %20, align 8
  %21 = getelementptr inbounds i8, i8* %11, i64 16
  %22 = bitcast i8* %21 to i64**
  store i64* %6, i64** %22, align 8
  %23 = getelementptr inbounds i8, i8* %11, i64 24
  %24 = bitcast i8* %23 to i64**
  store i64* %7, i64** %24, align 8
  %25 = getelementptr inbounds i8, i8* %11, i64 32
  %26 = bitcast i8* %25 to i64**
  store i64* %8, i64** %26, align 8
  %27 = getelementptr inbounds i8, i8* %11, i64 40
  %28 = bitcast i8* %27 to i64**
  store i64* %9, i64** %28, align 8
  %29 = getelementptr inbounds i8, i8* %11, i64 48
  %30 = bitcast i8* %29 to i64**
  store i64* %10, i64** %30, align 8
  %31 = ptrtoint i8* %15 to i64
  store i64 %31, i64* %18, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base19ThreadDelegatePosixC2Eim(%"class.base::ThreadDelegatePosix"* nocapture, i32, i64) unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.base::ThreadDelegatePosix", %"class.base::ThreadDelegatePosix"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base19ThreadDelegatePosixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.base::ThreadDelegatePosix", %"class.base::ThreadDelegatePosix"* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.base::ThreadDelegatePosix", %"class.base::ThreadDelegatePosix"* %0, i64 0, i32 2
  store i64 %2, i64* %6, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare i32 @pthread_getattr_np(i64, %union.pthread_attr_t*) local_unnamed_addr #7

; Function Attrs: nounwind
declare i32 @pthread_attr_getstack(%union.pthread_attr_t*, i8**, i64*) local_unnamed_addr #7

; Function Attrs: nounwind
declare i32 @pthread_attr_destroy(%union.pthread_attr_t*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
