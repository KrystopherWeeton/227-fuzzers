; ModuleID = '../../crypto/symmetric_key.cc'
source_filename = "../../crypto/symmetric_key.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.crypto::SymmetricKey" = type { i32 (...)**, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.crypto::OpenSSLErrStackTracer" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

@_ZTVN6crypto12SymmetricKeyE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.crypto::SymmetricKey"*)* @_ZN6crypto12SymmetricKeyD2Ev to i8*), i8* bitcast (void (%"class.crypto::SymmetricKey"*)* @_ZN6crypto12SymmetricKeyD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"GenerateRandomKey\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"../../crypto/symmetric_key.cc\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"DeriveKeyFromPasswordUsingPbkdf2\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"DeriveKeyFromPasswordUsingScrypt\00", align 1

@_ZN6crypto12SymmetricKeyD1Ev = hidden unnamed_addr alias void (%"class.crypto::SymmetricKey"*), void (%"class.crypto::SymmetricKey"*)* @_ZN6crypto12SymmetricKeyD2Ev
@_ZN6crypto12SymmetricKeyC1Ev = hidden unnamed_addr alias void (%"class.crypto::SymmetricKey"*), void (%"class.crypto::SymmetricKey"*)* @_ZN6crypto12SymmetricKeyC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6crypto12SymmetricKeyD2Ev(%"class.crypto::SymmetricKey"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crypto::SymmetricKey", %"class.crypto::SymmetricKey"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6crypto12SymmetricKeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crypto::SymmetricKey", %"class.crypto::SymmetricKey"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.crypto::SymmetricKey", %"class.crypto::SymmetricKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %16

13:                                               ; preds = %1
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %15 = zext i8 %6 to i64
  br label %16

16:                                               ; preds = %8, %13
  %17 = phi i8* [ %10, %8 ], [ %14, %13 ]
  %18 = phi i64 [ %12, %8 ], [ %15, %13 ]
  %19 = icmp sgt i64 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  call void @llvm.memset.p0i8.i64(i8* align 1 %17, i8 0, i64 %18, i1 false)
  %21 = load i8, i8* %5, align 1
  br label %22

22:                                               ; preds = %20, %16
  %23 = phi i8 [ %21, %20 ], [ %6, %16 ]
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #5
  br label %28

28:                                               ; preds = %22, %25
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6crypto12SymmetricKeyD0Ev(%"class.crypto::SymmetricKey"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crypto::SymmetricKey", %"class.crypto::SymmetricKey"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6crypto12SymmetricKeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crypto::SymmetricKey", %"class.crypto::SymmetricKey"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.crypto::SymmetricKey", %"class.crypto::SymmetricKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %16

13:                                               ; preds = %1
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %15 = zext i8 %6 to i64
  br label %16

16:                                               ; preds = %13, %8
  %17 = phi i8* [ %10, %8 ], [ %14, %13 ]
  %18 = phi i64 [ %12, %8 ], [ %15, %13 ]
  %19 = icmp sgt i64 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %17, i8 0, i64 %18, i1 false) #6
  %21 = load i8, i8* %5, align 1
  br label %22

22:                                               ; preds = %20, %16
  %23 = phi i8 [ %21, %20 ], [ %6, %16 ]
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #5
  br label %28

28:                                               ; preds = %22, %25
  %29 = bitcast %"class.crypto::SymmetricKey"* %0 to i8*
  tail call void @_ZdlPv(i8* %29) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.crypto::SymmetricKey"* @_ZN6crypto12SymmetricKey17GenerateRandomKeyENS0_9AlgorithmEm(i32, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %4 = alloca %"class.base::Location", align 8
  switch i64 %1, label %31 [
    i64 256, label %5
    i64 128, label %5
  ]

5:                                                ; preds = %2, %2
  %6 = lshr i64 %1, 3
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %31, label %8

8:                                                ; preds = %5
  %9 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 64) #6
  %11 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %3, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %11, %"class.base::Location"* nonnull dereferenceable(32) %4) #6
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #6
  %12 = call i8* @_Znwm(i64 32) #5
  %13 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6crypto12SymmetricKeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to %"class.std::__1::basic_string"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #6
  %16 = ptrtoint i8* %12 to i64
  %17 = add nuw nsw i64 %6, 1
  %18 = call i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"* %15, i64 %17) #6
  %19 = shl i64 %6, 32
  %20 = ashr exact i64 %19, 32
  %21 = call i32 @RAND_bytes(i8* %18, i64 %20) #6
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %29, label %23

23:                                               ; preds = %8
  %24 = bitcast i8* %12 to %"class.crypto::SymmetricKey"*
  %25 = bitcast i8* %12 to void (%"class.crypto::SymmetricKey"*)***
  %26 = load void (%"class.crypto::SymmetricKey"*)**, void (%"class.crypto::SymmetricKey"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.crypto::SymmetricKey"*)*, void (%"class.crypto::SymmetricKey"*)** %26, i64 1
  %28 = load void (%"class.crypto::SymmetricKey"*)*, void (%"class.crypto::SymmetricKey"*)** %27, align 8
  call void %28(%"class.crypto::SymmetricKey"* nonnull %24) #6
  br label %29

29:                                               ; preds = %8, %23
  %30 = phi i64 [ 0, %23 ], [ %16, %8 ]
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %11) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #6
  br label %31

31:                                               ; preds = %5, %2, %29
  %32 = phi i64 [ %30, %29 ], [ 0, %2 ], [ 0, %5 ]
  %33 = inttoptr i64 %32 to %"class.crypto::SymmetricKey"*
  ret %"class.crypto::SymmetricKey"* %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #3

declare i32 @RAND_bytes(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.crypto::SymmetricKey"* @_ZN6crypto12SymmetricKey32DeriveKeyFromPasswordUsingPbkdf2ENS0_9AlgorithmERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_mm(i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %7 = alloca %"class.base::Location", align 8
  switch i32 %0, label %61 [
    i32 0, label %13
    i32 1, label %8
  ]

8:                                                ; preds = %5
  %9 = and i64 %4, 7
  %10 = icmp eq i64 %9, 0
  %11 = icmp ne i64 %4, 0
  %12 = and i1 %11, %10
  br i1 %12, label %14, label %61

13:                                               ; preds = %5
  switch i64 %4, label %61 [
    i64 256, label %14
    i64 128, label %14
  ]

14:                                               ; preds = %13, %13, %8
  %15 = lshr i64 %4, 3
  %16 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  %17 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 85) #6
  %18 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %6, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %18, %"class.base::Location"* nonnull dereferenceable(32) %7) #6
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #6
  %19 = call i8* @_Znwm(i64 32) #5
  %20 = bitcast i8* %19 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6crypto12SymmetricKeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 8
  %22 = bitcast i8* %21 to %"class.std::__1::basic_string"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #6
  %23 = ptrtoint i8* %19 to i64
  %24 = add nuw nsw i64 %15, 1
  %25 = call i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"* %22, i64 %24) #6
  %26 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %35 = zext i8 %28 to i64
  %36 = select i1 %29, i8* %31, i8* %34
  %37 = select i1 %29, i64 %33, i64 %35
  %38 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %47 = zext i8 %40 to i64
  %48 = select i1 %41, i8* %43, i8* %46
  %49 = select i1 %41, i64 %45, i64 %47
  %50 = trunc i64 %3 to i32
  %51 = call i32 @PKCS5_PBKDF2_HMAC_SHA1(i8* %36, i64 %37, i8* %48, i64 %49, i32 %50, i64 %15, i8* %25) #6
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %59, label %53

53:                                               ; preds = %14
  %54 = bitcast i8* %19 to %"class.crypto::SymmetricKey"*
  %55 = bitcast i8* %19 to void (%"class.crypto::SymmetricKey"*)***
  %56 = load void (%"class.crypto::SymmetricKey"*)**, void (%"class.crypto::SymmetricKey"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.crypto::SymmetricKey"*)*, void (%"class.crypto::SymmetricKey"*)** %56, i64 1
  %58 = load void (%"class.crypto::SymmetricKey"*)*, void (%"class.crypto::SymmetricKey"*)** %57, align 8
  call void %58(%"class.crypto::SymmetricKey"* nonnull %54) #6
  br label %59

59:                                               ; preds = %14, %53
  %60 = phi i64 [ 0, %53 ], [ %23, %14 ]
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %18) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  br label %61

61:                                               ; preds = %13, %5, %8, %59
  %62 = phi i64 [ %60, %59 ], [ 0, %8 ], [ 0, %13 ], [ 0, %5 ]
  %63 = inttoptr i64 %62 to %"class.crypto::SymmetricKey"*
  ret %"class.crypto::SymmetricKey"* %63
}

declare i32 @PKCS5_PBKDF2_HMAC_SHA1(i8*, i64, i8*, i64, i32, i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.crypto::SymmetricKey"* @_ZN6crypto12SymmetricKey32DeriveKeyFromPasswordUsingScryptENS0_9AlgorithmERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_mmmmm(i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %10 = alloca %"class.base::Location", align 8
  switch i32 %0, label %63 [
    i32 0, label %16
    i32 1, label %11
  ]

11:                                               ; preds = %8
  %12 = and i64 %7, 7
  %13 = icmp eq i64 %12, 0
  %14 = icmp ne i64 %7, 0
  %15 = and i1 %14, %13
  br i1 %15, label %17, label %63

16:                                               ; preds = %8
  switch i64 %7, label %63 [
    i64 256, label %17
    i64 128, label %17
  ]

17:                                               ; preds = %16, %16, %11
  %18 = lshr i64 %7, 3
  %19 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  %20 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 113) #6
  %21 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %9, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %21, %"class.base::Location"* nonnull dereferenceable(32) %10) #6
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #6
  %22 = call i8* @_Znwm(i64 32) #5
  %23 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6crypto12SymmetricKeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = bitcast i8* %24 to %"class.std::__1::basic_string"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #6
  %26 = ptrtoint i8* %22 to i64
  %27 = add nuw nsw i64 %18, 1
  %28 = call i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"* %25, i64 %27) #6
  %29 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %38 = zext i8 %31 to i64
  %39 = select i1 %32, i8* %34, i8* %37
  %40 = select i1 %32, i64 %36, i64 %38
  %41 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %50 = zext i8 %43 to i64
  %51 = select i1 %44, i8* %46, i8* %49
  %52 = select i1 %44, i64 %48, i64 %50
  %53 = call i32 @EVP_PBE_scrypt(i8* %39, i64 %40, i8* %51, i64 %52, i64 %3, i64 %4, i64 %5, i64 %6, i8* %28, i64 %18) #6
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %61, label %55

55:                                               ; preds = %17
  %56 = bitcast i8* %22 to %"class.crypto::SymmetricKey"*
  %57 = bitcast i8* %22 to void (%"class.crypto::SymmetricKey"*)***
  %58 = load void (%"class.crypto::SymmetricKey"*)**, void (%"class.crypto::SymmetricKey"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.crypto::SymmetricKey"*)*, void (%"class.crypto::SymmetricKey"*)** %58, i64 1
  %60 = load void (%"class.crypto::SymmetricKey"*)*, void (%"class.crypto::SymmetricKey"*)** %59, align 8
  call void %60(%"class.crypto::SymmetricKey"* nonnull %56) #6
  br label %61

61:                                               ; preds = %17, %55
  %62 = phi i64 [ 0, %55 ], [ %26, %17 ]
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %21) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #6
  br label %63

63:                                               ; preds = %16, %8, %11, %61
  %64 = phi i64 [ %62, %61 ], [ 0, %11 ], [ 0, %16 ], [ 0, %8 ]
  %65 = inttoptr i64 %64 to %"class.crypto::SymmetricKey"*
  ret %"class.crypto::SymmetricKey"* %65
}

declare i32 @EVP_PBE_scrypt(i8*, i64, i8*, i64, i64, i64, i64, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.crypto::SymmetricKey"* @_ZN6crypto12SymmetricKey6ImportENS0_9AlgorithmERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %0, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  switch i64 %12, label %33 [
    i64 16, label %13
    i64 32, label %13
  ]

13:                                               ; preds = %4, %4, %2
  %14 = tail call i8* @_Znwm(i64 32) #5
  %15 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6crypto12SymmetricKeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = bitcast i8* %16 to %"class.std::__1::basic_string"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #6
  %18 = ptrtoint i8* %14 to i64
  %19 = icmp eq %"class.std::__1::basic_string"* %17, %1
  br i1 %19, label %33, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %26, i64 24, i1 false) #6
  br label %33

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %17, i8* %29, i64 %31) #6
  br label %33

33:                                               ; preds = %4, %13, %25, %27
  %34 = phi i64 [ %18, %27 ], [ %18, %25 ], [ %18, %13 ], [ 0, %4 ]
  %35 = inttoptr i64 %34 to %"class.crypto::SymmetricKey"*
  ret %"class.crypto::SymmetricKey"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6crypto12SymmetricKeyC2Ev(%"class.crypto::SymmetricKey"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crypto::SymmetricKey", %"class.crypto::SymmetricKey"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6crypto12SymmetricKeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crypto::SymmetricKey", %"class.crypto::SymmetricKey"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #6
  ret void
}

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #3

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #3

declare void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* dereferenceable(32)) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
