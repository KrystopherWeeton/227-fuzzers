; ModuleID = '../../pdf/pdfium/pdfium_print.cc'
source_filename = "../../pdf/pdfium/pdfium_print.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.chrome_pdf::PDFiumPrint" = type { %"class.chrome_pdf::PDFiumEngine"* }
%"class.chrome_pdf::PDFiumEngine" = type { %"class.chrome_pdf::PDFEngine", %"class.chrome_pdf::DocumentLoader::Client", %struct._IFSDK_PAUSE, %"class.chrome_pdf::PDFEngine::Client"*, %"class.chrome_pdf::DocumentLayout", %"class.chrome_pdf::DocumentLayout::Options", %"class.gfx::Point", %"class.gfx::Vector2d", %"class.gfx::Size", double, %"class.std::__1::unique_ptr", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, %"class.chrome_pdf::PDFiumFormFiller", %"class.std::__1::unique_ptr.17", i8, %"class.std::__1::vector.23", %"class.std::__1::vector.31", %"class.std::__1::vector.31", i8, %"class.std::__1::vector.31", %"class.std::__1::vector.38", i8, [7 x i8], %"class.chrome_pdf::PDFiumEngine::MouseDownState", %"class.std::__1::basic_string", i8, i8, i8, i8, %"class.gfx::Point", %"class.std::__1::basic_string", %"class.std::__1::vector.38", i8, i32, i32, i32, %"class.absl::optional.118", %"class.absl::optional.118", %"class.std::__1::unique_ptr.123", %"class.gfx::Size", %"class.base::OneShotTimer", i8, i8, i32, i32, i32, i32, i32, %"class.absl::optional.138", i8, %"class.std::__1::vector.50", i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.143", %"class.base::Time", %"class.base::TimeDelta", %"class.std::__1::unique_ptr.157", %"class.std::__1::vector.163", %"struct.chrome_pdf::DocumentMetadata", i8, i32, %"class.gfx::Point", i8, i8, %"class.chrome_pdf::PDFiumPrint", %"class.base::WeakPtrFactory.179", %"class.base::WeakPtrFactory.179" }
%"class.chrome_pdf::PDFEngine" = type { i32 (...)** }
%"class.chrome_pdf::DocumentLoader::Client" = type { i32 (...)** }
%struct._IFSDK_PAUSE = type { i32, i32 (%struct._IFSDK_PAUSE*)*, i8* }
%"class.chrome_pdf::PDFEngine::Client" = type { i32 (...)** }
%"class.chrome_pdf::DocumentLayout" = type { %"class.chrome_pdf::DocumentLayout::Options", i8, %"class.gfx::Size", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.chrome_pdf::DocumentLayout::PageLayout"*, %"struct.chrome_pdf::DocumentLayout::PageLayout"*, %"class.std::__1::__compressed_pair" }
%"struct.chrome_pdf::DocumentLayout::PageLayout" = type { %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.chrome_pdf::DocumentLayout::PageLayout"* }
%"class.chrome_pdf::DocumentLayout::Options" = type { i8, i32 }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.chrome_pdf::DocumentLoader"* }
%"class.chrome_pdf::DocumentLoader" = type { i32 (...)** }
%"class.chrome_pdf::PDFiumFormFiller" = type { %struct._FPDF_FORMFILLINFO, %struct._IPDF_JsPlatform, %"class.chrome_pdf::PDFiumEngine"*, i32, %"class.std::__1::map" }
%struct._FPDF_FORMFILLINFO = type { i32, void (%struct._FPDF_FORMFILLINFO*)*, void (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_page_t__*, double, double, double, double)*, void (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_page_t__*, double, double, double, double)*, void (%struct._FPDF_FORMFILLINFO*, i32)*, i32 (%struct._FPDF_FORMFILLINFO*, i32, void (i32)*)*, void (%struct._FPDF_FORMFILLINFO*, i32)*, { i64, i64 } (%struct._FPDF_FORMFILLINFO*)*, void (%struct._FPDF_FORMFILLINFO*)*, %struct.fpdf_page_t__* (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_document_t__*, i32)*, %struct.fpdf_page_t__* (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_document_t__*)*, i32 (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_page_t__*)*, void (%struct._FPDF_FORMFILLINFO*, i8*)*, void (%struct._FPDF_FORMFILLINFO*, i16*, i64, i32)*, void (%struct._FPDF_FORMFILLINFO*, i8*)*, void (%struct._FPDF_FORMFILLINFO*, i32, i32, float*, i32)*, %struct._IPDF_JsPlatform*, i32, void (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_page_t__*, i32, double, double, double, double)*, i32 (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_document_t__*)*, void (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_document_t__*, i32)*, void (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_document_t__*, i16*)*, void (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_page_t__*, double*, double*, double*, double*)*, void (%struct._FPDF_FORMFILLINFO*, i32, i64)*, i32 (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_page_t__*, %struct.fpdf_widget_t__*, i32, float, float)*, %struct.FPDF_FILEHANDLER_* (%struct._FPDF_FORMFILLINFO*, i32, i16*, i8*)*, void (%struct._FPDF_FORMFILLINFO*, %struct.FPDF_FILEHANDLER_*, i16*, i16*, i16*, i16*, i16*)*, void (%struct._FPDF_FORMFILLINFO*, %struct.FPDF_FILEHANDLER_*, i32, i16*)*, i32 (%struct._FPDF_FORMFILLINFO*, i8*, i32)*, i32 (%struct._FPDF_FORMFILLINFO*, i8*, i32)*, %struct.FPDF_FILEHANDLER_* (%struct._FPDF_FORMFILLINFO*, i16*)*, i32 (%struct._FPDF_FORMFILLINFO*, i16*, i16*, i16*, i16*, i16*, %struct.FPDF_BSTR_*)*, i32 (%struct._FPDF_FORMFILLINFO*, i16*, i16*, i16*)*, void (%struct._FPDF_FORMFILLINFO*, %struct.fpdf_annotation_t__*, i32)*, void (%struct._FPDF_FORMFILLINFO*, i8*, i32)* }
%struct.fpdf_page_t__ = type opaque
%struct.fpdf_document_t__ = type opaque
%struct.fpdf_widget_t__ = type opaque
%struct.FPDF_FILEHANDLER_ = type { i8*, void (i8*)*, i64 (i8*)*, i32 (i8*, i64, i8*, i64)*, i32 (i8*, i64, i8*, i64)*, i32 (i8*)*, i32 (i8*, i64)* }
%struct.FPDF_BSTR_ = type { i8*, i32 }
%struct.fpdf_annotation_t__ = type opaque
%struct._IPDF_JsPlatform = type { i32, i32 (%struct._IPDF_JsPlatform*, i16*, i16*, i32, i32)*, void (%struct._IPDF_JsPlatform*, i32)*, i32 (%struct._IPDF_JsPlatform*, i16*, i16*, i16*, i16*, i32, i8*, i32)*, i32 (%struct._IPDF_JsPlatform*, i8*, i32)*, void (%struct._IPDF_JsPlatform*, i8*, i32, i32, i16*, i16*, i16*, i16*, i16*)*, void (%struct._IPDF_JsPlatform*, i32, i32, i32, i32, i32, i32, i32, i32)*, void (%struct._IPDF_JsPlatform*, i8*, i32, i16*)*, void (%struct._IPDF_JsPlatform*, i32)*, i32 (%struct._IPDF_JsPlatform*, i8*, i32)*, i8*, i8*, i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.chrome_pdf::PDFiumDocument"* }
%"class.chrome_pdf::PDFiumDocument" = type opaque
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::unique_ptr.25" = type opaque
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::unique_ptr.25"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { i32*, i32*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i32* }
%"class.chrome_pdf::PDFiumEngine::MouseDownState" = type { i32, [4 x i8], %"struct.chrome_pdf::PDFiumPage::LinkTarget" }
%"struct.chrome_pdf::PDFiumPage::LinkTarget" = type <{ %"class.std::__1::basic_string", i32, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.57 }
%union.anon.57 = type { float }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.chrome_pdf::PDFiumRange"*, %"class.chrome_pdf::PDFiumRange"*, %"class.std::__1::__compressed_pair.113" }
%"class.chrome_pdf::PDFiumRange" = type { %"class.chrome_pdf::PDFiumPage"*, i32, i32, %"class.std::__1::vector.50", %"class.gfx::Point", double }
%"class.chrome_pdf::PDFiumPage" = type <{ %"class.chrome_pdf::PDFiumEngine"*, %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.44", i32, i32, %"class.gfx::Rect", i8, [7 x i8], %"class.std::__1::vector.48", i8, [7 x i8], %"class.std::__1::vector.63", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.84", %"class.std::__1::vector.98", i8, i8, [6 x i8], %"class.std::__1::set", %"class.base::OnceCallback", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %struct.fpdf_page_t__* }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %struct.fpdf_textpage_t__* }
%struct.fpdf_textpage_t__ = type opaque
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"struct.chrome_pdf::PDFiumPage::Link"*, %"struct.chrome_pdf::PDFiumPage::Link"*, %"class.std::__1::__compressed_pair.58" }
%"struct.chrome_pdf::PDFiumPage::Link" = type { i32, i32, %"class.std::__1::vector.50", %"struct.chrome_pdf::PDFiumPage::LinkTarget" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.chrome_pdf::PDFiumPage::Link"* }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"struct.chrome_pdf::PDFiumPage::Image"*, %"struct.chrome_pdf::PDFiumPage::Image"*, %"class.std::__1::__compressed_pair.65" }
%"struct.chrome_pdf::PDFiumPage::Image" = type { %"class.gfx::Rect", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.chrome_pdf::PDFiumPage::Image"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.chrome_pdf::PDFiumPage::Highlight"*, %"struct.chrome_pdf::PDFiumPage::Highlight"*, %"class.std::__1::__compressed_pair.72" }
%"struct.chrome_pdf::PDFiumPage::Highlight" = type { i32, i32, %"class.gfx::Rect", i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.chrome_pdf::PDFiumPage::Highlight"* }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.chrome_pdf::PDFiumPage::TextField"*, %"struct.chrome_pdf::PDFiumPage::TextField"*, %"class.std::__1::__compressed_pair.79" }
%"struct.chrome_pdf::PDFiumPage::TextField" = type { %"struct.chrome_pdf::PDFiumPage::FormField.base", %"class.std::__1::basic_string" }
%"struct.chrome_pdf::PDFiumPage::FormField.base" = type <{ %"class.gfx::Rect", %"class.std::__1::basic_string", i32 }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.chrome_pdf::PDFiumPage::TextField"* }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"struct.chrome_pdf::PDFiumPage::ChoiceField"*, %"struct.chrome_pdf::PDFiumPage::ChoiceField"*, %"class.std::__1::__compressed_pair.93" }
%"struct.chrome_pdf::PDFiumPage::ChoiceField" = type { %"struct.chrome_pdf::PDFiumPage::FormField.base", %"class.std::__1::vector.86" }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"struct.chrome_pdf::PDFiumPage::ChoiceFieldOption"*, %"struct.chrome_pdf::PDFiumPage::ChoiceFieldOption"*, %"class.std::__1::__compressed_pair.88" }
%"struct.chrome_pdf::PDFiumPage::ChoiceFieldOption" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.chrome_pdf::PDFiumPage::ChoiceFieldOption"* }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.chrome_pdf::PDFiumPage::ChoiceField"* }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"struct.chrome_pdf::PDFiumPage::Button"*, %"struct.chrome_pdf::PDFiumPage::Button"*, %"class.std::__1::__compressed_pair.100" }
%"struct.chrome_pdf::PDFiumPage::Button" = type { %"struct.chrome_pdf::PDFiumPage::FormField.base", %"class.std::__1::basic_string", i32, i8, i32, i32 }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.chrome_pdf::PDFiumPage::Button"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.105" }
%"class.std::__1::__tree.105" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.112" }
%"struct.std::__1::__atomic_base.112" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.chrome_pdf::PDFiumRange"* }
%"class.absl::optional.118" = type { %"class.absl::optional_internal::optional_data.119" }
%"class.absl::optional_internal::optional_data.119" = type { %"class.absl::optional_internal::optional_data_base.120" }
%"class.absl::optional_internal::optional_data_base.120" = type { %"class.absl::optional_internal::optional_data_dtor_base.121" }
%"class.absl::optional_internal::optional_data_dtor_base.121" = type { i8, %union.anon.122 }
%union.anon.122 = type { i64 }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.chrome_pdf::PDFiumPermissions"* }
%"class.chrome_pdf::PDFiumPermissions" = type opaque
%"class.gfx::Size" = type { i32, i32 }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.129, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.129 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.130" }>
%"class.base::RefCountedThreadSafe.130" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.131 }
%class.scoped_refptr.131 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.132", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.132" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.133" }
%"struct.std::__1::atomic.133" = type { %"struct.std::__1::__atomic_base.134" }
%"struct.std::__1::__atomic_base.134" = type { %"struct.std::__1::__atomic_base.135" }
%"struct.std::__1::__atomic_base.135" = type { %"struct.std::__1::__cxx_atomic_impl.136" }
%"struct.std::__1::__cxx_atomic_impl.136" = type { %"struct.std::__1::__cxx_atomic_base_impl.137" }
%"struct.std::__1::__cxx_atomic_base_impl.137" = type { i8 }
%"class.absl::optional.138" = type { %"class.absl::optional_internal::optional_data.139" }
%"class.absl::optional_internal::optional_data.139" = type { %"class.absl::optional_internal::optional_data_base.140" }
%"class.absl::optional_internal::optional_data_base.140" = type { %"class.absl::optional_internal::optional_data_dtor_base.141" }
%"class.absl::optional_internal::optional_data_dtor_base.141" = type { i8, %union.anon.142 }
%union.anon.142 = type { i32 }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.gfx::Rect"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"class.chrome_pdf::PDFiumEngine::ProgressivePaint"*, %"class.chrome_pdf::PDFiumEngine::ProgressivePaint"*, %"class.std::__1::__compressed_pair.151" }
%"class.chrome_pdf::PDFiumEngine::ProgressivePaint" = type <{ i32, %"class.gfx::Rect", [4 x i8], %class.SkBitmap, %"class.std::__1::unique_ptr.147", i8, [7 x i8] }>
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.146 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.145, i32, i32 }
%class.sk_sp.145 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.133" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.146 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %struct.fpdf_bitmap_t__* }
%struct.fpdf_bitmap_t__ = type opaque
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.chrome_pdf::PDFiumEngine::ProgressivePaint"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.156" }
%"class.base::time_internal::TimeBase.156" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.chrome_pdf::draw_utils::ShadowMatrix"* }
%"class.chrome_pdf::draw_utils::ShadowMatrix" = type opaque
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"struct.chrome_pdf::DocumentAttachmentInfo"*, %"struct.chrome_pdf::DocumentAttachmentInfo"*, %"class.std::__1::__compressed_pair.174" }
%"struct.chrome_pdf::DocumentAttachmentInfo" = type <{ %"class.std::__1::basic_string.165", i32, [4 x i8], %"class.std::__1::basic_string.165", %"class.std::__1::basic_string.165", i8, [7 x i8] }>
%"class.std::__1::basic_string.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.168 }
%union.anon.168 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.chrome_pdf::DocumentAttachmentInfo"* }
%"struct.chrome_pdf::DocumentMetadata" = type { i32, i64, i64, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time" }
%"class.gfx::Point" = type { i32, i32 }
%"class.base::WeakPtrFactory.179" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%struct.PP_PrintPageNumberRange_Dev = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { i8*, i8*, %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { i8* }
%"class.chrome_pdf::PDFiumMemBufferFileWrite" = type { %struct.FPDF_FILEWRITE_, %"class.std::__1::vector.191" }
%struct.FPDF_FILEWRITE_ = type { i32, i32 (%struct.FPDF_FILEWRITE_*, i8*, i64)* }
%"class.printing::NupParameters" = type <{ i32, i32, i8, [3 x i8] }>
%"class.gfx::SizeF" = type { float, float }
%"struct.chrome_pdf::PdfRectangle" = type { float, float, float, float }
%struct._FS_MATRIX_ = type { float, float, float, float, float, float }
%struct._FS_RECTF_ = type { float, float, float, float }
%struct.PP_PrintSettings_Dev = type { %struct.PP_Rect, %struct.PP_Rect, %struct.PP_Size, i32, i32, i32, i32, i32 }
%struct.PP_Rect = type { %struct.PP_Point, %struct.PP_Size }
%struct.PP_Point = type { i32, i32 }
%struct.PP_Size = type { i32, i32 }
%struct.PP_PdfPrintSettings_Dev = type { i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.FPDF_FILEACCESS = type { i64, i32 (i8*, i64, i8*, i64)*, i8* }
%struct.fpdf_pageobject_t__ = type opaque

@.str = private unnamed_addr constant [2 x i8] c"1\00", align 1

@_ZN10chrome_pdf11PDFiumPrintC1EPNS_12PDFiumEngineE = hidden unnamed_addr alias void (%"class.chrome_pdf::PDFiumPrint"*, %"class.chrome_pdf::PDFiumEngine"*), void (%"class.chrome_pdf::PDFiumPrint"*, %"class.chrome_pdf::PDFiumEngine"*)* @_ZN10chrome_pdf11PDFiumPrintC2EPNS_12PDFiumEngineE
@_ZN10chrome_pdf11PDFiumPrintD1Ev = hidden unnamed_addr alias void (%"class.chrome_pdf::PDFiumPrint"*), void (%"class.chrome_pdf::PDFiumPrint"*)* @_ZN10chrome_pdf11PDFiumPrintD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10chrome_pdf11PDFiumPrintC2EPNS_12PDFiumEngineE(%"class.chrome_pdf::PDFiumPrint"* nocapture, %"class.chrome_pdf::PDFiumEngine"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.chrome_pdf::PDFiumPrint", %"class.chrome_pdf::PDFiumPrint"* %0, i64 0, i32 0
  store %"class.chrome_pdf::PDFiumEngine"* %1, %"class.chrome_pdf::PDFiumEngine"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10chrome_pdf11PDFiumPrintD2Ev(%"class.chrome_pdf::PDFiumPrint"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf11PDFiumPrint38GetPageNumbersFromPrintPageNumberRangeEPK27PP_PrintPageNumberRange_Devj(%"class.std::__1::vector.180"* noalias sret, %struct.PP_PrintPageNumberRange_Dev* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.180"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #11
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = bitcast i32** %4 to i64*
  %10 = bitcast %"class.std::__1::vector.180"* %0 to i64*
  %11 = bitcast i32** %5 to i64*
  %12 = zext i32 %2 to i64
  br label %13

13:                                               ; preds = %20, %8
  %14 = phi i64 [ 0, %8 ], [ %21, %20 ]
  %15 = getelementptr inbounds %struct.PP_PrintPageNumberRange_Dev, %struct.PP_PrintPageNumberRange_Dev* %1, i64 %14, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.PP_PrintPageNumberRange_Dev, %struct.PP_PrintPageNumberRange_Dev* %1, i64 %14, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp ugt i32 %16, %18
  br i1 %19, label %20, label %23

20:                                               ; preds = %75, %13
  %21 = add nuw nsw i64 %14, 1
  %22 = icmp eq i64 %21, %12
  br i1 %22, label %79, label %13

23:                                               ; preds = %13, %75
  %24 = phi i32 [ %76, %75 ], [ %16, %13 ]
  %25 = load i32*, i32** %4, align 8
  %26 = load i32*, i32** %5, align 8
  %27 = icmp eq i32* %25, %26
  %28 = ptrtoint i32* %26 to i64
  br i1 %27, label %32, label %29

29:                                               ; preds = %23
  store i32 %24, i32* %25, align 4
  %30 = getelementptr inbounds i32, i32* %25, i64 1
  %31 = ptrtoint i32* %30 to i64
  store i64 %31, i64* %9, align 8
  br label %75

32:                                               ; preds = %23
  %33 = ptrtoint i32* %25 to i64
  %34 = load i64, i64* %10, align 8
  %35 = sub i64 %33, %34
  %36 = ashr exact i64 %35, 2
  %37 = add nsw i64 %36, 1
  %38 = icmp ugt i64 %37, 4611686018427387903
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = bitcast %"class.std::__1::vector.180"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #12
  unreachable

41:                                               ; preds = %32
  %42 = sub i64 %28, %34
  %43 = ashr exact i64 %42, 2
  %44 = icmp ult i64 %43, 2305843009213693951
  br i1 %44, label %45, label %53

45:                                               ; preds = %41
  %46 = ashr exact i64 %42, 1
  %47 = icmp ult i64 %46, %37
  %48 = select i1 %47, i64 %37, i64 %46
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %45
  %51 = icmp ugt i64 %48, 4611686018427387903
  br i1 %51, label %52, label %53

52:                                               ; preds = %50
  tail call void @abort() #12
  unreachable

53:                                               ; preds = %50, %41
  %54 = phi i64 [ %48, %50 ], [ 4611686018427387903, %41 ]
  %55 = shl i64 %54, 2
  %56 = tail call i8* @_Znwm(i64 %55) #13
  %57 = bitcast i8* %56 to i32*
  br label %58

58:                                               ; preds = %53, %45
  %59 = phi i64 [ %54, %53 ], [ 0, %45 ]
  %60 = phi i8* [ %56, %53 ], [ null, %45 ]
  %61 = phi i32* [ %57, %53 ], [ null, %45 ]
  %62 = getelementptr inbounds i32, i32* %61, i64 %36
  %63 = getelementptr inbounds i32, i32* %61, i64 %59
  %64 = ptrtoint i32* %63 to i64
  store i32 %24, i32* %62, align 4
  %65 = getelementptr inbounds i32, i32* %62, i64 1
  %66 = ptrtoint i32* %65 to i64
  %67 = ptrtoint i32* %61 to i64
  %68 = icmp sgt i64 %35, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %58
  %70 = inttoptr i64 %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %70, i64 %35, i1 false) #11
  br label %71

71:                                               ; preds = %69, %58
  store i64 %67, i64* %10, align 8
  store i64 %66, i64* %9, align 8
  store i64 %64, i64* %11, align 8
  %72 = icmp eq i64 %34, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  %74 = inttoptr i64 %34 to i8*
  tail call void @_ZdlPv(i8* %74) #13
  br label %75

75:                                               ; preds = %29, %71, %73
  %76 = add i32 %24, 1
  %77 = load i32, i32* %17, align 4
  %78 = icmp ugt i32 %76, %77
  br i1 %78, label %20, label %23

79:                                               ; preds = %20, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf11PDFiumPrint12CreateNupPdfENSt3__110unique_ptrI17fpdf_document_t__19FPDFDocumentDeleterEEmRKN3gfx4SizeERKNS6_4RectE(%"class.std::__1::vector.191"* noalias nocapture sret, %struct.fpdf_document_t__*, i64, %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.chrome_pdf::PDFiumMemBufferFileWrite", align 8
  %7 = alloca %"class.std::__1::vector.191", align 16
  %8 = tail call fastcc %struct.fpdf_document_t__* @_ZN10chrome_pdf12_GLOBAL__N_120CreateNupPdfDocumentENSt3__110unique_ptrI17fpdf_document_t__19FPDFDocumentDeleterEEmRKN3gfx4SizeERKNS6_4RectE(%struct.fpdf_document_t__* %1, i64 %2, %"class.gfx::Size"* dereferenceable(8) %3, %"class.gfx::Rect"* dereferenceable(16) %4)
  %9 = icmp eq %struct.fpdf_document_t__* %8, null
  %10 = bitcast %"class.std::__1::vector.191"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #11
  br i1 %9, label %27, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.chrome_pdf::PDFiumMemBufferFileWrite"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #11, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 40, i1 false) #11, !noalias !2
  call void @_ZN10chrome_pdf24PDFiumMemBufferFileWriteC1Ev(%"class.chrome_pdf::PDFiumMemBufferFileWrite"* nonnull %6) #11, !noalias !2
  %13 = getelementptr inbounds %"class.chrome_pdf::PDFiumMemBufferFileWrite", %"class.chrome_pdf::PDFiumMemBufferFileWrite"* %6, i64 0, i32 0
  %14 = call i32 @FPDF_SaveAsCopy(%struct.fpdf_document_t__* nonnull %8, %struct.FPDF_FILEWRITE_* nonnull %13, i64 0) #11, !noalias !2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.std::__1::vector.191"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11, !noalias !2
  call void @_ZN10chrome_pdf24PDFiumMemBufferFileWrite10TakeBufferEv(%"class.std::__1::vector.191"* nonnull sret %7, %"class.chrome_pdf::PDFiumMemBufferFileWrite"* nonnull %6) #11, !noalias !2
  %19 = bitcast %"class.std::__1::vector.191"* %7 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 16, !noalias !2
  %21 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 16, !noalias !2
  %24 = bitcast %"class.std::__1::vector.191"* %0 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %24, align 8, !alias.scope !2
  %25 = bitcast i8** %17 to i64*
  store i64 %23, i64* %25, align 8, !alias.scope !2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11, !noalias !2
  br label %26

26:                                               ; preds = %11, %16
  call void @_ZN10chrome_pdf24PDFiumMemBufferFileWriteD1Ev(%"class.chrome_pdf::PDFiumMemBufferFileWrite"* nonnull %6) #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #11, !noalias !2
  call void @FPDF_CloseDocument(%struct.fpdf_document_t__* nonnull %8) #11, !noalias !2
  br label %27

27:                                               ; preds = %5, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.fpdf_document_t__* @_ZN10chrome_pdf12_GLOBAL__N_120CreateNupPdfDocumentENSt3__110unique_ptrI17fpdf_document_t__19FPDFDocumentDeleterEEmRKN3gfx4SizeERKNS6_4RectE(%struct.fpdf_document_t__*, i64, %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #2 {
  %5 = alloca %"class.printing::NupParameters", align 4
  %6 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.printing::NupParameters"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.printing::NupParameters", %"class.printing::NupParameters"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.printing::NupParameters", %"class.printing::NupParameters"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.printing::NupParameters", %"class.printing::NupParameters"* %5, i64 0, i32 2
  %14 = bitcast %"class.printing::NupParameters"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 12, i1 false)
  call void @_ZN8printing13NupParametersC1Ev(%"class.printing::NupParameters"* nonnull %5) #11
  %15 = call %struct.fpdf_page_t__* @FPDF_LoadPage(%struct.fpdf_document_t__* %0, i32 0) #11
  %16 = call float @FPDF_GetPageWidthF(%struct.fpdf_page_t__* %15) #11
  %17 = call float @FPDF_GetPageHeightF(%struct.fpdf_page_t__* %15) #11
  %18 = fcmp ogt float %16, %17
  %19 = icmp eq %struct.fpdf_page_t__* %15, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %4
  call void @FPDF_ClosePage(%struct.fpdf_page_t__* nonnull %15) #11
  br label %21

21:                                               ; preds = %4, %20
  %22 = trunc i64 %1 to i32
  call void @_ZN8printing13NupParameters13SetParametersEib(%"class.printing::NupParameters"* nonnull %5, i32 %22, i1 zeroext %18) #11
  %23 = icmp sgt i32 %7, %9
  %24 = load i8, i8* %13, align 4, !range !5
  %25 = icmp ne i8 %24, 0
  %26 = xor i1 %23, %25
  %27 = select i1 %26, i32 %9, i32 %7
  %28 = select i1 %26, i32 %7, i32 %9
  %29 = sitofp i32 %27 to float
  %30 = sitofp i32 %28 to float
  %31 = load i32, i32* %11, align 4
  %32 = sext i32 %31 to i64
  %33 = load i32, i32* %12, align 4
  %34 = sext i32 %33 to i64
  %35 = call %struct.fpdf_document_t__* @FPDF_ImportNPagesToOne(%struct.fpdf_document_t__* %0, float %29, float %30, i64 %32, i64 %34) #11
  %36 = icmp eq %struct.fpdf_document_t__* %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %21
  call fastcc void @_ZN10chrome_pdf12_GLOBAL__N_136FitContentsToPrintableAreaIfRequiredEP17fpdf_document_t__f25PP_PrintScalingOption_DevRKN3gfx4SizeERKNS4_4RectE(%struct.fpdf_document_t__* nonnull %35, float 1.000000e+00, i32 1, %"class.gfx::Size"* dereferenceable(8) %2, %"class.gfx::Rect"* dereferenceable(16) %3) #11
  br label %38

38:                                               ; preds = %21, %37
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %10) #11
  %39 = icmp eq %struct.fpdf_document_t__* %0, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %38
  call void @FPDF_CloseDocument(%struct.fpdf_document_t__* nonnull %0) #11
  br label %41

41:                                               ; preds = %38, %40
  ret %struct.fpdf_document_t__* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10chrome_pdf11PDFiumPrint20IsSourcePdfLandscapeEP17fpdf_document_t__(%struct.fpdf_document_t__*) local_unnamed_addr #2 align 2 {
  %2 = tail call %struct.fpdf_page_t__* @FPDF_LoadPage(%struct.fpdf_document_t__* %0, i32 0) #11
  %3 = tail call float @FPDF_GetPageWidthF(%struct.fpdf_page_t__* %2) #11
  %4 = tail call float @FPDF_GetPageHeightF(%struct.fpdf_page_t__* %2) #11
  %5 = fcmp ogt float %3, %4
  %6 = icmp eq %struct.fpdf_page_t__* %2, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void @FPDF_ClosePage(%struct.fpdf_page_t__* nonnull %2) #11
  br label %8

8:                                                ; preds = %1, %7
  ret i1 %5
}

declare %struct.fpdf_page_t__* @FPDF_LoadPage(%struct.fpdf_document_t__*, i32) local_unnamed_addr #4

declare float @FPDF_GetPageWidthF(%struct.fpdf_page_t__*) local_unnamed_addr #4

declare float @FPDF_GetPageHeightF(%struct.fpdf_page_t__*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf11PDFiumPrint26FitContentsToPrintableAreaEP17fpdf_document_t__RKN3gfx4SizeERKNS3_4RectE(%struct.fpdf_document_t__*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  tail call fastcc void @_ZN10chrome_pdf12_GLOBAL__N_136FitContentsToPrintableAreaIfRequiredEP17fpdf_document_t__f25PP_PrintScalingOption_DevRKN3gfx4SizeERKNS4_4RectE(%struct.fpdf_document_t__* %0, float 1.000000e+00, i32 1, %"class.gfx::Size"* dereferenceable(8) %1, %"class.gfx::Rect"* dereferenceable(16) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN10chrome_pdf12_GLOBAL__N_136FitContentsToPrintableAreaIfRequiredEP17fpdf_document_t__f25PP_PrintScalingOption_DevRKN3gfx4SizeERKNS4_4RectE(%struct.fpdf_document_t__*, float, i32, %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #5 {
  %6 = alloca %"class.gfx::SizeF", align 4
  %7 = alloca %"class.gfx::Rect", align 4
  %8 = alloca %"struct.chrome_pdf::PdfRectangle", align 4
  %9 = alloca %"struct.chrome_pdf::PdfRectangle", align 4
  %10 = alloca <4 x float>, align 16
  %11 = bitcast <4 x float>* %10 to { <2 x float>, <2 x float> }*
  %12 = alloca %struct._FS_MATRIX_, align 4
  %13 = alloca <4 x float>, align 16
  %14 = bitcast <4 x float>* %13 to %struct._FS_RECTF_*
  %15 = icmp eq i32 %2, 2
  br i1 %15, label %176, label %16

16:                                               ; preds = %5
  %17 = tail call i32 @FPDF_GetPageCount(%struct.fpdf_document_t__* %0) #11
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %176

19:                                               ; preds = %16
  %20 = bitcast <4 x float>* %10 to %"struct.chrome_pdf::PdfRectangle"*
  %21 = bitcast %"class.gfx::SizeF"* %6 to i8*
  %22 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %6, i64 0, i32 0
  %23 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %6, i64 0, i32 1
  %24 = bitcast %"class.gfx::Size"* %3 to i64*
  %25 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  %29 = bitcast %"class.gfx::Rect"* %7 to i8*
  %30 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1, i32 1
  %34 = bitcast %"struct.chrome_pdf::PdfRectangle"* %8 to i8*
  %35 = getelementptr inbounds %"struct.chrome_pdf::PdfRectangle", %"struct.chrome_pdf::PdfRectangle"* %8, i64 0, i32 0
  %36 = getelementptr inbounds %"struct.chrome_pdf::PdfRectangle", %"struct.chrome_pdf::PdfRectangle"* %8, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.chrome_pdf::PdfRectangle", %"struct.chrome_pdf::PdfRectangle"* %8, i64 0, i32 2
  %38 = getelementptr inbounds %"struct.chrome_pdf::PdfRectangle", %"struct.chrome_pdf::PdfRectangle"* %8, i64 0, i32 3
  %39 = bitcast %"struct.chrome_pdf::PdfRectangle"* %9 to i8*
  %40 = getelementptr inbounds %"struct.chrome_pdf::PdfRectangle", %"struct.chrome_pdf::PdfRectangle"* %9, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.chrome_pdf::PdfRectangle", %"struct.chrome_pdf::PdfRectangle"* %9, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.chrome_pdf::PdfRectangle", %"struct.chrome_pdf::PdfRectangle"* %9, i64 0, i32 2
  %43 = getelementptr inbounds %"struct.chrome_pdf::PdfRectangle", %"struct.chrome_pdf::PdfRectangle"* %9, i64 0, i32 3
  %44 = bitcast <4 x float>* %10 to i8*
  %45 = bitcast <4 x float>* %10 to <2 x float>*
  %46 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  %47 = bitcast %struct._FS_MATRIX_* %12 to i8*
  %48 = getelementptr inbounds %struct._FS_MATRIX_, %struct._FS_MATRIX_* %12, i64 0, i32 0
  %49 = getelementptr inbounds %struct._FS_MATRIX_, %struct._FS_MATRIX_* %12, i64 0, i32 1
  %50 = getelementptr inbounds %struct._FS_MATRIX_, %struct._FS_MATRIX_* %12, i64 0, i32 2
  %51 = getelementptr inbounds %struct._FS_MATRIX_, %struct._FS_MATRIX_* %12, i64 0, i32 3
  %52 = getelementptr inbounds %struct._FS_MATRIX_, %struct._FS_MATRIX_* %12, i64 0, i32 4
  %53 = getelementptr inbounds %struct._FS_MATRIX_, %struct._FS_MATRIX_* %12, i64 0, i32 5
  %54 = bitcast <4 x float>* %13 to i8*
  br label %55

55:                                               ; preds = %173, %19
  %56 = phi i32 [ 0, %19 ], [ %174, %173 ]
  %57 = call %struct.fpdf_page_t__* @FPDF_LoadPage(%struct.fpdf_document_t__* %0, i32 %56) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  %58 = call float @FPDF_GetPageWidthF(%struct.fpdf_page_t__* %57) #11
  %59 = call float @FPDF_GetPageHeightF(%struct.fpdf_page_t__* %57) #11
  %60 = fcmp ogt float %58, 0x3EB0000000000000
  %61 = select i1 %60, float %58, float 0.000000e+00
  store float %61, float* %22, align 4
  %62 = fcmp ogt float %59, 0x3EB0000000000000
  %63 = select i1 %62, float %59, float 0.000000e+00
  store float %63, float* %23, align 4
  %64 = call i32 @FPDFPage_GetRotation(%struct.fpdf_page_t__* %57) #11
  %65 = load i64, i64* %24, align 4
  %66 = trunc i64 %65 to i32
  %67 = lshr i64 %65, 32
  %68 = trunc i64 %67 to i32
  %69 = load i32, i32* %25, align 4
  %70 = load i32, i32* %26, align 4
  %71 = load i32, i32* %27, align 4
  %72 = load i32, i32* %28, align 4
  %73 = srem i32 %64, 2
  %74 = icmp eq i32 %73, 1
  %75 = fcmp ogt float %61, %63
  %76 = icmp sgt i32 %66, %68
  %77 = xor i1 %75, %76
  %78 = xor i1 %74, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %55
  %80 = icmp sgt i32 %68, 0
  %81 = select i1 %80, i32 %68, i32 0
  %82 = icmp sgt i32 %66, 0
  %83 = select i1 %82, i32 %66, i32 0
  %84 = icmp sgt i32 %70, 0
  %85 = icmp sgt i32 %72, 0
  %86 = and i1 %84, %85
  %87 = sub nuw nsw i32 2147483647, %70
  %88 = icmp ult i32 %87, %72
  %89 = and i1 %88, %86
  %90 = select i1 %89, i32 %87, i32 %72
  %91 = icmp sgt i32 %90, 0
  %92 = select i1 %91, i32 %90, i32 0
  %93 = icmp sgt i32 %69, 0
  %94 = icmp sgt i32 %71, 0
  %95 = and i1 %93, %94
  %96 = sub nuw nsw i32 2147483647, %69
  %97 = icmp ult i32 %96, %71
  %98 = and i1 %97, %95
  %99 = select i1 %98, i32 %96, i32 %71
  %100 = icmp sgt i32 %99, 0
  %101 = select i1 %100, i32 %99, i32 0
  br label %102

102:                                              ; preds = %79, %55
  %103 = phi i32 [ %70, %79 ], [ %69, %55 ]
  %104 = phi i32 [ %69, %79 ], [ %70, %55 ]
  %105 = phi i32 [ %92, %79 ], [ %71, %55 ]
  %106 = phi i32 [ %101, %79 ], [ %72, %55 ]
  %107 = phi i32 [ %81, %79 ], [ %66, %55 ]
  %108 = phi i32 [ %83, %79 ], [ %68, %55 ]
  %109 = select i1 %74, i32 %108, i32 %107
  %110 = select i1 %74, i32 %107, i32 %108
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %29, i8 0, i64 16, i1 false) #11
  switch i32 %2, label %136 [
    i32 1, label %111
    i32 3, label %126
  ]

111:                                              ; preds = %102
  %112 = icmp sgt i32 %103, 0
  %113 = icmp sgt i32 %105, 0
  %114 = and i1 %112, %113
  %115 = sub nuw nsw i32 2147483647, %103
  %116 = icmp ult i32 %115, %105
  %117 = and i1 %116, %114
  %118 = select i1 %117, i32 %115, i32 %105
  %119 = icmp sgt i32 %104, 0
  %120 = icmp sgt i32 %106, 0
  %121 = and i1 %119, %120
  %122 = sub nuw nsw i32 2147483647, %104
  %123 = icmp ult i32 %122, %106
  %124 = and i1 %123, %121
  %125 = select i1 %124, i32 %122, i32 %106
  br label %126

126:                                              ; preds = %102, %111
  %127 = phi i32 [ %118, %111 ], [ %107, %102 ]
  %128 = phi i32 [ %125, %111 ], [ %108, %102 ]
  %129 = phi i32 [ %103, %111 ], [ 0, %102 ]
  %130 = phi i32 [ %104, %111 ], [ 0, %102 ]
  %131 = icmp sgt i32 %127, 0
  %132 = select i1 %131, i32 %127, i32 0
  %133 = icmp sgt i32 %128, 0
  %134 = select i1 %133, i32 %128, i32 0
  store i32 %129, i32* %30, align 4
  store i32 %130, i32* %31, align 4
  store i32 %132, i32* %32, align 4
  store i32 %134, i32* %33, align 4
  %135 = call float @_ZN10chrome_pdf20CalculateScaleFactorERKN3gfx4RectERKNS0_5SizeFEb(%"class.gfx::Rect"* nonnull dereferenceable(16) %7, %"class.gfx::SizeF"* nonnull dereferenceable(8) %6, i1 zeroext %74) #11
  br label %136

136:                                              ; preds = %126, %102
  %137 = phi i1 [ true, %126 ], [ false, %102 ]
  %138 = phi float [ %135, %126 ], [ %1, %102 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %34, i8 -1, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %39, i8 -1, i64 16, i1 false) #11
  %139 = call i32 @FPDFPage_GetMediaBox(%struct.fpdf_page_t__* %57, float* nonnull %35, float* %36, float* %37, float* %38) #11
  %140 = icmp ne i32 %139, 0
  %141 = call i32 @FPDFPage_GetCropBox(%struct.fpdf_page_t__* %57, float* nonnull %40, float* %41, float* %42, float* %43) #11
  %142 = icmp ne i32 %141, 0
  call void @_ZN10chrome_pdf27CalculateMediaBoxAndCropBoxEbbbPNS_12PdfRectangleES1_(i1 zeroext %74, i1 zeroext %140, i1 zeroext %142, %"struct.chrome_pdf::PdfRectangle"* nonnull %8, %"struct.chrome_pdf::PdfRectangle"* nonnull %9) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #11
  %143 = call { <2 x float>, <2 x float> } @_ZN10chrome_pdf24CalculateClipBoxBoundaryERKNS_12PdfRectangleES2_(%"struct.chrome_pdf::PdfRectangle"* nonnull dereferenceable(16) %8, %"struct.chrome_pdf::PdfRectangle"* nonnull dereferenceable(16) %9) #11
  %144 = extractvalue { <2 x float>, <2 x float> } %143, 0
  store <2 x float> %144, <2 x float>* %45, align 16
  %145 = extractvalue { <2 x float>, <2 x float> } %143, 1
  store <2 x float> %145, <2 x float>* %46, align 8
  call void @_ZN10chrome_pdf17ScalePdfRectangleEfPNS_12PdfRectangleE(float %138, %"struct.chrome_pdf::PdfRectangle"* nonnull %20) #11
  br i1 %137, label %146, label %148

146:                                              ; preds = %136
  %147 = call <2 x float> @_ZN10chrome_pdf28CalculateScaledClipBoxOffsetERKN3gfx4RectERKNS_12PdfRectangleE(%"class.gfx::Rect"* nonnull dereferenceable(16) %7, %"struct.chrome_pdf::PdfRectangle"* nonnull dereferenceable(16) %20) #11
  br label %150

148:                                              ; preds = %136
  %149 = call <2 x float> @_ZN10chrome_pdf31CalculateNonScaledClipBoxOffsetEiiiRKNS_12PdfRectangleE(i32 %64, i32 %109, i32 %110, %"struct.chrome_pdf::PdfRectangle"* nonnull dereferenceable(16) %20) #11
  br label %150

150:                                              ; preds = %148, %146
  %151 = phi <2 x float> [ %147, %146 ], [ %149, %148 ]
  %152 = sitofp i32 %107 to float
  %153 = sitofp i32 %108 to float
  call void @FPDFPage_SetMediaBox(%struct.fpdf_page_t__* %57, float 0.000000e+00, float 0.000000e+00, float %152, float %153) #11
  call void @FPDFPage_SetCropBox(%struct.fpdf_page_t__* %57, float 0.000000e+00, float 0.000000e+00, float %152, float %153) #11
  %154 = fcmp oeq float %138, 1.000000e+00
  %155 = extractelement <2 x float> %151, i32 0
  %156 = fcmp oeq float %155, 0.000000e+00
  %157 = and i1 %154, %156
  %158 = extractelement <2 x float> %151, i32 1
  %159 = fcmp oeq float %158, 0.000000e+00
  %160 = and i1 %159, %157
  br i1 %160, label %170, label %161

161:                                              ; preds = %150
  %162 = shufflevector <2 x float> %151, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #11
  store float %138, float* %48, align 4
  store float 0.000000e+00, float* %49, align 4
  store float 0.000000e+00, float* %50, align 4
  store float %138, float* %51, align 4
  store float %155, float* %52, align 4
  store float %158, float* %53, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #11
  %163 = load <4 x float>, <4 x float>* %10, align 16
  %164 = shufflevector <4 x float> %163, <4 x float> undef, <4 x i32> <i32 0, i32 3, i32 2, i32 1>
  %165 = fadd <4 x float> %162, %164
  store <4 x float> %165, <4 x float>* %13, align 16
  %166 = call i32 @FPDFPage_TransFormWithClip(%struct.fpdf_page_t__* %57, %struct._FS_MATRIX_* nonnull %12, %struct._FS_RECTF_* nonnull %14) #11
  %167 = fpext float %138 to double
  %168 = fpext float %155 to double
  %169 = fpext float %158 to double
  call void @FPDFPage_TransformAnnots(%struct.fpdf_page_t__* %57, double %167, double 0.000000e+00, double 0.000000e+00, double %167, double %168, double %169) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #11
  br label %170

170:                                              ; preds = %150, %161
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  %171 = icmp eq %struct.fpdf_page_t__* %57, null
  br i1 %171, label %173, label %172

172:                                              ; preds = %170
  call void @FPDF_ClosePage(%struct.fpdf_page_t__* nonnull %57) #11
  br label %173

173:                                              ; preds = %170, %172
  %174 = add nuw nsw i32 %56, 1
  %175 = icmp eq i32 %174, %17
  br i1 %175, label %176, label %55

176:                                              ; preds = %173, %16, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf11PDFiumPrint15PrintPagesAsPdfEPK27PP_PrintPageNumberRange_DevjRK20PP_PrintSettings_DevRK23PP_PdfPrintSettings_Devb(%"class.std::__1::vector.191"* noalias nocapture sret, %"class.chrome_pdf::PDFiumPrint"* nocapture readonly, %struct.PP_PrintPageNumberRange_Dev* nocapture readonly, i32, %struct.PP_PrintSettings_Dev* dereferenceable(60), %struct.PP_PdfPrintSettings_Dev* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #2 align 2 {
  %8 = alloca %"class.chrome_pdf::PDFiumMemBufferFileWrite", align 8
  %9 = alloca %"class.std::__1::vector.191", align 16
  %10 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.std::__1::vector.191"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #11
  %12 = tail call %struct.fpdf_document_t__* @_ZN10chrome_pdf11PDFiumPrint14CreatePrintPdfEPK27PP_PrintPageNumberRange_DevjRK20PP_PrintSettings_DevRK23PP_PdfPrintSettings_Dev(%"class.chrome_pdf::PDFiumPrint"* %1, %struct.PP_PrintPageNumberRange_Dev* %2, i32 %3, %struct.PP_PrintSettings_Dev* dereferenceable(60) %4, %struct.PP_PdfPrintSettings_Dev* dereferenceable(8) %5)
  br i1 %6, label %13, label %15

13:                                               ; preds = %7
  %14 = tail call %struct.fpdf_document_t__* @_ZN10chrome_pdf11PDFiumPrint15CreateRasterPdfENSt3__110unique_ptrI17fpdf_document_t__19FPDFDocumentDeleterEERK20PP_PrintSettings_Dev(%"class.chrome_pdf::PDFiumPrint"* %1, %struct.fpdf_document_t__* %12, %struct.PP_PrintSettings_Dev* dereferenceable(60) %4)
  br label %15

15:                                               ; preds = %13, %7
  %16 = phi %struct.fpdf_document_t__* [ %14, %13 ], [ %12, %7 ]
  %17 = tail call i32 @FPDF_GetPageCount(%struct.fpdf_document_t__* %16) #11
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %39, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.chrome_pdf::PDFiumMemBufferFileWrite"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #11, !noalias !6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 40, i1 false) #11, !noalias !6
  call void @_ZN10chrome_pdf24PDFiumMemBufferFileWriteC1Ev(%"class.chrome_pdf::PDFiumMemBufferFileWrite"* nonnull %8) #11, !noalias !6
  %21 = getelementptr inbounds %"class.chrome_pdf::PDFiumMemBufferFileWrite", %"class.chrome_pdf::PDFiumMemBufferFileWrite"* %8, i64 0, i32 0
  %22 = call i32 @FPDF_SaveAsCopy(%struct.fpdf_document_t__* %16, %struct.FPDF_FILEWRITE_* nonnull %21, i64 0) #11, !noalias !6
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.std::__1::vector.191"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11, !noalias !6
  call void @_ZN10chrome_pdf24PDFiumMemBufferFileWrite10TakeBufferEv(%"class.std::__1::vector.191"* nonnull sret %9, %"class.chrome_pdf::PDFiumMemBufferFileWrite"* nonnull %8) #11, !noalias !6
  %26 = bitcast %"class.std::__1::vector.191"* %9 to <2 x i64>*
  %27 = load <2 x i64>, <2 x i64>* %26, align 16, !noalias !6
  %28 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 16, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11, !noalias !6
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ 0, %19 ], [ %30, %24 ]
  %33 = phi <2 x i64> [ zeroinitializer, %19 ], [ %27, %24 ]
  call void @_ZN10chrome_pdf24PDFiumMemBufferFileWriteD1Ev(%"class.chrome_pdf::PDFiumMemBufferFileWrite"* nonnull %8) #11, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #11, !noalias !6
  %34 = icmp eq %struct.fpdf_document_t__* %16, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  call void @FPDF_CloseDocument(%struct.fpdf_document_t__* nonnull %16) #11, !noalias !6
  br label %36

36:                                               ; preds = %31, %35
  %37 = bitcast %"class.std::__1::vector.191"* %0 to <2 x i64>*
  store <2 x i64> %33, <2 x i64>* %37, align 8
  %38 = bitcast i8** %10 to i64*
  store i64 %32, i64* %38, align 8
  br label %42

39:                                               ; preds = %15
  %40 = icmp eq %struct.fpdf_document_t__* %16, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %39
  tail call void @FPDF_CloseDocument(%struct.fpdf_document_t__* nonnull %16) #11
  br label %42

42:                                               ; preds = %36, %39, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_document_t__* @_ZN10chrome_pdf11PDFiumPrint14CreatePrintPdfEPK27PP_PrintPageNumberRange_DevjRK20PP_PrintSettings_DevRK23PP_PdfPrintSettings_Dev(%"class.chrome_pdf::PDFiumPrint"* nocapture readonly, %struct.PP_PrintPageNumberRange_Dev* nocapture readonly, i32, %struct.PP_PrintSettings_Dev* dereferenceable(60), %struct.PP_PdfPrintSettings_Dev* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca i64, align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = alloca %"class.gfx::Size", align 4
  %12 = alloca %"class.gfx::Rect", align 4
  %13 = alloca { i64, i64 }, align 8
  %14 = bitcast { i64, i64 }* %13 to %"class.gfx::Rect"*
  %15 = tail call %struct.fpdf_document_t__* @FPDF_CreateNewDocument() #11
  %16 = ptrtoint %struct.fpdf_document_t__* %15 to i64
  %17 = getelementptr inbounds %"class.chrome_pdf::PDFiumPrint", %"class.chrome_pdf::PDFiumPrint"* %0, i64 0, i32 0
  %18 = load %"class.chrome_pdf::PDFiumEngine"*, %"class.chrome_pdf::PDFiumEngine"** %17, align 8
  %19 = tail call %struct.fpdf_document_t__* @_ZNK10chrome_pdf12PDFiumEngine3docEv(%"class.chrome_pdf::PDFiumEngine"* %18) #11
  %20 = tail call i32 @FPDF_CopyViewerPreferences(%struct.fpdf_document_t__* %15, %struct.fpdf_document_t__* %19) #11
  %21 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #11, !alias.scope !9
  %24 = icmp eq i32 %2, 0
  %25 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %24, label %91, label %26

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %29 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %34 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = zext i32 %2 to i64
  br label %39

39:                                               ; preds = %88, %26
  %40 = phi i64 [ 0, %26 ], [ %90, %88 ]
  %41 = phi i8 [ 0, %26 ], [ %89, %88 ]
  %42 = phi i64 [ 0, %26 ], [ %86, %88 ]
  %43 = icmp slt i8 %41, 0
  %44 = zext i8 %41 to i64
  %45 = select i1 %43, i64 %40, i64 %44
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %39
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %8, i8 signext 44) #11
  br label %48

48:                                               ; preds = %47, %39
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11, !noalias !9
  %49 = getelementptr inbounds %struct.PP_PrintPageNumberRange_Dev, %struct.PP_PrintPageNumberRange_Dev* %1, i64 %42, i32 0
  %50 = load i32, i32* %49, align 4, !noalias !9
  %51 = add i32 %50, 1
  call void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string"* nonnull sret %6, i32 %51) #11
  %52 = load i8, i8* %30, align 1, !noalias !9
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %31, align 8, !noalias !9
  %55 = load i64, i64* %32, align 8, !noalias !9
  %56 = zext i8 %52 to i64
  %57 = select i1 %53, i8* %54, i8* %28
  %58 = select i1 %53, i64 %55, i64 %56
  %59 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %57, i64 %58) #11
  %60 = load i8, i8* %30, align 1, !noalias !9
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %48
  %63 = load i8*, i8** %31, align 8, !noalias !9
  call void @_ZdlPv(i8* %63) #13
  br label %64

64:                                               ; preds = %62, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11, !noalias !9
  %65 = load i32, i32* %49, align 4, !noalias !9
  %66 = getelementptr inbounds %struct.PP_PrintPageNumberRange_Dev, %struct.PP_PrintPageNumberRange_Dev* %1, i64 %42, i32 1
  %67 = load i32, i32* %66, align 4, !noalias !9
  %68 = icmp eq i32 %65, %67
  br i1 %68, label %85, label %69

69:                                               ; preds = %64
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %8, i8 signext 45) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11, !noalias !9
  %70 = load i32, i32* %66, align 4, !noalias !9
  %71 = add i32 %70, 1
  call void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string"* nonnull sret %7, i32 %71) #11
  %72 = load i8, i8* %35, align 1, !noalias !9
  %73 = icmp slt i8 %72, 0
  %74 = load i8*, i8** %36, align 8, !noalias !9
  %75 = load i64, i64* %37, align 8, !noalias !9
  %76 = zext i8 %72 to i64
  %77 = select i1 %73, i8* %74, i8* %33
  %78 = select i1 %73, i64 %75, i64 %76
  %79 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %77, i64 %78) #11
  %80 = load i8, i8* %35, align 1, !noalias !9
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %69
  %83 = load i8*, i8** %36, align 8, !noalias !9
  call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %82, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11, !noalias !9
  br label %85

85:                                               ; preds = %84, %64
  %86 = add nuw nsw i64 %42, 1
  %87 = icmp eq i64 %86, %38
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  %89 = load i8, i8* %27, align 1, !alias.scope !9
  %90 = load i64, i64* %23, align 8, !alias.scope !9
  br label %39

91:                                               ; preds = %85, %5
  %92 = load %"class.chrome_pdf::PDFiumEngine"*, %"class.chrome_pdf::PDFiumEngine"** %17, align 8
  %93 = call %struct.fpdf_document_t__* @_ZNK10chrome_pdf12PDFiumEngine3docEv(%"class.chrome_pdf::PDFiumEngine"* %92) #11
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  %97 = load i8*, i8** %22, align 8
  %98 = select i1 %96, i8* %97, i8* %21
  %99 = call i32 @FPDF_ImportPages(%struct.fpdf_document_t__* %15, %struct.fpdf_document_t__* %93, i8* %98, i32 0) #11
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %197, label %101

101:                                              ; preds = %91
  %102 = bitcast { i64, i64 }* %10 to %"class.gfx::Rect"*
  %103 = bitcast i64* %9 to %"class.gfx::Size"*
  %104 = getelementptr inbounds %struct.PP_PdfPrintSettings_Dev, %struct.PP_PdfPrintSettings_Dev* %4, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = uitofp i32 %105 to float
  %107 = fdiv float %106, 1.000000e+02
  %108 = getelementptr inbounds %struct.PP_PrintSettings_Dev, %struct.PP_PrintSettings_Dev* %3, i64 0, i32 5
  %109 = load i32, i32* %108, align 4
  %110 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #11
  %111 = getelementptr inbounds %struct.PP_PrintSettings_Dev, %struct.PP_PrintSettings_Dev* %3, i64 0, i32 2
  %112 = call i64 @_ZN10chrome_pdf14SizeFromPPSizeERK7PP_Size(%struct.PP_Size* dereferenceable(8) %111) #11
  store i64 %112, i64* %9, align 8
  %113 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #11
  %114 = getelementptr inbounds %struct.PP_PrintSettings_Dev, %struct.PP_PrintSettings_Dev* %3, i64 0, i32 0
  %115 = call { i64, i64 } @_ZN10chrome_pdf14RectFromPPRectERK7PP_Rect(%struct.PP_Rect* dereferenceable(16) %114) #11
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %117 = extractvalue { i64, i64 } %115, 0
  store i64 %117, i64* %116, align 8
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %119 = extractvalue { i64, i64 } %115, 1
  store i64 %119, i64* %118, align 8
  call fastcc void @_ZN10chrome_pdf12_GLOBAL__N_136FitContentsToPrintableAreaIfRequiredEP17fpdf_document_t__f25PP_PrintScalingOption_DevRKN3gfx4SizeERKNS4_4RectE(%struct.fpdf_document_t__* %15, float %107, i32 %109, %"class.gfx::Size"* nonnull dereferenceable(8) %103, %"class.gfx::Rect"* nonnull dereferenceable(16) %102)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #11
  %120 = call i32 @FPDF_GetPageCount(%struct.fpdf_document_t__* %15) #11
  %121 = icmp sgt i32 %120, 0
  br i1 %121, label %124, label %133

122:                                              ; preds = %131
  %123 = icmp eq i32 %132, %120
  br i1 %123, label %133, label %124

124:                                              ; preds = %101, %122
  %125 = phi i32 [ %132, %122 ], [ 0, %101 ]
  %126 = call %struct.fpdf_page_t__* @FPDF_LoadPage(%struct.fpdf_document_t__* %15, i32 %125) #11
  %127 = call i32 @FPDFPage_Flatten(%struct.fpdf_page_t__* %126, i32 1) #11
  %128 = icmp eq i32 %127, 0
  %129 = icmp eq %struct.fpdf_page_t__* %126, null
  br i1 %129, label %131, label %130

130:                                              ; preds = %124
  call void @FPDF_ClosePage(%struct.fpdf_page_t__* nonnull %126) #11
  br label %131

131:                                              ; preds = %130, %124
  %132 = add nuw nsw i32 %125, 1
  br i1 %128, label %197, label %122

133:                                              ; preds = %122, %101
  %134 = getelementptr inbounds %struct.PP_PdfPrintSettings_Dev, %struct.PP_PdfPrintSettings_Dev* %4, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp sgt i32 %135, 1
  br i1 %136, label %137, label %197

137:                                              ; preds = %133
  %138 = bitcast %"class.gfx::Size"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #11
  %139 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %11, i64 0, i32 0
  %140 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %11, i64 0, i32 1
  %141 = getelementptr inbounds %struct.PP_Size, %struct.PP_Size* %111, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %struct.PP_PrintSettings_Dev, %struct.PP_PrintSettings_Dev* %3, i64 0, i32 2, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = icmp sgt i32 %142, 0
  %146 = select i1 %145, i32 %142, i32 0
  store i32 %146, i32* %139, align 4
  %147 = icmp sgt i32 %144, 0
  %148 = select i1 %147, i32 %144, i32 0
  store i32 %148, i32* %140, align 4
  %149 = bitcast %"class.gfx::Rect"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %149) #11
  %150 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 0, i32 0
  %151 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 0, i32 1
  %152 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 1, i32 0
  %153 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 1, i32 1
  %154 = getelementptr inbounds %struct.PP_PrintSettings_Dev, %struct.PP_PrintSettings_Dev* %3, i64 0, i32 0, i32 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %struct.PP_PrintSettings_Dev, %struct.PP_PrintSettings_Dev* %3, i64 0, i32 0, i32 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds %struct.PP_PrintSettings_Dev, %struct.PP_PrintSettings_Dev* %3, i64 0, i32 0, i32 1, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr inbounds %struct.PP_PrintSettings_Dev, %struct.PP_PrintSettings_Dev* %3, i64 0, i32 0, i32 1, i32 1
  %161 = load i32, i32* %160, align 4
  store i32 %155, i32* %150, align 4
  store i32 %157, i32* %151, align 4
  %162 = icmp sgt i32 %155, 0
  %163 = icmp sgt i32 %159, 0
  %164 = and i1 %162, %163
  %165 = sub nuw nsw i32 2147483647, %155
  %166 = icmp ult i32 %165, %159
  %167 = and i1 %166, %164
  %168 = select i1 %167, i32 %165, i32 %159
  %169 = icmp sgt i32 %157, 0
  %170 = icmp sgt i32 %161, 0
  %171 = and i1 %169, %170
  %172 = sub nuw nsw i32 2147483647, %157
  %173 = icmp ult i32 %172, %161
  %174 = and i1 %173, %171
  %175 = select i1 %174, i32 %172, i32 %161
  %176 = icmp sgt i32 %168, 0
  %177 = select i1 %176, i32 %168, i32 0
  store i32 %177, i32* %152, align 4
  %178 = icmp sgt i32 %175, 0
  %179 = select i1 %178, i32 %175, i32 0
  store i32 %179, i32* %153, align 4
  %180 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %180) #11
  %181 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %182 = call { i64, i64 } @_ZN8printing9PageSetup27GetSymmetricalPrintableAreaERKN3gfx4SizeERKNS1_4RectE(%"class.gfx::Size"* nonnull dereferenceable(8) %11, %"class.gfx::Rect"* nonnull dereferenceable(16) %12) #11
  %183 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  %184 = extractvalue { i64, i64 } %182, 0
  store i64 %184, i64* %183, align 8
  %185 = extractvalue { i64, i64 } %182, 1
  store i64 %185, i64* %181, align 8
  %186 = trunc i64 %185 to i32
  %187 = icmp eq i32 %186, 0
  %188 = icmp ult i64 %185, 4294967296
  %189 = or i1 %187, %188
  br i1 %189, label %194, label %190

190:                                              ; preds = %137
  %191 = zext i32 %135 to i64
  %192 = call fastcc %struct.fpdf_document_t__* @_ZN10chrome_pdf12_GLOBAL__N_120CreateNupPdfDocumentENSt3__110unique_ptrI17fpdf_document_t__19FPDFDocumentDeleterEEmRKN3gfx4SizeERKNS6_4RectE(%struct.fpdf_document_t__* %15, i64 %191, %"class.gfx::Size"* nonnull dereferenceable(8) %11, %"class.gfx::Rect"* nonnull dereferenceable(16) %14)
  %193 = ptrtoint %struct.fpdf_document_t__* %192 to i64
  br label %194

194:                                              ; preds = %137, %190
  %195 = phi i64 [ 0, %190 ], [ %16, %137 ]
  %196 = phi i64 [ %193, %190 ], [ 0, %137 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %180) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %149) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #11
  br label %197

197:                                              ; preds = %131, %133, %91, %194
  %198 = phi i64 [ %195, %194 ], [ %16, %91 ], [ 0, %133 ], [ %16, %131 ]
  %199 = phi i64 [ %196, %194 ], [ 0, %91 ], [ %16, %133 ], [ 0, %131 ]
  %200 = load i8, i8* %94, align 1
  %201 = icmp slt i8 %200, 0
  br i1 %201, label %202, label %204

202:                                              ; preds = %197
  %203 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %203) #13
  br label %204

204:                                              ; preds = %197, %202
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  %205 = icmp eq i64 %198, 0
  br i1 %205, label %208, label %206

206:                                              ; preds = %204
  %207 = inttoptr i64 %198 to %struct.fpdf_document_t__*
  call void @FPDF_CloseDocument(%struct.fpdf_document_t__* nonnull %207) #11
  br label %208

208:                                              ; preds = %204, %206
  %209 = inttoptr i64 %199 to %struct.fpdf_document_t__*
  ret %struct.fpdf_document_t__* %209
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_document_t__* @_ZN10chrome_pdf11PDFiumPrint15CreateRasterPdfENSt3__110unique_ptrI17fpdf_document_t__19FPDFDocumentDeleterEERK20PP_PrintSettings_Dev(%"class.chrome_pdf::PDFiumPrint"* nocapture readnone, %struct.fpdf_document_t__*, %struct.PP_PrintSettings_Dev* nocapture readonly dereferenceable(60)) local_unnamed_addr #2 align 2 {
  %4 = tail call i32 @FPDF_GetPageCount(%struct.fpdf_document_t__* %1) #11
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %26, label %6

6:                                                ; preds = %3
  %7 = tail call %struct.fpdf_document_t__* @FPDF_CreateNewDocument() #11
  %8 = tail call i32 @FPDF_CopyViewerPreferences(%struct.fpdf_document_t__* %7, %struct.fpdf_document_t__* %1) #11
  br label %11

9:                                                ; preds = %19
  %10 = icmp eq i32 %22, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %9, %6
  %12 = phi i32 [ %22, %9 ], [ 0, %6 ]
  %13 = tail call %struct.fpdf_page_t__* @FPDF_LoadPage(%struct.fpdf_document_t__* %1, i32 %12) #11
  %14 = icmp eq %struct.fpdf_page_t__* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %11
  %16 = tail call %struct.fpdf_document_t__* @_ZN10chrome_pdf11PDFiumPrint25CreateSinglePageRasterPdfEP13fpdf_page_t__RK20PP_PrintSettings_Dev(%"class.chrome_pdf::PDFiumPrint"* undef, %struct.fpdf_page_t__* nonnull %13, %struct.PP_PrintSettings_Dev* dereferenceable(60) %2)
  %17 = icmp eq %struct.fpdf_document_t__* %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @FPDF_ClosePage(%struct.fpdf_page_t__* nonnull %13) #11
  br label %23

19:                                               ; preds = %15
  %20 = tail call i32 @FPDF_ImportPages(%struct.fpdf_document_t__* %7, %struct.fpdf_document_t__* nonnull %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i32 %12) #11
  %21 = icmp eq i32 %20, 0
  tail call void @FPDF_CloseDocument(%struct.fpdf_document_t__* nonnull %16) #11
  tail call void @FPDF_ClosePage(%struct.fpdf_page_t__* nonnull %13) #11
  %22 = add nuw nsw i32 %12, 1
  br i1 %21, label %23, label %9

23:                                               ; preds = %19, %11, %18
  %24 = icmp eq %struct.fpdf_document_t__* %7, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %23
  tail call void @FPDF_CloseDocument(%struct.fpdf_document_t__* nonnull %7) #11
  br label %26

26:                                               ; preds = %9, %25, %23, %3
  %27 = phi %struct.fpdf_document_t__* [ null, %3 ], [ null, %23 ], [ null, %25 ], [ %7, %9 ]
  %28 = icmp eq %struct.fpdf_document_t__* %1, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  tail call void @FPDF_CloseDocument(%struct.fpdf_document_t__* nonnull %1) #11
  br label %30

30:                                               ; preds = %26, %29
  ret %struct.fpdf_document_t__* %27
}

declare %struct.fpdf_document_t__* @FPDF_CreateNewDocument() local_unnamed_addr #4

declare i32 @FPDF_CopyViewerPreferences(%struct.fpdf_document_t__*, %struct.fpdf_document_t__*) local_unnamed_addr #4

declare %struct.fpdf_document_t__* @_ZNK10chrome_pdf12PDFiumEngine3docEv(%"class.chrome_pdf::PDFiumEngine"*) local_unnamed_addr #4

declare i32 @FPDF_ImportPages(%struct.fpdf_document_t__*, %struct.fpdf_document_t__*, i8*, i32) local_unnamed_addr #4

declare i64 @_ZN10chrome_pdf14SizeFromPPSizeERK7PP_Size(%struct.PP_Size* dereferenceable(8)) local_unnamed_addr #4

declare { i64, i64 } @_ZN10chrome_pdf14RectFromPPRectERK7PP_Rect(%struct.PP_Rect* dereferenceable(16)) local_unnamed_addr #4

declare { i64, i64 } @_ZN8printing9PageSetup27GetSymmetricalPrintableAreaERKN3gfx4SizeERKNS1_4RectE(%"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_document_t__* @_ZN10chrome_pdf11PDFiumPrint25CreateSinglePageRasterPdfEP13fpdf_page_t__RK20PP_PrintSettings_Dev(%"class.chrome_pdf::PDFiumPrint"* nocapture readnone, %struct.fpdf_page_t__*, %struct.PP_PrintSettings_Dev* nocapture readonly dereferenceable(60)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::vector.191", align 8
  %5 = alloca %class.SkPixmap, align 8
  %6 = alloca %struct.fpdf_page_t__*, align 8
  %7 = alloca %struct.FPDF_FILEACCESS, align 8
  %8 = tail call %struct.fpdf_document_t__* @FPDF_CreateNewDocument() #11
  %9 = tail call float @FPDF_GetPageWidthF(%struct.fpdf_page_t__* %1) #11
  %10 = tail call float @FPDF_GetPageHeightF(%struct.fpdf_page_t__* %1) #11
  %11 = fpext float %9 to double
  %12 = getelementptr inbounds %struct.PP_PrintSettings_Dev, %struct.PP_PrintSettings_Dev* %2, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = tail call i32 @_ZN8printing11ConvertUnitEdii(double %11, i32 72, i32 %13) #11
  %15 = fpext float %10 to double
  %16 = load i32, i32* %12, align 4
  %17 = tail call i32 @_ZN8printing11ConvertUnitEdii(double %15, i32 72, i32 %16) #11
  %18 = icmp sgt i32 %14, 0
  %19 = select i1 %18, i32 %14, i32 0
  %20 = icmp sgt i32 %17, 0
  %21 = select i1 %20, i32 %17, i32 0
  %22 = tail call %struct.fpdf_bitmap_t__* @FPDFBitmap_Create(i32 %19, i32 %21, i32 0) #11
  tail call void @FPDFBitmap_FillRect(%struct.fpdf_bitmap_t__* %22, i32 0, i32 0, i32 %19, i32 %21, i64 4294967295) #11
  %23 = getelementptr inbounds %struct.PP_PrintSettings_Dev, %struct.PP_PrintSettings_Dev* %2, i64 0, i32 4
  %24 = load i32, i32* %23, align 4
  tail call void @FPDF_RenderPageBitmap(%struct.fpdf_bitmap_t__* %22, %struct.fpdf_page_t__* %1, i32 0, i32 0, i32 %19, i32 %21, i32 %24, i32 2048) #11
  %25 = sitofp i32 %19 to double
  %26 = load i32, i32* %12, align 4
  %27 = sitofp i32 %26 to double
  %28 = tail call double @_ZN8printing17ConvertUnitDoubleEddd(double %25, double %27, double 7.200000e+01) #11
  %29 = sitofp i32 %21 to double
  %30 = load i32, i32* %12, align 4
  %31 = sitofp i32 %30 to double
  %32 = tail call double @_ZN8printing17ConvertUnitDoubleEddd(double %29, double %31, double 7.200000e+01) #11
  %33 = tail call %struct.fpdf_pageobject_t__* @FPDFPageObj_NewImageObj(%struct.fpdf_document_t__* %8) #11
  %34 = bitcast %"class.std::__1::vector.191"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %4, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false) #11
  %37 = getelementptr inbounds %struct.PP_PrintSettings_Dev, %struct.PP_PrintSettings_Dev* %2, i64 0, i32 7
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %69

41:                                               ; preds = %3
  %42 = tail call i32 @FPDFBitmap_GetWidth(%struct.fpdf_bitmap_t__* %22) #11
  %43 = tail call i32 @FPDFBitmap_GetHeight(%struct.fpdf_bitmap_t__* %22) #11
  %44 = zext i32 %43 to i64
  %45 = shl nuw i64 %44, 32
  %46 = zext i32 %42 to i64
  %47 = or i64 %45, %46
  %48 = bitcast %class.SkPixmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %48) #11
  %49 = tail call i8* @FPDFBitmap_GetBuffer(%struct.fpdf_bitmap_t__* %22) #11
  %50 = tail call i32 @FPDFBitmap_GetStride(%struct.fpdf_bitmap_t__* %22) #11
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 0
  store i8* %49, i8** %52, align 8
  %53 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 1
  store i64 %51, i64* %53, align 8
  %54 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %54, align 8
  %55 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 1
  %56 = bitcast i32* %55 to i64*
  store i64 4294967302, i64* %56, align 8
  %57 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 1
  %58 = bitcast %struct.SkISize* %57 to i64*
  store i64 %47, i64* %58, align 8
  %59 = call zeroext i1 @_ZN3gfx9JPEGCodec6EncodeERK8SkPixmapiPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkPixmap* nonnull dereferenceable(40) %5, i32 40, %"class.std::__1::vector.191"* nonnull %4) #11
  %60 = load %class.SkColorSpace*, %class.SkColorSpace** %54, align 8
  %61 = icmp eq %class.SkColorSpace* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %41
  %63 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = bitcast %class.SkColorSpace* %60 to i8*
  call void @_ZdlPv(i8* %67) #13
  br label %68

68:                                               ; preds = %66, %62, %41
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48) #11
  br label %69

69:                                               ; preds = %3, %68
  %70 = phi i1 [ false, %3 ], [ %59, %68 ]
  %71 = call %struct.fpdf_page_t__* @FPDFPage_New(%struct.fpdf_document_t__* %8, i32 0, double %11, double %15) #11
  %72 = bitcast %struct.fpdf_page_t__** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  store %struct.fpdf_page_t__* %71, %struct.fpdf_page_t__** %6, align 8
  br i1 %70, label %73, label %85

73:                                               ; preds = %69
  %74 = bitcast %struct.FPDF_FILEACCESS* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #11
  %75 = bitcast i8** %36 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.std::__1::vector.191"* %4 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = getelementptr inbounds %struct.FPDF_FILEACCESS, %struct.FPDF_FILEACCESS* %7, i64 0, i32 0
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %struct.FPDF_FILEACCESS, %struct.FPDF_FILEACCESS* %7, i64 0, i32 1
  store i32 (i8*, i64, i8*, i64)* @_ZN10chrome_pdf12_GLOBAL__N_115GetBlockForJpegEPvmPhm, i32 (i8*, i64, i8*, i64)** %81, align 8
  %82 = getelementptr inbounds %struct.FPDF_FILEACCESS, %struct.FPDF_FILEACCESS* %7, i64 0, i32 2
  %83 = bitcast i8** %82 to %"class.std::__1::vector.191"**
  store %"class.std::__1::vector.191"* %4, %"class.std::__1::vector.191"** %83, align 8
  %84 = call i32 @FPDFImageObj_LoadJpegFileInline(%struct.fpdf_page_t__** nonnull %6, i32 1, %struct.fpdf_pageobject_t__* %33, %struct.FPDF_FILEACCESS* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #11
  br label %87

85:                                               ; preds = %69
  %86 = call i32 @FPDFImageObj_SetBitmap(%struct.fpdf_page_t__** nonnull %6, i32 1, %struct.fpdf_pageobject_t__* %33, %struct.fpdf_bitmap_t__* %22) #11
  br label %87

87:                                               ; preds = %85, %73
  %88 = call i32 @FPDFImageObj_SetMatrix(%struct.fpdf_pageobject_t__* %33, double %28, double 0.000000e+00, double 0.000000e+00, double %32, double 0.000000e+00, double 0.000000e+00) #11
  %89 = load %struct.fpdf_page_t__*, %struct.fpdf_page_t__** %6, align 8
  call void @FPDFPage_InsertObject(%struct.fpdf_page_t__* %89, %struct.fpdf_pageobject_t__* %33) #11
  %90 = load %struct.fpdf_page_t__*, %struct.fpdf_page_t__** %6, align 8
  %91 = call i32 @FPDFPage_GenerateContent(%struct.fpdf_page_t__* %90) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  %92 = icmp eq %struct.fpdf_page_t__* %71, null
  br i1 %92, label %94, label %93

93:                                               ; preds = %87
  call void @FPDF_ClosePage(%struct.fpdf_page_t__* nonnull %71) #11
  br label %94

94:                                               ; preds = %87, %93
  %95 = load i8*, i8** %35, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %94
  %98 = ptrtoint i8* %95 to i64
  %99 = bitcast i8** %36 to i64*
  store i64 %98, i64* %99, align 8
  call void @_ZdlPv(i8* nonnull %95) #13
  br label %100

100:                                              ; preds = %97, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #11
  %101 = icmp eq %struct.fpdf_bitmap_t__* %22, null
  br i1 %101, label %103, label %102

102:                                              ; preds = %100
  call void @FPDFBitmap_Destroy(%struct.fpdf_bitmap_t__* nonnull %22) #11
  br label %103

103:                                              ; preds = %100, %102
  ret %struct.fpdf_document_t__* %8
}

declare i32 @_ZN8printing11ConvertUnitEdii(double, i32, i32) local_unnamed_addr #4

declare %struct.fpdf_bitmap_t__* @FPDFBitmap_Create(i32, i32, i32) local_unnamed_addr #4

declare void @FPDFBitmap_FillRect(%struct.fpdf_bitmap_t__*, i32, i32, i32, i32, i64) local_unnamed_addr #4

declare void @FPDF_RenderPageBitmap(%struct.fpdf_bitmap_t__*, %struct.fpdf_page_t__*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #4

declare double @_ZN8printing17ConvertUnitDoubleEddd(double, double, double) local_unnamed_addr #4

declare %struct.fpdf_pageobject_t__* @FPDFPageObj_NewImageObj(%struct.fpdf_document_t__*) local_unnamed_addr #4

declare i32 @FPDFBitmap_GetWidth(%struct.fpdf_bitmap_t__*) local_unnamed_addr #4

declare i32 @FPDFBitmap_GetHeight(%struct.fpdf_bitmap_t__*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i8* @FPDFBitmap_GetBuffer(%struct.fpdf_bitmap_t__*) local_unnamed_addr #4

declare i32 @FPDFBitmap_GetStride(%struct.fpdf_bitmap_t__*) local_unnamed_addr #4

declare zeroext i1 @_ZN3gfx9JPEGCodec6EncodeERK8SkPixmapiPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkPixmap* dereferenceable(40), i32, %"class.std::__1::vector.191"*) local_unnamed_addr #4

declare %struct.fpdf_page_t__* @FPDFPage_New(%struct.fpdf_document_t__*, i32, double, double) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN10chrome_pdf12_GLOBAL__N_115GetBlockForJpegEPvmPhm(i8* nocapture readonly, i64, i8* nocapture, i64) #2 {
  %5 = add i64 %3, %1
  %6 = icmp ult i64 %5, %1
  br i1 %6, label %18, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i8* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = icmp ugt i64 %5, %13
  br i1 %14, label %18, label %15

15:                                               ; preds = %7
  %16 = inttoptr i64 %12 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %17, i64 %3, i1 false)
  br label %18

18:                                               ; preds = %4, %7, %15
  %19 = phi i32 [ 1, %15 ], [ 0, %7 ], [ 0, %4 ]
  ret i32 %19
}

declare i32 @FPDFImageObj_LoadJpegFileInline(%struct.fpdf_page_t__**, i32, %struct.fpdf_pageobject_t__*, %struct.FPDF_FILEACCESS*) local_unnamed_addr #4

declare i32 @FPDFImageObj_SetBitmap(%struct.fpdf_page_t__**, i32, %struct.fpdf_pageobject_t__*, %struct.fpdf_bitmap_t__*) local_unnamed_addr #4

declare i32 @FPDFImageObj_SetMatrix(%struct.fpdf_pageobject_t__*, double, double, double, double, double, double) local_unnamed_addr #4

declare void @FPDFPage_InsertObject(%struct.fpdf_page_t__*, %struct.fpdf_pageobject_t__*) local_unnamed_addr #4

declare i32 @FPDFPage_GenerateContent(%struct.fpdf_page_t__*) local_unnamed_addr #4

declare void @_ZN8printing13NupParametersC1Ev(%"class.printing::NupParameters"*) unnamed_addr #4

declare void @_ZN8printing13NupParameters13SetParametersEib(%"class.printing::NupParameters"*, i32, i1 zeroext) local_unnamed_addr #4

declare %struct.fpdf_document_t__* @FPDF_ImportNPagesToOne(%struct.fpdf_document_t__*, float, float, i64, i64) local_unnamed_addr #4

declare void @_ZN10chrome_pdf24PDFiumMemBufferFileWriteC1Ev(%"class.chrome_pdf::PDFiumMemBufferFileWrite"*) unnamed_addr #4

declare i32 @FPDF_SaveAsCopy(%struct.fpdf_document_t__*, %struct.FPDF_FILEWRITE_*, i64) local_unnamed_addr #4

declare void @_ZN10chrome_pdf24PDFiumMemBufferFileWrite10TakeBufferEv(%"class.std::__1::vector.191"* sret, %"class.chrome_pdf::PDFiumMemBufferFileWrite"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN10chrome_pdf24PDFiumMemBufferFileWriteD1Ev(%"class.chrome_pdf::PDFiumMemBufferFileWrite"*) unnamed_addr #6

declare i32 @FPDF_GetPageCount(%struct.fpdf_document_t__*) local_unnamed_addr #4

declare i32 @FPDFPage_GetRotation(%struct.fpdf_page_t__*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare float @_ZN10chrome_pdf20CalculateScaleFactorERKN3gfx4RectERKNS0_5SizeFEb(%"class.gfx::Rect"* dereferenceable(16), %"class.gfx::SizeF"* dereferenceable(8), i1 zeroext) local_unnamed_addr #4

declare i32 @FPDFPage_GetMediaBox(%struct.fpdf_page_t__*, float*, float*, float*, float*) local_unnamed_addr #4

declare i32 @FPDFPage_GetCropBox(%struct.fpdf_page_t__*, float*, float*, float*, float*) local_unnamed_addr #4

declare void @_ZN10chrome_pdf27CalculateMediaBoxAndCropBoxEbbbPNS_12PdfRectangleES1_(i1 zeroext, i1 zeroext, i1 zeroext, %"struct.chrome_pdf::PdfRectangle"*, %"struct.chrome_pdf::PdfRectangle"*) local_unnamed_addr #4

declare { <2 x float>, <2 x float> } @_ZN10chrome_pdf24CalculateClipBoxBoundaryERKNS_12PdfRectangleES2_(%"struct.chrome_pdf::PdfRectangle"* dereferenceable(16), %"struct.chrome_pdf::PdfRectangle"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN10chrome_pdf17ScalePdfRectangleEfPNS_12PdfRectangleE(float, %"struct.chrome_pdf::PdfRectangle"*) local_unnamed_addr #4

declare <2 x float> @_ZN10chrome_pdf28CalculateScaledClipBoxOffsetERKN3gfx4RectERKNS_12PdfRectangleE(%"class.gfx::Rect"* dereferenceable(16), %"struct.chrome_pdf::PdfRectangle"* dereferenceable(16)) local_unnamed_addr #4

declare <2 x float> @_ZN10chrome_pdf31CalculateNonScaledClipBoxOffsetEiiiRKNS_12PdfRectangleE(i32, i32, i32, %"struct.chrome_pdf::PdfRectangle"* dereferenceable(16)) local_unnamed_addr #4

declare void @FPDFPage_SetMediaBox(%struct.fpdf_page_t__*, float, float, float, float) local_unnamed_addr #4

declare void @FPDFPage_SetCropBox(%struct.fpdf_page_t__*, float, float, float, float) local_unnamed_addr #4

declare i32 @FPDFPage_TransFormWithClip(%struct.fpdf_page_t__*, %struct._FS_MATRIX_*, %struct._FS_RECTF_*) local_unnamed_addr #4

declare void @FPDFPage_TransformAnnots(%struct.fpdf_page_t__*, double, double, double, double, double, double) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #4

declare void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare i32 @FPDFPage_Flatten(%struct.fpdf_page_t__*, i32) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @FPDF_ClosePage(%struct.fpdf_page_t__*) local_unnamed_addr #4

declare void @FPDF_CloseDocument(%struct.fpdf_document_t__*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @FPDFBitmap_Destroy(%struct.fpdf_bitmap_t__*) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN10chrome_pdf12_GLOBAL__N_118ConvertDocToBufferENSt3__110unique_ptrI17fpdf_document_t__19FPDFDocumentDeleterEE: argument 0"}
!4 = distinct !{!4, !"_ZN10chrome_pdf12_GLOBAL__N_118ConvertDocToBufferENSt3__110unique_ptrI17fpdf_document_t__19FPDFDocumentDeleterEE"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN10chrome_pdf12_GLOBAL__N_118ConvertDocToBufferENSt3__110unique_ptrI17fpdf_document_t__19FPDFDocumentDeleterEE: argument 0"}
!8 = distinct !{!8, !"_ZN10chrome_pdf12_GLOBAL__N_118ConvertDocToBufferENSt3__110unique_ptrI17fpdf_document_t__19FPDFDocumentDeleterEE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN10chrome_pdf12_GLOBAL__N_127GetPageRangeStringFromRangeEPK27PP_PrintPageNumberRange_Devj: argument 0"}
!11 = distinct !{!11, !"_ZN10chrome_pdf12_GLOBAL__N_127GetPageRangeStringFromRangeEPK27PP_PrintPageNumberRange_Devj"}
