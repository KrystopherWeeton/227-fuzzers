; ModuleID = '../../third_party/webrtc/common_audio/signal_processing/filter_ar_fast_q12.c'
source_filename = "../../third_party/webrtc/common_audio/signal_processing/filter_ar_fast_q12.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcSpl_FilterARFastQ12(i16* nocapture readonly, i16* nocapture, i16* noalias nocapture readonly, i64, i64) local_unnamed_addr #0 {
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %103, label %7

7:                                                ; preds = %5
  %8 = add i64 %3, -1
  %9 = icmp eq i64 %8, 0
  %10 = load i16, i16* %2, align 2
  %11 = sext i16 %10 to i64
  %12 = add i64 %3, -2
  %13 = and i64 %8, 3
  %14 = icmp ult i64 %12, 3
  %15 = sub i64 %8, %13
  %16 = icmp eq i64 %13, 0
  br label %17

17:                                               ; preds = %86, %7
  %18 = phi i64 [ 0, %7 ], [ %101, %86 ]
  br i1 %9, label %86, label %19

19:                                               ; preds = %17
  br i1 %14, label %66, label %20

20:                                               ; preds = %19, %20
  %21 = phi i64 [ %63, %20 ], [ %8, %19 ]
  %22 = phi i64 [ %62, %20 ], [ 0, %19 ]
  %23 = phi i64 [ %64, %20 ], [ %15, %19 ]
  %24 = getelementptr inbounds i16, i16* %2, i64 %21
  %25 = load i16, i16* %24, align 2
  %26 = sext i16 %25 to i64
  %27 = sub nsw i64 %18, %21
  %28 = getelementptr inbounds i16, i16* %1, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = sext i16 %29 to i64
  %31 = mul nsw i64 %30, %26
  %32 = add nsw i64 %31, %22
  %33 = add i64 %21, -1
  %34 = getelementptr inbounds i16, i16* %2, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = sext i16 %35 to i64
  %37 = sub nsw i64 %18, %33
  %38 = getelementptr inbounds i16, i16* %1, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = sext i16 %39 to i64
  %41 = mul nsw i64 %40, %36
  %42 = add nsw i64 %41, %32
  %43 = add i64 %21, -2
  %44 = getelementptr inbounds i16, i16* %2, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = sext i16 %45 to i64
  %47 = sub nsw i64 %18, %43
  %48 = getelementptr inbounds i16, i16* %1, i64 %47
  %49 = load i16, i16* %48, align 2
  %50 = sext i16 %49 to i64
  %51 = mul nsw i64 %50, %46
  %52 = add nsw i64 %51, %42
  %53 = add i64 %21, -3
  %54 = getelementptr inbounds i16, i16* %2, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = sext i16 %55 to i64
  %57 = sub nsw i64 %18, %53
  %58 = getelementptr inbounds i16, i16* %1, i64 %57
  %59 = load i16, i16* %58, align 2
  %60 = sext i16 %59 to i64
  %61 = mul nsw i64 %60, %56
  %62 = add nsw i64 %61, %52
  %63 = add i64 %21, -4
  %64 = add i64 %23, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %20

66:                                               ; preds = %20, %19
  %67 = phi i64 [ undef, %19 ], [ %62, %20 ]
  %68 = phi i64 [ %8, %19 ], [ %63, %20 ]
  %69 = phi i64 [ 0, %19 ], [ %62, %20 ]
  br i1 %16, label %86, label %70

70:                                               ; preds = %66, %70
  %71 = phi i64 [ %83, %70 ], [ %68, %66 ]
  %72 = phi i64 [ %82, %70 ], [ %69, %66 ]
  %73 = phi i64 [ %84, %70 ], [ %13, %66 ]
  %74 = getelementptr inbounds i16, i16* %2, i64 %71
  %75 = load i16, i16* %74, align 2
  %76 = sext i16 %75 to i64
  %77 = sub nsw i64 %18, %71
  %78 = getelementptr inbounds i16, i16* %1, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i64
  %81 = mul nsw i64 %80, %76
  %82 = add nsw i64 %81, %72
  %83 = add i64 %71, -1
  %84 = add i64 %73, -1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %70, !llvm.loop !2

86:                                               ; preds = %66, %70, %17
  %87 = phi i64 [ 0, %17 ], [ %67, %66 ], [ %82, %70 ]
  %88 = getelementptr inbounds i16, i16* %0, i64 %18
  %89 = load i16, i16* %88, align 2
  %90 = sext i16 %89 to i64
  %91 = mul nsw i64 %90, %11
  %92 = sub nsw i64 %91, %87
  %93 = icmp sgt i64 %92, -134217728
  %94 = select i1 %93, i64 %92, i64 -134217728
  %95 = icmp slt i64 %94, 134215679
  %96 = select i1 %95, i64 %94, i64 134215679
  %97 = add nsw i64 %96, 2048
  %98 = lshr i64 %97, 12
  %99 = trunc i64 %98 to i16
  %100 = getelementptr inbounds i16, i16* %1, i64 %18
  store i16 %99, i16* %100, align 2
  %101 = add nuw i64 %18, 1
  %102 = icmp eq i64 %101, %4
  br i1 %102, label %103, label %17

103:                                              ; preds = %86, %5
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
