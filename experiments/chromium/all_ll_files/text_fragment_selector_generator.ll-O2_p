; ModuleID = '../../third_party/blink/renderer/core/page/scrolling/text_fragment_selector_generator.cc'
source_filename = "../../third_party/blink/renderer/core/page/scrolling/text_fragment_selector_generator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.186", i32, [4 x i8], %"class.std::__1::unique_ptr.322", %"class.std::__1::unique_ptr.322", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.332", %"class.std::__1::unique_ptr.338", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.350", %"class.std::__1::unique_ptr.356", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.363", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.237", %"class.std::__1::unique_ptr.237", %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.279", %"class.std::__1::unique_ptr.302", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.222" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.222" = type { %"struct.std::__1::__atomic_base.223" }
%"struct.std::__1::__atomic_base.223" = type { %"struct.std::__1::__atomic_base.224" }
%"struct.std::__1::__atomic_base.224" = type { %"struct.std::__1::__cxx_atomic_impl.225" }
%"struct.std::__1::__cxx_atomic_impl.225" = type { %"struct.std::__1::__cxx_atomic_base_impl.226" }
%"struct.std::__1::__cxx_atomic_base_impl.226" = type { i64 }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::Worklist.233"* }
%"class.blink::Worklist.233" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.222" }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::Worklist.240"* }
%"class.blink::Worklist.240" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.222" }
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.blink::Worklist.247"* }
%"class.blink::Worklist.247" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.222" }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::Worklist.254"* }
%"class.blink::Worklist.254" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.222" }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::Worklist.261"* }
%"class.blink::Worklist.261" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.222" }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::Worklist.268"* }
%"class.blink::Worklist.268" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.222" }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::Worklist.275"* }
%"class.blink::Worklist.275" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.222" }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.282", %"class.std::__1::__compressed_pair.289", %"class.std::__1::__compressed_pair.294", %"class.std::__1::__compressed_pair.296", [4 x i8] }>
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284", %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { i64 }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { float }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.305", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.314" }
%"class.WTF::Vector.314" = type { %"class.WTF::VectorBuffer.315" }
%"class.WTF::VectorBuffer.315" = type { %"class.WTF::VectorBufferBase.316" }
%"class.WTF::VectorBufferBase.316" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.330" }
%"class.WTF::VectorBuffer.330" = type { %"class.WTF::VectorBufferBase.331" }
%"class.WTF::VectorBufferBase.331" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.344" }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.233"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.240"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.247"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.254"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.261"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.594" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.362 }
%class.scoped_refptr.362 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.363" = type { %"struct.std::__1::__atomic_base.364" }
%"struct.std::__1::__atomic_base.364" = type { %"struct.std::__1::__cxx_atomic_impl.365" }
%"struct.std::__1::__cxx_atomic_impl.365" = type { %"struct.std::__1::__cxx_atomic_base_impl.366" }
%"struct.std::__1::__cxx_atomic_base_impl.366" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i32 }
%"class.blink::TextFragmentSelectorGenerator" = type { %"class.blink::TextFragmentFinder::Client", %"class.blink::Member", %"class.blink::Member.0", %"class.std::__1::unique_ptr", %"class.base::OnceCallback", i32, i32, %"class.absl::optional", %"class.absl::optional.16", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, %"class.base::TimeTicks", %"class.blink::Member.21" }
%"class.blink::TextFragmentFinder::Client" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::LocalFrame"* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.4", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.134", %"class.WTF::Vector.134", i8, i32, %"class.blink::Member.140", %"class.blink::Member.142", %"class.blink::Member.144", %"class.blink::Member.146", %"class.blink::Member.148", %"class.blink::Member.150", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.158", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.164", %"class.blink::Member.166", %"class.blink::Member.93", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.169", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.55", %"class.blink::Member.0", %"class.blink::Member.55", %"class.blink::Member.55", %"class.blink::Member.55", %"class.blink::UserActionElementSet", %"class.blink::Member.386", double, double, i64, i64, %"class.blink::HeapHashSet.388", %"class.blink::HeapHashSet.395", i16, i8, %"class.blink::Member.402", %"class.blink::Member.404", %"class.blink::Member.406", %"class.blink::Member.408", %"class.blink::TextLinkColors", %"class.blink::Member.410", i8, [7 x i8], %"class.blink::HeapHashMap.412", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.55", %"class.WTF::Vector.419", %"class.blink::Member.424", %"class.blink::Member.426", i8, %"class.blink::Member.55", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.428", %"class.blink::HeapVector.430", %"class.std::__1::unique_ptr.438", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.444", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.457", %"class.WTF::Vector.459", i8, i8, %"class.std::__1::unique_ptr.464", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.470", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.478", i8, i32, %"class.blink::Member.480", %"class.blink::Member.482", %"class.blink::Member.484", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.486", %"class.WTF::HashMap.488", %"class.blink::Member.493", %"class.blink::Member.495", %"class.blink::Member.497", %"class.blink::Member.499", %"class.blink::Member.4", %"class.blink::Member.4", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.501", i8, i32, %"class.blink::Member.508", %"class.blink::Member.510", i32, %"class.blink::Member.512", %"class.blink::Member.514", %"class.blink::Member.516", %"class.std::__1::unique_ptr.518", i64, %"class.std::__1::unique_ptr.524", i32, i32, %"class.blink::Member.530", %"class.blink::Member.532", %"class.blink::Member.534", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.536", %"class.WTF::Vector.538", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.543", %"class.blink::Member.550", %"class.std::__1::unique_ptr.552", %"class.blink::Member.558", i8, i8, %"class.WTF::String", %"class.blink::Member.560", i8, [7 x i8], %"class.blink::HeapHashMap.562", %"class.blink::HeapObserverSet", %"class.blink::Member.576", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.578", i32, i8, i8, %"class.blink::WeakMember.580", %"class.blink::Member.581" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.6", %"class.blink::Member.6" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.6", %"class.blink::Member.37", %"class.blink::Member.6", %"class.blink::Member.6", %"class.blink::Member.39" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.43", %"class.blink::Member.4", %"class.blink::Member.37", %"class.blink::Member.45", %"class.blink::Member.45", %"class.blink::Member.76", %"class.blink::Member.78", %"class.blink::Member.80", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.85", %"class.blink::HeapVector.87" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.51" }
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.55", i32, %"class.blink::HeapVector" }
%"class.blink::Member.76" = type { %"class.blink::MemberBase.77" }
%"class.blink::MemberBase.77" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.78" = type { %"class.blink::MemberBase.79" }
%"class.blink::MemberBase.79" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.82" }
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::HeapHashMap.84"* }
%"class.blink::HeapHashMap.84" = type opaque
%"class.blink::Member.85" = type { %"class.blink::MemberBase.86" }
%"class.blink::MemberBase.86" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.87" = type { %"class.WTF::Vector.90" }
%"class.WTF::Vector.90" = type { %"class.WTF::VectorBuffer.91" }
%"class.WTF::VectorBuffer.91" = type { %"class.WTF::VectorBufferBase.92" }
%"class.WTF::VectorBufferBase.92" = type { %"class.blink::Member.93"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.127" }
%"class.blink::HeapHashMap.127" = type { %"class.WTF::HashMap.130" }
%"class.WTF::HashMap.130" = type { %"class.WTF::HashTable.131" }
%"class.WTF::HashTable.131" = type <{ %"struct.WTF::KeyValuePair.133"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.133" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.134" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"class.base::OnceCallback.137"*, i32, i32 }
%"class.base::OnceCallback.137" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.11" }
%"class.blink::Member.140" = type { %"class.blink::MemberBase.141" }
%"class.blink::MemberBase.141" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.599", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.672", i32, i8, [3 x i8], %"class.blink::HeapVector.674", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.682", %"class.blink::Member.684", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.693", %"class.blink::Member.821", %"class.blink::Member.823", i8, [7 x i8] }>
%"class.blink::Supplementable.599" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.600" }
%"class.blink::HeapHashMap.600" = type { %"class.WTF::HashMap.603" }
%"class.WTF::HashMap.603" = type { %"class.WTF::HashTable.604" }
%"class.WTF::HashTable.604" = type <{ %"struct.WTF::KeyValuePair.606"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.606" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.615" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.607" }
%"class.blink::HeapObserverSet.607" = type { i32, [4 x i8], %"class.blink::HeapHashSet.608" }
%"class.blink::HeapHashSet.608" = type { %"class.WTF::HashSet.611" }
%"class.WTF::HashSet.611" = type { %"class.WTF::HashTable.612" }
%"class.WTF::HashTable.612" = type <{ %"class.blink::WeakMember.614"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.614" = type opaque
%"class.blink::Supplementable.615" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.616" }
%"class.blink::HeapHashMap.616" = type { %"class.WTF::HashMap.619" }
%"class.WTF::HashMap.619" = type { %"class.WTF::HashTable.620" }
%"class.WTF::HashTable.620" = type <{ %"struct.WTF::KeyValuePair.622"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.622" = type { i8*, %"class.blink::Member.1280" }
%"class.blink::Member.1280" = type { %"class.blink::MemberBase.1281" }
%"class.blink::MemberBase.1281" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1282" }
%"class.blink::Member.1282" = type { %"class.blink::MemberBase.1283" }
%"class.blink::MemberBase.1283" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.623, %"class.std::__1::unique_ptr.632", %"class.std::__1::unique_ptr.632", %"class.std::__1::unique_ptr.662", %"class.std::__1::unique_ptr.662", %"class.blink::Member.142", i32, [4 x i8], %"class.WTF::HashSet.668", i32, i32 }
%class.scoped_refptr.623 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.624", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.626", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.631 }
%"class.WTF::RefCounted.624" = type { %"class.base::RefCounted.625" }
%"class.base::RefCounted.625" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.626" = type { %"class.absl::optional_internal::optional_data.627" }
%"class.absl::optional_internal::optional_data.627" = type { %"class.absl::optional_internal::optional_data_base.628" }
%"class.absl::optional_internal::optional_data_base.628" = type { %"class.absl::optional_internal::optional_data_dtor_base.629" }
%"class.absl::optional_internal::optional_data_dtor_base.629" = type { i8, %union.anon.630 }
%union.anon.630 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.631 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.632" = type { %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.649", %"class.std::__1::map.658"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.626" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.637 }
%union.anon.637 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.641", %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::map.649" = type { %"class.std::__1::__tree.650" }
%"class.std::__1::__tree.650" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.651", %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::map.658" = type opaque
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.668" = type { %"class.WTF::HashTable.669" }
%"class.WTF::HashTable.669" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.674" = type { %"class.WTF::Vector.677" }
%"class.WTF::Vector.677" = type { %"class.WTF::VectorBuffer.678" }
%"class.WTF::VectorBuffer.678" = type { %"class.WTF::VectorBufferBase.679" }
%"class.WTF::VectorBufferBase.679" = type { %"class.blink::Member.680"*, i32, i32 }
%"class.blink::Member.680" = type opaque
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.686", i32, i32 }
%"class.blink::HeapHashMap.686" = type { %"class.WTF::HashMap.689" }
%"class.WTF::HashMap.689" = type { %"class.WTF::HashTable.690" }
%"class.WTF::HashTable.690" = type <{ %"struct.WTF::KeyValuePair.692"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.692" = type opaque
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.696" }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.699" }
%"class.WTF::Vector.699" = type { %"class.WTF::VectorBuffer.700" }
%"class.WTF::VectorBuffer.700" = type { %"class.WTF::VectorBufferBase.701" }
%"class.WTF::VectorBufferBase.701" = type { %"class.mojo::StructPtr.702"*, i32, i32 }
%"class.mojo::StructPtr.702" = type { %"class.std::__1::unique_ptr.703" }
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.706", %"class.WTF::HashMap.713", %"class.WTF::HashMap.718", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.723", i32, %"class.mojo::StructPtr.728", %"class.WTF::Vector.723" }
%"class.mojo::StructPtr.706" = type { %"class.std::__1::unique_ptr.707" }
%"class.std::__1::unique_ptr.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.713" = type { %"class.WTF::HashTable.714" }
%"class.WTF::HashTable.714" = type <{ %"struct.WTF::KeyValuePair.717"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.717" = type opaque
%"class.WTF::HashMap.718" = type { %"class.WTF::HashTable.719" }
%"class.WTF::HashTable.719" = type <{ %"struct.WTF::KeyValuePair.722"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.722" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.728" = type { %"class.std::__1::unique_ptr.729" }
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.723", i8, i8, [6 x i8] }>
%"class.WTF::Vector.723" = type { %"class.WTF::VectorBuffer.724" }
%"class.WTF::VectorBuffer.724" = type { %"class.WTF::VectorBufferBase.725" }
%"class.WTF::VectorBufferBase.725" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.812" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.743", i32 }>
%"class.std::__1::unique_ptr.743" = type { %"class.std::__1::__compressed_pair.744" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.746", %"class.absl::optional.747", %"class.absl::optional.752", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.765", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.787", %"class.std::__1::map.798", i64, %"class.base::OnceCallback.137", %"class.base::OnceCallback.807", i8, %class.scoped_refptr.757, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.808" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.746" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.747" = type { %"class.absl::optional_internal::optional_data.748" }
%"class.absl::optional_internal::optional_data.748" = type { %"class.absl::optional_internal::optional_data_base.749" }
%"class.absl::optional_internal::optional_data_base.749" = type { %"class.absl::optional_internal::optional_data_dtor_base.750" }
%"class.absl::optional_internal::optional_data_dtor_base.750" = type { i8, %union.anon.751 }
%union.anon.751 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.752" = type { %"class.absl::optional_internal::optional_data.753" }
%"class.absl::optional_internal::optional_data.753" = type { %"class.absl::optional_internal::optional_data_base.754" }
%"class.absl::optional_internal::optional_data_base.754" = type { %"class.absl::optional_internal::optional_data_dtor_base.755" }
%"class.absl::optional_internal::optional_data_dtor_base.755" = type { i8, %union.anon.756 }
%union.anon.756 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.137" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.757, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.758" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.758" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.371 }
%class.scoped_refptr.371 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.372", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.372" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.373" }
%"struct.std::__1::atomic.373" = type { %"struct.std::__1::__atomic_base.374" }
%"struct.std::__1::__atomic_base.374" = type { %"struct.std::__1::__atomic_base.375" }
%"struct.std::__1::__atomic_base.375" = type { %"struct.std::__1::__cxx_atomic_impl.376" }
%"struct.std::__1::__cxx_atomic_impl.376" = type { %"struct.std::__1::__cxx_atomic_base_impl.377" }
%"struct.std::__1::__cxx_atomic_base_impl.377" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.763 }
%class.scoped_refptr.763 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.825", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.757, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.825" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.764 }
%class.scoped_refptr.764 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.768", %class.scoped_refptr.769 }
%"class.base::RepeatingCallback.768" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.769 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.770", [4 x i8] }>
%"class.base::RefCountedThreadSafe.770" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.774", %"class.std::__1::unique_ptr.780", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.786" }
%"class.std::__1::unique_ptr.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.786" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.787" = type { %"class.std::__1::__tree.788" }
%"class.std::__1::__tree.788" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.789", %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::map.798" = type { %"class.std::__1::__tree.799" }
%"class.std::__1::__tree.799" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.800", %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.base::OnceCallback.807" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.757 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.370" }>
%"class.base::RefCountedThreadSafe.370" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.137" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.808" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.812" = type { %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.152" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::KURL"* }
%"class.blink::Member.164" = type { %"class.blink::MemberBase.165" }
%"class.blink::MemberBase.165" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.166" = type { %"class.blink::MemberBase.167" }
%"class.blink::MemberBase.167" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.95", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.97, %"class.WTF::Vector.98", %"class.WTF::Vector.98", %"class.blink::Member.6", %"class.blink::Member.103", %"class.blink::HeapHashSet", %"class.blink::Member.4", %"class.WTF::HashSet.111", %"class.WTF::TextPosition", %"class.blink::Member.115", %"class.blink::HeapVector.117", %"class.blink::Member.124" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.95" = type { %"class.blink::MemberBase.96" }
%"class.blink::MemberBase.96" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.97 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.98" = type { %"class.WTF::VectorBuffer.99" }
%"class.WTF::VectorBuffer.99" = type { %"class.WTF::VectorBufferBase.100" }
%"class.WTF::VectorBufferBase.100" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.105" }
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.109" }
%"class.WTF::HashTable.109" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.38" }
%"class.WTF::HashSet.111" = type { %"class.WTF::HashTable.112" }
%"class.WTF::HashTable.112" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.117" = type { %"class.WTF::Vector.120" }
%"class.WTF::Vector.120" = type { %"class.WTF::VectorBuffer.121" }
%"class.WTF::VectorBuffer.121" = type { %"class.WTF::VectorBufferBase.122" }
%"class.WTF::VectorBufferBase.122" = type { %"class.blink::Member.103"*, i32, i32 }
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.168 }
%class.scoped_refptr.168 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.169" = type { %"class.WTF::VectorBuffer.170" }
%"class.WTF::VectorBuffer.170" = type { %"class.WTF::VectorBufferBase.171" }
%"class.WTF::VectorBufferBase.171" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.172 }
%class.scoped_refptr.172 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.173", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.173" = type { %"class.base::RefCounted.174" }
%"class.base::RefCounted.174" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.177" }
%"class.blink::HeapHashMap.177" = type { %"class.WTF::HashMap.180" }
%"class.WTF::HashMap.180" = type { %"class.WTF::HashTable.181" }
%"class.WTF::HashTable.181" = type <{ %"struct.WTF::KeyValuePair.183"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.183" = type { %"class.blink::WeakMember.184", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.184" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.379" }
%"class.blink::HeapHashMap.379" = type { %"class.WTF::HashMap.382" }
%"class.WTF::HashMap.382" = type { %"class.WTF::HashTable.383" }
%"class.WTF::HashTable.383" = type <{ %"struct.WTF::KeyValuePair.385"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.385" = type opaque
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.388" = type { %"class.WTF::HashSet.391" }
%"class.WTF::HashSet.391" = type { %"class.WTF::HashTable.392" }
%"class.WTF::HashTable.392" = type <{ %"class.blink::WeakMember.394"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.394" = type opaque
%"class.blink::HeapHashSet.395" = type { %"class.WTF::HashSet.398" }
%"class.WTF::HashSet.398" = type { %"class.WTF::HashTable.399" }
%"class.WTF::HashTable.399" = type <{ %"class.blink::WeakMember.401"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.401" = type opaque
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.37", %"class.blink::HeapVector.87" }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.412" = type { %"class.WTF::HashMap.415" }
%"class.WTF::HashMap.415" = type { %"class.WTF::HashTable.416" }
%"class.WTF::HashTable.416" = type <{ %"struct.WTF::KeyValuePair.418"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.418" = type opaque
%"class.WTF::Vector.419" = type { %"class.WTF::VectorBuffer.420" }
%"class.WTF::VectorBuffer.420" = type { %"class.WTF::VectorBufferBase.421" }
%"class.WTF::VectorBufferBase.421" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.58" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.57 }
%class.scoped_refptr.57 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.62", %"class.blink::Member.64", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.62" = type { %"class.WTF::SingleThreadedBitField.63" }
%"class.WTF::SingleThreadedBitField.63" = type { i32 }
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.66 }
%class.scoped_refptr.66 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.67", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.67" = type { %"class.base::RefCounted.68" }
%"class.base::RefCounted.68" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.430" = type { %"class.WTF::Vector.433" }
%"class.WTF::Vector.433" = type { %"class.WTF::VectorBuffer.434" }
%"class.WTF::VectorBuffer.434" = type { %"class.WTF::VectorBufferBase.435" }
%"class.WTF::VectorBufferBase.435" = type { %"class.blink::Member.436"*, i32, i32 }
%"class.blink::Member.436" = type opaque
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.444" = type { %"class.WTF::HashSet.447" }
%"class.WTF::HashSet.447" = type { %"class.WTF::HashTable.448" }
%"class.WTF::HashTable.448" = type <{ %"class.blink::WeakMember.450"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.450" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.451", i32, [4 x i8] }>
%"class.WTF::Vector.451" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %"struct.std::__1::pair.454"*, i32, i32 }
%"struct.std::__1::pair.454" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.72" }
%"class.WTF::Vector.72" = type { %"class.WTF::VectorBuffer.73" }
%"class.WTF::VectorBuffer.73" = type { %"class.WTF::VectorBufferBase.74" }
%"class.WTF::VectorBufferBase.74" = type { %"class.blink::Member.55"*, i32, i32 }
%"class.blink::HeapVector.470" = type { %"class.WTF::Vector.473" }
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475" }
%"class.WTF::VectorBufferBase.475" = type { %"class.blink::Member.476"*, i32, i32 }
%"class.blink::Member.476" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.4" }
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.488" = type { %"class.WTF::HashTable.489" }
%"class.WTF::HashTable.489" = type <{ %"struct.WTF::KeyValuePair.492"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.492" = type opaque
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.378", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.369, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.369 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.378" = type { %"class.blink::MemberBase.5" }
%"class.blink::HeapHashSet.501" = type { %"class.WTF::HashSet.504" }
%"class.WTF::HashSet.504" = type { %"class.WTF::HashTable.505" }
%"class.WTF::HashTable.505" = type <{ %"class.blink::Member.507"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.507" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.538" = type { %"class.WTF::VectorBuffer.539" }
%"class.WTF::VectorBuffer.539" = type { %"class.WTF::VectorBufferBase.540" }
%"class.WTF::VectorBufferBase.540" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.543" = type { %"class.WTF::HashMap.546" }
%"class.WTF::HashMap.546" = type { %"class.WTF::HashTable.547" }
%"class.WTF::HashTable.547" = type <{ %"struct.WTF::KeyValuePair.549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.549" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.562" = type { %"class.WTF::HashMap.565" }
%"class.WTF::HashMap.565" = type { %"class.WTF::HashTable.566" }
%"class.WTF::HashTable.566" = type <{ %"struct.WTF::KeyValuePair.568"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.568" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.569" }
%"class.blink::HeapHashSet.569" = type { %"class.WTF::HashSet.572" }
%"class.WTF::HashSet.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"class.blink::WeakMember.575"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.575" = type opaque
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.4", %"class.blink::HeapHashSet.585", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.592", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.585" = type { %"class.WTF::HashSet.588" }
%"class.WTF::HashSet.588" = type { %"class.WTF::HashTable.589" }
%"class.WTF::HashTable.589" = type <{ %"class.blink::Member.591"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.591" = type opaque
%"class.blink::HeapTaskRunnerTimer.592" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.593", { i64, i64 } }
%"class.blink::WeakMember.593" = type { %"class.blink::MemberBase.579" }
%"class.blink::WeakMember.580" = type { %"class.blink::MemberBase.7" }
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.6", %"class.blink::Member.6", i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::TextFragmentSelector"* }
%"class.blink::TextFragmentSelector" = type { i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i8 }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::TextFragmentFinder"* }
%"class.blink::TextFragmentFinder" = type { i32 (...)**, i32, %"class.blink::TextFragmentFinder::Client"*, %"class.blink::TextFragmentSelector", %"class.blink::Member.4", %"class.blink::Member.25", %"class.blink::Member.29", %"class.blink::Member.29", %"class.blink::Member.29", %"class.blink::Member.29", %"class.blink::Member.29", %"class.blink::Member.33" }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::RelocatablePosition"* }
%"class.blink::RelocatablePosition" = type { %"class.blink::Member.0", %"class.blink::PositionTemplate" }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.6", i32, i32 }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::RangeInFlatTree"* }
%"class.blink::RangeInFlatTree" = type { %"class.blink::Member.25", %"class.blink::Member.25" }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::FindBufferRunner"* }
%"class.blink::FindBufferRunner" = type { i32 (...)** }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.867", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.875", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.889", %"class.blink::FrameLoader", %"class.blink::Member.910", %"class.blink::Member.55", %"class.blink::Member.912", %"class.blink::Member.914", %"class.blink::Member.916", %"class.blink::Member.918", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.920", %class.scoped_refptr.922, %"class.blink::Member.923", %"class.blink::Member.925", %"class.blink::Member.927", %"class.blink::Member.929", %"class.blink::Member.931", %"class.blink::Member.933", %"class.blink::Member.935", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.939", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.945", %"class.std::__1::unique_ptr.946", %"class.absl::optional.855", i32, [4 x i8], %"class.std::__1::unique_ptr.952", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.960", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.965", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.970", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.973", %"class.blink::Member.975", %"class.blink::Member.977", %"class.blink::Member.979", %"class.mojo::StructPtr.982", %"class.blink::Member.991", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.993", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.830", %"class.blink::Member.832", %"class.blink::Member.834", i8, i32, i8, i32, %"class.blink::Member.836", %"class.blink::Member.838", %"class.blink::FrameLifecycle", %"class.blink::Member.828", %"class.blink::Member.828", %"class.blink::Member.828", %"class.blink::Member.828", %"class.blink::Member.828", %"class.blink::Member.828", %"class.blink::Member", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.848", i8, %"class.base::UnguessableToken", %"class.absl::optional.850", %"class.absl::optional.855", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.828", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.830" = type { %"class.blink::MemberBase.831" }
%"class.blink::MemberBase.831" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.832" = type { %"class.blink::MemberBase.833" }
%"class.blink::MemberBase.833" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.836" = type { %"class.blink::MemberBase.837" }
%"class.blink::MemberBase.837" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.828", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.840" }
%"class.std::__1::vector.840" = type { %"class.std::__1::__vector_base.841" }
%"class.std::__1::__vector_base.841" = type { %"struct.std::__1::pair.842"*, %"struct.std::__1::pair.842"*, %"class.std::__1::__compressed_pair.843" }
%"struct.std::__1::pair.842" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::pair.842"* }
%"class.blink::Member.848" = type { %"class.blink::MemberBase.849" }
%"class.blink::MemberBase.849" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.850" = type { %"class.absl::optional_internal::optional_data.851" }
%"class.absl::optional_internal::optional_data.851" = type { %"class.absl::optional_internal::optional_data_base.852" }
%"class.absl::optional_internal::optional_data_base.852" = type { %"class.absl::optional_internal::optional_data_dtor_base.853" }
%"class.absl::optional_internal::optional_data_dtor_base.853" = type { i8, %union.anon.854 }
%union.anon.854 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.860" }
%"class.blink::HeapHashSet.860" = type { %"class.WTF::HashSet.863" }
%"class.WTF::HashSet.863" = type { %"class.WTF::HashTable.864" }
%"class.WTF::HashTable.864" = type <{ %"class.blink::WeakMember.866"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.866" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.867" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.868" }
%"class.blink::HeapHashMap.868" = type { %"class.WTF::HashMap.871" }
%"class.WTF::HashMap.871" = type { %"class.WTF::HashTable.872" }
%"class.WTF::HashTable.872" = type <{ %"struct.WTF::KeyValuePair.874"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.874" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.878", %"class.base::WeakPtrFactory.883" }
%"class.WTF::HashMap.878" = type { %"class.WTF::HashTable.879" }
%"class.WTF::HashTable.879" = type <{ %"struct.WTF::KeyValuePair.882"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.882" = type opaque
%"class.base::WeakPtrFactory.883" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.887" }
%"class.blink::Member.887" = type { %"class.blink::MemberBase.888" }
%"class.blink::MemberBase.888" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1286" }
%"class.blink::WeakMember.1286" = type { %"class.blink::MemberBase.1287" }
%"class.blink::MemberBase.1287" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1288", i64, %"class.std::__1::map.1289", i8*, i64, %"class.base::WeakPtrFactory.1298" }
%"class.base::RepeatingCallback.1288" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1289" = type { %"class.std::__1::__tree.1290" }
%"class.std::__1::__tree.1290" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1291", %"class.std::__1::__compressed_pair.1295" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"class.std::__1::__compressed_pair.1295" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.base::WeakPtrFactory.1298" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.889" = type { %"class.WTF::HashSet.892" }
%"class.WTF::HashSet.892" = type { %"class.WTF::HashTable.893" }
%"class.WTF::HashTable.893" = type <{ %"class.blink::WeakMember.895"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.895" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member", %"class.blink::Member.896", %"class.blink::Member.898", %"class.std::__1::unique_ptr.900", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.906" }
%"class.blink::Member.896" = type { %"class.blink::MemberBase.897" }
%"class.blink::MemberBase.897" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.898" = type { %"class.blink::MemberBase.899" }
%"class.blink::MemberBase.899" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.900" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.906" = type { %"class.WTF::HashTable.907" }
%"class.WTF::HashTable.907" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.910" = type { %"class.blink::MemberBase.911" }
%"class.blink::MemberBase.911" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1000", %"class.blink::Member", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1005", i8, i32, %"class.blink::Color", %"class.absl::optional.1007", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1012", %"class.blink::Member.1014", %"class.blink::Member.1014", %"class.std::__1::unique_ptr.1017", i32, [4 x i8], %"class.WTF::HashSet.1020", %"class.blink::Member.1027", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1029", %"class.blink::HeapHashSet.1036", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1044", i8, %"class.blink::Member.1050", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1062", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1076", i8, %"class.std::__1::unique_ptr.1082", %"class.std::__1::unique_ptr.1199", %"class.WTF::Vector.1205", i32, %class.scoped_refptr.1210, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1211", %"class.blink::Member.1213", %"class.blink::Member.1215", %"class.blink::HeapHashSet.1217", %"class.blink::HeapHashSet.1224", %"class.std::__1::unique_ptr.1231", %"class.std::__1::unique_ptr.1238", %"class.WTF::Vector.134" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1000" = type { %"class.WTF::HashTable.1001" }
%"class.WTF::HashTable.1001" = type <{ %class.scoped_refptr.1004*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1004 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1005" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1006", { i64, i64 } }
%"class.blink::WeakMember.1006" = type { %"class.blink::MemberBase.911" }
%"class.absl::optional.1007" = type { %"class.absl::optional_internal::optional_data.1008" }
%"class.absl::optional_internal::optional_data.1008" = type { %"class.absl::optional_internal::optional_data_base.1009" }
%"class.absl::optional_internal::optional_data_base.1009" = type { %"class.absl::optional_internal::optional_data_dtor_base.1010" }
%"class.absl::optional_internal::optional_data_dtor_base.1010" = type { i8, %union.anon.1011 }
%union.anon.1011 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::HeapHashSet.1016"* }
%"class.blink::HeapHashSet.1016" = type opaque
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.WTF::HashSet.1020"* }
%"class.WTF::HashSet.1020" = type { %"class.WTF::HashTable.1021" }
%"class.WTF::HashTable.1021" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1029" = type { %"class.WTF::HashSet.1032" }
%"class.WTF::HashSet.1032" = type { %"class.WTF::HashTable.1033" }
%"class.WTF::HashTable.1033" = type <{ %"class.blink::Member.1035"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1035" = type opaque
%"class.blink::HeapHashSet.1036" = type { %"class.WTF::HashSet.1039" }
%"class.WTF::HashSet.1039" = type { %"class.WTF::HashTable.1040" }
%"class.WTF::HashTable.1040" = type <{ %"class.blink::Member.1042"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1044" = type { %"class.std::__1::__compressed_pair.1045" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.1046" }
%"struct.std::__1::__compressed_pair_elem.1046" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1054", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1054" = type { %"class.WTF::HashTable.1055" }
%"class.WTF::HashTable.1055" = type <{ %"struct.WTF::KeyValuePair.1057"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1057" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1058", i32, i32 }
%"class.WTF::Vector.1058" = type { %"class.WTF::VectorBuffer.1059" }
%"class.WTF::VectorBuffer.1059" = type { %"class.WTF::VectorBufferBase.1060" }
%"class.WTF::VectorBufferBase.1060" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1062" = type { %"class.WTF::LinkedHashSet.1065" }
%"class.WTF::LinkedHashSet.1065" = type { %"class.WTF::HashMap.1066", %"class.WTF::VectorBackedLinkedList.1070" }
%"class.WTF::HashMap.1066" = type { %"class.WTF::HashTable.1067" }
%"class.WTF::HashTable.1067" = type <{ %"struct.WTF::KeyValuePair.1069"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1069" = type opaque
%"class.WTF::VectorBackedLinkedList.1070" = type { %"class.WTF::Vector.1071", i32, i32 }
%"class.WTF::Vector.1071" = type { %"class.WTF::VectorBuffer.1072" }
%"class.WTF::VectorBuffer.1072" = type { %"class.WTF::VectorBufferBase.1073" }
%"class.WTF::VectorBufferBase.1073" = type { %"class.WTF::VectorBackedLinkedListNode.1074"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1074" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1082" = type { %"class.std::__1::__compressed_pair.1083" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1085, %class.scoped_refptr.1085, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1176", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1181", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1085 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1086", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1093" }
%"class.WTF::RefCounted.1086" = type { %"class.base::RefCounted.1087" }
%"class.base::RefCounted.1087" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1088", i32, [4 x i8] }>
%"class.WTF::Vector.1088" = type { %"class.WTF::VectorBuffer.1089" }
%"class.WTF::VectorBuffer.1089" = type { %"class.WTF::VectorBufferBase.1090" }
%"class.WTF::VectorBufferBase.1090" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1093" = type { %"class.WTF::VectorBuffer.1094" }
%"class.WTF::VectorBuffer.1094" = type { %"class.WTF::VectorBufferBase.1095" }
%"class.WTF::VectorBufferBase.1095" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1099", %"class.std::__1::unique_ptr.1148", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1096, %class.scoped_refptr.1097, %class.scoped_refptr.1098 }
%class.scoped_refptr.1096 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1112", i8, i8, %class.scoped_refptr.1096, i32, i32 }
%"class.WTF::RefCounted.1112" = type { %"class.base::RefCounted.1113" }
%"class.base::RefCounted.1113" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1097 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1267" }
%"class.blink::PaintPropertyNode.1267" = type { %"class.WTF::RefCounted.1268", i8, i8, %class.scoped_refptr.1097, i32, i32 }
%"class.WTF::RefCounted.1268" = type { %"class.base::RefCounted.1269" }
%"class.base::RefCounted.1269" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1098 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1264" }
%"class.blink::PaintPropertyNode.1264" = type { %"class.WTF::RefCounted.1265", i8, i8, %class.scoped_refptr.1098, i32, i32 }
%"class.WTF::RefCounted.1265" = type { %"class.base::RefCounted.1266" }
%"class.base::RefCounted.1266" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1099" = type { %"class.std::__1::__compressed_pair.1100" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1102", %"class.WTF::Vector.1107", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1102" = type { %"class.WTF::VectorBuffer.1103" }
%"class.WTF::VectorBuffer.1103" = type { %"class.WTF::VectorBufferBase.1104" }
%"class.WTF::VectorBufferBase.1104" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1107" = type { %"class.WTF::VectorBuffer.1108" }
%"class.WTF::VectorBuffer.1108" = type { %"class.WTF::VectorBufferBase.1109" }
%"class.WTF::VectorBufferBase.1109" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1127" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1120, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1121", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1114" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1114" = type { %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1120 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1249", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1249" = type { %"class.WTF::RefCounted.1250", i8, i8, %class.scoped_refptr.1120, i32, i32 }
%"class.WTF::RefCounted.1250" = type { %"class.base::RefCounted.1251" }
%"class.base::RefCounted.1251" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1252" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1252" = type { %"class.absl::optional_internal::optional_data.1253" }
%"class.absl::optional_internal::optional_data.1253" = type { %"class.absl::optional_internal::optional_data_base.1254" }
%"class.absl::optional_internal::optional_data_base.1254" = type { %"class.absl::optional_internal::optional_data_dtor_base.1255" }
%"class.absl::optional_internal::optional_data_dtor_base.1255" = type { i8, %union.anon.1256 }
%union.anon.1256 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1257", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1257" = type { %"class.std::__1::__vector_base.1258" }
%"class.std::__1::__vector_base.1258" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1259" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.1260" }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1121" = type { %"class.std::__1::__compressed_pair.1122" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1127" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1130", %"class.std::__1::unique_ptr.1136", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1130" = type { %"class.std::__1::__compressed_pair.1131" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.1132" }
%"struct.std::__1::__compressed_pair_elem.1132" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1136" = type { %"class.std::__1::__compressed_pair.1137" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1148" = type { %"class.std::__1::__compressed_pair.1149" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.1150" }
%"struct.std::__1::__compressed_pair_elem.1150" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1151", %"class.absl::optional.1151" }
%"class.absl::optional.1151" = type { %"class.absl::optional_internal::optional_data.1152" }
%"class.absl::optional_internal::optional_data.1152" = type { %"class.absl::optional_internal::optional_data_base.1153" }
%"class.absl::optional_internal::optional_data_base.1153" = type { %"class.absl::optional_internal::optional_data_dtor_base.1154" }
%"class.absl::optional_internal::optional_data_dtor_base.1154" = type { i8, [3 x i8], %union.anon.1155 }
%union.anon.1155 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1093"*, %"class.absl::optional.1161", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1161" = type { %"class.absl::optional_internal::optional_data.1162" }
%"class.absl::optional_internal::optional_data.1162" = type { %"class.absl::optional_internal::optional_data_base.1163" }
%"class.absl::optional_internal::optional_data_base.1163" = type { %"class.absl::optional_internal::optional_data_dtor_base.1164" }
%"class.absl::optional_internal::optional_data_dtor_base.1164" = type { i8, %union.anon.1165 }
%union.anon.1165 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1166", %"class.WTF::Vector.1171" }
%"class.WTF::Vector.1166" = type { %"class.WTF::VectorBuffer.1167" }
%"class.WTF::VectorBuffer.1167" = type { %"class.WTF::VectorBufferBase.1168", [128 x i8] }
%"class.WTF::VectorBufferBase.1168" = type { i32*, i32, i32 }
%"class.WTF::Vector.1171" = type { %"class.WTF::VectorBuffer.1172" }
%"class.WTF::VectorBuffer.1172" = type { %"class.WTF::VectorBufferBase.1173", [128 x i8] }
%"class.WTF::VectorBufferBase.1173" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1176" = type { %"class.WTF::VectorBuffer.1177" }
%"class.WTF::VectorBuffer.1177" = type { %"class.WTF::VectorBufferBase.1178" }
%"class.WTF::VectorBufferBase.1178" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1181" = type { %"class.WTF::HashTable.1182" }
%"class.WTF::HashTable.1182" = type <{ %"struct.WTF::KeyValuePair.1185"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1185" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1186", %"class.WTF::Vector.1191" }
%"class.WTF::HashMap.1186" = type { %"class.WTF::HashTable.1187" }
%"class.WTF::HashTable.1187" = type <{ %"struct.WTF::KeyValuePair.1190"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1190" = type opaque
%"class.WTF::Vector.1191" = type { %"class.WTF::VectorBuffer.1192" }
%"class.WTF::VectorBuffer.1192" = type { %"class.WTF::VectorBufferBase.1193" }
%"class.WTF::VectorBufferBase.1193" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1199" = type { %"class.std::__1::__compressed_pair.1200" }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.1201" }
%"struct.std::__1::__compressed_pair_elem.1201" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1205" = type { %"class.WTF::VectorBuffer.1206" }
%"class.WTF::VectorBuffer.1206" = type { %"class.WTF::VectorBufferBase.1207" }
%"class.WTF::VectorBufferBase.1207" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1210 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1211" = type { %"class.blink::MemberBase.1212" }
%"class.blink::MemberBase.1212" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1217" = type { %"class.WTF::HashSet.1220" }
%"class.WTF::HashSet.1220" = type { %"class.WTF::HashTable.1221" }
%"class.WTF::HashTable.1221" = type <{ %"class.blink::WeakMember.1223"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1223" = type opaque
%"class.blink::HeapHashSet.1224" = type { %"class.WTF::HashSet.1227" }
%"class.WTF::HashSet.1227" = type { %"class.WTF::HashTable.1228" }
%"class.WTF::HashTable.1228" = type <{ %"class.blink::WeakMember.1230"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1230" = type opaque
%"class.std::__1::unique_ptr.1231" = type { %"class.std::__1::__compressed_pair.1232" }
%"class.std::__1::__compressed_pair.1232" = type { %"struct.std::__1::__compressed_pair_elem.1233" }
%"struct.std::__1::__compressed_pair_elem.1233" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1234" }
%"class.base::time_internal::TimeBase.1234" = type { i64 }
%"class.std::__1::unique_ptr.1238" = type { %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.1240" }
%"struct.std::__1::__compressed_pair_elem.1240" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1241", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1241" = type { %"class.absl::optional_internal::optional_data.1242" }
%"class.absl::optional_internal::optional_data.1242" = type { %"class.absl::optional_internal::optional_data_base.1243" }
%"class.absl::optional_internal::optional_data_base.1243" = type { %"class.absl::optional_internal::optional_data_dtor_base.1244" }
%"class.absl::optional_internal::optional_data_dtor_base.1244" = type { i8, %union.anon.1245 }
%union.anon.1245 = type { %"class.base::Time" }
%"class.blink::Member.912" = type { %"class.blink::MemberBase.913" }
%"class.blink::MemberBase.913" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.914" = type { %"class.blink::MemberBase.915" }
%"class.blink::MemberBase.915" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.916" = type { %"class.blink::MemberBase.917" }
%"class.blink::MemberBase.917" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.922 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.925" = type { %"class.blink::MemberBase.926" }
%"class.blink::MemberBase.926" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.927" = type { %"class.blink::MemberBase.928" }
%"class.blink::MemberBase.928" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.929" = type { %"class.blink::MemberBase.930" }
%"class.blink::MemberBase.930" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.931" = type { %"class.blink::MemberBase.932" }
%"class.blink::MemberBase.932" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.933" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type { i32 (...)** }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.937" }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1393" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1301, %"class.std::__1::unique_ptr.743", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.757, i32 }>
%class.scoped_refptr.1301 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.757, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1359", %"class.absl::optional.1364", %"class.absl::optional.1318", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1384", i8, [7 x i8], %class.scoped_refptr.757, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.770" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.137", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.757, %"class.std::__1::unique_ptr.1302", %"class.absl::optional.1312", %"struct.std::__1::atomic.363", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1318", %"class.std::__1::unique_ptr.1323", i8, i64, %class.scoped_refptr.1356, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.1358" }
%"class.std::__1::unique_ptr.1302" = type { %"class.std::__1::__compressed_pair.1303" }
%"class.std::__1::__compressed_pair.1303" = type { %"struct.std::__1::__compressed_pair_elem.1304" }
%"struct.std::__1::__compressed_pair_elem.1304" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.757, i8, %"class.mojo::ScopedHandleBase.1305", %class.scoped_refptr.1306, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1307", i8*, %"class.base::WeakPtrFactory.1308" }
%"class.mojo::ScopedHandleBase.1305" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1306 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.1307" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1308" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1312" = type { %"class.absl::optional_internal::optional_data.1313" }
%"class.absl::optional_internal::optional_data.1313" = type { %"class.absl::optional_internal::optional_data_base.1314" }
%"class.absl::optional_internal::optional_data_base.1314" = type { %"class.absl::optional_internal::optional_data_dtor_base.1315" }
%"class.absl::optional_internal::optional_data_dtor_base.1315" = type { i8, %union.anon.1316 }
%union.anon.1316 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1317", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1317" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1323" = type { %"class.std::__1::__compressed_pair.1324" }
%"class.std::__1::__compressed_pair.1324" = type { %"struct.std::__1::__compressed_pair_elem.1325" }
%"struct.std::__1::__compressed_pair_elem.1325" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1326", i8, i64, %class.scoped_refptr.1327, %class.scoped_refptr.1352 }
%"class.base::RepeatingCallback.1326" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1327 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1328", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1330", %"class.std::__1::map.1341", i8, [7 x i8] }>
%"class.base::RefCounted.1328" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1329 }
%class.scoped_refptr.1329 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1330" = type { %"class.std::__1::__tree.1331" }
%"class.std::__1::__tree.1331" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1332", %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1332" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::map.1341" = type { %"class.std::__1::__tree.1342" }
%"class.std::__1::__tree.1342" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1343", %"class.std::__1::__compressed_pair.1347" }
%"class.std::__1::__compressed_pair.1343" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"class.std::__1::__compressed_pair.1347" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%class.scoped_refptr.1352 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.1356 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1357 }
%class.scoped_refptr.1357 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.1358" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1359" = type { %"class.absl::optional_internal::optional_data.1360" }
%"class.absl::optional_internal::optional_data.1360" = type { %"class.absl::optional_internal::optional_data_base.1361" }
%"class.absl::optional_internal::optional_data_base.1361" = type { %"class.absl::optional_internal::optional_data_dtor_base.1362" }
%"class.absl::optional_internal::optional_data_dtor_base.1362" = type { i8, %union.anon.1363 }
%union.anon.1363 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1364" = type { %"class.absl::optional_internal::optional_data.1365" }
%"class.absl::optional_internal::optional_data.1365" = type { %"class.absl::optional_internal::optional_data_base.1366" }
%"class.absl::optional_internal::optional_data_base.1366" = type { %"class.absl::optional_internal::optional_data_dtor_base.1367" }
%"class.absl::optional_internal::optional_data_dtor_base.1367" = type { i8, [7 x i8], %union.anon.1368 }
%union.anon.1368 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1318" = type { %"class.absl::optional_internal::optional_data.1319" }
%"class.absl::optional_internal::optional_data.1319" = type { %"class.absl::optional_internal::optional_data_base.1320" }
%"class.absl::optional_internal::optional_data_base.1320" = type { %"class.absl::optional_internal::optional_data_dtor_base.1321" }
%"class.absl::optional_internal::optional_data_dtor_base.1321" = type { i8, %union.anon.1322 }
%union.anon.1322 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1369 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1369 = type { %"class.std::__1::map.1372" }
%"class.std::__1::map.1372" = type { %"class.std::__1::__tree.1373" }
%"class.std::__1::__tree.1373" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1374", %"class.std::__1::__compressed_pair.1378" }
%"class.std::__1::__compressed_pair.1374" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"class.std::__1::__compressed_pair.1378" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1383"*, i64 }
%"class.std::__1::unique_ptr.1383" = type opaque
%"class.std::__1::map.1384" = type { %"class.std::__1::__tree.1385" }
%"class.std::__1::__tree.1385" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1386", %"class.std::__1::__compressed_pair.1390" }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"class.std::__1::__compressed_pair.1390" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1393" = type { %"class.std::__1::__compressed_pair.1394" }
%"class.std::__1::__compressed_pair.1394" = type { %"struct.std::__1::__compressed_pair_elem.1395" }
%"struct.std::__1::__compressed_pair_elem.1395" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.945" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.946" = type { %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.948" }
%"struct.std::__1::__compressed_pair_elem.948" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.855" = type { %"class.absl::optional_internal::optional_data.856" }
%"class.absl::optional_internal::optional_data.856" = type { %"class.absl::optional_internal::optional_data_base.857" }
%"class.absl::optional_internal::optional_data_base.857" = type { %"class.absl::optional_internal::optional_data_dtor_base.858" }
%"class.absl::optional_internal::optional_data_dtor_base.858" = type { i8, %union.anon.859 }
%union.anon.859 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.952" = type { %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.958" }
%"class.blink::Member.958" = type { %"class.blink::MemberBase.959" }
%"class.blink::MemberBase.959" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1401" }
%"class.mojo::AssociatedRemote.1401" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1402" }
%"class.mojo::internal::AssociatedInterfacePtrState.1402" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1403" }
%"class.std::__1::unique_ptr.1403" = type { %"class.std::__1::__compressed_pair.1404" }
%"class.std::__1::__compressed_pair.1404" = type { %"struct.std::__1::__compressed_pair_elem.1405" }
%"struct.std::__1::__compressed_pair_elem.1405" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.960" = type { %"class.blink::Member.961" }
%"class.blink::Member.961" = type { %"class.blink::MemberBase.962" }
%"class.blink::MemberBase.962" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1411" }
%"class.mojo::AssociatedRemote.1411" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1412" }
%"class.mojo::internal::AssociatedInterfacePtrState.1412" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1413" }
%"class.std::__1::unique_ptr.1413" = type { %"class.std::__1::__compressed_pair.1414" }
%"class.std::__1::__compressed_pair.1414" = type { %"struct.std::__1::__compressed_pair_elem.1415" }
%"struct.std::__1::__compressed_pair_elem.1415" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.963" }
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1421" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.743" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1421" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.965" = type { %"class.blink::Member.966" }
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1424", %"class.blink::Member", %"class.mojo::AssociatedReceiver.1425" }
%"class.blink::ThreadState::PrefinalizerRegistration.1424" = type { i8 }
%"class.mojo::AssociatedReceiver.1425" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1426" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1426" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.968" }
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1429", %"class.blink::Member", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1429" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1301, %"class.std::__1::unique_ptr.743", %"class.base::WeakPtrFactory.1430" }
%"class.base::WeakPtrFactory.1430" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.970" = type { %"class.blink::Member.971" }
%"class.blink::Member.971" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1433", %"class.blink::Member", %"class.mojo::AssociatedReceiver.1434" }
%"class.blink::ThreadState::PrefinalizerRegistration.1433" = type { i8 }
%"class.mojo::AssociatedReceiver.1434" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1435" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1435" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::HeapHashMap.981"* }
%"class.blink::HeapHashMap.981" = type opaque
%"class.mojo::StructPtr.982" = type { %"class.std::__1::unique_ptr.983" }
%"class.std::__1::unique_ptr.983" = type { %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.986", %"class.mojo::InlinedStructPtr.987" }
%"class.mojo::InlinedStructPtr.986" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.987" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.993" = type { %"class.absl::optional_internal::optional_data.994" }
%"class.absl::optional_internal::optional_data.994" = type { %"class.absl::optional_internal::optional_data_base.995" }
%"class.absl::optional_internal::optional_data_base.995" = type { %"class.absl::optional_internal::optional_data_dtor_base.996" }
%"class.absl::optional_internal::optional_data_dtor_base.996" = type { i8, %union.anon.997 }
%union.anon.997 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::EphemeralRangeTemplate" = type { %"class.blink::PositionTemplate.1270", %"class.blink::PositionTemplate.1270" }
%"class.blink::PositionTemplate.1270" = type { %"class.blink::Member.6", i32, i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.1271" }
%"class.std::__1::unique_ptr.1271" = type { %"class.std::__1::__compressed_pair.1272" }
%"class.std::__1::__compressed_pair.1272" = type { %"struct.std::__1::__compressed_pair_elem.1273" }
%"struct.std::__1::__compressed_pair_elem.1273" = type { %class.GURL* }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.blink::TextIteratorBehavior" = type { %union.anon.1277 }
%union.anon.1277 = type { i32 }
%"class.blink::EphemeralRangeTemplate.1279" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"class.blink::NodeList" = type { %"class.blink::ScriptWrappable" }
%"struct.blink::TextFragmentAnchorMetrics::Match" = type <{ %"class.WTF::String", %"class.blink::TextFragmentSelector", i8, i8, i8, [5 x i8] }>
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1437", %"class.blink::Member.1440", %"class.blink::Member.1442", %"class.blink::Member.1461", %"class.blink::Member.1463" }
%"class.blink::Member.1437" = type { %"class.blink::MemberBase.1438" }
%"class.blink::MemberBase.1438" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.1439 }
%class.scoped_refptr.1439 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::Member.1440" = type { %"class.blink::MemberBase.1441" }
%"class.blink::MemberBase.1441" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1442" = type { %"class.blink::MemberBase.1443" }
%"class.blink::MemberBase.1443" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1446", %"class.blink::HeapHashSet.1455" }
%"class.blink::HeapVector.1446" = type { %"class.WTF::Vector.1449" }
%"class.WTF::Vector.1449" = type { %"class.WTF::VectorBuffer.1450" }
%"class.WTF::VectorBuffer.1450" = type { %"class.WTF::VectorBufferBase.1451" }
%"class.WTF::VectorBufferBase.1451" = type { %"class.blink::Member.1452"*, i32, i32 }
%"class.blink::Member.1452" = type { %"class.blink::MemberBase.1453" }
%"class.blink::MemberBase.1453" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1455" = type { %"class.WTF::HashSet.1458" }
%"class.WTF::HashSet.1458" = type { %"class.WTF::HashTable.1459" }
%"class.WTF::HashTable.1459" = type <{ %"class.blink::Member.1452"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1461" = type { %"class.blink::MemberBase.1462" }
%"class.blink::MemberBase.1462" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::HeapHashSet.1465"* }
%"class.blink::HeapHashSet.1465" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink20TextFragmentSelectorD2Ev = comdat any

$_ZNSt3__111make_uniqueIN5blink20TextFragmentSelectorEJNS2_12SelectorTypeERN3WTF6StringERA1_KcS9_S9_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink20TextFragmentSelectorEJNS2_12SelectorTypeERN3WTF6StringES6_RA1_KcS9_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_18TextFragmentFinderEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_18TextFragmentFinderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_18TextFragmentFinderEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_18TextFragmentFinderEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_5RangeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_18TextFragmentFinderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_18TextFragmentFinderEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink29TextFragmentSelectorGeneratorE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TextFragmentSelectorGenerator"*, %"class.blink::EphemeralRangeTemplate"*, %"struct.blink::TextFragmentAnchorMetrics::Match"*, i1)* @_ZN5blink29TextFragmentSelectorGenerator12DidFindMatchERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_25TextFragmentAnchorMetrics5MatchEb to i8*), i8* bitcast (void (%"class.blink::TextFragmentSelectorGenerator"*)* @_ZN5blink29TextFragmentSelectorGenerator12NoMatchFoundEv to i8*)] }, align 8
@_ZN19shared_highlighting31kPreemptiveLinkToTextGenerationE = external global %"struct.base::Feature", align 8
@.str = private unnamed_addr constant [46 x i8] c"SharedHighlights.LinkGenerated.StateAtRequest\00", align 1
@.str.1 = private unnamed_addr constant [47 x i8] c"SharedHighlights.LinkGenerated.SelectionLength\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"SharedHighlights.LinkGenerated\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"SharedHighlights.LinkGenerated.ParamLength\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"SharedHighlights.LinkGenerated.Iterations\00", align 1
@.str.6 = private unnamed_addr constant [46 x i8] c"SharedHighlights.LinkGenerated.TimeToGenerate\00", align 1
@.str.7 = private unnamed_addr constant [50 x i8] c"SharedHighlights.LinkGenerated.SelectorParameters\00", align 1
@.str.8 = private unnamed_addr constant [48 x i8] c"SharedHighlights.LinkGenerated.Error.Iterations\00", align 1
@.str.9 = private unnamed_addr constant [52 x i8] c"SharedHighlights.LinkGenerated.Error.TimeToGenerate\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c".RequestedBeforeReady\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c".RequestedAfterReady\00", align 1
@.str.12 = private unnamed_addr constant [47 x i8] c"SharedHighlights.LinkGenerated.Error.Requested\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.17 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18TextFragmentFinderEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::TextFragmentFinder]\00", align 1
@_ZZN5blink11GCInfoTraitINS_18TextFragmentFinderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_18TextFragmentFinderEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_18TextFragmentFinderEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_18TextFragmentFinderEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_18TextFragmentFinderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.18 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZZN5blink29TextFragmentSelectorGenerator16GenerateSelectorEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_3.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_4.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_5.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5blink29TextFragmentSelectorGeneratorC1EPNS_10LocalFrameE = hidden unnamed_addr alias void (%"class.blink::TextFragmentSelectorGenerator"*, %"class.blink::LocalFrame"*), void (%"class.blink::TextFragmentSelectorGenerator"*, %"class.blink::LocalFrame"*)* @_ZN5blink29TextFragmentSelectorGeneratorC2EPNS_10LocalFrameE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink29TextFragmentSelectorGeneratorC2EPNS_10LocalFrameE(%"class.blink::TextFragmentSelectorGenerator"* nocapture, %"class.blink::LocalFrame"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink29TextFragmentSelectorGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::LocalFrame"* %1, %"class.blink::LocalFrame"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  %7 = bitcast %"class.blink::Range"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 28, i1 false)
  store i32 1, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 9, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 16, i32 0, i32 0
  %12 = bitcast %"class.WTF::StringImpl"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 44, i1 false)
  %13 = bitcast i64* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator15UpdateSelectionERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::TextFragmentSelectorGenerator"*, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate.1270", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate.1270", align 8
  %7 = alloca %class.GURL, align 8
  %8 = tail call dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11GetDocumentEv(%"class.blink::EphemeralRangeTemplate"* %1) #12
  %9 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = bitcast %"class.blink::PositionTemplate.1270"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate.1270"* nonnull sret %4, %"class.blink::EphemeralRangeTemplate"* %1) #12
  call void @_ZN5blink19ToPositionInDOMTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::PositionTemplate.1270"* nonnull dereferenceable(16) %4) #12
  %11 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = bitcast %"class.blink::PositionTemplate.1270"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #12
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate.1270"* nonnull sret %6, %"class.blink::EphemeralRangeTemplate"* %1) #12
  call void @_ZN5blink19ToPositionInDOMTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::PositionTemplate.1270"* nonnull dereferenceable(16) %6) #12
  %13 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 88) #12
  %14 = bitcast i8* %13 to %"class.blink::Range"*
  call void @_ZN5blink5RangeC1ERNS_8DocumentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES9_(%"class.blink::Range"* %14, %"class.blink::Document"* dereferenceable(2848) %8, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #12
  %15 = getelementptr inbounds i8, i8* %13, i64 -4
  %16 = bitcast i8* %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = or i16 %17, 1
  store atomic i16 %18, i16* %16 release, align 2
  %19 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 2
  %20 = ptrtoint i8* %13 to i64
  %21 = bitcast %"class.blink::Member.0"* %19 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %2
  %25 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %13) #12
  br label %26

26:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  %27 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN19shared_highlighting31kPreemptiveLinkToTextGenerationE) #12
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %class.GURL* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %30, align 8
  %32 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %31) #12
  %33 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %32, i64 0, i32 19
  call void @_ZNK5blink4KURLcv4GURLEv(%class.GURL* nonnull sret %7, %"class.blink::KURL"* %33) #12
  %34 = call zeroext i1 @_ZN19shared_highlighting21ShouldOfferLinkToTextERK4GURL(%class.GURL* nonnull dereferenceable(120) %7) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %29) #12
  br i1 %34, label %35, label %36

35:                                               ; preds = %28
  call void @_ZN5blink29TextFragmentSelectorGenerator5ResetEv(%"class.blink::TextFragmentSelectorGenerator"* %0)
  call void @_ZN5blink29TextFragmentSelectorGenerator16GenerateSelectorEv(%"class.blink::TextFragmentSelectorGenerator"* %0)
  br label %36

36:                                               ; preds = %26, %35, %28
  ret void
}

declare dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11GetDocumentEv(%"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink19ToPositionInDOMTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate.1270"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate.1270"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #2

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate.1270"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN19shared_highlighting21ShouldOfferLinkToTextERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare void @_ZNK5blink4KURLcv4GURLEv(%class.GURL* sret, %"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator5ResetEv(%"class.blink::TextFragmentSelectorGenerator"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 17, i32 0, i32 0
  %7 = load %"class.blink::TextFragmentFinder"*, %"class.blink::TextFragmentFinder"** %6, align 8
  %8 = icmp eq %"class.blink::TextFragmentFinder"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZN5blink18TextFragmentFinder6CancelEv(%"class.blink::TextFragmentFinder"* nonnull %7) #12
  br label %10

10:                                               ; preds = %1, %9
  %11 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #12
  %12 = bitcast %"class.base::DefaultTickClock"* %11 to i64 (%"class.base::DefaultTickClock"*)***
  %13 = load i64 (%"class.base::DefaultTickClock"*)**, i64 (%"class.base::DefaultTickClock"*)*** %12, align 8
  %14 = getelementptr inbounds i64 (%"class.base::DefaultTickClock"*)*, i64 (%"class.base::DefaultTickClock"*)** %13, i64 2
  %15 = load i64 (%"class.base::DefaultTickClock"*)*, i64 (%"class.base::DefaultTickClock"*)** %14, align 8
  %16 = tail call i64 %15(%"class.base::DefaultTickClock"* %11) #12
  %17 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 16, i32 0, i32 0
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 5
  store i32 0, i32* %20, align 8
  %21 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #12
  %22 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 9
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %24 = bitcast %"class.WTF::String"* %2 to i64*
  %25 = load i64, i64* %24, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %26 = bitcast %"class.WTF::String"* %22 to i64*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %10
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %43

43:                                               ; preds = %10, %39, %42
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #12
  br label %59

59:                                               ; preds = %43, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  %60 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #12
  %61 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 10
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %63 = bitcast %"class.WTF::String"* %3 to i64*
  %64 = load i64, i64* %63, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %62, align 8
  %65 = bitcast %"class.WTF::String"* %61 to i64*
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  store i64 %64, i64* %65, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #12
  br label %82

82:                                               ; preds = %59, %78, %81
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #12
  br label %98

98:                                               ; preds = %82, %94, %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #12
  %99 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #12
  %100 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 11
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %102 = bitcast %"class.WTF::String"* %4 to i64*
  %103 = load i64, i64* %102, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %101, align 8
  %104 = bitcast %"class.WTF::String"* %100 to i64*
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  store i64 %103, i64* %104, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %98
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #12
  br label %121

121:                                              ; preds = %98, %117, %120
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #12
  br label %137

137:                                              ; preds = %121, %133, %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #12
  %138 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #12
  %139 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 12
  %140 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %141 = bitcast %"class.WTF::String"* %5 to i64*
  %142 = load i64, i64* %141, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %140, align 8
  %143 = bitcast %"class.WTF::String"* %139 to i64*
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %139, i64 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  store i64 %142, i64* %143, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %137
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #12
  br label %160

160:                                              ; preds = %137, %156, %159
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #12
  br label %176

176:                                              ; preds = %160, %172, %175
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #12
  %177 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 13
  store i32 0, i32* %177, align 8
  %178 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 14
  store i32 0, i32* %178, align 4
  %179 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 15
  store i32 0, i32* %179, align 8
  %180 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %181 = load %"class.blink::TextFragmentSelector"*, %"class.blink::TextFragmentSelector"** %180, align 8
  store %"class.blink::TextFragmentSelector"* null, %"class.blink::TextFragmentSelector"** %180, align 8
  %182 = icmp eq %"class.blink::TextFragmentSelector"* %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %176
  call void @_ZN5blink20TextFragmentSelectorD2Ev(%"class.blink::TextFragmentSelector"* nonnull %181) #12
  %184 = bitcast %"class.blink::TextFragmentSelector"* %181 to i8*
  call void @_ZdlPv(i8* %184) #13
  br label %185

185:                                              ; preds = %176, %183
  %186 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %186, align 1
  %187 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 4, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %187) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator16GenerateSelectorEv(%"class.blink::TextFragmentSelectorGenerator"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::TextIteratorBehavior", align 4
  %5 = alloca %"class.blink::EphemeralRangeTemplate.1279", align 8
  %6 = alloca %"class.blink::TextIteratorBehavior", align 4
  %7 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Range"*, %"class.blink::Range"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %10, i32 8) #12
  %11 = bitcast %"class.blink::EphemeralRangeTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #12
  %12 = bitcast %"class.blink::EphemeralRangeTemplate"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = load %"class.blink::Range"*, %"class.blink::Range"** %7, align 8
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1EPKNS_5RangeE(%"class.blink::EphemeralRangeTemplate"* nonnull %2, %"class.blink::Range"* %13) #12
  %14 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = bitcast %"class.blink::TextIteratorBehavior"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #12
  call void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"* nonnull %4) #12
  %16 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %2, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %4) #12
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  %18 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %3) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #12
  br label %34

34:                                               ; preds = %1, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %35 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %35, label %112, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %95, label %40

40:                                               ; preds = %36
  call void @_ZN5blink29TextFragmentSelectorGenerator15AdjustSelectionEv(%"class.blink::TextFragmentSelectorGenerator"* %0)
  %41 = load atomic i64, i64* @_ZZN5blink29TextFragmentSelectorGenerator16GenerateSelectorEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %42 = inttoptr i64 %41 to %"class.base::HistogramBase"*
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %40
  %45 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 1000, i32 50, i32 1) #12
  %46 = ptrtoint %"class.base::HistogramBase"* %45 to i64
  store atomic i64 %46, i64* @_ZZN5blink29TextFragmentSelectorGenerator16GenerateSelectorEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi %"class.base::HistogramBase"* [ %42, %40 ], [ %45, %44 ]
  %49 = bitcast %"class.blink::EphemeralRangeTemplate.1279"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #12
  %50 = load %"class.blink::Range"*, %"class.blink::Range"** %7, align 8
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_5RangeE(%"class.blink::EphemeralRangeTemplate.1279"* nonnull %5, %"class.blink::Range"* %50) #12
  %51 = bitcast %"class.blink::TextIteratorBehavior"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #12
  call void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"* nonnull %6) #12
  %52 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate.1279"* nonnull dereferenceable(32) %5, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %6) #12
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %73, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = bitcast %"class.base::HistogramBase"* %48 to void (%"class.base::HistogramBase"*, i32)***
  %58 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %58, i64 6
  %60 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %59, align 8
  call void %60(%"class.base::HistogramBase"* %48, i32 %56) #12
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %54
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %54
  %70 = phi i32 [ %68, %67 ], [ %66, %54 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #12
  br label %78

73:                                               ; preds = %47
  %74 = bitcast %"class.base::HistogramBase"* %48 to void (%"class.base::HistogramBase"*, i32)***
  %75 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %75, i64 6
  %77 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %76, align 8
  call void %77(%"class.base::HistogramBase"* %48, i32 0) #12
  br label %78

78:                                               ; preds = %73, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #12
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate.1279"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #12
  %79 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  store i32 1, i32* %79, align 4
  %80 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 5
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %78
  call void @_ZN5blink29TextFragmentSelectorGenerator21GenerateExactSelectorEv(%"class.blink::TextFragmentSelectorGenerator"* %0) #12
  %84 = load i32, i32* %80, align 8
  br label %85

85:                                               ; preds = %83, %78
  %86 = phi i32 [ %84, %83 ], [ %81, %78 ]
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %90

88:                                               ; preds = %85
  call void @_ZN5blink29TextFragmentSelectorGenerator19ExtendRangeSelectorEv(%"class.blink::TextFragmentSelectorGenerator"* %0) #12
  %89 = load i32, i32* %80, align 8
  br label %90

90:                                               ; preds = %88, %85
  %91 = phi i32 [ %89, %88 ], [ %86, %85 ]
  %92 = icmp eq i32 %91, 2
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZN5blink29TextFragmentSelectorGenerator13ExtendContextEv(%"class.blink::TextFragmentSelectorGenerator"* %0) #12
  br label %94

94:                                               ; preds = %93, %90
  call void @_ZN5blink29TextFragmentSelectorGenerator20ResolveSelectorStateEv(%"class.blink::TextFragmentSelectorGenerator"* %0) #12
  br label %99

95:                                               ; preds = %36
  %96 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  store i32 3, i32* %96, align 4
  %97 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %98 = bitcast i8* %97 to i64*
  store i64 21474836481, i64* %98, align 4
  call void @_ZN5blink29TextFragmentSelectorGenerator20ResolveSelectorStateEv(%"class.blink::TextFragmentSelectorGenerator"* %0)
  br label %99

99:                                               ; preds = %95, %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #12
  br label %116

112:                                              ; preds = %34
  %113 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  store i32 3, i32* %113, align 4
  %114 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %115 = bitcast i8* %114 to i64*
  store i64 21474836481, i64* %115, align 4
  call void @_ZN5blink29TextFragmentSelectorGenerator20ResolveSelectorStateEv(%"class.blink::TextFragmentSelectorGenerator"* %0)
  br label %116

116:                                              ; preds = %112, %108, %111
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator15AdjustSelectionEv(%"class.blink::TextFragmentSelectorGenerator"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate.1270", align 8
  %4 = alloca %"class.blink::PositionTemplate.1270", align 8
  %5 = alloca %"class.blink::PositionTemplate.1270", align 8
  %6 = alloca %"class.blink::PositionTemplate.1270", align 8
  %7 = alloca %"class.blink::PositionTemplate.1270", align 8
  %8 = alloca %"class.blink::PositionTemplate.1270", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::PositionTemplate.1270", align 8
  %12 = alloca %"class.blink::PositionTemplate.1270", align 8
  %13 = alloca %"class.blink::PositionTemplate", align 8
  %14 = alloca %"class.blink::PositionTemplate", align 8
  %15 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::Range"*, %"class.blink::Range"** %16, align 8
  %18 = icmp eq %"class.blink::Range"* %17, null
  br i1 %18, label %194, label %19

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::EphemeralRangeTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #12
  %21 = bitcast %"class.blink::EphemeralRangeTemplate"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 32, i1 false)
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1EPKNS_5RangeE(%"class.blink::EphemeralRangeTemplate"* nonnull %2, %"class.blink::Range"* nonnull %17) #12
  %22 = bitcast %"class.blink::PositionTemplate.1270"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #12
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate.1270"* nonnull sret %3, %"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  %23 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate.1270"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  %24 = bitcast %"class.blink::PositionTemplate.1270"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #12
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate.1270"* nonnull sret %4, %"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  %25 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate.1270"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  %26 = bitcast %"class.blink::PositionTemplate.1270"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #12
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate.1270"* nonnull sret %5, %"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  %27 = call fastcc %"class.blink::Node"* @_ZN5blink12_GLOBAL__N_121ResolvePositionToNodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.1270"* nonnull dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #12
  %28 = icmp eq %"class.blink::Node"* %27, %23
  %29 = bitcast %"class.blink::PositionTemplate.1270"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #12
  br i1 %28, label %30, label %32

30:                                               ; preds = %19
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate.1270"* nonnull sret %6, %"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  %31 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate.1270"* nonnull %6) #12
  br label %32

32:                                               ; preds = %19, %30
  %33 = phi i32 [ %31, %30 ], [ 0, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #12
  %34 = bitcast %"class.blink::PositionTemplate.1270"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #12
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate.1270"* nonnull sret %7, %"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  %35 = call fastcc %"class.blink::Node"* @_ZN5blink12_GLOBAL__N_121ResolvePositionToNodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.1270"* nonnull dereferenceable(16) %7)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #12
  %36 = icmp eq %"class.blink::Node"* %35, %25
  %37 = bitcast %"class.blink::PositionTemplate.1270"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #12
  br i1 %36, label %38, label %40

38:                                               ; preds = %32
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate.1270"* nonnull sret %8, %"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  %39 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate.1270"* nonnull %8) #12
  br label %40

40:                                               ; preds = %32, %38
  %41 = phi i32 [ %39, %38 ], [ 0, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #12
  %42 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121IsLastVisiblePositionEPNS_4NodeEj(%"class.blink::Node"* %27, i32 %33)
  br i1 %42, label %43, label %46

43:                                               ; preds = %40
  %44 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal20NextSkippingChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %27) #12
  %45 = call fastcc %"class.blink::Node"* @_ZN5blink12_GLOBAL__N_128FirstNonEmptyVisibleTextNodeEPNS_4NodeE(%"class.blink::Node"* %44)
  br label %77

46:                                               ; preds = %40
  %47 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %48, align 8
  %49 = call %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"* %27, i1 zeroext false) #12
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %48, align 8
  call void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"* nonnull %9) #12
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 1
  %53 = bitcast %"class.WTF::StringImpl"* %52 to i16*
  %54 = select i1 %51, i16* null, i16* %53
  br i1 %51, label %58, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  br label %58

58:                                               ; preds = %46, %55
  %59 = phi i32 [ %57, %55 ], [ 0, %46 ]
  %60 = call i32 @_ZN5blink21FindWordStartBoundaryEPKDsii(i16* %54, i32 %59, i32 %33) #12
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #12
  br label %76

76:                                               ; preds = %58, %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %77

77:                                               ; preds = %76, %43
  %78 = phi %"class.blink::Node"* [ %45, %43 ], [ %27, %76 ]
  %79 = phi i32 [ 0, %43 ], [ %60, %76 ]
  %80 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_122IsFirstVisiblePositionEPNS_4NodeEj(%"class.blink::Node"* %35, i32 %41)
  br i1 %80, label %81, label %113

81:                                               ; preds = %77
  %82 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %35, i32 1) #12
  %83 = icmp eq %"class.blink::Node"* %82, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %81, %84
  %85 = phi %"class.blink::Node"* [ %86, %84 ], [ %82, %81 ]
  %86 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %85, i32 1) #12
  %87 = icmp eq %"class.blink::Node"* %86, null
  br i1 %87, label %91, label %84

88:                                               ; preds = %81
  %89 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %35) #12
  %90 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %89, i64 0, i32 0
  br label %91

91:                                               ; preds = %84, %88
  %92 = phi %"class.blink::Node"* [ %90, %88 ], [ %85, %84 ]
  %93 = call fastcc %"class.blink::Node"* @_ZN5blink12_GLOBAL__N_131BackwardNonEmptyVisibleTextNodeEPNS_4NodeE(%"class.blink::Node"* %92)
  %94 = icmp eq %"class.blink::Node"* %93, null
  br i1 %94, label %159, label %95

95:                                               ; preds = %91
  %96 = call %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"* nonnull %93, i1 zeroext false) #12
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %159, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %98
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %98
  %110 = phi i32 [ %108, %107 ], [ %106, %98 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %159

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #12
  br label %159

113:                                              ; preds = %77
  %114 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #12
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %116 = call %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"* %35, i1 zeroext false) #12
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %115, align 8
  call void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"* nonnull %10) #12
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i16*
  %121 = select i1 %118, i16* null, i16* %120
  br i1 %118, label %125, label %122

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  br label %125

125:                                              ; preds = %113, %122
  %126 = phi i32 [ %124, %122 ], [ 0, %113 ]
  %127 = call i32 @_ZN5blink21FindWordStartBoundaryEPKDsii(i16* %121, i32 %126, i32 %41) #12
  %128 = icmp eq i32 %41, %127
  br i1 %128, label %141, label %129

129:                                              ; preds = %125
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 1
  %133 = bitcast %"class.WTF::StringImpl"* %132 to i16*
  %134 = select i1 %131, i16* null, i16* %133
  br i1 %131, label %138, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  br label %138

138:                                              ; preds = %129, %135
  %139 = phi i32 [ %137, %135 ], [ 0, %129 ]
  %140 = call i32 @_ZN5blink19FindWordEndBoundaryEPKDsii(i16* %134, i32 %139, i32 %41) #12
  br label %141

141:                                              ; preds = %125, %138
  %142 = phi i32 [ %140, %138 ], [ %41, %125 ]
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #12
  br label %158

158:                                              ; preds = %141, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #12
  br label %159

159:                                              ; preds = %95, %112, %109, %91, %158
  %160 = phi %"class.blink::Node"* [ null, %91 ], [ %35, %158 ], [ %93, %109 ], [ %93, %112 ], [ %93, %95 ]
  %161 = phi i32 [ %41, %91 ], [ %142, %158 ], [ %100, %109 ], [ %100, %112 ], [ 0, %95 ]
  %162 = icmp eq %"class.blink::Node"* %78, %23
  %163 = bitcast %"class.blink::PositionTemplate.1270"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %163) #12
  %164 = bitcast %"class.blink::PositionTemplate.1270"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %164) #12
  br i1 %162, label %165, label %173

165:                                              ; preds = %159
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate.1270"* nonnull sret %11, %"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  %166 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate.1270"* nonnull %11) #12
  %167 = icmp eq i32 %79, %166
  %168 = icmp eq %"class.blink::Node"* %160, %25
  %169 = and i1 %167, %168
  br i1 %169, label %170, label %173

170:                                              ; preds = %165
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate.1270"* nonnull sret %12, %"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  %171 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate.1270"* nonnull %12) #12
  %172 = icmp eq i32 %161, %171
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %164) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %163) #12
  br i1 %172, label %193, label %174

173:                                              ; preds = %159, %165
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %164) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %163) #12
  br label %174

174:                                              ; preds = %173, %170
  %175 = load %"class.blink::Range"*, %"class.blink::Range"** %16, align 8
  %176 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %175, i64 0, i32 1, i32 0, i32 0
  %177 = load %"class.blink::Document"*, %"class.blink::Document"** %176, align 8
  %178 = bitcast %"class.blink::PositionTemplate"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %178) #12
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %13, %"class.blink::Node"* %78, i32 %79) #12
  %179 = bitcast %"class.blink::PositionTemplate"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %179) #12
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %14, %"class.blink::Node"* %160, i32 %161) #12
  %180 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 88) #12
  %181 = bitcast i8* %180 to %"class.blink::Range"*
  call void @_ZN5blink5RangeC1ERNS_8DocumentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES9_(%"class.blink::Range"* %181, %"class.blink::Document"* dereferenceable(2848) %177, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %13, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %14) #12
  %182 = getelementptr inbounds i8, i8* %180, i64 -4
  %183 = bitcast i8* %182 to i16*
  %184 = load atomic i16, i16* %183 monotonic, align 2
  %185 = or i16 %184, 1
  store atomic i16 %185, i16* %183 release, align 2
  %186 = ptrtoint i8* %180 to i64
  %187 = bitcast %"class.blink::Member.0"* %15 to i64*
  store atomic i64 %186, i64* %187 monotonic, align 8
  %188 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %174
  %191 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %180) #12
  br label %192

192:                                              ; preds = %174, %190
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %179) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %178) #12
  br label %193

193:                                              ; preds = %170, %192
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #12
  br label %194

194:                                              ; preds = %1, %193
  ret void
}

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1EPKNS_5RangeE(%"class.blink::EphemeralRangeTemplate"*, %"class.blink::Range"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate.1270"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::Node"* @_ZN5blink12_GLOBAL__N_121ResolvePositionToNodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.1270"* dereferenceable(16)) unnamed_addr #1 {
  %2 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate.1270"* %0) #12
  %3 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate.1270"* %0) #12
  %4 = bitcast %"class.blink::Node"* %2 to i32 (%"class.blink::Node"*)***
  %5 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %5, i64 30
  %7 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::Node"* %2) #12
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %37

10:                                               ; preds = %1
  %11 = icmp eq %"class.blink::Node"* %2, null
  br i1 %11, label %37, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %37, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %19 = bitcast %"class.blink::Node"* %18 to %"class.blink::Node"**
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = icmp eq %"class.blink::Node"* %20, null
  br i1 %21, label %37, label %22

22:                                               ; preds = %17
  %23 = tail call %"class.blink::NodeList"* @_ZN5blink4Node10childNodesEv(%"class.blink::Node"* nonnull %2) #12
  %24 = bitcast %"class.blink::NodeList"* %23 to %"class.blink::Node"* (%"class.blink::NodeList"*, i32)***
  %25 = load %"class.blink::Node"* (%"class.blink::NodeList"*, i32)**, %"class.blink::Node"* (%"class.blink::NodeList"*, i32)*** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::NodeList"*, i32)*, %"class.blink::Node"* (%"class.blink::NodeList"*, i32)** %25, i64 10
  %27 = load %"class.blink::Node"* (%"class.blink::NodeList"*, i32)*, %"class.blink::Node"* (%"class.blink::NodeList"*, i32)** %26, align 8
  %28 = tail call %"class.blink::Node"* %27(%"class.blink::NodeList"* %23, i32 %3) #12
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %22
  %31 = tail call %"class.blink::NodeList"* @_ZN5blink4Node10childNodesEv(%"class.blink::Node"* nonnull %2) #12
  %32 = bitcast %"class.blink::NodeList"* %31 to %"class.blink::Node"* (%"class.blink::NodeList"*, i32)***
  %33 = load %"class.blink::Node"* (%"class.blink::NodeList"*, i32)**, %"class.blink::Node"* (%"class.blink::NodeList"*, i32)*** %32, align 8
  %34 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::NodeList"*, i32)*, %"class.blink::Node"* (%"class.blink::NodeList"*, i32)** %33, i64 10
  %35 = load %"class.blink::Node"* (%"class.blink::NodeList"*, i32)*, %"class.blink::Node"* (%"class.blink::NodeList"*, i32)** %34, align 8
  %36 = tail call %"class.blink::Node"* %35(%"class.blink::NodeList"* %31, i32 %3) #12
  br label %37

37:                                               ; preds = %17, %12, %10, %1, %22, %30
  %38 = phi %"class.blink::Node"* [ %36, %30 ], [ %2, %22 ], [ %2, %17 ], [ %2, %1 ], [ null, %10 ], [ %2, %12 ]
  ret %"class.blink::Node"* %38
}

declare i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate.1270"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121IsLastVisiblePositionEPNS_4NodeEj(%"class.blink::Node"*, i32) unnamed_addr #1 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::EphemeralRangeTemplate.1279", align 8
  %7 = alloca %"class.blink::TextIteratorBehavior", align 4
  %8 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %3, %"class.blink::Node"* %0, i32 %1) #12
  %10 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::Node"* dereferenceable(64) %0) #12
  %12 = bitcast %"class.blink::Node"* %0 to i32 (%"class.blink::Node"*)***
  %13 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %13, i64 30
  %15 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %14, align 8
  %16 = call i32 %15(%"class.blink::Node"* %0) #12
  %17 = icmp eq i32 %16, 1
  %18 = bitcast %"class.blink::TextIteratorBehavior"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #12
  br i1 %17, label %70, label %19

19:                                               ; preds = %2
  %20 = call %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"* %0, i1 zeroext false) #12
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  br label %25

25:                                               ; preds = %19, %22
  %26 = phi i32 [ %24, %22 ], [ 0, %19 ]
  %27 = icmp eq i32 %26, %1
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #12
  br label %71

29:                                               ; preds = %25
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  %31 = bitcast %"class.blink::EphemeralRangeTemplate.1279"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #12
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate.1279"* nonnull %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #12
  call void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"* nonnull %7) #12
  %32 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate.1279"* nonnull dereferenceable(32) %6, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %7) #12
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %5) #12
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %52, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %36
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %36
  %49 = phi i32 [ %47, %46 ], [ %45, %36 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #12
  br label %52

52:                                               ; preds = %29, %48, %51
  %53 = phi i1 [ %39, %48 ], [ %39, %51 ], [ true, %29 ]
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #12
  br label %69

69:                                               ; preds = %52, %65, %68
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #12
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate.1279"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  br label %71

70:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #12
  br label %86

71:                                               ; preds = %28, %69
  %72 = phi i1 [ %53, %69 ], [ true, %28 ]
  br i1 %21, label %86, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #12
  br label %86

86:                                               ; preds = %85, %82, %71, %70
  %87 = phi i1 [ true, %70 ], [ %72, %71 ], [ %72, %82 ], [ %72, %85 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  ret i1 %87
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::Node"* @_ZN5blink12_GLOBAL__N_128FirstNonEmptyVisibleTextNodeEPNS_4NodeE(%"class.blink::Node"*) unnamed_addr #1 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::EphemeralRangeTemplate.1279", align 8
  %4 = alloca %"class.blink::TextIteratorBehavior", align 4
  %5 = icmp eq %"class.blink::Node"* %0, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::TextIteratorBehavior"* %4 to i8*
  %8 = bitcast %"class.WTF::String"* %2 to i8*
  %9 = bitcast %"class.blink::EphemeralRangeTemplate.1279"* %3 to i8*
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = call %"class.blink::Node"* @_ZN5blink10FindBuffer22ForwardVisibleTextNodeERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %0) #12
  %12 = icmp eq %"class.blink::Node"* %11, null
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #12
  br i1 %12, label %51, label %13

13:                                               ; preds = %6, %64
  %14 = phi %"class.blink::Node"* [ %66, %64 ], [ %11, %6 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #12
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE15RangeOfContentsERKNS_4NodeE(%"class.blink::EphemeralRangeTemplate.1279"* nonnull sret %3, %"class.blink::Node"* nonnull dereferenceable(64) %14) #12
  call void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"* nonnull %4) #12
  %15 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate.1279"* nonnull dereferenceable(32) %3, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %4) #12
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %10, align 8
  %16 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %2) #12
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %34, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp ne i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %18
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %18
  %31 = phi i32 [ %29, %28 ], [ %27, %18 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #12
  br label %34

34:                                               ; preds = %33, %30, %13
  %35 = phi i1 [ %21, %30 ], [ %21, %33 ], [ false, %13 ]
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %52, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #12
  br label %52

51:                                               ; preds = %64, %6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #12
  br label %68

52:                                               ; preds = %50, %47, %34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #12
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate.1279"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  br i1 %35, label %68, label %53

53:                                               ; preds = %52
  %54 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %14, i32 0) #12
  %55 = icmp eq %"class.blink::Node"* %54, null
  br i1 %55, label %56, label %64

56:                                               ; preds = %53, %60
  %57 = phi %"class.blink::Node"* [ %62, %60 ], [ %14, %53 ]
  %58 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %57, i32 0) #12
  %59 = icmp eq %"class.blink::Node"* %58, null
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %57) #12
  %62 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %61, i64 0, i32 0
  %63 = icmp eq %"class.blink::ContainerNode"* %61, null
  br i1 %63, label %68, label %56

64:                                               ; preds = %56, %53
  %65 = phi %"class.blink::Node"* [ %54, %53 ], [ %58, %56 ]
  %66 = call %"class.blink::Node"* @_ZN5blink10FindBuffer22ForwardVisibleTextNodeERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %65) #12
  %67 = icmp eq %"class.blink::Node"* %66, null
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #12
  br i1 %67, label %51, label %13

68:                                               ; preds = %52, %60, %1, %51
  %69 = phi %"class.blink::Node"* [ null, %51 ], [ null, %1 ], [ null, %60 ], [ %14, %52 ]
  ret %"class.blink::Node"* %69
}

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal20NextSkippingChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"*) local_unnamed_addr #2

declare i32 @_ZN5blink21FindWordStartBoundaryEPKDsii(i16*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_122IsFirstVisiblePositionEPNS_4NodeEj(%"class.blink::Node"*, i32) unnamed_addr #1 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::EphemeralRangeTemplate.1279", align 8
  %7 = alloca %"class.blink::TextIteratorBehavior", align 4
  %8 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::Node"* dereferenceable(64) %0) #12
  %10 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::Node"* %0, i32 %1) #12
  %12 = bitcast %"class.blink::Node"* %0 to i32 (%"class.blink::Node"*)***
  %13 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %13, i64 30
  %15 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %14, align 8
  %16 = call i32 %15(%"class.blink::Node"* %0) #12
  %17 = icmp eq i32 %16, 1
  %18 = bitcast %"class.blink::TextIteratorBehavior"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #12
  %19 = icmp eq i32 %1, 0
  %20 = or i1 %19, %17
  br i1 %20, label %61, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = bitcast %"class.blink::EphemeralRangeTemplate.1279"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #12
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate.1279"* nonnull %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #12
  call void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"* nonnull %7) #12
  %24 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate.1279"* nonnull dereferenceable(32) %6, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %7) #12
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %25, align 8
  %26 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %5) #12
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %44, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %28
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %28
  %41 = phi i32 [ %39, %38 ], [ %37, %28 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #12
  br label %44

44:                                               ; preds = %21, %40, %43
  %45 = phi i1 [ %31, %40 ], [ %31, %43 ], [ true, %21 ]
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %62, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #12
  br label %62

61:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #12
  br label %63

62:                                               ; preds = %60, %57, %44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #12
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate.1279"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  br label %63

63:                                               ; preds = %61, %62
  %64 = phi i1 [ true, %61 ], [ %45, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::Node"* @_ZN5blink12_GLOBAL__N_131BackwardNonEmptyVisibleTextNodeEPNS_4NodeE(%"class.blink::Node"*) unnamed_addr #1 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::EphemeralRangeTemplate.1279", align 8
  %4 = alloca %"class.blink::TextIteratorBehavior", align 4
  %5 = icmp eq %"class.blink::Node"* %0, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::TextIteratorBehavior"* %4 to i8*
  %8 = bitcast %"class.WTF::String"* %2 to i8*
  %9 = bitcast %"class.blink::EphemeralRangeTemplate.1279"* %3 to i8*
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %65, %6
  %12 = phi %"class.blink::Node"* [ %0, %6 ], [ %66, %65 ]
  %13 = call %"class.blink::Node"* @_ZN5blink10FindBuffer23BackwardVisibleTextNodeERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %12) #12
  %14 = icmp eq %"class.blink::Node"* %13, null
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #12
  br i1 %14, label %52, label %15

15:                                               ; preds = %11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #12
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE15RangeOfContentsERKNS_4NodeE(%"class.blink::EphemeralRangeTemplate.1279"* nonnull sret %3, %"class.blink::Node"* nonnull dereferenceable(64) %13) #12
  call void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"* nonnull %4) #12
  %16 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate.1279"* nonnull dereferenceable(32) %3, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %4) #12
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %10, align 8
  %17 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %2) #12
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %35, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %19
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %19
  %32 = phi i32 [ %30, %29 ], [ %28, %19 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #12
  br label %35

35:                                               ; preds = %34, %31, %15
  %36 = phi i1 [ %22, %31 ], [ %22, %34 ], [ false, %15 ]
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %53, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #12
  br label %53

52:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #12
  br label %68

53:                                               ; preds = %51, %48, %35
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #12
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate.1279"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  %54 = select i1 %36, %"class.blink::Node"* %12, %"class.blink::Node"* %13
  br i1 %36, label %68, label %55

55:                                               ; preds = %53
  %56 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %54, i32 1) #12
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %55, %58
  %59 = phi %"class.blink::Node"* [ %60, %58 ], [ %56, %55 ]
  %60 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %59, i32 1) #12
  %61 = icmp eq %"class.blink::Node"* %60, null
  br i1 %61, label %65, label %58

62:                                               ; preds = %55
  %63 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %54) #12
  %64 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %63, i64 0, i32 0
  br label %65

65:                                               ; preds = %58, %62
  %66 = phi %"class.blink::Node"* [ %64, %62 ], [ %59, %58 ]
  %67 = icmp eq %"class.blink::Node"* %66, null
  br i1 %67, label %68, label %11

68:                                               ; preds = %53, %65, %1, %52
  %69 = phi %"class.blink::Node"* [ null, %52 ], [ null, %1 ], [ %13, %53 ], [ null, %65 ]
  ret %"class.blink::Node"* %69
}

declare i32 @_ZN5blink19FindWordEndBoundaryEPKDsii(i16*, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator6CancelEv(%"class.blink::TextFragmentSelectorGenerator"*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN5blink29TextFragmentSelectorGenerator5ResetEv(%"class.blink::TextFragmentSelectorGenerator"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator15RequestSelectorEN4base12OnceCallbackIFvRKN3WTF6StringEEEE(%"class.blink::TextFragmentSelectorGenerator"*, %"class.base::OnceCallback"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::TextFragmentSelector", align 8
  %4 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN19shared_highlighting31kPreemptiveLinkToTextGenerationE) #12
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  tail call void @_ZN5blink29TextFragmentSelectorGenerator5ResetEv(%"class.blink::TextFragmentSelectorGenerator"* %0)
  %6 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 4, i32 0
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  %8 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %6, %"class.base::internal::CallbackBase"* dereferenceable(8) %7) #12
  tail call void @_ZN5blink29TextFragmentSelectorGenerator16GenerateSelectorEv(%"class.blink::TextFragmentSelectorGenerator"* %0)
  br label %28

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 4
  tail call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 %11, i32 5) #12
  %12 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 4, i32 0
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  %14 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %12, %"class.base::internal::CallbackBase"* dereferenceable(8) %13) #12
  %15 = load i32, i32* %10, align 4
  %16 = add i32 %15, -3
  %17 = icmp ult i32 %16, 2
  %18 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast i8* %18 to i16*
  br i1 %17, label %20, label %27

20:                                               ; preds = %9
  store i16 1, i16* %19, align 8
  %21 = icmp eq i32 %15, 3
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.blink::TextFragmentSelector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #12
  call void @_ZN5blink20TextFragmentSelectorC1ENS0_12SelectorTypeE(%"class.blink::TextFragmentSelector"* nonnull %3, i32 0) #12
  call void @_ZN5blink29TextFragmentSelectorGenerator25NotifyClientSelectorReadyERKNS_20TextFragmentSelectorE(%"class.blink::TextFragmentSelectorGenerator"* %0, %"class.blink::TextFragmentSelector"* nonnull dereferenceable(40) %3)
  call void @_ZN5blink20TextFragmentSelectorD2Ev(%"class.blink::TextFragmentSelector"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #12
  br label %28

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.blink::TextFragmentSelector"*, %"class.blink::TextFragmentSelector"** %25, align 8
  tail call void @_ZN5blink29TextFragmentSelectorGenerator25NotifyClientSelectorReadyERKNS_20TextFragmentSelectorE(%"class.blink::TextFragmentSelectorGenerator"* %0, %"class.blink::TextFragmentSelector"* dereferenceable(40) %26)
  br label %28

27:                                               ; preds = %9
  store i16 257, i16* %19, align 8
  br label %28

28:                                               ; preds = %22, %24, %27, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator25NotifyClientSelectorReadyERKNS_20TextFragmentSelectorE(%"class.blink::TextFragmentSelectorGenerator"* nocapture, %"class.blink::TextFragmentSelector"* dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN19shared_highlighting31kPreemptiveLinkToTextGenerationE) #12
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN5blink29TextFragmentSelectorGenerator33RecordPreemptiveGenerationMetricsERKNS_20TextFragmentSelectorE(%"class.blink::TextFragmentSelectorGenerator"* %0, %"class.blink::TextFragmentSelector"* dereferenceable(40) %1)
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK5blink20TextFragmentSelector8ToStringEv(%"class.blink::TextFragmentSelector"* %1) #12
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"* %8 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %18 = inttoptr i64 %15 to %"class.base::internal::BindStateBase"*
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %18, i64 0, i32 1
  %20 = bitcast void ()** %19 to void (%"class.base::internal::BindStateBase"*, %"class.WTF::String"*)**
  %21 = load void (%"class.base::internal::BindStateBase"*, %"class.WTF::String"*)*, void (%"class.base::internal::BindStateBase"*, %"class.WTF::String"*)** %20, align 8
  call void %21(%"class.base::internal::BindStateBase"* %18, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %7
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #12
  br label %37

37:                                               ; preds = %7, %33, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret void
}

declare void @_ZN5blink20TextFragmentSelectorC1ENS0_12SelectorTypeE(%"class.blink::TextFragmentSelector"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20TextFragmentSelectorD2Ev(%"class.blink::TextFragmentSelector"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TextFragmentSelector", %"class.blink::TextFragmentSelector"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::TextFragmentSelector", %"class.blink::TextFragmentSelector"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #12
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::TextFragmentSelector", %"class.blink::TextFragmentSelector"* %0, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #12
  br label %52

52:                                               ; preds = %35, %48, %51
  %53 = getelementptr inbounds %"class.blink::TextFragmentSelector", %"class.blink::TextFragmentSelector"* %0, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #12
  br label %69

69:                                               ; preds = %52, %65, %68
  ret void
}

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32), %"class.blink::TextIteratorBehavior"* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator20ResolveSelectorStateEv(%"class.blink::TextFragmentSelectorGenerator"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::TextFragmentSelector", align 8
  %3 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %20 [
    i32 2, label %5
    i32 0, label %6
    i32 1, label %6
    i32 3, label %6
    i32 4, label %13
  ]

5:                                                ; preds = %1
  tail call void @_ZN5blink29TextFragmentSelectorGenerator13RunTextFinderEv(%"class.blink::TextFragmentSelectorGenerator"* %0)
  br label %20

6:                                                ; preds = %1, %1, %1
  %7 = bitcast %"class.blink::TextFragmentSelector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #12
  call void @_ZN5blink20TextFragmentSelectorC1ENS0_12SelectorTypeE(%"class.blink::TextFragmentSelector"* nonnull %2, i32 0) #12
  call void @_ZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorE(%"class.blink::TextFragmentSelectorGenerator"* %0, %"class.blink::TextFragmentSelector"* nonnull dereferenceable(40) %2) #12
  %8 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  call void @_ZN5blink29TextFragmentSelectorGenerator25NotifyClientSelectorReadyERKNS_20TextFragmentSelectorE(%"class.blink::TextFragmentSelectorGenerator"* %0, %"class.blink::TextFragmentSelector"* nonnull dereferenceable(40) %2) #12
  br label %12

12:                                               ; preds = %6, %11
  call void @_ZN5blink20TextFragmentSelectorD2Ev(%"class.blink::TextFragmentSelector"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #12
  br label %20

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %"class.blink::TextFragmentSelector"*, %"class.blink::TextFragmentSelector"** %14, align 8
  tail call void @_ZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorE(%"class.blink::TextFragmentSelectorGenerator"* %0, %"class.blink::TextFragmentSelector"* dereferenceable(40) %15) #12
  %16 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %16, align 8
  %18 = icmp eq %"class.base::internal::BindStateBase"* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %13
  tail call void @_ZN5blink29TextFragmentSelectorGenerator25NotifyClientSelectorReadyERKNS_20TextFragmentSelectorE(%"class.blink::TextFragmentSelectorGenerator"* %0, %"class.blink::TextFragmentSelector"* dereferenceable(40) %15) #12
  br label %20

20:                                               ; preds = %19, %13, %1, %12, %5
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate.1279"* dereferenceable(32), %"class.blink::TextIteratorBehavior"* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_5RangeE(%"class.blink::EphemeralRangeTemplate.1279"*, %"class.blink::Range"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate.1279"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator25GenerateSelectorCandidateEv(%"class.blink::TextFragmentSelectorGenerator"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  tail call void @_ZN5blink29TextFragmentSelectorGenerator21GenerateExactSelectorEv(%"class.blink::TextFragmentSelectorGenerator"* %0)
  %6 = load i32, i32* %2, align 8
  br label %7

7:                                                ; preds = %5, %1
  %8 = phi i32 [ %6, %5 ], [ %3, %1 ]
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  tail call void @_ZN5blink29TextFragmentSelectorGenerator19ExtendRangeSelectorEv(%"class.blink::TextFragmentSelectorGenerator"* %0)
  %11 = load i32, i32* %2, align 8
  br label %12

12:                                               ; preds = %10, %7
  %13 = phi i32 [ %11, %10 ], [ %8, %7 ]
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  tail call void @_ZN5blink29TextFragmentSelectorGenerator13ExtendContextEv(%"class.blink::TextFragmentSelectorGenerator"* %0)
  br label %16

16:                                               ; preds = %15, %12
  tail call void @_ZN5blink29TextFragmentSelectorGenerator20ResolveSelectorStateEv(%"class.blink::TextFragmentSelectorGenerator"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator21GenerateExactSelectorEv(%"class.blink::TextFragmentSelectorGenerator"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate.1270", align 8
  %4 = alloca %"class.blink::PositionTemplate.1270", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::TextIteratorBehavior", align 4
  %8 = alloca i32, align 4
  %9 = bitcast %"class.blink::EphemeralRangeTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.blink::EphemeralRangeTemplate"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = load %"class.blink::Range"*, %"class.blink::Range"** %10, align 8
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1EPKNS_5RangeE(%"class.blink::EphemeralRangeTemplate"* nonnull %2, %"class.blink::Range"* %12) #12
  %13 = bitcast %"class.blink::PositionTemplate.1270"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #12
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate.1270"* nonnull sret %3, %"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  %14 = bitcast %"class.blink::PositionTemplate.1270"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #12
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate.1270"* nonnull sret %4, %"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  %15 = call zeroext i1 @_ZN5blink18TextFragmentFinder26IsInSameUninterruptedBlockERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEES7_(%"class.blink::PositionTemplate.1270"* nonnull dereferenceable(16) %3, %"class.blink::PositionTemplate.1270"* nonnull dereferenceable(16) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #12
  br i1 %15, label %18, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 5
  store i32 1, i32* %17, align 8
  br label %91

18:                                               ; preds = %1
  %19 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %21 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  %22 = bitcast %"class.blink::TextIteratorBehavior"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #12
  call void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"* nonnull %7) #12
  %23 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %2, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %7) #12
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  %25 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %6) #12
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %20, align 8
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %43, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #12
  br label %41

41:                                               ; preds = %40, %37
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  br label %43

43:                                               ; preds = %41, %18
  %44 = phi %"class.WTF::StringImpl"* [ %42, %41 ], [ %25, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp ugt i32 %48, 300
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 5
  store i32 1, i32* %51, align 8
  br label %76

52:                                               ; preds = %43, %46
  %53 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #12
  store i32 1, i32* %8, align 4
  %54 = call %"class.blink::TextFragmentSelector"* @_ZNSt3__111make_uniqueIN5blink20TextFragmentSelectorEJNS2_12SelectorTypeERN3WTF6StringERA1_KcS9_S9_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* nonnull dereferenceable(4) %8, %"class.WTF::String"* nonnull dereferenceable(8) %5, [1 x i8]* nonnull dereferenceable(1) @.str.2, [1 x i8]* nonnull dereferenceable(1) @.str.2, [1 x i8]* nonnull dereferenceable(1) @.str.2)
  %55 = ptrtoint %"class.blink::TextFragmentSelector"* %54 to i64
  %56 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 3
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::TextFragmentSelector"*, %"class.blink::TextFragmentSelector"** %57, align 8
  %59 = bitcast %"class.std::__1::unique_ptr"* %56 to i64*
  store i64 %55, i64* %59, align 8
  %60 = icmp eq %"class.blink::TextFragmentSelector"* %58, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %52
  call void @_ZN5blink20TextFragmentSelectorD2Ev(%"class.blink::TextFragmentSelector"* nonnull %58) #12
  %62 = bitcast %"class.blink::TextFragmentSelector"* %58 to i8*
  call void @_ZdlPv(i8* %62) #13
  br label %63

63:                                               ; preds = %61, %52
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #12
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 5
  store i32 2, i32* %67, align 8
  br label %90

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp ult i32 %70, 20
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  store i32 2, i32* %73, align 4
  br label %76

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 5
  store i32 2, i32* %75, align 8
  br label %76

76:                                               ; preds = %50, %72, %74
  %77 = phi %"class.WTF::StringImpl"* [ %64, %74 ], [ %44, %50 ], [ %64, %72 ]
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %76
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %76
  %87 = phi i32 [ %85, %84 ], [ %83, %76 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #12
  br label %90

90:                                               ; preds = %66, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  br label %91

91:                                               ; preds = %90, %16
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator19ExtendRangeSelectorEv(%"class.blink::TextFragmentSelectorGenerator"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate.1270", align 8
  %4 = alloca %"class.blink::PositionTemplate.1270", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::TextIteratorBehavior", align 4
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 14
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 10
  br i1 %14, label %15, label %17

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 5
  store i32 2, i32* %16, align 8
  br label %393

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 11
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %28, align 8
  br label %279

29:                                               ; preds = %17, %22
  %30 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 12
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %274

38:                                               ; preds = %29, %34
  %39 = bitcast %"class.blink::EphemeralRangeTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.blink::EphemeralRangeTemplate"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 32, i1 false)
  %42 = load %"class.blink::Range"*, %"class.blink::Range"** %40, align 8
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1EPKNS_5RangeE(%"class.blink::EphemeralRangeTemplate"* nonnull %2, %"class.blink::Range"* %42) #12
  %43 = bitcast %"class.blink::PositionTemplate.1270"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #12
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate.1270"* nonnull sret %3, %"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  %44 = bitcast %"class.blink::PositionTemplate.1270"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #12
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate.1270"* nonnull sret %4, %"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  %45 = call zeroext i1 @_ZN5blink18TextFragmentFinder26IsInSameUninterruptedBlockERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEES7_(%"class.blink::PositionTemplate.1270"* nonnull dereferenceable(16) %3, %"class.blink::PositionTemplate.1270"* nonnull dereferenceable(16) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #12
  br i1 %45, label %46, label %138

46:                                               ; preds = %38
  %47 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %48, align 8
  %49 = bitcast %"class.blink::TextIteratorBehavior"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #12
  call void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"* nonnull %6) #12
  %50 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %2, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %6) #12
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #12
  call void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"* nonnull %5) #12
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  br label %56

56:                                               ; preds = %46, %53
  %57 = phi i32 [ %55, %53 ], [ 0, %46 ]
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 1
  %59 = bitcast %"class.WTF::StringImpl"* %58 to i16*
  %60 = select i1 %52, i16* null, i16* %59
  %61 = sdiv i32 %57, 2
  %62 = call i32 @_ZN5blink19FindNextWordForwardEPKDsii(i16* %60, i32 %57, i32 %61) #12
  %63 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %5, i32 0, i32 %62) #12
  %64 = ptrtoint %"class.WTF::StringImpl"* %63 to i64
  %65 = bitcast %"class.WTF::String"* %18 to i64*
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  store i64 %64, i64* %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %56
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #12
  br label %81

81:                                               ; preds = %80, %77, %56
  %82 = icmp eq i32 %62, %57
  br i1 %82, label %83, label %87

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  store i32 3, i32* %84, align 4
  %85 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %86 = bitcast i8* %85 to i64*
  store i64 4294967297, i64* %86, align 4
  br label %119

87:                                               ; preds = %81
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %90, label %92

90:                                               ; preds = %87
  %91 = xor i32 %62, -1
  br label %97

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = xor i32 %62, -1
  %96 = add i32 %94, %95
  br label %97

97:                                               ; preds = %90, %92
  %98 = phi i32 [ %96, %92 ], [ %91, %90 ]
  %99 = phi i32 [ %94, %92 ], [ 0, %90 ]
  %100 = sub i32 %99, %98
  %101 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %5, i32 %100, i32 %98) #12
  %102 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %103 = bitcast %"class.WTF::String"* %30 to i64*
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %102, i64* %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #12
  br label %119

119:                                              ; preds = %97, %115, %118, %83
  %120 = phi i32 [ 1, %83 ], [ 0, %118 ], [ 0, %115 ], [ 0, %97 ]
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #12
  br label %136

136:                                              ; preds = %119, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  %137 = icmp eq i32 %120, 0
  br i1 %137, label %271, label %273

138:                                              ; preds = %38
  %139 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #12
  %140 = load %"class.blink::Range"*, %"class.blink::Range"** %40, align 8
  %141 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %140, i64 0, i32 2
  %142 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %140, i64 0, i32 2, i32 3
  %143 = load i32, i32* %142, align 8, !noalias !2
  %144 = icmp eq i32 %143, -1
  br i1 %144, label %165, label %145

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %141, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.blink::Node"*, %"class.blink::Node"** %146, align 8, !noalias !2
  %148 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %147, i64 0, i32 3, i32 0, i32 0
  %149 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %149, i64 0, i32 2, i32 0, i32 0
  %151 = load %"class.blink::Document"*, %"class.blink::Document"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %151, i64 0, i32 52
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %140, i64 0, i32 2, i32 2
  %155 = load i64, i64* %154, align 8, !noalias !2
  %156 = icmp eq i64 %153, %155
  br i1 %156, label %182, label %157

157:                                              ; preds = %145
  %158 = bitcast %"class.blink::Node"* %147 to i1 (%"class.blink::Node"*)***
  %159 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %158, align 8
  %160 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %159, i64 41
  %161 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %160, align 8
  %162 = call zeroext i1 %161(%"class.blink::Node"* %147) #12
  br i1 %162, label %163, label %165

163:                                              ; preds = %157
  %164 = load i32, i32* %142, align 8, !noalias !2
  br label %182

165:                                              ; preds = %157, %138
  %166 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %141, i64 0, i32 0, i32 0, i32 0
  %167 = load %"class.blink::Node"*, %"class.blink::Node"** %166, align 8, !noalias !2
  %168 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %167, i64 0, i32 3, i32 0, i32 0
  %169 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %169, i64 0, i32 2, i32 0, i32 0
  %171 = load %"class.blink::Document"*, %"class.blink::Document"** %170, align 8
  %172 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %171, i64 0, i32 52
  %173 = load i64, i64* %172, align 8
  %174 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %140, i64 0, i32 2, i32 2
  store i64 %173, i64* %174, align 8, !noalias !2
  %175 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %140, i64 0, i32 2, i32 1, i32 0, i32 0
  %176 = load %"class.blink::Node"*, %"class.blink::Node"** %175, align 8, !noalias !2
  %177 = icmp eq %"class.blink::Node"* %176, null
  br i1 %177, label %178, label %179

178:                                              ; preds = %165
  store i32 0, i32* %142, align 8, !noalias !2
  br label %182

179:                                              ; preds = %165
  %180 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %176) #12
  %181 = add i32 %180, 1
  store i32 %181, i32* %142, align 8, !noalias !2
  br label %182

182:                                              ; preds = %145, %163, %178, %179
  %183 = phi i32 [ %164, %163 ], [ %143, %145 ], [ 0, %178 ], [ %181, %179 ]
  %184 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %141, i64 0, i32 0, i32 0, i32 0
  %185 = load %"class.blink::Node"*, %"class.blink::Node"** %184, align 8, !noalias !2
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::Node"* %185, i32 %183) #12
  %186 = call %"class.WTF::StringImpl"* @_ZN5blink29TextFragmentSelectorGenerator16GetNextTextBlockERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::TextFragmentSelectorGenerator"* undef, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7)
  %187 = ptrtoint %"class.WTF::StringImpl"* %186 to i64
  %188 = bitcast %"class.WTF::String"* %18 to i64*
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  store i64 %187, i64* %188, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %204, label %191

191:                                              ; preds = %182
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %189) #12
  br label %204

204:                                              ; preds = %203, %200, %182
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #12
  %205 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %205) #12
  %206 = load %"class.blink::Range"*, %"class.blink::Range"** %40, align 8
  %207 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %206, i64 0, i32 3
  %208 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %206, i64 0, i32 3, i32 3
  %209 = load i32, i32* %208, align 8, !noalias !7
  %210 = icmp eq i32 %209, -1
  br i1 %210, label %231, label %211

211:                                              ; preds = %204
  %212 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %207, i64 0, i32 0, i32 0, i32 0
  %213 = load %"class.blink::Node"*, %"class.blink::Node"** %212, align 8, !noalias !7
  %214 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %213, i64 0, i32 3, i32 0, i32 0
  %215 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %214, align 8
  %216 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %215, i64 0, i32 2, i32 0, i32 0
  %217 = load %"class.blink::Document"*, %"class.blink::Document"** %216, align 8
  %218 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %217, i64 0, i32 52
  %219 = load i64, i64* %218, align 8
  %220 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %206, i64 0, i32 3, i32 2
  %221 = load i64, i64* %220, align 8, !noalias !7
  %222 = icmp eq i64 %219, %221
  br i1 %222, label %248, label %223

223:                                              ; preds = %211
  %224 = bitcast %"class.blink::Node"* %213 to i1 (%"class.blink::Node"*)***
  %225 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %224, align 8
  %226 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %225, i64 41
  %227 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %226, align 8
  %228 = call zeroext i1 %227(%"class.blink::Node"* %213) #12
  br i1 %228, label %229, label %231

229:                                              ; preds = %223
  %230 = load i32, i32* %208, align 8, !noalias !7
  br label %248

231:                                              ; preds = %223, %204
  %232 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %207, i64 0, i32 0, i32 0, i32 0
  %233 = load %"class.blink::Node"*, %"class.blink::Node"** %232, align 8, !noalias !7
  %234 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %233, i64 0, i32 3, i32 0, i32 0
  %235 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %234, align 8
  %236 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %235, i64 0, i32 2, i32 0, i32 0
  %237 = load %"class.blink::Document"*, %"class.blink::Document"** %236, align 8
  %238 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %237, i64 0, i32 52
  %239 = load i64, i64* %238, align 8
  %240 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %206, i64 0, i32 3, i32 2
  store i64 %239, i64* %240, align 8, !noalias !7
  %241 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %206, i64 0, i32 3, i32 1, i32 0, i32 0
  %242 = load %"class.blink::Node"*, %"class.blink::Node"** %241, align 8, !noalias !7
  %243 = icmp eq %"class.blink::Node"* %242, null
  br i1 %243, label %244, label %245

244:                                              ; preds = %231
  store i32 0, i32* %208, align 8, !noalias !7
  br label %248

245:                                              ; preds = %231
  %246 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %242) #12
  %247 = add i32 %246, 1
  store i32 %247, i32* %208, align 8, !noalias !7
  br label %248

248:                                              ; preds = %211, %229, %244, %245
  %249 = phi i32 [ %230, %229 ], [ %209, %211 ], [ 0, %244 ], [ %247, %245 ]
  %250 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %207, i64 0, i32 0, i32 0, i32 0
  %251 = load %"class.blink::Node"*, %"class.blink::Node"** %250, align 8, !noalias !7
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %8, %"class.blink::Node"* %251, i32 %249) #12
  %252 = call %"class.WTF::StringImpl"* @_ZN5blink29TextFragmentSelectorGenerator20GetPreviousTextBlockERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::TextFragmentSelectorGenerator"* undef, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8)
  %253 = ptrtoint %"class.WTF::StringImpl"* %252 to i64
  %254 = bitcast %"class.WTF::String"* %30 to i64*
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %253, i64* %254, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %270, label %257

257:                                              ; preds = %248
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  br i1 %261, label %264, label %266

264:                                              ; preds = %257
  %265 = add i32 %263, -1
  store i32 %265, i32* %262, align 4
  br label %266

266:                                              ; preds = %264, %257
  %267 = phi i32 [ %265, %264 ], [ %263, %257 ]
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %266
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %255) #12
  br label %270

270:                                              ; preds = %269, %266, %248
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %205) #12
  br label %271

271:                                              ; preds = %136, %270
  store i32 3, i32* %12, align 4
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #12
  %272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  br label %274

273:                                              ; preds = %136
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #12
  br label %393

274:                                              ; preds = %271, %34
  %275 = phi %"class.WTF::StringImpl"* [ %272, %271 ], [ %20, %34 ]
  %276 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #12
  %277 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %277, align 8
  %278 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %278, label %299, label %279

279:                                              ; preds = %26, %274
  %280 = phi %"class.WTF::StringImpl"** [ %28, %26 ], [ %277, %274 ]
  %281 = phi i8* [ %27, %26 ], [ %276, %274 ]
  %282 = phi %"class.WTF::StringImpl"* [ %20, %26 ], [ %275, %274 ]
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = load atomic i32, i32* %283 monotonic, align 4
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %299

287:                                              ; preds = %279
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  %290 = zext i32 %289 to i33
  %291 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %290, i33 1) #12
  %292 = extractvalue { i33, i1 } %291, 1
  %293 = extractvalue { i33, i1 } %291, 0
  %294 = icmp slt i33 %293, 0
  %295 = or i1 %292, %294
  br i1 %295, label %296, label %297, !prof !12

296:                                              ; preds = %287
  call void @llvm.trap() #12
  unreachable

297:                                              ; preds = %287
  %298 = trunc i33 %293 to i32
  store i32 %298, i32* %288, align 4
  br label %299

299:                                              ; preds = %274, %279, %297
  %300 = phi %"class.WTF::StringImpl"** [ %277, %274 ], [ %280, %279 ], [ %280, %297 ]
  %301 = phi i8* [ %276, %274 ], [ %281, %279 ], [ %281, %297 ]
  %302 = phi %"class.WTF::StringImpl"* [ null, %274 ], [ %282, %279 ], [ %282, %297 ]
  %303 = load i32, i32* %12, align 4
  %304 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_117GetWordsFromStartEN3WTF6StringEi(%"class.WTF::StringImpl"* %302, i32 %303)
  store %"class.WTF::StringImpl"* %304, %"class.WTF::StringImpl"** %300, align 8
  %305 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #12
  %306 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %306, align 8
  %307 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 12, i32 0, i32 0
  %308 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %307, align 8
  %309 = icmp eq %"class.WTF::StringImpl"* %308, null
  br i1 %309, label %327, label %310

310:                                              ; preds = %299
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load atomic i32, i32* %311 monotonic, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %327

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  %318 = zext i32 %317 to i33
  %319 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %318, i33 1) #12
  %320 = extractvalue { i33, i1 } %319, 1
  %321 = extractvalue { i33, i1 } %319, 0
  %322 = icmp slt i33 %321, 0
  %323 = or i1 %320, %322
  br i1 %323, label %324, label %325, !prof !12

324:                                              ; preds = %315
  call void @llvm.trap() #12
  unreachable

325:                                              ; preds = %315
  %326 = trunc i33 %321 to i32
  store i32 %326, i32* %316, align 4
  br label %327

327:                                              ; preds = %299, %310, %325
  %328 = load i32, i32* %12, align 4
  %329 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_115GetWordsFromEndEN3WTF6StringEi(%"class.WTF::StringImpl"* %308, i32 %328)
  store %"class.WTF::StringImpl"* %329, %"class.WTF::StringImpl"** %306, align 8
  %330 = load i32, i32* %12, align 4
  %331 = add nsw i32 %330, 1
  store i32 %331, i32* %12, align 4
  %332 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 3
  %333 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %332, i64 0, i32 0, i32 0, i32 0
  %334 = load %"class.blink::TextFragmentSelector"*, %"class.blink::TextFragmentSelector"** %333, align 8
  %335 = icmp eq %"class.blink::TextFragmentSelector"* %334, null
  br i1 %335, label %349, label %336

336:                                              ; preds = %327
  %337 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %338 = getelementptr inbounds %"class.blink::TextFragmentSelector", %"class.blink::TextFragmentSelector"* %334, i64 0, i32 1, i32 0, i32 0
  %339 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %338, align 8
  %340 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %337, %"class.WTF::StringImpl"* %339) #12
  br i1 %340, label %341, label %349

341:                                              ; preds = %336
  %342 = load %"class.blink::TextFragmentSelector"*, %"class.blink::TextFragmentSelector"** %333, align 8
  %343 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  %344 = getelementptr inbounds %"class.blink::TextFragmentSelector", %"class.blink::TextFragmentSelector"* %342, i64 0, i32 2, i32 0, i32 0
  %345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %344, align 8
  %346 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %343, %"class.WTF::StringImpl"* %345) #12
  br i1 %346, label %347, label %349

347:                                              ; preds = %341
  %348 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 5
  store i32 2, i32* %348, align 8
  br label %360

349:                                              ; preds = %327, %341, %336
  %350 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %350) #12
  store i32 2, i32* %11, align 4
  %351 = call %"class.blink::TextFragmentSelector"* @_ZNSt3__111make_uniqueIN5blink20TextFragmentSelectorEJNS2_12SelectorTypeERN3WTF6StringES6_RA1_KcS9_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* nonnull dereferenceable(4) %11, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::String"* nonnull dereferenceable(8) %10, [1 x i8]* nonnull dereferenceable(1) @.str.2, [1 x i8]* nonnull dereferenceable(1) @.str.2)
  %352 = ptrtoint %"class.blink::TextFragmentSelector"* %351 to i64
  %353 = load %"class.blink::TextFragmentSelector"*, %"class.blink::TextFragmentSelector"** %333, align 8
  %354 = bitcast %"class.std::__1::unique_ptr"* %332 to i64*
  store i64 %352, i64* %354, align 8
  %355 = icmp eq %"class.blink::TextFragmentSelector"* %353, null
  br i1 %355, label %358, label %356

356:                                              ; preds = %349
  call void @_ZN5blink20TextFragmentSelectorD2Ev(%"class.blink::TextFragmentSelector"* nonnull %353) #12
  %357 = bitcast %"class.blink::TextFragmentSelector"* %353 to i8*
  call void @_ZdlPv(i8* %357) #13
  br label %358

358:                                              ; preds = %356, %349
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %350) #12
  %359 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  store i32 2, i32* %359, align 4
  br label %360

360:                                              ; preds = %358, %347
  %361 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  %362 = icmp eq %"class.WTF::StringImpl"* %361, null
  br i1 %362, label %376, label %363

363:                                              ; preds = %360
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %361, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %365 = load atomic i32, i32* %364 monotonic, align 4
  %366 = and i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %361, i64 0, i32 0
  %369 = load i32, i32* %368, align 4
  br i1 %367, label %370, label %372

370:                                              ; preds = %363
  %371 = add i32 %369, -1
  store i32 %371, i32* %368, align 4
  br label %372

372:                                              ; preds = %370, %363
  %373 = phi i32 [ %371, %370 ], [ %369, %363 ]
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %375, label %376

375:                                              ; preds = %372
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %361) #12
  br label %376

376:                                              ; preds = %360, %372, %375
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #12
  %377 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %378 = icmp eq %"class.WTF::StringImpl"* %377, null
  br i1 %378, label %392, label %379

379:                                              ; preds = %376
  %380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %381 = load atomic i32, i32* %380 monotonic, align 4
  %382 = and i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 0, i32 0
  %385 = load i32, i32* %384, align 4
  br i1 %383, label %386, label %388

386:                                              ; preds = %379
  %387 = add i32 %385, -1
  store i32 %387, i32* %384, align 4
  br label %388

388:                                              ; preds = %386, %379
  %389 = phi i32 [ %387, %386 ], [ %385, %379 ]
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %392

391:                                              ; preds = %388
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %377) #12
  br label %392

392:                                              ; preds = %376, %388, %391
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %301) #12
  br label %393

393:                                              ; preds = %273, %392, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator13ExtendContextEv(%"class.blink::TextFragmentSelectorGenerator"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::PositionTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 13
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 10
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  store i32 3, i32* %10, align 4
  %11 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast i8* %11 to i64*
  store i64 17179869185, i64* %12, align 4
  br label %317

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 9
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %170

22:                                               ; preds = %13, %18
  %23 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 10
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %166

31:                                               ; preds = %22, %27
  %32 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::Range"*, %"class.blink::Range"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %34, i64 0, i32 2
  %36 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %34, i64 0, i32 2, i32 3
  %37 = load i32, i32* %36, align 8, !noalias !13
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %59, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %35, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8, !noalias !13
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 3, i32 0, i32 0
  %43 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %43, i64 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::Document"*, %"class.blink::Document"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %45, i64 0, i32 52
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %34, i64 0, i32 2, i32 2
  %49 = load i64, i64* %48, align 8, !noalias !13
  %50 = icmp eq i64 %47, %49
  br i1 %50, label %76, label %51

51:                                               ; preds = %39
  %52 = bitcast %"class.blink::Node"* %41 to i1 (%"class.blink::Node"*)***
  %53 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %52, align 8
  %54 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %53, i64 41
  %55 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.blink::Node"* %41) #12
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = load i32, i32* %36, align 8, !noalias !13
  br label %76

59:                                               ; preds = %51, %31
  %60 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %35, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::Node"*, %"class.blink::Node"** %60, align 8, !noalias !13
  %62 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 3, i32 0, i32 0
  %63 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %63, i64 0, i32 2, i32 0, i32 0
  %65 = load %"class.blink::Document"*, %"class.blink::Document"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %65, i64 0, i32 52
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %34, i64 0, i32 2, i32 2
  store i64 %67, i64* %68, align 8, !noalias !13
  %69 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %34, i64 0, i32 2, i32 1, i32 0, i32 0
  %70 = load %"class.blink::Node"*, %"class.blink::Node"** %69, align 8, !noalias !13
  %71 = icmp eq %"class.blink::Node"* %70, null
  br i1 %71, label %72, label %73

72:                                               ; preds = %59
  store i32 0, i32* %36, align 8, !noalias !13
  br label %76

73:                                               ; preds = %59
  %74 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %70) #12
  %75 = add i32 %74, 1
  store i32 %75, i32* %36, align 8, !noalias !13
  br label %76

76:                                               ; preds = %39, %57, %72, %73
  %77 = phi i32 [ %58, %57 ], [ %37, %39 ], [ 0, %72 ], [ %75, %73 ]
  %78 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %35, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.blink::Node"*, %"class.blink::Node"** %78, align 8, !noalias !13
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %2, %"class.blink::Node"* %79, i32 %77) #12
  %80 = call %"class.WTF::StringImpl"* @_ZN5blink29TextFragmentSelectorGenerator20GetPreviousTextBlockERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::TextFragmentSelectorGenerator"* undef, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %2)
  %81 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %82 = bitcast %"class.WTF::String"* %14 to i64*
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  store i64 %81, i64* %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %76
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #12
  br label %98

98:                                               ; preds = %97, %94, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #12
  %99 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #12
  %100 = load %"class.blink::Range"*, %"class.blink::Range"** %33, align 8
  %101 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %100, i64 0, i32 3
  %102 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %100, i64 0, i32 3, i32 3
  %103 = load i32, i32* %102, align 8, !noalias !18
  %104 = icmp eq i32 %103, -1
  br i1 %104, label %125, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %101, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.blink::Node"*, %"class.blink::Node"** %106, align 8, !noalias !18
  %108 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %107, i64 0, i32 3, i32 0, i32 0
  %109 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %109, i64 0, i32 2, i32 0, i32 0
  %111 = load %"class.blink::Document"*, %"class.blink::Document"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %111, i64 0, i32 52
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %100, i64 0, i32 3, i32 2
  %115 = load i64, i64* %114, align 8, !noalias !18
  %116 = icmp eq i64 %113, %115
  br i1 %116, label %142, label %117

117:                                              ; preds = %105
  %118 = bitcast %"class.blink::Node"* %107 to i1 (%"class.blink::Node"*)***
  %119 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %118, align 8
  %120 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %119, i64 41
  %121 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %120, align 8
  %122 = call zeroext i1 %121(%"class.blink::Node"* %107) #12
  br i1 %122, label %123, label %125

123:                                              ; preds = %117
  %124 = load i32, i32* %102, align 8, !noalias !18
  br label %142

125:                                              ; preds = %117, %98
  %126 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %101, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.blink::Node"*, %"class.blink::Node"** %126, align 8, !noalias !18
  %128 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %127, i64 0, i32 3, i32 0, i32 0
  %129 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %129, i64 0, i32 2, i32 0, i32 0
  %131 = load %"class.blink::Document"*, %"class.blink::Document"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %131, i64 0, i32 52
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %100, i64 0, i32 3, i32 2
  store i64 %133, i64* %134, align 8, !noalias !18
  %135 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %100, i64 0, i32 3, i32 1, i32 0, i32 0
  %136 = load %"class.blink::Node"*, %"class.blink::Node"** %135, align 8, !noalias !18
  %137 = icmp eq %"class.blink::Node"* %136, null
  br i1 %137, label %138, label %139

138:                                              ; preds = %125
  store i32 0, i32* %102, align 8, !noalias !18
  br label %142

139:                                              ; preds = %125
  %140 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %136) #12
  %141 = add i32 %140, 1
  store i32 %141, i32* %102, align 8, !noalias !18
  br label %142

142:                                              ; preds = %105, %123, %138, %139
  %143 = phi i32 [ %124, %123 ], [ %103, %105 ], [ 0, %138 ], [ %141, %139 ]
  %144 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %101, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.blink::Node"*, %"class.blink::Node"** %144, align 8, !noalias !18
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %3, %"class.blink::Node"* %145, i32 %143) #12
  %146 = call %"class.WTF::StringImpl"* @_ZN5blink29TextFragmentSelectorGenerator16GetNextTextBlockERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::TextFragmentSelectorGenerator"* undef, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3)
  %147 = ptrtoint %"class.WTF::StringImpl"* %146 to i64
  %148 = bitcast %"class.WTF::String"* %23 to i64*
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  store i64 %147, i64* %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %142
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #12
  br label %164

164:                                              ; preds = %163, %160, %142
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #12
  store i32 3, i32* %6, align 8
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  br label %166

166:                                              ; preds = %164, %27
  %167 = phi i32 [ 3, %164 ], [ %7, %27 ]
  %168 = phi %"class.WTF::StringImpl"* [ %165, %164 ], [ %16, %27 ]
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %179, label %170

170:                                              ; preds = %18, %166
  %171 = phi %"class.WTF::StringImpl"* [ %168, %166 ], [ %16, %18 ]
  %172 = phi i32 [ %167, %166 ], [ %7, %18 ]
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %179, label %176

176:                                              ; preds = %170
  %177 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #12
  %178 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %178, align 8
  br label %197

179:                                              ; preds = %166, %170
  %180 = phi i1 [ true, %166 ], [ false, %170 ]
  %181 = phi %"class.WTF::StringImpl"* [ null, %166 ], [ %171, %170 ]
  %182 = phi i32 [ %167, %166 ], [ %172, %170 ]
  %183 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 10, i32 0, i32 0
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %190, label %186

186:                                              ; preds = %179
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %194

190:                                              ; preds = %179, %186
  %191 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  store i32 3, i32* %191, align 4
  %192 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %193 = bitcast i8* %192 to i64*
  store i64 8589934593, i64* %193, align 4
  br label %317

194:                                              ; preds = %186
  %195 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #12
  %196 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %196, align 8
  br i1 %180, label %219, label %197

197:                                              ; preds = %176, %194
  %198 = phi %"class.WTF::StringImpl"* [ %171, %176 ], [ %181, %194 ]
  %199 = phi i32 [ %172, %176 ], [ %182, %194 ]
  %200 = phi %"class.WTF::StringImpl"** [ %178, %176 ], [ %196, %194 ]
  %201 = phi i8* [ %177, %176 ], [ %195, %194 ]
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = and i32 %203, 2
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %219

206:                                              ; preds = %197
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  %209 = zext i32 %208 to i33
  %210 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %209, i33 1) #12
  %211 = extractvalue { i33, i1 } %210, 1
  %212 = extractvalue { i33, i1 } %210, 0
  %213 = icmp slt i33 %212, 0
  %214 = or i1 %211, %213
  br i1 %214, label %215, label %216, !prof !12

215:                                              ; preds = %206
  call void @llvm.trap() #12
  unreachable

216:                                              ; preds = %206
  %217 = trunc i33 %212 to i32
  store i32 %217, i32* %207, align 4
  %218 = load i32, i32* %6, align 8
  br label %219

219:                                              ; preds = %194, %197, %216
  %220 = phi %"class.WTF::StringImpl"* [ %181, %194 ], [ %198, %197 ], [ %198, %216 ]
  %221 = phi i32 [ %182, %194 ], [ %199, %197 ], [ %218, %216 ]
  %222 = phi %"class.WTF::StringImpl"** [ %196, %194 ], [ %200, %197 ], [ %200, %216 ]
  %223 = phi i8* [ %195, %194 ], [ %201, %197 ], [ %201, %216 ]
  %224 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_115GetWordsFromEndEN3WTF6StringEi(%"class.WTF::StringImpl"* %220, i32 %221)
  store %"class.WTF::StringImpl"* %224, %"class.WTF::StringImpl"** %222, align 8
  %225 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %225) #12
  %226 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %226, align 8
  %227 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 10, i32 0, i32 0
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %247, label %230

230:                                              ; preds = %219
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %247

235:                                              ; preds = %230
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  %238 = zext i32 %237 to i33
  %239 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %238, i33 1) #12
  %240 = extractvalue { i33, i1 } %239, 1
  %241 = extractvalue { i33, i1 } %239, 0
  %242 = icmp slt i33 %241, 0
  %243 = or i1 %240, %242
  br i1 %243, label %244, label %245, !prof !12

244:                                              ; preds = %235
  call void @llvm.trap() #12
  unreachable

245:                                              ; preds = %235
  %246 = trunc i33 %241 to i32
  store i32 %246, i32* %236, align 4
  br label %247

247:                                              ; preds = %219, %230, %245
  %248 = load i32, i32* %6, align 8
  %249 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_117GetWordsFromStartEN3WTF6StringEi(%"class.WTF::StringImpl"* %228, i32 %248)
  store %"class.WTF::StringImpl"* %249, %"class.WTF::StringImpl"** %226, align 8
  %250 = load i32, i32* %6, align 8
  %251 = add nsw i32 %250, 1
  store i32 %251, i32* %6, align 8
  %252 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 3
  %253 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %252, i64 0, i32 0, i32 0, i32 0
  %254 = load %"class.blink::TextFragmentSelector"*, %"class.blink::TextFragmentSelector"** %253, align 8
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %256 = getelementptr inbounds %"class.blink::TextFragmentSelector", %"class.blink::TextFragmentSelector"* %254, i64 0, i32 3, i32 0, i32 0
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %258 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %255, %"class.WTF::StringImpl"* %257) #12
  br i1 %258, label %259, label %268

259:                                              ; preds = %247
  %260 = load %"class.blink::TextFragmentSelector"*, %"class.blink::TextFragmentSelector"** %253, align 8
  %261 = getelementptr inbounds %"class.blink::TextFragmentSelector", %"class.blink::TextFragmentSelector"* %260, i64 0, i32 4, i32 0, i32 0
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %261, align 8
  %263 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %249, %"class.WTF::StringImpl"* %262) #12
  br i1 %263, label %264, label %268

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  store i32 3, i32* %265, align 4
  %266 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %267 = bitcast i8* %266 to i64*
  store i64 12884901889, i64* %267, align 4
  br label %284

268:                                              ; preds = %259, %247
  %269 = load %"class.blink::TextFragmentSelector"*, %"class.blink::TextFragmentSelector"** %253, align 8
  %270 = getelementptr inbounds %"class.blink::TextFragmentSelector", %"class.blink::TextFragmentSelector"* %269, i64 0, i32 0
  %271 = load i32, i32* %270, align 8
  %272 = getelementptr inbounds %"class.blink::TextFragmentSelector", %"class.blink::TextFragmentSelector"* %269, i64 0, i32 1
  %273 = getelementptr inbounds %"class.blink::TextFragmentSelector", %"class.blink::TextFragmentSelector"* %269, i64 0, i32 2
  %274 = call i8* @_Znwm(i64 40) #13
  %275 = bitcast i8* %274 to %"class.blink::TextFragmentSelector"*
  call void @_ZN5blink20TextFragmentSelectorC1ENS0_12SelectorTypeERKN3WTF6StringES5_S5_S5_(%"class.blink::TextFragmentSelector"* nonnull %275, i32 %271, %"class.WTF::String"* dereferenceable(8) %272, %"class.WTF::String"* dereferenceable(8) %273, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #12
  %276 = ptrtoint i8* %274 to i64
  %277 = load %"class.blink::TextFragmentSelector"*, %"class.blink::TextFragmentSelector"** %253, align 8
  %278 = bitcast %"class.std::__1::unique_ptr"* %252 to i64*
  store i64 %276, i64* %278, align 8
  %279 = icmp eq %"class.blink::TextFragmentSelector"* %277, null
  br i1 %279, label %282, label %280

280:                                              ; preds = %268
  call void @_ZN5blink20TextFragmentSelectorD2Ev(%"class.blink::TextFragmentSelector"* nonnull %277) #12
  %281 = bitcast %"class.blink::TextFragmentSelector"* %277 to i8*
  call void @_ZdlPv(i8* %281) #13
  br label %282

282:                                              ; preds = %280, %268
  %283 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  store i32 2, i32* %283, align 4
  br label %284

284:                                              ; preds = %282, %264
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %284
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #12
  br label %300

300:                                              ; preds = %284, %296, %299
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %225) #12
  %301 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %302 = icmp eq %"class.WTF::StringImpl"* %301, null
  br i1 %302, label %316, label %303

303:                                              ; preds = %300
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load atomic i32, i32* %304 monotonic, align 4
  %306 = and i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 0
  %309 = load i32, i32* %308, align 4
  br i1 %307, label %310, label %312

310:                                              ; preds = %303
  %311 = add i32 %309, -1
  store i32 %311, i32* %308, align 4
  br label %312

312:                                              ; preds = %310, %303
  %313 = phi i32 [ %311, %310 ], [ %309, %303 ]
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %316

315:                                              ; preds = %312
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %301) #12
  br label %316

316:                                              ; preds = %300, %312, %315
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %223) #12
  br label %317

317:                                              ; preds = %316, %9, %190
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator13RunTextFinderEv(%"class.blink::TextFragmentSelectorGenerator"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 15
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  %5 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::TextFragmentSelector"*, %"class.blink::TextFragmentSelector"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %7, align 8
  %9 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %8) #12
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18TextFragmentFinderEEEPhm(i64 128) #12
  %11 = bitcast i8* %10 to %"class.blink::TextFragmentFinder"*
  %12 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextFragmentFinderC1ERNS0_6ClientERKNS_20TextFragmentSelectorEPNS_8DocumentENS0_20FindBufferRunnerTypeE(%"class.blink::TextFragmentFinder"* %11, %"class.blink::TextFragmentFinder::Client"* dereferenceable(8) %12, %"class.blink::TextFragmentSelector"* dereferenceable(40) %6, %"class.blink::Document"* %9, i32 0) #12
  %13 = getelementptr inbounds i8, i8* %10, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 17
  %18 = ptrtoint i8* %10 to i64
  %19 = bitcast %"class.blink::Member.21"* %17 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  %22 = bitcast i8* %10 to %"class.blink::TextFragmentFinder"*
  br i1 %21, label %27, label %23

23:                                               ; preds = %1
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %10) #12
  %25 = getelementptr inbounds %"class.blink::Member.21", %"class.blink::Member.21"* %17, i64 0, i32 0, i32 0
  %26 = load %"class.blink::TextFragmentFinder"*, %"class.blink::TextFragmentFinder"** %25, align 8
  br label %27

27:                                               ; preds = %1, %23
  %28 = phi %"class.blink::TextFragmentFinder"* [ %22, %1 ], [ %26, %23 ]
  tail call void @_ZN5blink18TextFragmentFinder9FindMatchEv(%"class.blink::TextFragmentFinder"* %28) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator15OnSelectorReadyERKNS_20TextFragmentSelectorE(%"class.blink::TextFragmentSelectorGenerator"* nocapture, %"class.blink::TextFragmentSelector"* dereferenceable(40)) local_unnamed_addr #1 align 2 {
  tail call void @_ZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorE(%"class.blink::TextFragmentSelectorGenerator"* %0, %"class.blink::TextFragmentSelector"* dereferenceable(40) %1)
  %3 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = icmp eq %"class.base::internal::BindStateBase"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN5blink29TextFragmentSelectorGenerator25NotifyClientSelectorReadyERKNS_20TextFragmentSelectorE(%"class.blink::TextFragmentSelectorGenerator"* %0, %"class.blink::TextFragmentSelector"* dereferenceable(40) %1)
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN5blink18TextFragmentFinder9FindMatchEv(%"class.blink::TextFragmentFinder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator12DidFindMatchERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_25TextFragmentAnchorMetrics5MatchEb(%"class.blink::TextFragmentSelectorGenerator"*, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32), %"struct.blink::TextFragmentAnchorMetrics::Match"* byval(%"struct.blink::TextFragmentAnchorMetrics::Match") align 8, i1 zeroext) unnamed_addr #1 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::TextIteratorBehavior", align 4
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %9 = alloca %"class.blink::TextIteratorBehavior", align 4
  %10 = bitcast %"class.blink::TextIteratorBehavior"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #12
  %11 = bitcast %"class.blink::TextIteratorBehavior"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #12
  br i1 %3, label %12, label %96

12:                                               ; preds = %4
  %13 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  call void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"* nonnull %6) #12
  %14 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32) %1, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %6) #12
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  %16 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %5) #12
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %12, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %12 ]
  %23 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  %24 = bitcast %"class.blink::EphemeralRangeTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::Range"*, %"class.blink::Range"** %25, align 8
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1EPKNS_5RangeE(%"class.blink::EphemeralRangeTemplate"* nonnull %8, %"class.blink::Range"* %26) #12
  call void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"* nonnull %9) #12
  %27 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %8, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %9) #12
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  %29 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %7) #12
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = icmp eq i32 %22, 0
  br label %49

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %22, %35
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %33
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %33
  %46 = phi i32 [ %44, %43 ], [ %42, %33 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #12
  br label %49

49:                                               ; preds = %31, %45, %48
  %50 = phi i1 [ %32, %31 ], [ %36, %45 ], [ %36, %48 ]
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #12
  br label %66

66:                                               ; preds = %65, %62, %49
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #12
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br i1 %17, label %80, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #12
  br label %80

80:                                               ; preds = %66, %76, %79
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %98, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #12
  br label %98

96:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #12
  %97 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  br label %101

98:                                               ; preds = %80, %92, %95
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  %99 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  br i1 %50, label %100, label %101

100:                                              ; preds = %98
  store i32 4, i32* %99, align 4
  call void @_ZN5blink29TextFragmentSelectorGenerator20ResolveSelectorStateEv(%"class.blink::TextFragmentSelectorGenerator"* %0)
  br label %113

101:                                              ; preds = %96, %98
  %102 = phi i32* [ %97, %96 ], [ %99, %98 ]
  store i32 1, i32* %102, align 4
  %103 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 5
  %104 = load i32, i32* %103, align 8
  switch i32 %104, label %108 [
    i32 0, label %105
    i32 1, label %106
  ]

105:                                              ; preds = %101
  store i32 2, i32* %103, align 8
  br label %111

106:                                              ; preds = %101
  call void @_ZN5blink29TextFragmentSelectorGenerator19ExtendRangeSelectorEv(%"class.blink::TextFragmentSelectorGenerator"* %0) #12
  %107 = load i32, i32* %103, align 8
  br label %108

108:                                              ; preds = %101, %106
  %109 = phi i32 [ %107, %106 ], [ %104, %101 ]
  %110 = icmp eq i32 %109, 2
  br i1 %110, label %111, label %112

111:                                              ; preds = %105, %108
  call void @_ZN5blink29TextFragmentSelectorGenerator13ExtendContextEv(%"class.blink::TextFragmentSelectorGenerator"* %0) #12
  br label %112

112:                                              ; preds = %108, %111
  call void @_ZN5blink29TextFragmentSelectorGenerator20ResolveSelectorStateEv(%"class.blink::TextFragmentSelectorGenerator"* %0) #12
  br label %113

113:                                              ; preds = %112, %100
  %114 = getelementptr inbounds %"struct.blink::TextFragmentAnchorMetrics::Match", %"struct.blink::TextFragmentAnchorMetrics::Match"* %2, i64 0, i32 1
  call void @_ZN5blink20TextFragmentSelectorD2Ev(%"class.blink::TextFragmentSelector"* %114) #12
  %115 = getelementptr inbounds %"struct.blink::TextFragmentAnchorMetrics::Match", %"struct.blink::TextFragmentAnchorMetrics::Match"* %2, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #12
  br label %131

131:                                              ; preds = %113, %127, %130
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator12NoMatchFoundEv(%"class.blink::TextFragmentSelectorGenerator"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 6
  store i32 3, i32* %2, align 4
  %3 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast i8* %3 to i64*
  store i64 1, i64* %4, align 4
  tail call void @_ZN5blink29TextFragmentSelectorGenerator20ResolveSelectorStateEv(%"class.blink::TextFragmentSelectorGenerator"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorE(%"class.blink::TextFragmentSelectorGenerator"* nocapture readonly, %"class.blink::TextFragmentSelector"* dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = load atomic i64, i64* @_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %6 = inttoptr i64 %5 to %"class.base::HistogramBase"*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0), i32 1) #12
  %10 = ptrtoint %"class.base::HistogramBase"* %9 to i64
  store atomic i64 %10, i64* @_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi %"class.base::HistogramBase"* [ %6, %2 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.blink::TextFragmentSelector", %"class.blink::TextFragmentSelector"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp ne i32 %14, 0
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %12, i1 zeroext %15) #12
  %16 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %16, align 8
  %18 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %17) #12
  %19 = tail call %"class.ukm::UkmRecorder"* @_ZN5blink8Document11UkmRecorderEv(%"class.blink::Document"* %18) #12
  %20 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %16, align 8
  %21 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %20) #12
  %22 = tail call i64 @_ZNK5blink8Document11UkmSourceIDEv(%"class.blink::Document"* %21) #12
  %23 = load i32, i32* %13, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %107, label %25

25:                                               ; preds = %11
  %26 = load atomic i64, i64* @_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %27 = inttoptr i64 %26 to %"class.base::HistogramBase"*
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0), i32 1, i32 1000, i32 50, i32 1) #12
  %31 = ptrtoint %"class.base::HistogramBase"* %30 to i64
  store atomic i64 %31, i64* @_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %32

32:                                               ; preds = %25, %29
  %33 = phi %"class.base::HistogramBase"* [ %27, %25 ], [ %30, %29 ]
  %34 = tail call %"class.WTF::StringImpl"* @_ZNK5blink20TextFragmentSelector8ToStringEv(%"class.blink::TextFragmentSelector"* %1) #12
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %55, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = bitcast %"class.base::HistogramBase"* %33 to void (%"class.base::HistogramBase"*, i32)***
  %40 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %40, i64 6
  %42 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %41, align 8
  tail call void %42(%"class.base::HistogramBase"* %33, i32 %38) #12
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %36
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %36
  %52 = phi i32 [ %50, %49 ], [ %48, %36 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #12
  br label %60

55:                                               ; preds = %32
  %56 = bitcast %"class.base::HistogramBase"* %33 to void (%"class.base::HistogramBase"*, i32)***
  %57 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %57, i64 6
  %59 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %58, align 8
  tail call void %59(%"class.base::HistogramBase"* %33, i32 0) #12
  br label %60

60:                                               ; preds = %55, %51, %54
  %61 = load atomic i64, i64* @_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %62 = inttoptr i64 %61 to %"class.base::HistogramBase"*
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %60
  %65 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 10, i32 11, i32 1) #12
  %66 = ptrtoint %"class.base::HistogramBase"* %65 to i64
  store atomic i64 %66, i64* @_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %67

67:                                               ; preds = %60, %64
  %68 = phi %"class.base::HistogramBase"* [ %62, %60 ], [ %65, %64 ]
  %69 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 15
  %70 = load i32, i32* %69, align 8
  %71 = bitcast %"class.base::HistogramBase"* %68 to void (%"class.base::HistogramBase"*, i32)***
  %72 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %72, i64 6
  %74 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %73, align 8
  tail call void %74(%"class.base::HistogramBase"* %68, i32 %70) #12
  %75 = load atomic i64, i64* @_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %76 = inttoptr i64 %75 to %"class.base::HistogramBase"*
  %77 = icmp eq i64 %75, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %67
  %79 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.6, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #12
  %80 = ptrtoint %"class.base::HistogramBase"* %79 to i64
  store atomic i64 %80, i64* @_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %81

81:                                               ; preds = %67, %78
  %82 = phi %"class.base::HistogramBase"* [ %76, %67 ], [ %79, %78 ]
  %83 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #12
  %84 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #12
  %85 = bitcast %"class.base::DefaultTickClock"* %84 to i64 (%"class.base::DefaultTickClock"*)***
  %86 = load i64 (%"class.base::DefaultTickClock"*)**, i64 (%"class.base::DefaultTickClock"*)*** %85, align 8
  %87 = getelementptr inbounds i64 (%"class.base::DefaultTickClock"*)*, i64 (%"class.base::DefaultTickClock"*)** %86, i64 2
  %88 = load i64 (%"class.base::DefaultTickClock"*)*, i64 (%"class.base::DefaultTickClock"*)** %87, align 8
  %89 = tail call i64 %88(%"class.base::DefaultTickClock"* %84) #12
  %90 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 16, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = sub nsw i64 %89, %91
  %93 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %92, i64* %93, align 8
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %82, %"class.base::TimeDelta"* nonnull dereferenceable(8) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #12
  %94 = load atomic i64, i64* @_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_3.0.0.0.0.0 acquire, align 8
  %95 = inttoptr i64 %94 to %"class.base::HistogramBase"*
  %96 = icmp eq i64 %94, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %81
  %98 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.7, i64 0, i64 0), i32 1, i32 9, i32 10, i32 1) #12
  %99 = ptrtoint %"class.base::HistogramBase"* %98 to i64
  store atomic i64 %99, i64* @_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_3.0.0.0.0.0 release, align 8
  br label %100

100:                                              ; preds = %81, %97
  %101 = phi %"class.base::HistogramBase"* [ %95, %81 ], [ %98, %97 ]
  %102 = call i32 @_ZN5blink25TextFragmentAnchorMetrics24GetParametersForSelectorERKNS_20TextFragmentSelectorE(%"class.blink::TextFragmentSelector"* dereferenceable(40) %1) #12
  %103 = bitcast %"class.base::HistogramBase"* %101 to void (%"class.base::HistogramBase"*, i32)***
  %104 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %104, i64 6
  %106 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %105, align 8
  call void %106(%"class.base::HistogramBase"* %101, i32 %102) #12
  call void @_ZN19shared_highlighting31LogLinkGeneratedSuccessUkmEventEPN3ukm11UkmRecorderEl(%"class.ukm::UkmRecorder"* %19, i64 %22) #12
  br label %149

107:                                              ; preds = %11
  %108 = load atomic i64, i64* @_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_4.0.0.0.0.0 acquire, align 8
  %109 = inttoptr i64 %108 to %"class.base::HistogramBase"*
  %110 = icmp eq i64 %108, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %107
  %112 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.8, i64 0, i64 0), i32 1, i32 10, i32 11, i32 1) #12
  %113 = ptrtoint %"class.base::HistogramBase"* %112 to i64
  store atomic i64 %113, i64* @_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_4.0.0.0.0.0 release, align 8
  br label %114

114:                                              ; preds = %107, %111
  %115 = phi %"class.base::HistogramBase"* [ %109, %107 ], [ %112, %111 ]
  %116 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 15
  %117 = load i32, i32* %116, align 8
  %118 = bitcast %"class.base::HistogramBase"* %115 to void (%"class.base::HistogramBase"*, i32)***
  %119 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %119, i64 6
  %121 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %120, align 8
  tail call void %121(%"class.base::HistogramBase"* %115, i32 %117) #12
  %122 = load atomic i64, i64* @_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_5.0.0.0.0.0 acquire, align 8
  %123 = inttoptr i64 %122 to %"class.base::HistogramBase"*
  %124 = icmp eq i64 %122, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %114
  %126 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.9, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #12
  %127 = ptrtoint %"class.base::HistogramBase"* %126 to i64
  store atomic i64 %127, i64* @_ZZN5blink29TextFragmentSelectorGenerator16RecordAllMetricsERKNS_20TextFragmentSelectorEE24atomic_histogram_pointer_5.0.0.0.0.0 release, align 8
  br label %128

128:                                              ; preds = %114, %125
  %129 = phi %"class.base::HistogramBase"* [ %123, %114 ], [ %126, %125 ]
  %130 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #12
  %131 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #12
  %132 = bitcast %"class.base::DefaultTickClock"* %131 to i64 (%"class.base::DefaultTickClock"*)***
  %133 = load i64 (%"class.base::DefaultTickClock"*)**, i64 (%"class.base::DefaultTickClock"*)*** %132, align 8
  %134 = getelementptr inbounds i64 (%"class.base::DefaultTickClock"*)*, i64 (%"class.base::DefaultTickClock"*)** %133, i64 2
  %135 = load i64 (%"class.base::DefaultTickClock"*)*, i64 (%"class.base::DefaultTickClock"*)** %134, align 8
  %136 = tail call i64 %135(%"class.base::DefaultTickClock"* %131) #12
  %137 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 16, i32 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = sub nsw i64 %136, %138
  %140 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %139, i64* %140, align 8
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %129, %"class.base::TimeDelta"* nonnull dereferenceable(8) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #12
  %141 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %142 = load i8, i8* %141, align 4, !range !23
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %147, label %144

144:                                              ; preds = %128
  %145 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %146 = load i32, i32* %145, align 4
  br label %147

147:                                              ; preds = %128, %144
  %148 = phi i32 [ %146, %144 ], [ 9, %128 ]
  call void @_ZN19shared_highlighting28LogLinkGenerationErrorReasonENS_19LinkGenerationErrorE(i32 %148) #12
  call void @_ZN19shared_highlighting29LogLinkGeneratedErrorUkmEventEPN3ukm11UkmRecorderElNS_19LinkGenerationErrorE(%"class.ukm::UkmRecorder"* %19, i64 %22, i32 %148) #12
  br label %149

149:                                              ; preds = %147, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator33RecordPreemptiveGenerationMetricsERKNS_20TextFragmentSelectorE(%"class.blink::TextFragmentSelectorGenerator"* nocapture readonly, %"class.blink::TextFragmentSelector"* nocapture readonly dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca [2 x %"class.base::BasicStringPiece"], align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca [2 x %"class.base::BasicStringPiece"], align 8
  %8 = getelementptr inbounds %"class.blink::TextFragmentSelector", %"class.blink::TextFragmentSelector"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp ne i32 %9, 0
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = tail call i8* @_Znwm(i64 32) #13
  store i8* %14, i8** %12, align 8
  %15 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %15, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0), i64 30, i1 false) #12
  %16 = getelementptr inbounds i8, i8* %14, i64 30
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 1, !range !23
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %2
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #14
  unreachable

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1, !range !23
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %39, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = bitcast [2 x %"class.base::BasicStringPiece"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #12
  %28 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 0
  %29 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 0, i32 0
  %30 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8* %14, i8** %29, align 8
  %32 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 0, i32 1
  store i64 30, i64* %32, align 8
  %33 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 1, i32 0
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i8** %33, align 8
  %34 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 1, i32 1
  store i64 21, i64* %34, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %4, i64 2, %"class.base::BasicStringPiece"* nonnull %28) #12
  %35 = load i8, i8* %31, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %53

37:                                               ; preds = %25
  %38 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %38) #13
  br label %53

39:                                               ; preds = %21
  %40 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #12
  %41 = bitcast [2 x %"class.base::BasicStringPiece"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #12
  %42 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 0
  %43 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 0, i32 0
  %44 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8* %14, i8** %43, align 8
  %46 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 0, i32 1
  store i64 30, i64* %46, align 8
  %47 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 1, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i8** %47, align 8
  %48 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 1, i32 1
  store i64 20, i64* %48, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %6, i64 2, %"class.base::BasicStringPiece"* nonnull %42) #12
  %49 = load i8, i8* %45, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %39
  %52 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %52) #13
  br label %53

53:                                               ; preds = %39, %51, %25, %37
  %54 = phi i8* [ %26, %37 ], [ %26, %25 ], [ %40, %51 ], [ %40, %39 ]
  %55 = phi i8* [ %27, %37 ], [ %27, %25 ], [ %41, %51 ], [ %41, %39 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* nonnull align 8 %54, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  call void @_ZN4base19UmaHistogramBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i1 zeroext %10) #12
  br i1 %10, label %65, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %58 = load i8, i8* %57, align 4, !range !23
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %62 = load i32, i32* %61, align 4
  br label %63

63:                                               ; preds = %56, %60
  %64 = phi i32 [ %62, %60 ], [ 9, %56 ]
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.12, i64 0, i64 0), i32 %64, i32 13) #12
  br label %65

65:                                               ; preds = %63, %53
  %66 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  %71 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %71) #13
  br label %72

72:                                               ; preds = %65, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink20TextFragmentSelector8ToStringEv(%"class.blink::TextFragmentSelector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator14ClearSelectionEv(%"class.blink::TextFragmentSelectorGenerator"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::Member.0", %"class.blink::Member.0"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::Range"*, %"class.blink::Range"** %3, align 8
  %5 = icmp eq %"class.blink::Range"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink5Range7DisposeEv(%"class.blink::Range"* nonnull %4) #12
  %7 = bitcast %"class.blink::Member.0"* %2 to i64*
  store atomic i64 0, i64* %7 monotonic, align 8
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

declare void @_ZN5blink5Range7DisposeEv(%"class.blink::Range"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29TextFragmentSelectorGenerator6DetachEv(%"class.blink::TextFragmentSelectorGenerator"*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN5blink29TextFragmentSelectorGenerator5ResetEv(%"class.blink::TextFragmentSelectorGenerator"* %0)
  %2 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::Member"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink29TextFragmentSelectorGenerator5TraceEPNS_7VisitorE(%"class.blink::TextFragmentSelectorGenerator"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.0"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5RangeEE5TraceEPNS_7VisitorEPKv) #12
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::TextFragmentSelectorGenerator", %"class.blink::TextFragmentSelectorGenerator"* %0, i64 0, i32 17
  %26 = bitcast %"class.blink::Member.21"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18TextFragmentFinderEE5TraceEPNS_7VisitorEPKv) #12
  br label %35

35:                                               ; preds = %24, %29
  ret void
}

declare zeroext i1 @_ZN5blink18TextFragmentFinder26IsInSameUninterruptedBlockERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEES7_(%"class.blink::PositionTemplate.1270"* dereferenceable(16), %"class.blink::PositionTemplate.1270"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::TextFragmentSelector"* @_ZNSt3__111make_uniqueIN5blink20TextFragmentSelectorEJNS2_12SelectorTypeERN3WTF6StringERA1_KcS9_S9_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4), %"class.WTF::String"* dereferenceable(8), [1 x i8]* dereferenceable(1), [1 x i8]* dereferenceable(1), [1 x i8]* dereferenceable(1)) local_unnamed_addr #5 comdat {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = tail call i8* @_Znwm(i64 40) #13
  %10 = bitcast i8* %9 to %"class.blink::TextFragmentSelector"*
  %11 = load i32, i32* %0, align 4
  %12 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = getelementptr inbounds [1 x i8], [1 x i8]* %2, i64 0, i64 0
  %14 = icmp eq [1 x i8]* %2, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %5
  %16 = tail call i64 @strlen(i8* nonnull %13) #15
  br label %17

17:                                               ; preds = %5, %15
  %18 = phi i64 [ %16, %15 ], [ 0, %5 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %13, i64 %18) #12
  %19 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds [1 x i8], [1 x i8]* %3, i64 0, i64 0
  %21 = icmp eq [1 x i8]* %3, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = call i64 @strlen(i8* nonnull %20) #15
  br label %24

24:                                               ; preds = %17, %22
  %25 = phi i64 [ %23, %22 ], [ 0, %17 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* %20, i64 %25) #12
  %26 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %27 = getelementptr inbounds [1 x i8], [1 x i8]* %4, i64 0, i64 0
  %28 = icmp eq [1 x i8]* %4, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = call i64 @strlen(i8* nonnull %27) #15
  br label %31

31:                                               ; preds = %24, %29
  %32 = phi i64 [ %30, %29 ], [ 0, %24 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* %27, i64 %32) #12
  call void @_ZN5blink20TextFragmentSelectorC1ENS0_12SelectorTypeERKN3WTF6StringES5_S5_S5_(%"class.blink::TextFragmentSelector"* nonnull %10, i32 %11, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %8) #12
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #12
  br label %49

49:                                               ; preds = %31, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #12
  br label %66

66:                                               ; preds = %49, %62, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #12
  br label %83

83:                                               ; preds = %66, %79, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  ret %"class.blink::TextFragmentSelector"* %10
}

declare i32 @_ZN5blink19FindNextWordForwardEPKDsii(i16*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink29TextFragmentSelectorGenerator16GetNextTextBlockERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::TextFragmentSelectorGenerator"* nocapture readnone, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::EphemeralRangeTemplate.1279", align 8
  %8 = alloca %"class.blink::TextIteratorBehavior", align 4
  %9 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #12
  %10 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* %1) #12
  %11 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121IsLastVisiblePositionEPNS_4NodeEj(%"class.blink::Node"* %9, i32 %10)
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal20NextSkippingChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %9) #12
  %14 = tail call fastcc %"class.blink::Node"* @_ZN5blink12_GLOBAL__N_128FirstNonEmptyVisibleTextNodeEPNS_4NodeE(%"class.blink::Node"* %13)
  br label %15

15:                                               ; preds = %12, %2
  %16 = phi %"class.blink::Node"* [ %14, %12 ], [ %9, %2 ]
  %17 = phi i32 [ 0, %12 ], [ %10, %2 ]
  %18 = icmp eq %"class.blink::Node"* %16, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #12
  br label %112

20:                                               ; preds = %15
  %21 = tail call %"class.blink::Node"* @_ZN5blink10FindBuffer22ForwardVisibleTextNodeERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %16) #12
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %64, label %23

23:                                               ; preds = %20, %57
  %24 = phi %"class.blink::Node"* [ %59, %57 ], [ %21, %20 ]
  %25 = phi %"class.blink::Node"* [ %46, %57 ], [ null, %20 ]
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 6, i32 0, i32 0
  br i1 %29, label %35, label %31

31:                                               ; preds = %23
  %32 = bitcast %"class.blink::NodeData"** %30 to %"class.blink::NodeRareData"**
  %33 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %33, i64 0, i32 1, i32 0, i32 0
  br label %37

35:                                               ; preds = %23
  %36 = bitcast %"class.blink::NodeData"** %30 to %"class.blink::NodeRenderingData"**
  br label %37

37:                                               ; preds = %35, %31
  %38 = phi %"class.blink::NodeRenderingData"** [ %34, %31 ], [ %36, %35 ]
  %39 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %39, i64 0, i32 1
  %41 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutObject"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  %44 = tail call zeroext i1 @_ZN5blink10FindBuffer26IsInSameUninterruptedBlockERKNS_4NodeES3_(%"class.blink::Node"* nonnull dereferenceable(64) %16, %"class.blink::Node"* nonnull dereferenceable(64) %24) #12
  br i1 %44, label %45, label %61

45:                                               ; preds = %43, %37
  %46 = phi %"class.blink::Node"* [ %25, %37 ], [ %24, %43 ]
  %47 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %24, i32 0) #12
  %48 = icmp eq %"class.blink::Node"* %47, null
  br i1 %48, label %49, label %57

49:                                               ; preds = %45, %53
  %50 = phi %"class.blink::Node"* [ %55, %53 ], [ %24, %45 ]
  %51 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %50, i32 0) #12
  %52 = icmp eq %"class.blink::Node"* %51, null
  br i1 %52, label %53, label %57

53:                                               ; preds = %49
  %54 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %50) #12
  %55 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %54, i64 0, i32 0
  %56 = icmp eq %"class.blink::ContainerNode"* %54, null
  br i1 %56, label %61, label %49

57:                                               ; preds = %49, %45
  %58 = phi %"class.blink::Node"* [ %47, %45 ], [ %51, %49 ]
  %59 = tail call %"class.blink::Node"* @_ZN5blink10FindBuffer22ForwardVisibleTextNodeERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %58) #12
  %60 = icmp eq %"class.blink::Node"* %59, null
  br i1 %60, label %61, label %23

61:                                               ; preds = %43, %57, %53
  %62 = phi %"class.blink::Node"* [ %46, %53 ], [ %46, %57 ], [ %25, %43 ]
  %63 = icmp eq %"class.blink::Node"* %62, null
  br i1 %63, label %64, label %65

64:                                               ; preds = %20, %61
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #12
  br label %112

65:                                               ; preds = %61
  %66 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #12
  %67 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::Node"* nonnull %16, i32 %17) #12
  %68 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #12
  %69 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 16, i1 false)
  %70 = call %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"* nonnull %62, i1 zeroext false) #12
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %72, label %73

72:                                               ; preds = %65
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::Node"* nonnull %62, i32 0) #12
  br label %88

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::Node"* nonnull %62, i32 %75) #12
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %73
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %73
  %85 = phi i32 [ %83, %82 ], [ %81, %73 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #12
  br label %88

88:                                               ; preds = %72, %84, %87
  %89 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #12
  %90 = bitcast %"class.blink::EphemeralRangeTemplate.1279"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %90) #12
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate.1279"* nonnull %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #12
  %91 = bitcast %"class.blink::TextIteratorBehavior"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #12
  call void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"* nonnull %8) #12
  %92 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate.1279"* nonnull dereferenceable(32) %7, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %8) #12
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %93, align 8
  %94 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %6) #12
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %95, align 8
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #12
  br label %111

111:                                              ; preds = %88, %107, %110
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #12
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate.1279"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #12
  br label %112

112:                                              ; preds = %64, %111, %19
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  ret %"class.WTF::StringImpl"* %114
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink29TextFragmentSelectorGenerator20GetPreviousTextBlockERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::TextFragmentSelectorGenerator"* nocapture readnone, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::EphemeralRangeTemplate.1279", align 8
  %8 = alloca %"class.blink::TextIteratorBehavior", align 4
  %9 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #12
  %10 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* %1) #12
  %11 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_122IsFirstVisiblePositionEPNS_4NodeEj(%"class.blink::Node"* %9, i32 %10)
  br i1 %11, label %12, label %45

12:                                               ; preds = %2
  %13 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %9, i32 1) #12
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %12, %15
  %16 = phi %"class.blink::Node"* [ %17, %15 ], [ %13, %12 ]
  %17 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %16, i32 1) #12
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %22, label %15

19:                                               ; preds = %12
  %20 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %9) #12
  %21 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %20, i64 0, i32 0
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi %"class.blink::Node"* [ %21, %19 ], [ %16, %15 ]
  %24 = tail call fastcc %"class.blink::Node"* @_ZN5blink12_GLOBAL__N_131BackwardNonEmptyVisibleTextNodeEPNS_4NodeE(%"class.blink::Node"* %23)
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #12
  br label %121

27:                                               ; preds = %22
  %28 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"* nonnull %24, i1 zeroext false) #12
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %30
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %30
  %42 = phi i32 [ %40, %39 ], [ %38, %30 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %47

45:                                               ; preds = %2
  %46 = icmp eq %"class.blink::Node"* %9, null
  br i1 %46, label %92, label %47

47:                                               ; preds = %27, %44, %41, %45
  %48 = phi i32 [ %10, %45 ], [ 0, %27 ], [ %32, %44 ], [ %32, %41 ]
  %49 = phi %"class.blink::Node"* [ %9, %45 ], [ %24, %27 ], [ %24, %44 ], [ %24, %41 ]
  br label %50

50:                                               ; preds = %47, %86
  %51 = phi %"class.blink::Node"* [ %87, %86 ], [ %49, %47 ]
  %52 = phi %"class.blink::Node"* [ %76, %86 ], [ null, %47 ]
  %53 = tail call %"class.blink::Node"* @_ZN5blink10FindBuffer23BackwardVisibleTextNodeERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %51) #12
  %54 = icmp eq %"class.blink::Node"* %53, null
  br i1 %54, label %89, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 6, i32 0, i32 0
  br i1 %59, label %65, label %61

61:                                               ; preds = %55
  %62 = bitcast %"class.blink::NodeData"** %60 to %"class.blink::NodeRareData"**
  %63 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %63, i64 0, i32 1, i32 0, i32 0
  br label %67

65:                                               ; preds = %55
  %66 = bitcast %"class.blink::NodeData"** %60 to %"class.blink::NodeRenderingData"**
  br label %67

67:                                               ; preds = %65, %61
  %68 = phi %"class.blink::NodeRenderingData"** [ %64, %61 ], [ %66, %65 ]
  %69 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %69, i64 0, i32 1
  %71 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %70, align 8
  %72 = icmp eq %"class.blink::LayoutObject"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %67
  %74 = tail call zeroext i1 @_ZN5blink10FindBuffer26IsInSameUninterruptedBlockERKNS_4NodeES3_(%"class.blink::Node"* nonnull dereferenceable(64) %53, %"class.blink::Node"* nonnull dereferenceable(64) %49) #12
  br i1 %74, label %75, label %89

75:                                               ; preds = %73, %67
  %76 = phi %"class.blink::Node"* [ %52, %67 ], [ %53, %73 ]
  %77 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %53, i32 1) #12
  %78 = icmp eq %"class.blink::Node"* %77, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %75, %79
  %80 = phi %"class.blink::Node"* [ %81, %79 ], [ %77, %75 ]
  %81 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %80, i32 1) #12
  %82 = icmp eq %"class.blink::Node"* %81, null
  br i1 %82, label %86, label %79

83:                                               ; preds = %75
  %84 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %53) #12
  %85 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %84, i64 0, i32 0
  br label %86

86:                                               ; preds = %79, %83
  %87 = phi %"class.blink::Node"* [ %85, %83 ], [ %80, %79 ]
  %88 = icmp eq %"class.blink::Node"* %87, null
  br i1 %88, label %89, label %50

89:                                               ; preds = %50, %73, %86
  %90 = phi %"class.blink::Node"* [ %76, %86 ], [ %52, %73 ], [ %52, %50 ]
  %91 = icmp eq %"class.blink::Node"* %90, null
  br i1 %91, label %92, label %93

92:                                               ; preds = %45, %89
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #12
  br label %121

93:                                               ; preds = %89
  %94 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #12
  %95 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::Node"* nonnull %90, i32 0) #12
  %96 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #12
  %97 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::Node"* nonnull %49, i32 %48) #12
  %98 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #12
  %99 = bitcast %"class.blink::EphemeralRangeTemplate.1279"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %99) #12
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate.1279"* nonnull %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #12
  %100 = bitcast %"class.blink::TextIteratorBehavior"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100) #12
  call void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"* nonnull %8) #12
  %101 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate.1279"* nonnull dereferenceable(32) %7, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %8) #12
  %102 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %102, align 8
  %103 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %6) #12
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %104, align 8
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %93
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #12
  br label %120

120:                                              ; preds = %93, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100) #12
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate.1279"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %99) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #12
  br label %121

121:                                              ; preds = %92, %120, %26
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  ret %"class.WTF::StringImpl"* %123
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_117GetWordsFromStartEN3WTF6StringEi(%"class.WTF::StringImpl"*, i32) unnamed_addr #1 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %0, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %0, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %2, %8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #12
  br label %54

13:                                               ; preds = %8
  call void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"* nonnull %4) #12
  %14 = icmp sgt i32 %1, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %13, %27
  %16 = phi i32 [ %29, %27 ], [ 0, %13 ]
  %17 = phi i32 [ %18, %27 ], [ %1, %13 ]
  %18 = add nsw i32 %17, -1
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %22 = bitcast %"class.WTF::StringImpl"* %21 to i16*
  %23 = select i1 %20, i16* null, i16* %22
  br i1 %20, label %27, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  br label %27

27:                                               ; preds = %15, %24
  %28 = phi i32 [ %26, %24 ], [ 0, %15 ]
  %29 = call i32 @_ZN5blink19FindNextWordForwardEPKDsii(i16* %23, i32 %28, i32 %16) #12
  %30 = icmp sgt i32 %18, 0
  br i1 %30, label %15, label %31

31:                                               ; preds = %27, %13
  %32 = phi i32 [ 0, %13 ], [ %29, %27 ]
  %33 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %4, i32 0, i32 %32) #12
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %35, align 8
  %36 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %5) #12
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #12
  br label %53

53:                                               ; preds = %31, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  br label %54

54:                                               ; preds = %53, %12
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #12
  br label %70

70:                                               ; preds = %54, %66, %69
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  ret %"class.WTF::StringImpl"* %72
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_115GetWordsFromEndEN3WTF6StringEi(%"class.WTF::StringImpl"*, i32) unnamed_addr #1 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %0, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %0, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %2, %8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #12
  br label %62

13:                                               ; preds = %8
  %14 = add i32 %10, -1
  call void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"* nonnull %4) #12
  %15 = icmp sgt i32 %1, 0
  br i1 %15, label %16, label %32

16:                                               ; preds = %13, %28
  %17 = phi i32 [ %30, %28 ], [ %14, %13 ]
  %18 = phi i32 [ %19, %28 ], [ %1, %13 ]
  %19 = add nsw i32 %18, -1
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 1
  %23 = bitcast %"class.WTF::StringImpl"* %22 to i16*
  %24 = select i1 %21, i16* null, i16* %23
  br i1 %21, label %28, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  br label %28

28:                                               ; preds = %16, %25
  %29 = phi i32 [ %27, %25 ], [ 0, %16 ]
  %30 = call i32 @_ZN5blink20FindNextWordBackwardEPKDsii(i16* %24, i32 %29, i32 %17) #12
  %31 = icmp sgt i32 %19, 0
  br i1 %31, label %16, label %32

32:                                               ; preds = %28, %13
  %33 = phi i32 [ %14, %13 ], [ %30, %28 ]
  %34 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  br label %40

40:                                               ; preds = %32, %37
  %41 = phi i32 [ %39, %37 ], [ 0, %32 ]
  %42 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %4, i32 %33, i32 %41) #12
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %43, align 8
  %44 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %5) #12
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %45, align 8
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #12
  br label %61

61:                                               ; preds = %40, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  br label %62

62:                                               ; preds = %61, %12
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #12
  br label %78

78:                                               ; preds = %62, %74, %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  ret %"class.WTF::StringImpl"* %80
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::TextFragmentSelector"* @_ZNSt3__111make_uniqueIN5blink20TextFragmentSelectorEJNS2_12SelectorTypeERN3WTF6StringES6_RA1_KcS9_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), [1 x i8]* dereferenceable(1), [1 x i8]* dereferenceable(1)) local_unnamed_addr #5 comdat {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = tail call i8* @_Znwm(i64 40) #13
  %9 = bitcast i8* %8 to %"class.blink::TextFragmentSelector"*
  %10 = load i32, i32* %0, align 4
  %11 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds [1 x i8], [1 x i8]* %3, i64 0, i64 0
  %13 = icmp eq [1 x i8]* %3, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %5
  %15 = tail call i64 @strlen(i8* nonnull %12) #15
  br label %16

16:                                               ; preds = %5, %14
  %17 = phi i64 [ %15, %14 ], [ 0, %5 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %12, i64 %17) #12
  %18 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds [1 x i8], [1 x i8]* %4, i64 0, i64 0
  %20 = icmp eq [1 x i8]* %4, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = call i64 @strlen(i8* nonnull %19) #15
  br label %23

23:                                               ; preds = %16, %21
  %24 = phi i64 [ %22, %21 ], [ 0, %16 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* %19, i64 %24) #12
  call void @_ZN5blink20TextFragmentSelectorC1ENS0_12SelectorTypeERKN3WTF6StringES5_S5_S5_(%"class.blink::TextFragmentSelector"* nonnull %9, i32 %10, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #12
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #12
  br label %41

41:                                               ; preds = %23, %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #12
  br label %58

58:                                               ; preds = %41, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret %"class.blink::TextFragmentSelector"* %9
}

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate.1279"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink18TextFragmentFinder6CancelEv(%"class.blink::TextFragmentFinder"*) local_unnamed_addr #2

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #2

declare %"class.ukm::UkmRecorder"* @_ZN5blink8Document11UkmRecorderEv(%"class.blink::Document"*) local_unnamed_addr #2

declare i64 @_ZNK5blink8Document11UkmSourceIDEv(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @_ZN5blink25TextFragmentAnchorMetrics24GetParametersForSelectorERKNS_20TextFragmentSelectorE(%"class.blink::TextFragmentSelector"* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN19shared_highlighting31LogLinkGeneratedSuccessUkmEventEPN3ukm11UkmRecorderEl(%"class.ukm::UkmRecorder"*, i64) local_unnamed_addr #2

declare void @_ZN19shared_highlighting28LogLinkGenerationErrorReasonENS_19LinkGenerationErrorE(i32) local_unnamed_addr #2

declare void @_ZN19shared_highlighting29LogLinkGeneratedErrorUkmEventEPN3ukm11UkmRecorderElNS_19LinkGenerationErrorE(%"class.ukm::UkmRecorder"*, i64, i32) local_unnamed_addr #2

declare void @_ZN4base19UmaHistogramBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #2

declare %"class.blink::NodeList"* @_ZN5blink4Node10childNodesEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE15RangeOfContentsERKNS_4NodeE(%"class.blink::EphemeralRangeTemplate.1279"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink10FindBuffer22ForwardVisibleTextNodeERNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink10FindBuffer23BackwardVisibleTextNodeERNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i32 @_ZN5blink20FindNextWordBackwardEPKDsii(i16*, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZN5blink10FindBuffer26IsInSameUninterruptedBlockERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::LocalFrame"*
  tail call void @_ZNK5blink10LocalFrame5TraceEPNS_7VisitorE(%"class.blink::LocalFrame"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink10LocalFrame5TraceEPNS_7VisitorE(%"class.blink::LocalFrame"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZN5blink5RangeC1ERNS_8DocumentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES9_(%"class.blink::Range"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !12

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !12

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN4base23UmaHistogramExactLinearEPKcii(i8*, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink18TextFragmentFinderC1ERNS0_6ClientERKNS_20TextFragmentSelectorEPNS_8DocumentENS0_20FindBufferRunnerTypeE(%"class.blink::TextFragmentFinder"*, %"class.blink::TextFragmentFinder::Client"* dereferenceable(8), %"class.blink::TextFragmentSelector"* dereferenceable(40), %"class.blink::Document"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_18TextFragmentFinderEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !12

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_18TextFragmentFinderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_18TextFragmentFinderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_18TextFragmentFinderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18TextFragmentFinderEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18TextFragmentFinderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::TextFragmentFinder"*
  tail call void @_ZNK5blink18TextFragmentFinder5TraceEPNS_7VisitorE(%"class.blink::TextFragmentFinder"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_18TextFragmentFinderEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::TextFragmentFinder"*
  %3 = bitcast i8* %0 to void (%"class.blink::TextFragmentFinder"*)***
  %4 = load void (%"class.blink::TextFragmentFinder"*)**, void (%"class.blink::TextFragmentFinder"*)*** %3, align 8
  %5 = load void (%"class.blink::TextFragmentFinder"*)*, void (%"class.blink::TextFragmentFinder"*)** %4, align 8
  tail call void %5(%"class.blink::TextFragmentFinder"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_18TextFragmentFinderEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink18TextFragmentFinder5TraceEPNS_7VisitorE(%"class.blink::TextFragmentFinder"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5RangeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Range"*
  tail call void @_ZNK5blink5Range5TraceEPNS_7VisitorE(%"class.blink::Range"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink5Range5TraceEPNS_7VisitorE(%"class.blink::Range"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZN5blink20TextFragmentSelectorC1ENS0_12SelectorTypeERKN3WTF6StringES5_S5_S5_(%"class.blink::TextFragmentSelector"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv"}
!5 = distinct !{!5, !6, !"_ZNK5blink5Range13StartPositionEv: argument 0"}
!6 = distinct !{!6, !"_ZNK5blink5Range13StartPositionEv"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv: argument 0"}
!9 = distinct !{!9, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv"}
!10 = distinct !{!10, !11, !"_ZNK5blink5Range11EndPositionEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink5Range11EndPositionEv"}
!12 = !{!"branch_weights", i32 1, i32 2000}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv: argument 0"}
!15 = distinct !{!15, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv"}
!16 = distinct !{!16, !17, !"_ZNK5blink5Range13StartPositionEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5blink5Range13StartPositionEv"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv: argument 0"}
!20 = distinct !{!20, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv"}
!21 = distinct !{!21, !22, !"_ZNK5blink5Range11EndPositionEv: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink5Range11EndPositionEv"}
!23 = !{i8 0, i8 2}
