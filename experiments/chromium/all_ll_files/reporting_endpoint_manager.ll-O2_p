; ModuleID = '../../net/reporting/reporting_endpoint_manager.cc'
source_filename = "../../net/reporting/reporting_endpoint_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::ReportingEndpointManager" = type { i32 (...)** }
%"struct.net::ReportingPolicy" = type <{ i64, i64, i64, %"class.base::TimeDelta", %"struct.net::BackoffEntry::Policy", %"class.base::TimeDelta", i8, i8, [6 x i8], %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i8, i8, [2 x i8] }>
%"struct.net::BackoffEntry::Policy" = type { i32, i32, double, double, i64, i64, i8 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.net::ReportingDelegate" = type { i32 (...)** }
%"class.net::ReportingCache" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.net::(anonymous namespace)::ReportingEndpointManagerImpl" = type { %"class.net::ReportingEndpointManager", %"struct.net::ReportingPolicy"*, %"class.base::TickClock"*, %"class.net::ReportingDelegate"*, %"class.net::ReportingCache"*, %"class.base::RepeatingCallback", %"class.base::MRUCache" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.5" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.net::ReportingEndpoint" = type { %"struct.net::ReportingEndpointGroupKey", %"struct.net::ReportingEndpoint::EndpointInfo", %"struct.net::ReportingEndpoint::Statistics" }
%"struct.net::ReportingEndpointGroupKey" = type { %"class.net::NetworkIsolationKey", %"class.url::Origin", %"class.std::__1::basic_string" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.24" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.24" = type { %"class.absl::optional_internal::optional_data.25" }
%"class.absl::optional_internal::optional_data.25" = type { %"class.absl::optional_internal::optional_data_base.26" }
%"class.absl::optional_internal::optional_data_base.26" = type { %"class.absl::optional_internal::optional_data_dtor_base.27" }
%"class.absl::optional_internal::optional_data_dtor_base.27" = type { i8, %union.anon.28 }
%union.anon.28 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.20 }
%union.anon.20 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.net::ReportingEndpoint::EndpointInfo" = type { %class.GURL, i32, i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.29" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.GURL* }
%"struct.net::ReportingEndpoint::Statistics" = type { i32, i32, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.net::ReportingEndpoint"* }
%"struct.std::__1::pair.35" = type { %"class.net::NetworkIsolationKey", %class.GURL }
%"class.net::BackoffEntry" = type { i32 (...)**, %"class.base::TimeTicks", i32, %"struct.net::BackoffEntry::Policy"*, %"class.base::TickClock"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.net::BackoffEntry"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.std::__1::pair.35", %"class.std::__1::__list_iterator" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"struct.std::__1::__tuple_less" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.48", %"class.std::__1::__tuple_leaf.49" }
%"class.std::__1::__tuple_leaf" = type { %"class.absl::optional"* }
%"class.std::__1::__tuple_leaf.48" = type { %"class.absl::optional"* }
%"class.std::__1::__tuple_leaf.49" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEED2Ev = comdat any

$_ZN4base8MRUCacheINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EEED0Ev = comdat any

$_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEED0Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE7destroyEPNS_11__tree_nodeISG_SE_EE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE4findIS6_EENS_15__tree_iteratorISG_PNS_11__tree_nodeISG_SE_EElEERKT_ = comdat any

$_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_ = comdat any

$_ZNSt3__16vectorIN3net17ReportingEndpointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEE3PutISB_EENS1_15__list_iteratorINS2_IS6_SB_EEPvEERKS6_OT_ = comdat any

$_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEE5EraseENS1_15__list_iteratorINS2_IS6_SB_EEPvEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE25__emplace_unique_key_argsIS6_JRKS6_SF_EEENS2_INS_15__tree_iteratorISG_PNS_11__tree_nodeISG_SE_EElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE12__find_equalIS6_EERPNS_16__tree_node_baseISE_EERPNS_15__tree_end_nodeISR_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZTVN4base8MRUCacheINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EEEE = comdat any

$_ZTVN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEEE = comdat any

@_ZTVN3net24ReportingEndpointManagerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::ReportingEndpointManager"*)* @_ZN3net24ReportingEndpointManagerD2Ev to i8*), i8* bitcast (void (%"class.net::ReportingEndpointManager"*)* @_ZN3net24ReportingEndpointManagerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3net12_GLOBAL__N_128ReportingEndpointManagerImplE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"*)* @_ZN3net12_GLOBAL__N_128ReportingEndpointManagerImplD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"*)* @_ZN3net12_GLOBAL__N_128ReportingEndpointManagerImplD0Ev to i8*), i8* bitcast (void (%"struct.net::ReportingEndpoint"*, %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"*, %"struct.net::ReportingEndpointGroupKey"*)* @_ZN3net12_GLOBAL__N_128ReportingEndpointManagerImpl23FindEndpointForDeliveryERKNS_25ReportingEndpointGroupKeyE to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"*, %"class.net::NetworkIsolationKey"*, %class.GURL*, i1)* @_ZN3net12_GLOBAL__N_128ReportingEndpointManagerImpl23InformOfEndpointRequestERKNS_19NetworkIsolationKeyERK4GURLb to i8*)] }, align 8
@_ZTVN4base8MRUCacheINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::MRUCacheBase"*)* @_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEED2Ev to i8*), i8* bitcast (void (%"class.base::MRUCache"*)* @_ZN4base8MRUCacheINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EEED0Ev to i8*)] }, comdat, align 8
@_ZTVN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::MRUCacheBase"*)* @_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEED2Ev to i8*), i8* bitcast (void (%"class.base::MRUCacheBase"*)* @_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEED0Ev to i8*)] }, comdat, align 8

@_ZN3net24ReportingEndpointManagerD1Ev = hidden unnamed_addr alias void (%"class.net::ReportingEndpointManager"*), void (%"class.net::ReportingEndpointManager"*)* @_ZN3net24ReportingEndpointManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::ReportingEndpointManager"* @_ZN3net24ReportingEndpointManager6CreateEPKNS_15ReportingPolicyEPKN4base9TickClockEPKNS_17ReportingDelegateEPNS_14ReportingCacheERKNS4_17RepeatingCallbackIFiiiEEE(%"struct.net::ReportingPolicy"*, %"class.base::TickClock"*, %"class.net::ReportingDelegate"*, %"class.net::ReportingCache"*, %"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = ptrtoint %"struct.net::ReportingPolicy"* %0 to i64
  %7 = ptrtoint %"class.base::TickClock"* %1 to i64
  %8 = ptrtoint %"class.net::ReportingDelegate"* %2 to i64
  %9 = ptrtoint %"class.net::ReportingCache"* %3 to i64
  %10 = tail call i8* @_Znwm(i64 112) #11
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net12_GLOBAL__N_128ReportingEndpointManagerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = bitcast i8* %12 to i64*
  store i64 %6, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 16
  %15 = bitcast i8* %14 to i64*
  store i64 %7, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %10, i64 24
  %17 = bitcast i8* %16 to i64*
  store i64 %8, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %10, i64 32
  %19 = bitcast i8* %18 to i64*
  store i64 %9, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %10, i64 40
  %21 = bitcast i8* %20 to %"class.base::internal::CallbackBaseCopyable"*
  %22 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %21, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %22) #12
  %23 = getelementptr inbounds i8, i8* %10, i64 48
  %24 = bitcast i8* %23 to i32 (...)***
  %25 = getelementptr inbounds i8, i8* %10, i64 56
  %26 = bitcast i8* %25 to i8**
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %10, i64 64
  %28 = bitcast i8* %27 to i8**
  store i8* %25, i8** %28, align 8
  %29 = getelementptr inbounds i8, i8* %10, i64 72
  %30 = bitcast i8* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %10, i64 88
  %32 = getelementptr inbounds i8, i8* %10, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #12
  %33 = bitcast i8* %32 to i8**
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds i8, i8* %10, i64 104
  %35 = bitcast i8* %34 to i64*
  store i64 200, i64* %35, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base8MRUCacheINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %36 = bitcast i8* %10 to %"class.net::ReportingEndpointManager"*
  ret %"class.net::ReportingEndpointManager"* %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net24ReportingEndpointManagerD2Ev(%"class.net::ReportingEndpointManager"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net24ReportingEndpointManagerD0Ev(%"class.net::ReportingEndpointManager"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_128ReportingEndpointManagerImplD2Ev(%"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net12_GLOBAL__N_128ReportingEndpointManagerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEED2Ev(%"class.base::MRUCacheBase"* %3) #12
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_128ReportingEndpointManagerImplD0Ev(%"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net12_GLOBAL__N_128ReportingEndpointManagerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEED2Ev(%"class.base::MRUCacheBase"* %3) #12
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #12
  %5 = bitcast %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_128ReportingEndpointManagerImpl23FindEndpointForDeliveryERKNS_25ReportingEndpointGroupKeyE(%"struct.net::ReportingEndpoint"* noalias sret, %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"*, %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"struct.std::__1::pair.35", align 8
  %7 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %1, i64 0, i32 4
  %11 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.net::ReportingCache"*, %"class.net::ReportingCache"** %10, align 8
  %13 = bitcast %"class.net::ReportingCache"* %12 to void (%"class.std::__1::vector"*, %"class.net::ReportingCache"*, %"struct.net::ReportingEndpointGroupKey"*)***
  %14 = load void (%"class.std::__1::vector"*, %"class.net::ReportingCache"*, %"struct.net::ReportingEndpointGroupKey"*)**, void (%"class.std::__1::vector"*, %"class.net::ReportingCache"*, %"struct.net::ReportingEndpointGroupKey"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.std::__1::vector"*, %"class.net::ReportingCache"*, %"struct.net::ReportingEndpointGroupKey"*)*, void (%"class.std::__1::vector"*, %"class.net::ReportingCache"*, %"struct.net::ReportingEndpointGroupKey"*)** %14, i64 22
  %16 = load void (%"class.std::__1::vector"*, %"class.net::ReportingCache"*, %"struct.net::ReportingEndpointGroupKey"*)*, void (%"class.std::__1::vector"*, %"class.net::ReportingCache"*, %"struct.net::ReportingEndpointGroupKey"*)** %15, align 8
  call void %16(%"class.std::__1::vector"* nonnull sret %4, %"class.net::ReportingCache"* %12, %"struct.net::ReportingEndpointGroupKey"* dereferenceable(288) %2) #12
  %17 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #12
  %21 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %8, align 8
  %22 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %9, align 8
  %23 = icmp eq %"struct.net::ReportingEndpoint"* %21, %22
  br i1 %23, label %131, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %1, i64 0, i32 3
  %26 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %6, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.net::ReportingEndpointGroupKey", %"struct.net::ReportingEndpointGroupKey"* %2, i64 0, i32 0
  %28 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %6, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %6, i64 0, i32 1
  %30 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %1, i64 0, i32 6, i32 0, i32 2, i32 0
  %31 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %32 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %1, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %1, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %34 = bitcast %"struct.net::ReportingEndpoint"** %19 to i64*
  br label %41

35:                                               ; preds = %127
  %36 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %18, align 8
  %37 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %19, align 8
  %38 = ptrtoint %"struct.net::ReportingEndpoint"* %37 to i64
  %39 = ptrtoint %"struct.net::ReportingEndpoint"* %36 to i64
  %40 = icmp eq %"struct.net::ReportingEndpoint"* %36, %37
  br i1 %40, label %131, label %132

41:                                               ; preds = %24, %127
  %42 = phi i32 [ 0, %24 ], [ %128, %127 ]
  %43 = phi %"struct.net::ReportingEndpoint"* [ %21, %24 ], [ %129, %127 ]
  %44 = load %"class.net::ReportingDelegate"*, %"class.net::ReportingDelegate"** %25, align 8
  %45 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %43, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %43, i64 0, i32 1, i32 0
  %47 = bitcast %"class.net::ReportingDelegate"* %44 to i1 (%"class.net::ReportingDelegate"*, %"class.url::Origin"*, %class.GURL*)***
  %48 = load i1 (%"class.net::ReportingDelegate"*, %"class.url::Origin"*, %class.GURL*)**, i1 (%"class.net::ReportingDelegate"*, %"class.url::Origin"*, %class.GURL*)*** %47, align 8
  %49 = getelementptr inbounds i1 (%"class.net::ReportingDelegate"*, %"class.url::Origin"*, %class.GURL*)*, i1 (%"class.net::ReportingDelegate"*, %"class.url::Origin"*, %class.GURL*)** %48, i64 5
  %50 = load i1 (%"class.net::ReportingDelegate"*, %"class.url::Origin"*, %class.GURL*)*, i1 (%"class.net::ReportingDelegate"*, %"class.url::Origin"*, %class.GURL*)** %49, align 8
  %51 = call zeroext i1 %50(%"class.net::ReportingDelegate"* %44, %"class.url::Origin"* dereferenceable(80) %45, %class.GURL* dereferenceable(120) %46) #12
  br i1 %51, label %52, label %127

52:                                               ; preds = %41
  %53 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %18, align 8
  %54 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %19, align 8
  %55 = icmp eq %"struct.net::ReportingEndpoint"* %53, %54
  br i1 %55, label %62, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %43, i64 0, i32 1, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %53, i64 0, i32 1, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = icmp sgt i32 %58, %60
  br i1 %61, label %127, label %62

62:                                               ; preds = %56, %52
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %26) #12
  call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* nonnull %28, %"class.net::NetworkIsolationKey"* dereferenceable(184) %27) #12
  call void @_ZN4GURLC1ERKS_(%class.GURL* %29, %class.GURL* dereferenceable(120) %46) #12
  %63 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE4findIS6_EENS_15__tree_iteratorISG_PNS_11__tree_nodeISG_SE_EElEERKT_(%"class.std::__1::__tree"* %30, %"struct.std::__1::pair.35"* nonnull dereferenceable(304) %6) #12
  %64 = icmp eq %"class.std::__1::__tree_end_node"* %63, %31
  br i1 %64, label %91, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 42
  %67 = bitcast %"class.std::__1::__tree_end_node"* %66 to %"struct.std::__1::__list_node_base"**
  %68 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %67, align 8
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %32, align 8
  %70 = icmp eq %"struct.std::__1::__list_node_base"* %69, %68
  br i1 %70, label %91, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %68, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = icmp eq %"struct.std::__1::__list_node_base"* %73, %69
  br i1 %74, label %91, label %75

75:                                               ; preds = %71
  %76 = ptrtoint %"struct.std::__1::__list_node_base"* %73 to i64
  %77 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %68, i64 0, i32 0
  %78 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %78, i64 0, i32 1
  %80 = bitcast %"struct.std::__1::__list_node_base"** %79 to i64*
  store i64 %76, i64* %80, align 8
  %81 = bitcast %"struct.std::__1::__list_node_base"* %68 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"struct.std::__1::__list_node_base"** %72 to i64**
  %84 = load i64*, i64** %83, align 8
  store i64 %82, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 0
  %86 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %85, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %86, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %68, %"struct.std::__1::__list_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__list_node_base"* %69 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %81, align 8
  store %"struct.std::__1::__list_node_base"* %68, %"struct.std::__1::__list_node_base"** %85, align 8
  store %"struct.std::__1::__list_node_base"* %69, %"struct.std::__1::__list_node_base"** %72, align 8
  %90 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %32, align 8
  br label %91

91:                                               ; preds = %62, %65, %71, %75
  %92 = phi %"struct.std::__1::__list_node_base"* [ %68, %65 ], [ %69, %71 ], [ %90, %75 ], [ %33, %62 ]
  call void @_ZN4GURLD1Ev(%class.GURL* %29) #12
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %26) #12
  %93 = icmp eq %"struct.std::__1::__list_node_base"* %92, %33
  br i1 %93, label %99, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %92, i64 20
  %96 = bitcast %"struct.std::__1::__list_node_base"* %95 to %"class.net::BackoffEntry"**
  %97 = load %"class.net::BackoffEntry"*, %"class.net::BackoffEntry"** %96, align 8
  %98 = call zeroext i1 @_ZNK3net12BackoffEntry19ShouldRejectRequestEv(%"class.net::BackoffEntry"* %97) #12
  br i1 %98, label %127, label %99

99:                                               ; preds = %91, %94
  %100 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %18, align 8
  %101 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %19, align 8
  %102 = icmp eq %"struct.net::ReportingEndpoint"* %100, %101
  br i1 %102, label %113, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %43, i64 0, i32 1, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %100, i64 0, i32 1, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = icmp slt i32 %105, %107
  br i1 %108, label %109, label %114

109:                                              ; preds = %103, %109
  %110 = phi %"struct.net::ReportingEndpoint"* [ %111, %109 ], [ %101, %103 ]
  %111 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %110, i64 -1
  call void @_ZN3net17ReportingEndpointD1Ev(%"struct.net::ReportingEndpoint"* %111) #12
  %112 = icmp eq %"struct.net::ReportingEndpoint"* %111, %100
  br i1 %112, label %113, label %109

113:                                              ; preds = %109, %99
  store %"struct.net::ReportingEndpoint"* %100, %"struct.net::ReportingEndpoint"** %19, align 8
  br label %114

114:                                              ; preds = %113, %103
  %115 = phi %"struct.net::ReportingEndpoint"* [ %100, %113 ], [ %101, %103 ]
  %116 = phi i32 [ 0, %113 ], [ %42, %103 ]
  %117 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %20, align 8
  %118 = icmp eq %"struct.net::ReportingEndpoint"* %115, %117
  br i1 %118, label %122, label %119

119:                                              ; preds = %114
  call void @_ZN3net17ReportingEndpointC1ERKS0_(%"struct.net::ReportingEndpoint"* %115, %"struct.net::ReportingEndpoint"* dereferenceable(432) %43) #12
  %120 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %115, i64 1
  %121 = ptrtoint %"struct.net::ReportingEndpoint"* %120 to i64
  store i64 %121, i64* %34, align 8
  br label %123

122:                                              ; preds = %114
  call void @_ZNSt3__16vectorIN3net17ReportingEndpointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.net::ReportingEndpoint"* dereferenceable(432) %43) #12
  br label %123

123:                                              ; preds = %119, %122
  %124 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %43, i64 0, i32 1, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = add nsw i32 %125, %116
  br label %127

127:                                              ; preds = %123, %94, %56, %41
  %128 = phi i32 [ %42, %41 ], [ %42, %56 ], [ %126, %123 ], [ %42, %94 ]
  %129 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %43, i64 1
  %130 = icmp eq %"struct.net::ReportingEndpoint"* %129, %22
  br i1 %130, label %35, label %41

131:                                              ; preds = %3, %35
  call void @_ZN3net17ReportingEndpointC1Ev(%"struct.net::ReportingEndpoint"* %0) #12
  br label %179

132:                                              ; preds = %35
  %133 = icmp eq i32 %128, 0
  %134 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %1, i64 0, i32 5
  br i1 %133, label %135, label %149

135:                                              ; preds = %132
  %136 = sub i64 %38, %39
  %137 = sdiv exact i64 %136, 432
  %138 = trunc i64 %137 to i32
  %139 = add i32 %138, -1
  %140 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  %141 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %140, align 8
  %142 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %141, i64 0, i32 1
  %143 = bitcast void ()** %142 to i32 (%"class.base::internal::BindStateBase"*, i32, i32)**
  %144 = load i32 (%"class.base::internal::BindStateBase"*, i32, i32)*, i32 (%"class.base::internal::BindStateBase"*, i32, i32)** %143, align 8
  %145 = call i32 %144(%"class.base::internal::BindStateBase"* %141, i32 0, i32 %139) #12
  %146 = sext i32 %145 to i64
  %147 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %18, align 8
  %148 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %147, i64 %146
  call void @_ZN3net17ReportingEndpointC1ERKS0_(%"struct.net::ReportingEndpoint"* %0, %"struct.net::ReportingEndpoint"* dereferenceable(432) %148) #12
  br label %179

149:                                              ; preds = %132
  %150 = add nsw i32 %128, -1
  %151 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  %152 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %151, align 8
  %153 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %152, i64 0, i32 1
  %154 = bitcast void ()** %153 to i32 (%"class.base::internal::BindStateBase"*, i32, i32)**
  %155 = load i32 (%"class.base::internal::BindStateBase"*, i32, i32)*, i32 (%"class.base::internal::BindStateBase"*, i32, i32)** %154, align 8
  %156 = call i32 %155(%"class.base::internal::BindStateBase"* %152, i32 0, i32 %150) #12
  %157 = bitcast %"struct.net::ReportingEndpoint"** %19 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.std::__1::vector"* %5 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = icmp eq i64 %158, %160
  %162 = inttoptr i64 %160 to %"struct.net::ReportingEndpoint"*
  br i1 %161, label %178, label %163

163:                                              ; preds = %149
  %164 = sub i64 %158, %160
  %165 = sdiv exact i64 %164, 432
  br label %166

166:                                              ; preds = %163, %173
  %167 = phi i64 [ 0, %163 ], [ %174, %173 ]
  %168 = phi i32 [ 0, %163 ], [ %171, %173 ]
  %169 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %162, i64 %167, i32 1, i32 2
  %170 = load i32, i32* %169, align 4
  %171 = add nsw i32 %170, %168
  %172 = icmp slt i32 %156, %171
  br i1 %172, label %176, label %173

173:                                              ; preds = %166
  %174 = add nuw i64 %167, 1
  %175 = icmp ult i64 %174, %165
  br i1 %175, label %166, label %178

176:                                              ; preds = %166
  %177 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %162, i64 %167
  call void @_ZN3net17ReportingEndpointC1ERKS0_(%"struct.net::ReportingEndpoint"* %0, %"struct.net::ReportingEndpoint"* dereferenceable(432) %177) #12
  br label %179

178:                                              ; preds = %173, %149
  call void @_ZN3net17ReportingEndpointC1Ev(%"struct.net::ReportingEndpoint"* %0) #12
  br label %179

179:                                              ; preds = %176, %178, %135, %131
  %180 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %18, align 8
  %181 = icmp eq %"struct.net::ReportingEndpoint"* %180, null
  br i1 %181, label %194, label %182

182:                                              ; preds = %179
  %183 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %19, align 8
  %184 = icmp eq %"struct.net::ReportingEndpoint"* %183, %180
  br i1 %184, label %191, label %185

185:                                              ; preds = %182, %185
  %186 = phi %"struct.net::ReportingEndpoint"* [ %187, %185 ], [ %183, %182 ]
  %187 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %186, i64 -1
  call void @_ZN3net17ReportingEndpointD1Ev(%"struct.net::ReportingEndpoint"* %187) #12
  %188 = icmp eq %"struct.net::ReportingEndpoint"* %187, %180
  br i1 %188, label %189, label %185

189:                                              ; preds = %185
  %190 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %18, align 8
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi %"struct.net::ReportingEndpoint"* [ %190, %189 ], [ %180, %182 ]
  store %"struct.net::ReportingEndpoint"* %180, %"struct.net::ReportingEndpoint"** %19, align 8
  %193 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %192, i64 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %193) #11
  br label %194

194:                                              ; preds = %179, %191
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #12
  %195 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %8, align 8
  %196 = icmp eq %"struct.net::ReportingEndpoint"* %195, null
  br i1 %196, label %209, label %197

197:                                              ; preds = %194
  %198 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %9, align 8
  %199 = icmp eq %"struct.net::ReportingEndpoint"* %198, %195
  br i1 %199, label %206, label %200

200:                                              ; preds = %197, %200
  %201 = phi %"struct.net::ReportingEndpoint"* [ %202, %200 ], [ %198, %197 ]
  %202 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %201, i64 -1
  call void @_ZN3net17ReportingEndpointD1Ev(%"struct.net::ReportingEndpoint"* %202) #12
  %203 = icmp eq %"struct.net::ReportingEndpoint"* %202, %195
  br i1 %203, label %204, label %200

204:                                              ; preds = %200
  %205 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %8, align 8
  br label %206

206:                                              ; preds = %204, %197
  %207 = phi %"struct.net::ReportingEndpoint"* [ %205, %204 ], [ %195, %197 ]
  store %"struct.net::ReportingEndpoint"* %195, %"struct.net::ReportingEndpoint"** %9, align 8
  %208 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %207, i64 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %208) #11
  br label %209

209:                                              ; preds = %194, %206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_128ReportingEndpointManagerImpl23InformOfEndpointRequestERKNS_19NetworkIsolationKeyERK4GURLb(%"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"*, %"class.net::NetworkIsolationKey"* dereferenceable(184), %class.GURL* dereferenceable(120), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.std::__1::pair.35", align 8
  %6 = alloca %"class.std::__1::unique_ptr.37", align 8
  %7 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 304, i1 false)
  %8 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %5, i64 0, i32 0
  call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* nonnull %8, %"class.net::NetworkIsolationKey"* dereferenceable(184) %1) #12
  %9 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %5, i64 0, i32 1
  call void @_ZN4GURLC1ERKS_(%class.GURL* %9, %class.GURL* dereferenceable(120) %2) #12
  %10 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %0, i64 0, i32 6, i32 0
  %11 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %0, i64 0, i32 6, i32 0, i32 2, i32 0
  %12 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE4findIS6_EENS_15__tree_iteratorISG_PNS_11__tree_nodeISG_SE_EElEERKT_(%"class.std::__1::__tree"* %11, %"struct.std::__1::pair.35"* nonnull dereferenceable(304) %5) #12
  %13 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %14 = icmp eq %"class.std::__1::__tree_end_node"* %12, %13
  br i1 %14, label %46, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 42
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"struct.std::__1::__list_node_base"**
  %18 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %17, align 8
  %19 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 1
  %20 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__list_node_base"* %20, %18
  br i1 %21, label %42, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %18, i64 0, i32 1
  %24 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__list_node_base"* %24, %20
  br i1 %25, label %42, label %26

26:                                               ; preds = %22
  %27 = ptrtoint %"struct.std::__1::__list_node_base"* %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %18, i64 0, i32 0
  %29 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %29, i64 0, i32 1
  %31 = bitcast %"struct.std::__1::__list_node_base"** %30 to i64*
  store i64 %27, i64* %31, align 8
  %32 = bitcast %"struct.std::__1::__list_node_base"* %18 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"struct.std::__1::__list_node_base"** %23 to i64**
  %35 = load i64*, i64** %34, align 8
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %20, i64 0, i32 0
  %37 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %37, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %18, %"struct.std::__1::__list_node_base"** %38, align 8
  %39 = bitcast %"struct.std::__1::__list_node_base"* %20 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %32, align 8
  store %"struct.std::__1::__list_node_base"* %18, %"struct.std::__1::__list_node_base"** %36, align 8
  store %"struct.std::__1::__list_node_base"* %20, %"struct.std::__1::__list_node_base"** %23, align 8
  %41 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %19, align 8
  br label %42

42:                                               ; preds = %15, %22, %26
  %43 = phi %"struct.std::__1::__list_node_base"* [ %18, %15 ], [ %20, %22 ], [ %41, %26 ]
  %44 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %45 = icmp eq %"struct.std::__1::__list_node_base"* %43, %44
  br i1 %45, label %46, label %66

46:                                               ; preds = %4, %42
  %47 = bitcast %"class.std::__1::unique_ptr.37"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  %48 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %0, i64 0, i32 1
  %49 = load %"struct.net::ReportingPolicy"*, %"struct.net::ReportingPolicy"** %48, align 8
  %50 = getelementptr inbounds %"struct.net::ReportingPolicy", %"struct.net::ReportingPolicy"* %49, i64 0, i32 4
  %51 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl", %"class.net::(anonymous namespace)::ReportingEndpointManagerImpl"* %0, i64 0, i32 2
  %52 = call i8* @_Znwm(i64 40) #11
  %53 = bitcast i8* %52 to %"class.net::BackoffEntry"*
  %54 = load %"class.base::TickClock"*, %"class.base::TickClock"** %51, align 8
  call void @_ZN3net12BackoffEntryC1EPKNS0_6PolicyEPKN4base9TickClockE(%"class.net::BackoffEntry"* nonnull %53, %"struct.net::BackoffEntry::Policy"* %50, %"class.base::TickClock"* %54) #12
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %6, i64 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.std::__1::unique_ptr.37"* %6 to i8**
  store i8* %52, i8** %56, align 8
  %57 = call %"struct.std::__1::__list_node_base"* @_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEE3PutISB_EENS1_15__list_iteratorINS2_IS6_SB_EEPvEERKS6_OT_(%"class.base::MRUCacheBase"* %10, %"struct.std::__1::pair.35"* nonnull dereferenceable(304) %5, %"class.std::__1::unique_ptr.37"* nonnull dereferenceable(8) %6)
  %58 = load %"class.net::BackoffEntry"*, %"class.net::BackoffEntry"** %55, align 8
  store %"class.net::BackoffEntry"* null, %"class.net::BackoffEntry"** %55, align 8
  %59 = icmp eq %"class.net::BackoffEntry"* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %46
  %61 = bitcast %"class.net::BackoffEntry"* %58 to void (%"class.net::BackoffEntry"*)***
  %62 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %62, i64 1
  %64 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %63, align 8
  call void %64(%"class.net::BackoffEntry"* nonnull %58) #12
  br label %65

65:                                               ; preds = %46, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %66

66:                                               ; preds = %65, %42
  %67 = phi %"struct.std::__1::__list_node_base"* [ %57, %65 ], [ %43, %42 ]
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 20
  %69 = bitcast %"struct.std::__1::__list_node_base"* %68 to %"class.net::BackoffEntry"**
  %70 = load %"class.net::BackoffEntry"*, %"class.net::BackoffEntry"** %69, align 8
  call void @_ZN3net12BackoffEntry15InformOfRequestEb(%"class.net::BackoffEntry"* %70, i1 zeroext %3) #12
  call void @_ZN4GURLD1Ev(%class.GURL* %9) #12
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %7) #12
  ret void
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEED2Ev(%"class.base::MRUCacheBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE7destroyEPNS_11__tree_nodeISG_SE_EE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %7, i64 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %7, i64 0, i32 0, i32 0
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %18 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %13, i64 0, i32 0
  %21 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %21, i64 0, i32 1
  %23 = bitcast %"struct.std::__1::__list_node_base"** %22 to i64*
  store i64 %19, i64* %23, align 8
  %24 = bitcast %"struct.std::__1::__list_node_base"* %13 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64**
  %27 = load i64*, i64** %26, align 8
  store i64 %25, i64* %27, align 8
  store i64 0, i64* %8, align 8
  %28 = icmp eq %"struct.std::__1::__list_node_base"* %13, %14
  br i1 %28, label %49, label %29

29:                                               ; preds = %11, %43
  %30 = phi %"struct.std::__1::__list_node_base"* [ %32, %43 ], [ %13, %11 ]
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 0, i32 1
  %32 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 1
  %34 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 20
  %35 = bitcast %"struct.std::__1::__list_node_base"* %34 to %"class.net::BackoffEntry"**
  %36 = load %"class.net::BackoffEntry"*, %"class.net::BackoffEntry"** %35, align 8
  store %"class.net::BackoffEntry"* null, %"class.net::BackoffEntry"** %35, align 8
  %37 = icmp eq %"class.net::BackoffEntry"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %29
  %39 = bitcast %"class.net::BackoffEntry"* %36 to void (%"class.net::BackoffEntry"*)***
  %40 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %40, i64 1
  %42 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %41, align 8
  tail call void %42(%"class.net::BackoffEntry"* nonnull %36) #12
  br label %43

43:                                               ; preds = %38, %29
  %44 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 12, i32 1
  %45 = bitcast %"struct.std::__1::__list_node_base"** %44 to %class.GURL*
  tail call void @_ZN4GURLD1Ev(%class.GURL* %45) #12
  %46 = bitcast %"struct.std::__1::__list_node_base"* %33 to %"class.net::NetworkIsolationKey"*
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %46) #12
  %47 = bitcast %"struct.std::__1::__list_node_base"* %30 to i8*
  tail call void @_ZdlPv(i8* %47) #11
  %48 = icmp eq %"struct.std::__1::__list_node_base"* %32, %14
  br i1 %48, label %49, label %29

49:                                               ; preds = %43, %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8MRUCacheINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EEED0Ev(%"class.base::MRUCache"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::MRUCache", %"class.base::MRUCache"* %0, i64 0, i32 0
  tail call void @_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEED2Ev(%"class.base::MRUCacheBase"* %2) #12
  %3 = bitcast %"class.base::MRUCache"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEED0Ev(%"class.base::MRUCacheBase"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEED2Ev(%"class.base::MRUCacheBase"* %0) #12
  %2 = bitcast %"class.base::MRUCacheBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE7destroyEPNS_11__tree_nodeISG_SE_EE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE7destroyEPNS_11__tree_nodeISG_SE_EE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE7destroyEPNS_11__tree_nodeISG_SE_EE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %10) #12
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %11) #12
  %12 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void

13:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #7

declare zeroext i1 @_ZNK3net12BackoffEntry19ShouldRejectRequestEv(%"class.net::BackoffEntry"*) local_unnamed_addr #6

declare void @_ZN3net17ReportingEndpointC1Ev(%"struct.net::ReportingEndpoint"*) unnamed_addr #6

declare void @_ZN3net17ReportingEndpointC1ERKS0_(%"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"* dereferenceable(432)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE4findIS6_EENS_15__tree_iteratorISG_PNS_11__tree_nodeISG_SE_EElEERKT_(%"class.std::__1::__tree"*, %"struct.std::__1::pair.35"* dereferenceable(304)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__tuple_less", align 1
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"struct.std::__1::__tuple_less", align 1
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"struct.std::__1::__tuple_less", align 1
  %10 = alloca %"class.std::__1::tuple", align 8
  %11 = alloca %"class.std::__1::tuple", align 8
  %12 = alloca %"struct.std::__1::__tuple_less", align 1
  %13 = alloca %"class.std::__1::tuple", align 8
  %14 = alloca %"class.std::__1::tuple", align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node"**
  %17 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node"* %17, null
  br i1 %18, label %102, label %19

19:                                               ; preds = %2
  %20 = bitcast %"class.std::__1::tuple"* %7 to i8*
  %21 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 2, i32 0
  %24 = bitcast %"class.std::__1::tuple"* %8 to i8*
  %25 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %1, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %1, i64 0, i32 0, i32 2
  %27 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %1, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 2, i32 0
  %31 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %6, i64 0, i32 0
  %32 = bitcast %"class.std::__1::tuple"* %4 to i8*
  %33 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 2, i32 0
  %36 = bitcast %"class.std::__1::tuple"* %5 to i8*
  %37 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 2, i32 0
  %40 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %3, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %1, i64 0, i32 1
  br label %42

42:                                               ; preds = %62, %19
  %43 = phi %"class.std::__1::__tree_end_node"* [ %15, %19 ], [ %64, %62 ]
  %44 = phi %"class.std::__1::__tree_node"* [ %17, %19 ], [ %65, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %45, %"class.absl::optional"** %21, align 8, !alias.scope !2
  store %"class.absl::optional"* %46, %"class.absl::optional"** %22, align 8, !alias.scope !2
  store i8* %47, i8** %23, align 8, !alias.scope !2
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  store %"class.absl::optional"* %25, %"class.absl::optional"** %28, align 8, !alias.scope !5
  store %"class.absl::optional"* %26, %"class.absl::optional"** %29, align 8, !alias.scope !5
  store i8* %27, i8** %30, align 8, !alias.scope !5
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #12
  %48 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %6, %"class.std::__1::tuple"* nonnull dereferenceable(24) %7, %"class.std::__1::tuple"* nonnull dereferenceable(24) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  br i1 %48, label %49, label %52

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 0, i32 1
  %51 = bitcast %"class.std::__1::__tree_node_base"** %50 to %"class.std::__1::__tree_node"**
  br label %62

52:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #12
  store %"class.absl::optional"* %25, %"class.absl::optional"** %33, align 8, !alias.scope !8
  store %"class.absl::optional"* %26, %"class.absl::optional"** %34, align 8, !alias.scope !8
  store i8* %27, i8** %35, align 8, !alias.scope !8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #12
  store %"class.absl::optional"* %45, %"class.absl::optional"** %37, align 8, !alias.scope !11
  store %"class.absl::optional"* %46, %"class.absl::optional"** %38, align 8, !alias.scope !11
  store i8* %47, i8** %39, align 8, !alias.scope !11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %40) #12
  %53 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %3, %"class.std::__1::tuple"* nonnull dereferenceable(24) %4, %"class.std::__1::tuple"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %40) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #12
  br i1 %53, label %59, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 1, i32 0, i32 0, i32 1
  %56 = call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %55, %class.GURL* dereferenceable(120) %41) #12
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::__tree_node_base"** %57 to %"class.std::__1::__tree_node"**
  br i1 %56, label %62, label %59

59:                                               ; preds = %54, %52
  %60 = bitcast %"class.std::__1::__tree_node"* %44 to %"class.std::__1::__tree_node"**
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %59, %54, %49
  %63 = phi %"class.std::__1::__tree_node"** [ %60, %59 ], [ %51, %49 ], [ %58, %54 ]
  %64 = phi %"class.std::__1::__tree_end_node"* [ %61, %59 ], [ %43, %49 ], [ %43, %54 ]
  %65 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %63, align 8
  %66 = icmp eq %"class.std::__1::__tree_node"* %65, null
  br i1 %66, label %67, label %42

67:                                               ; preds = %62
  %68 = icmp eq %"class.std::__1::__tree_end_node"* %64, %15
  br i1 %68, label %102, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 4
  %71 = bitcast %"class.std::__1::tuple"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #12
  %72 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %25, %"class.absl::optional"** %72, align 8, !alias.scope !14
  %73 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %26, %"class.absl::optional"** %73, align 8, !alias.scope !14
  %74 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 2, i32 0
  store i8* %27, i8** %74, align 8, !alias.scope !14
  %75 = bitcast %"class.std::__1::tuple"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #12
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 5
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 16
  %78 = bitcast %"class.std::__1::tuple"* %14 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %76, %"class.std::__1::__tree_end_node"** %78, align 8, !alias.scope !17
  %79 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %14, i64 0, i32 0, i32 1, i32 0
  %80 = bitcast %"class.absl::optional"** %79 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %80, align 8, !alias.scope !17
  %81 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %14, i64 0, i32 0, i32 2, i32 0
  %82 = bitcast i8** %81 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %70, %"class.std::__1::__tree_end_node"** %82, align 8, !alias.scope !17
  %83 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %83) #12
  %84 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %12, %"class.std::__1::tuple"* nonnull dereferenceable(24) %13, %"class.std::__1::tuple"* nonnull dereferenceable(24) %14) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %83) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #12
  br i1 %84, label %102, label %85

85:                                               ; preds = %69
  %86 = bitcast %"class.std::__1::tuple"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #12
  %87 = bitcast %"class.std::__1::tuple"* %10 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %76, %"class.std::__1::__tree_end_node"** %87, align 8, !alias.scope !20
  %88 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 1, i32 0
  %89 = bitcast %"class.absl::optional"** %88 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %89, align 8, !alias.scope !20
  %90 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 2, i32 0
  %91 = bitcast i8** %90 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %70, %"class.std::__1::__tree_end_node"** %91, align 8, !alias.scope !20
  %92 = bitcast %"class.std::__1::tuple"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #12
  %93 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %25, %"class.absl::optional"** %93, align 8, !alias.scope !23
  %94 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %26, %"class.absl::optional"** %94, align 8, !alias.scope !23
  %95 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 2, i32 0
  store i8* %27, i8** %95, align 8, !alias.scope !23
  %96 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %96) #12
  %97 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %9, %"class.std::__1::tuple"* nonnull dereferenceable(24) %10, %"class.std::__1::tuple"* nonnull dereferenceable(24) %11) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %96) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #12
  br i1 %97, label %103, label %98

98:                                               ; preds = %85
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 27
  %100 = bitcast %"class.std::__1::__tree_end_node"* %99 to %class.GURL*
  %101 = call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %41, %class.GURL* dereferenceable(120) %100) #12
  br i1 %101, label %102, label %103

102:                                              ; preds = %67, %69, %2, %98
  br label %103

103:                                              ; preds = %85, %98, %102
  %104 = phi %"class.std::__1::__tree_end_node"* [ %15, %102 ], [ %64, %98 ], [ %64, %85 ]
  ret %"class.std::__1::__tree_end_node"* %104
}

declare zeroext i1 @_ZNK4GURLltERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"*, %"class.std::__1::tuple"* dereferenceable(24), %"class.std::__1::tuple"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.absl::optional"*, %"class.absl::optional"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !26
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !26
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %77, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %16, %"class.net::SchemefulSite"* dereferenceable(80) %17) #12
  br i1 %18, label %77, label %19

19:                                               ; preds = %15
  %20 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8
  %21 = load %"class.absl::optional"*, %"class.absl::optional"** %4, align 8
  br label %22

22:                                               ; preds = %19, %3
  %23 = phi %"class.absl::optional"* [ %21, %19 ], [ %5, %3 ]
  %24 = phi %"class.absl::optional"* [ %20, %19 ], [ %7, %3 ]
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !26
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !26
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %77, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %33, %"class.net::SchemefulSite"* dereferenceable(80) %34) #12
  br i1 %35, label %77, label %36

36:                                               ; preds = %22, %32
  %37 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %38 = load %"class.absl::optional"*, %"class.absl::optional"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 1, i32 0
  %40 = load %"class.absl::optional"*, %"class.absl::optional"** %39, align 8
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !26
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !26
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %77, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %49, %"class.net::SchemefulSite"* dereferenceable(80) %50) #12
  br i1 %51, label %77, label %52

52:                                               ; preds = %48
  %53 = load %"class.absl::optional"*, %"class.absl::optional"** %39, align 8
  %54 = load %"class.absl::optional"*, %"class.absl::optional"** %37, align 8
  br label %55

55:                                               ; preds = %52, %36
  %56 = phi %"class.absl::optional"* [ %54, %52 ], [ %38, %36 ]
  %57 = phi %"class.absl::optional"* [ %53, %52 ], [ %40, %36 ]
  %58 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %58, align 8, !range !26
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8, i8* %62, align 8, !range !26
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %56, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %68 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %66, %"class.net::SchemefulSite"* dereferenceable(80) %67) #12
  br i1 %68, label %77, label %69

69:                                               ; preds = %65, %55
  %70 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 2, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = load i8, i8* %71, align 1, !range !26
  %73 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 2, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = load i8, i8* %74, align 1, !range !26
  %76 = icmp ult i8 %72, %75
  br label %77

77:                                               ; preds = %28, %11, %69, %65, %61, %48, %44, %32, %15
  %78 = phi i1 [ true, %15 ], [ false, %32 ], [ %76, %69 ], [ true, %48 ], [ false, %65 ], [ true, %44 ], [ false, %61 ], [ true, %11 ], [ false, %28 ]
  ret i1 %78
}

declare zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"* dereferenceable(80)) local_unnamed_addr #6

declare void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #6

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN3net17ReportingEndpointD1Ev(%"struct.net::ReportingEndpoint"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net17ReportingEndpointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"*, %"struct.net::ReportingEndpoint"* dereferenceable(432)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.net::ReportingEndpoint"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 432
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 42700796466920258
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.net::ReportingEndpoint"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 432
  %20 = icmp ult i64 %19, 21350398233460129
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 42700796466920258, %14 ]
  %28 = mul i64 %27, 432
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"struct.net::ReportingEndpoint"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.net::ReportingEndpoint"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %33, i64 %32
  %36 = ptrtoint %"struct.net::ReportingEndpoint"* %35 to i64
  tail call void @_ZN3net17ReportingEndpointC1ERKS0_(%"struct.net::ReportingEndpoint"* %34, %"struct.net::ReportingEndpoint"* dereferenceable(432) %1) #12
  %37 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %34, i64 1
  %38 = ptrtoint %"struct.net::ReportingEndpoint"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %39, align 8
  %41 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %3, align 8
  %42 = icmp eq %"struct.net::ReportingEndpoint"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.net::ReportingEndpoint"* %34 to i64
  store i64 %44, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  br label %60

45:                                               ; preds = %31, %45
  %46 = phi %"struct.net::ReportingEndpoint"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.net::ReportingEndpoint"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %47, i64 -1
  tail call void @_ZN3net17ReportingEndpointC1EOS0_(%"struct.net::ReportingEndpoint"* %48, %"struct.net::ReportingEndpoint"* dereferenceable(432) %49) #12
  %50 = icmp eq %"struct.net::ReportingEndpoint"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %39, align 8
  %53 = load %"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"** %3, align 8
  %54 = ptrtoint %"struct.net::ReportingEndpoint"* %48 to i64
  store i64 %54, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %55 = icmp eq %"struct.net::ReportingEndpoint"* %53, %52
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"struct.net::ReportingEndpoint"* [ %58, %56 ], [ %53, %51 ]
  %58 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %57, i64 -1
  tail call void @_ZN3net17ReportingEndpointD1Ev(%"struct.net::ReportingEndpoint"* %58) #12
  %59 = icmp eq %"struct.net::ReportingEndpoint"* %58, %52
  br i1 %59, label %60, label %56

60:                                               ; preds = %56, %43, %51
  %61 = phi %"struct.net::ReportingEndpoint"* [ %40, %43 ], [ %52, %51 ], [ %52, %56 ]
  %62 = icmp eq %"struct.net::ReportingEndpoint"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"struct.net::ReportingEndpoint", %"struct.net::ReportingEndpoint"* %61, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %64) #11
  br label %65

65:                                               ; preds = %60, %63
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare void @_ZN3net17ReportingEndpointC1EOS0_(%"struct.net::ReportingEndpoint"*, %"struct.net::ReportingEndpoint"* dereferenceable(432)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__list_node_base"* @_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEE3PutISB_EENS1_15__list_iteratorINS2_IS6_SB_EEPvEERKS6_OT_(%"class.base::MRUCacheBase"*, %"struct.std::__1::pair.35"* dereferenceable(304), %"class.std::__1::unique_ptr.37"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__list_iterator", align 8
  %5 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0
  %6 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE4findIS6_EENS_15__tree_iteratorISG_PNS_11__tree_nodeISG_SE_EElEERKT_(%"class.std::__1::__tree"* %5, %"struct.std::__1::pair.35"* dereferenceable(304) %1) #12
  %7 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %6, %7
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 42
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"struct.std::__1::__list_node_base"**
  %12 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %13 = tail call %"struct.std::__1::__list_node_base"* @_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEE5EraseENS1_15__list_iteratorINS2_IS6_SB_EEPvEE(%"class.base::MRUCacheBase"* %0, %"struct.std::__1::__list_node_base"* %12)
  br label %31

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = add i64 %16, -1
  %20 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp ugt i64 %21, %19
  br i1 %22, label %23, label %31

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i64 [ %21, %23 ], [ %29, %25 ]
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %24, align 8
  %28 = tail call %"struct.std::__1::__list_node_base"* @_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEE5EraseENS1_15__list_iteratorINS2_IS6_SB_EEPvEE(%"class.base::MRUCacheBase"* %0, %"struct.std::__1::__list_node_base"* %27) #12
  %29 = add i64 %26, -1
  %30 = icmp ugt i64 %29, %19
  br i1 %30, label %25, label %31

31:                                               ; preds = %25, %18, %14, %9
  %32 = tail call i8* @_Znwm(i64 328) #11, !noalias !27
  %33 = bitcast i8* %32 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %33, align 8, !noalias !27
  %34 = getelementptr inbounds i8, i8* %32, i64 16
  %35 = bitcast i8* %34 to %"class.net::NetworkIsolationKey"*
  %36 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %1, i64 0, i32 0
  tail call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %35, %"class.net::NetworkIsolationKey"* dereferenceable(184) %36) #12
  %37 = getelementptr inbounds i8, i8* %32, i64 200
  %38 = bitcast i8* %37 to %class.GURL*
  %39 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %1, i64 0, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %38, %class.GURL* dereferenceable(120) %39) #12
  %40 = getelementptr inbounds i8, i8* %32, i64 320
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %2, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::unique_ptr.37"* %2 to i64*
  %43 = load i64, i64* %42, align 8
  store %"class.net::BackoffEntry"* null, %"class.net::BackoffEntry"** %41, align 8
  %44 = bitcast i8* %40 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %45, %"struct.std::__1::__list_node_base"** %33, align 8
  %46 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %47 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %46, align 8
  %48 = getelementptr inbounds i8, i8* %32, i64 8
  %49 = bitcast i8* %48 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %47, %"struct.std::__1::__list_node_base"** %49, align 8
  %50 = bitcast %"struct.std::__1::__list_node_base"* %47 to i8**
  store i8* %32, i8** %50, align 8
  %51 = bitcast %"struct.std::__1::__list_node_base"** %46 to i8**
  store i8* %32, i8** %51, align 8
  %52 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %52, align 8
  %55 = bitcast %"class.std::__1::__list_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  %56 = ptrtoint i8* %32 to i64
  %57 = bitcast %"class.std::__1::__list_iterator"* %4 to i64*
  store i64 %56, i64* %57, align 8
  %58 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE25__emplace_unique_key_argsIS6_JRKS6_SF_EEENS2_INS_15__tree_iteratorISG_PNS_11__tree_nodeISG_SE_EElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %5, %"struct.std::__1::pair.35"* dereferenceable(304) %1, %"struct.std::__1::pair.35"* dereferenceable(304) %1, %"class.std::__1::__list_iterator"* nonnull dereferenceable(8) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  %59 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %46, align 8
  ret %"struct.std::__1::__list_node_base"* %59
}

declare void @_ZN3net12BackoffEntry15InformOfRequestEb(%"class.net::BackoffEntry"*, i1 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__list_node_base"* @_ZN4base12MRUCacheBaseINSt3__14pairIN3net19NetworkIsolationKeyE4GURLEENS1_10unique_ptrINS3_12BackoffEntryENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS_19MRUCacheStandardMapEE5EraseENS1_15__list_iteratorINS2_IS6_SB_EEPvEE(%"class.base::MRUCacheBase"*, %"struct.std::__1::__list_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 1
  %5 = bitcast %"struct.std::__1::__list_node_base"* %4 to %"struct.std::__1::pair.35"*
  %6 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0
  %7 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE4findIS6_EENS_15__tree_iteratorISG_PNS_11__tree_nodeISG_SE_EElEERKT_(%"class.std::__1::__tree"* %6, %"struct.std::__1::pair.35"* dereferenceable(304) %5) #12
  %8 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %9 = icmp eq %"class.std::__1::__tree_end_node"* %7, %8
  br i1 %9, label %58, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 1, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, null
  br i1 %13, label %14, label %22

14:                                               ; preds = %10
  %15 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node_base"*
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 2
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_end_node"**
  %18 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, %15
  br i1 %21, label %38, label %29

22:                                               ; preds = %10, %22
  %23 = phi %"class.std::__1::__tree_node_base"* [ %25, %22 ], [ %12, %10 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %22

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 0
  br label %38

29:                                               ; preds = %14, %29
  %30 = phi %"class.std::__1::__tree_end_node"** [ %33, %29 ], [ %17, %14 ]
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to %"class.std::__1::__tree_node_base"**
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 2
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, %32
  br i1 %37, label %38, label %29

38:                                               ; preds = %29, %27, %14
  %39 = phi %"class.std::__1::__tree_end_node"* [ %28, %27 ], [ %18, %14 ], [ %34, %29 ]
  %40 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_end_node"* %41, %7
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = ptrtoint %"class.std::__1::__tree_end_node"* %39 to i64
  %45 = bitcast %"class.std::__1::map"* %3 to i64*
  store i64 %44, i64* %45, align 8
  br label %46

46:                                               ; preds = %38, %43
  %47 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, -1
  store i64 %49, i64* %47, align 8
  %50 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %51, %"class.std::__1::__tree_node_base"* %52) #12
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 4
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 27
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %class.GURL*
  tail call void @_ZN4GURLD1Ev(%class.GURL* %55) #12
  %56 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.net::NetworkIsolationKey"*
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %56) #12
  %57 = bitcast %"class.std::__1::__tree_end_node"* %7 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %2, %46
  %59 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 0, i32 1
  %60 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %59, align 8
  %61 = ptrtoint %"struct.std::__1::__list_node_base"* %60 to i64
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 0, i32 0
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = bitcast %"struct.std::__1::__list_node_base"** %64 to i64*
  store i64 %61, i64* %65, align 8
  %66 = bitcast %"struct.std::__1::__list_node_base"* %1 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"struct.std::__1::__list_node_base"** %59 to i64**
  %69 = load i64*, i64** %68, align 8
  store i64 %67, i64* %69, align 8
  %70 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, -1
  store i64 %72, i64* %70, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 20
  %74 = bitcast %"struct.std::__1::__list_node_base"* %73 to %"class.net::BackoffEntry"**
  %75 = load %"class.net::BackoffEntry"*, %"class.net::BackoffEntry"** %74, align 8
  store %"class.net::BackoffEntry"* null, %"class.net::BackoffEntry"** %74, align 8
  %76 = icmp eq %"class.net::BackoffEntry"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %58
  %78 = bitcast %"class.net::BackoffEntry"* %75 to void (%"class.net::BackoffEntry"*)***
  %79 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %79, i64 1
  %81 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %80, align 8
  tail call void %81(%"class.net::BackoffEntry"* nonnull %75) #12
  br label %82

82:                                               ; preds = %58, %77
  %83 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 12, i32 1
  %84 = bitcast %"struct.std::__1::__list_node_base"** %83 to %class.GURL*
  tail call void @_ZN4GURLD1Ev(%class.GURL* %84) #12
  %85 = bitcast %"struct.std::__1::__list_node_base"* %4 to %"class.net::NetworkIsolationKey"*
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %85) #12
  %86 = bitcast %"struct.std::__1::__list_node_base"* %1 to i8*
  tail call void @_ZdlPv(i8* %86) #11
  ret %"struct.std::__1::__list_node_base"* %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !26
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !26
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !26
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !26
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !26
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !26
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !26
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !26
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !26
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !26
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !26
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !26
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !26
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE25__emplace_unique_key_argsIS6_JRKS6_SF_EEENS2_INS_15__tree_iteratorISG_PNS_11__tree_nodeISG_SE_EElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"struct.std::__1::pair.35"* dereferenceable(304), %"struct.std::__1::pair.35"* dereferenceable(304), %"class.std::__1::__list_iterator"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE12__find_equalIS6_EERPNS_16__tree_node_baseISE_EERPNS_15__tree_end_nodeISR_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"struct.std::__1::pair.35"* dereferenceable(304) %1)
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %11, label %46

11:                                               ; preds = %4
  %12 = call i8* @_Znwm(i64 344) #11, !noalias !30
  %13 = getelementptr inbounds i8, i8* %12, i64 32
  %14 = bitcast i8* %13 to %"class.net::NetworkIsolationKey"*
  %15 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %2, i64 0, i32 0
  call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %14, %"class.net::NetworkIsolationKey"* dereferenceable(184) %15) #12, !noalias !30
  %16 = getelementptr inbounds i8, i8* %12, i64 216
  %17 = bitcast i8* %16 to %class.GURL*
  %18 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %2, i64 0, i32 1
  call void @_ZN4GURLC1ERKS_(%class.GURL* %17, %class.GURL* dereferenceable(120) %18) #12, !noalias !30
  %19 = getelementptr inbounds i8, i8* %12, i64 336
  %20 = bitcast %"class.std::__1::__list_iterator"* %3 to i64*
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %20, align 8, !noalias !30
  store i64 %22, i64* %21, align 8, !noalias !30
  %23 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast i8* %12 to %"class.std::__1::__tree_node"*
  %26 = bitcast i8* %12 to %"class.std::__1::__tree_node_base"*
  %27 = getelementptr inbounds i8, i8* %12, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #12
  %28 = bitcast i8* %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8**
  store i8* %12, i8** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %31 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %11
  %36 = ptrtoint %"class.std::__1::__tree_node_base"* %33 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  br label %39

39:                                               ; preds = %35, %11
  %40 = phi %"class.std::__1::__tree_node_base"* [ %26, %11 ], [ %38, %35 ]
  %41 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %42, %"class.std::__1::__tree_node_base"* %40) #12
  %43 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %43, align 8
  br label %46

46:                                               ; preds = %39, %4
  %47 = phi i8 [ 1, %39 ], [ 0, %4 ]
  %48 = phi %"class.std::__1::__tree_node"* [ %25, %39 ], [ %9, %4 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %50 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %49, 0
  %51 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %50, i8 %47, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE12__find_equalIS6_EERPNS_16__tree_node_baseISE_EERPNS_15__tree_end_nodeISR_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"struct.std::__1::pair.35"* dereferenceable(304)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__tuple_less", align 1
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"struct.std::__1::__tuple_less", align 1
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = alloca %"struct.std::__1::__tuple_less", align 1
  %11 = alloca %"class.std::__1::tuple", align 8
  %12 = alloca %"class.std::__1::tuple", align 8
  %13 = alloca %"struct.std::__1::__tuple_less", align 1
  %14 = alloca %"class.std::__1::tuple", align 8
  %15 = alloca %"class.std::__1::tuple", align 8
  %16 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node"**
  %18 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node"* %18, null
  br i1 %19, label %99, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::tuple"* %8 to i8*
  %23 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %2, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %2, i64 0, i32 0, i32 2
  %25 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %2, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 2, i32 0
  %29 = bitcast %"class.std::__1::tuple"* %9 to i8*
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 2, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %7, i64 0, i32 0
  %34 = bitcast %"class.std::__1::tuple"* %5 to i8*
  %35 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  %37 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 2, i32 0
  %38 = bitcast %"class.std::__1::tuple"* %6 to i8*
  %39 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 2, i32 0
  %42 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %4, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %2, i64 0, i32 1
  %44 = bitcast %"class.std::__1::tuple"* %14 to i8*
  %45 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %14, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %14, i64 0, i32 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %14, i64 0, i32 0, i32 2, i32 0
  %48 = bitcast %"class.std::__1::tuple"* %15 to i8*
  %49 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %15, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %15, i64 0, i32 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %15, i64 0, i32 0, i32 2, i32 0
  %52 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %13, i64 0, i32 0
  %53 = bitcast %"class.std::__1::tuple"* %11 to i8*
  %54 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 1, i32 0
  %56 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 2, i32 0
  %57 = bitcast %"class.std::__1::tuple"* %12 to i8*
  %58 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %12, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %12, i64 0, i32 0, i32 1, i32 0
  %60 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %12, i64 0, i32 0, i32 2, i32 0
  %61 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %10, i64 0, i32 0
  br label %62

62:                                               ; preds = %20, %95
  %63 = phi %"class.std::__1::__tree_node"* [ %98, %95 ], [ %18, %20 ]
  %64 = phi %"class.std::__1::__tree_node_base"** [ %97, %95 ], [ %21, %20 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12
  store %"class.absl::optional"* %23, %"class.absl::optional"** %26, align 8, !alias.scope !33
  store %"class.absl::optional"* %24, %"class.absl::optional"** %27, align 8, !alias.scope !33
  store i8* %25, i8** %28, align 8, !alias.scope !33
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %65, %"class.absl::optional"** %30, align 8, !alias.scope !36
  store %"class.absl::optional"* %66, %"class.absl::optional"** %31, align 8, !alias.scope !36
  store i8* %67, i8** %32, align 8, !alias.scope !36
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #12
  %68 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %7, %"class.std::__1::tuple"* nonnull dereferenceable(24) %8, %"class.std::__1::tuple"* nonnull dereferenceable(24) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12
  br i1 %68, label %74, label %69

69:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #12
  store %"class.absl::optional"* %65, %"class.absl::optional"** %35, align 8, !alias.scope !39
  store %"class.absl::optional"* %66, %"class.absl::optional"** %36, align 8, !alias.scope !39
  store i8* %67, i8** %37, align 8, !alias.scope !39
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #12
  store %"class.absl::optional"* %23, %"class.absl::optional"** %39, align 8, !alias.scope !42
  store %"class.absl::optional"* %24, %"class.absl::optional"** %40, align 8, !alias.scope !42
  store i8* %25, i8** %41, align 8, !alias.scope !42
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %42) #12
  %70 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %4, %"class.std::__1::tuple"* nonnull dereferenceable(24) %5, %"class.std::__1::tuple"* nonnull dereferenceable(24) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %42) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #12
  br i1 %70, label %80, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 1, i32 0, i32 0, i32 1
  %73 = call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %43, %class.GURL* dereferenceable(120) %72) #12
  br i1 %73, label %74, label %80

74:                                               ; preds = %62, %71
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node_base"* %76, null
  br i1 %77, label %78, label %95

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %79, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %101

80:                                               ; preds = %69, %71
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #12
  store %"class.absl::optional"* %65, %"class.absl::optional"** %45, align 8, !alias.scope !45
  store %"class.absl::optional"* %66, %"class.absl::optional"** %46, align 8, !alias.scope !45
  store i8* %67, i8** %47, align 8, !alias.scope !45
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #12
  store %"class.absl::optional"* %23, %"class.absl::optional"** %49, align 8, !alias.scope !48
  store %"class.absl::optional"* %24, %"class.absl::optional"** %50, align 8, !alias.scope !48
  store i8* %25, i8** %51, align 8, !alias.scope !48
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %52) #12
  %81 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %13, %"class.std::__1::tuple"* nonnull dereferenceable(24) %14, %"class.std::__1::tuple"* nonnull dereferenceable(24) %15) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %52) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #12
  br i1 %81, label %87, label %82

82:                                               ; preds = %80
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #12
  store %"class.absl::optional"* %23, %"class.absl::optional"** %54, align 8, !alias.scope !51
  store %"class.absl::optional"* %24, %"class.absl::optional"** %55, align 8, !alias.scope !51
  store i8* %25, i8** %56, align 8, !alias.scope !51
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #12
  store %"class.absl::optional"* %65, %"class.absl::optional"** %58, align 8, !alias.scope !54
  store %"class.absl::optional"* %66, %"class.absl::optional"** %59, align 8, !alias.scope !54
  store i8* %67, i8** %60, align 8, !alias.scope !54
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %61) #12
  %83 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %10, %"class.std::__1::tuple"* nonnull dereferenceable(24) %11, %"class.std::__1::tuple"* nonnull dereferenceable(24) %12) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %61) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #12
  br i1 %83, label %93, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 1, i32 0, i32 0, i32 1
  %86 = call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %85, %class.GURL* dereferenceable(120) %43) #12
  br i1 %86, label %87, label %93

87:                                               ; preds = %80, %84
  %88 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 0, i32 1
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %91, label %95

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %92, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %101

93:                                               ; preds = %82, %84
  %94 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %94, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %101

95:                                               ; preds = %87, %74
  %96 = phi %"class.std::__1::__tree_node_base"* [ %76, %74 ], [ %89, %87 ]
  %97 = phi %"class.std::__1::__tree_node_base"** [ %75, %74 ], [ %88, %87 ]
  %98 = bitcast %"class.std::__1::__tree_node_base"* %96 to %"class.std::__1::__tree_node"*
  br label %62

99:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"** %1, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  br label %101

101:                                              ; preds = %99, %93, %91, %78
  %102 = phi %"class.std::__1::__tree_node_base"** [ %75, %78 ], [ %88, %91 ], [ %64, %93 ], [ %100, %99 ]
  ret %"class.std::__1::__tree_node_base"** %102
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !26
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !26
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !26
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN3net12BackoffEntryC1EPKNS0_6PolicyEPKN4base9TickClockE(%"class.net::BackoffEntry"*, %"struct.net::BackoffEntry::Policy"*, %"class.base::TickClock"*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!26 = !{i8 0, i8 2}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__14listINS_4pairINS1_IN3net19NetworkIsolationKeyE4GURLEENS_10unique_ptrINS2_12BackoffEntryENS_14default_deleteIS7_EEEEEENS_9allocatorISB_EEE15__allocate_nodeERNSC_INS_11__list_nodeISB_PvEEEE: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__14listINS_4pairINS1_IN3net19NetworkIsolationKeyE4GURLEENS_10unique_ptrINS2_12BackoffEntryENS_14default_deleteIS7_EEEEEENS_9allocatorISB_EEE15__allocate_nodeERNSC_INS_11__list_nodeISB_PvEEEE"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE16__construct_nodeIJRKS6_SF_EEENS8_INS_11__tree_nodeISG_SE_EENS_22__tree_node_destructorINSL_ISS_EEEEEEDpOT_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIN3net19NetworkIsolationKeyE4GURLEENS_15__list_iteratorINS2_IS6_NS_10unique_ptrINS3_12BackoffEntryENS_14default_deleteIS9_EEEEEEPvEEEENS_19__map_value_compareIS6_SG_NS_4lessIS6_EELb1EEENS_9allocatorISG_EEE16__construct_nodeIJRKS6_SF_EEENS8_INS_11__tree_nodeISG_SE_EENS_22__tree_node_destructorINSL_ISS_EEEEEEDpOT_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!47 = distinct !{!47, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!50 = distinct !{!50, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
