; ModuleID = '../../ppapi/shared_impl/var.cc'
source_filename = "../../ppapi/shared_impl/var.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ppapi::Var" = type { i32 (...)**, %"class.base::RefCounted", i32 }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.ppapi::StringVar" = type { %"class.ppapi::Var", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.ppapi::ArrayBufferVar" = type { %"class.ppapi::Var" }
%struct.PP_Var = type { i32, i32, %union.PP_VarValue }
%union.PP_VarValue = type { double }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.ppapi::PpapiGlobals" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type opaque
%"class.ppapi::VarTracker" = type { i32 (...)**, %"class.std::__1::unordered_map", i32, %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.base::ThreadChecker"* }
%"class.base::ThreadChecker" = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%"class.ppapi::ResourceVar" = type { %"class.ppapi::Var" }
%"class.ppapi::V8ObjectVar" = type opaque
%"class.ppapi::ProxyObjectVar" = type opaque
%"class.ppapi::ArrayVar" = type opaque
%"class.ppapi::DictionaryVar" = type opaque

@.str = private unnamed_addr constant [12 x i8] c"[Undefined]\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"[Null]\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"[True]\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"[False]\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"[Invalid string]\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"\5C0\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"[Array]\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"[Dictionary]\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"[Array buffer]\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"[Invalid resource]\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"[Pending resource]\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"[Resource %d]\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"[Null resource]\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"[Invalid var]\00", align 1
@_ZTVN5ppapi3VarE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (%"class.ppapi::StringVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var11AsStringVarEv to i8*), i8* bitcast (%"class.ppapi::ArrayBufferVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var16AsArrayBufferVarEv to i8*), i8* bitcast (%"class.ppapi::V8ObjectVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var13AsV8ObjectVarEv to i8*), i8* bitcast (%"class.ppapi::ProxyObjectVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var16AsProxyObjectVarEv to i8*), i8* bitcast (%"class.ppapi::ArrayVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var10AsArrayVarEv to i8*), i8* bitcast (%"class.ppapi::DictionaryVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var15AsDictionaryVarEv to i8*), i8* bitcast (%"class.ppapi::ResourceVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var13AsResourceVarEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.ppapi::Var"*)* @_ZN5ppapi3VarD2Ev to i8*), i8* bitcast (void (%"class.ppapi::Var"*)* @_ZN5ppapi3VarD0Ev to i8*)] }, align 8
@_ZTVN5ppapi9StringVarE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (%"class.ppapi::StringVar"* (%"class.ppapi::StringVar"*)* @_ZN5ppapi9StringVar11AsStringVarEv to i8*), i8* bitcast (%"class.ppapi::ArrayBufferVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var16AsArrayBufferVarEv to i8*), i8* bitcast (%"class.ppapi::V8ObjectVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var13AsV8ObjectVarEv to i8*), i8* bitcast (%"class.ppapi::ProxyObjectVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var16AsProxyObjectVarEv to i8*), i8* bitcast (%"class.ppapi::ArrayVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var10AsArrayVarEv to i8*), i8* bitcast (%"class.ppapi::DictionaryVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var15AsDictionaryVarEv to i8*), i8* bitcast (%"class.ppapi::ResourceVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var13AsResourceVarEv to i8*), i8* bitcast (i32 (%"class.ppapi::StringVar"*)* @_ZNK5ppapi9StringVar7GetTypeEv to i8*), i8* bitcast (void (%"class.ppapi::StringVar"*)* @_ZN5ppapi9StringVarD2Ev to i8*), i8* bitcast (void (%"class.ppapi::StringVar"*)* @_ZN5ppapi9StringVarD0Ev to i8*)] }, align 8
@_ZTVN5ppapi14ArrayBufferVarE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (%"class.ppapi::StringVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var11AsStringVarEv to i8*), i8* bitcast (%"class.ppapi::ArrayBufferVar"* (%"class.ppapi::ArrayBufferVar"*)* @_ZN5ppapi14ArrayBufferVar16AsArrayBufferVarEv to i8*), i8* bitcast (%"class.ppapi::V8ObjectVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var13AsV8ObjectVarEv to i8*), i8* bitcast (%"class.ppapi::ProxyObjectVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var16AsProxyObjectVarEv to i8*), i8* bitcast (%"class.ppapi::ArrayVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var10AsArrayVarEv to i8*), i8* bitcast (%"class.ppapi::DictionaryVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var15AsDictionaryVarEv to i8*), i8* bitcast (%"class.ppapi::ResourceVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var13AsResourceVarEv to i8*), i8* bitcast (i32 (%"class.ppapi::ArrayBufferVar"*)* @_ZNK5ppapi14ArrayBufferVar7GetTypeEv to i8*), i8* bitcast (void (%"class.ppapi::Var"*)* @_ZN5ppapi3VarD2Ev to i8*), i8* bitcast (void (%"class.ppapi::ArrayBufferVar"*)* @_ZN5ppapi14ArrayBufferVarD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5ppapi3VarD1Ev = hidden unnamed_addr alias void (%"class.ppapi::Var"*), void (%"class.ppapi::Var"*)* @_ZN5ppapi3VarD2Ev
@_ZN5ppapi9StringVarC1Ev = hidden unnamed_addr alias void (%"class.ppapi::StringVar"*), void (%"class.ppapi::StringVar"*)* @_ZN5ppapi9StringVarC2Ev
@_ZN5ppapi9StringVarC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.ppapi::StringVar"*, %"class.std::__1::basic_string"*), void (%"class.ppapi::StringVar"*, %"class.std::__1::basic_string"*)* @_ZN5ppapi9StringVarC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN5ppapi9StringVarC1EPKcj = hidden unnamed_addr alias void (%"class.ppapi::StringVar"*, i8*, i32), void (%"class.ppapi::StringVar"*, i8*, i32)* @_ZN5ppapi9StringVarC2EPKcj
@_ZN5ppapi9StringVarD1Ev = hidden unnamed_addr alias void (%"class.ppapi::StringVar"*), void (%"class.ppapi::StringVar"*)* @_ZN5ppapi9StringVarD2Ev
@_ZN5ppapi14ArrayBufferVarD2Ev = hidden unnamed_addr alias void (%"class.ppapi::ArrayBufferVar"*), bitcast (void (%"class.ppapi::Var"*)* @_ZN5ppapi3VarD2Ev to void (%"class.ppapi::ArrayBufferVar"*)*)
@_ZN5ppapi14ArrayBufferVarD1Ev = hidden unnamed_addr alias void (%"class.ppapi::ArrayBufferVar"*), bitcast (void (%"class.ppapi::Var"*)* @_ZN5ppapi3VarD2Ev to void (%"class.ppapi::ArrayBufferVar"*)*)

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi3Var16PPVarToLogStringE6PP_Var(%"class.std::__1::basic_string"* noalias sret, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.PP_Var, align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca [15 x i8], align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = trunc i64 %1 to i32
  switch i32 %8, label %182 [
    i32 0, label %9
    i32 1, label %14
    i32 2, label %19
    i32 3, label %29
    i32 4, label %31
    i32 5, label %33
    i32 6, label %129
    i32 7, label %135
    i32 8, label %140
    i32 9, label %145
    i32 10, label %150
  ]

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 11, i8* %11, align 1
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i64 11, i1 false) #10
  %13 = getelementptr inbounds i8, i8* %12, i64 11
  store i8 0, i8* %13, align 1
  br label %187

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  store i8 6, i8* %16, align 1
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 6, i1 false) #10
  %18 = getelementptr inbounds i8, i8* %17, i64 6
  store i8 0, i8* %18, align 2
  br label %187

19:                                               ; preds = %3
  %20 = trunc i64 %2 to i32
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)
  %23 = select i1 %21, i64 7, i64 6
  %24 = trunc i64 %23 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 %24, i8* %26, align 1
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 1 %22, i64 %23, i1 false) #10
  %28 = getelementptr inbounds i8, i8* %27, i64 %23
  store i8 0, i8* %28, align 1
  br label %187

29:                                               ; preds = %3
  %30 = trunc i64 %2 to i32
  tail call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret %0, i32 %30) #10
  br label %187

31:                                               ; preds = %3
  %32 = bitcast i64 %2 to double
  tail call void @_ZN4base14NumberToStringEd(%"class.std::__1::basic_string"* sret %0, double %32) #10
  br label %187

33:                                               ; preds = %3
  %34 = bitcast %struct.PP_Var* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34)
  %35 = bitcast %struct.PP_Var* %4 to i64*
  store i64 %1, i64* %35, align 8
  %36 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %4, i64 0, i32 2
  %37 = bitcast %union.PP_VarValue* %36 to i64*
  store i64 %2, i64* %37, align 8
  %38 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #10
  %39 = bitcast %"class.ppapi::PpapiGlobals"* %38 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %40 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %40, i64 3
  %42 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %41, align 8
  %43 = tail call %"class.ppapi::VarTracker"* %42(%"class.ppapi::PpapiGlobals"* %38) #10
  %44 = call %"class.ppapi::Var"* @_ZNK5ppapi10VarTracker6GetVarERK6PP_Var(%"class.ppapi::VarTracker"* %43, %struct.PP_Var* nonnull dereferenceable(16) %4) #10
  %45 = icmp eq %"class.ppapi::Var"* %44, null
  br i1 %45, label %46, label %47

46:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34)
  br label %67

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %44, i64 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #10
  %49 = bitcast %"class.ppapi::Var"* %44 to %"class.ppapi::StringVar"* (%"class.ppapi::Var"*)***
  %50 = load %"class.ppapi::StringVar"* (%"class.ppapi::Var"*)**, %"class.ppapi::StringVar"* (%"class.ppapi::Var"*)*** %49, align 8
  %51 = load %"class.ppapi::StringVar"* (%"class.ppapi::Var"*)*, %"class.ppapi::StringVar"* (%"class.ppapi::Var"*)** %50, align 8
  %52 = call %"class.ppapi::StringVar"* %51(%"class.ppapi::Var"* nonnull %44) #10
  %53 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %44, i64 0, i32 1
  %54 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %53, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #10
  %55 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %53, i64 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %65

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %53, i64 -2
  %60 = bitcast %"class.base::RefCounted"* %59 to %"class.ppapi::Var"*
  %61 = bitcast %"class.base::RefCounted"* %59 to void (%"class.ppapi::Var"*)***
  %62 = load void (%"class.ppapi::Var"*)**, void (%"class.ppapi::Var"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %62, i64 9
  %64 = load void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %63, align 8
  call void %64(%"class.ppapi::Var"* nonnull %60) #10
  br label %65

65:                                               ; preds = %47, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34)
  %66 = icmp eq %"class.ppapi::StringVar"* %52, null
  br i1 %66, label %67, label %73

67:                                               ; preds = %46, %65
  %68 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  store i8 16, i8* %69, align 1
  %70 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i64 16, i1 false) #10
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %72 = bitcast i64* %71 to i8*
  store i8 0, i8* %72, align 8
  br label %187

73:                                               ; preds = %65
  %74 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #10
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 24, i1 false) #10
  %77 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %52, i64 0, i32 1
  %78 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %116

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %52, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = icmp ugt i64 %84, 128
  br i1 %85, label %86, label %116

86:                                               ; preds = %82
  %87 = getelementptr inbounds [15 x i8], [15 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %87)
  %88 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #10
  %89 = bitcast %"class.std::__1::basic_string"* %77 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %7, %"class.std::__1::basic_string"* dereferenceable(24) %77, i64 0, i64 128, %"class.std::__1::allocator"* dereferenceable(1) %89) #10
  %90 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)) #10, !noalias !2
  %91 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  %92 = bitcast %"class.std::__1::basic_string"* %90 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = bitcast i64* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %87, i8* align 8 %95, i64 15, i1 false)
  %96 = getelementptr inbounds i8, i8* %91, i64 23
  %97 = load i8, i8* %96, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #10, !noalias !2
  %98 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %86
  %103 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %103) #11
  br label %104

104:                                              ; preds = %102, %86
  %105 = bitcast %"class.std::__1::basic_string"* %5 to i64*
  store i64 %93, i64* %105, align 8
  %106 = bitcast i64* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* nonnull align 8 %87, i64 15, i1 false)
  %107 = getelementptr inbounds i8, i8* %74, i64 23
  store i8 %97, i8* %107, align 1
  %108 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %114) #11
  br label %115

115:                                              ; preds = %104, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #10
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %87)
  br label %127

116:                                              ; preds = %73, %82
  %117 = icmp eq %"class.std::__1::basic_string"* %5, %77
  br i1 %117, label %127, label %118

118:                                              ; preds = %116
  br i1 %81, label %121, label %119

119:                                              ; preds = %118
  %120 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %120, i64 24, i1 false) #10
  br label %127

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %52, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %123, i64 %125) #10
  br label %127

127:                                              ; preds = %115, %119, %121, %116
  call void @_ZN4base28ReplaceSubstringsAfterOffsetEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEmNS_16BasicStringPieceIcS3_EES9_(%"class.std::__1::basic_string"* nonnull %5, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 2) #10
  %128 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* nonnull align 8 %74, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #10
  br label %187

129:                                              ; preds = %3
  %130 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  store i8 8, i8* %131, align 1
  %132 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  store i64 6734116630053408603, i64* %132, align 8
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %134 = bitcast i64* %133 to i8*
  store i8 0, i8* %134, align 8
  br label %187

135:                                              ; preds = %3
  %136 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  store i8 7, i8* %137, align 1
  %138 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i64 7, i1 false) #10
  %139 = getelementptr inbounds i8, i8* %138, i64 7
  store i8 0, i8* %139, align 1
  br label %187

140:                                              ; preds = %3
  %141 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  store i8 12, i8* %142, align 1
  %143 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i64 12, i1 false) #10
  %144 = getelementptr inbounds i8, i8* %143, i64 12
  store i8 0, i8* %144, align 4
  br label %187

145:                                              ; preds = %3
  %146 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  store i8 14, i8* %147, align 1
  %148 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i64 14, i1 false) #10
  %149 = getelementptr inbounds i8, i8* %148, i64 14
  store i8 0, i8* %149, align 2
  br label %187

150:                                              ; preds = %3
  %151 = tail call %"class.ppapi::ResourceVar"* @_ZN5ppapi11ResourceVar9FromPPVarE6PP_Var(i64 %1, i64 %2) #10
  %152 = icmp eq %"class.ppapi::ResourceVar"* %151, null
  br i1 %152, label %153, label %158

153:                                              ; preds = %150
  %154 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %155 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %154, i64 0, i32 1, i32 0
  store i8 18, i8* %155, align 1
  %156 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i64 18, i1 false) #10
  %157 = getelementptr inbounds i8, i8* %156, i64 18
  store i8 0, i8* %157, align 2
  br label %187

158:                                              ; preds = %150
  %159 = bitcast %"class.ppapi::ResourceVar"* %151 to i1 (%"class.ppapi::ResourceVar"*)***
  %160 = load i1 (%"class.ppapi::ResourceVar"*)**, i1 (%"class.ppapi::ResourceVar"*)*** %159, align 8
  %161 = getelementptr inbounds i1 (%"class.ppapi::ResourceVar"*)*, i1 (%"class.ppapi::ResourceVar"*)** %160, i64 14
  %162 = load i1 (%"class.ppapi::ResourceVar"*)*, i1 (%"class.ppapi::ResourceVar"*)** %161, align 8
  %163 = tail call zeroext i1 %162(%"class.ppapi::ResourceVar"* nonnull %151) #10
  br i1 %163, label %164, label %165

164:                                              ; preds = %158
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0)) #10
  br label %187

165:                                              ; preds = %158
  %166 = bitcast %"class.ppapi::ResourceVar"* %151 to i32 (%"class.ppapi::ResourceVar"*)***
  %167 = load i32 (%"class.ppapi::ResourceVar"*)**, i32 (%"class.ppapi::ResourceVar"*)*** %166, align 8
  %168 = getelementptr inbounds i32 (%"class.ppapi::ResourceVar"*)*, i32 (%"class.ppapi::ResourceVar"*)** %167, i64 10
  %169 = load i32 (%"class.ppapi::ResourceVar"*)*, i32 (%"class.ppapi::ResourceVar"*)** %168, align 8
  %170 = tail call i32 %169(%"class.ppapi::ResourceVar"* nonnull %151) #10
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %177, label %172

172:                                              ; preds = %165
  %173 = load i32 (%"class.ppapi::ResourceVar"*)**, i32 (%"class.ppapi::ResourceVar"*)*** %166, align 8
  %174 = getelementptr inbounds i32 (%"class.ppapi::ResourceVar"*)*, i32 (%"class.ppapi::ResourceVar"*)** %173, i64 10
  %175 = load i32 (%"class.ppapi::ResourceVar"*)*, i32 (%"class.ppapi::ResourceVar"*)** %174, align 8
  %176 = tail call i32 %175(%"class.ppapi::ResourceVar"* nonnull %151) #10
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), i32 %176) #10
  br label %187

177:                                              ; preds = %165
  %178 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  store i8 15, i8* %179, align 1
  %180 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i64 15, i1 false) #10
  %181 = getelementptr inbounds i8, i8* %180, i64 15
  store i8 0, i8* %181, align 1
  br label %187

182:                                              ; preds = %3
  %183 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %183, i64 0, i32 1, i32 0
  store i8 13, i8* %184, align 1
  %185 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i64 13, i1 false) #10
  %186 = getelementptr inbounds i8, i8* %185, i64 13
  store i8 0, i8* %186, align 1
  br label %187

187:                                              ; preds = %153, %164, %172, %177, %67, %127, %182, %145, %140, %135, %129, %31, %29, %19, %14, %9
  ret void
}

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

declare void @_ZN4base14NumberToStringEd(%"class.std::__1::basic_string"* sret, double) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ppapi::StringVar"* @_ZN5ppapi9StringVar9FromPPVarE6PP_Var(i64, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.PP_Var, align 8
  %4 = bitcast %struct.PP_Var* %3 to i64*
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %3, i64 0, i32 2
  %6 = bitcast %union.PP_VarValue* %5 to i64*
  store i64 %1, i64* %6, align 8
  %7 = trunc i64 %0 to i32
  %8 = icmp eq i32 %7, 5
  br i1 %8, label %9, label %36

9:                                                ; preds = %2
  %10 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #10
  %11 = bitcast %"class.ppapi::PpapiGlobals"* %10 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %12 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %12, i64 3
  %14 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %13, align 8
  %15 = tail call %"class.ppapi::VarTracker"* %14(%"class.ppapi::PpapiGlobals"* %10) #10
  %16 = call %"class.ppapi::Var"* @_ZNK5ppapi10VarTracker6GetVarERK6PP_Var(%"class.ppapi::VarTracker"* %15, %struct.PP_Var* nonnull dereferenceable(16) %3) #10
  %17 = icmp eq %"class.ppapi::Var"* %16, null
  br i1 %17, label %36, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %16, i64 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %19) #10
  %20 = bitcast %"class.ppapi::Var"* %16 to %"class.ppapi::StringVar"* (%"class.ppapi::Var"*)***
  %21 = load %"class.ppapi::StringVar"* (%"class.ppapi::Var"*)**, %"class.ppapi::StringVar"* (%"class.ppapi::Var"*)*** %20, align 8
  %22 = load %"class.ppapi::StringVar"* (%"class.ppapi::Var"*)*, %"class.ppapi::StringVar"* (%"class.ppapi::Var"*)** %21, align 8
  %23 = call %"class.ppapi::StringVar"* %22(%"class.ppapi::Var"* nonnull %16) #10
  %24 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %16, i64 0, i32 1
  %25 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %24, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #10
  %26 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %24, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %24, i64 -2
  %31 = bitcast %"class.base::RefCounted"* %30 to %"class.ppapi::Var"*
  %32 = bitcast %"class.base::RefCounted"* %30 to void (%"class.ppapi::Var"*)***
  %33 = load void (%"class.ppapi::Var"*)**, void (%"class.ppapi::Var"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %33, i64 9
  %35 = load void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %34, align 8
  call void %35(%"class.ppapi::Var"* nonnull %31) #10
  br label %36

36:                                               ; preds = %9, %29, %18, %2
  %37 = phi %"class.ppapi::StringVar"* [ null, %2 ], [ %23, %18 ], [ %23, %29 ], [ null, %9 ]
  ret %"class.ppapi::StringVar"* %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base28ReplaceSubstringsAfterOffsetEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEmNS_16BasicStringPieceIcS3_EES9_(%"class.std::__1::basic_string"*, i64, i8*, i64, i8*, i64) local_unnamed_addr #1

declare %"class.ppapi::ResourceVar"* @_ZN5ppapi11ResourceVar9FromPPVarE6PP_Var(i64, i64) local_unnamed_addr #1

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.ppapi::StringVar"* @_ZN5ppapi3Var11AsStringVarEv(%"class.ppapi::Var"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.ppapi::StringVar"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.ppapi::ArrayBufferVar"* @_ZN5ppapi3Var16AsArrayBufferVarEv(%"class.ppapi::Var"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.ppapi::ArrayBufferVar"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.ppapi::V8ObjectVar"* @_ZN5ppapi3Var13AsV8ObjectVarEv(%"class.ppapi::Var"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.ppapi::V8ObjectVar"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.ppapi::ProxyObjectVar"* @_ZN5ppapi3Var16AsProxyObjectVarEv(%"class.ppapi::Var"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.ppapi::ProxyObjectVar"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.ppapi::ArrayVar"* @_ZN5ppapi3Var10AsArrayVarEv(%"class.ppapi::Var"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.ppapi::ArrayVar"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.ppapi::DictionaryVar"* @_ZN5ppapi3Var15AsDictionaryVarEv(%"class.ppapi::Var"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.ppapi::DictionaryVar"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.ppapi::ResourceVar"* @_ZN5ppapi3Var13AsResourceVarEv(%"class.ppapi::Var"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.ppapi::ResourceVar"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5ppapi3Var8GetPPVarEv(%"class.ppapi::Var"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #10
  %3 = bitcast %"class.ppapi::PpapiGlobals"* %2 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %4 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %4, i64 3
  %6 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %5, align 8
  %7 = tail call %"class.ppapi::VarTracker"* %6(%"class.ppapi::PpapiGlobals"* %2) #10
  %8 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZN5ppapi10VarTracker9AddRefVarEi(%"class.ppapi::VarTracker"* %7, i32 %9) #10
  br i1 %12, label %16, label %28

13:                                               ; preds = %1
  %14 = tail call i32 @_ZN5ppapi10VarTracker6AddVarEPNS_3VarE(%"class.ppapi::VarTracker"* %7, %"class.ppapi::Var"* %0) #10
  store i32 %14, i32* %8, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %28, label %19

16:                                               ; preds = %11
  %17 = load i32, i32* %8, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %13, %16
  %20 = phi i32 [ %17, %16 ], [ %14, %13 ]
  %21 = bitcast %"class.ppapi::Var"* %0 to i32 (%"class.ppapi::Var"*)***
  %22 = load i32 (%"class.ppapi::Var"*)**, i32 (%"class.ppapi::Var"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.ppapi::Var"*)*, i32 (%"class.ppapi::Var"*)** %22, i64 7
  %24 = load i32 (%"class.ppapi::Var"*)*, i32 (%"class.ppapi::Var"*)** %23, align 8
  %25 = tail call i32 %24(%"class.ppapi::Var"* %0) #10
  %26 = sext i32 %20 to i64
  %27 = zext i32 %25 to i64
  br label %28

28:                                               ; preds = %13, %11, %16, %19
  %29 = phi i64 [ %27, %19 ], [ 1, %16 ], [ 1, %11 ], [ 1, %13 ]
  %30 = phi i64 [ %26, %19 ], [ -6148914694099828736, %16 ], [ -6148914694099828736, %11 ], [ -6148914694099828736, %13 ]
  %31 = insertvalue { i64, i64 } undef, i64 %29, 0
  %32 = insertvalue { i64, i64 } %31, i64 %30, 1
  ret { i64, i64 } %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5ppapi3Var16GetOrCreateVarIDEv(%"class.ppapi::Var"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #10
  %3 = bitcast %"class.ppapi::PpapiGlobals"* %2 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %4 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %4, i64 3
  %6 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %5, align 8
  %7 = tail call %"class.ppapi::VarTracker"* %6(%"class.ppapi::PpapiGlobals"* %2) #10
  %8 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZN5ppapi10VarTracker9AddRefVarEi(%"class.ppapi::VarTracker"* %7, i32 %9) #10
  br i1 %12, label %13, label %20

13:                                               ; preds = %11
  %14 = load i32, i32* %8, align 4
  br label %18

15:                                               ; preds = %1
  %16 = tail call i32 @_ZN5ppapi10VarTracker6AddVarEPNS_3VarE(%"class.ppapi::VarTracker"* %7, %"class.ppapi::Var"* %0) #10
  store i32 %16, i32* %8, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %13, %15
  %19 = phi i32 [ %14, %13 ], [ %16, %15 ]
  br label %20

20:                                               ; preds = %15, %11, %18
  %21 = phi i32 [ %19, %18 ], [ 0, %11 ], [ 0, %15 ]
  ret i32 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5ppapi3Var16GetExistingVarIDEv(%"class.ppapi::Var"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5ppapi3VarC2Ev(%"class.ppapi::Var"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5ppapi3VarE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5ppapi3VarD2Ev(%"class.ppapi::Var"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5ppapi3VarD0Ev(%"class.ppapi::Var"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() local_unnamed_addr #1

declare zeroext i1 @_ZN5ppapi10VarTracker9AddRefVarEi(%"class.ppapi::VarTracker"*, i32) local_unnamed_addr #1

declare i32 @_ZN5ppapi10VarTracker6AddVarEPNS_3VarE(%"class.ppapi::VarTracker"*, %"class.ppapi::Var"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5ppapi3Var11AssignVarIDEi(%"class.ppapi::Var"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %0, i64 0, i32 2
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi9StringVarC2Ev(%"class.ppapi::StringVar"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %4, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5ppapi9StringVarE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi9StringVarC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.ppapi::StringVar"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %5, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5ppapi9StringVarE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #10
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %6, i8* %16, i64 %18) #10
  br label %19

19:                                               ; preds = %11, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi9StringVarC2EPKcj(%"class.ppapi::StringVar"* nocapture, i8* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %6, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5ppapi9StringVarE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 1
  %8 = zext i32 %2 to i64
  %9 = icmp ult i32 %2, 23
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = add nuw nsw i64 %8, 16
  %12 = and i64 %11, 8589934576
  %13 = tail call i8* @_Znwm(i64 %12) #11
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = or i64 %12, -9223372036854775808
  %16 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %17, align 8
  br label %24

18:                                               ; preds = %3
  %19 = trunc i32 %2 to i8
  %20 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  store i8 %19, i8* %21, align 1
  %22 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %23 = icmp eq i32 %2, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %18, %10
  %25 = phi i8* [ %13, %10 ], [ %22, %18 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %1, i64 %8, i1 false) #10
  br label %26

26:                                               ; preds = %18, %24
  %27 = phi i8* [ %22, %18 ], [ %25, %24 ]
  %28 = getelementptr inbounds i8, i8* %27, i64 %8
  store i8 0, i8* %28, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi9StringVarD2Ev(%"class.ppapi::StringVar"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5ppapi9StringVarE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi9StringVarD0Ev(%"class.ppapi::StringVar"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5ppapi9StringVarE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.ppapi::StringVar"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.ppapi::StringVar"* @_ZN5ppapi9StringVar11AsStringVarEv(%"class.ppapi::StringVar"* readnone returned) unnamed_addr #3 align 2 {
  ret %"class.ppapi::StringVar"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5ppapi9StringVar7GetTypeEv(%"class.ppapi::StringVar"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 5
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5ppapi9StringVar13StringToPPVarERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %11 = zext i8 %4 to i64
  %12 = select i1 %5, i8* %7, i8* %10
  %13 = select i1 %5, i64 %9, i64 %11
  %14 = trunc i64 %13 to i32
  %15 = tail call { i64, i64 } @_ZN5ppapi9StringVar13StringToPPVarEPKcj(i8* %12, i32 %14)
  ret { i64, i64 } %15
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5ppapi9StringVar13StringToPPVarEPKcj(i8* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 40) #11
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = bitcast i8* %4 to i32*
  store i32 0, i32* %5, align 4
  %6 = bitcast i8* %3 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %3, i64 12
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5ppapi9StringVarE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 16
  %10 = zext i32 %1 to i64
  %11 = icmp ult i32 %1, 23
  br i1 %11, label %22, label %12

12:                                               ; preds = %2
  %13 = add nuw nsw i64 %10, 16
  %14 = and i64 %13, 8589934576
  %15 = tail call i8* @_Znwm(i64 %14) #11
  %16 = bitcast i8* %9 to i8**
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds i8, i8* %3, i64 32
  %19 = bitcast i8* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %3, i64 24
  %21 = bitcast i8* %20 to i64*
  store i64 %10, i64* %21, align 8
  br label %26

22:                                               ; preds = %2
  %23 = trunc i32 %1 to i8
  %24 = getelementptr inbounds i8, i8* %3, i64 39
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %1, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %22, %12
  %27 = phi i8* [ %15, %12 ], [ %9, %22 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %0, i64 %10, i1 false) #10
  br label %28

28:                                               ; preds = %26, %22
  %29 = phi i8* [ %9, %22 ], [ %27, %26 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 %10
  store i8 0, i8* %30, align 1
  %31 = bitcast i8* %4 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %31) #10
  %32 = getelementptr inbounds i8, i8* %3, i64 39
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = bitcast i8* %9 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = select i1 %34, i8* %36, i8* %9
  %38 = getelementptr inbounds i8, i8* %3, i64 24
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %33 to i64
  %42 = select i1 %34, i64 %40, i64 %41
  %43 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %37, i64 %42) #10
  br i1 %43, label %44, label %71

44:                                               ; preds = %28
  %45 = bitcast i8* %3 to %"class.ppapi::Var"*
  %46 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #10
  %47 = bitcast %"class.ppapi::PpapiGlobals"* %46 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %48 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %47, align 8
  %49 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %48, i64 3
  %50 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %49, align 8
  %51 = tail call %"class.ppapi::VarTracker"* %50(%"class.ppapi::PpapiGlobals"* %46) #10
  %52 = load i32, i32* %8, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %44
  %55 = tail call zeroext i1 @_ZN5ppapi10VarTracker9AddRefVarEi(%"class.ppapi::VarTracker"* %51, i32 %52) #10
  br i1 %55, label %59, label %71

56:                                               ; preds = %44
  %57 = tail call i32 @_ZN5ppapi10VarTracker6AddVarEPNS_3VarE(%"class.ppapi::VarTracker"* %51, %"class.ppapi::Var"* nonnull %45) #10
  store i32 %57, i32* %8, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %71, label %62

59:                                               ; preds = %54
  %60 = load i32, i32* %8, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %71, label %62

62:                                               ; preds = %59, %56
  %63 = phi i32 [ %60, %59 ], [ %57, %56 ]
  %64 = bitcast i8* %3 to i32 (%"class.ppapi::Var"*)***
  %65 = load i32 (%"class.ppapi::Var"*)**, i32 (%"class.ppapi::Var"*)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.ppapi::Var"*)*, i32 (%"class.ppapi::Var"*)** %65, i64 7
  %67 = load i32 (%"class.ppapi::Var"*)*, i32 (%"class.ppapi::Var"*)** %66, align 8
  %68 = tail call i32 %67(%"class.ppapi::Var"* nonnull %45) #10
  %69 = sext i32 %63 to i64
  %70 = zext i32 %68 to i64
  br label %71

71:                                               ; preds = %62, %59, %56, %54, %28
  %72 = phi i64 [ 1, %28 ], [ %70, %62 ], [ 1, %59 ], [ 1, %54 ], [ 1, %56 ]
  %73 = phi i64 [ -6148914694099828736, %28 ], [ %69, %62 ], [ -6148914694099828736, %59 ], [ -6148914694099828736, %54 ], [ -6148914694099828736, %56 ]
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #10
  %74 = load i32, i32* %5, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %82

76:                                               ; preds = %71
  %77 = bitcast i8* %3 to %"class.ppapi::Var"*
  %78 = bitcast i8* %3 to void (%"class.ppapi::Var"*)***
  %79 = load void (%"class.ppapi::Var"*)**, void (%"class.ppapi::Var"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %79, i64 9
  %81 = load void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %80, align 8
  tail call void %81(%"class.ppapi::Var"* nonnull %77) #10
  br label %82

82:                                               ; preds = %71, %76
  %83 = insertvalue { i64, i64 } undef, i64 %72, 0
  %84 = insertvalue { i64, i64 } %83, i64 %73, 1
  ret { i64, i64 } %84
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare %"class.ppapi::Var"* @_ZNK5ppapi10VarTracker6GetVarERK6PP_Var(%"class.ppapi::VarTracker"*, %struct.PP_Var* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5ppapi9StringVar32SwapValidatedUTF8StringIntoPPVarEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #11
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  store i32 0, i32* %4, align 4
  %5 = bitcast i8* %2 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %2, i64 12
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5ppapi9StringVarE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #10
  %9 = bitcast i8* %3 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %9) #10
  %10 = bitcast i8* %8 to <2 x i64>*
  %11 = load <2 x i64>, <2 x i64>* %10, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 32
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %15, i64 24, i1 false) #10
  %16 = bitcast %"class.std::__1::basic_string"* %0 to <2 x i64>*
  store <2 x i64> %11, <2 x i64>* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %14, i64* %17, align 8
  %18 = bitcast i8* %2 to %"class.ppapi::Var"*
  %19 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #10
  %20 = bitcast %"class.ppapi::PpapiGlobals"* %19 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %21 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %21, i64 3
  %23 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %22, align 8
  %24 = tail call %"class.ppapi::VarTracker"* %23(%"class.ppapi::PpapiGlobals"* %19) #10
  %25 = load i32, i32* %7, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %1
  %28 = tail call zeroext i1 @_ZN5ppapi10VarTracker9AddRefVarEi(%"class.ppapi::VarTracker"* %24, i32 %25) #10
  br i1 %28, label %32, label %44

29:                                               ; preds = %1
  %30 = tail call i32 @_ZN5ppapi10VarTracker6AddVarEPNS_3VarE(%"class.ppapi::VarTracker"* %24, %"class.ppapi::Var"* nonnull %18) #10
  store i32 %30, i32* %7, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %44, label %35

32:                                               ; preds = %27
  %33 = load i32, i32* %7, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %32, %29
  %36 = phi i32 [ %33, %32 ], [ %30, %29 ]
  %37 = bitcast i8* %2 to i32 (%"class.ppapi::Var"*)***
  %38 = load i32 (%"class.ppapi::Var"*)**, i32 (%"class.ppapi::Var"*)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.ppapi::Var"*)*, i32 (%"class.ppapi::Var"*)** %38, i64 7
  %40 = load i32 (%"class.ppapi::Var"*)*, i32 (%"class.ppapi::Var"*)** %39, align 8
  %41 = tail call i32 %40(%"class.ppapi::Var"* nonnull %18) #10
  %42 = sext i32 %36 to i64
  %43 = zext i32 %41 to i64
  br label %44

44:                                               ; preds = %35, %32, %29, %27
  %45 = phi i64 [ %43, %35 ], [ 1, %32 ], [ 1, %27 ], [ 1, %29 ]
  %46 = phi i64 [ %42, %35 ], [ -6148914694099828736, %32 ], [ -6148914694099828736, %27 ], [ -6148914694099828736, %29 ]
  %47 = insertvalue { i64, i64 } undef, i64 %45, 0
  %48 = insertvalue { i64, i64 } %47, i64 %46, 1
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %9) #10
  %49 = load i32, i32* %4, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %44
  %52 = bitcast i8* %2 to void (%"class.ppapi::Var"*)***
  %53 = load void (%"class.ppapi::Var"*)**, void (%"class.ppapi::Var"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %53, i64 9
  %55 = load void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %54, align 8
  tail call void %55(%"class.ppapi::Var"* nonnull %18) #10
  br label %56

56:                                               ; preds = %44, %51
  ret { i64, i64 } %48
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5ppapi14ArrayBufferVarC2Ev(%"class.ppapi::ArrayBufferVar"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::ArrayBufferVar", %"class.ppapi::ArrayBufferVar"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.ppapi::ArrayBufferVar", %"class.ppapi::ArrayBufferVar"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.ppapi::ArrayBufferVar", %"class.ppapi::ArrayBufferVar"* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %4, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5ppapi14ArrayBufferVarE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5ppapi14ArrayBufferVarD0Ev(%"class.ppapi::ArrayBufferVar"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.ppapi::ArrayBufferVar"* @_ZN5ppapi14ArrayBufferVar16AsArrayBufferVarEv(%"class.ppapi::ArrayBufferVar"* readnone returned) unnamed_addr #3 align 2 {
  ret %"class.ppapi::ArrayBufferVar"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5ppapi14ArrayBufferVar7GetTypeEv(%"class.ppapi::ArrayBufferVar"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ppapi::ArrayBufferVar"* @_ZN5ppapi14ArrayBufferVar9FromPPVarE6PP_Var(i64, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.PP_Var, align 8
  %4 = bitcast %struct.PP_Var* %3 to i64*
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %3, i64 0, i32 2
  %6 = bitcast %union.PP_VarValue* %5 to i64*
  store i64 %1, i64* %6, align 8
  %7 = trunc i64 %0 to i32
  %8 = icmp eq i32 %7, 9
  br i1 %8, label %9, label %37

9:                                                ; preds = %2
  %10 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #10
  %11 = bitcast %"class.ppapi::PpapiGlobals"* %10 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %12 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %12, i64 3
  %14 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %13, align 8
  %15 = tail call %"class.ppapi::VarTracker"* %14(%"class.ppapi::PpapiGlobals"* %10) #10
  %16 = call %"class.ppapi::Var"* @_ZNK5ppapi10VarTracker6GetVarERK6PP_Var(%"class.ppapi::VarTracker"* %15, %struct.PP_Var* nonnull dereferenceable(16) %3) #10
  %17 = icmp eq %"class.ppapi::Var"* %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %16, i64 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %19) #10
  %20 = bitcast %"class.ppapi::Var"* %16 to %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::Var"*)***
  %21 = load %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::Var"*)**, %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::Var"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::Var"*)*, %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::Var"*)** %21, i64 1
  %23 = load %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::Var"*)*, %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::Var"*)** %22, align 8
  %24 = call %"class.ppapi::ArrayBufferVar"* %23(%"class.ppapi::Var"* nonnull %16) #10
  %25 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %16, i64 0, i32 1
  %26 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #10
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 -2
  %32 = bitcast %"class.base::RefCounted"* %31 to %"class.ppapi::Var"*
  %33 = bitcast %"class.base::RefCounted"* %31 to void (%"class.ppapi::Var"*)***
  %34 = load void (%"class.ppapi::Var"*)**, void (%"class.ppapi::Var"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %34, i64 9
  %36 = load void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %35, align 8
  call void %36(%"class.ppapi::Var"* nonnull %32) #10
  br label %37

37:                                               ; preds = %9, %30, %18, %2
  %38 = phi %"class.ppapi::ArrayBufferVar"* [ null, %2 ], [ %24, %18 ], [ %24, %30 ], [ null, %9 ]
  ret %"class.ppapi::ArrayBufferVar"* %38
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
